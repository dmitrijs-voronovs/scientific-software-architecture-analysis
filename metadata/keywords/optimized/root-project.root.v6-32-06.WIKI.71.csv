quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"1899 file_name[511] = 0;; 11900 (void)mg_snprintf(conn, &truncated, path, sizeof(path), ""%s"", ssi);; 11901 ; 11902 if (!truncated) {; 11903 if ((p = strrchr(path, '/')) != NULL) {; 11904 p[1] = '\0';; 11905 }; 11906 len = strlen(path);; 11907 (void)mg_snprintf(conn,; 11908 &truncated,; 11909 path + len,; 11910 sizeof(path) - len,; 11911 ""%s"",; 11912 file_name);; 11913 }; 11914 ; 11915 } else {; 11916 mg_cry_internal(conn, ""Bad SSI #include: [%s]"", tag);; 11917 return;; 11918 }; 11919 ; 11920 if (truncated) {; 11921 mg_cry_internal(conn, ""SSI #include path length overflow: [%s]"", tag);; 11922 return;; 11923 }; 11924 ; 11925 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, &file)) {; 11926 mg_cry_internal(conn,; 11927 ""Cannot open SSI #include: [%s]: fopen(%s): %s"",; 11928 tag,; 11929 path,; 11930 strerror(ERRNO));; 11931 } else {; 11932 fclose_on_exec(&file.access, conn);; 11933 if (match_prefix_strlen(conn->dom_ctx->config[SSI_EXTENSIONS], path); 11934 > 0) {; 11935 send_ssi_file(conn, path, &file, include_level + 1);; 11936 } else {; 11937 send_file_data(conn, &file, 0, INT64_MAX);; 11938 }; 11939 (void)mg_fclose(&file.access); /* Ignore errors for readonly files */; 11940 }; 11941}; 11942 ; 11943 ; 11944#if !defined(NO_POPEN); 11945static void; 11946do_ssi_exec(struct mg_connection *conn, char *tag); 11947{; 11948 char cmd[1024] = """";; 11949 struct mg_file file = STRUCT_FILE_INITIALIZER;; 11950 ; 11951 if (sscanf(tag, "" \""%1023[^\""]\"""", cmd) != 1) {; 11952 mg_cry_internal(conn, ""Bad SSI #exec: [%s]"", tag);; 11953 } else {; 11954 cmd[1023] = 0;; 11955 if ((file.access.fp = popen(cmd, ""r"")) == NULL) {; 11956 mg_cry_internal(conn,; 11957 ""Cannot SSI #exec: [%s]: %s"",; 11958 cmd,; 11959 strerror(ERRNO));; 11960 } else {; 11961 send_file_data(conn, &file, 0, INT64_MAX);; 11962 pclose(file.access.fp);; 11963 }; 11964 }; 11965}; 11966#endif /* !NO_POPEN */; 11967 ; 11968 ; 11969static int; 11970mg_fgetc(struct mg_file *filep); 11971{; 11972 if (filep == NULL) {; 11973 return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:345627,config,config,345627,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"19 ; 120 Already predefined names can be given. For example, if the formula; 121 ; 122 `TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1)))`; 123 ; 124 one can assign a name to the formula. By default the name of the object = title = formula itself.; 125 ; 126 `TFormula new(""new"",""x*old"")`; 127 ; 128 is equivalent to:; 129 ; 130 `TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))"")`; 131 ; 132 The class supports unlimited number of variables and parameters.; 133 By default the names which can be used for the variables are `x,y,z,t` or; 134 `x[0],x[1],x[2],x[3],....x[N]` for N-dimensional formulas.; 135 ; 136 This class is not anymore the base class for the function classes `TF1`, but it has now; 137 a data member of TF1 which can be accessed via `TF1::GetFormula`.; 138 ; 139 TFormula supports gradient and hessian calculations through clad.; 140 To calculate the gradient one needs to first declare a `CladStorage` of the; 141 same size as the number of parameters and then pass the variables and the; 142 created `CladStorage`:; 143 ; 144 ```; 145 TFormula f(""f"", ""x*[0] - y*[1]"");; 146 Double_t p[] = {40, 30};; 147 Double_t x[] = {1, 2};; 148 f.SetParameters(p);; 149 TFormula::CladStorage grad(2);; 150 f.GradientPar(x, grad);; 151 ```; 152 ; 153 The process is similar for hessians, except that the size of the created; 154 CladStorage should be the square of the number of parameters because; 155 `HessianPar` returns a flattened matrix:; 156 ; 157 ```; 158 TFormula::CladStorage hess(4);; 159 f.HessianPar(x, hess);; 160 ```; 161 ; 162 \anchor FormulaFuncs; 163 ### List of predefined functions; 164 ; 165 The list of available predefined functions which can be used as shortcuts is the following:; 166 1. One Dimensional functions:; 167 - `gaus` is a substitute for `[Constant]*exp(-0.5*((x-[Mean])/[Sigma])*((x-[Mean])/[Sigma]))`; 168 - `landau` is a substitute for `[Constant]*TMath::Landau (x,[MPV],[Sigma],false)`; 169 - `expo` is a substitute for `exp([Constant]+[Slope]*x)`; 170 -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:5141,variab,variables,5141,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"19 ; 220 Double_t old_xmin = 0.0, old_xmax = 0.0;; 221 k = 0; // index of term in funcstringall; 222 for (int i=0; i<noffunctions; i++); 223 {; 224 // first, handle coefficient; 225 if (isacoeff[k]) {; 226 coeffs[i] = funcstringall[k].Atof();; 227 k++;; 228 } else {; 229 coeffs[i] = 1.;; 230 }; 231 ; 232 // then, handle function; 233 functions[i] = (TF1 *)(gROOT->GetListOfFunctions()->FindObject(funcstringall[k]));; 234 if (!functions[i]); 235 Error(""TF1NormSum"", ""Function %s does not exist"", funcstringall[k].Data());; 236 // (set range for first function, which determines range of whole TF1NormSum); 237 else if (i == 0) {; 238 functions[i]->GetRange(old_xmin, old_xmax);; 239 functions[i]->SetRange(xmin, xmax);; 240 }; 241 ; 242 k++;; 243 }; 244 InitializeDataMembers(functions, coeffs,1.);; 245 ; 246 // Set range of first function back to original state; 247 if (noffunctions > 0 && functions[0]); 248 functions[0]->SetRange(old_xmin, old_xmax);; 249}; 250 ; 251////////////////////////////////////////////////////////////////////////////////; 252/// Copy constructor (necessary to hold unique_ptr as member variable); 253 ; 254TF1NormSum::TF1NormSum(const TF1NormSum &nsum); 255{; 256 nsum.TF1NormSum::Copy(*this);; 257}; 258 ; 259////////////////////////////////////////////////////////////////////////////////; 260/// Operator =; 261 ; 262TF1NormSum &TF1NormSum::operator=(const TF1NormSum &rhs); 263{; 264 if (this != &rhs); 265 rhs.TF1NormSum::Copy(*this);; 266 return *this;; 267}; 268 ; 269////////////////////////////////////////////////////////////////////////////////; 270/// Overload the parenthesis to add the functions; 271 ; 272double TF1NormSum::operator()(const Double_t *x, const Double_t *p); 273{; 274 // first refresh the parameters; 275 if (p != nullptr); 276 SetParameters(p);; 277 ; 278 Double_t sum = 0.;; 279 for (unsigned int n=0; n<fNOfFunctions; n++); 280 sum += fCoeffs[n]*(fFunctions[n] -> EvalPar(x,nullptr));; 281 ; 282 // normalize by a scale parameter (ty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1NormSum_8cxx_source.html:9325,variab,variable,9325,doc/master/TF1NormSum_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1NormSum_8cxx_source.html,1,['variab'],['variable']
Modifiability,"19 }; 5120 DestructorImpl(p, dtorOnly);; 5121}; 5122 ; 5123////////////////////////////////////////////////////////////////////////////////; 5124/// Destroy an array of emulated objects, with optional delete.; 5125 ; 5126void TStreamerInfo::DeleteArray(void* ary, Bool_t dtorOnly); 5127{; 5128 // Do nothing if passed a null pointer.; 5129 if (ary == 0) return;; 5130 ; 5131 //???FIX ME: What about varying length arrays?; 5132 ; 5133 Long_t* r = (Long_t*) ary;; 5134 Long_t arrayLen = r[-1];; 5135 Long_t size = r[-2];; 5136 char* memBegin = (char*) &r[-2];; 5137 ; 5138 char* p = ((char*) ary) + ((arrayLen - 1) * size);; 5139 for (Long_t cnt = 0; cnt < arrayLen; ++cnt, p -= size) {; 5140 // Destroy each element, but do not delete it.; 5141 Destructor(p, kTRUE);; 5142 } // for arrayItemSize; 5143 ; 5144 if (!dtorOnly) {; 5145 delete[] memBegin;; 5146 }; 5147}; 5148 ; 5149////////////////////////////////////////////////////////////////////////////////; 5150/// print value of element i in object at pointer; 5151/// The function may be called in two ways:; 5152/// -method1 len < 0; 5153/// i is assumed to be the TStreamerElement number i in StreamerInfo; 5154/// -method2 len >= 0; 5155/// i is the type; 5156/// address of variable is directly pointer.; 5157/// len is the number of elements to be printed starting at pointer.; 5158 ; 5159void TStreamerInfo::PrintValue(const char *name, char *pointer, Int_t i, Int_t len, Int_t lenmax) const; 5160{; 5161 char *ladd;; 5162 Int_t atype,aleng;; 5163 printf("" %-15s = "",name);; 5164 ; 5165 TStreamerElement * aElement = 0;; 5166 Int_t *count = 0;; 5167 if (len >= 0) {; 5168 ladd = pointer;; 5169 atype = i;; 5170 aleng = len;; 5171 } else {; 5172 if (i < 0) {; 5173 if (pointer==0) {; 5174 printf(""NULL\n"");; 5175 } else {; 5176 const static TClassRef stringClass(""string"");; 5177 if (fClass == stringClass) {; 5178 std::string *st = (std::string*)(pointer);; 5179 printf(""%s\n"",st->c_str());; 5180 } else if (fClass == TString::Class()) {; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:205049,variab,variable,205049,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['variab'],['variable']
Modifiability,"19#include ""Math/IntegratorOptions.h""; 20 ; 21#include ""Math/IFunction.h""; 22 ; 23#include ""Math/VirtualIntegrator.h""; 24 ; 25#include <memory>; 26#include <vector>; 27#include <string>; 28 ; 29 ; 30/**; 31@defgroup NumAlgo Numerical Algorithms; 32 ; 33Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries.; 34 ; 35@ingroup MathCore; 36@ingroup MathMore; 37 ; 38*/; 39 ; 40 ; 41/**; 42 ; 43@defgroup Integration Numerical Integration; 44 ; 45Classes for numerical integration of functions.; 46These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods; 47and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; 48The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; 49ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; 50The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; 51ROOT::Math::IntegratorMultiDimOptions classes.; 52 ; 53@ingroup NumAlgo; 54 ; 55*/; 56 ; 57 ; 58 ; 59namespace ROOT {; 60namespace Math {; 61 ; 62 ; 63 ; 64 ; 65//____________________________________________________________________________________________; 66/**; 67 ; 68User Class for performing numerical integration of a function in one dimension.; 69It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the; 70algorithms used in the QUADPACK, a numerical integration package written in Fortran.; 71 ; 72Various types of adaptive and non-adaptive integration are supported. These include; 73integration over infinite and semi-infinite ranges and singular integrals.; 74 ; 75The integration type is selected using the Integration::type enumeration; 76in the class constructor.; 77The default type is adaptive integr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Integrator_8h_source.html:1670,config,configured,1670,doc/master/Integrator_8h_source.html,https://root.cern,https://root.cern/doc/master/Integrator_8h_source.html,1,['config'],['configured']
Modifiability,"191 ; 1192 template <typename OutputContainer>; 1193 void fetchOutput (const LayerData& lastLayerData, OutputContainer& outputContainer) const;; 1194 ; 1195 template <typename OutputContainer>; 1196 void fetchOutput (const std::vector<LayerData>& layerPatternData, OutputContainer& outputContainer) const;; 1197 ; 1198 ; 1199 template <typename ItWeight>; 1200 std::tuple</*sumError*/double,/*sumWeights*/double> computeError (const Settings& settings,; 1201 std::vector<LayerData>& lastLayerData,; 1202 Batch& batch,; 1203 ItWeight itWeightBegin,; 1204 ItWeight itWeightEnd) const;; 1205 ; 1206 template <typename Settings>; 1207 void backPropagate (std::vector<std::vector<LayerData>>& layerPatternData,; 1208 const Settings& settings,; 1209 size_t trainFromLayer,; 1210 size_t totalNumWeights) const;; 1211 ; 1212 ; 1213 ; 1214 /*! \brief main NN computation function; 1215 *; 1216 *; 1217 */; 1218 template <typename LayerContainer, typename PassThrough, typename ItWeight, typename ItGradient, typename OutContainer>; 1219 double forward_backward (LayerContainer& layers, PassThrough& settingsAndBatch,; 1220 ItWeight itWeightBegin, ItWeight itWeightEnd,; 1221 ItGradient itGradientBegin, ItGradient itGradientEnd,; 1222 size_t trainFromLayer,; 1223 OutContainer& outputContainer, bool fetchOutput) const;; 1224 ; 1225 ; 1226 ; 1227 double E ();; 1228 void dE ();; 1229 ; 1230 ; 1231 /*! \brief computes the error of the DNN; 1232 *; 1233 *; 1234 */; 1235 template <typename Container, typename ItWeight>; 1236 double errorFunction (LayerData& layerData,; 1237 Container truth,; 1238 ItWeight itWeight,; 1239 ItWeight itWeightEnd,; 1240 double patternWeight,; 1241 double factorWeightDecay,; 1242 EnumRegularization eRegularization) const;; 1243 ; 1244 ; 1245 const std::vector<Layer>& layers () const { return m_layers; } ///< returns the layers (structure); 1246 std::vector<Layer>& layers () { return m_layers; } ///< returns the layers (structure); 1247 ; 1248 void removeLayer () { m_layers.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:44926,layers,layers,44926,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,5,['layers'],['layers']
Modifiability,"191 if (defaultMinim != minim_newDefault ) fMinimizerOpts.SetMinimizerType(minim_newDefault.c_str());; 192 ; 193 if (min == nullptr) {; 194 // if creation of minimizer failed force the use by default of Minuit; 195 std::string minim2 = ""Minuit"";; 196 if (minimType == ""Minuit"") minim2 = ""Minuit2"";; 197 if (minimType != minim2 ) {; 198 std::string msg = ""Could not create the "" + minimType + "" minimizer. Try using the minimizer "" + minim2;; 199 MATH_WARN_MSG(""FitConfig::CreateMinimizer"",msg.c_str());; 200 min = ROOT::Math::Factory::CreateMinimizer(minim2,""Migrad"");; 201 if (min == nullptr) {; 202 MATH_ERROR_MSG(""FitConfig::CreateMinimizer"",""Could not create the Minuit2 minimizer"");; 203 return nullptr;; 204 }; 205 SetMinimizer( minim2.c_str(),""Migrad"");; 206 }; 207 else {; 208 std::string msg = ""Could not create the Minimizer "" + minimType;; 209 MATH_ERROR_MSG(""FitConfig::CreateMinimizer"",msg.c_str());; 210 return nullptr;; 211 }; 212 }; 213 ; 214 // set default max of function calls according to the number of parameters; 215 // formula from Minuit2 (adapted); 216 if (fMinimizerOpts.MaxFunctionCalls() == 0) {; 217 unsigned int npar = fSettings.size();; 218 int maxfcn = 1000 + 100*npar + 5*npar*npar;; 219 fMinimizerOpts.SetMaxFunctionCalls(maxfcn);; 220 }; 221 ; 222 ; 223 // set default minimizer control parameters; 224 min->SetPrintLevel( fMinimizerOpts.PrintLevel() );; 225 min->SetMaxFunctionCalls( fMinimizerOpts.MaxFunctionCalls() );; 226 min->SetMaxIterations( fMinimizerOpts.MaxIterations() );; 227 min->SetTolerance( fMinimizerOpts.Tolerance() );; 228 min->SetPrecision( fMinimizerOpts.Precision() );; 229 min->SetValidError( fParabErrors );; 230 min->SetStrategy( fMinimizerOpts.Strategy() );; 231 min->SetErrorDef( fMinimizerOpts.ErrorDef() );; 232 // set extra options if existing; 233 if (fMinimizerOpts.ExtraOptions()); 234 min->SetExtraOptions(*fMinimizerOpts.ExtraOptions());; 235 ; 236 return min;; 237}; 238 ; 239std::string FitConfig::MinimizerName() const; 240{; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8cxx_source.html:7415,adapt,adapted,7415,doc/master/FitConfig_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8cxx_source.html,1,['adapt'],['adapted']
Modifiability,"19712 exit_callback = init->callbacks->exit_context;; 19713 /* The exit callback is activated once the context is successfully; 19714 * created. It should not be called, if an incomplete context object; 19715 * is deleted during a failed initialization. */; 19716 ctx->callbacks.exit_context = 0;; 19717 }; 19718 ctx->user_data = ((init != NULL) ? (init->user_data) : (NULL));; 19719 ctx->dd.handlers = NULL;; 19720 ctx->dd.next = NULL;; 19721 ; 19722#if defined(USE_LUA); 19723 lua_ctx_init(ctx);; 19724#endif; 19725 ; 19726 /* Store options */; 19727 while (options && (name = *options++) != NULL) {; 19728 if ((idx = get_option_index(name)) == -1) {; 19729 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 19730 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19731 mg_snprintf(NULL,; 19732 NULL, /* No truncation check for error buffers */; 19733 error->text,; 19734 error->text_buffer_size,; 19735 ""Invalid configuration option: %s"",; 19736 name);; 19737 }; 19738 free_context(ctx);; 19739 pthread_setspecific(sTlsKey, NULL);; 19740 return NULL;; 19741 } else if ((value = *options++) == NULL) {; 19742 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 19743 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19744 mg_snprintf(NULL,; 19745 NULL, /* No truncation check for error buffers */; 19746 error->text,; 19747 error->text_buffer_size,; 19748 ""Invalid configuration option value: %s"",; 19749 name);; 19750 }; 19751 free_context(ctx);; 19752 pthread_setspecific(sTlsKey, NULL);; 19753 return NULL;; 19754 }; 19755 if (ctx->dd.config[idx] != NULL) {; 19756 /* A duplicate configuration option is not an error - the last; 19757 * option value will be used. */; 19758 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 19759 mg_free(ctx->dd.config[idx]);; 19760 }; 19761 ctx->dd.config[idx] = mg_strdup_ctx(value, ctx);; 19762 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 19763 }; 19764 ; 19765 /* Set default value if needed */; 19766 for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:588885,config,configuration,588885,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['config'],['configuration']
Modifiability,"19713 exit_callback = init->callbacks->exit_context;; 19714 /* The exit callback is activated once the context is successfully; 19715 * created. It should not be called, if an incomplete context object; 19716 * is deleted during a failed initialization. */; 19717 ctx->callbacks.exit_context = 0;; 19718 }; 19719 ctx->user_data = ((init != NULL) ? (init->user_data) : (NULL));; 19720 ctx->dd.handlers = NULL;; 19721 ctx->dd.next = NULL;; 19722 ; 19723#if defined(USE_LUA); 19724 lua_ctx_init(ctx);; 19725#endif; 19726 ; 19727 /* Store options */; 19728 while (options && (name = *options++) != NULL) {; 19729 if ((idx = get_option_index(name)) == -1) {; 19730 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 19731 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19732 mg_snprintf(NULL,; 19733 NULL, /* No truncation check for error buffers */; 19734 error->text,; 19735 error->text_buffer_size,; 19736 ""Invalid configuration option: %s"",; 19737 name);; 19738 }; 19739 free_context(ctx);; 19740 pthread_setspecific(sTlsKey, NULL);; 19741 return NULL;; 19742 } else if ((value = *options++) == NULL) {; 19743 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 19744 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19745 mg_snprintf(NULL,; 19746 NULL, /* No truncation check for error buffers */; 19747 error->text,; 19748 error->text_buffer_size,; 19749 ""Invalid configuration option value: %s"",; 19750 name);; 19751 }; 19752 free_context(ctx);; 19753 pthread_setspecific(sTlsKey, NULL);; 19754 return NULL;; 19755 }; 19756 if (ctx->dd.config[idx] != NULL) {; 19757 /* A duplicate configuration option is not an error - the last; 19758 * option value will be used. */; 19759 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 19760 mg_free(ctx->dd.config[idx]);; 19761 }; 19762 ctx->dd.config[idx] = mg_strdup_ctx(value, ctx);; 19763 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 19764 }; 19765 ; 19766 /* Set default value if needed */; 19767 for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:588918,config,configuration,588918,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],['configuration']
Modifiability,"1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1D(); Constructor. TH1D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup); Create a 1-Dim histogram with fix bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const TVectorD& v); Create a histogram from a TVectorD; by default the histogram name is ""TVectorD"" and title = """". ~TH1D(); Destructor. TH1D(const TH1D& h1d); Constructor. void Copy(TObject& hnew) const; Copy this to newth1. void Reset(Option_t* option = """"); Reset. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH1D& operator=(const TH1D& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const. void UpdateBinContent(Int_t bin, Double_t content). » Author: Rene Brun 26/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1D.html:25915,variab,variable,25915,root/html602/TH1D.html,https://root.cern,https://root.cern/root/html602/TH1D.html,2,['variab'],['variable']
Modifiability,"1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1D(); Constructor. TH1D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup); Create a 1-Dim histogram with fix bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins); Create a 1-Dim histogram with variable bins of type double; (see TH1::TH1 for explanation of parameters). TH1D(const TVectorD& v); Create a histogram from a TVectorD; by default the histogram name is ""TVectorD"" and title = """". ~TH1D(); Destructor. TH1D(const TH1D& h1d); Constructor. void Copy(TObject& hnew) const; Copy this to newth1. void Reset(Option_t* option = """"); Reset. void SetBinsLength(Int_t n = -1); Set total number of bins including under/overflow; Reallocate bin contents array. TH1D& operator=(const TH1D& h1); Operator =. void AddBinContent(Int_t bin). void AddBinContent(Int_t bin, Double_t w). Double_t RetrieveBinContent(Int_t bin) const. void UpdateBinContent(Int_t bin, Double_t content). » Author: Rene Brun 26/12/94 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-07-01 17:55; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1D.html:25876,variab,variable,25876,root/html604/TH1D.html,https://root.cern,https://root.cern/root/html604/TH1D.html,2,['variab'],['variable']
Modifiability,1; : 1001 | 3.31742 4.17699 0.020287 0.00175118 43159.8 2; : 1002 | 3.35839 4.8143 0.0207434 0.00177731 42180.6 3; : 1003 Minimum Test error found - save the configuration ; : 1003 | 3.42381 4.04915 0.0202591 0.00184351 43441.4 0; : 1004 Minimum Test error found - save the configuration ; : 1004 | 3.27488 4.0384 0.0205262 0.00189376 42935.9 0; : 1005 | 3.09776 4.19224 0.0200956 0.00176781 43649.6 1; : 1006 Minimum Test error found - save the configuration ; : 1006 | 3.1757 3.91876 0.0201134 0.00183093 43757.7 0; : 1007 | 3.17471 4.33126 0.0203423 0.00178093 43100.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.37748 4.22044 0.0208054 0.00183497 42170.8 4; : 1020 | 3.48034 4.07947 0.020447 0.00177824 42852.4 5; : 1021 | 3.50059 4.11275 0.020219 0.00176964 43361.9 6; : 1022 | 3.15174 3.86168 0.0203283 0.00176093 43086.3 7; : 1023 | 3.4694 4.52782 0.0204007 0.00179059 42987.4 8; : 1024 Minimum Test error found - save the configuration ; : 1024 | 3.57333 3.68346 0.0207199 0.00186469 42428.5 0; : 1025 | 3.1448 3.86932 0.020257 0.0018083 43363.6 1; : 1026 | 3.14966 3.71614 0.0204412 0.00177219 42851.8 2; : 1027 Minimum Test error found - save the configuration ; : 1027 | 3.06278 3.47888 0.0204485 0.00186251 43043.1 0; : 1028 | 3.22518 4.06346 0.0201016 0.00179042 43689.3 1; : 1029 | 3.47015 5.10048 0.0212551 0.0017691 41055.1 2; : 1030 | 3,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:114189,config,configuration,114189,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97587,config,configuration,97587,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"1; ROOT::Fit::Fitter::~Fittervirtual ~Fitter()Destructor.Definition Fitter.h:117; ROOT::Fit::Fitter::Fitbool Fit(const std::shared_ptr< BinData > &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Fit a binned data set using a least square fit.Definition Fitter.h:165; ROOT::Fit::Fitter::Resultconst FitResult & Result() constget fit resultDefinition Fitter.h:394; ROOT::Fit::Fitter::ApplyWeightCorrectionbool ApplyWeightCorrection(const ROOT::Math::IMultiGenFunction &loglw2, bool minimizeW2L=false)apply correction in the error matrix for the weights for likelihood fits This method can be called on...Definition Fitter.cxx:886; ROOT::Fit::Fitter::BaseGradFuncROOT::Math::IMultiGradFunction BaseGradFuncDefinition Fitter.h:96; ROOT::Fit::Fitter::ExamineFCNvoid ExamineFCN()look at the user provided FCN and get data and model function is they derive from ROOT::Fit FCN class...Definition Fitter.cxx:979; ROOT::Fit::Fitter::Configconst FitConfig & Config() constaccess to the fit configuration (const method)Definition Fitter.h:422; ROOT::Fit::Fitter::SetDatavoid SetData(const std::shared_ptr< Data > &data)Set the input data for the fit using a shared ptr (No Copying)Definition Fitter.h:520; ROOT::Fit::Fitter::DoLeastSquareFitbool DoLeastSquareFit(const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)least square fitDefinition Fitter.cxx:309; ROOT::Fit::Fitter::IModelFunctionROOT::Math::IParamMultiFunction IModelFunctionDefinition Fitter.h:81; ROOT::Fit::Fitter::IModel1DFunctionROOT::Math::IParamFunction IModel1DFunctionDefinition Fitter.h:92; ROOT::Fit::Fitter::SetFCNbool SetFCN(unsigned int npar, Function &fcn, const double *params=nullptr, unsigned int dataSize=0, int fitType=0)Set a generic FCN function as a C++ callable object implementing double () (const double *) Note that...Definition Fitter.h:656; ROOT::Fit::Fitter::LikelihoodFitbool LikelihoodFit(const BinData &data, bool extended=true, const ROOT::EExecu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:35998,config,configuration,35998,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['config'],['configuration']
Modifiability,"1; i--) {; 2564 if(a[i]<a[i+1]) {; 2565 i1=i;; 2566 break;; 2567 }; 2568 }; 2569 // no more upward transitions, end of the story; 2570 if(i1==-1) return kFALSE;; 2571 else {; 2572 // find lower right element higher than the lower; 2573 // element of the upward transition; 2574 for(i=n-1;i>i1;i--) {; 2575 if(a[i] > a[i1]) {; 2576 // swap the two; 2577 itmp=a[i1];; 2578 a[i1]=a[i];; 2579 a[i]=itmp;; 2580 break;; 2581 }; 2582 }; 2583 // order the rest, in fact just invert, as there; 2584 // are only downward transitions from here on; 2585 for(i=0;i<(n-i1-1)/2;i++) {; 2586 itmp=a[i1+i+1];; 2587 a[i1+i+1]=a[n-i-1];; 2588 a[n-i-1]=itmp;; 2589 }; 2590 }; 2591 return kTRUE;; 2592}; 2593 ; 2594////////////////////////////////////////////////////////////////////////////////; 2595/// Computes density function for Student's t- distribution; 2596/// (the probability function (integral of density) is computed in StudentI).; 2597///; 2598/// First parameter stands for x - the actual variable of the; 2599/// density function p(x) and the point at which the density is calculated.; 2600/// Second parameter stands for number of degrees of freedom.; 2601///; 2602/// About Student distribution:; 2603/// Student's t-distribution is used for many significance tests, for example,; 2604/// for the Student's t-tests for the statistical significance of difference; 2605/// between two sample means and for confidence intervals for the difference; 2606/// between two population means.; 2607///; 2608/// Example: suppose we have a random sample of size n drawn from normal; 2609/// distribution with mean Mu and st.deviation Sigma. Then the variable; 2610///; 2611/// t = (sample_mean - Mu)/(sample_deviation / sqrt(n)); 2612///; 2613/// has Student's t-distribution with n-1 degrees of freedom.; 2614///; 2615/// NOTE that this function's second argument is number of degrees of freedom,; 2616/// not the sample size.; 2617///; 2618/// As the number of degrees of freedom grows, t-distribution approaches; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:88894,variab,variable,88894,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['variab'],['variable']
Modifiability,"1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tTGeoTube::fDzhalf length; TStringTNamed::fNameobject identifier; Double_tfNhigh[3]normal to highet cut plane ; Double_tfNlow[3]normal to lower cut plane ; Double_tTGeoBBox::fOrigin[3]box origin; Double_tTGeoTubeSeg::fPhi1first phi limit ; Double_tTGeoTubeSeg::fPhi2second phi limit ; Double_tTGeoTube::fRmaxouter radius; Double_tTGeoTube::fRmininner radius; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoCtub(); default ctor. TGeoCtub(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); constructor. TGeoCtub(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); constructor. TGeoCtub(Double_t* params); ctor with parameters. ~TGeoCtub(); destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); compute minimum bounding box of the ctub. void ComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. Bool_t Contains(Double_t* point) const; check if point is contained in the cut tube; check the lower cut plane. Double_t GetAxisRange(Int_t iaxis, Double_t& xlo, Double_t& xhi) const; Get range of shape for a given axis. Double_t Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCtub.html:13762,Inherit,Inheritance,13762,root/html532/TGeoCtub.html,https://root.cern,https://root.cern/root/html532/TGeoCtub.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"1;  ; Double_t fPhi2;  ; Double_t fRmax;  ; Double_t fRmin;  ; Double_t fTheta1;  ; Double_t fTheta2;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSphere.html:20697,inherit,inherited,20697,doc/master/classTGeoSphere.html,https://root.cern,https://root.cern/doc/master/classTGeoSphere.html,1,['inherit'],['inherited']
Modifiability,"1;  ; int _l2;  ; int _m1;  ; int _m2;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegendre.html:55785,inherit,inherited,55785,doc/master/classRooLegendre.html,https://root.cern,https://root.cern/doc/master/classRooLegendre.html,2,['inherit'],['inherited']
Modifiability,"1;; 6685 fDcovar = TMath::Max(fDcovar,.5);; 6686 }; 6687}; 6688 ; 6689////////////////////////////////////////////////////////////////////////////////; 6690/// Writes current parameter values and step sizes onto file ISYSSA; 6691///; 6692/// in format which can be reread by Minuit for restarting.; 6693/// The covariance matrix is also output if it exists.; 6694 ; 6695void TMinuit::mnsave(); 6696{; 6697 Printf(""mnsave is dummy in TMinuit"");; 6698 ; 6699}; 6700 ; 6701////////////////////////////////////////////////////////////////////////////////; 6702/// Scans the values of FCN as a function of one parameter; 6703///; 6704/// and plots the resulting values as a curve using MNPLOT.; 6705/// It may be called to scan one parameter or all parameters.; 6706/// retains the best function and parameter values found.; 6707 ; 6708void TMinuit::mnscan(); 6709{; 6710 /* Local variables */; 6711 Double_t step, uhigh, xhreq, xlreq, ubest, fnext, unext, xh, xl;; 6712 Int_t ipar, iint, icall, ncall, nbins, nparx;; 6713 Int_t nxypt, nccall, iparwd;; 6714 ; 6715 xlreq = TMath::Min(fWord7[2],fWord7[3]);; 6716 xhreq = TMath::Max(fWord7[2],fWord7[3]);; 6717 ncall = Int_t((fWord7[1] + .01));; 6718 if (ncall <= 1) ncall = 41;; 6719 if (ncall > 98) ncall = 98;; 6720 nccall = ncall;; 6721 if (fAmin == fUndefi) mnamin();; 6722 iparwd = Int_t((fWord7[0] + .1));; 6723 ipar = TMath::Max(iparwd,0);; 6724 fCstatu = ""NO CHANGE"";; 6725 if (iparwd > 0) goto L200;; 6726 ; 6727// equivalent to a loop over parameters requested; 6728L100:; 6729 ++ipar;; 6730 if (ipar > fNu) goto L900;; 6731 iint = fNiofex[ipar-1];; 6732 if (iint <= 0) goto L100;; 6733// set up range for parameter IPAR; 6734L200:; 6735 iint = fNiofex[ipar-1];; 6736 ubest = fU[ipar-1];; 6737 fXpt[0] = ubest;; 6738 fYpt[0] = fAmin;; 6739 fChpt[0] = ' ';; 6740 fXpt[1] = ubest;; 6741 fYpt[1] = fAmin;; 6742 fChpt[1] = 'X';; 6743 nxypt = 2;; 6744 if (fNvarl[ipar-1] > 1) goto L300;; 6745 ; 6746// no limits on parameter; 6747 if (xlreq == xhreq) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:217519,variab,variables,217519,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"1FunctorPointer *functor=nullptr);  General constructor for TF1. Most of the other constructors delegate on it. ;  ; Bool_t ComputeCdfTable (Option_t *opt);  Compute the cumulative function at fNpx points between fXmin and fXmax. ;  ; virtual TH1 * DoCreateHistogram (Double_t xmin, Double_t xmax, Bool_t recreate=kFALSE);  Create histogram with bin content equal to function value computed at the bin center This histogram will be used to paint the function A re-creation is forced and a new histogram is done if recreate=true. ;  ; void DoInitialize (EAddToList addToGlobList);  Common initialization of the TF1. ;  ; virtual Double_t GetMinMaxNDim (Double_t *x, Bool_t findmax, Double_t epsilon=0, Int_t maxiter=0) const;  Find the minimum of a function of whatever dimension. ;  ; virtual void GetRange (Double_t *xmin, Double_t *xmax) const;  Return range of a generic N-D function. ;  ; void IntegrateForNormalization ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< Double_t > fAlpha;  ! Array alpha. for each bin in x the deconvolution r of fIntegral ;  ; std::vector< Double_t > fBeta;  ! Array beta. is approximated by x = alpha +beta*r *gamma*r**2 ;  ; Double_t fChisquare {};  Function fit chisquare. ;  ; std::unique_ptr< TF1AbsComposition > fComposition;  Pointer to composition (NSUM or CONV) ;  ; std::unique_ptr< TFormula > fFormula;  Pointer to TFormula in case when user define formula. ;  ; std::unique_ptr< TF1FunctorPointer > fFunctor;  ! Functor object to wrap any C++ callable object ;  ; std::vector< Double_t > fGamma;  ! Array gamma. ;  ; TH1 * fHistogram {nullptr};  ! Pointer to histogram used for visualisation ;  ; std::vector< Double_t > fIntegral;  ! Integral of function binned on fNpx bins ;  ; Double_t fMaximum {-1111};  Maximum value for plotting. ;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:45499,inherit,inherited,45499,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['inherit'],['inherited']
Modifiability,"1FunctorPointer *functor=nullptr);  General constructor for TF1. Most of the other constructors delegate on it. ;  ; Bool_t ComputeCdfTable (Option_t *opt);  Compute the cumulative function at fNpx points between fXmin and fXmax. ;  ; virtual TH1 * DoCreateHistogram (Double_t xmin, Double_t xmax, Bool_t recreate=kFALSE);  Create histogram with bin content equal to function value computed at the bin center This histogram will be used to paint the function A re-creation is forced and a new histogram is done if recreate=true. ;  ; void DoInitialize (EAddToList addToGlobList);  Common initialization of the TF1. ;  ; virtual Double_t GetMinMaxNDim (Double_t *x, Bool_t findmax, Double_t epsilon=0, Int_t maxiter=0) const;  Find the minimum of a function of whatever dimension. ;  ; virtual void GetRange (Double_t *xmin, Double_t *xmax) const;  Return range of a generic N-D function. ;  ; void IntegrateForNormalization ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TF1; static std::atomic< Bool_t > fgAbsValue;  ; static std::atomic< Bool_t > fgAddToGlobList;  ; static TF1 * fgCurrent = nullptr;  ; static Bool_t fgRejectPoint = kFALSE;  . #include <TF12.h>. Inheritance diagram for TF12:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TF12() [1/3]. TF12::TF12 ; (; ). TF12 default constructor. ; Definition at line 39 of file TF12.cxx. ◆ TF12() [2/3]. TF12::TF12 ; (; const char * ; name, . TF2 * ; f2, . Double_t ; xy, . Option_t * ; option = ""x"" . ). TF12 normal constructor. ; Create a TF12 (special TF1) from a projection of a TF2 for a fix value of Y if option=""X"" or X if option=""Y"" This value may be changed at any time via TF12::SetXY(xy) ; Definition at line 54 of file TF12.c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:40308,inherit,inherited,40308,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,1,['inherit'],['inherited']
Modifiability,"1GLManager (const TX11GLManager &);  ; Bool_t CreateGLPixmap (TGLContext_t &);  Create GL pixmap. ;  ; TX11GLManager & operator= (const TX11GLManager &);  . Private Attributes; TX11GLImpl * fPimpl;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TX11GL.h>. Inheritance diagram for TX11GLManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TX11GLManager() [1/2]. TX11GLManager::TX11GLManager ; (; ). Constructor. ; Definition at line 184 of file TX11GL.cxx. ◆ ~TX11GLManager(). TX11GLManager::~TX11GLManager ; (; ). override . Destructor. ; Definition at line 194 of file TX11GL.cxx. ◆ TX11GLManager() [2/2]. TX11GLManager::TX11GLManager ; (; const TX11GLManager & ; ). private . Member Function Documentation. ◆ AttachOffScreenDevice(). Bool_t TX11GLManager::AttachOffScreenDevice ; (; Int_t ; ctxInd, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Attach off sc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTX11GLManager.html:13524,inherit,inherited,13524,doc/master/classTX11GLManager.html,https://root.cern,https://root.cern/doc/master/classTX11GLManager.html,2,['inherit'],['inherited']
Modifiability,"1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGraphDelaunay2D (TGraph2D *g=nullptr);  TGraphDelaunay2D normal constructor. ;  ; Triangles::const_iterator begin () const;  ; Double_t ComputeZ (Double_t x, Double_t y);  ; Triangles::const_iterator end () const;  ; void FindAllTriangles ();  ; TGraph2D * GetGraph2D () const;  ; Double_t GetMarginBinsContent () const;  ; Int_t GetNdt () const;  ; Double_t GetXNmax () const;  ; Double_t GetXNmin () const;  ; Double_t GetYNmax () const;  ; Double_t GetYNmin () const;  ; TClass * IsA () const override;  ; void SetMarginBinsContent (Double_t z=0.);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay2D.html:3167,inherit,inherited,3167,doc/master/classTGraphDelaunay2D.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay2D.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Protected Member Functions inherited from TH1; static Int_t AutoP2GetBins (Int_t n);  Auxiliary function to get the next power of 2 integer value larger then n. ;  ; static Double_t AutoP2GetPower2 (Double_t x, Bool_t next=kTRUE);  Auxiliary function to get the power of 2 next (larger) or previous (smaller) a given x. ;  ; static bool CheckAxisLimits (const TAxis *a1, const TAxis *a2);  Check that the axis limits of the histograms are the same. ;  ; static bool CheckBinLabels (const TAxis *a1, const TAxis *a2);  Check that axis have same labels. ;  ; static bool CheckBinLimits (const TAxis *a1, const TAxis *a2);  Check bin limits. ;  ; static int CheckConsistency (const TH1 *h1, const TH1 *h2);  Check histogram compatibility. ;  ; static bool CheckConsistentSubAxes (const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0);  Check that two sub axis are the same. ;  ; static bool CheckEqualAxes (const TAxis *a1, const TAxis *a2);  Check that the axis are the same. ;  ; static Bool_t RecomputeAxisLimits (TAxis &de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:63782,inherit,inherited,63782,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  . #include <RooRealIntegral.h>. Inheritance diagram for RooRealIntegral:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ IntOperMode. enum RooRealIntegral::IntOperMode. protected . EnumeratorHybrid ; Analytic ; PassThrough . Definition at line 92 of file RooRealIntegral.h. Constructor & Destructor Documentation. ◆ RooRealIntegral() [1/3]. RooRealIntegral::RooRealIntegral ; (; ). Definition at line 282 of file RooRealIntegral.cxx. ◆ RooRealIntegral() [2/3]. RooRealIntegral::RooRealIntegral ; (; const char * ; name, . const char * ; title, . const RooAbsReal & ; function, . const RooArgSet & ; depList, . const RooArgSet * ; funcNormSet = nullptr, . const RooNumIntConfig * ; config = nullptr, . const char * ; rangeName = nullptr . ). Construct integral of 'function' over observables in '",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:63367,inherit,inherited,63367,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAddModel.h>. Inheritance diagram for RooAddModel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ pRooArgList. typedef RooArgList* RooAddModel::pRooArgList. protected . Definition at line 106 of file RooAddModel.h. Constructor & Destructor Docum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:77949,inherit,inherited,77949,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsCachedReal.h>. Inheritance diagram for RooAbsCachedReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ CacheElem. using RooAbsCachedReal::CacheElem = FuncCacheElem. protected . Definition at line 89 of file RooAbsCachedReal.h. Constructor & Destructor Documentation. ◆ RooAbsCachedReal() [1/3]. RooAbsCachedReal::RooAbsCachedReal ; (; ). inline . Definition at line 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedReal.html:61307,inherit,inherited,61307,doc/master/classRooAbsCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedReal.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  Destructor. ;  ; void AddSelection (const char *title);  Add a selection. ;  ; void AddVariable (const char *varexp);  Add a variable from an expression. ;  ; void AddVariable (Double_t *val, const char *title="""");  Add a variable. ;  ; void ApplySelectionToTree ();  Apply the current selection to the tree. ;  ; void CleanUpSelections (TParallelCoordRange *range);  Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ;  ; void DeleteSelection (TParallelCoordSelect *sel);  Delete a selection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance from the TParallelCoord. ;  ; void Draw (Option_t *options="""") override;  Draw the parallel coordinates graph. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selectio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:7724,variab,variable,7724,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variable']
Modifiability,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Private Member Functions inherited from TMVA::MethodCFMlpANN_Utils; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Private Attributes inherited from TMVA::MethodCFMlpANN_Utils; static const Int_t fg_max_nNodes_ = max_nNodes_;  ; static const Int_t fg_max_nVar_ = max_nVar_;  ; static const char *const fg_MethodName = ""--- CFMlpANN "";  . #include <TMVA/MethodCFMlpANN.h>. Inheritance diagram for TMVA::MethodCFMlpANN:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html:32650,inherit,inherited,32650,doc/master/classTMVA_1_1MethodCFMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html,7,['inherit'],['inherited']
Modifiability,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataDens.h>. Inheritance diagram for TQpDataDens:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataDens() [1/4]. TQpDataDens::TQpDataDens ; (; ). inline . Definition at line 74 of file TQpDataDens.h. ◆ TQpDataDens() [2/4]. TQpDataDen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataDens.html:12091,inherit,inherited,12091,doc/master/classTQpDataDens.html,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html,3,['inherit'],['inherited']
Modifiability,"1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Public Attributes inherited from TQpDataBase; TVectorD fBa;  ; TVectorD fCloBound;  ; TVectorD fCloIndex;  ; TVectorD fCupBound;  ; TVectorD fCupIndex;  ; TVectorD fG;  ; Int_t fMy;  ; Int_t fMz;  ; Int_t fNx;  ; TVectorD fXloBound;  ; TVectorD fXloIndex;  ; TVectorD fXupBound;  ; TVectorD fXupIndex;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TQpDataBase; static void RandomlyChooseBoundedVariables (TVectorD &x, TVectorD &dualx, TVectorD &blx, TVectorD &ixlow, TVectorD &bux, TVectorD &ixupp, Double_t &ix, Double_t percentLowerOnly, Double_t percentUpperOnly, Double_t percentBound);  Randomly choose x and its boundaries. ;  . #include <TQpDataSparse.h>. Inheritance diagram for TQpDataSparse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TQpDataSparse() [1/4]. TQpDataSparse::TQpDataSparse ; (; ). inline . Definition at line 71 of file TQpDataSparse.h. ◆ TQpDataSparse() [2/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataSparse.html:12235,inherit,inherited,12235,doc/master/classTQpDataSparse.html,https://root.cern,https://root.cern/doc/master/classTQpDataSparse.html,3,['inherit'],['inherited']
Modifiability,"1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TList; using TObjLinkPtr_t = std::shared_ptr< TObjLink >;  ; using TObjLinkWeakPtr_t = std::weak_ptr< TObjLink >;  ;  Protected Types inherited from TCollection; enum  EStatusBits { kIsOwner = (1ULL << ( 14 )); , kUseRWLock = (1ULL << ( 16 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TListOfEnums; TEnum * FindUnloaded (const char *name);  ; TEnum * Get (DeclId_t id, const char *name);  Return (after creating it if necessary) the TEnum describing the enum corresponding to the Decl 'id'. ;  ; TClass * GetClass () const;  ; TExMap * GetIds ();  ;  Protected Member Functions inherited from TList; TObjLinkPtr_t * DoSort (TObjLinkPtr_t *head, Int_t n);  Sort linked list. ;  ; TObjLink * FindLink (const TObject *obj, Int_t &idx) const;  Returns the TObjLink object that contains object obj. ;  ; void InsertAfter (const TObjLinkPtr_t &newlink, const TObjLinkPtr_t &prev);  Insert a new link in the chain. ;  ; TObjLink * LinkAt (Int_t idx) const;  sorting order (when calling Sort() or for TSortedList) ;  ; Bool_t LnkCompare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfEnumsWithLock.html:19968,inherit,inherited,19968,doc/master/classTListOfEnumsWithLock.html,https://root.cern,https://root.cern/doc/master/classTListOfEnumsWithLock.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoord ();  Default constructor. ;  ;  TParallelCoord (Long64_t nentries);  Constructor without a reference to a tree, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  TParallelCoord (TTree *tree, Long64_t nentries);  Normal constructor, the datas must be added afterwards with TParallelCoord::AddVariable(Double_t*,const char*). ;  ;  ~TParallelCoord () override;  Destructor. ;  ; void AddSelection (const char *title);  Add a selection. ;  ; void AddVariable (const char *varexp);  Add a variable from an expression. ;  ; void AddVariable (Double_t *val, const char *title="""");  Add a variable. ;  ; void ApplySelectionToTree ();  Apply the current selection to the tree. ;  ; void CleanUpSelections (TParallelCoordRange *range);  Clean up the selections from the ranges which could have been deleted when a variable has been deleted. ;  ; void DeleteSelection (TParallelCoordSelect *sel);  Delete a selection. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance from the TParallelCoord. ;  ; void Draw (Option_t *options="""") override;  Draw the parallel coordinates graph. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the corresponding entry. ;  ; bool GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selection. ;  ; bool GetGlobalLogScale ();  ; Double_t GetGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:7947,variab,variable,7947,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variable']
Modifiability,"1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from ROOT::v5::TFormula; enum  { ;   kEnd = 0; , kAdd = 1; , kSubstract = 2; , kMultiply = 3; , ;   kDivide = 4; , kModulo = 5; , kcos = 10; , ksin = 11; , ;   ktan = 12; , kacos = 13; , kasin = 14; , katan = 15; , ;   katan2 = 16; , kfmod = 17; , kpow = 20; , ksq = 21; , ;   ksqrt = 22; , kstrstr = 23; , kmin = 24; , kmax = 25; , ;   klog = 30; , kexp = 31; , klog10 = 32; , kpi = 40; , ;   kabs = 41; , ksign = 42; , kint = 43; , kSignInv = 44; , ;   krndm = 50; , kAnd = 60; , kOr = 61; , kEqual = 62; , ;   kNotEqual = 63; , kLess = 64; , kGreater = 65; , kLessThan = 66; , ;   kGreaterThan = 67; , kNot = 68; , kcosh = 70; , ksinh = 71; , ;   ktanh = 72; , kacosh = 73; , kasinh = 74; , katanh = 75; , ;   kStringEqual = 76; , kStringNotEqual = 77; , kBitAnd = 78; , kBitOr = 79; , ;   kLeftShift = 80; , kRightShift = 81; , kJumpIf = 82; , kJump = 83; , ;   kexpo = 100; , kxexpo = 100; , kyexpo = 101; , kzexpo = 102; , ;   kxyexpo = 105; , kgaus = 110; , kxgaus = 110; , kygaus = 111; , ;   kzgaus = 112; , kxygaus = 115; , klandau = 120; , kxlandau = 120; , ;   kylandau = 121; , kzlandau = 122; , kxylandau = 125; , kpol = 130; , ;   kxpol = 130; , kypol = 131; , kzpol = 132; , kParameter = 140; , ;   kConstant = 141; , kBoolOptimize = 142; , kStringConst = 143; , kVariable = 144; , ;   kFunctionCall = 145; , kData = 146; , kUnary = 147; , kBinary = 148; , ;   kThree = 149; , kDefinedVariable = 150; , kDefinedString = 151; , kPlusD = 152; , ;   kPlusDD = 153; , kMultD = 154; , kMultDD = 155; , kBoolOptimizeOr = 156; , ;   kBoolOptimizeAnd = 157; , kBoolSet = 158; , kFDM = 159; , kFD0 = 160; , ;   kFD1 = 161; , kFD2 = 162; , kFD3 = 163. };  ; typedef Double_t(TObject::* TFuncG) (const Double_t *, const Double_t *) const;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html:21374,inherit,inherited,21374,doc/master/structROOT_1_1v5_1_1TF1Data.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPluginManager.h>. Inheritance diagram for TPluginManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPluginManager() [1/2]. TPluginManager::TPluginManager ; (; const TPluginManager & ; ). privatedelete . true if we are running LoadHandlersFromPluginDirs . ◆ TPluginManager() [2/2]. TPluginManager::TPluginManager ; (; ). Constructor. ; Definition at line 368 of file TPluginManager.cxx. ◆ ~TPluginManager(). TPluginManager::~TPluginManager ; (; ). Clean up the plugin manager. ; Definition at line 377 of file TPluginManager.cxx. Member Function Documentation. ◆ AddHandler(). void TPluginManager::AddHandler ; (; const char * ; base, . const char * ; regexp, . const char * ; className, . const char * ; pluginName, . const char * ; ctor = nullptr, . const char * ; origin = nullptr . ). Add plugin handler to the list of handlers. ; If there is already a handler defined for the same base and regexp it will be replaced. ; Definition at line 569 of file TPluginManager.cxx. ◆ Class(). static TClass * TPluginManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPluginManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPluginManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 286 of file TPluginManager.h. ◆ DeclFileName(). static const char * TPluginManager::DeclFileName ; (; ). inlinestati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:15735,plugin,plugin,15735,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,1,['plugin'],['plugin']
Modifiability,"1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGFrameElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TGFSFrameElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Compare(). Int_t TGFSFrameElement::Compare ; (; const TObject * ; obj); const. overridevirtual . Sort frame elements in file selection list view container. ; Reimplemented from TObject.; Definition at line 106 of file TGFSContainer.cxx. ◆ IsSortable(). Bool_t TGFSFrameElement::IsSortable ; (; ); const. inlineoverridevirtual . Reimplemented from TObject.; Definition at line 99 of file TGFSContainer.cxx. Member Data Documentation. ◆ fContainer. TGFileContainer* TGFSFrameElement::fContainer. Definition at line 97 of file TGFSContainer.cxx. gui/gui/src/TGFSContainer.cxx. TGFSFrameElement. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:15 (G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFSFrameElement.html:9867,inherit,inherited,9867,doc/master/classTGFSFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGFSFrameElement.html,2,['inherit'],['inherited']
Modifiability,"1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Member Functions inherited from TGTextButton;  TGTextButton (const TGWindow *p, const char *s, const char *cmd, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget and set cmd string at same time. ;  ;  TGTextButton (const TGWindow *p, TGHotString *s, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  TGTextButton (const TGWindow *p=nullptr, const char *s=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create a text button widget. ;  ;  ~TGTextButton () override;  Delete a text button widget. ;  ; void ChangeText (const char *title);  ; Int_t GetBottomMargin () const;  ; TGDimension GetDefaultSize () const override;  returns default size ;  ; FontStruct_t GetFontStruct () const;  ; Int_t GetLeftMargin () const;  ; Int_t GetRightMargin () const;  ; TString GetString () const;  ; const TGHotString * GetText () const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitButton.html:5955,inherit,inherited,5955,doc/master/classTGSplitButton.html,https://root.cern,https://root.cern/doc/master/classTGSplitButton.html,1,['inherit'],['inherited']
Modifiability,"1ULL << ( 9 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TF1; enum  EFType { ;   kFormula = 0; , kPtrScalarFreeFcn; , kInterpreted; , kTemplVec; , ;   kTemplScalar; , kCompositionFcn. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TF1;  TF1 (EFType functionType, const char *name, Double_t xmin, Double_t xmax, Int_t npar, Int_t ndim, EAddToList addToGlobList, TF1Parameters *params=nullptr, TF1FunctorPointer *functor=nullptr);  General constructor for TF1. Most of the other constructors delegate on it. ;  ; Bool_t ComputeCdfTable (Option_t *opt);  Compute the cumulative function at fNpx points between fXmin and fXmax. ;  ; virtual TH1 * DoCreateHistogram (Double_t xmin, Double_t xmax, Bool_t recreate=kFALSE);  Create histogram with bin content equal to function value computed at the bin center This histogram will be used to paint the function A re-creation is forced and a new histogram is done if recreate=true. ;  ; void DoInitialize (EAddToList addToGlobList);  Common initialization of the TF1. ;  ; virtual Double_t GetMinMaxNDim (Double_t *x, Bool_t findmax, Double_t epsilon=0, Int_t maxiter=0) const;  Find the minimum of a function of whatever dimension. ;  ; virtual void GetRange (Double_t *xmin, Double_t *xmax) const;  Return range of a generic N-D func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:39072,inherit,inherited,39072,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,2,['inherit'],['inherited']
Modifiability,"1WrappedTF1(TF1& f); ROOT::Math::WrappedTF1WrappedTF1(const ROOT::Math::WrappedTF1& rhs). private:. virtual doubleDoDerivative(double x) const; virtual doubleDoEval(double x) const; virtual doubleDoEvalPar(double x, const double* p) const; virtual doubleDoParameterDerivative(double x, const double* p, unsigned int ipar) const. Data Members; private:. TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions ; vector<double>fParamscached vector with parameter values; boolfPolynomialflag for polynomial functions ; doublefX[1]! cached vector for x value (needed for TF1::EvalPar signature) ; static doublefgEpsepsilon used in derivative calculation h ~ eps |x|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedTF1(TF1& f). constructor from a TF1 function pointer. virtual ~WrappedTF1(). Destructor (no operations). TF1 Function pointer is not owned. {}. WrappedTF1(TF1& f). Copy constructor. ROOT::Math::IGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cachen inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (this is stored in TF1). void ParameterGradient(double x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void FdF(double x, double& f, double& deriv) const; calculate function and derivative at same time (required by IGradient interface). void SetDerivPrecision(double eps); precision value used for calculating the derivative step-size; h = eps * |x|. The default is 0.001, give a smaller in case function changes r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__WrappedTF1.html:2851,inherit,inherited,2851,root/html528/ROOT__Math__WrappedTF1.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__WrappedTF1.html,6,['inherit'],['inherited']
Modifiability,"1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -3872.49, estimated distance to minimum: 4.30406e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 4.2647e-01 +/- 7.59e-02; a1 1.7594e-01 +/- 1.10e-01; nbkg 5.1101e+02 +/- 3.60e+01; nsig 4.8899e+02 +/- 3.57e+01; sig1frac 8.6392e-01 +/- 1.08e-01; ; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'right' created with bounds [6,10]; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term in likelihood.; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_left' created with bounds [0,4]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_right' created with bounds [6,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: -1134.15, estimated distance to minimum: 3.61209e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 3.241",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html:8312,extend,extended,8312,doc/master/rf204a__extendedLikelihood_8C.html,https://root.cern,https://root.cern/doc/master/rf204a__extendedLikelihood_8C.html,2,['extend'],['extended']
Modifiability,"1^2 * x2^4 * x3^5, this method should return kFALSE if given the argument { 3, 4, 6 } ; Definition at line 2365 of file TMultiDimFit.cxx. ◆ SetBinVarX(). void TMultiDimFit::SetBinVarX ; (; Int_t ; nbbinvarx). inline . Definition at line 195 of file TMultiDimFit.h. ◆ SetBinVarY(). void TMultiDimFit::SetBinVarY ; (; Int_t ; nbbinvary). inline . Definition at line 196 of file TMultiDimFit.h. ◆ SetMaxAngle(). void TMultiDimFit::SetMaxAngle ; (; Double_t ; ang = 0). Set the max angle (in degrees) between the initial data vector to be fitted, and the new candidate function to be included in the fit. ; By default it is 0, which automatically chooses another selection criteria. See also class description ; Definition at line 2377 of file TMultiDimFit.cxx. ◆ SetMaxFunctions(). void TMultiDimFit::SetMaxFunctions ; (; Int_t ; n). inline . Definition at line 198 of file TMultiDimFit.h. ◆ SetMaxPowers(). void TMultiDimFit::SetMaxPowers ; (; const Int_t * ; powers). Set the maximum power to be considered in the fit for each variable. ; See also class description ; Definition at line 2443 of file TMultiDimFit.cxx. ◆ SetMaxStudy(). void TMultiDimFit::SetMaxStudy ; (; Int_t ; n). inline . Definition at line 200 of file TMultiDimFit.h. ◆ SetMaxTerms(). void TMultiDimFit::SetMaxTerms ; (; Int_t ; terms). inline . Definition at line 201 of file TMultiDimFit.h. ◆ SetMinAngle(). void TMultiDimFit::SetMinAngle ; (; Double_t ; ang = 1). Set the min angle (in degrees) between a new candidate function and the subspace spanned by the previously accepted functions. ; See also class description ; Definition at line 2393 of file TMultiDimFit.cxx. ◆ SetMinRelativeError(). void TMultiDimFit::SetMinRelativeError ; (; Double_t ; error). Set the acceptable relative error for when sum of square residuals is considered minimized. ; For a full account, refer to the class description ; Definition at line 2458 of file TMultiDimFit.cxx. ◆ SetPowerLimit(). void TMultiDimFit::SetPowerLimit ; (; Double_t ; lim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:58464,variab,variable,58464,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variable']
Modifiability,"1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList or a TEntryList. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:79353,variab,variables,79353,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,1,['variab'],['variables']
Modifiability,"1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Normalizing the ouput histogram to 1. When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:79837,variab,variables,79837,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,2,['variab'],['variables']
Modifiability,"1analysisTreeReader.h. Public Member Functions;  h1analysisTreeReader (TTree *=nullptr);  ;  ~h1analysisTreeReader () override;  ; void Begin (TTree *) override;  ; TList * GetOutputList () const override;  ; void Init (TTree *myTree) override;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void Reset ();  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *) override;  ; void SlaveTerminate () override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetStatus (Long64_t status);  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysisTreeReader.html:1374,inherit,inherited,1374,doc/master/classh1analysisTreeReader.html,https://root.cern,https://root.cern/doc/master/classh1analysisTreeReader.html,1,['inherit'],['inherited']
Modifiability,"1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be adjusted individually for each input; : variable!; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for training with 14000 events: 0.117 sec ; Likelihood : [dataset] : Evaluation of Likelihood on training sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.02 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.class.C␛[0m; : Higgs_ClassificationOutput.root:/dataset/Method_Likelihood/Likelihood; Fact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:17460,variab,variable,17460,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['variab'],['variable']
Modifiability,"1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be adjusted individually for each input; : variable!; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for training with 14000 events: 0.118 sec ; Likelihood : [dataset] : Evaluation of Likelihood on training sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.0223 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_Likelihood.class.C␛[0m; : Higgs_ClassificationOutput.root:/dataset/Method_Likelihood/Likelihood; Fa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:17395,variab,variable,17395,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['variab'],['variable']
Modifiability,"1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be adjusted individually for each input; : variable!; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for training with 2000 events: 0.0149 sec ; Likelihood : [dataset] : Evaluation of Likelihood on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.0035 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_Likelihood.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_Likelihood.class.C␛[0m; : TMVAC.root:/dataset/Method_Likelihood/Likelihood; Factory : Training finished; : ; Factor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:28804,variab,variable,28804,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variable']
Modifiability,"2 *f2, Option_t *option, Option_t *); 843{; 844 // internal graph2D fitting methods; 845 Foption_t fitOption;; 846 Option_t *goption = """";; 847 ROOT::Fit::FitOptionsMake(ROOT::Fit::EFitObjectType::kGraph, option, fitOption);; 848 ; 849 // create range and minimizer options with default values; 850 ROOT::Fit::DataRange range(2);; 851 ROOT::Math::MinimizerOptions minOption;; 852 return ROOT::Fit::FitObject(this, f2 , fitOption , minOption, goption, range);; 853}; 854 ; 855 ; 856////////////////////////////////////////////////////////////////////////////////; 857/// Display a GUI panel with all graph fit options.; 858///; 859/// See class TFitEditor for example; 860 ; 861void TGraph2D::FitPanel(); 862{; 863 if (!gPad); 864 gROOT->MakeDefCanvas();; 865 ; 866 if (!gPad) {; 867 Error(""FitPanel"", ""Unable to create a default canvas"");; 868 return;; 869 }; 870 ; 871 // use plugin manager to create instance of TFitEditor; 872 TPluginHandler *handler = gROOT->GetPluginManager()->FindHandler(""TFitEditor"");; 873 if (handler && handler->LoadPlugin() != -1) {; 874 if (handler->ExecPlugin(2, gPad, this) == 0); 875 Error(""FitPanel"", ""Unable to crate the FitPanel"");; 876 } else; 877 Error(""FitPanel"", ""Unable to find the FitPanel plug-in"");; 878 ; 879}; 880 ; 881 ; 882////////////////////////////////////////////////////////////////////////////////; 883/// Get x axis of the graph.; 884 ; 885TAxis *TGraph2D::GetXaxis() const; 886{; 887 TH1 *h = ((TGraph2D*)this)->GetHistogram(""empty"");; 888 if (!h) return nullptr;; 889 return h->GetXaxis();; 890}; 891 ; 892 ; 893////////////////////////////////////////////////////////////////////////////////; 894/// Get y axis of the graph.; 895 ; 896TAxis *TGraph2D::GetYaxis() const; 897{; 898 TH1 *h = ((TGraph2D*)this)->GetHistogram(""empty"");; 899 if (!h) return nullptr;; 900 return h->GetYaxis();; 901}; 902 ; 903 ; 904////////////////////////////////////////////////////////////////////////////////; 905/// Get z axis of the graph.; 906 ; 907TAxis *TGr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8cxx_source.html:28326,plugin,plugin,28326,doc/master/TGraph2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8cxx_source.html,2,"['plug-in', 'plugin']","['plug-in', 'plugin']"
Modifiability,"2 /// signalling whether the event has passed the selection (true) or not (false).; 253 /// \param[in] columns Names of the columns/branches in input to the filter function.; 254 /// \return the filter node of the computation graph.; 255 ///; 256 /// Refer to the first overload of this method for the full documentation.; 257 template <typename F>; 258 RInterface<RDFDetail::RFilter<F, Proxied>, DS_t> Filter(F f, const std::initializer_list<std::string> &columns); 259 {; 260 return Filter(f, ColumnNames_t{columns});; 261 }; 262 ; 263 ////////////////////////////////////////////////////////////////////////////; 264 /// \brief Append a filter to the call graph.; 265 /// \param[in] expression The filter expression in C++; 266 /// \param[in] name Optional name of this filter. See `Report`.; 267 /// \return the filter node of the computation graph.; 268 ///; 269 /// The expression is just-in-time compiled and used to filter entries. It must; 270 /// be valid C++ syntax in which variable names are substituted with the names; 271 /// of branches/columns.; 272 ///; 273 /// ### Example usage:; 274 /// ~~~{.cpp}; 275 /// auto filtered_df = df.Filter(""myCollection.size() > 3"");; 276 /// auto filtered_name_df = df.Filter(""myCollection.size() > 3"", ""Minumum collection size"");; 277 /// ~~~; 278 ///; 279 /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; 280 /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; 281 /// ~~~{.cpp}; 282 /// df.Filter(""Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); 283 /// ~~~; 284 /// but instead this will:; 285 /// ~~~{.cpp}; 286 /// df.Filter(""return Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); 287 /// ~~~; 288 RInterface<RDFDetail::RJittedFilter, DS_t> Filter(std::string_view expression, std::string_view name = """"); 289 {; 290 // deleted by the jitted call to JitFilterHelper; 291 auto upcastNodeOnHeap = RDFInternal::MakeSharedO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:12701,variab,variable,12701,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable']
Modifiability,2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89862,config,configuration,89862,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,2 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90252,config,configuration,90252,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"2 At:253232 N=28324 TBasket CX = 1.13; 1532/// 20010404/150442 At:281556 N=29641 TBasket CX = 1.08; 1533/// 20010404/150442 At:311197 N=29633 TBasket CX = 1.08; 1534/// 20010404/150442 At:340830 N=29091 TBasket CX = 1.10; 1535/// 20010404/150442 At:369921 N=10341 TBasket CX = 3.09; 1536/// 20010404/150442 At:380262 N=509 TH1F CX = 1.93; 1537/// 20010404/150442 At:380771 N=1769 TH2F CX = 4.32; 1538/// 20010404/150442 At:382540 N=1849 TProfile CX = 1.65; 1539/// 20010404/150442 At:384389 N=18434 TNtuple CX = 4.51; 1540/// 20010404/150442 At:402823 N=307 KeysList; 1541/// 20010404/150443 At:403130 N=4548 StreamerInfo CX = 3.65; 1542/// 20010404/150443 At:407678 N=86 FreeSegments; 1543/// 20010404/150443 At:407764 N=1 END; 1544///; 1545/// If the parameter opt contains ""forComp"", the Date/Time is omitted; 1546/// and the decompressed size is also printed.; 1547///; 1548/// Record_Adress Logical_Record_Length Key_Length Object_Record_Length ClassName CompressionFactor; 1549///; 1550/// If the parameter opt contains ""extended"", the name and title of the keys are added:; 1551/// 20200820/155031 At:100 N=180 TFile name: hsimple.root title: Demo ROOT file with histograms; 1552/// 220200820/155032 At:280 N=28880 TBasket CX = 1.11 name: random title: ntuple; 1553/// 220200820/155032 At:29160 N=29761 TBasket CX = 1.08 name: px title: ntuple; 1554/// 220200820/155032 At:58921 N=29725 TBasket CX = 1.08 name: py title: ntuple; 1555/// 220200820/155032 At:88646 N=29209 TBasket CX = 1.10 name: pz title: ntuple; 1556/// 220200820/155032 At:117855 N=10197 TBasket CX = 3.14 name: i title: ntuple; 1557/// ...; 1558/// 20200820/155032 At:405110 N=808 TNtuple CX = 3.53 name: ntuple title: Demo ntuple; 1559/// 20200820/155706 At:405918 N=307 KeysList name: hsimple.root title: Demo ROOT file with histograms; 1560/// 20200820/155032 At:406225 N=8556 StreamerInfo CX = 3.42 name: StreamerInfo title: Doubly linked list; 1561/// 20200820/155708 At:414781 N=86 FreeSegments name: hsimple.root title",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:56244,extend,extended,56244,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['extend'],['extended']
Modifiability,"2 \) fit to given histogram. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataHist &data, const RooLinkedList &cmdList);  Calls RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList) and returns fit result. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataSet &xydata, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Perform a 2-D \( \chi^2 \) fit using a series of x and y values stored in the dataset xydata. ;  ; virtual RooFit::OwningPtr< RooFitResult > chi2FitTo (RooDataSet &xydata, const RooLinkedList &cmdList);  Perform a 2-D \( \chi^2 \) fit using a series of x and y values stored in the dataset xydata. ;  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataHist &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create a \( \chi^2 \) variable from a histogram and this function. ;  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataHist &data, const RooLinkedList &cmdList);  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataSet &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create a \( \chi^2 \) from a series of x and y values stored in a dataset. ;  ; virtual RooFit::OwningPtr< RooAbsReal > createChi2 (RooDataSet &data, const RooLinkedList &cmdList);  See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&) ;  ; RooFit::OwningPtr< RooAbsArg > createFundamental (const char *newname=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:20690,variab,variable,20690,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,144,['variab'],['variable']
Modifiability,"2 of file RuleFitAPI.h. ◆ VarImp(). void TMVA::RuleFitAPI::VarImp ; (; ). inline . Definition at line 221 of file RuleFitAPI.h. ◆ WelcomeMessage(). void TMVA::RuleFitAPI::WelcomeMessage ; (; ). welcome message ; Definition at line 76 of file RuleFitAPI.cxx. ◆ WriteAll(). Bool_t TMVA::RuleFitAPI::WriteAll ; (; ). protected . write all files read by rf_go.exe ; Definition at line 248 of file RuleFitAPI.cxx. ◆ WriteFloat(). Bool_t TMVA::RuleFitAPI::WriteFloat ; (; std::ofstream & ; f, . const Float_t * ; v, . Int_t ; n = 1 . ). inlineprotected . Definition at line 274 of file RuleFitAPI.h. ◆ WriteInt(). Bool_t TMVA::RuleFitAPI::WriteInt ; (; std::ofstream & ; f, . const Int_t * ; v, . Int_t ; n = 1 . ). inlineprotected . Definition at line 266 of file RuleFitAPI.h. ◆ WriteIntParms(). Bool_t TMVA::RuleFitAPI::WriteIntParms ; (; ). protected . write int params file ; Definition at line 264 of file RuleFitAPI.cxx. ◆ WriteLx(). Bool_t TMVA::RuleFitAPI::WriteLx ; (; ). protected . Save input variable mask. ; If the lx vector size is not the same as inputVars, resize it and fill it with 1 NOTE: Always set all to 1 if (fRFLx.size() != m_inputVars->size()) { ; Definition at line 291 of file RuleFitAPI.cxx. ◆ WriteProgram(). Bool_t TMVA::RuleFitAPI::WriteProgram ; (; ). protected . write command to rf_go.exe ; Definition at line 305 of file RuleFitAPI.cxx. ◆ WriteRealParms(). Bool_t TMVA::RuleFitAPI::WriteRealParms ; (; ). protected . write int params file ; Definition at line 275 of file RuleFitAPI.cxx. ◆ WriteRealVarImp(). Bool_t TMVA::RuleFitAPI::WriteRealVarImp ; (; ). protected . write the minimum importance to be considered ; Definition at line 333 of file RuleFitAPI.cxx. ◆ WriteRfOut(). Bool_t TMVA::RuleFitAPI::WriteRfOut ; (; ). protected . written by rf_go.exe; write rulefit output (rfout) ; Definition at line 347 of file RuleFitAPI.cxx. ◆ WriteRfStatus(). Bool_t TMVA::RuleFitAPI::WriteRfStatus ; (; ). protected . written by rf_go.exe; write rulefit status ; Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html:12040,variab,variable,12040,doc/master/classTMVA_1_1RuleFitAPI.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html,1,['variab'],['variable']
Modifiability,"2) if any.; The algorithm works for 1-d, 2-D and 3-D histograms.; The axis must be extendable before invoking this function.; Ex: h->GetXaxis()->SetCanExtend(kTRUE);. void RecursiveRemove(TObject* obj); Recursively remove object from the list of functions. void Scale(Double_t c1 = 1, Option_t* option = """"); Multiply this histogram by a constant c1. this = c1*this. Note that both contents and errors(if any) are scaled.; This function uses the services of TH1::Add. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Scale. One can scale an histogram such that the bins integral is equal to; the normalization parameter via TH1::Scale(Double_t norm), where norm; is the desired normalization divided by the integral of the histogram. If option contains ""width"" the bin contents and errors are divided; by the bin width. Bool_t CanExtendAllAxes() const; returns true if all axes are extendable. UInt_t SetCanExtend(UInt_t extendBitMask); make the histogram axes extendable / not extendable according to the bit mask; returns the previous bit mask specifying which axes are extendable. void SetDefaultBufferSize(Int_t buffersize = 1000); static function to set the default buffer size for automatic histograms.; When an histogram is created with one of its axis lower limit greater; or equal to its upper limit, the function SetBuffer is automatically; called with the default buffer size. void SetDefaultSumw2(Bool_t sumw2 = kTRUE); static function.; When this static function is called with sumw2=kTRUE, all new; histograms will automatically activate the storage; of the sum of squares of errors, ie TH1::Sumw2 is automatically called. void SetTitle(const char* title); Change (i.e. set) the title. if title is in the form ""stringt;stringx;stringy;stringz""; the histogram title is set to stringt, the x axis title to stringx,; the y axis title to stringy,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:106639,extend,extendable,106639,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,4,['extend'],['extendable']
Modifiability,"2) that represents the confidence level contour for a measurement with errors (s1,s2) and correlation coefficient rho. ;  ; double getFitRangeBinW () const override;  ; double getFitRangeNEvt () const override;  ; double getFitRangeNEvt (double, double) const override;  ; TClass * IsA () const override;  ; void Print (Option_t *options=nullptr) const override;  Printing interface. ;  ; void printClassName (std::ostream &os) const override;  Print class name of ellipse on ostream. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print detailed multi line information on ellipse on ostreamx. ;  ; void printName (std::ostream &os) const override;  Print name of ellipse on ostream. ;  ; void printTitle (std::ostream &os) const override;  Print title of ellipse on ostream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraph;  TGraph ();  Graph default constructor. ;  ;  TGraph (const char *filename, const char *format=""%lg %lg"", Option_t *option="""");  Graph constructor reading input from filename. ;  ;  TGraph (const TF1 *f, Option_t *option="""");  Graph constructor importing its parameters from the TF1 object passed as argument. ;  ;  TGraph (const TGraph &gr);  Copy constructor for this graph. ;  ;  TGraph (const TH1 *h);  Graph constructor importing its parameters from the TH1 object passed as argument. ;  ;  TGraph (const TVectorD &vx, const TVectorD &vy);  Graph constructor with two vectors of doubles in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of points in the graph is the minimum of number of points in vx and vy. ;  ;  TGraph (const TVectorF &vx, const TVectorF &vy);  Graph constructor with two vectors of floats in input A graph is build with the X coordinates taken from vx and Y coord from vy The number of poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEllipse.html:1617,inherit,inherited,1617,doc/master/classRooEllipse.html,https://root.cern,https://root.cern/doc/master/classRooEllipse.html,1,['inherit'],['inherited']
Modifiability,"2); RooCacheManager<vector<double,allocator<double> > >(const RooCacheManager<vector<double,allocator<double> > >& other, RooAbsArg* owner = 0); Int_tsetObj(const RooArgSet* nset, vector<double,allocator<double> >* obj, const TNamed* isetRangeName = 0); Int_tsetObj(const RooArgSet* nset, const RooArgSet* iset, vector<double,allocator<double> >* obj, const TNamed* isetRangeName = 0); virtual voidShowMembers(TMemberInspector&); virtual voidsterilize(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidwireCache(). Data Members; protected:. Int_t_lastIndex! Last slot accessed; Int_t_maxSize! Maximum size; vector<RooNormSetCache>_nsetCache! Normalization/Integration set manager; vector<vector<double,allocator<double> >*>_object! Payload; RooAbsArg*RooAbsCache::_ownerPointer to owning RooAbsArg; Int_t_size! Actual use; Bool_t_wired! In wired mode, there is a single payload which is returned always. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; T* getObj(const RooArgSet* nset, Int_t* sterileIndex = 0, const TNamed* isetRangeName = 0); Getter function without integration set. return getObj(nset,0,sterileIndex,isetRangeName). Int_t setObj(const RooArgSet* nset, vector<double,allocator<double> >* obj, const TNamed* isetRangeName = 0); Setter function without integration set. return setObj(const RooArgSet* nset, const RooArgSet* iset, vector<double,allocator<double> >* obj, const TNamed* isetRangeName = 0). T* getObj(const RooArgSet* nset, const RooArgSet* iset, Int_t* sterileIdx, const char* isetRangeName). void reset(). void sterilize(). Int_t lastIndex() const; Return index of slot used in last get or set operation. Int_t cacheSize() const; Return size of cache. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Interface function to intercept server redirects. void operModeHook(); Interface function to intercept cache operation mode changes. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCacheManager_vector_double___.html:3622,Inherit,Inheritance,3622,root/html534/RooCacheManager_vector_double___.html,https://root.cern,https://root.cern/root/html534/RooCacheManager_vector_double___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"2* lsquared) const; virtual const char*TObject::GetName() const; Int_tGetNdf() const; voidGetNormalisationVector(TH1* s, const Int_t* binMap = 0) const; Int_tGetNpar() const; Int_tGetNr() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetOutput(TH1* output, const Int_t* binMap = 0) const; voidGetProbabilityMatrix(TH2* A, TUnfold::EHistMap histmap) const; Double_tGetRhoAvg() const; Double_tGetRhoI(TH1* rhoi, const Int_t* binMap = 0, TH2* invEmat = 0) const; voidGetRhoIJ(TH2* rhoij, const Int_t* binMap = 0) const; Double_tGetRhoMax() const; Double_tGetTau() const; virtual const char*TObject::GetTitle() const; static const char*GetTUnfoldVersion(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfold.html:11632,Inherit,InheritsFrom,11632,root/html534/TUnfold.html,https://root.cern,https://root.cern/root/html534/TUnfold.html,1,['Inherit'],['InheritsFrom']
Modifiability,"2* lsquared) const; virtual const char*TObject::GetName() const; Int_tGetNdf() const; voidGetNormalisationVector(TH1* s, const Int_t* binMap = 0) const; Int_tGetNpar() const; Int_tGetNr() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetOutput(TH1* output, const Int_t* binMap = 0) const; voidGetProbabilityMatrix(TH2* A, TUnfold::EHistMap histmap) const; Double_tGetRhoAvg() const; Double_tGetRhoI(TH1* rhoi, const Int_t* binMap = 0, TH2* invEmat = 0) const; voidGetRhoIJ(TH2* rhoij, const Int_t* binMap = 0) const; Double_tGetRhoMax() const; Double_tGetTau() const; virtual const char*TObject::GetTitle() const; static const char*GetTUnfoldVersion(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnfold.html:11481,Inherit,InheritsFrom,11481,root/html602/TUnfold.html,https://root.cern,https://root.cern/root/html602/TUnfold.html,2,['Inherit'],['InheritsFrom']
Modifiability,"2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) constInternal function compute integral and optionally the error between the limits specified by the bin n...Definition TH1.cxx:7977; TH1::fTsumwx2Double_t fTsumwx2Total Sum of weight*X*X.Definition TH1.h:99; TH1::GetStdDevvirtual Double_t GetStdDev(Int_t axis=1) constReturns the Standard Deviation (Sigma).Definition TH1.cxx:7607; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::GetBinErrorvirtual Double_t GetBinError(Int_t bin) constReturn value of error associated to bin number bin.Definition TH1.cxx:9063; TH1::GetNbinsZvirtual Int_t GetNbinsZ() constDefinition TH1.h:299; TH1::GetDimensionvirtual Int_t GetDimension() constDefinition TH1.h:283; TH1::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TH1.cxx:6933; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::Resetvirtual void Reset(Option_t *option="""")Reset this histogram: contents, errors, etc.Definition TH1.cxx:7103; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetNcellsvirtual Int_t GetNcells() constDefinition TH1.h:300; TH1::PutStatsvirtual void PutStats(Double_t *stats)Replace current statistics with the values in array stats.Definition TH1.cxx:7884; TH1::GetPainterTVirtualHistPainter * GetPainter(Option_t *option="""")Return pointer to painter.Definition TH1.cxx:4511; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::GetBinvirtual Int_t GetBin(Int_t binx, Int_t biny=0, Int_t binz=0) constReturn Global bin number corresponding to binx,y,z.Definition TH1.cxx:4961; TH1::GetNbinsXvirtual Int_t GetNbinsX() constDefinition TH1.h:297; TH1::Addvirtual Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:194086,extend,extendable,194086,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"2, Float_t dz);  TRD2 shape normal constructor. ;  ;  ~TTRD2 () override;  TRD2 shape default destructor. ;  ; Float_t GetDx2 () const;  ; Float_t GetDy2 () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TShape & operator= (const TShape &);  assignment operator ;  ; void Paint (Option_t *option="""") override;  This method is used only when a shape is painted outside a TNode. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; virtual void SetVisibility (Int_t vis);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TransformPoints (Double_t *points, UInt_t NbPnts) const;  Transform points (LocalToMaster) ;  ;  Public Member Functions inherited from TNamed; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD2.html:2114,inherit,inherited,2114,doc/master/classTTRD2.html,https://root.cern,https://root.cern/doc/master/classTTRD2.html,1,['inherit'],['inherited']
Modifiability,"2, using Kolmogorov test.; 1450/// Default: Ignore under- and overflow bins in comparison; 1451///; 1452/// option is a character string to specify options; 1453/// - ""U"" include Underflows in test; 1454/// - ""O"" include Overflows; 1455/// - ""N"" include comparison of normalizations; 1456/// - ""D"" Put out a line of ""Debug"" printout; 1457/// - ""M"" Return the Maximum Kolmogorov distance instead of prob; 1458///; 1459/// The returned function value is the probability of test; 1460/// (much less than one means NOT compatible); 1461///; 1462/// The KS test uses the distance between the pseudo-CDF's obtained; 1463/// from the histogram. Since in 2D the order for generating the pseudo-CDF is; 1464/// arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; 1465/// other from the y axis and the maximum distance is the average of the two maximum; 1466/// distances obtained.; 1467///; 1468/// Code adapted by Rene Brun from original HBOOK routine HDIFF; 1469 ; 1470Double_t TH2::KolmogorovTest(const TH1 *h2, Option_t *option) const; 1471{; 1472 TString opt = option;; 1473 opt.ToUpper();; 1474 ; 1475 Double_t prb = 0;; 1476 TH1 *h1 = (TH1*)this;; 1477 if (h2 == nullptr) return 0;; 1478 const TAxis *xaxis1 = h1->GetXaxis();; 1479 const TAxis *xaxis2 = h2->GetXaxis();; 1480 const TAxis *yaxis1 = h1->GetYaxis();; 1481 const TAxis *yaxis2 = h2->GetYaxis();; 1482 Int_t ncx1 = xaxis1->GetNbins();; 1483 Int_t ncx2 = xaxis2->GetNbins();; 1484 Int_t ncy1 = yaxis1->GetNbins();; 1485 Int_t ncy2 = yaxis2->GetNbins();; 1486 ; 1487 // Check consistency of dimensions; 1488 if (h1->GetDimension() != 2 || h2->GetDimension() != 2) {; 1489 Error(""KolmogorovTest"",""Histograms must be 2-D\n"");; 1490 return 0;; 1491 }; 1492 ; 1493 // Check consistency in number of channels; 1494 if (ncx1 != ncx2) {; 1495 Error(""KolmogorovTest"",""Number of channels in X is different, %d and %d\n"",ncx1,ncx2);; 1496 return 0;; 1497 }; 1498 if (ncy1 != ncy2) {; 1499 Error(""KolmogorovTest"",""Number of ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:59648,adapt,adapted,59648,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['adapt'],['adapted']
Modifiability,"2,3 and 4 dimensions with their transformations) is not anymore part of MathCore, but is built as a separate library. MathCore contains instead now classes which were originally part of libCore. These include:. TMath : namespace with mathematical functions and basic function algorithms.; TComplex: class for complex numbers.; Random classes: base class TRandom and the derived classes TRandom1, TRandom2 and TRandom3, implementing the pseudo-random number generators.; Other classes, such as; TKDTree for partitioning the data using a kd-Tree and TKDTreeBinning for binning data using a kdTree; ROOT::Math::GoFTest for goodness of fit tests . Modules;  Fitting and Parameter Estimation;  Classes used for fitting (regression analysis) and estimation of parameter values given a data sample. ;  ;  Interface classes for Random number generation;  Pseudo-random numbers generator classes and for generation of random number distributions. ;  ;  Goodness of Fit Tests;  Classical one-dimensional goodness of git tests for unbinned data. ;  ;  Function Classes and Interfaces;  Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods for describing function classes. ;  ;  Numerical Algorithms;  Numerical Algorithm classes from the MathCore and MathMore libraries. ;  ;  Statistical functions;  Probability density functions, cumulative distribution functions and their inverses (quantiles) for various statistical distributions (continuous and discrete). ;  ;  Special functions;  Special mathematical functions. ;  . Files; file  RFit.hxx;  . Classes; class  ROOT::Math::Delaunay2D;  Class to generate a Delaunay triangulation of a 2D set of points. More...;  ; class  TKDTreeBinning;  <- TKDTreeBinning - A class providing multidimensional binning -> More...;  ; class  TStatistic;  Statistical variable, defined by its mean and variance (RMS). More...;  . ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:10:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/group__MathCore.html:3293,variab,variable,3293,doc/v632/group__MathCore.html,https://root.cern,https://root.cern/doc/v632/group__MathCore.html,1,['variab'],['variable']
Modifiability,"2->Draw();; ; return;; }; c#define c(i)Definition RSha256.hxx:101; RooDataSet.h; RooGaussian.h; RooIntegralMorph.h; RooPlot.h; RooPolynomial.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooIntegralMorphClass RooIntegralMorph is an implementation of the histogram interpolation technique described by Ale...Definition RooIntegralMorph.h:26; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf705__linearmorph_8C.html:4916,variab,variable,4916,doc/master/rf705__linearmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf705__linearmorph_8C.html,1,['variab'],['variable']
Modifiability,"2. float * trats(const float *a, const float *s, float *b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trchlu(const float *a, float *b, int n). ; see original documentation of CERNLIB package F112. Local variables. float * trpck(const float *s, float *u, int n); trpck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRPCK .VERSION KERNFOR 2.08 741218 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trqsq(const float *q, const float *s, float *r__, int m); trqsq.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRQSQ .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. float * trsa(const float *s, const float *a, float *b, int m, int n); trsa.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRSA .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentation of CERNLIB package F112. Local variables. float * trupck(const float *u, float *s, int m); trupck.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRUPCK .VERSION KERNFOR 2.08 741218; ORIG. 18/12/74 WH. ; see original documentation of CERNLIB package F112. double * trata(const double *a, double *r__, int m, int n). ; see original documentation of CERNLIB package F112. double * trats(const double *a, const double *s, double *b, int m, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trchlu(const double *a, double *b, int n); trchlu.F -- translated by f2c (version 19970219). ; see original documentation of CERNLIB package F112. Local variables. double * trchul(const double *a, double *b, int n). ; see original documentation of CERNLIB package F112. Local variables. double * trinv(const double *t, double *s, int n); trinv.F -- translated by f2c (version 19970219).; CERN PROGLIB# F112 TRINV .VERSION KERNFOR 4.15 861204 *; ORIG. 18/12/74 WH *. ; see original documentatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCL.html:15125,variab,variables,15125,root/html526/TCL.html,https://root.cern,https://root.cern/root/html526/TCL.html,1,['variab'],['variables']
Modifiability,2.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.08,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96008,config,configuration,96008,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,2.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1116 | 2.82496 2.31503 0.0201083 0.00181922 43742 0; : 1117 | 2.74168 2.90157 0.0200454 0.00175765 43745.2 1; : 1118 | 2.51176 4.00704 0.0201409 0.00176812 43542.7 2; : 1119 | 3.03618 2.55498 0.0202517 0.00178949 43331.7 3; : 1120 | 2.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:120030,config,configuration,120030,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,20 | 2.66116 2.61177 0.0204165 0.00176394 42889.5 4; : 1121 | 3.00965 2.56116 0.0204562 0.00180217 42886.2 5; : 1122 | 3.0625 3.75816 0.0204635 0.00176149 42776.2 6; : 1123 | 2.88666 2.6576 0.0204265 0.00178135 42906.6 7; : 1124 | 2.54231 2.73598 0.020225 0.00176346 43333.4 8; : 1125 | 2.44231 2.73459 0.0201498 0.00175906 43500.1 9; : 1126 | 2.45201 2.82465 0.0200726 0.00175651 43677.5 10; : 1127 | 2.54248 2.42056 0.0201867 0.00176633 43430.3 11; : 1128 | 2.47016 2.53962 0.0206089 0.00182988 42600.8 12; : 1129 | 2.38268 2.44496 0.0204067 0.00176828 42922.1 13; : 1130 | 2.59925 2.55821 0.0200531 0.00176378 43741.4 14; : 1131 | 2.55367 2.59723 0.0200573 0.00177202 43751.1 15; : 1132 | 2.73554 2.74944 0.020135 0.00176885 43558.3 16; : 1133 | 2.68556 2.54814 0.0200421 0.00176557 43772.1 17; : 1134 | 2.52258 2.47147 0.0200724 0.0017645 43696.9 18; : 1135 | 2.54757 2.67188 0.0200351 0.00176104 43778 19; : 1136 | 2.63764 2.78828 0.0200363 0.0017639 43781.8 20; : 1137 Minimum Test error found - save the configuration ; : 1137 | 2.5743 2.19951 0.0201074 0.00183887 43791.1 0; : 1138 | 2.48438 2.23196 0.0200456 0.00175699 43743.1 1; : 1139 | 2.50812 2.26597 0.0200665 0.00175755 43694.4 2; : 1140 | 2.3988 2.24899 0.0200386 0.00175805 43762.4 3; : 1141 | 2.7672 3.06409 0.0200539 0.00176427 43740.6 4; : 1142 | 2.49905 2.42566 0.0200843 0.00176461 43669 5; : 1143 | 2.42701 2.41776 0.0200668 0.00178464 43758.5 6; : 1144 | 2.26582 2.24235 0.0200333 0.00176428 43790 7; : 1145 | 2.32819 2.25052 0.0200451 0.00176354 43759.9 8; : 1146 | 2.38829 2.61112 0.0201128 0.00176481 43601.4 9; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:122024,config,configuration,122024,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"20//-----------------------------------------------------------------------------; 221bool CPyCppyy::Instance_IsLively(PyObject* pyobject); 222{; 223// Test whether the given instance can safely return to C++; 224 if (!CPPInstance_Check(pyobject)); 225 return true; // simply don't know; 226 ; 227// the instance fails the lively test if it owns the C++ object while having a; 228// reference count of 1 (meaning: it could delete the C++ instance any moment); 229 if (pyobject->ob_refcnt <= 1 && (((CPPInstance*)pyobject)->fFlags & CPPInstance::kIsOwner)); 230 return false;; 231 ; 232 return true;; 233}; 234 ; 235//-----------------------------------------------------------------------------; 236bool CPyCppyy::Overload_Check(PyObject* pyobject); 237{; 238// Test if the given pyobject is of CPPOverload derived type.; 239 if (!Initialize()); 240 return false;; 241 ; 242// detailed walk through inheritance hierarchy; 243 return CPPOverload_Check(pyobject);; 244}; 245 ; 246//-----------------------------------------------------------------------------; 247bool CPyCppyy::Overload_CheckExact(PyObject* pyobject); 248{; 249// Test if the given pyobject is of CPPOverload type.; 250 if (!Initialize()); 251 return false;; 252 ; 253// direct pointer comparison of type member; 254 return CPPOverload_CheckExact(pyobject);; 255}; 256 ; 257 ; 258//- access to the python interpreter ----------------------------------------; 259bool CPyCppyy::Import(const std::string& mod_name); 260{; 261// Import the named python module and create Cling equivalents for its classes.; 262 if (!Initialize()); 263 return false;; 264 ; 265 PyObject* mod = PyImport_ImportModule(mod_name.c_str());; 266 if (!mod) {; 267 PyErr_Print();; 268 return false;; 269 }; 270 ; 271// allow finding to prevent creation of a python proxy for the C++ proxy; 272 Py_INCREF(mod);; 273 PyModule_AddObject(gThisModule, mod_name.c_str(), mod);; 274 ; 275// force creation of the module as a namespace; 276// TODO: the following is broke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/API_8cxx_source.html:8419,inherit,inheritance,8419,doc/master/API_8cxx_source.html,https://root.cern,https://root.cern/doc/master/API_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"2015 // Collection of numbers. Memberwise or not, it is all the same.; 2016 ; 2017 TConfigSTL *config = (TConfigSTL*)conf;; 2018 UInt_t start, count;; 2019 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2020 ; 2021 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 2022 Int_t nvalues;; 2023 buf.ReadInt(nvalues);; 2024 vec->resize(nvalues);; 2025 ; 2026 From *temp = new From[nvalues];; 2027 buf.ReadFastArrayWithNbits(temp, nvalues, 0);; 2028 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2029 (*vec)[ind] = (To)temp[ind];; 2030 }; 2031 delete [] temp;; 2032 ; 2033 buf.CheckByteCount(start,count,config->fTypeName);; 2034 return 0;; 2035 }; 2036 };; 2037 ; 2038 template <typename To>; 2039 static INLINE_TEMPLATE_ARGS Int_t ConvertCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 2040 {; 2041 // Collection of numbers. Memberwise or not, it is all the same.; 2042 ; 2043 TConfigSTL *config = (TConfigSTL*)conf;; 2044 UInt_t start, count;; 2045 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 2046 ; 2047 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 2048 Int_t nvalues;; 2049 buf.ReadInt(nvalues);; 2050 vec->resize(nvalues);; 2051 ; 2052 Double32_t *temp = new Double32_t[nvalues];; 2053 buf.ReadFastArrayDouble32(temp, nvalues);; 2054 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2055 (*vec)[ind] = (To)temp[ind];; 2056 }; 2057 delete [] temp;; 2058 ; 2059 buf.CheckByteCount(start,count,config->fTypeName);; 2060 return 0;; 2061 }; 2062 ; 2063 };; 2064 ; 2065 struct VectorPtrLooper {; 2066 ; 2067 template <typename T>; 2068 static INLINE_TEMPLATE_ARGS Int_t ReadBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2069 {; 2070 const Int_t offset = config->fOffset;; 2071 ; 2072 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2073 T *x = (T*)( ((char*) (*(void**)iter) ) + offset );; 2074 buf >> *x;; 207",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:84347,config,config,84347,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"2068 ; 2069 RGeomBrowserIter giter(*this);; 2070 ; 2071 if (!giter.Navigate(path)); 2072 return false;; 2073 ; 2074 auto stack = MakeStackByIds(giter.CurrentIds());; 2075 ; 2076 for (auto iter = fVisibility.begin(); iter != fVisibility.end(); iter++); 2077 if (compare_stacks(iter->stack, stack) == 0) {; 2078 fVisibility.erase(iter);; 2079 ClearDrawData();; 2080 return true;; 2081 }; 2082 ; 2083 return false;; 2084}; 2085 ; 2086/////////////////////////////////////////////////////////////////////////////////; 2087/// Reset all custom visibility settings; 2088 ; 2089bool RGeomDescription::ClearAllPhysVisibility(); 2090{; 2091 TLockGuard lock(fMutex);; 2092 ; 2093 if (fVisibility.empty()); 2094 return false;; 2095 ; 2096 fVisibility.clear();; 2097 ClearDrawData();; 2098 return true;; 2099}; 2100 ; 2101/////////////////////////////////////////////////////////////////////////////////; 2102/// Change configuration by client; 2103/// Returns true if any parameter was really changed; 2104 ; 2105bool RGeomDescription::ChangeConfiguration(const std::string &json); 2106{; 2107 auto cfg = TBufferJSON::FromJSON<RGeomConfig>(json);; 2108 if (!cfg); 2109 return false;; 2110 ; 2111 TLockGuard lock(fMutex);; 2112 ; 2113 auto json1 = TBufferJSON::ToJSON(cfg.get());; 2114 auto json2 = TBufferJSON::ToJSON(&fCfg);; 2115 ; 2116 if (json1 == json2); 2117 return false;; 2118 ; 2119 fCfg = *cfg; // use assign; 2120 ; 2121 ClearDrawData();; 2122 ; 2123 return true;; 2124}; 2125 ; 2126/////////////////////////////////////////////////////////////////////////////////; 2127/// Change search query and belongs to it json string; 2128/// Returns true if any parameter was really changed; 2129 ; 2130bool RGeomDescription::SetSearch(const std::string &query, const std::string &json); 2131{; 2132 TLockGuard lock(fMutex);; 2133 ; 2134 bool changed = (fSearch != query) || (fSearchJson != json);; 2135 fSearch = query;; 2136 fSearchJson = json;; 2137 return changed;; 2138}; 2139 ; 2140/////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:63371,config,configuration,63371,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['config'],['configuration']
Modifiability,207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96452,config,configuration,96452,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"2084 mg_write(conn, buf, (size_t)len);; 12085 }; 12086}; 12087 ; 12088 ; 12089static void; 12090handle_ssi_file_request(struct mg_connection *conn,; 12091 const char *path,; 12092 struct mg_file *filep); 12093{; 12094 char date[64];; 12095 time_t curtime = time(NULL);; 12096 const char *cors_orig_cfg, *cors_cred_cfg;; 12097 const char *cors1, *cors2, *cors3, *cors4;; 12098 ; 12099 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12100 return;; 12101 }; 12102 ; 12103 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12104 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12105 /* Cross-origin resource sharing (CORS). */; 12106 cors1 = ""Access-Control-Allow-Origin"";; 12107 cors2 = cors_orig_cfg;; 12108 } else {; 12109 cors1 = cors2 = """";; 12110 }; 12111 ; 12112 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12113 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12114 /* Credentials CORS header */; 12115 cors3 = ""Access-Control-Allow-Credentials"";; 12116 cors4 = cors_cred_cfg;; 12117 } else {; 12118 cors3 = cors4 = """";; 12119 }; 12120 ; 12121 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, filep)) {; 12122 /* File exists (precondition for calling this function),; 12123 * but can not be opened by the server. */; 12124 mg_send_http_error(conn,; 12125 500,; 12126 ""Error: Cannot read file\nfopen(%s): %s"",; 12127 path,; 12128 strerror(ERRNO));; 12129 } else {; 12130 /* Set ""must_close"" for HTTP/1.x, since we do not know the; 12131 * content length */; 12132 conn->must_close = 1;; 12133 gmt_time_string(date, sizeof(date), &curtime);; 12134 fclose_on_exec(&filep->access, conn);; 12135 ; 12136 /* 200 OK response */; 12137 mg_response_header_start(conn, 200);; 12138 send_no_cache_header(conn);; 12139 send_additional_header(conn);; 12140 mg_response_header_add(conn, ""Content-Type"", ""text/html"", -1);; 12141 if (cors1[0]) {; 12142 mg_response_header_add(conn, cors1, cors2, -1);; 12",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:350249,config,config,350249,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"2085 mg_write(conn, buf, (size_t)len);; 12086 }; 12087}; 12088 ; 12089 ; 12090static void; 12091handle_ssi_file_request(struct mg_connection *conn,; 12092 const char *path,; 12093 struct mg_file *filep); 12094{; 12095 char date[64];; 12096 time_t curtime = time(NULL);; 12097 const char *cors_orig_cfg, *cors_cred_cfg;; 12098 const char *cors1, *cors2, *cors3, *cors4;; 12099 ; 12100 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12101 return;; 12102 }; 12103 ; 12104 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12105 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12106 /* Cross-origin resource sharing (CORS). */; 12107 cors1 = ""Access-Control-Allow-Origin"";; 12108 cors2 = cors_orig_cfg;; 12109 } else {; 12110 cors1 = cors2 = """";; 12111 }; 12112 ; 12113 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12114 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12115 /* Credentials CORS header */; 12116 cors3 = ""Access-Control-Allow-Credentials"";; 12117 cors4 = cors_cred_cfg;; 12118 } else {; 12119 cors3 = cors4 = """";; 12120 }; 12121 ; 12122 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, filep)) {; 12123 /* File exists (precondition for calling this function),; 12124 * but can not be opened by the server. */; 12125 mg_send_http_error(conn,; 12126 500,; 12127 ""Error: Cannot read file\nfopen(%s): %s"",; 12128 path,; 12129 strerror(ERRNO));; 12130 } else {; 12131 /* Set ""must_close"" for HTTP/1.x, since we do not know the; 12132 * content length */; 12133 conn->must_close = 1;; 12134 gmt_time_string(date, sizeof(date), &curtime);; 12135 fclose_on_exec(&filep->access, conn);; 12136 ; 12137 /* 200 OK response */; 12138 mg_response_header_start(conn, 200);; 12139 send_no_cache_header(conn);; 12140 send_additional_header(conn);; 12141 mg_response_header_add(conn, ""Content-Type"", ""text/html"", -1);; 12142 if (cors1[0]) {; 12143 mg_response_header_add(conn, cors1, cors2, -1);; 12",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:350282,config,config,350282,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"209 kind = gROOT->GetWebDisplay().Data();; 210 ; 211 if (kind == ""local""); 212 SetBrowserKind(kLocal);; 213 else if (kind == ""native""); 214 SetBrowserKind(kNative);; 215 else if (kind.empty() || (kind == ""on"")); 216 SetBrowserKind(kOn);; 217 else if ((kind == ""dflt"") || (kind == ""default"") || (kind == ""browser"")); 218 SetBrowserKind(kDefault);; 219 else if (kind == ""firefox""); 220 SetBrowserKind(kFirefox);; 221 else if ((kind == ""chrome"") || (kind == ""chromium"")); 222 SetBrowserKind(kChrome);; 223#ifdef _MSC_VER; 224 else if ((kind == ""edge"") || (kind == ""msedge"")); 225 SetBrowserKind(kEdge);; 226#endif; 227 else if ((kind == ""cef"") || (kind == ""cef3"")); 228 SetBrowserKind(kCEF);; 229 else if ((kind == ""qt"") || (kind == ""qt5"")); 230 SetBrowserKind(kQt5);; 231 else if (kind == ""qt6""); 232 SetBrowserKind(kQt6);; 233 else if ((kind == ""embed"") || (kind == ""embedded"")); 234 SetBrowserKind(kEmbedded);; 235 else if (kind == ""server""); 236 SetBrowserKind(kServer);; 237 else if (kind == ""off""); 238 SetBrowserKind(kOff);; 239 else if (!SetSizeAsStr(kind)); 240 SetCustomExec(kind);; 241 ; 242 return *this;; 243}; 244 ; 245/////////////////////////////////////////////////////////////////////; 246/// Returns configured browser name; 247 ; 248std::string RWebDisplayArgs::GetBrowserName() const; 249{; 250 switch (GetBrowserKind()) {; 251 case kChrome: return ""chrome"";; 252 case kEdge: return ""edge"";; 253 case kFirefox: return ""firefox"";; 254 case kNative: return ""native"";; 255 case kCEF: return ""cef"";; 256 case kQt5: return ""qt5"";; 257 case kQt6: return ""qt6"";; 258 case kLocal: return ""local"";; 259 case kDefault: return ""default"";; 260 case kServer: return ""server"";; 261 case kEmbedded: return ""embed"";; 262 case kOff: return ""off"";; 263 case kOn: return ""on"";; 264 case kCustom:; 265 auto pos = fExec.find("" "");; 266 return (pos == std::string::npos) ? fExec : fExec.substr(0,pos);; 267 }; 268 ; 269 return """";; 270}; 271 ; 272//////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html:8403,config,configured,8403,doc/v632/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html,1,['config'],['configured']
Modifiability,"2095 iercr = 3;; 2096// in any case; 2097L1000:; 2098 if (ldebug) {; 2099 itoohi = 0;; 2100 for (i = 1; i <= ipt; ++i) {; 2101 if (fYpt[i-1] > aim + fUp) {; 2102 fYpt[i-1] = aim + fUp;; 2103 fChpt[i-1] = '+';; 2104 itoohi = 1;; 2105 }; 2106 }; 2107 fChpt[ipt] = 0;; 2108 chsign = ""POSI"";; 2109 if (fXdircr < 0) chsign = ""NEGA"";; 2110 if (fKe2cr == 0) {; 2111 Printf("" %sTIVE MINOS ERROR, PARAMETER %3d"",chsign,fKe1cr);; 2112 }; 2113 if (itoohi == 1) {; 2114 Printf(""POINTS LABELLED '+' WERE TOO HIGH TO PLOT."");; 2115 }; 2116 if (iercr == 1) {; 2117 Printf(""RIGHTMOST POINT IS UP AGAINST LIMIT."");; 2118 }; 2119 mnplot(fXpt, fYpt, fChpt, ipt, fNpagwd, fNpagln);; 2120 }; 2121}; 2122 ; 2123////////////////////////////////////////////////////////////////////////////////; 2124/// Makes sure that the current point is a local minimum; 2125///; 2126/// Makes sure that the current point is a local; 2127/// minimum and that the error matrix exists,; 2128/// or at least something good enough for MINOS and MNCONT; 2129 ; 2130void TMinuit::mncuve(); 2131{; 2132 /* Local variables */; 2133 Double_t dxdi, wint;; 2134 Int_t ndex, iext, i, j;; 2135 ; 2136 if (fISW[3] < 1) {; 2137 Printf("" FUNCTION MUST BE MINIMIZED BEFORE CALLING %s"",(const char*)fCfrom);; 2138 fApsi = fEpsi;; 2139 mnmigr();; 2140 }; 2141 if (fISW[1] < 3) {; 2142 mnhess();; 2143 if (fISW[1] < 1) {; 2144 mnwarn(""W"", fCfrom, ""NO ERROR MATRIX. WILL IMPROVISE."");; 2145 for (i = 1; i <= fNpar; ++i) {; 2146 ndex = i*(i-1) / 2;; 2147 for (j = 1; j <= i-1; ++j) {; 2148 ++ndex;; 2149 fVhmat[ndex-1] = 0;; 2150 }; 2151 ++ndex;; 2152 if (fG2[i-1] <= 0) {; 2153 wint = fWerr[i-1];; 2154 iext = fNexofi[i-1];; 2155 if (fNvarl[iext-1] > 1) {; 2156 mndxdi(fX[i-1], i-1, dxdi);; 2157 if (TMath::Abs(dxdi) < .001) wint = .01;; 2158 else wint /= TMath::Abs(dxdi);; 2159 }; 2160 fG2[i-1] = fUp / (wint*wint);; 2161 }; 2162 fVhmat[ndex-1] = 2 / fG2[i-1];; 2163 }; 2164 fISW[1] = 1;; 2165 fDcovar = 1;; 2166 } else mnwerr();; 2167 }; 2168}; 2169 ; 2170",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:71285,variab,variables,71285,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"21#include <string>; 22 ; 23ClassImp(TNtuple);; 24 ; 25/** \class TNtuple; 26\ingroup tree; 27 ; 28A simple TTree restricted to a list of float variables only.; 29 ; 30Each variable goes to a separate branch.; 31 ; 32A Ntuple is created via; 33~~~ {.cpp}; 34 TNtuple(name,title,varlist,bufsize); 35~~~; 36It is filled via:; 37~~~ {.cpp}; 38 TNtuple::Fill(*x) or; 39 TNtuple::Fill(v1,v2,v3.....); 40~~~; 41*/; 42 ; 43////////////////////////////////////////////////////////////////////////////////; 44/// Default constructor for Ntuple.; 45 ; 46TNtuple::TNtuple(): TTree(); 47{; 48 fNvar = 0;; 49 fArgs = nullptr;; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Create an Ntuple.; 54///; 55/// The parameter varlist describes the list of the ntuple variables; 56/// separated by a colon:; 57///; 58/// Example: `x:y:z:energy`; 59///; 60/// For each variable in the list a separate branch is created.; 61///; 62/// NOTE:; 63/// - Use TTree to create branches with variables of different data types.; 64/// - Use TTree when the number of branches is large (> 100).; 65 ; 66TNtuple::TNtuple(const char *name, const char *title, const char *varlist, Int_t bufsize); 67 :TTree(name,title); 68{; 69 Int_t i;; 70 fNvar = 0;; 71 fArgs = nullptr;; 72 ; 73// Count number of variables (separated by :); 74 Int_t nch = strlen(varlist);; 75 if (nch == 0) return;; 76 char *vars = new char[nch+1];; 77 strlcpy(vars,varlist,nch+1);; 78 Int_t *pvars = new Int_t[nch+1];; 79 fNvar = 1;; 80 pvars[0] = 0;; 81 for (i=1;i<nch;i++) {; 82 if (vars[i] == ':') {; 83 pvars[fNvar] = i+1;; 84 vars[i] = 0;; 85 fNvar++;; 86 }; 87 }; 88 fArgs = new Float_t[fNvar];; 89 ; 90// Create one branch for each variable; 91 for (i=0;i<fNvar;i++) {; 92 Int_t pv = pvars[i];; 93 TTree::Branch(&vars[pv],&fArgs[i],&vars[pv],bufsize);; 94 }; 95 ; 96 delete [] vars;; 97 delete [] pvars;; 98}; 99 ; 100////////////////////////////////////////////////////////////////////////////////; 101/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:1827,variab,variables,1827,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,1,['variab'],['variables']
Modifiability,"212*It is recommended to use STL containers instead of TClonesArrays*.; 213 ; 214~~~ {.cpp}; 215 // clonesarray is the address of a pointer to a TClonesArray.; 216 auto branch = tree.Branch(branchname,clonesarray, bufsize, splitlevel); 217~~~; 218The TClonesArray is a direct access list of objects of the same class.; 219For example, if the TClonesArray is an array of TTrack objects,; 220this function will create one subbranch for each data member of; 221the object TTrack.; 222 ; 223\anchor fillthetree; 224## Fill the Tree; 225 ; 226A TTree instance is filled with the invocation of the TTree::Fill method:; 227~~~ {.cpp}; 228 tree.Fill(); 229~~~; 230Upon its invocation, a loop on all defined branches takes place that for each branch invokes; 231the TBranch::Fill method.; 232 ; 233\anchor addcoltoexistingtree; 234## Add a column to an already existing Tree; 235 ; 236You may want to add a branch to an existing tree. For example,; 237if one variable in the tree was computed with a certain algorithm,; 238you may want to try another algorithm and compare the results.; 239One solution is to add a new branch, fill it, and save the tree.; 240The code below adds a simple branch to an existing tree.; 241Note the kOverwrite option in the Write method, it overwrites the; 242existing tree. If it is not specified, two copies of the tree headers; 243are saved.; 244~~~ {.cpp}; 245 void tree3AddBranch() {; 246 TFile f(""tree3.root"", ""update"");; 247 ; 248 Float_t new_v;; 249 auto t3 = f->Get<TTree>(""t3"");; 250 auto newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");; 251 ; 252 Long64_t nentries = t3->GetEntries(); // read the number of entries in the t3; 253 ; 254 for (Long64_t i = 0; i < nentries; i++) {; 255 new_v = gRandom->Gaus(0, 1);; 256 newBranch->Fill();; 257 }; 258 ; 259 t3->Write("""", TObject::kOverwrite); // save only the new version of the tree; 260 }; 261~~~; 262It is not always possible to add branches to existing datasets stored in TFiles: for example,; 263these files might",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:11658,variab,variable,11658,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"2149 ; 2150 {""ssl_ca_path"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2151 {""ssl_ca_file"", MG_CONFIG_TYPE_FILE, NULL},; 2152 {""ssl_verify_depth"", MG_CONFIG_TYPE_NUMBER, ""9""},; 2153 {""ssl_default_verify_paths"", MG_CONFIG_TYPE_BOOLEAN, ""yes""},; 2154 {""ssl_cipher_list"", MG_CONFIG_TYPE_STRING, NULL},; 2155 ; 2156 /* HTTP2 requires ALPN, and anyway TLS1.2 should be considered; 2157 * as a minimum in 2020 */; 2158 {""ssl_protocol_version"", MG_CONFIG_TYPE_NUMBER, ""4""},; 2159 ; 2160 {""ssl_short_trust"", MG_CONFIG_TYPE_BOOLEAN, ""no""},; 2161 ; 2162#if defined(USE_LUA); 2163 {""lua_preload_file"", MG_CONFIG_TYPE_FILE, NULL},; 2164 {""lua_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2165 {""lua_server_page_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lp$|**.lsp$""},; 2166#if defined(MG_EXPERIMENTAL_INTERFACES); 2167 {""lua_debug"", MG_CONFIG_TYPE_STRING, NULL},; 2168#endif; 2169#endif; 2170#if defined(USE_DUKTAPE); 2171 /* The support for duktape is still in alpha version state.; 2172 * The name of this config option might change. */; 2173 {""duktape_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.ssjs$""},; 2174#endif; 2175 ; 2176#if defined(USE_WEBSOCKET); 2177 {""websocket_root"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2178#endif; 2179#if defined(USE_LUA) && defined(USE_WEBSOCKET); 2180 {""lua_websocket_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2181#endif; 2182 {""access_control_allow_origin"", MG_CONFIG_TYPE_STRING, ""*""},; 2183 {""access_control_allow_methods"", MG_CONFIG_TYPE_STRING, ""*""},; 2184 {""access_control_allow_headers"", MG_CONFIG_TYPE_STRING, ""*""},; 2185 {""access_control_allow_credentials"", MG_CONFIG_TYPE_STRING, """"},; 2186 {""error_pages"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2187#if !defined(NO_CACHING); 2188 {""static_file_max_age"", MG_CONFIG_TYPE_NUMBER, ""3600""},; 2189 {""static_file_cache_control"", MG_CONFIG_TYPE_STRING, NULL},; 2190#endif; 2191#if !defined(NO_SSL); 2192 {""strict_transport_security_max_age"", MG_CONFIG_TYPE_NUMBER, NULL},; 2193#endif; 2194 {""additional_header"", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:66908,config,config,66908,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"2150 ; 2151 {""ssl_ca_path"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2152 {""ssl_ca_file"", MG_CONFIG_TYPE_FILE, NULL},; 2153 {""ssl_verify_depth"", MG_CONFIG_TYPE_NUMBER, ""9""},; 2154 {""ssl_default_verify_paths"", MG_CONFIG_TYPE_BOOLEAN, ""yes""},; 2155 {""ssl_cipher_list"", MG_CONFIG_TYPE_STRING, NULL},; 2156 ; 2157 /* HTTP2 requires ALPN, and anyway TLS1.2 should be considered; 2158 * as a minimum in 2020 */; 2159 {""ssl_protocol_version"", MG_CONFIG_TYPE_NUMBER, ""4""},; 2160 ; 2161 {""ssl_short_trust"", MG_CONFIG_TYPE_BOOLEAN, ""no""},; 2162 ; 2163#if defined(USE_LUA); 2164 {""lua_preload_file"", MG_CONFIG_TYPE_FILE, NULL},; 2165 {""lua_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2166 {""lua_server_page_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lp$|**.lsp$""},; 2167#if defined(MG_EXPERIMENTAL_INTERFACES); 2168 {""lua_debug"", MG_CONFIG_TYPE_STRING, NULL},; 2169#endif; 2170#endif; 2171#if defined(USE_DUKTAPE); 2172 /* The support for duktape is still in alpha version state.; 2173 * The name of this config option might change. */; 2174 {""duktape_script_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.ssjs$""},; 2175#endif; 2176 ; 2177#if defined(USE_WEBSOCKET); 2178 {""websocket_root"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2179#endif; 2180#if defined(USE_LUA) && defined(USE_WEBSOCKET); 2181 {""lua_websocket_pattern"", MG_CONFIG_TYPE_EXT_PATTERN, ""**.lua$""},; 2182#endif; 2183 {""access_control_allow_origin"", MG_CONFIG_TYPE_STRING, ""*""},; 2184 {""access_control_allow_methods"", MG_CONFIG_TYPE_STRING, ""*""},; 2185 {""access_control_allow_headers"", MG_CONFIG_TYPE_STRING, ""*""},; 2186 {""access_control_allow_credentials"", MG_CONFIG_TYPE_STRING, """"},; 2187 {""error_pages"", MG_CONFIG_TYPE_DIRECTORY, NULL},; 2188#if !defined(NO_CACHING); 2189 {""static_file_max_age"", MG_CONFIG_TYPE_NUMBER, ""3600""},; 2190 {""static_file_cache_control"", MG_CONFIG_TYPE_STRING, NULL},; 2191#endif; 2192#if !defined(NO_SSL); 2193 {""strict_transport_security_max_age"", MG_CONFIG_TYPE_NUMBER, NULL},; 2194#endif; 2195 {""additional_header"", ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:66940,config,config,66940,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"218 inline bool canBeExtended() const {; 219 return (extendMode() != CanNotBeExtended) ;; 220 }; 221 /// If true PDF must provide extended likelihood term.; 222 inline bool mustBeExtended() const {; 223 return (extendMode() == MustBeExtended) ;; 224 }; 225 /// Return expected number of events to be used in calculation of extended; 226 /// likelihood.; 227 virtual double expectedEvents(const RooArgSet* nset) const ;; 228 /// Return expected number of events to be used in calculation of extended; 229 /// likelihood. This function should not be overridden, as it just redirects; 230 /// to the actual virtual function but takes a RooArgSet reference instead of; 231 /// pointer. \see expectedEvents(const RooArgSet*) const; 232 double expectedEvents(const RooArgSet& nset) const {; 233 return expectedEvents(&nset) ;; 234 }; 235 ; 236 virtual std::unique_ptr<RooAbsReal> createExpectedEventsFunc(const RooArgSet* nset) const;; 237 ; 238 // Printing interface (human readable); 239 void printValue(std::ostream& os) const override ;; 240 void printMultiline(std::ostream& os, Int_t contents, bool verbose=false, TString indent="""") const override ;; 241 ; 242 static void verboseEval(Int_t stat) ;; 243 static int verboseEval() ;; 244 ; 245 double extendedTerm(double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;; 246 double extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW2=0.0, bool doOffset=false) const;; 247 double extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset=false) const;; 248 ; 249 void setNormRange(const char* rangeName) ;; 250 const char* normRange() const {; 251 return _normRange.Length()>0 ? _normRange.Data() : nullptr ;; 252 }; 253 void setNormRangeOverride(const char* rangeName) ;; 254 ; 255 const RooAbsReal* getNormIntegral(const RooArgSet& nset) const { return getNormObj(nullptr,&nset,nullptr) ; }; 256 ; 257 virtual const RooAbsReal* getNormObj(const RooArgSet* set, const RooArgSet* iset,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:11800,extend,extendedTerm,11800,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,1,['extend'],['extendedTerm']
Modifiability,"2251; TStreamerInfoActions::AssociativeLooper::SimpleReadFloat16static void SimpleReadFloat16(TBuffer &buf, void *addr, Int_t nvalues)Definition TStreamerInfoActions.cxx:2203; TStreamerInfoActions::AssociativeLooper::ReadNumericalCollectionstatic Int_t ReadNumericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2214; TStreamerInfoActions::BitsMarkerDefinition TStreamerInfoActions.cxx:67; TStreamerInfoActions::BitsMarker::Value_tUInt_t Value_tDefinition TStreamerInfoActions.cxx:68; TStreamerInfoActions::ConvertBasicType< BitsMarker, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1427; TStreamerInfoActions::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1457; TStreamerInfoActions::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1444; TStreamerInfoActions::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1414; TStreamerInfoActions::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1415; TStreamerInfoActions::GenericLooper::ConvertBasicType< BitsMarker, To, Generic >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2447; TStreamerInfoActions::GenericLooper::ConvertBasicType< NoFactorMarker< From >, To, Converter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2504; TStreamerInfoActions::GenericLooper::ConvertBasicType< WithFactorMarker< From >, To, Converter >::Actionstatic Int_t A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:264975,config,config,264975,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"226 fX[0] = x;; 227 return TMath::Power(fX[0] - fX0, fN) * TMath::Abs(fFunc->EvalPar(fX, nullptr));; 228 }; 229 ; 230 TF1 *fFunc;; 231 mutable Double_t fX[1];; 232 const double *fPar;; 233 Bool_t fAbsVal;; 234 Double_t fN;; 235 Double_t fX0;; 236};; 237 ; 238////////////////////////////////////////////////////////////////////////////////; 239/** \class TF1; 240 \ingroup Functions; 241 \brief 1-Dim function class; 242 ; 243 ; 244## TF1: 1-Dim function class; 245 ; 246A TF1 object is a 1-Dim function defined between a lower and upper limit.; 247The function may be a simple function based on a TFormula expression or a precompiled user function.; 248The function may have associated parameters.; 249TF1 graphics function is via the TH1 and TGraph drawing functions.; 250 ; 251The following types of functions can be created:; 252 ; 2531. [Expression using variable x and no parameters](\ref F1); 2542. [Expression using variable x with parameters](\ref F2); 2553. [Lambda Expression with variable x and parameters](\ref F3); 2564. [A general C function with parameters](\ref F4); 2575. [A general C++ function object (functor) with parameters](\ref F5); 2586. [A member function with parameters of a general C++ class](\ref F6); 259 ; 260 ; 261 ; 262\anchor F1; 263### 1 - Expression using variable x and no parameters; 264 ; 265#### Case 1: inline expression using standard C++ functions/operators; 266 ; 267Begin_Macro(source); 268{; 269 auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; 270 fa1->Draw();; 271}; 272End_Macro; 273 ; 274#### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters; 275 ; 276 ; 277Begin_Macro(source); 278{; 279 auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; 280 fa2->Draw();; 281}; 282End_Macro; 283 ; 284#### Case 3: inline expression using a user defined CLING function by name; 285 ; 286~~~~{.cpp}; 287Double_t myFunc(double x) { return x+sin(x); }; 288....; 289auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; 290fa3->Draw();; 291~~~~; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:7904,variab,variable,7904,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"2299}; 2300 ; 2301#else /* STOP_FLAG_NEEDS_LOCK */; 2302 ; 2303typedef int volatile stop_flag_t;; 2304#define STOP_FLAG_IS_ZERO(f) ((*(f)) == 0); 2305#define STOP_FLAG_IS_TWO(f) ((*(f)) == 2); 2306#define STOP_FLAG_ASSIGN(f, v) ((*(f)) = (v)); 2307 ; 2308#endif /* STOP_FLAG_NEEDS_LOCK */; 2309 ; 2310 ; 2311struct mg_context {; 2312 ; 2313 /* Part 1 - Physical context:; 2314 * This holds threads, ports, timeouts, ...; 2315 * set for the entire server, independent from the; 2316 * addressed hostname.; 2317 */; 2318 ; 2319 /* Connection related */; 2320 int context_type; /* See CONTEXT_* above */; 2321 ; 2322 struct socket *listening_sockets;; 2323 struct mg_pollfd *listening_socket_fds;; 2324 unsigned int num_listening_sockets;; 2325 ; 2326 struct mg_connection *worker_connections; /* The connection struct, pre-; 2327 * allocated for each worker */; 2328 ; 2329#if defined(USE_SERVER_STATS); 2330 volatile ptrdiff_t active_connections;; 2331 volatile ptrdiff_t max_active_connections;; 2332 volatile ptrdiff_t total_connections;; 2333 volatile ptrdiff_t total_requests;; 2334 volatile int64_t total_data_read;; 2335 volatile int64_t total_data_written;; 2336#endif; 2337 ; 2338 /* Thread related */; 2339 stop_flag_t stop_flag; /* Should we stop event loop */; 2340 pthread_mutex_t thread_mutex; /* Protects client_socks or queue */; 2341 ; 2342 pthread_t masterthreadid; /* The master thread ID */; 2343 unsigned int; 2344 cfg_worker_threads; /* The number of configured worker threads. */; 2345 pthread_t *worker_threadids; /* The worker thread IDs */; 2346 unsigned long starter_thread_idx; /* thread index which called mg_start */; 2347 ; 2348 /* Connection to thread dispatching */; 2349#if defined(ALTERNATIVE_QUEUE); 2350 struct socket *client_socks;; 2351 void **client_wait_events;; 2352#else; 2353 struct socket *squeue; /* Socket queue (sq) : accepted sockets waiting for a; 2354 worker thread */; 2355 volatile int sq_head; /* Head of the socket queue */; 2356 volatile int sq_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:72477,config,configured,72477,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"2300}; 2301 ; 2302#else /* STOP_FLAG_NEEDS_LOCK */; 2303 ; 2304typedef int volatile stop_flag_t;; 2305#define STOP_FLAG_IS_ZERO(f) ((*(f)) == 0); 2306#define STOP_FLAG_IS_TWO(f) ((*(f)) == 2); 2307#define STOP_FLAG_ASSIGN(f, v) ((*(f)) = (v)); 2308 ; 2309#endif /* STOP_FLAG_NEEDS_LOCK */; 2310 ; 2311 ; 2312struct mg_context {; 2313 ; 2314 /* Part 1 - Physical context:; 2315 * This holds threads, ports, timeouts, ...; 2316 * set for the entire server, independent from the; 2317 * addressed hostname.; 2318 */; 2319 ; 2320 /* Connection related */; 2321 int context_type; /* See CONTEXT_* above */; 2322 ; 2323 struct socket *listening_sockets;; 2324 struct mg_pollfd *listening_socket_fds;; 2325 unsigned int num_listening_sockets;; 2326 ; 2327 struct mg_connection *worker_connections; /* The connection struct, pre-; 2328 * allocated for each worker */; 2329 ; 2330#if defined(USE_SERVER_STATS); 2331 volatile ptrdiff_t active_connections;; 2332 volatile ptrdiff_t max_active_connections;; 2333 volatile ptrdiff_t total_connections;; 2334 volatile ptrdiff_t total_requests;; 2335 volatile int64_t total_data_read;; 2336 volatile int64_t total_data_written;; 2337#endif; 2338 ; 2339 /* Thread related */; 2340 stop_flag_t stop_flag; /* Should we stop event loop */; 2341 pthread_mutex_t thread_mutex; /* Protects client_socks or queue */; 2342 ; 2343 pthread_t masterthreadid; /* The master thread ID */; 2344 unsigned int; 2345 cfg_worker_threads; /* The number of configured worker threads. */; 2346 pthread_t *worker_threadids; /* The worker thread IDs */; 2347 unsigned long starter_thread_idx; /* thread index which called mg_start */; 2348 ; 2349 /* Connection to thread dispatching */; 2350#if defined(ALTERNATIVE_QUEUE); 2351 struct socket *client_socks;; 2352 void **client_wait_events;; 2353#else; 2354 struct socket *squeue; /* Socket queue (sq) : accepted sockets waiting for a; 2355 worker thread */; 2356 volatile int sq_head; /* Head of the socket queue */; 2357 volatile int sq_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:72509,config,configured,72509,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"235#endif; 1236 x++[0] = c[0];; 1237 } else { // It is OK, copy result; 1238 int lp = strlen(p);; 1239 if (lp >= kBufSize) {; 1240 // make sure lx will be >= kBufSize (see below); 1241 strlcpy(x, p, kBufSize);; 1242 x += kBufSize;; 1243 break;; 1244 }; 1245 strcpy(x,p);; 1246 x += lp;; 1247 c = (b==c+1) ? e-1 : e;; 1248 }; 1249 }; 1250 }; 1251 ; 1252 x[0] = 0; lx = x - out;; 1253 if (ier && iter < 3) { strlcpy(inp, out, kBufSize); goto again; }; 1254 ncopy = (lx >= kBufSize) ? kBufSize-1 : lx;; 1255 xname[0] = 0; strncat(xname, out, ncopy);; 1256 ; 1257 delete[] buff;; 1258 ; 1259 if (ier || ncopy != lx) {; 1260 ::Error(""TSystem::ExpandFileName"", ""input: %s, output: %s"", fname, xname);; 1261 return kTRUE;; 1262 }; 1263 ; 1264 return kFALSE;; 1265}; 1266 ; 1267 ; 1268////////////////////////////////////////////////////////////////////////////////; 1269/// Expand a pathname getting rid of special shell characters like ~.$, etc.; 1270/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1271/// environment variables in a pathname. If compatibility is not an issue; 1272/// you can use on Unix directly $XXX.; 1273 ; 1274Bool_t TSystem::ExpandPathName(TString&); 1275{; 1276 return kFALSE;; 1277}; 1278 ; 1279////////////////////////////////////////////////////////////////////////////////; 1280/// Expand a pathname getting rid of special shell characters like ~.$, etc.; 1281/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1282/// environment variables in a pathname. If compatibility is not an issue; 1283/// you can use on Unix directly $XXX. The user must delete returned string.; 1284 ; 1285char *TSystem::ExpandPathName(const char *); 1286{; 1287 return nullptr;; 1288}; 1289 ; 1290////////////////////////////////////////////////////////////////////////////////; 1291/// Returns FALSE if one can access a file using the specified access mode.; 1292/// The file name must not contain any special shell characters line ~ or $,; 1293/// in t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:39168,variab,variables,39168,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variables']
Modifiability,"2378 }; 2379 ; 2380 // In case of a Cling Error check components which are not found in Cling; 2381 // check that all formula components are matched otherwise emit an error; 2382 if (!fClingInitialized && !fLazyInitialization) {; 2383 //Bool_t allFunctorsMatched = false;; 2384 for (list<TFormulaFunction>::iterator it = fFuncs.begin(); it != fFuncs.end(); ++it) {; 2385 // functions are now by default always not checked; 2386 if (!it->fFound && !it->IsFuncCall()) {; 2387 //allFunctorsMatched = false;; 2388 if (it->GetNargs() == 0); 2389 Error(""ProcessFormula"", ""\""%s\"" has not been matched in the formula expression"", it->GetName());; 2390 else; 2391 Error(""ProcessFormula"", ""Could not find %s function with %d argument(s)"", it->GetName(), it->GetNargs());; 2392 }; 2393 }; 2394 Error(""ProcessFormula"",""Formula \""%s\"" is invalid !"", GetExpFormula().Data() );; 2395 fReadyToExecute = false;; 2396 }; 2397 ; 2398 // clean up un-used default variables in case formula is valid; 2399 //if (fClingInitialized && fReadyToExecute) {; 2400 //don't check fClingInitialized in case of lazy execution; 2401 if (fReadyToExecute) {; 2402 auto itvar = fVars.begin();; 2403 // need this loop because after erase change iterators; 2404 do {; 2405 if (!itvar->second.fFound) {; 2406 // std::cout << ""Erase variable "" << itvar->first << std::endl;; 2407 itvar = fVars.erase(itvar);; 2408 } else; 2409 itvar++;; 2410 } while (itvar != fVars.end());; 2411 }; 2412}; 2413 ; 2414////////////////////////////////////////////////////////////////////////////////; 2415/// Fill map with parametrized functions; 2416 ; 2417void TFormula::FillParametrizedFunctions(map<pair<TString, Int_t>, pair<TString, TString>> &functions); 2418{; 2419 // map< pair<TString,Int_t> ,pair<TString,TString> > functions;; 2420 functions.insert(; 2421 make_pair(make_pair(""gaus"", 1), make_pair(""[0]*exp(-0.5*(({V0}-[1])/[2])*(({V0}-[1])/[2]))"",; 2422 ""[0]*exp(-0.5*(({V0}-[1])/[2])*(({V0}-[1])/[2]))/(sqrt(2*pi)*[2])"")));; 2423 functions.inser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:92193,variab,variables,92193,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"24);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2010-10-01 15:52; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrumTransform.html:22769,enhance,enhanceCoeff,22769,root/html528/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html528/TSpectrumTransform.html,5,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,"24);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-07-04 15:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpectrumTransform.html:22838,enhance,enhanceCoeff,22838,root/html530/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html530/TSpectrumTransform.html,5,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,"24);�� ; ��; h->Draw(""L"");�� ; �� TSpectrum *s = new; TSpectrum();; �� TSpectrumTransform *t =; new TSpectrumTransform(4096);; �� t->SetTransformType(t->kTransformCos,0);; �� t->SetRegion(0,; 1024);; ��; t->SetEnhanceCoeff(2);; ��; t->Enhance(source,dest);������� ; �� for (i = 0; i < nbins; i++) d->SetBinContent(i +; 1,dest[i]);; ��; d->SetLineColor(kRed);�� ; �� d->Draw(""SAME; L"");; }. void SetTransformType(Int_t transType, Int_t degree). SETTER FUNCION. This function sets the following parameters for transform:; -transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); -degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms. void SetRegion(Int_t xmin, Int_t xmax). SETTER FUNCION. This function sets the filtering or enhancement region:; -xmin, xmax. void SetDirection(Int_t direction). SETTER FUNCION. This function sets the direction of the transform:; -direction (forward or inverse). void SetFilterCoeff(Float_t filterCoeff). SETTER FUNCION. This function sets the filter coefficient:; -filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. void SetEnhanceCoeff(Float_t enhanceCoeff). SETTER FUNCION. This function sets the enhancement coefficient:; -enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. TSpectrumTransform(). » Author: Miroslav Morhac 25/09/06 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/spectrum:$Id: TSpectrumTransform.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrumTransform.html:22838,enhance,enhanceCoeff,22838,root/html532/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html532/TSpectrumTransform.html,10,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,24.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84198,config,configuration,84198,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"242 ns/call; TRandom2 37 ns/call; TRandom3 45 ns/call. The following basic Random distributions are provided:. -Exp(tau); -Integer(imax); -Gaus(mean,sigma); -Rndm(); -Uniform(x1); -Landau(mpv,sigma); -Poisson(mean); -Binomial(ntot,prob). Random numbers distributed according to 1-d, 2-d or 3-d distributions. contained in TF1, TF2 or TF3 objects.; For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x); you can do :; TF1 *f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10);; double r = f1->GetRandom();; or you can use the UNURAN package. You need in this case to initialize UNURAN; to the function you would like to generate.; TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();. The techniques of using directly a TF1,2 or 3 function is powerful and; can be used to generate numbers in the defined range of the function.; Getting a number from a TF1,2,3 function is also quite fast.; UNURAN is a powerful and flexible tool which containes various methods for; generate random numbers for continuous distributions of one and multi-dimension.; It requires some set-up (initialization) phase and can be very fast when the distribution; parameters are not changed for every call. The following table shows some timings (in nanosecond/call); for basic functions, TF1 functions and using UNURAN obtained running; the tutorial math/testrandom.C; Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running; Linux SLC4 64 bit and compiled with gcc 3.4. Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 96.000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRandom.html:2270,flexible,flexible,2270,root/html528/TRandom.html,https://root.cern,https://root.cern/root/html528/TRandom.html,10,['flexible'],['flexible']
Modifiability,"2466/// myhist->ProjectionY("" "",firstxbin,lastxbin,""[-cutg]"");; 2467/// It is possible to apply several cuts:; 2468/// myhist->ProjectionY("" "",firstxbin,lastxbin,""[cutg1,cutg2]"");; 2469///; 2470/// NOTE that if a TH1D named ""name"" exists in the current directory or pad and having; 2471/// a compatible axis, the histogram is reset and filled again with the projected contents of the TH2.; 2472/// In the case of axis incompatibility, an error is reported and a NULL pointer is returned.; 2473///; 2474/// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection.; 2475 ; 2476TH1D *TH2::ProjectionY(const char *name, Int_t firstxbin, Int_t lastxbin, Option_t *option) const; 2477{; 2478 return DoProjection(false, name, firstxbin, lastxbin, option);; 2479}; 2480 ; 2481 ; 2482////////////////////////////////////////////////////////////////////////////////; 2483/// Replace current statistics with the values in array stats; 2484 ; 2485void TH2::PutStats(Double_t *stats); 2486{; 2487 TH1::PutStats(stats);; 2488 fTsumwy = stats[4];; 2489 fTsumwy2 = stats[5];; 2490 fTsumwxy = stats[6];; 2491}; 2492 ; 2493 ; 2494////////////////////////////////////////////////////////////////////////////////; 2495/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the median); 2498/// An approximate error for the quantile is computed assuming that the distribution in; 2499/// the other variable is normal. According to this approximate formula the error on the quantile is; 2500/// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; 2501/// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; 2502/// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; 2503/// a norm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:102280,variab,variable,102280,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"250 Int_t nbranches = branches->GetEntriesFast();; 2251 TBranchElement *lastbranch = this;; 2252 ; 2253 TClass *currentClass = fBranchClass;; 2254 auto currentVersion = fClassVersion;; 2255 if (toplevel) {; 2256 // Note: Fragile/wrong when using conversion StreamerInfo?; 2257 currentClass = info->GetClass();; 2258 currentVersion = info->GetClassVersion();; 2259 }; 2260 ; 2261 // First find the first branch corresponding to the same class as 'this'; 2262 // branch; 2263 Int_t index = branches->IndexOf(this);; 2264 Int_t firstindex = 0;; 2265 Int_t lastindex = nbranches - 1;; 2266 if (index >= 0) {; 2267 TString fullname( GetFullName() );; 2268 Ssiz_t lastdot = fullname.Last('.');; 2269 if (lastdot == TString::kNPOS) {; 2270 // No prefix or index, thus this is a first level branch; 2271 TBranchElement* subbranch = (TBranchElement*)branches->At(0);; 2272 if (!subbranch->fInfo); 2273 subbranch->SetupInfo();; 2274 } else {; 2275 TString &thisprefix = fullname.Remove(lastdot + 1); // Mod fullname and 'rename' the variable.; 2276 for(Int_t i = index - 1; i >= 0; --i) {; 2277 TBranchElement* subbranch = (TBranchElement*)branches->At(i);; 2278 TString subbranch_name(subbranch->GetFullName());; 2279 if ( ! subbranch_name.BeginsWith(thisprefix)) {; 2280 // We moved to another data member (of the enclosing class); 2281 firstindex = i + 1;; 2282 break;; 2283 }; 2284 if (!subbranch->fInfo); 2285 subbranch->SetupInfo();; 2286 }; 2287 for(Int_t i = index; i < nbranches; ++i) {; 2288 TBranchElement* subbranch = (TBranchElement*)branches->At(i);; 2289 TString subbranch_name(subbranch->GetFullName());; 2290 if ( ! subbranch_name.BeginsWith(thisprefix)) {; 2291 lastindex = i - 1;; 2292 break;; 2293 }; 2294 }; 2295 }; 2296 } else {; 2297 // Case of a top level branch or 'empty node' (object marker for split sub-object); 2298 TString fullname( GetFullName() );; 2299 Ssiz_t lastdot = fullname.Last('.');; 2300 if (lastdot != TString::kNPOS) {; 2301 TString &thisprefix = fullname.Remove(last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:81526,variab,variable,81526,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['variab'],['variable']
Modifiability,254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.13,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97075,config,configuration,97075,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"26 if (callback_ret < 0) {; 16727 /* Callback exists and returns <0: Initializing failed. */; 16728 mg_cry_ctx_internal(phys_ctx,; 16729 ""external_ssl_ctx callback returned error: %i"",; 16730 callback_ret);; 16731 return 0;; 16732 } else if (callback_ret > 0) {; 16733 /* Callback exists and returns >0: Initializing complete,; 16734 * civetweb should not modify the SSL context. */; 16735 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16736 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16737 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16738 return 0;; 16739 }; 16740 return 1;; 16741 }; 16742 /* If the callback does not exist or return 0, civetweb must initialize; 16743 * the SSL context. Handle ""domain"" callback next. */; 16744 ; 16745 /* Check for external domain SSL_CTX callback. */; 16746 callback_ret = (phys_ctx->callbacks.external_ssl_ctx_domain == NULL); 16747 ? 0; 16748 : (phys_ctx->callbacks.external_ssl_ctx_domain(; 16749 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16750 &ssl_ctx,; 16751 phys_ctx->user_data));; 16752 ; 16753 if (callback_ret < 0) {; 16754 /* Callback < 0: Error. Abort init. */; 16755 mg_cry_ctx_internal(; 16756 phys_ctx,; 16757 ""external_ssl_ctx_domain callback returned error: %i"",; 16758 callback_ret);; 16759 return 0;; 16760 } else if (callback_ret > 0) {; 16761 /* Callback > 0: Consider init done. */; 16762 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16763 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16764 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16765 return 0;; 16766 }; 16767 return 1;; 16768 }; 16769 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16770 * 0, CivetWeb should continue initializing SSL */; 16771 ; 16772 /* If PEM file is not specified and the init_ssl callbacks; 16773 * are not specified, setup will fail. */; 16774 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16775 && (phys_ctx->callbacks.init_ssl == NULL); 16776 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16777 /* No certificate and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:497053,config,config,497053,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"268 private:; 269 friend class MethodCategory;; 270 friend class MethodCompositeBase;; 271 void WriteStateToXML ( void* parent ) const;; 272 void ReadStateFromXML ( void* parent );; 273 void WriteStateToStream ( std::ostream& tf ) const; // needed for MakeClass; 274 void WriteVarsToStream ( std::ostream& tf, const TString& prefix = """" ) const; // needed for MakeClass; 275 ; 276 ; 277 public: // these two need to be public, they are used to read in-memory weight-files; 278 void ReadStateFromStream ( std::istream& tf ); // backward compatibility; 279 void ReadStateFromStream ( TFile& rf ); // backward compatibility; 280 void ReadStateFromXMLString( const char* xmlstr ); // for reading from memory; 281 ; 282 private:; 283 // the variable information; 284 void AddVarsXMLTo ( void* parent ) const;; 285 void AddSpectatorsXMLTo ( void* parent ) const;; 286 void AddTargetsXMLTo ( void* parent ) const;; 287 void AddClassesXMLTo ( void* parent ) const;; 288 void ReadVariablesFromXML ( void* varnode );; 289 void ReadSpectatorsFromXML( void* specnode);; 290 void ReadTargetsFromXML ( void* tarnode );; 291 void ReadClassesFromXML ( void* clsnode );; 292 void ReadVarsFromStream ( std::istream& istr ); // backward compatibility; 293 ; 294 public:; 295 // ---------------------------------------------------------------------------; 296 ; 297 // write evaluation histograms into target file; 298 virtual void WriteEvaluationHistosToFile(Types::ETreeType treetype);; 299 ; 300 // write classifier-specific monitoring information to target file; 301 virtual void WriteMonitoringHistosToFile() const;; 302 ; 303 // ---------- public evaluation methods --------------------------------------; 304 ; 305 // individual initialization for testing of each method; 306 // overload this one for individual initialisation of the testing,; 307 // it is then called automatically within the global ""TestInit""; 308 ; 309 // variables (and private member functions) for the Evaluation:; 310 // get the efficiency.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:12003,variab,variables,12003,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['variab'],['variables']
Modifiability,"27 if (callback_ret < 0) {; 16728 /* Callback exists and returns <0: Initializing failed. */; 16729 mg_cry_ctx_internal(phys_ctx,; 16730 ""external_ssl_ctx callback returned error: %i"",; 16731 callback_ret);; 16732 return 0;; 16733 } else if (callback_ret > 0) {; 16734 /* Callback exists and returns >0: Initializing complete,; 16735 * civetweb should not modify the SSL context. */; 16736 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16737 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16738 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16739 return 0;; 16740 }; 16741 return 1;; 16742 }; 16743 /* If the callback does not exist or return 0, civetweb must initialize; 16744 * the SSL context. Handle ""domain"" callback next. */; 16745 ; 16746 /* Check for external domain SSL_CTX callback. */; 16747 callback_ret = (phys_ctx->callbacks.external_ssl_ctx_domain == NULL); 16748 ? 0; 16749 : (phys_ctx->callbacks.external_ssl_ctx_domain(; 16750 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16751 &ssl_ctx,; 16752 phys_ctx->user_data));; 16753 ; 16754 if (callback_ret < 0) {; 16755 /* Callback < 0: Error. Abort init. */; 16756 mg_cry_ctx_internal(; 16757 phys_ctx,; 16758 ""external_ssl_ctx_domain callback returned error: %i"",; 16759 callback_ret);; 16760 return 0;; 16761 } else if (callback_ret > 0) {; 16762 /* Callback > 0: Consider init done. */; 16763 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16764 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16765 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16766 return 0;; 16767 }; 16768 return 1;; 16769 }; 16770 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16771 * 0, CivetWeb should continue initializing SSL */; 16772 ; 16773 /* If PEM file is not specified and the init_ssl callbacks; 16774 * are not specified, setup will fail. */; 16775 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16776 && (phys_ctx->callbacks.init_ssl == NULL); 16777 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16778 /* No certificate and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:497086,config,config,497086,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,28 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81030,config,configuration,81030,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"286 if (opt.Contains(""M"")) flag = ""M"";; 287 if (opt.Contains(""P"")) flag = ""P"";; 288 if (opt.Contains(""EX"")) flag = ""EX"";; 289 ; 290 if (!opt.Contains(""K"")) {; 291 if (fgFFT){; 292 Int_t ndiff = 0;; 293 if (fgFFT->GetNdim()!=ndim || strcmp(fgFFT->GetType(),""R2R"")!=0); 294 ndiff++;; 295 else {; 296 Int_t *ncurrent = fgFFT->GetN();; 297 for (Int_t i=0; i<ndim; i++) {; 298 if (n[i] != ncurrent[i]); 299 ndiff++;; 300 }; 301 ; 302 }; 303 if (ndiff>0) {; 304 delete fgFFT;; 305 fgFFT = nullptr;; 306 }; 307 }; 308 }; 309 TVirtualFFT *fft = nullptr;; 310 ; 311 R__LOCKGUARD(gROOTMutex);; 312 ; 313 if (!fgFFT || opt.Contains(""K"")) {; 314 TPluginHandler *h;; 315 TString pluginname;; 316 if (fgDefault.Length()==0) fgDefault=""fftw"";; 317 if (strcmp(fgDefault.Data(),""fftw"")==0) {; 318 pluginname = ""fftwr2r"";; 319 if ((h=gROOT->GetPluginManager()->FindHandler(""TVirtualFFT"", pluginname))) {; 320 if (h->LoadPlugin()==-1){; 321 ::Error(""TVirtualFFT::SineCosine"", ""handler not found"");; 322 return nullptr;; 323 }; 324 fft = (TVirtualFFT*)h->ExecPlugin(3, ndim, n, kFALSE);; 325 if (!fft) {; 326 ::Error(""TVirtualFFT::SineCosine"", ""plugin failed to create TVirtualFFT object"");; 327 return nullptr;; 328 }; 329 fft->Init(flag, 0, r2rkind);; 330 if (!opt.Contains(""K"")); 331 fgFFT = fft;; 332 return fft;; 333 } else {; 334 ::Error(""TVirtualFFT::SineCosine"", ""handler not found"");; 335 return nullptr;; 336 }; 337 }; 338 }; 339 ; 340 //if (fgFFT->GetTransformFlag()!=flag); 341 fgFFT->Init(flag,0, r2rkind);; 342 return fgFFT;; 343}; 344 ; 345////////////////////////////////////////////////////////////////////////////////; 346/// static: return current fgFFT; 347 ; 348TVirtualFFT* TVirtualFFT::GetCurrentTransform(); 349{; 350 if (fgFFT); 351 return fgFFT;; 352 else{; 353 ::Warning(""TVirtualFFT::GetCurrentTransform"", ""fgFFT is not defined yet"");; 354 return nullptr;; 355 }; 356}; 357 ; 358////////////////////////////////////////////////////////////////////////////////; 359/// static: set the current t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html:11813,plugin,pluginname,11813,doc/master/TVirtualFFT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFFT_8cxx_source.html,3,['plugin'],"['plugin', 'pluginname']"
Modifiability,"2::MinosErrorMinos(unsigned int, unsigned int maxcalls = 0, double toler = 0.1) const; ROOT::Minuit2::MnMinosMnMinos(const ROOT::Minuit2::MnMinos&); ROOT::Minuit2::MnMinosMnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, unsigned int stra = 1); ROOT::Minuit2::MnMinosMnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, const ROOT::Minuit2::MnStrategy& stra); pair<double,double>operator()(unsigned int, unsigned int maxcalls = 0, double toler = 0.1) const; doubleUpper(unsigned int, unsigned int maxcalls = 0, double toler = 0.1) const; ROOT::Minuit2::MnCrossUpval(unsigned int, unsigned int maxcalls = 0, double toler = 0.1) const. protected:. ROOT::Minuit2::MnCrossFindCrossValue(int dir, unsigned int, unsigned int maxcalls, double toler) const. Data Members; private:. const ROOT::Minuit2::FCNBase&fFCN; const ROOT::Minuit2::FunctionMinimum&fMinimum; ROOT::Minuit2::MnStrategyfStrategy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, unsigned int stra = 1); construct from FCN + Minimum + strategy. MnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, const ROOT::Minuit2::MnStrategy& stra); construct from FCN + Minimum + strategy. ~MnMinos(); {}. std::pair<double,double> operator()(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const; returns the negative (pair.first) and the positive (pair.second); Minos Error of the Parameter. double Lower(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const; calculate one side (negative or positive Error) of the Parameter; give as input (optionally) maxcalls and tolerance. double Upper(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const. MnCross Loval(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const. MnCross Upval(unsigned int , unsigned int maxcalls",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__MnMinos.html:1680,Inherit,Inheritance,1680,root/html532/ROOT__Minuit2__MnMinos.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__MnMinos.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"2::TH2 for explanation of parameters) ;  ;  TH2I (const TH2I &h2i);  Copy constructor. ;  ;  ~TH2I () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2I & operator= (const TH2I &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y, Double_t w);  Increment cell defined by x,y by a weight w. ;  ; void FillN (Int_t ntimes, const Double_t *x, const Double_t *y, const Double_t *w, Int_t stride=1) override;  Fill a 2-D histogram with an array of values and weights. ;  ; void FillN (Int_t, const Double_t *, const Double_t *, Int_t) override;  Fill this his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2I.html:2387,inherit,inherited,2387,doc/master/classTH2I.html,https://root.cern,https://root.cern/doc/master/classTH2I.html,1,['inherit'],['inherited']
Modifiability,"2::TH2 for explanation of parameters) ;  ;  TH2L (const TH2L &h2l);  Copy constructor. ;  ;  ~TH2L () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2L & operator= (const TH2L &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y, Double_t w);  Increment cell defined by x,y by a weight w. ;  ; void FillN (Int_t ntimes, const Double_t *x, const Double_t *y, const Double_t *w, Int_t stride=1) override;  Fill a 2-D histogram with an array of values and weights. ;  ; void FillN (Int_t, const Double_t *, const Double_t *, Int_t) override;  Fill this his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:2389,inherit,inherited,2389,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,1,['inherit'],['inherited']
Modifiability,"2; kLanczos3; kLanczos5; kLanczos8; kTrim; };; enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; Int_tfFcnCallnumber of external function calls (RootFinder); TMVA::Volume*fHelpVolumeauxiliary variable; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Float_t>fAverageRMSaverage RMS of signal and background; TMVA::BinarySearchTree*fBinaryTreebinary tree; vector<Float_t>*fDeltasize of volume; Float_tfDeltaFracfraction of RMS; Double_tfGaussSigmasize of Gauss in adaptive volume ; Double_tfGaussSigmaNormsize of Gauss in adaptive volume (normalised to dimensions); Float_tfInitialScaleinitial scale for adaptive volume; Bool_tfInitializedVolumeEleis volume element initialized ?; TMVA::MethodPDERS::EKernelEstimatorfKernelEstimator; TStringfKernelStringoption kernel estimator; Float_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodPDERS.html:17852,variab,variable,17852,root/html528/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodPDERS.html,2,['variab'],"['variable', 'variables']"
Modifiability,"2D->fX ;  ; Double_t * fXN;  ! fGraph2D vectors normalized of size fNpoints ;  ; Double_t fXNmax;  ! Maximum value of fXN ;  ; Double_t fXNmin;  ! Minimum value of fXN ;  ; Double_t fXoffset;  ! ;  ; Double_t fXScaleFactor;  ! ;  ; Double_t * fY;  ! Pointer to fGraph2D->fY ;  ; Double_t * fYN;  ! fGraph2D vectors normalized of size fNpoints ;  ; Double_t fYNmax;  ! Maximum value of fYN ;  ; Double_t fYNmin;  ! Minimum value of fYN ;  ; Double_t fYoffset;  ! Parameters used to normalize user data ;  ; Double_t fYScaleFactor;  ! ;  ; Double_t * fZ;  ! Pointer to fGraph2D->fZ ;  ; Double_t fZout;  ! Histogram bin height for points lying outside the convex hull ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGraphDelaunay (const TGraphDelaunay &)=delete;  ; TGraphDelaunay & operator= (const TGraphDelaunay &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGraphDelaunay.h>. Inheritance diagram for TGraphDelaunay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGraphDelaunay() [1/3]. TGraphDelaunay::TGraphDelaunay ; (; const TGraphDelaunay & ; ). privatedelete . ◆ TGraphDelaunay() [2/3]. TGraphDelauna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay.html:15205,inherit,inherited,15205,doc/master/classTGraphDelaunay.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay.html,1,['inherit'],['inherited']
Modifiability,"2Poly is a TList of TH2PolyBin objects with methods to manipulate them.; Bins are defined using one of the AddBin() methods. The bin definition should be done before filling.; The histogram can be filled with Fill(Double_t x, Double_t y, Double_t w) . w is the weight. If no weight is specified, it is assumed to be 1.; Not all histogram's area need to be binned. Filling an area without bins, will falls into the overflows. Adding a bin is not retroactive; it doesn't affect previous fillings. A Fill() call, that was previously ignored due to the lack of a bin at the specified location, is not reconsidered when that location is binned later.; If there are two overlapping bins, the first one in the list will be incremented by Fill().; The histogram may automatically extends its limits if a bin outside the histogram limits is added. This is done when the default constructor (with no arguments) is used. It generates a histogram with no limits along the X and Y axis. Adding bins to it will extend it up to a proper size.; TH2Poly implements a partitioning algorithm to speed up bins' filling (see the ""Partitioning Algorithm"" section for details). The partitioning algorithm divides the histogram into regions called cells. The bins that each cell intersects are recorded in an array of TLists. When a coordinate in the histogram is to be filled; the method (quickly) finds which cell the coordinate belongs. It then only loops over the bins intersecting that cell to find the bin the input coordinate corresponds to. The partitioning of the histogram is updated continuously as each bin is added. The default number of cells on each axis is 25. This number could be set to another value in the constructor or adjusted later by calling the ChangePartition(Int_t, Int_t) method. The partitioning algorithm is considerably faster than the brute force algorithm (i.e. checking if each bin contains the input coordinates), especially if the histogram is to be filled many times.; The following ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:1735,extend,extend,1735,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['extend'],['extend']
Modifiability,"2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3(); Default constructor. TH3(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3(const TH3& ); Copy constructor.; The list of functions is not copied. (Use Clone if needed). ~TH3(); Destructor. void Copy(TObject& hnew) const; Copy. Int_t BufferEmpty(Int_t action = 0); Fill histogram with all entries in the buffer.; action = -1 histogram is reset and refilled from the buffer (called by THistPainter::Paint); action = 0 histogram is filled from the buffer; action = 1 histogram is filled and buffer is deleted; The buffer is automatically deleted when the number of entries; in the buffer is greater than the number of entries in the histogram. Int_t BufferF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH3.html:25488,variab,variable,25488,root/html528/TH3.html,https://root.cern,https://root.cern/root/html528/TH3.html,6,['variab'],['variable']
Modifiability,"2Transform::(anonymous)kTransformWalshHaar; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfDegreedegree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms; Int_tfDirectionforward or inverse transform; Double_tfEnhanceCoeffmultiplication coefficient applied in enhanced region;; Double_tfFilterCoeffvalue set in the filtered region; Int_tfSizeXx length of transformed data; Int_tfSizeYy length of transformed data; Int_tfTransformTypetype of transformation (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); Int_tfXmaxlast channel x of filtered or enhanced region; Int_tfXminfirst channel x of filtered or enhanced region; Int_tfYmaxlast channel y of filtered or enhanced region; Int_tfYminfirst channel y of filtered or enhanced region. Class Charts. Inheritance Chart:. TObject. ←; TSpectrum2Transform. Function documentation; TSpectrum2Transform(); default constructor. TSpectrum2Transform(Int_t sizeX, Int_t sizeY); the constructor creates TSpectrum2Transform object. Its sizes must be > than zero and must be power of 2.; It sets default transform type to be Cosine transform. Transform parameters can be changed using setter functions. ~TSpectrum2Transform(); destructor. void Haar(Double_t* working_space, Int_t num, Int_t direction). AUXILIARY FUNCION. This function calculates Haar transform of a part of data; Function parameters:; -working_space-pointer to vector of transformed data; -num-length of processed data; -direction-forward or inverse transform. void Walsh(Double_t* working_space, Int_t num). AUXILIARY FUNCION. This function calculates Walsh transform of a part of data; Function parameters:; -working_space-pointer to vector of transformed data; -num-length of processed data. void BitReverse(Double_t* working_space, Int_t num). AUXILI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Transform.html:9735,Inherit,Inheritance,9735,root/html602/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Transform.html,2,['Inherit'],['Inheritance']
Modifiability,"2X (std::vector< Float_t > &, const std::vector< Float_t > &, Int_t cls) const;  Perform the back-transformation from the principal components pc, and return x It's the users responsibility to make sure that both x and pc are of the right size (i.e., memory must be allocated for p) ;  ; void X2P (std::vector< Float_t > &, const std::vector< Float_t > &, Int_t cls) const;  Calculate the principal components from the original data vector x, and return it in p (function extracted from TPrincipal::X2P) It's the users responsibility to make sure that both x and p are of the right size (i.e., memory must be allocated for p) ;  . Private Attributes; std::vector< TMatrixD * > fEigenVectors;  eigenvectors ;  ; std::vector< TVectorD * > fMeanValues;  mean values ;  . Additional Inherited Members;  Public Types inherited from TMVA::VariableTransformBase; typedef VectorOfCharAndInt::iterator ItVarTypeIdx;  ; typedef VectorOfCharAndInt::const_iterator ItVarTypeIdxConst;  ; typedef std::vector< std::pair< Char_t, UInt_t > > VectorOfCharAndInt;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::VariableTransformBase; void CalcNorm (const std::vector< const Event * > &);  TODO --> adapt to variable,target,spectator selection method to calculate minimum, maximum, mean, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html:13565,inherit,inherited,13565,doc/master/classTMVA_1_1VariablePCATransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html,2,['inherit'],['inherited']
Modifiability,"2] + 0.18581*[var3] - 0.1623*[var4] <= 3.09071; : Cut[ 2]: -3.9944 < - 0.19981*[myvar1] + 0.18581*[myvar2] + 1.7913*[var3] - 0.77231*[var4] <= 1e+30; : Cut[ 3]: 0.0311777 < - 0.82843*[myvar1] - 0.1623*[myvar2] - 0.77231*[var3] + 2.1918*[var4] <= 1e+30; : ------------------------------------------------------------------------------------------------------------------------; : Elapsed time for training with 2000 events: 2.78 sec ; CutsD : [dataset] : Evaluation of CutsD on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.00312 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_CutsD.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_CutsD.class.C␛[0m; : TMVAC.root:/dataset/Method_Cuts/CutsD; Factory : Training finished; : ; Factory : Train method: Likelihood for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Likelihood ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:27948,variab,variables,27948,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"2_t>::Scalar phi); voidSetEta(ROOT::Math::Polar3D<Double32_t>::Scalar eta); voidSetPhi(const Double32_t& phi); voidSetR(const Double32_t& r); voidSetRho(ROOT::Math::Polar3D<Double32_t>::Scalar rho); voidSetTheta(const Double32_t& theta); voidSetX(ROOT::Math::Polar3D<Double32_t>::Scalar xx); voidSetXYZ(ROOT::Math::Polar3D<Double32_t>::Scalar xx, ROOT::Math::Polar3D<Double32_t>::Scalar yy, ROOT::Math::Polar3D<Double32_t>::Scalar zz); voidSetY(ROOT::Math::Polar3D<Double32_t>::Scalar yy); voidSetZ(ROOT::Math::Polar3D<Double32_t>::Scalar zz); ROOT::Math::Polar3D<Double32_t>::ScalarTheta() const; ROOT::Math::Polar3D<Double32_t>::ScalarX() const; Double32_tx() const; ROOT::Math::Polar3D<Double32_t>::ScalarY() const; Double32_ty() const; ROOT::Math::Polar3D<Double32_t>::ScalarZ() const; Double32_tz() const. private:. static ROOT::Math::Polar3D<Double32_t>::Scalarpi(); voidRestrict(). Data Members; private:. Double32_tfPhi; Double32_tfR; Double32_tfTheta. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Polar3D & operator=(const ROOT::Math::Polar3D<Double32_t>& v). assignment operator. void SetCoordinates(const ROOT::Math::Polar3D<Double32_t>::Scalar* src). Set internal data based on an array of 3 Scalar numbers. { fR=src[0]; fTheta=src[1]; fPhi=src[2]; Restrict(); }. void GetCoordinates(ROOT::Math::Polar3D<Double32_t>::Scalar* dest) const. get internal data into an array of 3 Scalar numbers. { dest[0] = fR; dest[1] = fTheta; dest[2] = fPhi; }. void SetCoordinates(ROOT::Math::Polar3D<Double32_t>::Scalar r, ROOT::Math::Polar3D<Double32_t>::Scalar theta, ROOT::Math::Polar3D<Double32_t>::Scalar phi). Set internal data based on 3 Scalar numbers. { fR=r; fTheta=theta; fPhi=phi; Restrict(); }. void GetCoordinates(ROOT::Math::Polar3D<Double32_t>::Scalar& r, ROOT::Math::Polar3D<Double32_t>::Scalar& theta, ROOT::Math::Polar3D<Double32_t>::Scalar& phi) const. get internal data into 3 Scalar numbers. {r=fR; theta=fTheta; phi=fPhi;}. Scalar R() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__Polar3D_Double32_t_.html:3046,Inherit,Inheritance,3046,root/html532/ROOT__Math__Polar3D_Double32_t_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__Polar3D_Double32_t_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"2angle between centers of x edges an y axis at low z; Double_tTGeoTrap::fBl1half length in x at low z and y low edge; Double_tTGeoTrap::fBl2half length in x at high z and y low edge; Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tTGeoArb8::fDzhalf length in Z; Double_tTGeoTrap::fH1half length in y at low z; Double_tTGeoTrap::fH2half length in y at high z; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; Double_tTGeoTrap::fPhiphi angle; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; Double_tTGeoTrap::fThetatheta angle; TStringTNamed::fTitleobject title; Double_tTGeoTrap::fTl1half length in x at low z and y high edge; Double_tTGeoTrap::fTl2half length in x at high z and y high edge; Double_t*TGeoArb8::fTwist! [4] tangents of twist angles ; Double_tfTwistAngletwist angle in degrees; Double_tTGeoArb8::fXY[8][2]list of vertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoGtra(); Default ctor. TGeoGtra(Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); Constructor. TGeoGtra(const char* name, Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); Constructor providing the name of the shape. ~TGeoGtra(); Destructor. Double_t DistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; Compute distance from inside point to surface of the shape. Double_t DistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; Compute distance from inside point to surface of the shape. TGeoShape * GetMakeRuntimeShape(TGeoShape* mother, TGeoMatrix* ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoGtra.html:14359,Inherit,Inheritance,14359,root/html532/TGeoGtra.html,https://root.cern,https://root.cern/root/html532/TGeoGtra.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"2angle between centers of x edges an y axis at low z; Double_tTGeoTrap::fBl1half length in x at low z and y low edge; Double_tTGeoTrap::fBl2half length in x at high z and y low edge; Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tTGeoArb8::fDzhalf length in Z; Double_tTGeoTrap::fH1half length in y at low z; Double_tTGeoTrap::fH2half length in y at high z; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; Double_tTGeoTrap::fPhiphi angle; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; Double_tTGeoTrap::fThetatheta angle; TStringTNamed::fTitleobject title; Double_tTGeoTrap::fTl1half length in x at low z and y high edge; Double_tTGeoTrap::fTl2half length in x at high z and y high edge; Double_t*TGeoArb8::fTwist! [4] tangents of twist angles ; Double_tfTwistAngletwist angle in degrees; Double_tTGeoArb8::fXY[8][2]list of vertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoGtra(); Default ctor. TGeoGtra(Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); Constructor. TGeoGtra(const char* name, Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); Constructor providing the name of the shape. ~TGeoGtra(); Destructor. Double_t DistFromInside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; Compute distance from inside point to surface of the shape. Double_t DistFromOutside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; Compute distance from inside point to surface of the shape. TGeoShape * GetMakeRuntimeShape(TGeoShape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoGtra.html:15321,Inherit,Inheritance,15321,root/html534/TGeoGtra.html,https://root.cern,https://root.cern/root/html534/TGeoGtra.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"2b = new TH1S(""ha2b"",""ha2"",100,0,1);; a2->Add(ha2a);; a2->Add(ha2b);. T.Branch(l,16000,2);; T.Print();; }. Int_t Branch(const char* folder, Int_t bufsize = 32000, Int_t splitlevel = 99); Create one branch for each element in the folder.; Returns the total number of branches created. TBranch* Branch(const char* name, void* address, const char* leaflist, Int_t bufsize = 32000); Create a new TTree Branch. This Branch constructor is provided to support non-objects in; a Tree. The variables described in leaflist may be simple; variables or structures. // See the two following; constructors for writing objects in a Tree. By default the branch buffers are stored in the same file as the Tree.; use TBranch::SetFile to specify a different file. * address is the address of the first item of a structure.; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t); - O : a boolean (Bool_t). By default, a variable will be copied to the buffer with the number of; bytes specified in the type descriptor character. However, if the type; consists of 2 characters, the second character is an integer that; specifies the number of byte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:44500,variab,variable,44500,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,2,['variab'],['variable']
Modifiability,"3 )); };  . #include <TMVA/PDEFoamMultiTarget.h>. Inheritance diagram for TMVA::PDEFoamMultiTarget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamMultiTarget() [1/3]. TMVA::PDEFoamMultiTarget::PDEFoamMultiTarget ; (; const PDEFoamMultiTarget & ; from). protected . Copy Constructor NOT IMPLEMENTED (NEVER USED) ; Definition at line 104 of file PDEFoamMultiTarget.cxx. ◆ PDEFoamMultiTarget() [2/3]. TMVA::PDEFoamMultiTarget::PDEFoamMultiTarget ; (; ). Default constructor for streamer, user should not use it. ; Definition at line 68 of file PDEFoamMultiTarget.cxx. ◆ PDEFoamMultiTarget() [3/3]. TMVA::PDEFoamMultiTarget::PDEFoamMultiTarget ; (; const TString & ; name, . ETargetSelection ; ts . ). User constructor. ; Parameters:. name - name of PDEFoam object; ts - target selection method used in GetCellValue(const std::map<Int_t, Float_t>& xvec, ECellValue) Candidates are: TMVA::kMean, TMVA::kMpv; TMVA::kMean - The function GetCellValue() finds all cells which contain a given event vector 'xvec' and returns the mean target (for every target variable in the foam).; TMVA::kMpv - The function GetCellValue() finds all cells which contain a given event vector 'xvec' and returns the most probable target (for every target variable in the foam), that is the target value which corresponds to the cell with the largest event density. . Definition at line 95 of file PDEFoamMultiTarget.cxx. ◆ ~PDEFoamMultiTarget(). virtual TMVA::PDEFoamMultiTarget::~PDEFoamMultiTarget ; (; ). inlinevirtual . Definition at line 60 of file PDEFoamMultiTarget.h. Member Function Documentation. ◆ CalculateMean(). void TMVA::PDEFoamMultiTarget::CalculateMean ; (; std::map< Int_t, Float_t > & ; target, . const std::vector< PDEFoamCell * > & ; cells . ). protectedvirtual . This function calculates the mean target value from a given number of cells. ; As weight the event density of the cell is used.; Parameters:. t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html:21465,variab,variable,21465,doc/master/classTMVA_1_1PDEFoamMultiTarget.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html,1,['variab'],['variable']
Modifiability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:29639,inherit,inherited,29639,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['inherit'],['inherited']
Modifiability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; virtual double evaluate () const =0;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsMoment.html:52066,inherit,inherited,52066,doc/master/classRooAbsMoment.html,https://root.cern,https://root.cern/doc/master/classRooAbsMoment.html,2,['inherit'],['inherited']
Modifiability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvCoefVar.html:52155,inherit,inherited,52155,doc/master/classRooConvCoefVar.html,https://root.cern,https://root.cern/doc/master/classRooConvCoefVar.html,8,['inherit'],['inherited']
Modifiability,"3 // populate parts of the computation graph for which we only have ""empty shells"", e.g. RJittedActions and; 224 // RJittedFilters; 225 resPtr.fLoopManager->Jit();; 226 ; 227 std::unique_ptr<RDFInternal::RActionBase> variedAction;; 228 std::vector<std::shared_ptr<T>> variedResults;; 229 ; 230 std::shared_ptr<RDFInternal::RActionBase> nominalAction = resPtr.fActionPtr;; 231 std::vector<std::string> variations = nominalAction->GetVariations();; 232 const auto nVariations = variations.size();; 233 ; 234 if (nVariations > 0) {; 235 // clone the result once for each variation; 236 variedResults.reserve(nVariations);; 237 for (auto i = 0u; i < nVariations; ++i){; 238 // implicitly assuming that T is copiable: this should be the case; 239 // for all result types in use, as they are copied for each slot; 240 variedResults.emplace_back(new T{*resPtr.fObjPtr});; 241 ; 242 // Check if the result's type T inherits from TNamed; 243 if constexpr (std::is_base_of<TNamed, T>::value) {; 244 // Get the current variation name; 245 std::string variationName = variations[i];; 246 // Replace the colon with an underscore; 247 std::replace(variationName.begin(), variationName.end(), ':', '_'); ; 248 // Get a pointer to the corresponding varied result; 249 auto &variedResult = variedResults.back();; 250 // Set the varied result's name to NOMINALNAME_VARIATIONAME; 251 variedResult->SetName((std::string(variedResult->GetName()) + ""_"" + variationName).c_str());; 252 }; 253 }; 254 ; 255 std::vector<void *> typeErasedResults;; 256 typeErasedResults.reserve(variedResults.size());; 257 for (auto &res : variedResults); 258 typeErasedResults.emplace_back(&res);; 259 ; 260 // Create the RVariedAction and inject it in the computation graph.; 261 // This recursively creates all the required varied column readers and upstream nodes of the computation graph.; 262 variedAction = nominalAction->MakeVariedAction(std::move(typeErasedResults));; 263 }; 264 ; 265 return RDFInternal::MakeResultMap<T>(resPtr.fObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx_source.html:11169,inherit,inherits,11169,doc/master/RDFHelpers_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx_source.html,1,['inherit'],['inherits']
Modifiability,"3 43480.6 10; : 1173 | 2.42741 2.58076 0.0200421 0.00174997 43734.7 11; : 1174 | 2.37753 2.26267 0.0200588 0.00177748 43760.5 12; : 1175 | 2.22445 2.16696 0.0202566 0.0017593 43249.6 13; : 1176 | 2.40448 2.17977 0.0200526 0.00175764 43727.8 14; : 1177 | 2.49342 2.82323 0.0202598 0.00176322 43251.3 15; : 1178 | 2.31353 3.17049 0.0200462 0.00175709 43741.9 16; : 1179 | 2.25997 2.02334 0.0201856 0.00175132 43397.5 17; : 1180 | 2.74518 2.558 0.020345 0.00180582 43151.9 18; : 1181 | 2.36208 2.385 0.0203127 0.00179 43190.3 19; : 1182 | 2.36099 2.04294 0.0204332 0.00181567 42970.2 20; : 1183 | 2.27988 2.15749 0.0203871 0.00176421 42957.8 21; : ; : Elapsed time for training with 1000 events: 23.9 sec ; : Dataset[datasetreg] : Create results for training; : Dataset[datasetreg] : Evaluation of DNN_CPU on training sample; : Dataset[datasetreg] : Elapsed time for evaluation of 1000 events: 0.0289 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: ␛[0;36mdatasetreg/weights/TMVARegression_DNN_CPU.weights.xml␛[0m; Factory : Training finished; : ; Factory : Train method: BDTG for Regression; : ; : Regression Loss Function: Huber; : Training 2000 Decision Trees ... patience please; : Elapsed time for training with 1000 events: 1.58 sec ; : Dataset[datasetreg] : Create results for training; : Dataset[datasetreg] : Evaluation of BDTG on training sample; : Dataset[datasetreg] : Elapsed time for evaluation of 1000 events: 0.354 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: ␛[0;36mdatasetreg/weights/TMVARegression_BDTG.weights.xml␛[0m; : TMVAReg.root:/datasetreg/Method_BDT/BDTG; Factory : Training finished; : ; TH1.Print Name = TrainingHistory_DNN_CPU_trainingError, Entries= 0, Total sum= 3.72139e+06; TH1.Print Name = TrainingHistory_DNN_CPU_valError, Entries= 0, Tota",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:125147,variab,variable,125147,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variable']
Modifiability,"3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class FitConfig; 12 ; 13#ifndef ROOT_Fit_FitConfig; 14#define ROOT_Fit_FitConfig; 15 ; 16 ; 17#include ""Fit/ParameterSettings.h""; 18 ; 19#include ""Math/MinimizerOptions.h""; 20 ; 21#include ""Math/IParamFunctionfwd.h""; 22 ; 23#include ""TMath.h""; 24 ; 25#include <vector>; 26#include <string>; 27 ; 28namespace ROOT {; 29 ; 30 namespace Math {; 31 ; 32 class Minimizer;; 33 class MinimizerOptions;; 34 }; 35 ; 36 namespace Fit {; 37 ; 38 class FitResult;; 39 ; 40//___________________________________________________________________________________; 41/**; 42 Class describing the configuration of the fit, options and parameter settings; 43 using the ROOT::Fit::ParameterSettings class; 44 ; 45 @ingroup FitMain; 46*/; 47class FitConfig {; 48 ; 49public:; 50 ; 51 /**; 52 Default constructor; 53 */; 54 FitConfig (unsigned int npar = 0);; 55 ; 56 ; 57 /*; 58 Copy constructor; 59 */; 60 FitConfig(const FitConfig & rhs);; 61 ; 62 /**; 63 Destructor; 64 */; 65 ~FitConfig ();; 66 ; 67 /*; 68 Assignment operator; 69 */; 70 FitConfig & operator= (const FitConfig & rhs);; 71 ; 72 ; 73 /**; 74 get the parameter settings for the i-th parameter (const method); 75 */; 76 const ParameterSettings & ParSettings(unsigned int i) const { return fSettings.at(i); }; 77 ; 78 /**; 79 get the parameter settings for the i-th parameter (non-const method); 80 */; 81 ParameterSettings & ParSettings(unsigned int i) { return fSettings.at(i); }; 82 ; 83 /**; 84 get the vector of parameter settings (const method); 85 */; 86 const std::vector<ROOT::Fit::ParameterSettings> & ParamsSettings() const { return fSettings; }; 87 ; 88 /**; 89 get the vector of parameter settings (non-const method); 90 */; 91 std::vector<ROOT::Fit::ParameterSettings> & ParamsSetting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:1099,config,configuration,1099,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['config'],['configuration']
Modifiability,"3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); RooChi2Var constructor. Optional arguments taken. Extended() -- Include extended term in calculation; DataError() -- Choose between Poisson errors and Sum-of-weights errors; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define projected observables; Verbose() -- Verbose output of GOF framework. RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitCutRange = kTRUE, RooAbsData::ErrorType = RooDataHist::SumW2); Constructor of a chi2 for given p.d.f. with respect given binned; dataset. If cutRange is specified the calculation of the chi2 is; restricted to that named range. If addCoefRange is specified, the; interpretation of fractions for all component RooAddPdfs that do; not have a frozen range interpretation is set to chosen range; name. If nCPU is greater than one the chi^2 calculation is; paralellized over the specified number of processors. If; interleave is true the partitioning of event over processors; follows a (i % n == i_set) strategy rather than a bulk; partitioning strategy which may result in unequal load balancing; in binned datasets with many (adjacent) zero bins. If; splitCutRange is true the cutRange is used to construct an; individual cutRange for each RooSimultaneous index category state; name cutRange_{indexStateName}. RooC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooChi2Var.html:45230,extend,extended,45230,root/html534/RooChi2Var.html,https://root.cern,https://root.cern/root/html534/RooChi2Var.html,2,['extend'],['extended']
Modifiability,"3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); RooChi2Var constructor. Optional arguments taken. Extended() -- Include extended term in calculation; DataError() -- Choose between Poisson errors and Sum-of-weights errors; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define projected observables; Verbose() -- Verbose output of GOF framework. RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitCutRange = kTRUE, RooDataHist::ErrorType = RooDataHist::SumW2); Constructor of a chi2 for given p.d.f. with respect given binned; dataset. If cutRange is specified the calculation of the chi2 is; restricted to that named range. If addCoefRange is specified, the; interpretation of fractions for all component RooAddPdfs that do; not have a frozen range interpretation is set to chosen range; name. If nCPU is greater than one the chi^2 calculation is; paralellized over the specified number of processors. If; interleave is true the partitioning of event over processors; follows a (i % n == i_set) strategy rather than a bulk; partitioning strategy which may result in unequal load balancing; in binned datasets with many (adjacent) zero bins. If; splitCutRange is true the cutRange is used to construct an; individual cutRange for each RooSimultaneous index category state; name cutRange_{indexStateName}. RooC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooChi2Var.html:46917,extend,extended,46917,root/html602/RooChi2Var.html,https://root.cern,https://root.cern/root/html602/RooChi2Var.html,4,['extend'],['extended']
Modifiability,"3 Box (Candle) Plots; ; A Box Plot (also known as a “box-and whisker” plot or “candle stick” plot) is a convenient way to describe graphically a data distribution (D) with only the five numbers. It was invented in 1977 by John Tukey. The five numbers are:. The minimum value of the distribution D (Min).; The lower quartile (Q1): 25% of the data points in D are less than Q1.; The median (M): 50% of the data points in D are less than M.; The upper quartile (Q3): 75% of the data points in D are less than Q3.; The maximum value of the distribution D (Max). A box plot describes a distribution with only five numbers. In ROOT Box Plots (Candle Plots) can be produced from a TTree using the “candle” option in TTree::Draw().; tree->Draw(“px:cos(py):sin(pz)”,””,”candle”);; 12.20.9 Using TTree::Scan. TTree::Scan can be used to print the content of the tree’s entries optional passing a selection.; root[] MyTree->Scan();; will print the first 8 variables of the tree.; root[] MyTree->Scan(""*"");; will print all the variable of the tree.; Specific variables of the tree can be explicit selected by list them in column separated list:; root[] MyTree->Scan(""var1:var2:var3"");; will print the values of var1, var2 and var3. A selection can be applied in the second argument:; root[] MyTree->Scan(""var1:var2:var3"",""var1==0"");; will print the values of var1, var2 and var3 for the entries where var1 is exactly 0.; TTree::Scan returns the number of entries passing the selection. By default 50 rows are shown before TTree::Scan pauses and ask you to press the Enter key to see the next 50 rows. You can change the default number of rows to be shown before <CR> via mytree->SetScanfield(maxrows) where maxrows is 50 by default. If maxrows is set to 0 all rows of the Tree are shown. This option is interesting when dumping the contents of a Tree to an ascii file, eg from the command line:; root[] tree->SetScanField(0);; root[] tree->Scan(""*""); >tree.log; will create a file tree.log.; Arrays (within an entr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:618838,variab,variable,618838,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"3 }; 134 }; 135 ; 136 VariableTransformBase* transformation = NULL;; 137 if (trName == ""I"" || trName == ""Ident"" || trName == ""Identity"") {; 138 if (variables.Length() == 0) variables = ""_V_"";; 139 transformation = new VariableIdentityTransform(dataInfo);; 140 }; 141 else if (trName == ""D"" || trName == ""Deco"" || trName == ""Decorrelate"") {; 142 if (variables.Length() == 0) variables = ""_V_"";; 143 transformation = new VariableDecorrTransform(dataInfo);; 144 }; 145 else if (trName == ""P"" || trName == ""PCA"") {; 146 if (variables.Length() == 0) variables = ""_V_"";; 147 transformation = new VariablePCATransform(dataInfo);; 148 }; 149 else if (trName == ""U"" || trName == ""Uniform"") {; 150 if (variables.Length() == 0) variables = ""_V_,_T_"";; 151 transformation = new VariableGaussTransform(dataInfo, ""Uniform"" );; 152 }; 153 else if (trName == ""G"" || trName == ""Gauss"") {; 154 if (variables.Length() == 0) variables = ""_V_"";; 155 transformation = new VariableGaussTransform(dataInfo);; 156 }; 157 else if (trName == ""N"" || trName == ""Norm"" || trName == ""Normalise"" || trName == ""Normalize"") {; 158 if (variables.Length() == 0) variables = ""_V_,_T_"";; 159 transformation = new VariableNormalizeTransform(dataInfo);; 160 }; 161 else; 162 log << kFATAL << Form(""Dataset[%s] : "",dataInfo.GetName()); 163 << ""<ProcessOptions> Variable transform '""; 164 << trName << ""' unknown."" << Endl;; 165 ; 166 ; 167 if (transformation) {; 168 ClassInfo* clsInfo = dataInfo.GetClassInfo(idxCls);; 169 if (clsInfo); 170 log << kHEADER << Form(""[%s] : "",dataInfo.GetName()); 171 << ""Create Transformation \"""" << trName << ""\"" with reference class ""; 172 << clsInfo->GetName() << ""=(""<< idxCls <<"")"" << Endl << Endl;; 173 else; 174 log << kHEADER << Form(""[%s] : "",dataInfo.GetName()); 175 << ""Create Transformation \"""" << trName << ""\"" with events from all classes.""; 176 << Endl << Endl;; 177 ; 178 transformation->SelectInput(variables);; 179 transformationHandler.AddTransformation(transformation, idxCls);; 180 }; 181",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:6385,variab,variables,6385,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,2,['variab'],['variables']
Modifiability,"3 };; 2444 ; 2445 template <typename To>; 2446 struct ConvertBasicType<BitsMarker, To, Generic> {; 2447 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2448 {; 2449 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2450 ; 2451 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2452 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2453 Int_t nvalues = proxy->Size();; 2454 ; 2455 UInt_t *items_storage = new UInt_t[nvalues];; 2456 UInt_t *items = items_storage;; 2457 ; 2458 const Int_t offset = config->fOffset;; 2459 Next_t next = loopconfig->fNext;; 2460 ; 2461 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 2462 void *iter = loopconfig->fCopyIterator(&iterator,start);; 2463 void *addr;; 2464 while( (addr = next(iter,end)) ) {; 2465 buf >> (*items);; 2466 if (((*items) & kIsReferenced) != 0) {; 2467 HandleReferencedTObject(buf, addr, config);; 2468 }; 2469 To *x = (To*)( ((char*)addr) + offset );; 2470 *x = (To)(*items);; 2471 ++items;; 2472 }; 2473 if (iter != &iterator[0]) {; 2474 loopconfig->fDeleteIterator(iter);; 2475 }; 2476 ; 2477 delete [] items_storage;; 2478 return 0;; 2479 }; 2480 };; 2481 ; 2482 template <typename From, typename To, template <typename F, typename T> class Converter >; 2483 struct ConvertBasicType<WithFactorMarker<From>,To,Converter > {; 2484 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2485 {; 2486 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2487 ; 2488 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2489 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2490 Int_t nvalues = proxy->Size();; 2491 ; 2492 TConfSTLWithFactor *conf = (TConfSTLWithFactor *)config;; 2493 ; 2494 From *items = new From[nvalues];; 2495 buf.ReadFastArrayWithFactor(items, n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:99390,config,config,99390,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"3"");; // Add the second tree to the first tree as a friend; t3->AddFriend(""t3f"",""tree3f.root"");; // Draw pz which is in the first tree and use pt; // in the condition. pt is in the friend tree.; t3->Draw(""pz"",""pt>3"");; }. // This is executed when typing .x tree3.C; void tree3() {; tree3w();; tree3r();; }; 12.17 Example 4: A Tree with an Event Class; This example is a simplified version of $ROOTSYS/test/MainEvent.cxx and where Event objects are saved in a tree. The full definition of Event is in $ROOTSYS/test/Event.h. To execute this macro, you will need the library $ROOTSYS/test/libEvent.so. If it does not exist you can build the test directory applications by following the instruction in the $ROOTSYS/test/README file.; In this example we will show. the difference in splitting or not splitting a branch; how to read selected branches of the tree,; how to print a selected entry. 12.17.1 The Event Class; Event is a descendent of TObject. As such it inherits the data members of TObject and its methods such as Dump() and Inspect()andWrite(). In addition, because it inherits from TObject it can be a member of a collection. To summarize, the advantages of inheriting from a TObject are:. Inherit the Write, Inspect, and Dump methods; Enables a class to be a member of a ROOT collection; Enables RTTI. Below is the list of the Event data members. It contains a character array, several integers, a floating-point number, and an EventHeader object. The EventHeader class is described in the following paragraph. Event also has two pointers, one to a TClonesArray of tracks and one to a histogram. The string “->” in the comment field of the members *fTracks and *fH instructs the automatic Streamer to assume that the objects *fTracks and *fH are never null pointers and that fTracks->Streamer can be used instead of the more time consuming form R__b << fTracks.; class Event : public TObject {; private:; char fType[20];; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Float_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:575323,inherit,inherits,575323,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"3### 1 - Expression using variable x and no parameters; 264 ; 265#### Case 1: inline expression using standard C++ functions/operators; 266 ; 267Begin_Macro(source); 268{; 269 auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; 270 fa1->Draw();; 271}; 272End_Macro; 273 ; 274#### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters; 275 ; 276 ; 277Begin_Macro(source); 278{; 279 auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; 280 fa2->Draw();; 281}; 282End_Macro; 283 ; 284#### Case 3: inline expression using a user defined CLING function by name; 285 ; 286~~~~{.cpp}; 287Double_t myFunc(double x) { return x+sin(x); }; 288....; 289auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; 290fa3->Draw();; 291~~~~; 292 ; 293\anchor F2; 294### 2 - Expression using variable x with parameters; 295 ; 296#### Case 1: inline expression using standard C++ functions/operators; 297 ; 298* Example a:; 299 ; 300 ; 301~~~~{.cpp}; 302auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; 303~~~~; 304 ; 305This creates a function of variable x with 2 parameters. The parameters must be initialized via:; 306 ; 307~~~~{.cpp}; 308 fa->SetParameter(0,value_first_parameter);; 309 fa->SetParameter(1,value_second_parameter);; 310~~~~; 311 ; 312 ; 313Parameters may be given a name:; 314 ; 315~~~~{.cpp}; 316 fa->SetParName(0,""Constant"");; 317~~~~; 318 ; 319* Example b:; 320 ; 321~~~~{.cpp}; 322 auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; 323~~~~; 324 ; 325 ; 326``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``.; 327 ; 328#### Case 2: inline expression using TMath functions with parameters; 329 ; 330Begin_Macro(source); 331{; 332 auto fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; 333 fb2->SetParameters(0.2,1.3);; 334 fb2->Draw();; 335}; 336End_Macro; 337 ; 338\anchor F3; 339### 3 - A lambda expression with variables and parameters; 340 ; 341\since **6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:9218,variab,variable,9218,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variable']
Modifiability,3% (1 sigma); 67 kPoisson2 = 2 ///< Errors from Poisson interval at 95% CL (~ 2 sigma); 68 };; 69 ; 70 /// Enumeration specifying which axes can,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h_source.html:2005,extend,extended,2005,doc/master/TH1_8h_source.html,https://root.cern,https://root.cern/doc/master/TH1_8h_source.html,1,['extend'],['extended']
Modifiability,"3), 431-434.; [4] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.:Identification of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; [5] M.A. Mariscotti: A method for identification of peaks in the presence of background and its application to spectrum analysis. NIM 50 (1967), 309-320.; [6] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451.; [7] P. Bandžuch, M. Morháč, J. Krištiak: Study of the VanCitter and Gold iterative methods of deconvolutionand their application in the deconvolution of experimental spectra of positron annihilation, NIM A 384 (1997) 506-515.; [8] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; [9] I. A. Slavic: Nonlinear least-squares fitting without matrix inversion applied to complex Gaussian spectra analysis. NIM 134 (1976) 285-289.; [10] B. Mihaila: Analysis of complex gamma spectra, Rom. Jorn. Phys., Vol. 39, No. 2, (1994), 139-148.; [11] T. Awaya: A new method for curve fitting to the data with low statistics not using chi-square method. NIM 165 (1979) 317-323.; [12] T. Hauschild, M. Jentschel: Comparison of maximum likelihood estimation and chi-square statistics applied to counting experiments. NIM A 457 (2001) 384-401.; [13] M. Morháč, J. Kliman, M. Jandel, Ľ. Krupa, V. Matoušek: Study of fitting algorithms applied to simultaneous analysis of large number of peaks in \(\gamma\)-ray spectra. Applied spectroscopy, Accepted for publication.; [14] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284..; [15] D. Hearn, M. P. Baker: Computer Graphics, Prentice-Hall International, Inc., 1994. Institute of Physics, Slovak Academy of Sciences, Bratislava, Slovakia↩; Flerov Laboratory of Nuclear Reactions, JINR, Dubna, Russia↩. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/spectrum/Spectrum.html:78365,enhance,enhancement,78365,root/html534/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/html534/guides/spectrum/Spectrum.html,2,['enhance'],['enhancement']
Modifiability,3.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88107,config,configuration,88107,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"3/// Normal Constructor for Profile histograms.; 104///; 105/// The first eight parameters are similar to TH2D::TH2D.; 106/// All values of z are accepted at filling time.; 107/// To fill a profile2D histogram, one must use TProfile2D::Fill function.; 108///; 109/// Note that when filling the profile histogram the function Fill; 110/// checks if the variable z is between fZmin and fZmax.; 111/// If a minimum or maximum value is set for the Z scale before filling,; 112/// then all values below zmin or above zmax will be discarded.; 113/// Setting the minimum or maximum value for the Z scale before filling; 114/// has the same effect as calling the special TProfile2D constructor below; 115/// where zmin and zmax are specified.; 116///; 117/// H(I,J) is printed as the cell contents. The errors computed are s(I,J) if CHOPT='S'; 118/// (spread option), or e(I,J) if CHOPT=' ' (error on mean).; 119///; 120/// See TProfile2D::BuildOptions for explanation of parameters; 121///; 122/// see other constructors below with all possible combinations of; 123/// fix and variable bin size like in TH2D.; 124 ; 125TProfile2D::TProfile2D(const char *name,const char *title,Int_t nx,Double_t xlow,Double_t xup,Int_t ny,Double_t ylow,Double_t yup,Option_t *option); 126: TH2D(name,title,nx,xlow,xup,ny,ylow,yup); 127{; 128 BuildOptions(0,0,option);; 129 if (xlow >= xup || ylow >= yup) SetBuffer(fgBufferSize);; 130}; 131 ; 132////////////////////////////////////////////////////////////////////////////////; 133/// Create a 2-D Profile with variable bins in X and fix bins in Y.; 134 ; 135TProfile2D::TProfile2D(const char *name,const char *title,Int_t nx,const Double_t *xbins,Int_t ny,Double_t ylow,Double_t yup,Option_t *option); 136: TH2D(name,title,nx,xbins,ny,ylow,yup); 137{; 138 BuildOptions(0,0,option);; 139}; 140 ; 141////////////////////////////////////////////////////////////////////////////////; 142/// Create a 2-D Profile with fix bins in X and variable bins in Y.; 143 ; 144TProfile2D::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:5212,variab,variable,5212,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['variab'],['variable']
Modifiability,"3/// in order to compile the library in optimized mode.; 4064 ; 4065void TSystem::SetFlagsOpt(const char *flags); 4066{; 4067 fFlagsOpt = flags;; 4068}; 4069 ; 4070////////////////////////////////////////////////////////////////////////////////; 4071/// AclicMode indicates whether the library should be built in; 4072/// debug mode or optimized. The values are:; 4073/// - TSystem::kDefault : compile the same as the current ROOT; 4074/// - TSystem::kDebug : compiled in debug mode; 4075/// - TSystem::kOpt : optimized the library; 4076 ; 4077void TSystem::SetAclicMode(EAclicMode mode); 4078{; 4079 fAclicMode = mode;; 4080}; 4081 ; 4082////////////////////////////////////////////////////////////////////////////////; 4083/// Directives has the same syntax as the argument of SetMakeSharedLib but is; 4084/// used to create an executable. This creation is used as a means to output; 4085/// a list of unresolved symbols, when loading a shared library has failed.; 4086/// The required variable is $ExeName rather than $SharedLib, e.g.:; 4087/// ~~~ {.cpp}; 4088/// gSystem->SetMakeExe(; 4089/// ""g++ -Wall -fPIC $IncludePath $SourceFiles; 4090/// -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; 4091/// ~~~; 4092 ; 4093void TSystem::SetMakeExe(const char *directives); 4094{; 4095 fMakeExe = directives;; 4096 // NOTE: add verification that the directives has the required variables; 4097}; 4098 ; 4099////////////////////////////////////////////////////////////////////////////////; 4100/// Directives should contain the description on how to compile and link a; 4101/// shared lib. This description can be any valid shell command, including; 4102/// the use of ';' to separate several instructions. However, shell specific; 4103/// construct should be avoided. In particular this description can contain; 4104/// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; 4105/// ~~~ {.cpp}; 4106/// Five special variables will be expanded before execution:; 4107/// ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:139257,variab,variable,139257,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variable']
Modifiability,"3/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins . ). overridevirtual . Redefine x and y axis parameters for variable bin sizes. ; Reimplemented from TH1.; Definition at line 1936 of file TProfile2D.cxx. ◆ SetBins() [4/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins . ). inlineoverrideprivatevirtual . Redefine x axis parameters with variable bin sizes. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1 ; Reimplemented from TH1.; Definition at line 69 of file TProfile2D.h. ◆ SetBins() [5/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins, . Int_t ; nz, . const Double_t * ; zBins . ). inlineoverrideprivatevirtual . Redefine x, y and z axis parameters with variable bin sizes. ; The X, Y and Z axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1, zBins is supposed to be of length nz+1 ; Reimplemented from TH1.; Definition at line 73 of file TProfile2D.h. ◆ SetBins() [6/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . Double_t ; xmin, . Double_t ; xmax . ). inlineoverrideprivatevirtual . Redefine x axis parameters. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange ; Reimplemented from TH1.; Definition at line 67 of file TProfile2D.h. ◆ SetBins() [7/7]. void TProfile2D::SetBins ; (; Int_t ; nx, . Double_t ; xmin, . Double_t ; xmax, . Int_t ; ny, . Double_t ; y",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:102827,variab,variable,102827,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,"300 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 256 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.805395; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.725372 0.686272 0.190597 0.0152439 14599.1 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.695636 0.683324 0.189128 0.015082 14708.8 0; : 3 | 0.691864 0.689576 0.189646 0.0148842 14648.6 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.689168 0.677551 0.190642 0.015026 14577.3 0; : 5 | 0.686885 0.678678 0.189865 0.0148775 14629.7 1; : 6 | 0.68905 0.681357 0.189104 0.014885 14694.1 2; : 7 | 0.687138 0.683485 0.19023 0.0152893 14633.6 3; : 8 | 0.686429 0.685529 0.189996 0.0147979 14612 4; : 9 | 0.685179 0.683467 0.190317 0.0152552 14623.4 5; : 10 Minimum Test error found - save the configuration ; : 10 | 0.684262 0.673795 0.18992 0.0153518 14664.7 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.682907 0.671521 0.194162 0.0155002 14328.7 0; : 12 | 0.693473 0.677553 0.188937 0.0147664 14698.2 1; : 13 | 0.695581 0.671789 0.190501 0.0149406 14581.9 2; : 14 | 0.68024 0.680521 0.188432 0.0146998 14735.3 3; : 15 | 0.68435 0.688062 0.189615 0.0147881 14643.1 4; : 16 | 0.686476 0.675588 0.190015 0.0152195 14645.7 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:18520,config,configuration,18520,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['config'],['configuration']
Modifiability,"31-434.; [4] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.:Identification of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; [5] M.A. Mariscotti: A method for identification of peaks in the presence of background and its application to spectrum analysis. NIM 50 (1967), 309-320.; [6] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451.; [7] P. Bandžuch, M. Morháč, J. Krištiak: Study of the VanCitter and Gold iterative methods of deconvolution and their application in the deconvolution of experimental spectra of positron annihilation, NIM A 384 (1997) 506-515.; [8] M. Morháč, J. Kliman, V. Matoušek, M. Veselský, I. Turzo.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; [9] I. A. Slavic: Nonlinear least-squares fitting without matrix inversion applied to complex Gaussian spectra analysis. NIM 134 (1976) 285-289.; [10] B. Mihaila: Analysis of complex gamma spectra, Rom. Jorn. Phys., Vol. 39, No. 2, (1994), 139-148.; [11] T. Awaya: A new method for curve fitting to the data with low statistics not using chi-square method. NIM 165 (1979) 317-323.; [12] T. Hauschild, M. Jentschel: Comparison of maximum likelihood estimation and chi-square statistics applied to counting experiments. NIM A 457 (2001) 384-401.; [13] M. Morháč, J. Kliman, M. Jandel, Ľ. Krupa, V. Matoušek: Study of fitting algorithms applied to simultaneous analysis of large number of peaks in \(\gamma\)-ray spectra. Applied Spectroscopy, Vol. 57, No. 7 (2003) 753-760.; [14] C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy. NIM A353 (1994) 280-284.; [15] D. Hearn, M. P. Baker: Computer Graphics, Prentice-Hall International, Inc., 1994. Institute of Physics, Slovak Academy of Sciences, Bratislava, Slovakia↩; Flerov Laboratory of Nuclear Reactions, JINR, Dubna, Russia↩. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html:79362,enhance,enhancement,79362,root/htmldoc/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html,2,['enhance'],['enhancement']
Modifiability,"328///; 4329/// ### Making a parallel coordinates plot; 4330///; 4331/// In case of a 2-Dim or more expression with the option=para, one can generate; 4332/// a parallel coordinates plot. With that option, the number of dimensions is; 4333/// arbitrary. Giving more than 4 variables without the option=para or; 4334/// option=candle or option=goff will produce an error.; 4335///; 4336/// ### Making a candle sticks chart; 4337///; 4338/// In case of a 2-Dim or more expression with the option=candle, one can generate; 4339/// a candle sticks chart. With that option, the number of dimensions is; 4340/// arbitrary. Giving more than 4 variables without the option=para or; 4341/// option=candle or option=goff will produce an error.; 4342///; 4343/// ### Normalizing the output histogram to 1; 4344///; 4345/// When option contains ""norm"" the output histogram is normalized to 1.; 4346///; 4347/// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; 4348///; 4349/// TTree::Draw can be used to fill a TEventList object (list of entry numbers); 4350/// instead of histogramming one variable.; 4351/// If varexp0 has the form >>elist , a TEventList object named ""elist""; 4352/// is created in the current directory. elist will contain the list; 4353/// of entry numbers satisfying the current selection.; 4354/// If option ""entrylist"" is used, a TEntryList object is created; 4355/// If the selection contains arrays, vectors or any container class and option; 4356/// ""entrylistarray"" is used, a TEntryListArray object is created; 4357/// containing also the subentries satisfying the selection, i.e. the indices of; 4358/// the branches which hold containers classes.; 4359/// Example:; 4360/// ~~~ {.cpp}; 4361/// tree.Draw("">>yplus"",""y>0""); 4362/// ~~~; 4363/// will create a TEventList object named ""yplus"" in the current directory.; 4364/// In an interactive session, one can type (after TTree::Draw); 4365/// ~~~ {.cpp}; 4366/// yplus.Print(""all""); 4367/// ~~~; 436",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:175568,variab,variable,175568,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"32; i=6 --> 64; i=7 --> 128; i=8 --> 256; i=9 --> 512; i=10 --> 1024; TMVA::LogIntervalThe TMVA::Interval Class.Definition LogInterval.h:83. Definition at line 83 of file LogInterval.h. Public Member Functions;  LogInterval (const LogInterval &other);  ;  LogInterval (Double_t min, Double_t max, Int_t nbins=0);  ; virtual ~LogInterval ();  destructor ;  ; virtual Double_t GetElement (Int_t position) const;  calculates the value of the ""number"" bin in a discrete interval. ;  ; virtual Double_t GetMax () const;  ; virtual Double_t GetMean () const;  ; virtual Double_t GetMin () const;  ; virtual Int_t GetNbins () const;  ; virtual Double_t GetRndm (TRandom3 &) const;  get uniformly distributed number within interval ;  ; virtual Double_t GetStepSize (Int_t iBin=0) const;  returns the step size between the numbers of a ""discrete LogInterval"" ;  ; virtual Double_t GetWidth () const;  ; virtual TClass * IsA () const;  ; MsgLogger & Log () const;  ; void SetMax (Double_t m);  ; void SetMin (Double_t m);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Interval;  Interval (const Interval &other);  ;  Interval (Double_t min, Double_t max, Int_t nbins=0);  defines minimum and maximum of an interval ;  ; virtual ~Interval ();  destructor ;  ; virtual void Print (std::ostream &os) const;  ; void SetMax (Double_t m);  ; void SetMin (Double_t m);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Interval; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1LogInterval.html:2206,inherit,inherited,2206,doc/master/classTMVA_1_1LogInterval.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1LogInterval.html,1,['inherit'],['inherited']
Modifiability,"33);; c1->SetGrid();. Float_t bintime = 1;; // one bin = 1 second. change it to set the time scale; TH1F *ht = new TH1F(""ht"",""The ROOT seism"",10,0,10*bintime);; Float_t signal = 1000;; ht->SetMaximum(signal);; ht->SetMinimum(-signal);; ht->SetStats(0);; ht->SetLineColor(2);; ht->GetXaxis()->SetTimeDisplay(1);; ht->GetYaxis()->SetNdivisions(520);; ht->Draw();. for (Int_t i=1;i<2300;i++) {; // Build a signal : noisy damped sine; Float_t noise = gRandom->Gaus(0,120);; if (i > 700); noise += signal*sin((i-700.)*6.28/30)*exp((700.-i)/300.);; ht->SetBinContent(i,noise);; c1->Modified();; c1->Update();; gSystem->ProcessEvents();; //canvas can be edited during the loop; }; printf(""Real Time = %8.3fs,Cpu Time = %8.3fsn"",sw.RealTime(),; sw.CpuTime());; }; 9.6 Graphical Objects Attributes; 9.6.1 Text Attributes; When a class contains text or derives from a text class, it needs to be able to set text attributes like font type, size, and color. To do so, the class inherits from the TAttText class (a secondary inheritance), which defines text attributes. TLatex and TText inherit from TAttText.; 9.6.1.1 Setting Text Alignment; Text alignment may be set by a method call. What is said here applies to all objects deriving from TAttText, and there are many. We will take an example that may be transposed to other types. Suppose “la” is a TLatex object. The alignment is set with:; root[] la->SetTextAlign(align); The parameter align is a short describing the alignment:; align = 10*HorizontalAlign + VerticalAlign; For horizontal alignment, the following convention applies:. 1 = left; 2 = centered; 3 = right. For vertical alignment, the following convention applies:. 1 = bottom; 2 = centered; 3 = top. For example, align: 11 = left adjusted and bottom adjusted; 32 = right adjusted and vertically centered.; 9.6.1.2 Setting Text Angle; Use TAttText::SetTextAngle to set the text angle. The angle is the degrees of the horizontal.; root[] la->SetTextAngle(angle); 9.6.1.3 Setting Text Color; Use T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:353024,inherit,inherits,353024,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,4,['inherit'],"['inheritance', 'inherits']"
Modifiability,34 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91375,config,configuration,91375,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"34 HandleReferencedTObject(buf,addr,config);; 1435 }; 1436 ; 1437 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1438 return 0;; 1439 }; 1440 };; 1441 ; 1442 template <typename From, typename To>; 1443 struct ConvertBasicType<WithFactorMarker<From>,To> {; 1444 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config); 1445 {; 1446 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1447 TConfWithFactor *conf = (TConfWithFactor *)config;; 1448 From temp;; 1449 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 1450 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1451 return 0;; 1452 }; 1453 };; 1454 ; 1455 template <typename From, typename To>; 1456 struct ConvertBasicType<NoFactorMarker<From>,To> {; 1457 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config); 1458 {; 1459 // Simple conversion from a 'From' on disk to a 'To' in memory.; 1460 TConfNoFactor *conf = (TConfNoFactor *)config;; 1461 From temp;; 1462 buf.ReadWithNbits(&temp, conf->fNbits);; 1463 *(To*)( ((char*)addr) + config->fOffset ) = (To)temp;; 1464 return 0;; 1465 }; 1466 };; 1467 ; 1468 class TConfigurationPushDataCache : public TConfiguration {; 1469 // Configuration object for the PushDataCache case.; 1470 public:; 1471 TVirtualArray *fOnfileObject;; 1472 ; 1473 TConfigurationPushDataCache(TVirtualStreamerInfo *info, TVirtualArray *onfileObject, Int_t offset) :; 1474 TConfiguration(info, -1, nullptr, offset), fOnfileObject(onfileObject); 1475 {}; 1476 ; 1477 void Print() const override; 1478 {; 1479 TStreamerInfo *info = (TStreamerInfo*)fInfo;; 1480 if (fOnfileObject); 1481 printf(""StreamerInfoAction, class:%s, PushDataCache offset=%d\n"",; 1482 info->GetClass()->GetName(), fOffset);; 1483 else; 1484 printf(""StreamerInfoAction, class:%s, PopDataCache offset=%d\n"",; 1485 info->GetClass()->GetName(), fOffset);; 1486 }; 1487 void PrintDebug(TBuffer &buffer, void *object) const override; 1488",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:60805,config,config,60805,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"3403///; 3404/// if x is less than the low-edge of the first bin, the Underflow bin is incremented; 3405/// if x is equal to or greater than the upper edge of last bin, the Overflow bin is incremented; 3406///; 3407/// If the weight is not equal to 1, the storage of the sum of squares of; 3408/// weights is automatically triggered and the sum of the squares of weights is incremented; 3409/// by \f$ w^2 \f$ in the bin corresponding to x.; 3410///; 3411/// The function returns the corresponding bin number which has its content; 3412/// incremented by w.; 3413 ; 3414Int_t TH1::Fill(const char *namex, Double_t w); 3415{; 3416 Int_t bin;; 3417 fEntries++;; 3418 bin =fXaxis.FindBin(namex);; 3419 if (bin <0) return -1;; 3420 if (!fSumw2.fN && w != 1.0 && !TestBit(TH1::kIsNotW)) Sumw2();; 3421 if (fSumw2.fN) fSumw2.fArray[bin] += w*w;; 3422 AddBinContent(bin, w);; 3423 if (bin == 0 || bin > fXaxis.GetNbins()) return -1;; 3424 Double_t z= w;; 3425 fTsumw += z;; 3426 fTsumw2 += z*z;; 3427 // this make sense if the histogram is not expanding (the x axis cannot be extended); 3428 if (!fXaxis.CanExtend() || !fXaxis.IsAlphanumeric()) {; 3429 Double_t x = fXaxis.GetBinCenter(bin);; 3430 fTsumwx += z*x;; 3431 fTsumwx2 += z*x*x;; 3432 }; 3433 return bin;; 3434}; 3435 ; 3436////////////////////////////////////////////////////////////////////////////////; 3437/// Fill this histogram with an array x and weights w.; 3438///; 3439/// \param[in] ntimes number of entries in arrays x and w (array size must be ntimes*stride); 3440/// \param[in] x array of values to be histogrammed; 3441/// \param[in] w array of weighs; 3442/// \param[in] stride step size through arrays x and w; 3443///; 3444/// If the weight is not equal to 1, the storage of the sum of squares of; 3445/// weights is automatically triggered and the sum of the squares of weights is incremented; 3446/// by \f$ w^2 \f$ in the bin corresponding to x.; 3447/// if w is NULL each entry is assumed a weight=1; 3448 ; 3449void TH1::Fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:136603,extend,extended,136603,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extended']
Modifiability,"3461 DEBUG_TRACE(""%s"", ""Host name format error '[' without ']'"");; 13462 return;; 13463 }; 13464 /* terminate after ']' */; 13465 host->ptr = host_header;; 13466 host->len = (size_t)(pos + 1 - host_header);; 13467 } else {; 13468 /* Otherwise, a ':' separates hostname and port number */; 13469 pos = strchr(host_header, ':');; 13470 if (pos != NULL) {; 13471 host->len = (size_t)(pos - host_header);; 13472 } else {; 13473 host->len = strlen(host_header);; 13474 }; 13475 host->ptr = host_header;; 13476 }; 13477 }; 13478}; 13479 ; 13480 ; 13481static int; 13482switch_domain_context(struct mg_connection *conn); 13483{; 13484 struct vec host;; 13485 ; 13486 get_host_from_request_info(&host, &conn->request_info);; 13487 ; 13488 if (host.ptr) {; 13489 if (conn->ssl) {; 13490 /* This is a HTTPS connection, maybe we have a hostname; 13491 * from SNI (set in ssl_servername_callback). */; 13492 const char *sslhost = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 13493 if (sslhost && (conn->dom_ctx != &(conn->phys_ctx->dd))) {; 13494 /* We are not using the default domain */; 13495 if ((strlen(sslhost) != host.len); 13496 || mg_strncasecmp(host.ptr, sslhost, host.len)) {; 13497 /* Mismatch between SNI domain and HTTP domain */; 13498 DEBUG_TRACE(""Host mismatch: SNI: %s, HTTPS: %.*s"",; 13499 sslhost,; 13500 (int)host.len,; 13501 host.ptr);; 13502 return 0;; 13503 }; 13504 }; 13505 ; 13506 } else {; 13507 struct mg_domain_context *dom = &(conn->phys_ctx->dd);; 13508 while (dom) {; 13509 const char *domName = dom->config[AUTHENTICATION_DOMAIN];; 13510 size_t domNameLen = strlen(domName);; 13511 if ((domNameLen == host.len); 13512 && !mg_strncasecmp(host.ptr, domName, host.len)) {; 13513 ; 13514 /* Found matching domain */; 13515 DEBUG_TRACE(""HTTP domain %s found"",; 13516 dom->config[AUTHENTICATION_DOMAIN]);; 13517 ; 13518 /* TODO: Check if this is a HTTP or HTTPS domain */; 13519 conn->dom_ctx = dom;; 13520 break;; 13521 }; 13522 mg_lock_context(conn->phys_ctx);; 13523 dom = dom->n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:394310,config,config,394310,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"3462 DEBUG_TRACE(""%s"", ""Host name format error '[' without ']'"");; 13463 return;; 13464 }; 13465 /* terminate after ']' */; 13466 host->ptr = host_header;; 13467 host->len = (size_t)(pos + 1 - host_header);; 13468 } else {; 13469 /* Otherwise, a ':' separates hostname and port number */; 13470 pos = strchr(host_header, ':');; 13471 if (pos != NULL) {; 13472 host->len = (size_t)(pos - host_header);; 13473 } else {; 13474 host->len = strlen(host_header);; 13475 }; 13476 host->ptr = host_header;; 13477 }; 13478 }; 13479}; 13480 ; 13481 ; 13482static int; 13483switch_domain_context(struct mg_connection *conn); 13484{; 13485 struct vec host;; 13486 ; 13487 get_host_from_request_info(&host, &conn->request_info);; 13488 ; 13489 if (host.ptr) {; 13490 if (conn->ssl) {; 13491 /* This is a HTTPS connection, maybe we have a hostname; 13492 * from SNI (set in ssl_servername_callback). */; 13493 const char *sslhost = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 13494 if (sslhost && (conn->dom_ctx != &(conn->phys_ctx->dd))) {; 13495 /* We are not using the default domain */; 13496 if ((strlen(sslhost) != host.len); 13497 || mg_strncasecmp(host.ptr, sslhost, host.len)) {; 13498 /* Mismatch between SNI domain and HTTP domain */; 13499 DEBUG_TRACE(""Host mismatch: SNI: %s, HTTPS: %.*s"",; 13500 sslhost,; 13501 (int)host.len,; 13502 host.ptr);; 13503 return 0;; 13504 }; 13505 }; 13506 ; 13507 } else {; 13508 struct mg_domain_context *dom = &(conn->phys_ctx->dd);; 13509 while (dom) {; 13510 const char *domName = dom->config[AUTHENTICATION_DOMAIN];; 13511 size_t domNameLen = strlen(domName);; 13512 if ((domNameLen == host.len); 13513 && !mg_strncasecmp(host.ptr, domName, host.len)) {; 13514 ; 13515 /* Found matching domain */; 13516 DEBUG_TRACE(""HTTP domain %s found"",; 13517 dom->config[AUTHENTICATION_DOMAIN]);; 13518 ; 13519 /* TODO: Check if this is a HTTP or HTTPS domain */; 13520 conn->dom_ctx = dom;; 13521 break;; 13522 }; 13523 mg_lock_context(conn->phys_ctx);; 13524 dom = dom->n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:394343,config,config,394343,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"36 Printf("" Tab : autocomplete command or print suggestions [Ctrl+I] [Esc,Tab]"");; 1337 Printf("" Enter : execute command [Ctrl+J] [Ctrl+M]"");; 1338 Printf("" Ctrl+L : clear prompt screen"");; 1339 Printf("" Ctrl+D : quit ROOT (if empty line)"");; 1340 Printf("" Ctrl+C : send kSigInt interrupt signal"");; 1341 Printf("" Ctrl+Z : send kSigStop pause job signal"");; 1342 ; 1343 Printf("" Arrow_Down : navigate downwards in command history [Ctrl+N]"");; 1344 Printf("" Arrow_Up : navigate upwards in command history [Ctrl+P]"");; 1345 Printf("" Ctrl+R ; Ctrl+S : search command in your history by typing a string.\n""; 1346 "" Use Backspace if you mistyped (but not arrows).\n""; 1347 "" Press Ctrl+R (Ctrl+S) repeateadly to navigate matches in reverse (forward) order"");; 1348 Printf("" Arrow_Right : after Ctrl+R (Ctrl+S), select current match of the history search\n""; 1349 "" [Ctrl+O] [Enter] [Ctrl+J] [Ctrl+M] [Arrow_Left] [Esc,Esc].\n""; 1350 "" Use Ctrl+F or Ctrl+G to cancel search and revert original line"");; 1351 ; 1352 return;; 1353 }; 1354 // We call the function what handles the extended "".help scopeName"" command.; 1355 OpenReferenceGuideFor(strippedCommand);; 1356 }; 1357}; 1358 ; 1359/// Load shared libs necessary for graphics. These libraries are only; 1360/// loaded when gROOT->IsBatch() is kFALSE.; 1361 ; 1362void TApplication::LoadGraphicsLibs(); 1363{; 1364 if (gROOT->IsBatch()); 1365 return;; 1366 ; 1367 if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualPad"")); 1368 if (h->LoadPlugin() == -1); 1369 return;; 1370 ; 1371 TString name;; 1372 TString title1 = ""ROOT interface to "";; 1373 TString nativex, title;; 1374 ; 1375#ifdef R__WIN32; 1376 nativex = ""win32gdk"";; 1377 name = ""Win32gdk"";; 1378 title = title1 + ""Win32gdk"";; 1379#elif defined(R__HAS_COCOA); 1380 nativex = ""quartz"";; 1381 name = ""quartz"";; 1382 title = title1 + ""Quartz"";; 1383#else; 1384 nativex = ""x11"";; 1385 name = ""X11"";; 1386 title = title1 + ""X11"";; 1387#endif; 1388 ; 1389 TString guiBackend = gEnv->GetVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:54894,extend,extended,54894,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['extend'],['extended']
Modifiability,"36; TMVA::DataLoader::fATreeEventstd::vector< Float_t > fATreeEventevent variablesDefinition DataLoader.h:208; TMVA::DataLoader::DefaultDataSetInfoDataSetInfo & DefaultDataSetInfo()default creationDefinition DataLoader.cxx:533; TMVA::DataLoader::AddBackgroundTestEventvoid AddBackgroundTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:252; TMVA::DataLoader::fDataSetManagerDataSetManager * fDataSetManagerDefinition DataLoader.h:186; TMVA::DataLoader::MakeCopyDataLoader * MakeCopy(TString name)Copy method use in VI and CV.Definition DataLoader.cxx:691; TMVA::DataLoader::SetSignalWeightExpressionvoid SetSignalWeightExpression(const TString &variable)Definition DataLoader.cxx:549; TMVA::DataLoader::MakeKFoldDataSetvoid MakeKFoldDataSet(CvSplit &s)Function required to split the training and testing datasets into a number of folds.Definition DataLoader.cxx:662; TMVA::DataLoader::SetWeightExpressionvoid SetWeightExpression(const TString &variable, const TString &className="""")Definition DataLoader.cxx:563; TMVA::DataLoader::AddBackgroundTrainingEventvoid AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:244; TMVA::DataLoader::RecombineKFoldDataSetvoid RecombineKFoldDataSet(CvSplit &s, Types::ETreeType tt=Types::kTraining)Recombines the dataset.Definition DataLoader.cxx:683; TMVA::DataLoader::VarTransformDataLoader * VarTransform(TString trafoDefinition)Transforms the variables and return a new DataLoader with the transformed variables.Definition DataLoader.cxx:146; TMVA::DataLoader::SetBackgroundWeightExpressionvoid SetBackgroundWeightExpression(const TString &variable)Definition DataLoader.cxx:556; TMVA::DataLoader::AddCutvoid AddCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:588; TMVA::DataLoader::AddEventvoid AddEvent(const TString &className, Types::ETreeType tt, const std::vector< Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:15081,variab,variable,15081,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['variab'],['variable']
Modifiability,"3706/// continuation requested we must reset it.; 3707 ; 3708void TCling::Reset(); 3709{; 3710 fMetaProcessor->cancelContinuation();; 3711 // Reset the Cling state to the state saved by the last call to; 3712 // TCling::SaveContext().; 3713#if defined(R__MUST_REVISIT); 3714#if R__MUST_REVISIT(6,2); 3715 R__LOCKGUARD(gInterpreterMutex);; 3716 Warning(""Reset"",""Cling should support the equivalent of scratch_upto(&fDictPos)"");; 3717#endif; 3718#endif; 3719}; 3720 ; 3721////////////////////////////////////////////////////////////////////////////////; 3722/// Reset the Cling state to its initial state.; 3723 ; 3724void TCling::ResetAll(); 3725{; 3726#if defined(R__MUST_REVISIT); 3727#if R__MUST_REVISIT(6,2); 3728 R__LOCKGUARD(gInterpreterMutex);; 3729 Warning(""ResetAll"",""Cling should support the equivalent of complete reset (unload everything but the startup decls."");; 3730#endif; 3731#endif; 3732}; 3733 ; 3734////////////////////////////////////////////////////////////////////////////////; 3735/// Reset in Cling the list of global variables to the state saved by the last; 3736/// call to TCling::SaveGlobalsContext().; 3737///; 3738/// Note: Right now, all we do is run the global destructors.; 3739 ; 3740void TCling::ResetGlobals(); 3741{; 3742 R__LOCKGUARD(gInterpreterMutex);; 3743 // TODO:; 3744 // Here we should iterate over the transactions (N-3) and revert.; 3745 // N-3 because the first three internal to cling.; 3746 ; 3747 fInterpreter->runAndRemoveStaticDestructors();; 3748}; 3749 ; 3750////////////////////////////////////////////////////////////////////////////////; 3751/// Reset the Cling 'user' global objects/variables state to the state saved by the last; 3752/// call to TCling::SaveGlobalsContext().; 3753 ; 3754void TCling::ResetGlobalVar(void* obj); 3755{; 3756#if defined(R__MUST_REVISIT); 3757#if R__MUST_REVISIT(6,2); 3758 R__LOCKGUARD(gInterpreterMutex);; 3759 Warning(""ResetGlobalVar"",""Cling should support the equivalent of resetglobalvar(obj)"");; 3760#end",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:144975,variab,variables,144975,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['variab'],['variables']
Modifiability,3720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91488,config,configuration,91488,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92842,config,configuration,92842,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92956,config,configuration,92956,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"38 (int)ERRNO,; 15139 strerror(errno));; 15140 closesocket(so.sock);; 15141 so.sock = INVALID_SOCKET;; 15142 continue;; 15143 }; 15144 }; 15145#endif; 15146#if defined(USE_X_DOM_SOCKET); 15147 else if (so.lsa.sa.sa_family == AF_UNIX) {; 15148 ; 15149 len = sizeof(so.lsa.sun);; 15150 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15151 mg_cry_ctx_internal(phys_ctx,; 15152 ""cannot bind to unix socket %s: %d (%s)"",; 15153 so.lsa.sun.sun_path,; 15154 (int)ERRNO,; 15155 strerror(errno));; 15156 closesocket(so.sock);; 15157 so.sock = INVALID_SOCKET;; 15158 continue;; 15159 }; 15160 }; 15161#endif; 15162 else {; 15163 mg_cry_ctx_internal(; 15164 phys_ctx,; 15165 ""cannot bind: address family not supported (entry %i)"",; 15166 portsTotal);; 15167 closesocket(so.sock);; 15168 so.sock = INVALID_SOCKET;; 15169 continue;; 15170 }; 15171 ; 15172 opt_txt = phys_ctx->dd.config[LISTEN_BACKLOG_SIZE];; 15173 opt_listen_backlog = strtol(opt_txt, NULL, 10);; 15174 if ((opt_listen_backlog > INT_MAX) || (opt_listen_backlog < 1)) {; 15175 mg_cry_ctx_internal(phys_ctx,; 15176 ""%s value \""%s\"" is invalid"",; 15177 config_options[LISTEN_BACKLOG_SIZE].name,; 15178 opt_txt);; 15179 closesocket(so.sock);; 15180 so.sock = INVALID_SOCKET;; 15181 continue;; 15182 }; 15183 ; 15184 if (listen(so.sock, (int)opt_listen_backlog) != 0) {; 15185 ; 15186 mg_cry_ctx_internal(phys_ctx,; 15187 ""cannot listen to %.*s: %d (%s)"",; 15188 (int)vec.len,; 15189 vec.ptr,; 15190 (int)ERRNO,; 15191 strerror(errno));; 15192 closesocket(so.sock);; 15193 so.sock = INVALID_SOCKET;; 15194 continue;; 15195 }; 15196 ; 15197 if ((getsockname(so.sock, &(usa.sa), &len) != 0); 15198 || (usa.sa.sa_family != so.lsa.sa.sa_family)) {; 15199 ; 15200 int err = (int)ERRNO;; 15201 mg_cry_ctx_internal(phys_ctx,; 15202 ""call to getsockname failed %.*s: %d (%s)"",; 15203 (int)vec.len,; 15204 vec.ptr,; 15205 err,; 15206 strerror(errno));; 15207 closesocket(so.sock);; 15208 so.sock = INVALID_SOCKET;; 15209 continue;; 15210 }; 15211 ; 15212 /* Updat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:448592,config,config,448592,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,38.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1116 | 2.82496 2.31503 0.0201083 0.00181922 43742 0; : 1117 | 2.74168 2.90157 0.0200454 0.00175765 43745.2 1; : 1118 | 2.51176 4.00704 0.0201409 0.00176812 43542.7 2; : 1119 | 3.03618 2.55498 0.0202517 0.00178949 43331.7 3; : 1120 | 2.66116 2.61177 0.0204165 0.00176394 42889.5 4; : 1121 | 3.00965 2.56116 0.0204562 0.00180217 42886.2 5; : 1122 | 3.0625 3.75816 0.0204635 0.00176149 42776.2 6; : 1123 | 2.88666 2.6576 0.0204265 0.00178135 42906.6 7; : 1124 | 2.54231 2.73598 0.020225 0.00176346 43333.4 8; : 1125 | 2.44231 2.73459 0.0201498 0.00175906 43500.1 9; : 1126 | 2.45201 2.82465 0.0200726 0.00175651 43677.5 10; : 1127 | 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:120426,config,configuration,120426,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"39 (int)ERRNO,; 15140 strerror(errno));; 15141 closesocket(so.sock);; 15142 so.sock = INVALID_SOCKET;; 15143 continue;; 15144 }; 15145 }; 15146#endif; 15147#if defined(USE_X_DOM_SOCKET); 15148 else if (so.lsa.sa.sa_family == AF_UNIX) {; 15149 ; 15150 len = sizeof(so.lsa.sun);; 15151 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15152 mg_cry_ctx_internal(phys_ctx,; 15153 ""cannot bind to unix socket %s: %d (%s)"",; 15154 so.lsa.sun.sun_path,; 15155 (int)ERRNO,; 15156 strerror(errno));; 15157 closesocket(so.sock);; 15158 so.sock = INVALID_SOCKET;; 15159 continue;; 15160 }; 15161 }; 15162#endif; 15163 else {; 15164 mg_cry_ctx_internal(; 15165 phys_ctx,; 15166 ""cannot bind: address family not supported (entry %i)"",; 15167 portsTotal);; 15168 closesocket(so.sock);; 15169 so.sock = INVALID_SOCKET;; 15170 continue;; 15171 }; 15172 ; 15173 opt_txt = phys_ctx->dd.config[LISTEN_BACKLOG_SIZE];; 15174 opt_listen_backlog = strtol(opt_txt, NULL, 10);; 15175 if ((opt_listen_backlog > INT_MAX) || (opt_listen_backlog < 1)) {; 15176 mg_cry_ctx_internal(phys_ctx,; 15177 ""%s value \""%s\"" is invalid"",; 15178 config_options[LISTEN_BACKLOG_SIZE].name,; 15179 opt_txt);; 15180 closesocket(so.sock);; 15181 so.sock = INVALID_SOCKET;; 15182 continue;; 15183 }; 15184 ; 15185 if (listen(so.sock, (int)opt_listen_backlog) != 0) {; 15186 ; 15187 mg_cry_ctx_internal(phys_ctx,; 15188 ""cannot listen to %.*s: %d (%s)"",; 15189 (int)vec.len,; 15190 vec.ptr,; 15191 (int)ERRNO,; 15192 strerror(errno));; 15193 closesocket(so.sock);; 15194 so.sock = INVALID_SOCKET;; 15195 continue;; 15196 }; 15197 ; 15198 if ((getsockname(so.sock, &(usa.sa), &len) != 0); 15199 || (usa.sa.sa_family != so.lsa.sa.sa_family)) {; 15200 ; 15201 int err = (int)ERRNO;; 15202 mg_cry_ctx_internal(phys_ctx,; 15203 ""call to getsockname failed %.*s: %d (%s)"",; 15204 (int)vec.len,; 15205 vec.ptr,; 15206 err,; 15207 strerror(errno));; 15208 closesocket(so.sock);; 15209 so.sock = INVALID_SOCKET;; 15210 continue;; 15211 }; 15212 ; 15213 /* Updat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:448625,config,config,448625,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,39 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84085,config,configuration,84085,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"39 TVirtualStreamerInfo *sinfo = ((TClass *)this)->GetCurrentStreamerInfo();; 2340 if (sinfo==nullptr) sinfo = GetStreamerInfo();; 2341 TIter next(sinfo->GetElements());; 2342 TStreamerElement *element;; 2343 while ((element = (TStreamerElement*)next())) {; 2344 if (element->IsA() == TStreamerBase::Class()) {; 2345 TClass *clbase = element->GetClassPointer();; 2346 if (!clbase) {; 2347 // If there is a missing base class, we can't split the immediate; 2348 // derived class.; 2349 fCanSplit = 0;; 2350 return kFALSE;; 2351 } else if (!clbase->CanSplitBaseAllow()) {; 2352 fCanSplit = 2;; 2353 return kFALSE;; 2354 }; 2355 }; 2356 }; 2357 }; 2358 ; 2359 // If we don't have data member info there is no more information; 2360 // we can find out.; 2361 if (!HasDataMemberInfo()) return kTRUE;; 2362 ; 2363 TObjLink *lnk = GetListOfBases() ? fBase.load()->FirstLink() : nullptr;; 2364 ; 2365 // Look at inheritance tree; 2366 while (lnk) {; 2367 TBaseClass *base = (TBaseClass*) lnk->GetObject();; 2368 TClass *c = base->GetClassPointer();; 2369 if(!c) {; 2370 // If there is a missing base class, we can't split the immediate; 2371 // derived class.; 2372 fCanSplit = 0;; 2373 return kFALSE;; 2374 } else if (!c->CanSplitBaseAllow()) {; 2375 fCanSplit = 2;; 2376 return kFALSE;; 2377 }; 2378 lnk = lnk->Next();; 2379 }; 2380 return kTRUE;; 2381}; 2382 ; 2383////////////////////////////////////////////////////////////////////////////////; 2384/// Return true if the data member of this TClass can be saved separately.; 2385 ; 2386Bool_t TClass::CanSplit() const; 2387{; 2388 // Note: add the possibility to set it for the class and the derived class.; 2389 // save the info in TVirtualStreamerInfo; 2390 // deal with the info in MakeProject; 2391 if (fCanSplit >= 0) {; 2392 // The user explicitly set the value; 2393 return (fCanSplit & 0x1) == 1;; 2394 }; 2395 ; 2396 R__LOCKGUARD(gInterpreterMutex);; 2397 TClass *This = const_cast<TClass*>(this);; 2398 ; 2399 if (this == TObject::Class()) { T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:89568,inherit,inheritance,89568,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,39.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minimum Test error found - save the configuration ; : 1062 | 3.14929 3.19749 0.0201067 0.00181963 43746.8 0; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 | 3.05672 2.86026 0.0203982 0.00182711 43077.7 0; : 1068 | 3.10603 3.29637 0.020205 0.00184144 43564.6 1; : 1069 | 2.88449 4.01918 0.0203768 0.00179741 43058.4 2; : 1070 | 2.97807 3.34364 0.0200746 0.00174903 43654.8 3; : 1071 | 3.12106 3.50221 0.0203054 0.0017782 43179.8 4; : 1072 | 2.87393 2.91962 0.020149 0.001768 43523.2 5; : 1073 | 2.90826 3.29161 0.0202848 0.00180763 43296.8 6; : 1074 | 3.06053 3.26664 0.0201588 0.00175733 43474.8 7; : 1075 Minimum Test error found - save the configuration ; : 1075 | 2.97935 2.76485 0.0202008 0.00187279 43649.1 0; : 1076 | 2.74949 3.00321 0.0203478 0.00181324 43162.6 1; : 1077 | 2.76284 3.75591 0.0207943 0.00180912 42138.1 2; : 1078 Minimum Test error found - save the configuration ; : 1078 | 3.00913 2.73577 0.0203661 0.0018517 43209.6 0; : 1079 | 2.90364 3.01716 0.0202612 0.00175591 43230.9 1; : 1080 | 2.84249 3.41706 0.0201644 0.00176658 43483.3 2; : 1081 | 2.8573 3.42383 0.0204284 0.00175777 42848.1 3; :,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:117535,config,configuration,117535,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97417,config,configuration,97417,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,3; : Corresponding background efficiency : 0.0401486; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -6.09813 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 2.81831; : Cut[ 2]: -2.09336 < var3 <= 1e+30; : Cut[ 3]: 1.34308 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.4; : Corresponding background efficiency : 0.062887; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -4.55141 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 2.94573; : Cut[ 2]: -4.68697 < var3 <= 1e+30; : Cut[ 3]: 1.07157 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.5; : Corresponding background efficiency : 0.104486; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -5.86032 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 2.89615; : Cut[ 2]: -0.966191 < var3 <= 1e+30; : Cut[ 3]: 0.773848 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.6; : Corresponding background efficiency : 0.172806; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -5.52552 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 4.08498; : Cut[ 2]: -2.61706 < var3 <= 1e+30; : Cut[ 3]: 0.469684 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.7; : Corresponding background efficiency : 0.258379; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -5.69875 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:15185,variab,variables,15185,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"3="""", const char *name4="""", const char *name5="""", const char *name6="""", const char *name7="""", const char *name8="""", const char *name9="""", const char *name10="""");  Set up to 10 parameter names. ;  ; virtual void SetSavedPoint (Int_t point, Double_t value);  Restore value of function saved at point. ;  ; void SetTitle (const char *title="""") override;  Set function title if title has the form ""fffffff;xxxx;yyyy"", it is assumed that the function title is ""fffffff"" and ""xxxx"" and ""yyyy"" are the titles for the X and Y axis respectively. ;  ; virtual void SetVectorized (Bool_t vectorized);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update ();  Called by functions such as SetRange, SetNpx, SetParameters to force the deletion of the associated histogram or Integral. ;  ; virtual Double_t Variance (Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2.html:25657,inherit,inherited,25657,doc/master/classTF2.html,https://root.cern,https://root.cern/doc/master/classTF2.html,2,['inherit'],['inherited']
Modifiability,"3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Shape default destructor. ;  ; TMaterial * GetMaterial () const;  ; virtual Int_t GetNumber () const;  ; Int_t GetVisibility () const;  ; TShape & operator= (const TShape &);  assignment operator ;  ; void Paint (Option_t *option="""") override;  This method is used only when a shape is painted outside a TNode. ;  ; void SetName (const char *name) override;  Set the name of the TNamed. ;  ; virtual void SetVisibility (Int_t vis);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void TransformPoints (Double_t *points, UInt_t NbPnts) const;  Transform points (LocalToMaster) ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRAP.html:4020,inherit,inherited,4020,doc/master/classTTRAP.html,https://root.cern,https://root.cern/doc/master/classTTRAP.html,3,['inherit'],['inherited']
Modifiability,"3D ;  ; virtual TProfile2D * DoProjectProfile2D (const char *name, const char *title, const TAxis *projX, const TAxis *projY, bool originalRange, bool useUF, bool useOF) const;  internal method to project to a 2D Profile called from TH3::Project3DProfile ;  ; Int_t Fill (const char *, const char *, Double_t);  ; Int_t Fill (const char *, Double_t) override;  Increment bin with namex with a weight w. ;  ; Int_t Fill (const char *, Double_t, Double_t);  ; Int_t Fill (Double_t) override;  Invalid Fill method. ;  ; Int_t Fill (Double_t, const char *, Double_t);  ; Int_t Fill (Double_t, Double_t) override;  Increment bin with abscissa X with a weight w. ;  ; Double_t Interpolate (Double_t x) const override;  Not yet implemented. ;  ; Double_t Interpolate (Double_t x, Double_t y) const override;  Not yet implemented. ;  ;  Protected Member Functions inherited from TH1;  TH1 ();  Histogram default constructor. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Constructor for variable bin size histograms using an input array of type double. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Constructor for variable bin size histograms using an input array of type float. ;  ;  TH1 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Constructor for fix bin size histograms. ;  ; virtual Int_t AutoP2FindLimits (Double_t min, Double_t max);  Buffer-based estimate of the histogram range using the power of 2 algorithm. ;  ; Int_t AxisChoice (Option_t *axis) const;  Choose an axis according to ""axis"". ;  ; virtual void DoFillN (Int_t ntimes, const Double_t *x, const Double_t *w, Int_t stride=1);  Internal method to fill histogram content from a vector called directly by TH1::BufferEmpty. ;  ; virtual Double_t DoIntegral (Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) const;  Internal function compute integral and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:55242,variab,variable,55242,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,8,['variab'],['variable']
Modifiability,"3D Graphics » Event Display. ; Projected copy of a TEveTrack. ; Definition at line 19 of file TEveTrackProjected.h. Public Member Functions;  TEveTrackProjected ();  Default constructor. ;  ;  ~TEveTrackProjected () override;  ; TEveElement * GetProjectedAsElement () override;  Returns this projected dynamic-casted to TEveElement. ;  ; TClass * IsA () const override;  ; void MakeTrack (Bool_t recurse=kTRUE) override;  Calculate the points of the track for drawing. ;  ; void PrintLineSegments ();  Print line segments info. ;  ; void SecSelected (TEveTrack *) override;  Virtual method from from base-class TEveTrack. ;  ; void SetProjection (TEveProjectionManager *mng, TEveProjectable *model) override;  This is virtual method from base-class TEveProjected. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  Virtual method from base-class TEveProjected. ;  ;  Public Member Functions inherited from TEveTrack;  TEveTrack ();  Default constructor. ;  ;  TEveTrack (const TEveTrack &t);  Copy constructor. ;  ;  TEveTrack (TEveMCTrack *t, TEveTrackPropagator *prop=nullptr);  ;  TEveTrack (TEveRecTrack *t, TEveTrackPropagator *prop=nullptr);  Constructor from TEveRecTrack<float> reconstructed track. ;  ;  TEveTrack (TEveRecTrackD *t, TEveTrackPropagator *prop=nullptr);  Constructor from TEveRecTrack<double> reconstructed track. ;  ;  TEveTrack (TParticle *t, Int_t label, TEveTrackPropagator *prop=nullptr);  Constructor from TParticle. ;  ;  ~TEveTrack () override;  Destructor. ;  ; void AddPathMark (const TEvePathMark &pm);  ; void AddPathMark (const TEvePathMarkD &pm);  ; void ComputeBBox () override;  Compute the bounding box of the track. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; Int_t GetCharge () const;  ; Double_t GetDpDs () const;  ; const TEveVectorD & GetEndMomentum () const;  ; Int_t GetIndex () const;  ; Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackProjected.html:1376,inherit,inherited,1376,doc/master/classTEveTrackProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackProjected.html,1,['inherit'],['inherited']
Modifiability,"3D.; Profile histograms are used to display the mean value of Y and its RMS; for each bin in X. Profile histograms are in many cases an elegant; replacement of two-dimensional histograms : the inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter-plot; If Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile; histogram with much better precision than by a scatter-plot. All histogram classes are derived from the base class TH1. TH1; ^; |; |; |; -----------------------------------------------------------; | | | | | | |; | | TH1C TH1S TH1I TH1F TH1D; | | |; | | |; | TH2 TProfile; | |; | |; | ----------------------------------; | | | | | |; | TH2C TH2S TH2I TH2F TH2D; | |; TH3 |; | TProfile2D; |; -------------------------------------; | | | | |; TH3C TH3S TH3I TH3F TH3D; |; |; TProfile3D; The TH*C classes also inherit from the array class TArrayC.; The TH*S classes also inherit from the array class TArrayS.; The TH*I classes also inherit from the array class TArrayI.; The TH*F classes also inherit from the array class TArrayF.; The TH*D classes also inherit from the array class TArrayD. Creating histograms. Histograms are created by invoking one of the constructors, e.g. TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);. Histograms may also be created by:; ; calling the Clone function, see below; making a projection from a 2-D or 3-D histogram, see below; reading an histogram from a file; ; When an histogram is created, a reference to it is automatically added; to the list of in-memory objects for the current file or directory.; This default behaviour can be changed by:. h->SetDirectory(0); for the current histogram h; TH1::AddDirectory(kFALSE); sets a global switch disabling the reference. When the histogram is deleted, the reference to it is removed from; the list of objects in memory.; When a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:2638,inherit,inherit,2638,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,8,['inherit'],['inherit']
Modifiability,"3D; Int_t fLastPoint {-1};  ; Int_t fN {0};  ; TString fName;  ; TString fOption;  ; Float_t * fP {nullptr};  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttBBox; Float_t * fBBox;  ;  Protected Attributes inherited from TEvePointSelectorConsumer; ETreeVarType_e fSourceCS;  ;  Protected Attributes inherited from TEveProjectable; ProjList_t fProjectedList;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Static Protected Attributes; static Bool_t fgDefaultSmooth = kFALSE;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TEveLine (const TEveLine &);  ; TEveLine & operator= (const TEveLine &);  . Friends; class TEveLineEditor;  ; class TEveLineGL;  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inheri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:44797,inherit,inherited,44797,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,1,['inherit'],['inherited']
Modifiability,"3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<double>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html:14882,Inherit,Inheritance,14882,root/html532/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<double>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const Scalar[] src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::Displa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html:11112,Inherit,Inheritance,11112,root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"3D<double>,ROOT::Math::DefaultCoordinateSystemTag>DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&); ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&operator+=<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&); ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&operator=<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&). Data Members; private:. ROOT::Math::Cartesian3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const Scalar[] src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector3D<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:13077,Inherit,Inheritance,13077,root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cartesian3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"3D<double>::Scalar r, ROOT::Math::Polar3D<double>::Scalar theta, ROOT::Math::Polar3D<double>::Scalar phi); voidSetEta(ROOT::Math::Polar3D<double>::Scalar eta); voidSetPhi(const double& phi); voidSetR(const double& r); voidSetRho(ROOT::Math::Polar3D<double>::Scalar rho); voidSetTheta(const double& theta); voidSetX(ROOT::Math::Polar3D<double>::Scalar xx); voidSetXYZ(ROOT::Math::Polar3D<double>::Scalar xx, ROOT::Math::Polar3D<double>::Scalar yy, ROOT::Math::Polar3D<double>::Scalar zz); voidSetY(ROOT::Math::Polar3D<double>::Scalar yy); voidSetZ(ROOT::Math::Polar3D<double>::Scalar zz); ROOT::Math::Polar3D<double>::ScalarTheta() const; ROOT::Math::Polar3D<double>::ScalarX() const; doublex() const; ROOT::Math::Polar3D<double>::ScalarY() const; doubley() const; ROOT::Math::Polar3D<double>::ScalarZ() const; doublez() const. private:. static ROOT::Math::Polar3D<double>::Scalarpi(); voidRestrict(). Data Members; private:. doublefPhi; doublefR; doublefTheta. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Polar3D & operator=(const ROOT::Math::Polar3D<double>& v). assignment operator. void SetCoordinates(const ROOT::Math::Polar3D<double>::Scalar* src). Set internal data based on an array of 3 Scalar numbers. { fR=src[0]; fTheta=src[1]; fPhi=src[2]; Restrict(); }. void GetCoordinates(ROOT::Math::Polar3D<double>::Scalar* dest) const. get internal data into an array of 3 Scalar numbers. { dest[0] = fR; dest[1] = fTheta; dest[2] = fPhi; }. void SetCoordinates(ROOT::Math::Polar3D<double>::Scalar r, ROOT::Math::Polar3D<double>::Scalar theta, ROOT::Math::Polar3D<double>::Scalar phi). Set internal data based on 3 Scalar numbers. { fR=r; fTheta=theta; fPhi=phi; Restrict(); }. void GetCoordinates(ROOT::Math::Polar3D<double>::Scalar& r, ROOT::Math::Polar3D<double>::Scalar& theta, ROOT::Math::Polar3D<double>::Scalar& phi) const. get internal data into 3 Scalar numbers. {r=fR; theta=fTheta; phi=fPhi;}. Scalar R() const; { return fR;}. Scalar Phi() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__Polar3D_double_.html:2818,Inherit,Inheritance,2818,root/html532/ROOT__Math__Polar3D_double_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__Polar3D_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"3i);  Copy constructor. ;  ;  ~TH3I () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3I & operator= (const TH3I &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH3. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH3;  ~TH3 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, const char *namez, Double_t w);  Increment cell defined by namex,namey,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t z, Double_t w);  Increment cell defined by namex,namey,z by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, const char *namez, Double_t w);  Increment cell defined by namex,y,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t z, Double_t w);  Increment cell defined by namex , y ,z by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, const char *namez, Double_t w);  Increment cell defined by x,namey,namez by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t z, Double_t w);  Increment cell defined ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:2296,inherit,inherited,2296,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,1,['inherit'],['inherited']
Modifiability,"3l);  Copy constructor. ;  ;  ~TH3L () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3L & operator= (const TH3L &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH3. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH3;  ~TH3 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, const char *namez, Double_t w);  Increment cell defined by namex,namey,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t z, Double_t w);  Increment cell defined by namex,namey,z by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, const char *namez, Double_t w);  Increment cell defined by namex,y,namez by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t z, Double_t w);  Increment cell defined by namex , y ,z by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, const char *namez, Double_t w);  Increment cell defined by x,namey,namez by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t z, Double_t w);  Increment cell defined ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:2298,inherit,inherited,2298,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,1,['inherit'],['inherited']
Modifiability,"4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. Function Members (Methods); public:. ~MatRepStd<double,4,4>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(); ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(const ROOT::Math::MatRepStd<double,4,4>&); ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(ROOT::Math::MatRepStd<double,4,4>&&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,4,4>&operator=(const ROOT::Math::MatRepStd<double,4,4>&); ROOT::Math::MatRepStd<double,4,4>&operator=(ROOT::Math::MatRepStd<double,4,4>&&); ROOT::Math::MatRepStd<double,4U,4U>&operator=<ROOT::Math::MatRepStd<double, 4, 4> >(const ROOT::Math::MatRepStd<double,4,4>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepStd<double,4,4>::(anonymous)kCols; static ROOT::Math::MatRepStd<double,4,4>::(anonymous)kRows; static ROOT::Math::MatRepStd<double,4,4>::(anonymous)kSize. private:. Double32_tfArray[16]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const R& rhs). MatRepSym<T, D>& operator=(const R&). assignment : only symmetric to symmetric allowed. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MatRepStd_Double32_t_4_4_.html:2046,Inherit,Inheritance,2046,root/html602/ROOT__Math__MatRepStd_Double32_t_4_4_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MatRepStd_Double32_t_4_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. Function Members (Methods); public:. ~MatRepStd<double,4,4>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(); ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(const ROOT::Math::MatRepStd<double,4,4>&); ROOT::Math::MatRepStd<double,4,4>MatRepStd<double,4,4>(ROOT::Math::MatRepStd<double,4,4>&&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,4,4>&operator=(const ROOT::Math::MatRepStd<double,4,4>&); ROOT::Math::MatRepStd<double,4,4>&operator=(ROOT::Math::MatRepStd<double,4,4>&&); ROOT::Math::MatRepStd<double,4U,4U>&operator=<ROOT::Math::MatRepStd<double, 4, 4> >(const ROOT::Math::MatRepStd<double,4,4>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepStd<double,4,4>::(anonymous)kCols; static ROOT::Math::MatRepStd<double,4,4>::(anonymous)kRows; static ROOT::Math::MatRepStd<double,4,4>::(anonymous)kSize. private:. Double32_tfArray[16]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const R& rhs). MatRepSym<T, D>& operator=(const R&). assignment : only symmetric to symmetric allowed. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__MatRepStd_Double32_t_4_4_.html:2046,Inherit,Inheritance,2046,root/html604/ROOT__Math__MatRepStd_Double32_t_4_4_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__MatRepStd_Double32_t_4_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. Function Members (Methods); public:. ~MatRepStd<double,5,5>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(); ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(const ROOT::Math::MatRepStd<double,5,5>&); ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(ROOT::Math::MatRepStd<double,5,5>&&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,5,5>&operator=(const ROOT::Math::MatRepStd<double,5,5>&); ROOT::Math::MatRepStd<double,5,5>&operator=(ROOT::Math::MatRepStd<double,5,5>&&); ROOT::Math::MatRepStd<double,5U,5U>&operator=<ROOT::Math::MatRepStd<double, 5, 5> >(const ROOT::Math::MatRepStd<double,5,5>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepStd<double,5,5>::(anonymous)kCols; static ROOT::Math::MatRepStd<double,5,5>::(anonymous)kRows; static ROOT::Math::MatRepStd<double,5,5>::(anonymous)kSize. private:. Double32_tfArray[25]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const R& rhs). MatRepSym<T, D>& operator=(const R&). assignment : only symmetric to symmetric allowed. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MatRepStd_Double32_t_5_5_.html:2046,Inherit,Inheritance,2046,root/html602/ROOT__Math__MatRepStd_Double32_t_5_5_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MatRepStd_Double32_t_5_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. Function Members (Methods); public:. ~MatRepStd<double,5,5>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(); ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(const ROOT::Math::MatRepStd<double,5,5>&); ROOT::Math::MatRepStd<double,5,5>MatRepStd<double,5,5>(ROOT::Math::MatRepStd<double,5,5>&&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,5,5>&operator=(const ROOT::Math::MatRepStd<double,5,5>&); ROOT::Math::MatRepStd<double,5,5>&operator=(ROOT::Math::MatRepStd<double,5,5>&&); ROOT::Math::MatRepStd<double,5U,5U>&operator=<ROOT::Math::MatRepStd<double, 5, 5> >(const ROOT::Math::MatRepStd<double,5,5>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepStd<double,5,5>::(anonymous)kCols; static ROOT::Math::MatRepStd<double,5,5>::(anonymous)kRows; static ROOT::Math::MatRepStd<double,5,5>::(anonymous)kSize. private:. Double32_tfArray[25]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const R& rhs). MatRepSym<T, D>& operator=(const R&). assignment : only symmetric to symmetric allowed. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__MatRepStd_Double32_t_5_5_.html:2046,Inherit,Inheritance,2046,root/html604/ROOT__Math__MatRepStd_Double32_t_5_5_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__MatRepStd_Double32_t_5_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. Function Members (Methods); public:. ~MatRepStd<double,6,6>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(); ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(const ROOT::Math::MatRepStd<double,6,6>&); ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(ROOT::Math::MatRepStd<double,6,6>&&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,6,6>&operator=(const ROOT::Math::MatRepStd<double,6,6>&); ROOT::Math::MatRepStd<double,6,6>&operator=(ROOT::Math::MatRepStd<double,6,6>&&); ROOT::Math::MatRepStd<double,6U,6U>&operator=<ROOT::Math::MatRepStd<double, 6, 6> >(const ROOT::Math::MatRepStd<double,6,6>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepStd<double,6,6>::(anonymous)kCols; static ROOT::Math::MatRepStd<double,6,6>::(anonymous)kRows; static ROOT::Math::MatRepStd<double,6,6>::(anonymous)kSize. private:. Double32_tfArray[36]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const R& rhs). MatRepSym<T, D>& operator=(const R&). assignment : only symmetric to symmetric allowed. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MatRepStd_Double32_t_6_6_.html:2046,Inherit,Inheritance,2046,root/html602/ROOT__Math__MatRepStd_Double32_t_6_6_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MatRepStd_Double32_t_6_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. Function Members (Methods); public:. ~MatRepStd<double,6,6>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(); ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(const ROOT::Math::MatRepStd<double,6,6>&); ROOT::Math::MatRepStd<double,6,6>MatRepStd<double,6,6>(ROOT::Math::MatRepStd<double,6,6>&&); const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<double,6,6>&operator=(const ROOT::Math::MatRepStd<double,6,6>&); ROOT::Math::MatRepStd<double,6,6>&operator=(ROOT::Math::MatRepStd<double,6,6>&&); ROOT::Math::MatRepStd<double,6U,6U>&operator=<ROOT::Math::MatRepStd<double, 6, 6> >(const ROOT::Math::MatRepStd<double,6,6>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. static ROOT::Math::MatRepStd<double,6,6>::(anonymous)kCols; static ROOT::Math::MatRepStd<double,6,6>::(anonymous)kRows; static ROOT::Math::MatRepStd<double,6,6>::(anonymous)kSize. private:. Double32_tfArray[36]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const R& rhs). MatRepSym<T, D>& operator=(const R&). assignment : only symmetric to symmetric allowed. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__MatRepStd_Double32_t_6_6_.html:2046,Inherit,Inheritance,2046,root/html604/ROOT__Math__MatRepStd_Double32_t_6_6_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__MatRepStd_Double32_t_6_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TTeXDump.h>. Inheritance diagram for TTeXDump:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTeXDump() [1/2]. TTeXDump::TTeXDump ; (; ). Default TeX constructor. ; Definition at line 85 of file TTeXDump.cxx. ◆ TTeXDump() [2/2]. TTeXDump::TTeXDump ; (; const char * ; fname, . Int_t ; wtype = -113 . ). Initialize the TeX interface. ; –fname : TeX file name; wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump inherits from TVirtualPS it should be kept. Anyway it is not necessary to specify this parameter at creation time because it has a default value (which is ignore in the TeX case). . Definition at line 110 of file TTeXDump.cxx. ◆ ~TTeXDump(). TTeXDump::~TTeXDump ; (; ). override . Default TeX destructor. ; Definition at line 194 of file TTeXDump.cxx. Member Function Documentation. ◆ CellArrayBegin(). void TTeXDump::CellArrayBegin ; (; Int_t ; W, . Int_t ; H, . Double_t ; x1, . Double_t ; x2, . Double_t ; y1, . Double_t ; y2 . ). overridevirtual . Begin the Cell Array painting. ; Implements TVirtualPS.; Definition at line 901 of file TTeXDump.cxx. ◆ CellArrayEnd(). void TTeXDump::CellArrayEnd ; (; ). overridevirtual . End the Cell Array painting. ; Implements TVirtualPS.; Definition at line 918 of file TTeXDump.cxx. ◆ CellArrayFill(). void TTeXDump::CellArrayFill ; (; Int_t ; r, . Int_t ; g, . Int_t ; b . ). overridevirtual . Paint the Cell Array. ; Implements TVirtualPS.; Definition at line 910 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTeXDump.html:25755,inherit,inherits,25755,doc/master/classTTeXDump.html,https://root.cern,https://root.cern/doc/master/classTTeXDump.html,1,['inherit'],['inherits']
Modifiability,"4 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.868652; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.659892 0.620582 0.589558 0.0469541 20523.3 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.604286 0.594787 0.586926 0.0471912 20632.4 0; : 3 | 0.58117 0.603906 0.587335 0.047007 20609.7 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.57382 0.588714 0.592175 0.0469679 20425.3 0; : 5 | 0.569519 0.59535 0.590168 0.0468081 20494.7 1; : 6 | 0.567869 0.590023 0.589038 0.0469022 20541 2; : 7 Minimum Test error found - save the configuration ; : 7 | 0.561012 0.586993 0.590467 0.0471223 20495.3 0; : 8 | 0.559195 0.590522 0.590271 0.0471869 20505.1 1; : 9 | 0.558998 0.588766 0.598449 0.0469787 20193.3 2; : 10 | 0.555383 0.590075 0.591595 0.0470733 20451 3; : 11 Minimum Test error found - save the configuration ; : 11 | 0.555591 0.582449 0.595129 0.047292 20327.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.550993 0.581236 0.592181 0.0472746 20436.5 0; : 13 | 0.548186 0.58351 0.592876 0.0471057 20404.2 1; : 14 | 0.547427 0.581875 0.592374 0.0471592 20425 2; : 15 Minimum Test error found - save the configuratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:24394,config,configuration,24394,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['config'],['configuration']
Modifiability,"4 ; 145//-----------------------------------------------------------------------------; 146bool CPyCppyy::Scope_Check(PyObject* pyobject); 147{; 148// Test if the given object is of a CPPScope derived type.; 149 if (!Initialize()); 150 return false;; 151 ; 152 return CPPScope_Check(pyobject);; 153}; 154 ; 155//-----------------------------------------------------------------------------; 156bool CPyCppyy::Scope_CheckExact(PyObject* pyobject); 157{; 158// Test if the given object is of a CPPScope type.; 159 if (!Initialize()); 160 return false;; 161 ; 162 return CPPScope_CheckExact(pyobject);; 163}; 164 ; 165//-----------------------------------------------------------------------------; 166bool CPyCppyy::Instance_Check(PyObject* pyobject); 167{; 168// Test if the given pyobject is of CPPInstance derived type.; 169 if (!Initialize()); 170 return false;; 171 ; 172// detailed walk through inheritance hierarchy; 173 return CPPInstance_Check(pyobject);; 174}; 175 ; 176//-----------------------------------------------------------------------------; 177bool CPyCppyy::Instance_CheckExact(PyObject* pyobject); 178{; 179// Test if the given pyobject is of CPPInstance type.; 180 if (!Initialize()); 181 return false;; 182 ; 183// direct pointer comparison of type member; 184 return CPPInstance_CheckExact(pyobject);; 185}; 186 ; 187//-----------------------------------------------------------------------------; 188bool CPyCppyy::Sequence_Check(PyObject* pyobject); 189{; 190// Extends on PySequence_Check() to determine whether an object can be iterated; 191// over (technically, all objects can b/c of C++ pointer arithmetic, hence this; 192// check isn't 100% accurate, but neither is PySequence_Check()).; 193 ; 194// Note: simply having the iterator protocol does not constitute a sequence, bc; 195// PySequence_GetItem() would fail.; 196 ; 197// default to PySequence_Check() if called with a non-C++ object; 198 if (!CPPInstance_Check(pyobject)); 199 return (bool)PySequence_Check(pyo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/API_8cxx_source.html:5685,inherit,inheritance,5685,doc/master/API_8cxx_source.html,https://root.cern,https://root.cern/doc/master/API_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none(), const RooCmdArg& arg10 = RooCmdArg::none()) const. RooArgSet* getConstraints(const RooArgSet& , RooArgSet& , Bool_t ) const; Constraint management. Int_t minDimNormValueCaching() const; { return _minDimNormValueCache ; }. Int_t intOrderNormValueCaching() const; { return _valueCacheIntOrder ; }. Double_t getNorm(const RooArgSet& nset) const; Get p.d.f normalization term needed for observables 'nset'. Bool_t selfNormalized() const; If true, p.d.f is taken as self-normalized and no attempt is made to add a normalization term; This default implementation return false. ExtendMode extendMode() const; Returns ability of p.d.f to provided extended likelihood terms. Possible; answers are CanNotBeExtended, CanBeExtended or MustBeExtended. This; default implementation always return CanNotBeExtended. Bool_t canBeExtended() const; If true p.d.f can provide extended likelihood term. Bool_t mustBeExtended() const; If true p.d.f must extended likelihood term. Double_t expectedEvents(const RooArgSet* nset) const. const char* normRange() const. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Hook function intercepting redirectServer calls. Discard current normalization; object if any server is redirected. » Last changed: Fri Dec 2 14:26:37 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:83854,extend,extendMode,83854,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,4,['extend'],"['extendMode', 'extended']"
Modifiability,"4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none(), const RooCmdArg& arg10 = RooCmdArg::none()) const. RooArgSet* getConstraints(const RooArgSet& , RooArgSet& , Bool_t ) const; Constraint management. Int_t minDimNormValueCaching() const; { return _minDimNormValueCache ; }. Int_t intOrderNormValueCaching() const; { return _valueCacheIntOrder ; }. Double_t getNorm(const RooArgSet& nset) const; Get p.d.f normalization term needed for observables 'nset'. Bool_t selfNormalized() const; If true, p.d.f is taken as self-normalized and no attempt is made to add a normalization term; This default implementation return false. ExtendMode extendMode() const; Returns ability of p.d.f to provided extended likelihood terms. Possible; answers are CanNotBeExtended, CanBeExtended or MustBeExtended. This; default implementation always return CanNotBeExtended. Bool_t canBeExtended() const; If true p.d.f can provide extended likelihood term. Bool_t mustBeExtended() const; If true p.d.f must extended likelihood term. Double_t expectedEvents(const RooArgSet* nset) const. const char* normRange() const. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Hook function intercepting redirectServer calls. Discard current normalization; object if any server is redirected. » Last changed: Mon Jul 4 15:21:26 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsPdf.html:80684,extend,extendMode,80684,root/html530/RooAbsPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsPdf.html,4,['extend'],"['extendMode', 'extended']"
Modifiability,"4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()). RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none(), const RooCmdArg& arg10 = RooCmdArg::none()) const. RooArgSet* getConstraints(const RooArgSet& , RooArgSet& , Bool_t ) const; Constraint management. Int_t minDimNormValueCaching() const; { return _minDimNormValueCache ; }. Int_t intOrderNormValueCaching() const; { return _valueCacheIntOrder ; }. Double_t getNorm(const RooArgSet& nset) const; Get p.d.f normalization term needed for observables 'nset'. Bool_t selfNormalized() const; If true, p.d.f is taken as self-normalized and no attempt is made to add a normalization term; This default implementation return false. ExtendMode extendMode() const; Returns ability of p.d.f to provided extended likelihood terms. Possible; answers are CanNotBeExtended, CanBeExtended or MustBeExtended. This; default implementation always return CanNotBeExtended. Bool_t canBeExtended() const; If true p.d.f can provide extended likelihood term. Bool_t mustBeExtended() const; If true p.d.f must extended likelihood term. Double_t expectedEvents(const RooArgSet* nset) const. const char* normRange() const. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Hook function intercepting redirectServer calls. Discard current normalization; object if any server is redirected. » Last changed: Sat Oct 9 22:38:30 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:80164,extend,extendMode,80164,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,4,['extend'],"['extendMode', 'extended']"
Modifiability,"4 TClass* cl = config->fCompInfo->fClass;; 645 ; 646 // Check for a private streamer.; 647 if (!kIsTextT && config->fCompInfo->fStreamer) {; 648 // Get any private streamer which was set for the data member.; 649 TMemberStreamer* pstreamer = config->fCompInfo->fStreamer;; 650 // -- We have a private streamer.; 651 // Read the class version and byte count from the buffer.; 652 UInt_t start = 0;; 653 UInt_t count = 0;; 654 buf.ReadVersion(&start, &count, cl);; 655 // Loop over the entries in the clones array or the STL container.; 656 //for (Int_t k = 0; k < narr; ++k) {; 657 ; 658 Int_t* counter = (Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/);; 659 // And call the private streamer, passing it the buffer, the object, and the counter.; 660 (*pstreamer)(buf, (char *) addr /*entry pointer*/ + ioffset /*object offset*/, *counter);; 661 ; 662 // } // for k; 663 buf.CheckByteCount(start, count, config->fCompInfo->fElem->GetFullName());; 664 // We are done, next streamer element.; 665 return 0;; 666 }; 667 ; 668 // Which are we, an array of objects or an array of pointers to objects?; 669 Bool_t isPtrPtr = (strstr(config->fCompInfo->fElem->GetTypeName(), ""**"") != 0);; 670 ; 671 // By default assume the file version is the newest.; 672 Int_t fileVersion = kMaxInt;; 673 if (!kIsTextT) {; 674 // At this point we do *not* have a private streamer.; 675 // Get the version of the file we are reading from.; 676 TFile* file = (TFile*) buf.GetParent();; 677 if (file) {; 678 fileVersion = file->GetVersion();; 679 }; 680 }; 681 // Read the class version and byte count from the buffer.; 682 UInt_t start = 0;; 683 UInt_t count = 0;; 684 buf.ReadVersion(&start, &count, cl);; 685 if (fileVersion > 51508) {; 686 // -- Newer versions allow polymorphic pointers.; 687 // Loop over the entries in the clones array or the STL container.; 688 // for (Int_t k = 0; k < narr; ++k) {; 689 // Get the counter for the varying length a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:27516,config,config,27516,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"4 if ( (autoBinned && isBinnedDistribution(vars)) || ( binnedTag && strlen(binnedTag) && (getAttribute(binnedTag)||string(binnedTag)==""*""))) {; 1145 context = binnedGenContext(vars,verbose) ;; 1146 } else {; 1147 context= genContext(vars,nullptr,nullptr,verbose);; 1148 }; 1149 return context ;; 1150}; 1151 ; 1152 ; 1153 ; 1154////////////////////////////////////////////////////////////////////////////////; 1155/// Generate a new dataset containing the specified variables with events sampled from our distribution.; 1156/// Generate the specified number of events or expectedEvents() if not specified.; 1157/// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; 1158/// constant and not be used for event generation.; 1159/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; 1160/// \return RooDataSet *, owned by caller.; 1161///; 1162/// Any variables of this PDF that are not in whatVars will use their; 1163/// current values and be treated as fixed parameters. Returns zero; 1164/// in case of an error.; 1165///; 1166/// <table>; 1167/// <tr><th> Type of CmdArg <th> Effect on generate; 1168/// <tr><td> `Name(const char* name)` <td> Name of the output dataset; 1169/// <tr><td> `Verbose(bool flag)` <td> Print informational messages during event generation; 1170/// <tr><td> `NumEvents(int nevt)` <td> Generate specified number of events; 1171/// <tr><td> `Extended()` <td> If no number of events to be generated is given,; 1172/// use expected number of events from extended likelihood term.; 1173/// This evidently only works for extended PDFs.; 1174/// <tr><td> `GenBinned(const char* tag)` <td> Use binned generation for all component pdfs that have 'setAttribute(tag)' set; 1175/// <tr><td> `AutoBinned(bool flag)` <td> Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of; 1176/// RooHistPdfs etc); 1177/// \note Datasets that are",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:56844,variab,variables,56844,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"4 if (!format_.IsDigit()) {; 285 Error(""TGraphErrors"", ""Incorrect input format! Allowed format tags are {\""%%lg\"",\""%%*lg\"" or \""%%*s\""}"");; 286 return ;; 287 }; 288 Int_t ntokens = format_.Length() ;; 289 if (ntokens < 2) {; 290 Error(""TGraphErrors"", ""Incorrect input format! Only %d tag(s) in format whereas at least 2 \""%%lg\"" tags are expected!"", ntokens);; 291 return ;; 292 }; 293 Int_t ntokensToBeSaved = 0 ;; 294 Bool_t * isTokenToBeSaved = new Bool_t [ntokens] ;; 295 for (Int_t idx = 0; idx < ntokens; idx++) {; 296 isTokenToBeSaved[idx] = TString::Format(""%c"", format_[idx]).Atoi() ; //atoi(&format_[idx]) does not work for some reason...; 297 if (isTokenToBeSaved[idx] == 1) {; 298 ntokensToBeSaved++ ;; 299 }; 300 }; 301 if (ntokens >= 2 && (ntokensToBeSaved < 2 || ntokensToBeSaved > 4)) { //first condition not to repeat the previous error message; 302 Error(""TGraphErrors"", ""Incorrect input format! There are %d \""%%lg\"" tag(s) in format whereas 2,3 or 4 are expected!"", ntokensToBeSaved);; 303 delete [] isTokenToBeSaved ;; 304 return ;; 305 }; 306 ; 307 // Initializing loop variables; 308 Bool_t isLineToBeSkipped = kFALSE; //empty and ill-formed lines; 309 char *token = nullptr;; 310 TString token_str = """";; 311 Int_t token_idx = 0;; 312 Double_t value[4]; //x,y,ex,ey buffers; 313 for (Int_t k = 0; k < 4; k++); 314 value[k] = 0.;; 315 Int_t value_idx = 0;; 316 ; 317 // Looping; 318 char *rest;; 319 while (std::getline(infile, line, '\n')) {; 320 if (!line.empty()) {; 321 if (line[line.size() - 1] == char(13)) { // removing DOS CR character; 322 line.erase(line.end() - 1, line.end()) ;; 323 }; 324 token = R__STRTOK_R(const_cast<char *>(line.c_str()), option, &rest);; 325 while (token != nullptr && value_idx < ntokensToBeSaved) {; 326 if (isTokenToBeSaved[token_idx]) {; 327 token_str = TString(token) ;; 328 token_str.ReplaceAll(""\t"", """") ;; 329 if (!token_str.IsFloat()) {; 330 isLineToBeSkipped = kTRUE ;; 331 break ;; 332 } else {; 333 value[value_idx] = token_str.At",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:10593,variab,variables,10593,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['variab'],['variables']
Modifiability,4 of file TSelectorDraw.h. ◆ fSelect. TTreeFormula* TSelectorDraw::fSelect. protected . Pointer to selection formula. ; Definition at line 40 of file TSelectorDraw.h. ◆ fSelectedRows. Long64_t TSelectorDraw::fSelectedRows. protected . Number of selected entries. ; Definition at line 50 of file TSelectorDraw.h. ◆ fSelectMultiple. bool TSelectorDraw::fSelectMultiple. protected . True if selection has a variable index. ; Definition at line 61 of file TSelectorDraw.h. ◆ fTree. TTree* TSelectorDraw::fTree. protected . Pointer to current Tree. ; Definition at line 38 of file TSelectorDraw.h. ◆ fTreeElist. TObject* TSelectorDraw::fTreeElist. protected . Pointer to Tree Event list. ; Definition at line 42 of file TSelectorDraw.h. ◆ fTreeElistArray. TEntryListArray* TSelectorDraw::fTreeElistArray. protected . ! Pointer to Tree Event list array ; Definition at line 43 of file TSelectorDraw.h. ◆ fVal. Double_t** TSelectorDraw::fVal. protected . ![fSelectedRows][fDimension] Local buffer for the variables ; Definition at line 57 of file TSelectorDraw.h. ◆ fValSize. Int_t TSelectorDraw::fValSize. protected . Definition at line 58 of file TSelectorDraw.h. ◆ fVar. TTreeFormula** TSelectorDraw::fVar. protected . ![fDimension] Array of pointers to variables formula ; Definition at line 39 of file TSelectorDraw.h. ◆ fVarMultiple. bool* TSelectorDraw::fVarMultiple. protected . ![fDimension] True if fVar[i] has a variable index ; Definition at line 60 of file TSelectorDraw.h. ◆ fVmax. Double_t* TSelectorDraw::fVmax. protected . ![fDimension] Maxima of varexp columns ; Definition at line 55 of file TSelectorDraw.h. ◆ fVmin. Double_t* TSelectorDraw::fVmin. protected . ![fDimension] Minima of varexp columns ; Definition at line 54 of file TSelectorDraw.h. ◆ fW. Double_t* TSelectorDraw::fW. protected . ![fSelectedRows]Local buffer for weights ; Definition at line 59 of file TSelectorDraw.h. ◆ fWeight. Double_t TSelectorDraw::fWeight. protected . Tree weight (see TTree::SetWeight) ; Definitio,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:30394,variab,variables,30394,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['variab'],['variables']
Modifiability,"4 }; 515 }; 516 ; 517 for (UInt_t ivar=0; ivar<nvar; ivar++) {; 518 dsi.GetVariableInfo(ivar).SetMin(min[ivar]);; 519 dsi.GetVariableInfo(ivar).SetMax(max[ivar]);; 520 if( TMath::Abs(max[ivar]-min[ivar]) <= FLT_MIN ); 521 Log() << kWARNING << Form(""Dataset[%s] : "",dsi.GetName()) << ""Variable "" << dsi.GetVariableInfo(ivar).GetExpression().Data() << "" is constant. Please remove the variable."" << Endl;; 522 }; 523 for (UInt_t ivar=0; ivar<ntgts; ivar++) {; 524 dsi.GetTargetInfo(ivar).SetMin(tgmin[ivar]);; 525 dsi.GetTargetInfo(ivar).SetMax(tgmax[ivar]);; 526 if( TMath::Abs(tgmax[ivar]-tgmin[ivar]) <= FLT_MIN ); 527 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName()) << ""Target "" << dsi.GetTargetInfo(ivar).GetExpression().Data() << "" is constant. Please remove the variable."" << Endl;; 528 }; 529 for (UInt_t ivar=0; ivar<nvis; ivar++) {; 530 dsi.GetSpectatorInfo(ivar).SetMin(vmin[ivar]);; 531 dsi.GetSpectatorInfo(ivar).SetMax(vmax[ivar]);; 532 // if( TMath::Abs(vmax[ivar]-vmin[ivar]) <= FLT_MIN ); 533 // Log() << kWARNING << ""Spectator variable "" << dsi.GetSpectatorInfo(ivar).GetExpression().Data() << "" is constant."" << Endl;; 534 }; 535 delete [] min;; 536 delete [] max;; 537 delete [] tgmin;; 538 delete [] tgmax;; 539 delete [] vmin;; 540 delete [] vmax;; 541}; 542 ; 543////////////////////////////////////////////////////////////////////////////////; 544/// computes correlation matrix for variables ""theVars"" in tree;; 545/// ""theType"" defines the required event ""type""; 546/// (""type"" variable must be present in tree); 547 ; 548TMatrixD* TMVA::DataSetFactory::CalcCorrelationMatrix( DataSet* ds, const UInt_t classNumber ); 549{; 550 // first compute variance-covariance; 551 TMatrixD* mat = CalcCovarianceMatrix( ds, classNumber );; 552 ; 553 // now the correlation; 554 UInt_t nvar = ds->GetNVariables(), ivar, jvar;; 555 ; 556 for (ivar=0; ivar<nvar; ivar++) {; 557 for (jvar=0; jvar<nvar; jvar++) {; 558 if (ivar != jvar) {; 559 Double_t d = (*mat)(ivar, ivar)*(*mat)(jva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:22204,variab,variable,22204,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"4))) /* 1 is the this pointer */; 227#endif; 228 ;; 229 ; 230 void AbstractMethod(const char *method) const;; 231 void MayNotUse(const char *method) const;; 232 void Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) const;; 233 ; 234 //---- static functions; 235 static Longptr_t GetDtorOnly();; 236 static void SetDtorOnly(void *obj);; 237 static Bool_t GetObjectStat();; 238 static void SetObjectStat(Bool_t stat);; 239 ; 240 friend class TClonesArray; // needs to reset kNotDeleted in fBits; 241 friend bool ROOT::Internal::DeleteChangesMemoryImpl();; 242 ; 243 ClassDef(TObject,1) //Basic ROOT object; 244};; 245 ; 246////////////////////////////////////////////////////////////////////////////////; 247/// TObject constructor. It sets the two data words of TObject to their; 248/// initial values. The unique ID is set to 0 and the status word is; 249/// set depending if the object is created on the stack or allocated; 250/// on the heap. Depending on the ROOT environment variable ""Root.ObjStat""; 251/// (see TEnv) the object is added to the global TObjectTable for; 252/// bookkeeping.; 253 ; 254inline TObject::TObject() : fBits(kNotDeleted) // Need to leave fUniqueID unset; 255{; 256 // This will be reported by valgrind as uninitialized memory reads for; 257 // object created on the stack, use $ROOTSYS/etc/valgrind-root.supp; 258 TStorage::UpdateIsOnHeap(fUniqueID, fBits);; 259 ; 260 fUniqueID = 0;; 261 ; 262#ifdef R__WIN32; 263 if (R__unlikely(GetObjectStat())) TObject::AddToTObjectTable(this);; 264#else; 265 if (R__unlikely(fgObjectStat)) TObject::AddToTObjectTable(this);; 266#endif; 267}; 268 ; 269////////////////////////////////////////////////////////////////////////////////; 270/// TObject copy ctor.; 271 ; 272inline TObject::TObject(const TObject &obj); 273{; 274 fBits = obj.fBits;; 275 ; 276 // This will be reported by valgrind as uninitialized memory reads for; 277 // object created on the stack, use $ROOTSYS/etc/valgrind-root.supp; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8h_source.html:10832,variab,variable,10832,doc/master/TObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TObject_8h_source.html,1,['variab'],['variable']
Modifiability,"4, const RooCmdArg& arg5); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1,const RooCmdArg& arg2,				 const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5,const RooCmdArg& arg6); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; NumEvent(int nevt) -- Generate specified number of events; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, Double_t nE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:64296,variab,variables,64296,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"4- Uniform(Double_t); 95- Landau(Double_t mean, Double_t sigma); 96- Poisson(Double_t mean); 97- Binomial(Int_t ntot, Double_t prob); 98 ; 99Random numbers distributed according to 1-d, 2-d or 3-d distributions contained in TF1, TF2 or TF3 objects can also be; 100generated. For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x) you can do : \code{.cpp} TF1; 101*f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10); double r = f1->GetRandom(); \endcode or you can use the UNURAN; 102package. You need in this case to initialize UNURAN to the function you would like to generate. \code{.cpp} TUnuran u;; 103 u.Init(TUnuranDistrCont(f1));; 104 double r = u.Sample();; 105\endcode; 106 ; 107The techniques of using directly a TF1,2 or 3 function is powerful and; 108can be used to generate numbers in the defined range of the function.; 109Getting a number from a TF1,2,3 function is also quite fast.; 110UNURAN is a powerful and flexible tool which contains various methods for; 111generate random numbers for continuous distributions of one and multi-dimension.; 112It requires some set-up (initialization) phase and can be very fast when the distribution; 113parameters are not changed for every call.; 114 ; 115The following table shows some timings (in nanosecond/call); 116for basic functions, TF1 functions and using UNURAN obtained running; 117the tutorial math/testrandom.C; 118Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running; 119Linux SLC4 64 bit and compiled with gcc 3.4; 120 ; 121~~~~; 122Distribution nanoseconds/call; 123 TRandom TRandom1 TRandom2 TRandom3; 124Rndm.............. 5.000 105.000 7.000 10.000; 125RndmArray......... 4.000 104.000 6.000 9.000; 126Gaus.............. 36.000 180.000 40.000 48.000; 127Rannor............ 118.000 220.000 120.000 124.000; 128Landau............ 22.000 123.000 26.000 31.000; 129Exponential....... 93.000 198.000 98.000 104.000; 130Binomial(5,0.5)... 30.000 548.000 46.000 65.000; 131B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:7329,flexible,flexible,7329,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['flexible'],['flexible']
Modifiability,4.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80237,config,configuration,80237,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,4.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.34,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:87146,config,configuration,87146,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4.; }; // a C++11 lambda function checking ""x > 4""; 358auto c = d.Filter(metCut, {""MET""}).Count();; 359std::cout << *c << std::endl;; 360~~~; 361 ; 362An example of a more complex filter expressed as a string containing C++ code is shown below; 363 ; 364~~~{.cpp}; 365RDataFrame d(""myTree"", ""file.root"");; 366auto df = d.Define(""p"", ""std::array<double, 4> p{px, py, pz}; return p;""); 367 .Filter(""double p2 = 0.0; for (auto&& x : p) p2 += x*x; return sqrt(p2) < 10.0;"");; 368~~~; 369 ; 370The code snippet above defines a column `p` that is a fixed-size array using the component column names and then; 371filters on its magnitude by looping over its elements. It must be noted that the usage of strings to define columns; 372like the one above is currently the only possibility when using PyROOT. When writing expressions as such, only constants; 373and data coming from other columns in the dataset can be involved in the code passed as a string. Local variables and; 374functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; 375it must first be declared to the ROOT C++ interpreter.; 376 ; 377More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters).; 378 ; 379### Defining custom columns; 380Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; 381quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; 382the variable ""z"":; 383~~~{.cpp}; 384RDataFrame d(""myTree"", ""file.root"");; 385auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; 386auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; 387std::cout << *zMean << std::endl;; 388~~~; 389Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; 390variables created with Define() as if they were actua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:22506,variab,variables,22506,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variables']
Modifiability,"4.; }; // a C++11 lambda function checking ""x > 4""; 362auto c = d.Filter(metCut, {""MET""}).Count();; 363std::cout << *c << std::endl;; 364~~~; 365 ; 366An example of a more complex filter expressed as a string containing C++ code is shown below; 367 ; 368~~~{.cpp}; 369RDataFrame d(""myTree"", ""file.root"");; 370auto df = d.Define(""p"", ""std::array<double, 4> p{px, py, pz}; return p;""); 371 .Filter(""double p2 = 0.0; for (auto&& x : p) p2 += x*x; return sqrt(p2) < 10.0;"");; 372~~~; 373 ; 374The code snippet above defines a column `p` that is a fixed-size array using the component column names and then; 375filters on its magnitude by looping over its elements. It must be noted that the usage of strings to define columns; 376like the one above is currently the only possibility when using PyROOT. When writing expressions as such, only constants; 377and data coming from other columns in the dataset can be involved in the code passed as a string. Local variables and; 378functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; 379it must first be declared to the ROOT C++ interpreter.; 380 ; 381More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters).; 382 ; 383### Defining custom columns; 384Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; 385quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; 386the variable ""z"":; 387~~~{.cpp}; 388RDataFrame d(""myTree"", ""file.root"");; 389auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; 390auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; 391std::cout << *zMean << std::endl;; 392~~~; 393Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; 394variables created with Define() as if they were actua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:22948,variab,variables,22948,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variables']
Modifiability,"40#else; 4141 if ( IsDefaultVector(proxy); 4142 /*|| (proxy.GetCollectionType() == ROOT::kSTLset || proxy.GetCollectionType() == ROOT::kSTLmultiset; 4143 || proxy.GetCollectionType() == ROOT::kSTLmap || proxy.GetCollectionType() == ROOT::kSTLmultimap)*/ ); 4144 {; 4145 sequence->AddAction( GetCollectionWriteAction<VectorLooper>(info,element,oldType,i,compinfo,offset) );; 4146 } else {; 4147 // NOTE: TBranch::FillLeavesCollection[Member] is not yet ready to handle the sequence; 4148 // as it does not create/use a TStaging as expected ... but then again it might; 4149 // not be the right things to expect ...; 4150 // sequence->AddAction( GetCollectionWriteAction<GenericLooper>(info,element,oldType,i,compinfo,offset) );; 4151 sequence->AddAction( GenericLooper::GenericWrite, new TConfigSTL(info,i,compinfo,0 /* the offset will be used from TStreamerInfo */,0,proxy.GetCollectionClass(),0,0) );; 4152 }; 4153#endif; 4154 }; 4155 return sequence;; 4156}; 4157 ; 4158void TStreamerInfoActions::TActionSequence::AddToOffset(Int_t delta); 4159{; 4160 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4161 // TBranchElement in the case of split sub-object.; 4162 ; 4163 TStreamerInfoActions::ActionContainer_t::iterator end = fActions.end();; 4164 for(TStreamerInfoActions::ActionContainer_t::iterator iter = fActions.begin();; 4165 iter != end;; 4166 ++iter); 4167 {; 4168 // (fElemId == -1) indications that the action is a Push or Pop DataCache.; 4169 if (iter->fConfiguration->fElemId != (UInt_t)-1 &&; 4170 !iter->fConfiguration->fInfo->GetElements()->At(iter->fConfiguration->fElemId)->TestBit(TStreamerElement::kCache)); 4171 iter->fConfiguration->AddToOffset(delta);; 4172 }; 4173}; 4174 ; 4175void TStreamerInfoActions::TActionSequence::SetMissing(); 4176{; 4177 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4178 // TBranchElement in the case of split sub-object.; 4179 ; 4180 TStreamerInfoActions::A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:196136,config,configuration,196136,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configuration']
Modifiability,"4068/// <tr><td> `Extended(bool flag)` <td> **Only applicable when fitting a RooAbsPdf**. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; 4069/// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; 4070/// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; 4071/// (in RooFit jargon, ""if the pdf can be extended"").; 4072/// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; 4073/// and the chi2 will fall back to the total data weight to scale the normalized pdf.; 4074/// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; 4075/// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; 4076/// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; 4077/// printed and you'll most likely get garbage results.; 4078/// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; 4079/// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; 4080/// Multiple comma separated range names can be specified.; 4081/// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; 4082/// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); 4083/// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; 4084///; 4085/// <tr><th> <th> Options to control flow of fit procedure; 4086/// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; 4087/// <tr><td> `Hesse(bool flag)` <td> ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:176805,extend,extended,176805,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['extend'],['extended']
Modifiability,"40; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TBuffer::ReadProcessIDvirtual TProcessID * ReadProcessID(UShort_t pidf)=0Return the current Process-ID.Definition TBuffer.cxx:344; TBuffer::WriteProcessIDvirtual UShort_t WriteProcessID(TProcessID *pid)=0Always return 0 (current processID).Definition TBuffer.cxx:353; TBuffer::GetParentTObject * GetParent() constReturn pointer to parent of this buffer.Definition TBuffer.cxx:262; TBuffer::GetPidOffsetvirtual UShort_t GetPidOffset() const =0; TBuffer::IsReadingBool_t IsReading() constDefinition TBuffer.h:86; TBuffer::WriteVersionvirtual UInt_t WriteVersion(const TClass *cl, Bool_t useBcnt=kFALSE)=0; TBuffer::SkipVersionvirtual void SkipVersion(const TClass *cl=nullptr)=0; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Drawvoid Draw(Option_t *option="""") overrideDraw detailed class inheritance structure.Definition TClass.cxx:2554; TClass::DynamicCastvoid * DynamicCast(const TClass *base, void *obj, Bool_t up=kTRUE)Cast obj of this class type up to baseclass cl if up is true.Definition TClass.cxx:4982; TClass::AutoBrowsestatic Int_t AutoBrowse(TObject *obj, TBrowser *browser)Browse external object inherited from TObject.Definition TClass.cxx:2033; TClass::Dumpvoid Dump() const overrideDump contents of object on stdout.Definition TClass.h:398; TClass::InheritsFromBool_t InheritsFrom(const char *cl) const overrideReturn kTRUE if this class inherits from a class with name ""classname"".Definition TClass.cxx:4941; TGuiFactory::CreateInspectorImpvirtual TInspectorImp * CreateInspectorImp(const TObject *obj, UInt_t width, UInt_t height)Create a batch version of TInspectorImp.Definition TGuiFactory.cxx:182; TListIterIterator of linked list.Definition TList.h:193; TListIter::GetOptionOption_t * GetOption() const overrideReturns the object option s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:46888,inherit,inheritance,46888,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"40Bins are defined using one of the `AddBin()` methods. The bin definition; 41should be done before filling.; 42 ; 43The histogram can be filled with `Fill(Double_t x, Double_t y, Double_t w); 44`. `w` is the weight.; 45If no weight is specified, it is assumed to be 1.; 46 ; 47Not all histogram's area need to be binned. Filling an area without bins,; 48will falls into the overflows. Adding a bin is not retroactive; it doesn't; 49affect previous fillings. A `Fill()` call, that; 50was previously ignored due to the lack of a bin at the specified location, is; 51not reconsidered when that location is binned later.; 52 ; 53If there are two overlapping bins, the first one in the list will be incremented; 54by `Fill()`.; 55 ; 56The histogram may automatically extends its limits if a bin outside the; 57histogram limits is added. This is done when the default constructor (with no; 58arguments) is used. It generates a histogram with no limits along the X and Y; 59axis. Adding bins to it will extend it up to a proper size.; 60 ; 61`TH2Poly` implements a partitioning algorithm to speed up bins' filling; 62(see the ""Partitioning Algorithm"" section for details).; 63The partitioning algorithm divides the histogram into regions called cells.; 64The bins that each cell intersects are recorded in an array of `TList`s.; 65When a coordinate in the histogram is to be filled; the method (quickly) finds; 66which cell the coordinate belongs. It then only loops over the bins; 67intersecting that cell to find the bin the input coordinate corresponds to.; 68The partitioning of the histogram is updated continuously as each bin is added.; 69The default number of cells on each axis is 25. This number could be set to; 70another value in the constructor or adjusted later by calling the; 71`ChangePartition(Int_t, Int_t)` method. The partitioning algorithm is; 72considerably faster than the brute force algorithm (i.e. checking if each bin; 73contains the input coordinates), especially if the histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8cxx_source.html:2449,extend,extend,2449,doc/master/TH2Poly_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8cxx_source.html,1,['extend'],['extend']
Modifiability,"40void TFormula::SetName(const char* name); 2641{; 2642 if (IsReservedName(name)) {; 2643 Error(""SetName"", ""The name \'%s\' is reserved as a TFormula variable name.\n""; 2644 ""\tThis function will not be renamed."",; 2645 name);; 2646 } else {; 2647 // Here we need to remove and re-add to keep the hashes consistent with; 2648 // the underlying names.; 2649 auto listOfFunctions = gROOT->GetListOfFunctions();; 2650 TObject* thisAsFunctionInList = nullptr;; 2651 R__LOCKGUARD(gROOTMutex);; 2652 if (listOfFunctions){; 2653 thisAsFunctionInList = listOfFunctions->FindObject(this);; 2654 if (thisAsFunctionInList) listOfFunctions->Remove(thisAsFunctionInList);; 2655 }; 2656 TNamed::SetName(name);; 2657 if (thisAsFunctionInList) listOfFunctions->Add(thisAsFunctionInList);; 2658 }; 2659}; 2660 ; 2661////////////////////////////////////////////////////////////////////////////////; 2662///; 2663/// Sets multiple variables.; 2664/// First argument is an array of pairs<TString,Double>, where; 2665/// first argument is name of variable,; 2666/// second argument represents value.; 2667/// size - number of variables passed in first argument; 2668 ; 2669void TFormula::SetVariables(const pair<TString,Double_t> *vars, const Int_t size); 2670{; 2671 for(Int_t i = 0; i < size; ++i); 2672 {; 2673 auto &v = vars[i];; 2674 if (fVars.find(v.first) != fVars.end()) {; 2675 fVars[v.first].fValue = v.second;; 2676 fClingVariables[fVars[v.first].fArrayPos] = v.second;; 2677 } else {; 2678 Error(""SetVariables"", ""Variable %s is not defined."", v.first.Data());; 2679 }; 2680 }; 2681}; 2682 ; 2683////////////////////////////////////////////////////////////////////////////////; 2684/// Returns variable value.; 2685 ; 2686Double_t TFormula::GetVariable(const char *name) const; 2687{; 2688 const auto nameIt = fVars.find(name);; 2689 if (fVars.end() == nameIt) {; 2690 Error(""GetVariable"", ""Variable %s is not defined."", name);; 2691 return -1;; 2692 }; 2693 return nameIt->second.fValue;; 2694}; 2695 ; 2696//",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:102769,variab,variable,102769,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,41 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.3584,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:106567,config,configuration,106567,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"41/// defined by the getGenerator() implementation. The default; 1542/// implementation does nothing.; 1543 ; 1544void RooAbsPdf::generateEvent(Int_t /*code*/); 1545{; 1546}; 1547 ; 1548 ; 1549 ; 1550////////////////////////////////////////////////////////////////////////////////; 1551/// Check if given observable can be safely generated using the; 1552/// pdfs internal generator mechanism (if that existsP). Observables; 1553/// on which a PDF depends via more than route are not safe; 1554/// for use with internal generators because they introduce; 1555/// correlations not known to the internal generator; 1556 ; 1557bool RooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; 1558{; 1559 // Arg must be direct server of self; 1560 if (!findServer(arg.GetName())) return false ;; 1561 ; 1562 // There must be no other dependency routes; 1563 for (const auto server : _serverList) {; 1564 if(server == &arg) continue;; 1565 if(server->dependsOn(arg)) {; 1566 return false ;; 1567 }; 1568 }; 1569 ; 1570 return true ;; 1571}; 1572 ; 1573 ; 1574////////////////////////////////////////////////////////////////////////////////; 1575/// Generate a new dataset containing the specified variables with events sampled from our distribution.; 1576/// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; 1577/// constant and not be used for event generation; 1578/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg to change behaviour of generateBinned(); 1579/// \return RooDataHist *, to be managed by caller.; 1580///; 1581/// Generate the specified number of events or expectedEvents() if not specified.; 1582///; 1583/// Any variables of this PDF that are not in whatVars will use their; 1584/// current values and be treated as fixed parameters. Returns zero; 1585/// in case of an error. The caller takes ownership of the returned; 1586/// dataset.; 1587///; 1588/// The following named arguments are supported; 1589/// | Type of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:76843,variab,variables,76843,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variables']
Modifiability,"418on this [below](#callgraphs)).; 419 ; 420You can read more about defining new columns [here](#custom-columns).; 421 ; 422\image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action.""; 423 ; 424 ; 425### Running on a range of entries; 426It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; 427offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; 428actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; 429exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); 430hanging from another Range(). Here are some commented examples:; 431~~~{.cpp}; 432RDataFrame d(""myTree"", ""file.root"");; 433// Here we store a dataframe that loops over only the first 30 entries in a variable; 434auto d30 = d.Range(30);; 435// This is how you pick all entries from 15 onwards; 436auto d15on = d.Range(15, 0);; 437// We can specify a stride too, in this case we pick an event every 3; 438auto d15each3 = d.Range(0, 15, 3);; 439~~~; 440Note that ranges are not available when multi-threading is enabled. More information on ranges is available; 441[here](#ranges).; 442 ; 443### Executing multiple actions in the same event loop; 444As a final example let us apply two different cuts on branch ""MET"" and fill two different histograms with the ""pt_v"" of; 445the filtered events.; 446By now, you should be able to easily understand what is happening:; 447~~~{.cpp}; 448RDataFrame d(""treeName"", ""file.root"");; 449auto h1 = d.Filter(""MET > 10"").Histo1D(""pt_v"");; 450auto h2 = d.Histo1D(""pt_v"");; 451h1->Draw(); // event loop is run once here; 452h2->Draw(""SAME""); // no need to run the event loop again; 453~~~; 454RDataFrame executes all above actions by **",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:26590,variab,variable,26590,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"42 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19843 mg_snprintf(NULL,; 19844 NULL, /* No truncation check for error buffers */; 19845 error->text,; 19846 error->text_buffer_size,; 19847 ""Invalid configuration option value: %s"",; 19848 config_options[NUM_THREADS].name);; 19849 }; 19850 free_context(ctx);; 19851 pthread_setspecific(sTlsKey, NULL);; 19852 return NULL;; 19853 }; 19854 ; 19855 /* Document root */; 19856#if defined(NO_FILES); 19857 if (ctx->dd.config[DOCUMENT_ROOT] != NULL) {; 19858 mg_cry_ctx_internal(ctx, ""%s"", ""Document root must not be set"");; 19859 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19860 mg_snprintf(NULL,; 19861 NULL, /* No truncation check for error buffers */; 19862 error->text,; 19863 error->text_buffer_size,; 19864 ""Invalid configuration option value: %s"",; 19865 config_options[DOCUMENT_ROOT].name);; 19866 }; 19867 free_context(ctx);; 19868 pthread_setspecific(sTlsKey, NULL);; 19869 return NULL;; 19870 }; 19871#endif; 19872 ; 19873 get_system_name(&ctx->systemName);; 19874 ; 19875#if defined(USE_LUA); 19876 /* If a Lua background script has been configured, start it. */; 19877 ctx->lua_bg_log_available = 0;; 19878 if (ctx->dd.config[LUA_BACKGROUND_SCRIPT] != NULL) {; 19879 char ebuf[256];; 19880 struct vec opt_vec;; 19881 struct vec eq_vec;; 19882 const char *sparams;; 19883 ; 19884 memset(ebuf, 0, sizeof(ebuf));; 19885 pthread_mutex_lock(&ctx->lua_bg_mutex);; 19886 ; 19887 /* Create a Lua state, load all standard libraries and the mg table */; 19888 lua_State *state = mg_lua_context_script_prepare(; 19889 ctx->dd.config[LUA_BACKGROUND_SCRIPT], ctx, ebuf, sizeof(ebuf));; 19890 if (!state) {; 19891 mg_cry_ctx_internal(ctx,; 19892 ""lua_background_script load error: %s"",; 19893 ebuf);; 19894 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19895 mg_snprintf(NULL,; 19896 NULL, /* No truncation check for error buffers */; 19897 error->text,; 19898 error->text_buffer_size,; 19899 ""Error in script %s: %s"",; 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:593775,config,configured,593775,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"422on this [below](#callgraphs)).; 423 ; 424You can read more about defining new columns [here](#custom-columns).; 425 ; 426\image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action.""; 427 ; 428 ; 429### Running on a range of entries; 430It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; 431offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; 432actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; 433exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); 434hanging from another Range(). Here are some commented examples:; 435~~~{.cpp}; 436RDataFrame d(""myTree"", ""file.root"");; 437// Here we store a dataframe that loops over only the first 30 entries in a variable; 438auto d30 = d.Range(30);; 439// This is how you pick all entries from 15 onwards; 440auto d15on = d.Range(15, 0);; 441// We can specify a stride too, in this case we pick an event every 3; 442auto d15each3 = d.Range(0, 15, 3);; 443~~~; 444Note that ranges are not available when multi-threading is enabled. More information on ranges is available; 445[here](#ranges).; 446 ; 447### Executing multiple actions in the same event loop; 448As a final example let us apply two different cuts on branch ""MET"" and fill two different histograms with the ""pt_v"" of; 449the filtered events.; 450By now, you should be able to easily understand what is happening:; 451~~~{.cpp}; 452RDataFrame d(""treeName"", ""file.root"");; 453auto h1 = d.Filter(""MET > 10"").Histo1D(""pt_v"");; 454auto h2 = d.Histo1D(""pt_v"");; 455h1->Draw(); // event loop is run once here; 456h2->Draw(""SAME""); // no need to run the event loop again; 457~~~; 458RDataFrame executes all above actions by **",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:27032,variab,variable,27032,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.8202,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:104382,config,configuration,104382,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"427 if (ROOT::TMetaUtils::GetErrorIgnoreLevel() == ROOT::TMetaUtils::kInfo) {; 4428 ROOT::TMetaUtils::Info(nullptr, ""\n"");; 4429 ROOT::TMetaUtils::Info(nullptr, ""==== INTERPRETER CONFIGURATION ====\n"");; 4430 ROOT::TMetaUtils::Info(nullptr, ""== Include paths\n"");; 4431 interp.DumpIncludePath();; 4432 printf(""\n\n"");; 4433 fflush(stdout);; 4434 ; 4435 ROOT::TMetaUtils::Info(nullptr, ""== Included files\n"");; 4436 interp.printIncludedFiles(llvm::outs());; 4437 llvm::outs() << ""\n\n"";; 4438 llvm::outs().flush();; 4439 ; 4440 ROOT::TMetaUtils::Info(nullptr, ""== Language Options\n"");; 4441 const clang::LangOptions& LangOpts; 4442 = interp.getCI()->getASTContext().getLangOpts();; 4443#define LANGOPT(Name, Bits, Default, Description) \; 4444 ROOT::TMetaUtils::Info(nullptr, ""%s = %d // %s\n"", #Name, (int)LangOpts.Name, Description);; 4445#define ENUM_LANGOPT(Name, Type, Bits, Default, Description); 4446#include ""clang/Basic/LangOptions.def""; 4447 ROOT::TMetaUtils::Info(nullptr, ""==== END interpreter configuration ====\n\n"");; 4448 }; 4449 ; 4450 interp.getOptions().ErrorOut = true;; 4451 interp.enableRawInput(true);; 4452 ; 4453 if (gOptCxxModule) {; 4454 for (llvm::StringRef DepMod : gOptModuleDependencies) {; 4455 if (DepMod.endswith(""_rdict.pcm"")) {; 4456 ROOT::TMetaUtils::Warning(nullptr, ""'%s' value is deprecated. Please use [<fullpath>]%s.pcm\n"",; 4457 DepMod.data(),; 4458 GetModuleNameFromRdictName(DepMod).str().data());; 4459 }; 4460 DepMod = GetModuleNameFromRdictName(DepMod);; 4461 // We might deserialize.; 4462 cling::Interpreter::PushTransactionRAII RAII(&interp);; 4463 if (!interp.loadModule(DepMod.str(), /*complain*/false)) {; 4464 ROOT::TMetaUtils::Error(nullptr, ""Module '%s' failed to load.\n"",; 4465 DepMod.data());; 4466 }; 4467 }; 4468 }; 4469 ; 4470 if (!isGenreflex) { // rootcling; 4471 // ROOTCINT uses to define a few header implicitly, we need to do it explicitly.; 4472 if (interp.declare(""#include <assert.h>\n""; 4473 ""#include \""Rtypes.h\""\n""; 4474 ""#in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:182620,config,configuration,182620,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['config'],['configuration']
Modifiability,"4275 }; 4276// loop satisfied = too many iter; 4277 mnwarn(""D"", ""MNHES1"", TString::Format(""Too many iterations on D1.%g%g"",grdold,grdnew));; 4278L60:; 4279 fDgrd[i-1] = TMath::Max(dgmin,TMath::Abs(grdold - grdnew));; 4280 }; 4281// end of first deriv. loop; 4282 mninex(fX);; 4283}; 4284 ; 4285////////////////////////////////////////////////////////////////////////////////; 4286/// Attempts to improve on a good local minimum; 4287///; 4288/// Attempts to improve on a good local minimum by finding a; 4289/// better one. The quadratic part of FCN is removed by MNCALF; 4290/// and this transformed function is minimised using the simplex; 4291/// method from several random starting points.; 4292///; 4293/// ref. -- Goldstein and Price, Math.Comp. 25, 569 (1971); 4294 ; 4295void TMinuit::mnimpr(); 4296{; 4297 /* Initialized data */; 4298 ; 4299 Double_t rnum = 0;; 4300 ; 4301 /* Local variables */; 4302 Double_t amax, ycalf, ystar, ystst;; 4303 Double_t pb, ep, wg, xi, sigsav, reg, sig2;; 4304 Int_t npfn, ndex, loop=0, i, j, ifail, iseed=0;; 4305 Int_t jhold, nloop, nparx, nparp1, jh, jl, iswtr;; 4306 ; 4307 if (fNpar <= 0) return;; 4308 if (fAmin == fUndefi) mnamin();; 4309 fCstatu = ""UNCHANGED "";; 4310 fItaur = 1;; 4311 fEpsi = fUp*.1;; 4312 npfn = fNfcn;; 4313 nloop = Int_t(fWord7[1]);; 4314 if (nloop <= 0) nloop = fNpar + 4;; 4315 nparx = fNpar;; 4316 nparp1 = fNpar + 1;; 4317 wg = 1 / Double_t(fNpar);; 4318 sigsav = fEDM;; 4319 fApsi = fAmin;; 4320 iswtr = fISW[4] - 2*fItaur;; 4321 for (i = 1; i <= fNpar; ++i) {; 4322 fXt[i-1] = fX[i-1];; 4323 fIMPRdsav[i-1] = fWerr[i-1];; 4324 for (j = 1; j <= i; ++j) {; 4325 ndex = i*(i-1) / 2 + j;; 4326 fP[i + j*fMaxpar - fMaxpar-1] = fVhmat[ndex-1];; 4327 fP[j + i*fMaxpar - fMaxpar-1] = fP[i + j*fMaxpar - fMaxpar-1];; 4328 }; 4329 }; 4330 mnvert(fP, fMaxint, fMaxint, fNpar, ifail);; 4331 if (ifail >= 1) goto L280;; 4332// Save inverted matrix in VT; 4333 for (i = 1; i <= fNpar; ++i) {; 4334 ndex = i*(i-1) / 2;; 4335 for (j = 1; j",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:144146,variab,variables,144146,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"43 // Setup customizer that stores all cloned branches in our non-owning list; 3844 RooCustomizer cust(*this,""cdf"") ;; 3845 cust.setCloneBranchSet(clonedBranchNodes) ;; 3846 cust.setOwning(false) ;; 3847 ; 3848 // Make integration observable x_prime for each observable x as well as an x_lowbound; 3849 for(auto * rrv : static_range_cast<RooRealVar*>(ilist)) {; 3850 ; 3851 // Make clone x_prime of each c.d.f observable x represening running integral; 3852 RooRealVar* cloneArg = static_cast<RooRealVar*>(rrv->clone(Form(""%s_prime"",rrv->GetName()))) ;; 3853 cloneList.add(*cloneArg) ;; 3854 cust.replaceArg(*rrv,*cloneArg) ;; 3855 ; 3856 // Make clone x_lowbound of each c.d.f observable representing low bound of x; 3857 RooRealVar* cloneLo = static_cast<RooRealVar*>(rrv->clone(Form(""%s_lowbound"",rrv->GetName()))) ;; 3858 cloneLo->setVal(rrv->getMin()) ;; 3859 loList.add(*cloneLo) ;; 3860 ; 3861 // Make parameterized binning from [x_lowbound,x] for each x_prime; 3862 RooParamBinning pb(*cloneLo,*rrv,100) ;; 3863 cloneArg->setBinning(pb,""CDF"") ;; 3864 ; 3865 }; 3866 ; 3867 RooAbsReal* tmp = static_cast<RooAbsReal*>(cust.build()) ;; 3868 ; 3869 // Construct final normalization set for c.d.f = integrated observables + any extra specified by user; 3870 RooArgSet finalNset(nset) ;; 3871 finalNset.add(cloneList,true) ;; 3872 std::unique_ptr<RooAbsReal> cdf{tmp->createIntegral(cloneList,finalNset,""CDF"")};; 3873 ; 3874 // Transfer ownership of cloned items to top-level c.d.f object; 3875 cdf->addOwnedComponents(*tmp) ;; 3876 cdf->addOwnedComponents(cloneList) ;; 3877 cdf->addOwnedComponents(loList) ;; 3878 ; 3879 return RooFit::makeOwningPtr(std::move(cdf));; 3880}; 3881 ; 3882 ; 3883////////////////////////////////////////////////////////////////////////////////; 3884/// Return a RooFunctor object bound to this RooAbsReal with given definition of observables; 3885/// and parameters; 3886 ; 3887RooFunctor* RooAbsReal::functor(const RooArgList& obs, const RooArgList& pars, const RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:166224,parameteriz,parameterized,166224,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['parameteriz'],['parameterized']
Modifiability,"43 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19844 mg_snprintf(NULL,; 19845 NULL, /* No truncation check for error buffers */; 19846 error->text,; 19847 error->text_buffer_size,; 19848 ""Invalid configuration option value: %s"",; 19849 config_options[NUM_THREADS].name);; 19850 }; 19851 free_context(ctx);; 19852 pthread_setspecific(sTlsKey, NULL);; 19853 return NULL;; 19854 }; 19855 ; 19856 /* Document root */; 19857#if defined(NO_FILES); 19858 if (ctx->dd.config[DOCUMENT_ROOT] != NULL) {; 19859 mg_cry_ctx_internal(ctx, ""%s"", ""Document root must not be set"");; 19860 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19861 mg_snprintf(NULL,; 19862 NULL, /* No truncation check for error buffers */; 19863 error->text,; 19864 error->text_buffer_size,; 19865 ""Invalid configuration option value: %s"",; 19866 config_options[DOCUMENT_ROOT].name);; 19867 }; 19868 free_context(ctx);; 19869 pthread_setspecific(sTlsKey, NULL);; 19870 return NULL;; 19871 }; 19872#endif; 19873 ; 19874 get_system_name(&ctx->systemName);; 19875 ; 19876#if defined(USE_LUA); 19877 /* If a Lua background script has been configured, start it. */; 19878 ctx->lua_bg_log_available = 0;; 19879 if (ctx->dd.config[LUA_BACKGROUND_SCRIPT] != NULL) {; 19880 char ebuf[256];; 19881 struct vec opt_vec;; 19882 struct vec eq_vec;; 19883 const char *sparams;; 19884 ; 19885 memset(ebuf, 0, sizeof(ebuf));; 19886 pthread_mutex_lock(&ctx->lua_bg_mutex);; 19887 ; 19888 /* Create a Lua state, load all standard libraries and the mg table */; 19889 lua_State *state = mg_lua_context_script_prepare(; 19890 ctx->dd.config[LUA_BACKGROUND_SCRIPT], ctx, ebuf, sizeof(ebuf));; 19891 if (!state) {; 19892 mg_cry_ctx_internal(ctx,; 19893 ""lua_background_script load error: %s"",; 19894 ebuf);; 19895 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19896 mg_snprintf(NULL,; 19897 NULL, /* No truncation check for error buffers */; 19898 error->text,; 19899 error->text_buffer_size,; 19900 ""Error in script %s: %s"",; 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:593808,config,configured,593808,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,43.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80916,config,configuration,80916,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4324 ; 4325#include <dlfcn.h>; 4326 ; 4327#endif; 4328 ; 4329typedef void (*voidfunc)();; 4330static const char *R__GetSymbolName(voidfunc func); 4331{; 4332#if defined(R__WIN32) || defined(__CYGWIN__) || defined(_AIX); 4333 return ""not available on this platform"";; 4334#if 0; 4335 MEMORY_BASIC_INFORMATION mbi;; 4336 if (!VirtualQuery (func, &mbi, sizeof (mbi))); 4337 {; 4338 return 0;; 4339 }; 4340 ; 4341 HMODULE hMod = (HMODULE) mbi.AllocationBase;; 4342 static char moduleName[MAX_PATH];; 4343 ; 4344 if (!GetModuleFileNameA (hMod, moduleName, sizeof (moduleName))); 4345 {; 4346 return 0;; 4347 }; 4348 return moduleName;; 4349#endif; 4350#else; 4351 Dl_info info;; 4352 if (dladdr((void*)func,&info)==0) {; 4353 // Not in a known share library, let's give up; 4354 return ""name not found"";; 4355 } else {; 4356 //fprintf(stdout,""Found address in %s\n"",info.dli_fname);; 4357 return info.dli_sname;; 4358 }; 4359#endif; 4360}; 4361 ; 4362void TStreamerInfoActions::TActionSequence::Print(Option_t *opt) const; 4363{; 4364 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4365 // TTBranchElement in the case of split sub-object.; 4366 // If opt contains 'func', also print the (mangled) name of the function that will be executed.; 4367 ; 4368 if (fLoopConfig) {; 4369 fLoopConfig->Print();; 4370 }; 4371 TStreamerInfoActions::ActionContainer_t::const_iterator end = fActions.end();; 4372 for(TStreamerInfoActions::ActionContainer_t::const_iterator iter = fActions.begin();; 4373 iter != end;; 4374 ++iter); 4375 {; 4376 iter->fConfiguration->Print();; 4377 if (strstr(opt,""func"")) {; 4378 printf(""StreamerInfoAction func: %s\n"",R__GetSymbolName((voidfunc)iter->fAction));; 4379 }; 4380 }; 4381}; 4382 ; 4383 ; b#define b(i)Definition RSha256.hxx:100; UShort_tunsigned short UShort_tDefinition RtypesCore.h:40; Int_tint Int_tDefinition RtypesCore.h:45; kMaxIntconstexpr Int_t kMaxIntDefinition RtypesCore.h:105; Version_tshort Version_tDefinition Rty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:204757,config,configuration,204757,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configuration']
Modifiability,43603.6 4; : 989 | 3.88349 5.24185 0.0200475 0.00175499 43733.8 5; : 990 | 4.0647 4.52576 0.020036 0.00175545 43762.3 6; : 991 | 3.77396 5.32769 0.0200783 0.00175786 43667.1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0.0203306 0.00176616 43093.1 13; : 998 | 3.41797 4.46788 0.0203618 0.00175568 42996.7 14; : 999 Minimum Test error found - save the configuration ; : 999 | 3.31412 4.14973 0.0202938 0.00187677 43438 0; : 1000 | 3.20867 4.17264 0.0201802 0.00179416 43511.4 1; : 1001 | 3.31742 4.17699 0.020287 0.00175118 43159.8 2; : 1002 | 3.35839 4.8143 0.0207434 0.00177731 42180.6 3; : 1003 Minimum Test error found - save the configuration ; : 1003 | 3.42381 4.04915 0.0202591 0.00184351 43441.4 0; : 1004 Minimum Test error found - save the configuration ; : 1004 | 3.27488 4.0384 0.0205262 0.00189376 42935.9 0; : 1005 | 3.09776 4.19224 0.0200956 0.00176781 43649.6 1; : 1006 Minimum Test error found - save the configuration ; : 1006 | 3.1757 3.91876 0.0201134 0.00183093 43757.7 0; : 1007 | 3.17471 4.33126 0.0203423 0.00178093 43100.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:113452,config,configuration,113452,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 M,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76561,config,configuration,76561,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:104101,config,configuration,104101,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103987,config,configuration,103987,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92728,config,configuration,92728,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103817,config,configuration,103817,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,4394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 320,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16651,config,configuration,16651,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"43E20 6,43e20; 6.43e-20 6.43E-20 6,43e-20. TString Itoa(Int_t value, Int_t base); Converts an Int_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; Usage: the following statement produce the same output, namely ""1111""; cout << TString::Itoa(15,2) ;; cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; In case of error returns the ""!"" string. TString UItoa(UInt_t value, Int_t base); Converts a UInt_t (twice the range of an Int_t) to a TString with respect; to the base specified (2-36). Thus it is an enhanced version of sprintf; (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString LLtoa(Long64_t value, Int_t base); Converts a Long64_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString ULLtoa(ULong64_t value, Int_t base); Converts a ULong64_t (twice the range of an Long64_t) to a TString with; respect to the base specified (2-36). Thus it is an enhanced version of; sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Converts string from base base_in to base base_out. Supported bases; are 2-36. At most 64 bit data can be converted. Bool_t EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Return true if string ends with the specified string. TObjArray * Tokenize(const TString& delim) const; This function is used to isolate sequential tokens in a TString.; These tokens are separated in the string by at least one of the; characters in delim. The returned array contains the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TString.html:18819,enhance,enhanced,18819,root/html534/TString.html,https://root.cern,https://root.cern/root/html534/TString.html,4,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"43\class TH2F; 44\brief 2-D histogram with a float per channel (see TH1 documentation); 45\class TH2D; 46\brief 2-D histogram with a double per channel (see TH1 documentation); 47@}; 48*/; 49 ; 50/** \class TH2; 51 Service class for 2-D histogram classes; 52 ; 53- TH2C a 2-D histogram with one byte per cell (char). Maximum bin content = 127; 54- TH2S a 2-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; 55- TH2I a 2-D histogram with four bytes per cell (32 bit integer). Maximum bin content = INT_MAX (\ref intmax2 ""*""); 56- TH2L a 2-D histogram with eight bytes per cell (64 bit integer). Maximum bin content = LLONG_MAX (\ref llongmax2 ""**""); 57- TH2F a 2-D histogram with four bytes per cell (float). Maximum precision 7 digits, maximum integer bin content = +/-16777216 (\ref floatmax2 ""***""); 58- TH2D a 2-D histogram with eight bytes per cell (double). Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax2 ""****""); 59 ; 60<sup>; 61\anchor intmax2 (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 62\anchor llongmax2 (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 63\anchor floatmax2 (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; 64\anchor doublemax2 (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); 65</sup>; 66 ; 67*/; 68 ; 69 ; 70////////////////////////////////////////////////////////////////////////////////; 71/// 2-D histogram default constructor.; 72 ; 73TH2::TH2(); 74{; 75 fDimension = 2;; 76 fScalefactor = 1;; 77 fTsumwy = fTsumwy2 = fTsumwxy = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:2568,variab,variable,2568,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,44777 1.9988 ]; : y: 1.4942 0.76640 [ 0.014777 2.9933 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : --------------------------; : Rank : Variable : Separation; : --------------------------; : 1 : y : 5.413e-01; : 2 : x : 4.319e-02; : --------------------------; <HEADER> Factory : Train method: BDT for Classification; : ; <HEADER> BDT : #events: (reweighted) sig: 500 bkg: 500; : #events: (unweighted) sig: 500 bkg: 500; : Training 800 Decision Trees ... patience please; : Elapsed time for training with 1000 events: 0.386 sec ; <HEADER> BDT : [dataset] : Evaluation of BDT on training sample (1000 events); : Elapsed time for evaluation of 1000 events: 0.0729 sec ; : Creating xml weight file: dataset/weights/_BDT.weights.xml; : Creating standalone class: dataset/weights/_BDT.class.C; : out.root:/dataset/Method_BDT/BDT; <HEADER> Factory : Training finished; : ; : Ranking input variables (method specific)...; <HEADER> BDT : Ranking result (top variable is best ranked); : -----------------------------------; : Rank : Variable : Variable Importance; : -----------------------------------; : 1 : y : 5.011e-01; : 2 : x : 4.989e-01; : -----------------------------------; <HEADER> Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: dataset/weights/_BDT.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDT for Classification performance; : ; <HEADER> BDT : [dataset] : Evaluation of BDT on testing sample (1000 events); : Elapsed time for evaluation of 1000 events: 0.0581 sec ; <HEADER> Factory : Evaluate all methods; <HEADER> Factory : Evaluate classifier: BDT; : ; <HEADER> BDT : [dataset] : Loop over test events and fill histograms with classifier response...; : ; <HEADER> TFHandler_BDT : Variable Mean RMS [ Min Max ]; : ------------------------------,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMinimalClassification_8C.html:4307,variab,variables,4307,doc/master/TMVAMinimalClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMinimalClassification_8C.html,1,['variab'],['variables']
Modifiability,"44;  ; Float_t yeelec;  ; Float_t yjbc;  ; Float_t yjbct;  ; Float_t ypt;  ; Float_t z0 [200];  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/h1analysis.h>. Inheritance diagram for h1analysis:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ h1analysis(). h1analysis::h1analysis ; (; TTree * ; tree = nullptr). Definition at line 369 of file h1analysis.h. ◆ ~h1analysis(). h1analysis::~h1a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classh1analysis.html:18541,inherit,inherited,18541,doc/master/classh1analysis.html,https://root.cern,https://root.cern/doc/master/classh1analysis.html,2,['inherit'],['inherited']
Modifiability,"45 ; 12046 if ((len + 2) > (int)sizeof(buf)) {; 12047 /* Tag to long for buffer */; 12048 mg_cry_internal(conn, ""%s: tag is too large"", path);; 12049 return;; 12050 }; 12051 }; 12052 ; 12053 } else {; 12054 ; 12055 /* We are not in a tag yet. */; 12056 if (ch == '<') {; 12057 /* Tag is opening */; 12058 in_tag = 1;; 12059 ; 12060 if (len > 0) {; 12061 /* Flush current buffer.; 12062 * Buffer is filled with ""len"" bytes. */; 12063 (void)mg_write(conn, buf, (size_t)len);; 12064 }; 12065 /* Store the < */; 12066 len = 1;; 12067 buf[0] = '<';; 12068 ; 12069 } else {; 12070 /* No Tag */; 12071 /* Add data to buffer */; 12072 buf[len++] = (char)(ch & 0xff);; 12073 /* Flush if buffer is full */; 12074 if (len == (int)sizeof(buf)) {; 12075 mg_write(conn, buf, (size_t)len);; 12076 len = 0;; 12077 }; 12078 }; 12079 }; 12080 }; 12081 ; 12082 /* Send the rest of buffered data */; 12083 if (len > 0) {; 12084 mg_write(conn, buf, (size_t)len);; 12085 }; 12086}; 12087 ; 12088 ; 12089static void; 12090handle_ssi_file_request(struct mg_connection *conn,; 12091 const char *path,; 12092 struct mg_file *filep); 12093{; 12094 char date[64];; 12095 time_t curtime = time(NULL);; 12096 const char *cors_orig_cfg, *cors_cred_cfg;; 12097 const char *cors1, *cors2, *cors3, *cors4;; 12098 ; 12099 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12100 return;; 12101 }; 12102 ; 12103 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12104 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12105 /* Cross-origin resource sharing (CORS). */; 12106 cors1 = ""Access-Control-Allow-Origin"";; 12107 cors2 = cors_orig_cfg;; 12108 } else {; 12109 cors1 = cors2 = """";; 12110 }; 12111 ; 12112 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12113 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12114 /* Credentials CORS header */; 12115 cors3 = ""Access-Control-Allow-Credentials"";; 12116 cors4 = cors_cred_cfg;; 1211",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:349908,config,config,349908,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"45 out<<"" line->Draw();""<<std::endl;; 446}; 447 ; 448////////////////////////////////////////////////////////////////////////////////; 449/// Check whether this line is to be drawn horizontally.; 450 ; 451Bool_t TLine::IsHorizontal(); 452{; 453 return TestBit(kHorizontal);; 454}; 455 ; 456////////////////////////////////////////////////////////////////////////////////; 457/// Check whether this line is to be drawn vertically.; 458 ; 459Bool_t TLine::IsVertical(); 460{; 461 return TestBit(kVertical);; 462}; 463 ; 464////////////////////////////////////////////////////////////////////////////////; 465/// Set NDC mode on if isNDC = kTRUE, off otherwise; 466 ; 467void TLine::SetNDC(Bool_t isNDC); 468{; 469 ResetBit(kLineNDC);; 470 if (isNDC) SetBit(kLineNDC);; 471}; 472 ; 473////////////////////////////////////////////////////////////////////////////////; 474/// Force the line to be drawn horizontally.; 475/// Makes fY2 equal to fY1. The line length is kept.; 476/// TArrow and TGaxis also get this function by inheritance.; 477 ; 478void TLine::SetHorizontal(Bool_t set /*= kTRUE*/); 479{; 480 SetBit(kHorizontal, set);; 481 if (set && gPad) {; 482 SetVertical(kFALSE);; 483 Int_t px1 = gPad->XtoAbsPixel(fX1);; 484 Int_t px2 = gPad->XtoAbsPixel(fX2);; 485 Int_t py1 = gPad->YtoAbsPixel(fY1);; 486 Int_t py2 = gPad->YtoAbsPixel(fY2);; 487 Int_t l = Int_t(TMath::Sqrt((px2-px1)*(px2-px1)+(py2-py1)*(py2-py1)));; 488 if (fX2 >= fX1) fX2 = gPad->AbsPixeltoX(px1+l);; 489 else fX2 = gPad->AbsPixeltoX(px1-l);; 490 fY2 = fY1;; 491 }; 492}; 493 ; 494////////////////////////////////////////////////////////////////////////////////; 495/// Force the line to be drawn vertically.; 496/// Makes fX2 equal to fX1. The line length is kept.; 497/// TArrow and TGaxis also get this function by inheritance.; 498 ; 499void TLine::SetVertical(Bool_t set /*= kTRUE*/); 500{; 501 SetBit(kVertical, set);; 502 if (set && gPad) {; 503 SetHorizontal(kFALSE);; 504 Int_t px1 = gPad->XtoAbsPixel(fX1);; 505 Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLine_8cxx_source.html:14434,inherit,inheritance,14434,doc/master/TLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLine_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"450 for(i=0;i<np;i++) {; 451 fX[i] = gPad->PadtoX(gPad->AbsPixeltoX(x[i]+dpx));; 452 fY[i] = gPad->PadtoY(gPad->AbsPixeltoY(y[i]+dpy));; 453 }; 454 } else {; 455 fX[ipoint] = gPad->PadtoX(gPad->AbsPixeltoX(pxold));; 456 fY[ipoint] = gPad->PadtoY(gPad->AbsPixeltoY(pyold));; 457 }; 458 x.clear();; 459 y.clear();; 460 }; 461 gPad->Modified(kTRUE);; 462 gVirtualX->SetLineColor(-1);; 463 }; 464}; 465 ; 466////////////////////////////////////////////////////////////////////////////////; 467/// List this polyline with its attributes.; 468/// The option string is ignored.; 469 ; 470void TPolyLine::ls(Option_t *) const; 471{; 472 TROOT::IndentLevel();; 473 printf(""TPolyLine N=%d\n"",fN);; 474}; 475 ; 476////////////////////////////////////////////////////////////////////////////////; 477/// Merge polylines in the collection in this polyline; 478 ; 479Int_t TPolyLine::Merge(TCollection *li); 480{; 481 if (!li) return 0;; 482 TIter next(li);; 483 ; 484 //first loop to count the number of entries; 485 TPolyLine *pl;; 486 Int_t npoints = 0;; 487 while ((pl = (TPolyLine*)next())) {; 488 if (!pl->InheritsFrom(TPolyLine::Class())) {; 489 Error(""Add"",""Attempt to add object of class: %s to a %s"",pl->ClassName(),this->ClassName());; 490 return -1;; 491 }; 492 npoints += pl->Size();; 493 }; 494 ; 495 //extend this polyline to hold npoints; 496 if (npoints > 1) SetPoint(npoints-1,0,0);; 497 ; 498 //merge all polylines; 499 next.Reset();; 500 while ((pl = (TPolyLine*)next())) {; 501 Int_t np = pl->Size();; 502 Double_t *x = pl->GetX();; 503 Double_t *y = pl->GetY();; 504 for (Int_t i=0;i<np;i++) {; 505 SetPoint(i,x[i],y[i]);; 506 }; 507 }; 508 ; 509 return npoints;; 510}; 511 ; 512////////////////////////////////////////////////////////////////////////////////; 513/// Paint this polyline with its current attributes.; 514 ; 515void TPolyLine::Paint(Option_t *option); 516{; 517 if (TestBit(kPolyLineNDC)) {; 518 if (option && strlen(option)) PaintPolyLineNDC(fLastPoint+1, fX, fY, option);; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8cxx_source.html:15940,extend,extend,15940,doc/master/TPolyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8cxx_source.html,1,['extend'],['extend']
Modifiability,"46 ; 12047 if ((len + 2) > (int)sizeof(buf)) {; 12048 /* Tag to long for buffer */; 12049 mg_cry_internal(conn, ""%s: tag is too large"", path);; 12050 return;; 12051 }; 12052 }; 12053 ; 12054 } else {; 12055 ; 12056 /* We are not in a tag yet. */; 12057 if (ch == '<') {; 12058 /* Tag is opening */; 12059 in_tag = 1;; 12060 ; 12061 if (len > 0) {; 12062 /* Flush current buffer.; 12063 * Buffer is filled with ""len"" bytes. */; 12064 (void)mg_write(conn, buf, (size_t)len);; 12065 }; 12066 /* Store the < */; 12067 len = 1;; 12068 buf[0] = '<';; 12069 ; 12070 } else {; 12071 /* No Tag */; 12072 /* Add data to buffer */; 12073 buf[len++] = (char)(ch & 0xff);; 12074 /* Flush if buffer is full */; 12075 if (len == (int)sizeof(buf)) {; 12076 mg_write(conn, buf, (size_t)len);; 12077 len = 0;; 12078 }; 12079 }; 12080 }; 12081 }; 12082 ; 12083 /* Send the rest of buffered data */; 12084 if (len > 0) {; 12085 mg_write(conn, buf, (size_t)len);; 12086 }; 12087}; 12088 ; 12089 ; 12090static void; 12091handle_ssi_file_request(struct mg_connection *conn,; 12092 const char *path,; 12093 struct mg_file *filep); 12094{; 12095 char date[64];; 12096 time_t curtime = time(NULL);; 12097 const char *cors_orig_cfg, *cors_cred_cfg;; 12098 const char *cors1, *cors2, *cors3, *cors4;; 12099 ; 12100 if ((conn == NULL) || (path == NULL) || (filep == NULL)) {; 12101 return;; 12102 }; 12103 ; 12104 cors_orig_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_ORIGIN];; 12105 if (cors_orig_cfg && *cors_orig_cfg && mg_get_header(conn, ""Origin"")) {; 12106 /* Cross-origin resource sharing (CORS). */; 12107 cors1 = ""Access-Control-Allow-Origin"";; 12108 cors2 = cors_orig_cfg;; 12109 } else {; 12110 cors1 = cors2 = """";; 12111 }; 12112 ; 12113 cors_cred_cfg = conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_CREDENTIALS];; 12114 if (cors_cred_cfg && *cors_cred_cfg && mg_get_header(conn, ""Origin"")) {; 12115 /* Credentials CORS header */; 12116 cors3 = ""Access-Control-Allow-Credentials"";; 12117 cors4 = cors_cred_cfg;; 1211",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:349941,config,config,349941,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"4607 mg_exec_lua_script(conn, path, NULL);; 14608 } else {; 14609 /* Script was in an illegal path */; 14610 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14611 }; 14612 return;; 14613 }; 14614#endif; 14615 ; 14616#if defined(USE_DUKTAPE); 14617 if (match_prefix_strlen(conn->dom_ctx->config[DUKTAPE_SCRIPT_EXTENSIONS],; 14618 path); 14619 > 0) {; 14620 if (is_in_script_path(conn, path)) {; 14621 /* Call duktape to generate the page */; 14622 mg_exec_duktape_script(conn, path);; 14623 } else {; 14624 /* Script was in an illegal path */; 14625 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14626 }; 14627 return;; 14628 }; 14629#endif; 14630 ; 14631#if !defined(NO_CGI); 14632 inc = CGI2_EXTENSIONS - CGI_EXTENSIONS;; 14633 max = PUT_DELETE_PASSWORDS_FILE - CGI_EXTENSIONS;; 14634 for (cgi_config_idx = 0; cgi_config_idx < max; cgi_config_idx += inc) {; 14635 if (conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx] != NULL) {; 14636 if (match_prefix_strlen(; 14637 conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx],; 14638 path); 14639 > 0) {; 14640 if (is_in_script_path(conn, path)) {; 14641 /* CGI scripts may support all HTTP methods */; 14642 handle_cgi_request(conn, path, 0);; 14643 } else {; 14644 /* Script was in an illegal path */; 14645 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14646 }; 14647 return;; 14648 }; 14649 }; 14650 }; 14651#endif /* !NO_CGI */; 14652 ; 14653 if (match_prefix_strlen(conn->dom_ctx->config[SSI_EXTENSIONS], path) > 0) {; 14654 if (is_in_script_path(conn, path)) {; 14655 handle_ssi_file_request(conn, path, file);; 14656 } else {; 14657 /* Script was in an illegal path */; 14658 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14659 }; 14660 return;; 14661 }; 14662 ; 14663#if !defined(NO_CACHING); 14664 if ((!conn->in_error_handler) && is_not_modified(conn, &file->stat)) {; 14665 /* Send 304 ""Not Modified"" - this must not send any body data */; 14666 handle_not_modified_static_file_request(conn, file);; 14667 return;; 146",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:431489,config,config,431489,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"4608 mg_exec_lua_script(conn, path, NULL);; 14609 } else {; 14610 /* Script was in an illegal path */; 14611 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14612 }; 14613 return;; 14614 }; 14615#endif; 14616 ; 14617#if defined(USE_DUKTAPE); 14618 if (match_prefix_strlen(conn->dom_ctx->config[DUKTAPE_SCRIPT_EXTENSIONS],; 14619 path); 14620 > 0) {; 14621 if (is_in_script_path(conn, path)) {; 14622 /* Call duktape to generate the page */; 14623 mg_exec_duktape_script(conn, path);; 14624 } else {; 14625 /* Script was in an illegal path */; 14626 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14627 }; 14628 return;; 14629 }; 14630#endif; 14631 ; 14632#if !defined(NO_CGI); 14633 inc = CGI2_EXTENSIONS - CGI_EXTENSIONS;; 14634 max = PUT_DELETE_PASSWORDS_FILE - CGI_EXTENSIONS;; 14635 for (cgi_config_idx = 0; cgi_config_idx < max; cgi_config_idx += inc) {; 14636 if (conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx] != NULL) {; 14637 if (match_prefix_strlen(; 14638 conn->dom_ctx->config[CGI_EXTENSIONS + cgi_config_idx],; 14639 path); 14640 > 0) {; 14641 if (is_in_script_path(conn, path)) {; 14642 /* CGI scripts may support all HTTP methods */; 14643 handle_cgi_request(conn, path, 0);; 14644 } else {; 14645 /* Script was in an illegal path */; 14646 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14647 }; 14648 return;; 14649 }; 14650 }; 14651 }; 14652#endif /* !NO_CGI */; 14653 ; 14654 if (match_prefix_strlen(conn->dom_ctx->config[SSI_EXTENSIONS], path) > 0) {; 14655 if (is_in_script_path(conn, path)) {; 14656 handle_ssi_file_request(conn, path, file);; 14657 } else {; 14658 /* Script was in an illegal path */; 14659 mg_send_http_error(conn, 403, ""%s"", ""Forbidden"");; 14660 }; 14661 return;; 14662 }; 14663 ; 14664#if !defined(NO_CACHING); 14665 if ((!conn->in_error_handler) && is_not_modified(conn, &file->stat)) {; 14666 /* Send 304 ""Not Modified"" - this must not send any body data */; 14667 handle_not_modified_static_file_request(conn, file);; 14668 return;; 146",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:431522,config,config,431522,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96961,config,configuration,96961,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4740992 (****). Profile histograms: See classes TProfile, TProfile2D and TProfile3D. Profile histograms are used to display the mean value of Y and its standard deviation for each bin in X. Profile histograms are in many cases an elegant replacement of two-dimensional histograms : the inter-relation of two measured quantities X and Y can always be visualized by a two-dimensional histogram or scatter-plot; If Y is an unknown (but single-valued) approximate function of X, this function is displayed by a profile histogram with much better precision than by a scatter-plot. (*) INT_MAX = 2147483647 is the maximum value for a variable of type int.; (**) LLONG_MAX = 9223372036854775807 is the maximum value for a variable of type long64.; (***) 2^24 = 16777216 is the maximum integer that can be properly represented by a float32 with 23-bit mantissa.; (****) 2^53 = 9007199254740992 is the maximum integer that can be properly represented by a double64 with 52-bit mantissa. ; The inheritance hierarchy looks as follows:. Creating histograms; Histograms are created by invoking one of the constructors, e.g. TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; h1TH1F * h1Definition legend1.C:5; Histograms may also be created by:. calling the Clone() function, see below; making a projection from a 2-D or 3-D histogram, see below; reading a histogram from a file. When a histogram is created, a reference to it is automatically added to the list of in-memory objects for the current file or directory. Then the pointer to this histogram in the current directory can be found by its name, doing: TH1F *h1 = (TH1F*)gDirectory->FindObject(name);; gDirectory#define gDirectoryDefinition TDirectory.h:384; namechar name[80]Definition TGX11.cxx:110; TH1::FindObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:4006,inherit,inheritance,4006,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['inherit'],['inheritance']
Modifiability,"478 }; 1479 ; 1480 tmp.remove(*selNodes, true);; 1481 tmp.remove(*this);; 1482 selNodes->add(tmp);; 1483 coutI(Plotting) << ""RooAbsPdf::plotOn("" << GetName() << "") indirectly selected PDF components: "" << tmp << std::endl ;; 1484 ; 1485 // Set PDF selection bits according to selNodes; 1486 for (const auto arg : branchNodeSet) {; 1487 bool select = selNodes->find(arg->GetName()) != nullptr;; 1488 static_cast<RooAbsReal*>(arg)->selectComp(select);; 1489 }; 1490}; 1491 ; 1492 ; 1493 ; 1494////////////////////////////////////////////////////////////////////////////////; 1495/// Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; 1496/// will show a unit normalized curve in the frame variable, taken at the present value; 1497/// of other observables defined for this PDF.; 1498///; 1499/// \param[in] frame pointer to RooPlot; 1500/// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; 1501///; 1502/// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; 1503/// show a projected curve integrated over all variables that were present in the shown; 1504/// dataset except for the one on the x-axis. The normalization of the curve will also; 1505/// be adjusted to the event count of the plotted dataset. An informational message; 1506/// will be printed for each projection step that is performed.; 1507///; 1508/// This function takes the following named arguments; 1509/// <table>; 1510/// <tr><th><th> Projection control; 1511/// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; 1512/// in set from the projection, i.e. by not integrating over these.; 1513/// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; 1514/// of the PDF at the current value of the category observable.; 1515///; 1516/// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:61598,variab,variables,61598,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,48 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.65912 0.0202218 0.00185299 43552 0; : 976 | 3.7346 5.23443 0.0200603 0.00176255 43721.2 1; : 977 | 3.73856 4.9727 0.0200443 0.00176151 43757 2; : 978 | 3.60727 4.99113 0.0200479 0.00175633 43736 3; : 979 | 3.40672 4.84357 0.0200357 0.00175685 43766.5 4; : 980 | 3.44899 4.83288 0.0200548 0.0017499 43704.2 5; : 981 | 3.46445 4.72048 0.0203135 0.00176046 43119.7 6; : 982 Minimum Test error found - save the configuration ; : 982 | 3.46604 4.64127 0.0202116 0.00183381 43530.8 0; : 983 Minimum Test error found - save the configuration ; : 983 | 3.37896 4.59559 0.0201715 0.00182642 43608.5 0; : 984 Minimum Test error found - save the configuration ; : 984 | 3.36213 4.34126 0.0202597 0.00185498 43467.1 0; : 985 | 3.39032 4.51659 0.0201503 0.00185184 43719.5 1; : 986 | 3.5234 4.95577 0.0201762 0.0017578 43434.8 2; : 987 | 3.50466 4.60061 0.0201538 0.00175522 43481.6 3; : 988 | 3.61316 4.68965 0.0201071 0.00176 43603.6 4; : 989 | 3.88349 5.24185 0.0200,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:111492,config,configuration,111492,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"485; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::SetBranchStatusvirtual void SetBranchStatus(const char *bname, bool status=true, UInt_t *found=nullptr)Set branch status to Process or DoNotProcess.Definition TTree.cxx:8534; TTree::GetEntryvirtual Int_t GetEntry(Long64_t entry, Int_t getall=0)Read all branches of entry and return total number of bytes read.Definition TTree.cxx:5638; TTree::GetCurrentFileTFile * GetCurrentFile() constReturn pointer to the current file.Definition TTree.cxx:5479; TTree::GetDirectoryTDirectory * GetDirectory() constDefinition TTree.h:462; TTree::GetEntriesvirtual Long64_t GetEntries() constDefinition TTree.h:463; TTree::GetTreevirtual TTree * GetTree() constDefinition TTree.h:557; TTree::LoadTreevirtual Long64_t LoadTree(Long64_t entry)Set current entry.Definition TTree.cxx:6473; TTree::ResetBranchAddressesvirtual void ResetBranchAddresses()Tell all of our branches to drop their current objects and allocate new ones.Definition TTree.cxx:8075; TVectorT< Double_t >; bool; double; int; unsigned int; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::LargestCommonDividerInt_t LargestCommonDivider(Int_t a, Int_t b)Definition DataSetFactory.cxx:80; TMVA::EndlMsgLogger & Endl(MsgLogger &ml)Definition MsgLogger.h:148; TMath::IsNaNBool_t IsNaN(Double_t x)Definition TMath.h:892; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::FiniteInt_t Finite(Double_t x)Check if it is finite with a mask in order to be consistent in presence of fast math.Definition TMath.h:770; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; v@ vDefinition rootcling_impl.cxx:3699; whatstatic const char * whatDefinition stlLoader.cc:5; vecDefinition civetweb.c:1855; Types.h. tmvatmvasrcDataSetFactory.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:96045,variab,variable,96045,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,4867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:107690,config,configuration,107690,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100443,config,configuration,100443,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"49 && (fComp[fNdata].fType == kObjectp || fComp[fNdata].fType == kAnyp; 3150 || fComp[fNdata].fType == kObject || fComp[fNdata].fType == kAny; 3151 || fComp[fNdata].fType == kTObject || fComp[fNdata].fType == kTNamed || fComp[fNdata].fType == kTString ); 3152 ) {; 3153 fComp[fNdata].fType = fComp[fNdata].fNewType;; 3154 } else if (fComp[fNdata].fType != kCounter) {; 3155 fComp[fNdata].fType += kConv;; 3156 }; 3157 } else {; 3158 if (fComp[fNdata].fType == kCounter) {; 3159 Warning(""Compile"", ""Counter %s should not be skipped from class %s"", element->GetName(), GetName());; 3160 }; 3161 fComp[fNdata].fType += kSkip;; 3162 }; 3163 }; 3164 fCompOpt[fNdata] = &(fComp[fNdata]);; 3165 fCompFull[fNfulldata] = &(fComp[fNdata]);; 3166 ; 3167 R__ASSERT( fNdata < (fNslots - optiOut) );; 3168 ; 3169 keep = fNdata;; 3170 if (fComp[keep].fLength == 0) {; 3171 fComp[keep].fLength = 1;; 3172 }; 3173 fNdata++;; 3174 previousOptimized = kFALSE;; 3175 }; 3176 // The test 'fMethod[keep] == 0' fails to detect a variable size array; 3177 // if the counter happens to have an offset of zero, so let's explicitly; 3178 // prevent for here.; 3179 if (element->HasCounter()) keep = -1;; 3180 ++fNfulldata;; 3181 previous = element;; 3182 }; 3183 ; 3184 for (i = 0; i < fNdata; ++i) {; 3185 if (!fCompOpt[i]->fElem || fCompOpt[i]->fElem->GetType()< 0) {; 3186 continue;; 3187 }; 3188 AddReadAction(fReadObjectWise, i, fCompOpt[i]);; 3189 AddWriteAction(fWriteObjectWise, i, fCompOpt[i]);; 3190 }; 3191 for (i = 0; i < fNfulldata; ++i) {; 3192 if (!fCompFull[i]->fElem || fCompFull[i]->fElem->GetType()< 0) {; 3193 continue;; 3194 }; 3195 AddReadAction(fReadMemberWise, i, fCompFull[i]);; 3196 AddWriteAction(fWriteMemberWise, i, fCompFull[i]);; 3197 AddReadMemberWiseVecPtrAction(fReadMemberWiseVecPtr, i, fCompFull[i]);; 3198 AddWriteMemberWiseVecPtrAction(fWriteMemberWiseVecPtr, i, fCompFull[i]);; 3199 ; 3200 AddReadTextAction(fReadText, i, fCompFull[i]);; 3201 AddWriteTextAction(fWriteText, i, fCompFull[i]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:138982,variab,variable,138982,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['variab'],['variable']
Modifiability,"493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.29682 0.292587 0.0806285 0.00686869 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 3.117e-01; : 2 : var1 : 2.504e-01; : 3 : var2 : 2.430e-01; : 4 : var3 : 1.949e-01; : --------------------------------------; MLP : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Importance; : -----------------------------; : 1 : var4 : 6.076e+01; : 2 : var2 : 4.824e+01; : 3 : var1 : 2.116e+01; : 4 : var3 : 1.692e+01; : -----------------------------; PDEFoam : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.991e-01; : 2 : var1 : 2.930e-01; : 3 : var3 : 2.365e-01; : 4 : var2 : 1.714e-01; : --------------------------------------; : No variable ranking supplied by classifier: DL_CPU; TH1.Print Name = TrainingHistory_DL_CPU_trainingError, Entries= 0, Total sum= 7.41943; TH1.Print Name = TrainingHistory_DL_CPU_v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:17629,variab,variable,17629,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variable']
Modifiability,"4963 ; 4964 /* Convert to Unicode and back. If doubly-converted string does not; 4965 * match the original, something is fishy, reject. */; 4966 memset(wbuf, 0, wbuf_len * sizeof(wchar_t));; 4967 MultiByteToWideChar(CP_UTF8, 0, buf, -1, wbuf, (int)wbuf_len);; 4968 WideCharToMultiByte(; 4969 CP_UTF8, 0, wbuf, (int)wbuf_len, buf2, sizeof(buf2), NULL, NULL);; 4970 if (strcmp(buf, buf2) != 0) {; 4971 wbuf[0] = L'\0';; 4972 }; 4973 ; 4974 /* Windows file systems are not case sensitive, but you can still use; 4975 * uppercase and lowercase letters (on all modern file systems).; 4976 * The server can check if the URI uses the same upper/lowercase; 4977 * letters an the file system, effectively making Windows servers; 4978 * case sensitive (like Linux servers are). It is still not possible; 4979 * to use two files with the same name in different cases on Windows; 4980 * (like /a and /A) - this would be possible in Linux.; 4981 * As a default, Windows is not case sensitive, but the case sensitive; 4982 * file name check can be activated by an additional configuration. */; 4983 if (conn) {; 4984 if (conn->dom_ctx->config[CASE_SENSITIVE_FILES]; 4985 && !mg_strcasecmp(conn->dom_ctx->config[CASE_SENSITIVE_FILES],; 4986 ""yes"")) {; 4987 /* Use case sensitive compare function */; 4988 fcompare = wcscmp;; 4989 }; 4990 }; 4991 (void)conn; /* conn is currently unused */; 4992 ; 4993 /* Only accept a full file path, not a Windows short (8.3) path. */; 4994 memset(wbuf2, 0, ARRAY_SIZE(wbuf2) * sizeof(wchar_t));; 4995 long_len = GetLongPathNameW(wbuf, wbuf2, ARRAY_SIZE(wbuf2) - 1);; 4996 if (long_len == 0) {; 4997 err = GetLastError();; 4998 if (err == ERROR_FILE_NOT_FOUND) {; 4999 /* File does not exist. This is not always a problem here. */; 5000 return;; 5001 }; 5002 }; 5003 if ((long_len >= ARRAY_SIZE(wbuf2)) || (fcompare(wbuf, wbuf2) != 0)) {; 5004 /* Short name is used. */; 5005 wbuf[0] = L'\0';; 5006 }; 5007}; 5008 ; 5009 ; 5010#if !defined(NO_FILESYSTEMS); 5011/* Get file informat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:148489,config,configuration,148489,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"4964 ; 4965 /* Convert to Unicode and back. If doubly-converted string does not; 4966 * match the original, something is fishy, reject. */; 4967 memset(wbuf, 0, wbuf_len * sizeof(wchar_t));; 4968 MultiByteToWideChar(CP_UTF8, 0, buf, -1, wbuf, (int)wbuf_len);; 4969 WideCharToMultiByte(; 4970 CP_UTF8, 0, wbuf, (int)wbuf_len, buf2, sizeof(buf2), NULL, NULL);; 4971 if (strcmp(buf, buf2) != 0) {; 4972 wbuf[0] = L'\0';; 4973 }; 4974 ; 4975 /* Windows file systems are not case sensitive, but you can still use; 4976 * uppercase and lowercase letters (on all modern file systems).; 4977 * The server can check if the URI uses the same upper/lowercase; 4978 * letters an the file system, effectively making Windows servers; 4979 * case sensitive (like Linux servers are). It is still not possible; 4980 * to use two files with the same name in different cases on Windows; 4981 * (like /a and /A) - this would be possible in Linux.; 4982 * As a default, Windows is not case sensitive, but the case sensitive; 4983 * file name check can be activated by an additional configuration. */; 4984 if (conn) {; 4985 if (conn->dom_ctx->config[CASE_SENSITIVE_FILES]; 4986 && !mg_strcasecmp(conn->dom_ctx->config[CASE_SENSITIVE_FILES],; 4987 ""yes"")) {; 4988 /* Use case sensitive compare function */; 4989 fcompare = wcscmp;; 4990 }; 4991 }; 4992 (void)conn; /* conn is currently unused */; 4993 ; 4994 /* Only accept a full file path, not a Windows short (8.3) path. */; 4995 memset(wbuf2, 0, ARRAY_SIZE(wbuf2) * sizeof(wchar_t));; 4996 long_len = GetLongPathNameW(wbuf, wbuf2, ARRAY_SIZE(wbuf2) - 1);; 4997 if (long_len == 0) {; 4998 err = GetLastError();; 4999 if (err == ERROR_FILE_NOT_FOUND) {; 5000 /* File does not exist. This is not always a problem here. */; 5001 return;; 5002 }; 5003 }; 5004 if ((long_len >= ARRAY_SIZE(wbuf2)) || (fcompare(wbuf, wbuf2) != 0)) {; 5005 /* Short name is used. */; 5006 wbuf[0] = L'\0';; 5007 }; 5008}; 5009 ; 5010 ; 5011#if !defined(NO_FILESYSTEMS); 5012/* Get file informat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:148521,config,configuration,148521,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configuration']
Modifiability,"497~~~; 498 ; 499It is therefore good practice to declare all your transformations and actions *before* accessing their results, allowing; 500RDataFrame to run the loop once and produce all results in one go.; 501 ; 502### Going parallel; 503Let's say we would like to run the previous examples in parallel on several cores, dividing events fairly between cores.; 504The only modification required to the snippets would be the addition of this line *before* constructing the main; 505dataframe object:; 506~~~{.cpp}; 507ROOT::EnableImplicitMT();; 508~~~; 509Simple as that. More details are given [below](#parallel-execution).; 510 ; 511\anchor collections; 512## Working with collections and object selections; 513 ; 514RDataFrame reads collections as the special type [ROOT::RVec](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html): for example, a column containing an array of floating point numbers can be read as a ROOT::RVecF. C-style arrays (with variable or static size), STL vectors and most other collection types can be read this way.; 515 ; 516RVec is a container similar to std::vector (and can be used just like a std::vector) but it also offers a rich interface to operate on the array elements in a vectorised fashion, similarly to Python's NumPy arrays.; 517 ; 518For example, to fill a histogram with the ""pt"" of selected particles for each event, Define() can be used to create a column that contains the desired array elements as follows:; 519 ; 520~~~{.cpp}; 521// h is filled with all the elements of `good_pts`, for each event; 522auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); 523 .Histo1D(""good_pts"");; 524~~~; 525 ; 526And in Python:; 527 ; 528~~~{.py}; 529h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); 530~~~; 531 ; 532Learn more at ROOT::VecOps::RVec.; 533 ; 534\anchor transformations; 535## Transformations: manipulating data; 536\anchor Filters; 537### Filters; 538A filter is created through a call to `Filt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:30482,variab,variable,30482,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variable']
Modifiability,"4: abnormal termination (e.g., MIGRAD not converged); 2656/// - 9: reserved; 2657/// - 10: END command; 2658/// - 11: EXIT or STOP command; 2659/// - 12: RETURN command; 2660///; 2661/// see also; 2662/// [the possible list of all Minuit commands](https://root.cern/sites/d35c7d8c.web.cern.ch/files/minuit.pdf).; 2663 ; 2664void TMinuit::mnexcm(const char *command, Double_t *plist, Int_t llist, Int_t &ierflg); 2665{; 2666 /* Initialized data */; 2667 ; 2668 TString comand = command;; 2669 static const char *const cname[40] = {; 2670 ""MINImize "",; 2671 ""SEEk "",; 2672 ""SIMplex "",; 2673 ""MIGrad "",; 2674 ""MINOs "",; 2675 ""SET xxx "",; 2676 ""SHOw xxx "",; 2677 ""TOP of pag"",; 2678 ""FIX "",; 2679 ""REStore "",; 2680 ""RELease "",; 2681 ""SCAn "",; 2682 ""CONtour "",; 2683 ""HESse "",; 2684 ""SAVe "",; 2685 ""IMProve "",; 2686 ""CALl fcn "",; 2687 ""STAndard "",; 2688 ""END "",; 2689 ""EXIt "",; 2690 ""RETurn "",; 2691 ""CLEar "",; 2692 ""HELP "",; 2693 ""MNContour "",; 2694 ""STOp "",; 2695 ""JUMp "",; 2696 "" "",; 2697 "" "",; 2698 "" "",; 2699 "" "",; 2700 "" "",; 2701 "" "",; 2702 "" "",; 2703 ""COVARIANCE"",; 2704 ""PRINTOUT "",; 2705 ""GRADIENT "",; 2706 ""MATOUT "",; 2707 ""ERROR DEF "",; 2708 ""LIMITS "",; 2709 ""PUNCH ""};; 2710 ; 2711 Int_t nntot = 40;; 2712 ; 2713 /* Local variables */; 2714 Double_t step, xptu[101], yptu[101], f, rno;; 2715 Int_t icol, kcol, ierr, iint, iext, lnow, nptu, i, iflag, ierrf;; 2716 Int_t ilist, nparx, izero, nf, lk, it, iw, inonde, nsuper;; 2717 Int_t it2, ke1, ke2, nowprt, kll, krl;; 2718 TString chwhy, c26, cvblnk, cneway, comd;; 2719 TString ctemp;; 2720 Bool_t lfreed, ltofix, lfixed;; 2721 ; 2722// alphabetical order of command names!; 2723 ; 2724 /* Function Body */; 2725 ; 2726 lk = comand.Length();; 2727 if (lk > 20) lk = 20;; 2728 fCword = comand;; 2729 fCword.ToUpper();; 2730// Copy the first MAXP arguments into WORD7, making; 2731// sure that WORD7(1)=0 if LLIST=0; 2732 for (iw = 1; iw <= fMaxpar; ++iw) {; 2733 fWord7[iw-1] = 0;; 2734 if (iw <= llist) fWord7[iw-1] = plist[iw-1];; 2735 }; 273",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:88117,variab,variables,88117,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,4; : 1131 | 2.55367 2.59723 0.0200573 0.00177202 43751.1 15; : 1132 | 2.73554 2.74944 0.020135 0.00176885 43558.3 16; : 1133 | 2.68556 2.54814 0.0200421 0.00176557 43772.1 17; : 1134 | 2.52258 2.47147 0.0200724 0.0017645 43696.9 18; : 1135 | 2.54757 2.67188 0.0200351 0.00176104 43778 19; : 1136 | 2.63764 2.78828 0.0200363 0.0017639 43781.8 20; : 1137 Minimum Test error found - save the configuration ; : 1137 | 2.5743 2.19951 0.0201074 0.00183887 43791.1 0; : 1138 | 2.48438 2.23196 0.0200456 0.00175699 43743.1 1; : 1139 | 2.50812 2.26597 0.0200665 0.00175755 43694.4 2; : 1140 | 2.3988 2.24899 0.0200386 0.00175805 43762.4 3; : 1141 | 2.7672 3.06409 0.0200539 0.00176427 43740.6 4; : 1142 | 2.49905 2.42566 0.0200843 0.00176461 43669 5; : 1143 | 2.42701 2.41776 0.0200668 0.00178464 43758.5 6; : 1144 | 2.26582 2.24235 0.0200333 0.00176428 43790 7; : 1145 | 2.32819 2.25052 0.0200451 0.00176354 43759.9 8; : 1146 | 2.38829 2.61112 0.0201128 0.00176481 43601.4 9; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2.28835 2.14929 0.0200647 0.00175706 43697.6 6; : 1154 Minimum Test error found - save the configuration ; : 1154 | 2.32858 2.0616 0.0201066 0.00182104 43750.5 0; : 1155 | 2.28245 2.19923 0.0201625 0.00180627 43581.8 1; : 1156 | 2.38727 2.77806 0.0202008 0.00175311 43365.8 2; : 1157 | 2.61021 2.4986 0.0209687 0.00176336 41655.1 3; : 1158 | 2.53941 2.59597 0.020405 0.00180555 43012.1 4; : 1159 | 2.53249 2.63389 0.0200503 0.0017649 43750.8 5; : 1160 | 2.39348 2.24444 0.0200488 0.00176513 43755 6; : 1161 | 2.30038 2.13197 0.0204918 0.00181558 42835.3 7; : 1162 Minimum Test error found - save the configuration ; : 1162 |,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:122646,config,configuration,122646,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:13395,config,config,13395,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,9,['config'],"['config', 'configuration']"
Modifiability,"4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:17032,config,config,17032,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,138,['config'],"['config', 'configuration']"
Modifiability,"4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double,allocator<double> > > Cache Manager class generic objects; RooCachedPdf P.d.f class that wraps another p.d.f and caches its output ; RooCachedReal P.d.f class that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:31078,variab,variable,31078,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['variab'],['variable']
Modifiability,"4PdfBinding<double,double,double,double,double> RooAbsReal binding to external C functions; RooCFunction4PdfBinding<double,double,double,double,int> RooAbsReal binding to external C functions; RooCFunction4Ref<double,double,double,double,bool> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,double> Persistable reference to C function pointer; RooCFunction4Ref<double,double,double,double,int> Persistable reference to C function pointer; RooCacheManager<RooAbsCacheElement> Cache Manager class generic objects; RooCacheManager<vector<double,allocator<double> > > Cache Manager class generic objects; RooCachedPdf P.d.f class that wraps another p.d.f and caches its output ; RooCachedReal P.d.f class that wraps another p.d.f and caches its output ; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit ; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory ; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve for use in RooPlots; RooCustomizer Editing tool for R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:30967,variab,variable,30967,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,1,['variab'],['variable']
Modifiability,"4T<double>& v); TEveVector4T<double>&operator=(const TEveVector4T<double>&); doubleTEveVectorT<double>::operator[](Int_t idx) const; double&TEveVectorT<double>::operator[](Int_t idx); TEveVectorT<double>TEveVectorT<double>::Orthogonal() const; voidTEveVectorT<double>::OrthoNormBase(TEveVectorT<double>& a, TEveVectorT<double>& b) const; doubleTEveVectorT<double>::Perp() const; doubleTEveVectorT<double>::Perp2() const; doubleTEveVectorT<double>::Phi() const; doubleTEveVectorT<double>::R() const; voidTEveVectorT<double>::Set(const Float_t* v); voidTEveVectorT<double>::Set(const Double_t* v); voidTEveVectorT<double>::Set(const TVector3& v); voidTEveVectorT<double>::Set(double x, double y, double z); voidShowMembers(TMemberInspector&); doubleTEveVectorT<double>::SquareDistance(const TEveVectorT<double>& b) const; voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TEveVectorT<double>&TEveVectorT<double>::Sub(const TEveVectorT<double>& a, const TEveVectorT<double>& b); doubleTEveVectorT<double>::Theta() const. Data Members; public:. doublefT; doubleTEveVectorT<double>::fX; doubleTEveVectorT<double>::fY; doubleTEveVectorT<double>::fZComponents of the vector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; template<typename TT> void TEveVector4T<TT> Dump() const; Dump to stdout as ""(x, y, z; t)\n"". TEveVectorT& operator*=(double s); { fX *= s; fY *= s; fZ *= s; return *this; }. TEveVectorT& operator+=(const TEveVector4T<double>& v); { fX += v.fX; fY += v.fY; fZ += v.fZ; return *this; }. TEveVectorT& operator-=(const TEveVector4T<double>& v); { fX -= v.fX; fY -= v.fY; fZ -= v.fZ; return *this; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveVector4T_double_.html:2964,Inherit,Inheritance,2964,root/html534/TEveVector4T_double_.html,https://root.cern,https://root.cern/root/html534/TEveVector4T_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"4Used to switch between different type of interpretations of the data (64 bits) ;  ►Nwriter;  Cwriter;  C_root_std_complex;  C_Ulp_ExponentVector;  C_Ulp_ExponentVector< Vc::sfloat_v >;  C_UnitTest_Compare;  C_UnitTest_Failure;  C_UnitTest_Global_Object;  C_x3d_data_;  C_x3d_sizeof_;  CADD_PASS;  CAnyCollectionProxy;  CAnyCollectionStreamer;  CApplicationWindowMain Qt&Root Application Window: ;  ►CBaker;  COptions;  CBalancerInfo;  CBaseSelectionRule;  Cbasic_string_view;  ►CBidirMMapPipeBidirMMapPipe creates a bidirectional channel between the current process and a child it forks ;  CPollEntryFor poll() interface ;  CBinaryOpPolicy;  CBinomialNeymanInterval;  CBinomialProbHelper;  CClassSelectionRule;  CClusterD;  CColorStruct_t;  CCompareAsc;  CcompareBAasc;  CcompareBAdesc;  CCompareDesc;  CContDistFree functions adapter needed by UNURAN for onedimensional continuous distributions ;  CContextSmall helper to keep current directory context ;  CCpuInfo_t;  CDiscrDistFree functions adapter needed by UNURAN for one-dimensional discrete distribution ;  Cdrr_func_cache;  Cdrr_func_entry;  CDUMMY;  CEditor;  CEvent_t;  CExceptionContext_t;  CexponentToDivisor;  CexponentToDivisor< 1, center >;  CexponentToDivisor< 1024, center >;  CexponentToDivisor< 128, center >;  CexponentToDivisor< 256, center >;  CexponentToDivisor< 384, center >;  CexponentToDivisor< 512, center >;  CexponentToDivisor< 640, center >;  CexponentToDivisor< 768, center >;  CexponentToDivisor< 896, center >;  CexponentToDivisor< center, center >;  CexponentToMultiplier;  CexponentToMultiplier< -1, center >;  CexponentToMultiplier< -128, center >;  CexponentToMultiplier< -256, center >;  CexponentToMultiplier< -384, center >;  CexponentToMultiplier< -512, center >;  CexponentToMultiplier< -640, center >;  CexponentToMultiplier< -768, center >;  CexponentToMultiplier< -896, center >;  CexponentToMultiplier< center, center >;  CexponentToMultiplier<-1024, center >;  CFeldmanCousinsBinomialInterval;  CFeld",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:76864,adapt,adapter,76864,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['adapt'],['adapter']
Modifiability,"4_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetInputList (TList *input);  ; virtual void SetObject (TObject *obj);  ; virtual void SetOption (const char *option);  ; virtual void SetStatus (Long64_t status);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDraw.html:2677,inherit,inherited,2677,doc/master/classTProofDraw.html,https://root.cern,https://root.cern/doc/master/classTProofDraw.html,10,['inherit'],['inherited']
Modifiability,"5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMdiWinResizer; void DrawBox (Int_t x, Int_t y, UInt_t width, UInt_t height);  Draw resize box (rectangle). ;  ; void MoveResizeIt ();  Move (resize) parent MDI window. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Prot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiCornerWinResizer.html:24038,inherit,inherited,24038,doc/master/classTGMdiCornerWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiCornerWinResizer.html,9,['inherit'],['inherited']
Modifiability,"5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGDoubleSlider; static void FixBounds (Double_t &min, Double_t &max);  Avoid boundaries to be equal. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleHSlider.html:30243,inherit,inherited,30243,doc/master/classTGDoubleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleHSlider.html,12,['inherit'],['inherited']
Modifiability,"5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGPopupMenu; static FontStruct_t GetDefaultFontStruct ();  Return the default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetDefaultSelectedBackgroundGC ();  Return the selection background graphics context in use. ;  ; static const TGGC & GetDefaultSelectedGC ();  Return the selection graphics context in use. ;  ; static FontStruct_t GetHilightFontStruct ();  Return the font structure in use for highlighted menu entries. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:30571,inherit,inherited,30571,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,3,['inherit'],['inherited']
Modifiability,5 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75766,config,configuration,75766,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80578,config,configuration,80578,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82783,config,configuration,82783,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"5 ; 766 return extra;; 767}; 768 ; 769////////////////////////////////////////////////////////////////////////////////; 770/// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); 771/// of this PDF for the given number of observed events.; 772///; 773/// This function is a wrapper around; 774/// RooAbsPdf::extendedTerm(double, RooArgSet const *, double, bool) const,; 775/// where the number of observed events and observables to be used as the; 776/// normalization set for the pdf is extracted from a RooAbsData.; 777///; 778/// For successful operation, the PDF implementation must indicate that; 779/// it is extendable by overloading `canBeExtended()`, and must; 780/// implement the `expectedEvents()` function.; 781///; 782/// \param[in] data The RooAbsData to retrieve the set of observables and; 783/// number of expected events.; 784/// \param[in] weightSquared If set to `true`, the extended term will be scaled by; 785/// the ratio of squared event weights over event weights:; 786/// \f$ \sum w_{i}^2 / \sum w_{i} \f$.; 787/// Intended to be used by fits with the `SumW2Error()` option that; 788/// can be passed to RooAbsPdf::fitTo(); 789/// (see the documentation of said function to learn more about the; 790/// interpretation of fits with squared weights).; 791/// \param[in] doOffset See RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const.; 792 ; 793double RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset) const {; 794 double sumW = data.sumEntries();; 795 double sumW2 = 0.0;; 796 if (weightSquared) {; 797 sumW2 = data.sumEntriesW2();; 798 }; 799 return extendedTerm(sumW, data.get(), sumW2, doOffset);; 800}; 801 ; 802 ; 803/** @fn RooAbsPdf::createNLL(); 804 *; 805 * @brief Construct representation of -log(L) of PDF with given dataset.; 806 *; 807 * If dataset is unbinned, an unbinned likelihood is constructed.; 808 * If the dataset is binned, a binned lik",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:31279,extend,extended,31279,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"5 opt = """";; 656 }; 657 if (leg) {; 658 TContext ctxt(this, kTRUE);; 659 leg->Draw();; 660 } else {; 661 Info(""BuildLegend"", ""No object(s) to build a TLegend."");; 662 }; 663 return leg;; 664}; 665 ; 666////////////////////////////////////////////////////////////////////////////////; 667/// Set Current pad.; 668///; 669/// When a canvas/pad is divided via TPad::Divide, one can directly; 670/// set the current path to one of the subdivisions.; 671/// See TPad::Divide for the convention to number sub-pads.; 672///; 673/// Returns the new current pad, or 0 in case of failure.; 674///; 675/// For example:; 676/// ~~~ {.cpp}; 677/// c1.Divide(2,3); // create 6 pads (2 divisions along x, 3 along y).; 678/// ~~~; 679/// To set the current pad to the bottom right pad, do; 680/// ~~~ {.cpp}; 681/// c1.cd(6);; 682/// ~~~; 683/// Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad; 684/// to c1 itself.; 685///; 686/// Note2: after a statement like c1.cd(6), the global variable gPad; 687/// points to the current pad. One can use gPad to set attributes; 688/// of the current pad.; 689///; 690/// Note3: One can get a pointer to one of the sub-pads of pad with:; 691/// TPad *subpad = (TPad*)pad->GetPad(subpadnumber);; 692 ; 693TVirtualPad *TPad::cd(Int_t subpadnumber); 694{; 695 if (!subpadnumber) {; 696 gPad = this;; 697 if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; 698 if (!fPrimitives) fPrimitives = new TList;; 699 return gPad;; 700 }; 701 ; 702 if (!fPrimitives) fPrimitives = new TList;; 703 TIter next(fPrimitives);; 704 while (auto obj = next()) {; 705 if (obj->InheritsFrom(TPad::Class())) {; 706 Int_t n = ((TPad*)obj)->GetNumber();; 707 if (n == subpadnumber) {; 708 return ((TPad*)obj)->cd();; 709 }; 710 }; 711 }; 712 return nullptr;; 713}; 714 ; 715////////////////////////////////////////////////////////////////////////////////; 716/// Delete all pad primitives.; 717///; 718/// If the bit kClearAfterCR has been set for this pad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:21229,variab,variable,21229,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['variab'],['variable']
Modifiability,"5#endif; 16226 return ret;; 16227}; 16228#else; 16229static long; 16230ssl_get_protocol(int version_id); 16231{; 16232 unsigned long ret = (unsigned long)SSL_OP_ALL;; 16233 if (version_id > 0); 16234 ret |= SSL_OP_NO_SSLv2;; 16235 if (version_id > 1); 16236 ret |= SSL_OP_NO_SSLv3;; 16237 if (version_id > 2); 16238 ret |= SSL_OP_NO_TLSv1;; 16239 if (version_id > 3); 16240 ret |= SSL_OP_NO_TLSv1_1;; 16241 if (version_id > 4); 16242 ret |= SSL_OP_NO_TLSv1_2;; 16243#if defined(SSL_OP_NO_TLSv1_3); 16244 if (version_id > 5); 16245 ret |= SSL_OP_NO_TLSv1_3;; 16246#endif; 16247 return (long)ret;; 16248}; 16249#endif /* OPENSSL_API_1_1 */; 16250 ; 16251 ; 16252/* SSL callback documentation:; 16253 * https://www.openssl.org/docs/man1.1.0/ssl/SSL_set_info_callback.html; 16254 * https://wiki.openssl.org/index.php/Manual:SSL_CTX_set_info_callback(3); 16255 * https://linux.die.net/man/3/ssl_set_info_callback */; 16256/* Note: There is no ""const"" for the first argument in the documentation; 16257 * examples, however some (maybe most, but not all) headers of OpenSSL; 16258 * versions / OpenSSL compatibility layers have it. Having a different; 16259 * definition will cause a warning in C and an error in C++. Use ""const SSL; 16260 * *"", while automatical conversion from ""SSL *"" works for all compilers,; 16261 * but not other way around */; 16262static void; 16263ssl_info_callback(const SSL *ssl, int what, int ret); 16264{; 16265 (void)ret;; 16266 ; 16267 if (what & SSL_CB_HANDSHAKE_START) {; 16268 SSL_get_app_data(ssl);; 16269 }; 16270 if (what & SSL_CB_HANDSHAKE_DONE) {; 16271 /* TODO: check for openSSL 1.1 */; 16272 //#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS 0x0001; 16273 // ssl->s3->flags |= SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS;; 16274 }; 16275}; 16276 ; 16277 ; 16278static int; 16279ssl_servername_callback(SSL *ssl, int *ad, void *arg); 16280{; 16281#if defined(GCC_DIAGNOSTIC); 16282#pragma GCC diagnostic push; 16283#pragma GCC diagnostic ignored ""-Wcast-align""; 16284#endif /* defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:480229,layers,layers,480229,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['layers'],['layers']
Modifiability,"5*gRandom->Rndm());; for (Int_t l=0; l<gstep.nmec; l++) gstep.lmec[l] = l;; if (gstep.gekin < 0.001) newParticle = kTRUE;; if (TMath::Abs(gstep.vect[2]) > 30) newParticle = kTRUE;; }; //save the Tree header. The file will be automatically; // closed when going out of the function scope; t2.Write();; }; 12.15.1.1 Adding a Branch with a Fixed Length Array; At first, we create a tree and create branches for a subset of variables in the C structureGctrak_t. Then we add several types of branches. The first branch reads seven floating-point values beginning at the address of 'gstep.vect'. You do not need to specify &gstep.vect, because in C and C++ the array variable holds the address of the first element.; t2.Branch(""vect"",gstep.vect,""vect[7]/F"");; t2.Branch(""getot"",&gstep.getot,""getot/F"");; t2.Branch(""gekin"",&gstep.gekin,""gekin/F"");; 12.15.1.2 Adding a Branch with a Variable Length Array; The next two branches are dependent on each other. The first holds the length of the variable length array and the second holds the variable length array. The lmec branch reads nmec number of integers beginning at the address gstep.lmec.; t2.Branch(""nmec"",&gstep.nmec,""nmec/I"");; t2.Branch(""lmec"",gstep.lmec,""lmec[nmec]/I"");; The variable nmec is a random number and is reset for each entry.; gstep.nmec = (Int_t)(5*gRandom->Rndm());; 12.15.1.3 Filling the Tree; In this emulation of Geant3, we generate and transport particles in a magnetic field and store the particle parameters at each tracking step in a ROOT tree.; 12.15.2 Analysis; In this analysis, we do not read the entire entry we only read one branch. First, we set the address for the branch to the file dstep, and then we use the TBranch::GetEntry method. Then we fill a histogram with the dstep branch entries, draw it and fit it with a Gaussian. In addition, we draw the particle’s path using the three values in the vector. Here we use the TTree::Draw method. It automatically creates a histogram and plots the 3 expressions (see Trees",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:565546,variab,variable,565546,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,4,['variab'],['variable']
Modifiability,"5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2)). An expanded note on variables and parameters; In a TFormula, a variable is a defined by a name x, y, z or t or an index like x[0], x[1], x[2]; that is x[N] where N is an integer.; TFormula("""", ""x[0] * x[1] + 10""); TFormula::TFormulaTFormula()Definition TFormula.cxx:438; Parameters are similar and can take any name. It is specified using brackets e.g. [expected_mass] or [0].; TFormula("""", ""exp([expected_mass])-1""); Variables and parameters can be combined in the same TFormula. Here we consider a very simple case where we have an exponential decay after some time t and a number of events with timestamps for which we want to evaluate this function.; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);; ; for (auto & event : events) {; tf.Eval(event.t);; }; The distinction between variables and parameters arose from the TFormula's application in fitting. There parameters are fitted to the data provided through variables. In other applications this distinction can go away.; Parameter values can be provided dynamically using TFormula::EvalPar instead of TFormula::Eval. In this way parameters can be used identically to variables. See below for an example that uses only parameters to model a function.; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");; ; tf.EvalPar(nullptr, params);; int. A note on operators; All operators of C/C++ are allowed in a TFormula with a few caveats.; The operators |, &, % can be used but will raise an error if used in conjunction with a variable or a parameter. Variables and parameters are treated as doubles internally for which these operators are not defined. This means the following command will run successfully -l -q -e TFormula("""", ""x+(10%3)"").Eval(0); but not -l -q -e TFormula("""", ""x%10"").Eval(0); .; The operator ^ is defined to mean exponentiation instead of the C/C++ interpretation xor.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:6804,variab,variables,6804,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"5->35]; lname; Number of bytes in the class name. 28 -> … [36->..; .] | ClassName; | Object Class Name. … -> …; | lname; | Number of bytes in the object name. … -> …; | Name; | lName bytes with the name of the object. … -> …; | lTitle; | Number of bytes in the object title. … -> …; | Title; | Title of the object. … -> …; | DATA; | Data bytes associated to the object. You see a reference to TKey. It is explained in detail in the next section.; 11.1.4 The Class Description List (StreamerInfo List); The histogram records are followed by the StreamerInfo list of class descriptions. The list contains the description of each class that has been written to file.; 20010404/092347 At:5854 N=2390 StreamerInfo CX = 3.41; The class description is recursive, because to fully describe a class, its ancestors and object data members have to be described also. In demo.root, the class description list contains the description for:. TH1F; all classes in the TH1F inheritance tree; all classes of the object data members; all classes in the object data members’ inheritance tree. This description is implemented by the TStreamerInfo class, and is often referred to as simply StreamerInfo. You can print a file’s StreamerInfolist with the TFile::ShowStreamerInfo method. Below is an example of the output. Only the first line of each class description is shown. The demo.root example contains only TH1F objects. Here we see the recursive nature of the class description; it contains the StreamerInfoof all the classes needed to describe TH1F.; root[] f.ShowStreamerInfo(); StreamerInfo for class: TH1F, version=1; BASE TH1 offset=0 type= 0 1-Dim histogram base class; BASE TArrayF offset=0 type= 0 Array of floats. StreamerInfo for class: TH1, version=3; BASE TNamed offset=0 type=67 The basis for named object(name,title); BASE TAttLine offset=0 type=0 Line attributes; BASE TAttFill offset=0 type=0 Fill area attributes; BASE TAttMarker offset=0 type=0 Marker attributes; Int_t fNcells offset=0 type=3 num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:436403,inherit,inheritance,436403,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,4,['inherit'],['inheritance']
Modifiability,5.1 2; : 1030 | 3.28552 3.92634 0.0200717 0.0017618 43692.2 3; : 1031 | 3.09879 3.64842 0.0200603 0.0017557 43704.9 4; : 1032 | 3.23242 4.45782 0.0201318 0.0017893 43614.6 5; : 1033 Minimum Test error found - save the configuration ; : 1033 | 3.57665 3.43738 0.0206178 0.00193324 42816.1 0; : 1034 | 3.26951 3.4755 0.0201231 0.00175901 43563.3 1; : 1035 | 3.0748 4.32816 0.0202002 0.00180771 43496 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904 3.46339 0.0200395 0.00176046 43765.9 10; : 1044 | 3.08383 3.85222 0.0200574 0.0017582 43717.6 11; : 1045 | 3.00904 3.46043 0.0200555 0.00175872 43723.6 12; : 1046 Minimum Test error found - save the configuration ; : 1046 | 2.89922 3.28968 0.0204754 0.00188349 43029.5 0; : 1047 | 3.06628 3.80261 0.0206565 0.00177157 42361.9 1; : 1048 | 3.0482 4.21427 0.0203272 0.00175981 43086.2 2; : 1049 | 3.02565 3.406 0.0200479 0.00175462 43732 3; : 1050 | 3.16008 3.99499 0.0202749 0.00175016 43185.5 4; : 1051 | 3.00714 3.41105 0.0202798 0.00177822 43239.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:116173,config,configuration,116173,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"5/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the median); 2498/// An approximate error for the quantile is computed assuming that the distribution in; 2499/// the other variable is normal. According to this approximate formula the error on the quantile is; 2500/// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; 2501/// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; 2502/// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; 2503/// a normal distribution.; 2504 ; 2505TH1D* TH2::QuantilesX( Double_t prob, const char * name) const; 2506{; 2507 return DoQuantiles(true, name, prob);; 2508}; 2509 ; 2510 ; 2511////////////////////////////////////////////////////////////////////////////////; 2512/// Compute the Y distribution of quantiles in the other variable X; 2513/// name is the name of the returned histogram; 2514/// prob is the probability content for the quantile (0.5 is the default for the median); 2515/// An approximate error for the quantile is computed assuming that the distribution in; 2516/// the other variable is normal.; 2517 ; 2518TH1D* TH2::QuantilesY( Double_t prob, const char * name) const; 2519{; 2520 return DoQuantiles(false, name, prob);; 2521}; 2522 ; 2523 ; 2524////////////////////////////////////////////////////////////////////////////////; 2525/// Implementation of quantiles for x or y; 2526 ; 2527TH1D* TH2::DoQuantiles(bool onX, const char * name, Double_t prob) const; 2528{; 2529 const TAxis *outAxis = nullptr;; 2530 if ( onX ) {; 2531 outAxis = GetXaxis();; 2532 } else {; 2533 outAxis = GetYaxis();; 2534 }; 2535 ; 2536 // build first name of returned histogram; 2537 TString qname = name;; 2538 if (qname.IsNull() || qnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:103308,variab,variable,103308,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"5/// Set offset of the object (to which the data member represented by this; 5586/// branch belongs) inside its containing object (if any).; 5587 ; 5588void TBranchElement::SetOffset(Int_t offset); 5589{; 5590 // We need to make sure that the Read and Write action's configuration; 5591 // properly reflect this value.; 5592 ; 5593 if (offset == TVirtualStreamerInfo::kMissing) {; 5594 SetMissing();; 5595 return;; 5596 }; 5597 ; 5598 if (fReadActionSequence) {; 5599 fReadActionSequence->AddToOffset(offset - fOffset);; 5600 }; 5601 if (fFillActionSequence) {; 5602 fFillActionSequence->AddToOffset(offset - fOffset);; 5603 }; 5604 fOffset = offset;; 5605}; 5606 ; 5607////////////////////////////////////////////////////////////////////////////////; 5608/// Set offset of the object (to which the data member represented by this; 5609/// branch belongs) inside its containing object (if any) to mark it as missing.; 5610 ; 5611void TBranchElement::SetMissing(); 5612{; 5613 // We need to make sure that the Read and Write action's configuration; 5614 // properly reflect this value.; 5615 ; 5616 if (fReadActionSequence) {; 5617 fReadActionSequence->SetMissing();; 5618 }; 5619 if (fFillActionSequence) {; 5620 fFillActionSequence->SetMissing();; 5621 }; 5622 fOffset = TVirtualStreamerInfo::kMissing;; 5623}; 5624 ; 5625 ; 5626////////////////////////////////////////////////////////////////////////////////; 5627/// Set the sequence of actions needed to read the data out of the buffer.; 5628void TBranchElement::SetActionSequence(TClass *originalClass, TStreamerInfo *localInfo, TStreamerInfoActions::TActionSequence::SequenceGetter_t create, TStreamerInfoActions::TActionSequence *&actionSequence); 5629{; 5630 // A 'split' node does not store data itself (it has not associated baskets); 5631 const bool isSplitNode = (fType == 3 || fType == 4 || fType == 2 || fType == 1 || (fType == 0 && fID == -2)) && !fBranches.IsEmpty();; 5632 ; 5633 if (!isSplitNode) {; 5634 fNewIDs.insert(fNewIDs.begi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:208221,config,configuration,208221,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['config'],['configuration']
Modifiability,"50 // Configuration of action handling kBits.; 151 // In this case we need to know both the location; 152 // of the member (fBits) and the start of the object; 153 // (its TObject part to be exact).; 154 ; 155 Int_t fObjectOffset; // Offset of the TObject part within the object; 156 ; 157 TBitsConfiguration(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset = 0) : TConfiguration(info,id,compinfo,offset),fObjectOffset(0) {};; 158 void PrintDebug(TBuffer &, void *) const override; 159 {; 160 TStreamerInfo *info = (TStreamerInfo*)fInfo;; 161 TStreamerElement *aElement = fCompInfo->fElem;; 162 TString sequenceType;; 163 aElement->GetSequenceType(sequenceType);; 164 ; 165 printf(""StreamerInfoAction, class:%s, name=%s, fType[%d]=%d,""; 166 "" %s, offset=%d (%s)\n"",; 167 info->GetClass()->GetName(), aElement->GetName(), fElemId, fCompInfo->fType,; 168 aElement->ClassName(), fOffset, sequenceType.Data());; 169 }; 170 ; 171 void AddToOffset(Int_t delta) override; 172 {; 173 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 174 // TBranchElement in the case of split sub-object.; 175 ; 176 if (fOffset != TVirtualStreamerInfo::kMissing); 177 fOffset += delta;; 178 fObjectOffset = 0;; 179 }; 180 ; 181 void SetMissing() override; 182 {; 183 fOffset = TVirtualStreamerInfo::kMissing;; 184 fObjectOffset = 0;; 185 }; 186 ; 187 TConfiguration *Copy() override { return new TBitsConfiguration(*this); }; 188 ; 189 };; 190 ; 191 Int_t GenericReadAction(TBuffer &buf, void *addr, const TConfiguration *config); 192 {; 193 char *obj = (char*)addr;; 194 TGenericConfiguration *conf = (TGenericConfiguration*)config;; 195 return ((TStreamerInfo*)conf->fInfo)->ReadBuffer(buf, &obj, &(conf->fCompInfo), /*first*/ 0, /*last*/ 1, /*narr*/ 1, config->fOffset, 2);; 196 }; 197 ; 198 Int_t GenericWriteAction(TBuffer &buf, void *addr, const TConfiguration *config); 199 {; 200 char *obj = (char*)addr;; 201 TGenericConfiguration *conf = (TGeneri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:6324,config,configuration,6324,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configuration']
Modifiability,"50 NULL};; 16351#if defined(USE_HTTP2); 16352static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16353 alpn_proto_list + 3,; 16354 alpn_proto_list + 3 + 8,; 16355 NULL};; 16356#endif; 16357 ; 16358static int; 16359alpn_select_cb(SSL *ssl,; 16360 const unsigned char **out,; 16361 unsigned char *outlen,; 16362 const unsigned char *in,; 16363 unsigned int inlen,; 16364 void *arg); 16365{; 16366 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16367 unsigned int i, j, enable_http2 = 0;; 16368 const char **alpn_proto_order = alpn_proto_order_http1;; 16369 ; 16370 struct mg_workerTLS *tls =; 16371 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 16372 ; 16373 (void)ssl;; 16374 ; 16375 if (tls == NULL) {; 16376 /* Need to store protocol in Thread Local Storage */; 16377 /* If there is no Thread Local Storage, don't use ALPN */; 16378 return SSL_TLSEXT_ERR_NOACK;; 16379 }; 16380 ; 16381#if defined(USE_HTTP2); 16382 enable_http2 = (0 == strcmp(dom_ctx->config[ENABLE_HTTP2], ""yes""));; 16383 if (enable_http2) {; 16384 alpn_proto_order = alpn_proto_order_http2;; 16385 }; 16386#endif; 16387 ; 16388 for (j = 0; alpn_proto_order[j] != NULL; j++) {; 16389 /* check all accepted protocols in this order */; 16390 const char *alpn_proto = alpn_proto_order[j];; 16391 /* search input for matching protocol */; 16392 for (i = 0; i < inlen; i++) {; 16393 if (!memcmp(in + i, alpn_proto, (unsigned char)alpn_proto[0])) {; 16394 *out = in + i + 1;; 16395 *outlen = in[i];; 16396 tls->alpn_proto = alpn_proto;; 16397 return SSL_TLSEXT_ERR_OK;; 16398 }; 16399 }; 16400 }; 16401 ; 16402 /* Nothing found */; 16403 return SSL_TLSEXT_ERR_NOACK;; 16404}; 16405 ; 16406 ; 16407static int; 16408next_protos_advertised_cb(SSL *ssl,; 16409 const unsigned char **data,; 16410 unsigned int *len,; 16411 void *arg); 16412{; 16413 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16414 *data = (const unsigned char *)alpn_proto_list;; 16415 *len = (unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:484475,config,config,484475,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,50.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82444,config,configuration,82444,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"50130 124559; TDecayChannel Class describing a particle decay channel; TDecompBK Matrix Decomposition Bunch-Kaufman; TDecompBase Matrix Decomposition Base; TDecompChol Matrix Decompositition Cholesky; TDecompLU Matrix Decompositition LU; TDecompQRH Matrix Decompositition QRH; TDecompSVD Matrix Decompositition SVD; TDecompSparse Matrix Decompositition LU; TDialogCanvas A specialized canvas to set attributes.; TDiamond Diamond class; TDictionary ABC defining interface to dictionary; TDirectory Describe directory structure in memory; TDirectoryFile Describe directory structure in a ROOT file; TDocDirective THtml directive handler; TDocHtmlDirective Handler for ""Begin_Html""/""End_Html"" for raw HTML in documentation comments; TDocLatexDirective Handler for ""Begin_Latex""/""End_Latex"" to generate an image from latex; TDocMacroDirective Handler for ""Begin_Macro""/""End_Macro"" for code that is executed and that can generate an image for documentation; TDocOutput generates documentation web pages; TDocParser parser for reference documentation; TDrawFeedback Present PROOF query feedback; TELTU ELTU shape; TEditQueryFrame Edit query frame; TEfficiency calculating efficiencies; TEllipse An ellipse; TEmulatedCollectionProxy ; TEmulatedMapProxy ; TEntryList A list of entries in a TTree; TEntryListBlock Used internally in TEntryList to store the entry numbers; TEntryListFromFile Manager for entry lists from different files; TEnv Handle ROOT configuration resources; TEnvRec Individual TEnv records; TEve3DProjection 3D scaling ""projection""; TEveArrow Class for gl visualisation of arrow.; TEveArrowEditor GUI editor for TEveArrow.; TEveArrowGL GL renderer class for TEveArrow.; TEveBox 3D box with arbitrary vertices.; TEveBoxGL GL renderer class for TEveBox.; TEveBoxProjected Projection of TEveBox.; TEveBoxProjectedGL GL renderer class for TEveBoxProjected.; TEveBoxSet Collection of 3D primitives (fixed-size boxes, boxes of different sizes, or arbitrary sexto-epipeds); each primitive can be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:56793,config,configuration,56793,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,2,['config'],['configuration']
Modifiability,"5061-MS. N is binomially distributed between 0 and ntot inclusive; with mean prob*ntot and prob is between 0 and 1. Note: This function should not be used when ntot is large (say >100).; The normal approximation is then recommended instead; (with mean =*ntot+0.5 and standard deviation sqrt(ntot*prob*(1-prob)). Double_t BreitWigner(Double_t mean = 0, Double_t gamma = 1); Return a number distributed following a BreitWigner function with mean and gamma. void Circle(Double_t& x, Double_t& y, Double_t r); Generates random vectors, uniformly distributed over a circle of given radius.; Input : r = circle radius; Output: x,y a random 2-d vector of length r. Double_t Exp(Double_t tau); Returns an exponential deviate. exp( -t/tau ). Double_t Gaus(Double_t mean = 0, Double_t sigma = 1); Samples a random number from the standard Normal (Gaussian) Distribution; with the given mean and sigma.; Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger; This is one of the fastest existing method for generating normal random variables.; It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous; version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia); implemented for example in GSL and available in the MathMore library. REFERENCE: - W. Hoermann and G. Derflinger (1990):; The ACR Method for generating normal random variables,; OR Spektrum 12 (1990), 181-185. Implementation taken from; UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien. UInt_t Integer(UInt_t imax); Returns a random integer on [ 0, imax-1 ]. Double_t Landau(Double_t mean = 0, Double_t sigma = 1); Generate a random number following a Landau distribution; with location parameter mu and scale parameter sigma:; Landau( (x-mu)/sigma ); Note that mu is not the mpv(most probable value) of the Landa distribution; and sigma is not the standard deviation of the distribution which is not defined.; For mu =0 and sigma=1, the mpv = -0.22278.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRandom.html:12500,variab,variables,12500,root/html534/TRandom.html,https://root.cern,https://root.cern/root/html534/TRandom.html,6,['variab'],['variables']
Modifiability,"51 NULL};; 16352#if defined(USE_HTTP2); 16353static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16354 alpn_proto_list + 3,; 16355 alpn_proto_list + 3 + 8,; 16356 NULL};; 16357#endif; 16358 ; 16359static int; 16360alpn_select_cb(SSL *ssl,; 16361 const unsigned char **out,; 16362 unsigned char *outlen,; 16363 const unsigned char *in,; 16364 unsigned int inlen,; 16365 void *arg); 16366{; 16367 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16368 unsigned int i, j, enable_http2 = 0;; 16369 const char **alpn_proto_order = alpn_proto_order_http1;; 16370 ; 16371 struct mg_workerTLS *tls =; 16372 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 16373 ; 16374 (void)ssl;; 16375 ; 16376 if (tls == NULL) {; 16377 /* Need to store protocol in Thread Local Storage */; 16378 /* If there is no Thread Local Storage, don't use ALPN */; 16379 return SSL_TLSEXT_ERR_NOACK;; 16380 }; 16381 ; 16382#if defined(USE_HTTP2); 16383 enable_http2 = (0 == strcmp(dom_ctx->config[ENABLE_HTTP2], ""yes""));; 16384 if (enable_http2) {; 16385 alpn_proto_order = alpn_proto_order_http2;; 16386 }; 16387#endif; 16388 ; 16389 for (j = 0; alpn_proto_order[j] != NULL; j++) {; 16390 /* check all accepted protocols in this order */; 16391 const char *alpn_proto = alpn_proto_order[j];; 16392 /* search input for matching protocol */; 16393 for (i = 0; i < inlen; i++) {; 16394 if (!memcmp(in + i, alpn_proto, (unsigned char)alpn_proto[0])) {; 16395 *out = in + i + 1;; 16396 *outlen = in[i];; 16397 tls->alpn_proto = alpn_proto;; 16398 return SSL_TLSEXT_ERR_OK;; 16399 }; 16400 }; 16401 }; 16402 ; 16403 /* Nothing found */; 16404 return SSL_TLSEXT_ERR_NOACK;; 16405}; 16406 ; 16407 ; 16408static int; 16409next_protos_advertised_cb(SSL *ssl,; 16410 const unsigned char **data,; 16411 unsigned int *len,; 16412 void *arg); 16413{; 16414 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16415 *data = (const unsigned char *)alpn_proto_list;; 16416 *len = (unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:484508,config,config,484508,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"510 TFormula *old = nullptr;; 511 R__LOCKGUARD(gROOTMutex);; 512 old = dynamic_cast<TFormula *>(gROOT->GetListOfFunctions()->FindObject(name));; 513 if (old); 514 gROOT->GetListOfFunctions()->Remove(old);; 515 if (IsReservedName(name)); 516 Error(""TFormula"", ""The name %s is reserved as a TFormula variable name.\n"", name);; 517 else; 518 gROOT->GetListOfFunctions()->Add(this);; 519 }; 520 SetBit(kNotGlobal,!addToGlobList);; 521 }; 522 }; 523}; 524 ; 525////////////////////////////////////////////////////////////////////////////////; 526/// Constructor from a full compile-able C++ expression; 527 ; 528TFormula::TFormula(const char *name, const char *formula, int ndim, int npar, bool addToGlobList) :; 529 TNamed(name,formula),; 530 fClingInput(formula),fFormula(formula); 531{; 532 fReadyToExecute = false;; 533 fClingInitialized = false;; 534 fNpar = 0;; 535 fNumber = 0;; 536 fLambdaPtr = nullptr;; 537 fFuncPtr = nullptr;; 538 fGradFuncPtr = nullptr;; 539 fHessFuncPtr = nullptr;; 540 ; 541 ; 542 fNdim = ndim;; 543 for (int i = 0; i < npar; ++i) {; 544 DoAddParameter(TString::Format(""p%d"",i), 0, false);; 545 }; 546 fAllParametersSetted = true;; 547 assert (fNpar == npar);; 548 ; 549 bool ret = InitLambdaExpression(formula);; 550 ; 551 if (ret) {; 552 ; 553 SetBit(TFormula::kLambda);; 554 ; 555 fReadyToExecute = true;; 556 ; 557 if (addToGlobList && gROOT) {; 558 TFormula *old = nullptr;; 559 R__LOCKGUARD(gROOTMutex);; 560 old = dynamic_cast<TFormula*> ( gROOT->GetListOfFunctions()->FindObject(name) );; 561 if (old); 562 gROOT->GetListOfFunctions()->Remove(old);; 563 if (IsReservedName(name)); 564 Error(""TFormula"",""The name %s is reserved as a TFormula variable name.\n"",name);; 565 else; 566 gROOT->GetListOfFunctions()->Add(this);; 567 }; 568 SetBit(kNotGlobal,!addToGlobList);; 569 }; 570 else; 571 Error(""TFormula"",""Syntax error in building the lambda expression %s"", formula );; 572}; 573 ; 574////////////////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:21067,variab,variable,21067,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"513 path.Form(""%s/BUILD.sh"", proofinf);; 3514#ifdef R__WINGCC; 3515 FILE *f = fopen(path.Data(), ""wb"");; 3516#else; 3517 FILE *f = fopen(path.Data(), ""w"");; 3518#endif; 3519 if (!f) {; 3520 Error(""MakeProjectParProofInf"", ""cannot create file '%s' (errno: %d)"",; 3521 path.Data(), TSystem::GetErrno());; 3522 return -1;; 3523 }; 3524 ; 3525 fprintf(f, ""#! /bin/sh\n"");; 3526 fprintf(f, ""# Build libEvent library.\n"");; 3527 fprintf(f, ""\n"");; 3528 fprintf(f, ""#\n"");; 3529 fprintf(f, ""# The environment variables ROOTPROOFLITE and ROOTPROOFCLIENT can be used to\n"");; 3530 fprintf(f, ""# adapt the script to the calling environment\n"");; 3531 fprintf(f, ""#\n"");; 3532 fprintf(f, ""# if test ! \""x$ROOTPROOFLITE\"" = \""x\""; then\n"");; 3533 fprintf(f, ""# echo \""event-BUILD: PROOF-Lite node (session has $ROOTPROOFLITE workers)\""\n"");; 3534 fprintf(f, ""# elif test ! \""x$ROOTPROOFCLIENT\"" = \""x\""; then\n"");; 3535 fprintf(f, ""# echo \""event-BUILD: PROOF client\""\n"");; 3536 fprintf(f, ""# else\n"");; 3537 fprintf(f, ""# echo \""event-BUILD: standard PROOF node\""\n"");; 3538 fprintf(f, ""# fi\n"");; 3539 fprintf(f, ""\n"");; 3540 fprintf(f, ""if [ \""\"" = \""clean\"" ]; then\n"");; 3541 fprintf(f, "" make distclean\n"");; 3542 fprintf(f, "" exit 0\n"");; 3543 fprintf(f, ""fi\n"");; 3544 fprintf(f, ""\n"");; 3545 fprintf(f, ""make\n"");; 3546 fprintf(f, ""rc=$?\n"");; 3547 fprintf(f, ""echo \""rc=$?\""\n"");; 3548 fprintf(f, ""if [ $? != \""0\"" ] ; then\n"");; 3549 fprintf(f, "" exit 1\n"");; 3550 fprintf(f, ""fi\n"");; 3551 fprintf(f, ""exit 0\n"");; 3552 ; 3553 // Close the file; 3554 fclose(f);; 3555 ; 3556 // Then SETUP.C; 3557 path.Form(""%s/SETUP.C"", proofinf);; 3558#ifdef R__WINGCC; 3559 f = fopen(path.Data(), ""wb"");; 3560#else; 3561 f = fopen(path.Data(), ""w"");; 3562#endif; 3563 if (!f) {; 3564 Error(""MakeProjectParProofInf"", ""cannot create file '%s' (errno: %d)"",; 3565 path.Data(), TSystem::GetErrno());; 3566 return -1;; 3567 }; 3568 ; 3569 fprintf(f, ""Int_t SETUP()\n"");; 3570 fprintf(f, ""{\n"");; 3571 fprintf(f, ""\n"");;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:128130,variab,variables,128130,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,2,"['adapt', 'variab']","['adapt', 'variables']"
Modifiability,"53 if (f && fun.GetNargs() <= f->GetNargs() && fun.GetNargs() >= f->GetNargs() - f->GetNargsOpt()) {; 2154 fun.fFound = true;; 2155 }; 2156 }; 2157 ; 2158 if (!fun.fFound) {; 2159 // ignore not found functions; 2160 if (gDebug); 2161 Info(""TFormula"", ""Could not find %s function with %d argument(s)"", fun.GetName(), fun.GetNargs());; 2162 fun.fFound = false;; 2163 }; 2164#endif; 2165 } else {; 2166 TFormula *old = nullptr;; 2167 {; 2168 R__LOCKGUARD(gROOTMutex);; 2169 old = (TFormula *)gROOT->GetListOfFunctions()->FindObject(gNamePrefix + fun.fName);; 2170 }; 2171 if (old) {; 2172 // we should not go here (this analysis is done before in ExtractFunctors); 2173 assert(false);; 2174 fun.fFound = true;; 2175 TString pattern = TString::Format(""{%s}"", fun.GetName());; 2176 TString replacement = old->GetExpFormula();; 2177 PreProcessFormula(replacement);; 2178 ExtractFunctors(replacement);; 2179 formula.ReplaceAll(pattern, replacement);; 2180 continue;; 2181 }; 2182 // looking for default variables defined in fVars; 2183 ; 2184 map<TString, TFormulaVariable>::iterator varsIt = fVars.find(fun.GetName());; 2185 if (varsIt != fVars.end()) {; 2186 ; 2187 TString name = (*varsIt).second.GetName();; 2188 Double_t value = (*varsIt).second.fValue;; 2189 ; 2190 AddVariable(name, value); // this set the cling variable; 2191 if (!fVars[name].fFound) {; 2192 ; 2193 fVars[name].fFound = true;; 2194 int varDim = (*varsIt).second.fArrayPos; // variable dimensions (0 for x, 1 for y, 2, for z); 2195 if (varDim >= fNdim) {; 2196 fNdim = varDim + 1;; 2197 ; 2198 // we need to be sure that all other variables are added with position less; 2199 for (auto &v : fVars) {; 2200 if (v.second.fArrayPos < varDim && !v.second.fFound) {; 2201 AddVariable(v.first, v.second.fValue);; 2202 v.second.fFound = true;; 2203 }; 2204 }; 2205 }; 2206 }; 2207 // remove the ""{.. }"" added around the variable; 2208 TString pattern = TString::Format(""{%s}"", name.Data());; 2209 TString replacement = TString::Format(""x[%d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:83462,variab,variables,83462,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"53 of file Minimizer.cxx. ◆ SetVariableValues(). virtual bool ROOT::Math::Minimizer::SetVariableValues ; (; const double * ; x). inlinevirtual . set the values of all existing variables (array must be dimensioned to the size of the existing parameters) ; Reimplemented in ROOT::Minuit2::Minuit2Minimizer, and ROOT::Math::BasicMinimizer.; Definition at line 187 of file Minimizer.h. ◆ Status(). int ROOT::Math::Minimizer::Status ; (; ); const. inline . status code of minimizer ; Definition at line 310 of file Minimizer.h. ◆ Strategy(). int ROOT::Math::Minimizer::Strategy ; (; ); const. inline . strategy ; Definition at line 307 of file Minimizer.h. ◆ Tolerance(). double ROOT::Math::Minimizer::Tolerance ; (; ); const. inline . absolute tolerance ; Definition at line 300 of file Minimizer.h. ◆ VariableIndex(). int ROOT::Math::Minimizer::VariableIndex ; (; const std::string & ; name); const. virtual . get index of variable given a variable given a name return -1 if variable is not found ; Reimplemented in ROOT::Math::BasicMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 232 of file Minimizer.cxx. ◆ VariableName(). std::string ROOT::Math::Minimizer::VariableName ; (; unsigned int ; ivar); const. virtual . get name of variables (override if minimizer support storing of variable names) return an empty string if variable is not found ; Reimplemented in ROOT::Math::BasicMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 224 of file Minimizer.cxx. ◆ X(). virtual const double * ROOT::Math::Minimizer::X ; (; ); const. pure virtual . return pointer to X values at the minimum ; Implemented in TFumiliMinimizer, ROOT::Math::GeneticMinimizer, ROOT::Math::BasicMinimizer, TLinearMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer. Member Data Documentation. ◆ fOptions. MinimizerOptions ROOT::Math::Minimizer::fOptions. protected . minimizer options ; Definition at line 370 of file Minimizer.h. ◆ fStatus. in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:35622,variab,variable,35622,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,3,['variab'],['variable']
Modifiability,"53/// Have histograms fixed bins along each axis?; 3154 ; 3155void TEfficiency::SavePrimitive(std::ostream& out,Option_t* opt); 3156{; 3157 Bool_t equi_bins = true;; 3158 ; 3159 //indentation; 3160 TString indent = "" "";; 3161 //names for arrays containing the bin edges; 3162 //static counter needed if more objects are saved; 3163 static Int_t naxis = 0;; 3164 TString sxaxis=""xAxis"",syaxis=""yAxis"",szaxis=""zAxis"";; 3165 ; 3166 //note the missing break statements!; 3167 switch(GetDimension()) {; 3168 case 3:; 3169 equi_bins = equi_bins && !fTotalHistogram->GetZaxis()->GetXbins()->fArray; 3170 && !fTotalHistogram->GetZaxis()->GetXbins()->fN;; 3171 case 2:; 3172 equi_bins = equi_bins && !fTotalHistogram->GetYaxis()->GetXbins()->fArray; 3173 && !fTotalHistogram->GetYaxis()->GetXbins()->fN;; 3174 case 1:; 3175 equi_bins = equi_bins && !fTotalHistogram->GetXaxis()->GetXbins()->fArray; 3176 && !fTotalHistogram->GetXaxis()->GetXbins()->fN;; 3177 }; 3178 ; 3179 //create arrays containing the variable binning; 3180 if(!equi_bins) {; 3181 Int_t i;; 3182 ++naxis;; 3183 sxaxis += naxis;; 3184 syaxis += naxis;; 3185 szaxis += naxis;; 3186 //x axis; 3187 out << indent << ""Double_t "" << sxaxis << ""[""; 3188 << fTotalHistogram->GetXaxis()->GetXbins()->fN << ""] = {"";; 3189 for (i = 0; i < fTotalHistogram->GetXaxis()->GetXbins()->fN; ++i) {; 3190 if (i != 0) out << "", "";; 3191 out << fTotalHistogram->GetXaxis()->GetXbins()->fArray[i];; 3192 }; 3193 out << ""}; "" << std::endl;; 3194 //y axis; 3195 if(GetDimension() > 1) {; 3196 out << indent << ""Double_t "" << syaxis << ""[""; 3197 << fTotalHistogram->GetYaxis()->GetXbins()->fN << ""] = {"";; 3198 for (i = 0; i < fTotalHistogram->GetYaxis()->GetXbins()->fN; ++i) {; 3199 if (i != 0) out << "", "";; 3200 out << fTotalHistogram->GetYaxis()->GetXbins()->fArray[i];; 3201 }; 3202 out << ""}; "" << std::endl;; 3203 }; 3204 //z axis; 3205 if(GetDimension() > 2) {; 3206 out << indent << ""Double_t "" << szaxis << ""[""; 3207 << fTotalHistogram->GetZaxis()->GetXb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:125774,variab,variable,125774,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,5563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.7,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:99603,config,configuration,99603,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"56 // detected already before).; 1957 return 0;; 1958 }; 1959 cla = R__GetClassIfKnown(className);; 1960 }; 1961 ; 1962 if (!cla) {; 1963 return 0;; 1964 }; 1965 ; 1966 // cla is valid, check wether it's actually in the header of the same name:; 1967 if (cla->GetDeclFileLine() <= 0) return 0; // to a void an error with VisualC++; 1968 TString decfile = gSystem->BaseName(cla->GetDeclFileName());; 1969 if (decfile != gSystem->BaseName(fname)) {; 1970 return 0;; 1971 }; 1972 return 1;; 1973}; 1974 ; 1975////////////////////////////////////////////////////////////////////////////////; 1976/// Initialize operating system interface.; 1977 ; 1978void TROOT::InitSystem(); 1979{; 1980 if (gSystem == nullptr) {; 1981#if defined(R__UNIX); 1982#if defined(R__HAS_COCOA); 1983 gSystem = new TMacOSXSystem;; 1984#else; 1985 gSystem = new TUnixSystem;; 1986#endif; 1987#elif defined(R__WIN32); 1988 gSystem = new TWinNTSystem;; 1989#else; 1990 gSystem = new TSystem;; 1991#endif; 1992 ; 1993 if (gSystem->Init()); 1994 fprintf(stderr, ""Fatal in <TROOT::InitSystem>: can't init operating system layer\n"");; 1995 ; 1996 if (!gSystem->HomeDirectory()) {; 1997 fprintf(stderr, ""Fatal in <TROOT::InitSystem>: HOME directory not set\n"");; 1998 fprintf(stderr, ""Fix this by defining the HOME shell variable\n"");; 1999 }; 2000 ; 2001 // read default files; 2002 gEnv = new TEnv("".rootrc"");; 2003 ; 2004 ROOT::Internal::SetErrorSystemMsgHandler([](){ return gSystem->GetError(); });; 2005 SetErrorHandler(DefaultErrorHandler);; 2006 ; 2007 gDebug = gEnv->GetValue(""Root.Debug"", 0);; 2008 ; 2009 if (!gEnv->GetValue(""Root.ErrorHandlers"", 1)); 2010 gSystem->ResetSignals();; 2011 ; 2012 // The old ""Root.ZipMode"" had a discrepancy between documentation vs actual meaning.; 2013 // Also, a value with the meaning ""default"" wasn't available. To solved this,; 2014 // ""Root.ZipMode"" was replaced by ""Root.CompressionAlgorithm"". Warn about usage of; 2015 // the old value, if it's set to 0, but silently translate the set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:76619,variab,variable,76619,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"5639 mnfree(1);; 5640 fU[ilax-1] = sav;; 5641 mnexin(fX);; 5642 fEDM = fBigedm;; 5643// in any case; 5644L700:; 5645 fItaur = 0;; 5646 fNfcnmx = nfmxin;; 5647 fIstrat = istrav;; 5648}; 5649 ; 5650////////////////////////////////////////////////////////////////////////////////; 5651/// Implements one parameter definition; 5652///; 5653/// Called from MNPARS and user-callable; 5654/// Implements one parameter definition, that is:; 5655/// - K (external) parameter number; 5656/// - CNAMK parameter name; 5657/// - UK starting value; 5658/// - WK starting step size or uncertainty; 5659/// - A, B lower and upper physical parameter limits; 5660/// and sets up (updates) the parameter lists.; 5661/// Output:; 5662/// - IERFLG=0 if no problems; 5663/// - >0 if MNPARM unable to implement definition; 5664 ; 5665void TMinuit::mnparm(Int_t k1, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t &ierflg); 5666{; 5667 /* Local variables */; 5668 Double_t vplu, a_small, gsmin, pinti, vminu, danger, sav, sav2;; 5669 Int_t ierr, kint, in, ix, ktofix, lastin, kinfix, nvl;; 5670 TString cnamk, chbufi;; 5671 ; 5672 Int_t k = k1+1;; 5673 cnamk = cnamj;; 5674 kint = fNpar;; 5675 if (k < 1 || k > fMaxext) {; 5676// parameter number exceeds allowed maximum value; 5677 Printf("" MINUIT USER ERROR. PARAMETER NUMBER IS %3d ALLOWED RANGE IS ONE TO %4d"",k,fMaxext);; 5678 goto L800;; 5679 }; 5680// normal parameter request; 5681 ktofix = 0;; 5682 if (fNvarl[k-1] < 0) goto L50;; 5683// previously defined parameter is being redefined; 5684// find if parameter was fixed; 5685 for (ix = 1; ix <= fNpfix; ++ix) {; 5686 if (fIpfix[ix-1] == k) ktofix = k;; 5687 }; 5688 if (ktofix > 0) {; 5689 mnwarn(""W"", ""PARAM DEF"", ""REDEFINING A FIXED PARAMETER."");; 5690 if (kint >= fMaxint) {; 5691 Printf("" CANNOT RELEASE. MAX NPAR EXCEEDED."");; 5692 goto L800;; 5693 }; 5694 mnfree(-k);; 5695 }; 5696// if redefining previously variable parameter; 5697 if (fNiofex[k-1] > 0) kint = fNpar - 1;; 5698L50:;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:184925,variab,variables,184925,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"56789);; Note that majorname and minorname may be expressions using original tree variables e.g.: “run-90000”, “event +3*xx”. In case an expression is specified, the equivalent expression must be computed when calling GetEntryWithIndex(). To build an index with only majorname, specify minorname=""0"" (default).; Note that once the index is built, it can be saved with the TTree object with:; tree.Write(); //if the file has been open in ""update"" mode; The most convenient place to create the index is at the end of the filling process just before saving the tree header. If a previous index was computed, it is redefined by this new call.; Note that this function can also be applied to a TChain. The return value is the number of entries in the Index (< 0 indicates failure).; 12.8 Branches; The organization of branches allows the designer to optimize the data for the anticipated use. The class for a branch is called TBranch. If two variables are independent, and the designer knows the variables will not be used together, they should be placed on separate branches. If, however, the variables are related, such as the coordinates of a point, it is most efficient to create one branch with both coordinates on it. A variable on a TBranch is called a leaf (yes - TLeaf). Another point to keep in mind when designing trees is that branches of the same TTree can be written to separate files. To add a TBranch to a TTree we call the method TTree::Branch(). Note that we DO NOT use the TBranch constructor.; The TTree::Branch method has several signatures. The branch type differs by what is stored in it. A branch can hold an entire object, a list of simple variables, contents of a folder, contents of a TList, or an array of objects. Let’s see some examples. To follow along you will need the shared library libEvent.so. First, check if it is in $ROOTSYS/test. If it is, copy it to your own area. If it is not there, you have to build it by typing make in $ROOTSYS/test.; 12.9 Adding a Branch to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:536524,variab,variables,536524,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,4,['variab'],['variables']
Modifiability,"56~~~~~~~~~~~~~~~; 157 ; 158In case you already have two filled histograms and you only want to; 159plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); 160to create a graph object.; 161 ; 162\anchor EFF03; 163## III. Filling with events; 164You can fill the TEfficiency object by calling the TEfficiency::Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; 165The ""bPassed"" boolean flag indicates whether the current event is good; 166(both histograms are filled) or not (only TEfficiency::fTotalHistogram is filled).; 167The x, y and z variables determine the bin which is filled. For lower dimensions, the z- or even the y-value may be omitted.; 168 ; 169Begin_Macro(source); 170{; 171 //canvas only needed for this documentation; 172 TCanvas* c1 = new TCanvas(""example"","""",600,400);; 173 c1->SetFillStyle(1001);; 174 c1->SetFillColor(kWhite);; 175 ; 176 //create one-dimensional TEfficiency object with fixed bin size; 177 TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; 178 TRandom3 rand3;; 179 ; 180 bool bPassed;; 181 double x;; 182 for(int i=0; i<10000; ++i); 183 {; 184 //simulate events with variable under investigation; 185 x = rand3.Uniform(10);; 186 //check selection: bPassed = DoesEventPassSelection(x); 187 bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; 188 pEff->Fill(bPassed,x);; 189 }; 190 ; 191 pEff->Draw(""AP"");; 192}; 193End_Macro; 194 ; 195You can also set the number of passed or total events for a bin directly by; 196using the TEfficiency::SetPassedEvents or TEfficiency::SetTotalEvents method.; 197 ; 198\anchor EFF04; 199## IV. Statistic options; 200The calculation of the estimated efficiency depends on the chosen statistic; 201option. Let k denotes the number of passed events and N the number of total; 202events.; 203 ; 204\anchor EFF04a; 205### Frequentist methods; 206The expectation value of the number of passed events is given by the true; 207",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:7982,variab,variable,7982,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,"5767 fU[k-1] = uk;; 5768 fAlim[k-1] = a;; 5769 fBlim[k-1] = b;; 5770 fNvarl[k-1] = nvl;; 5771 mnrset(1);; 5772// K is external number of new parameter; 5773// LASTIN is the number of var. params with ext. param. no.< K; 5774 lastin = 0;; 5775 for (ix = 1; ix <= k-1; ++ix) { if (fNiofex[ix-1] > 0) ++lastin; }; 5776// KINT is new number of variable params, NPAR is old; 5777 if (kint == fNpar) goto L280;; 5778 if (kint > fNpar) {; 5779// insert new variable parameter in list; 5780 for (in = fNpar; in >= lastin + 1; --in) {; 5781 ix = fNexofi[in-1];; 5782 fNiofex[ix-1] = in + 1;; 5783 fNexofi[in] = ix;; 5784 fX[in] = fX[in-1];; 5785 fXt[in] = fXt[in-1];; 5786 fDirin[in] = fDirin[in-1];; 5787 fG2[in] = fG2[in-1];; 5788 fGstep[in] = fGstep[in-1];; 5789 fWerr[in] = fWerr[in-1];; 5790 fGrd[in] = fGrd[in-1];; 5791 }; 5792 } else {; 5793// remove variable parameter from list; 5794 for (in = lastin + 1; in <= kint; ++in) {; 5795 ix = fNexofi[in];; 5796 fNiofex[ix-1] = in;; 5797 fNexofi[in-1] = ix;; 5798 fX[in-1] = fX[in];; 5799 fXt[in-1] = fXt[in];; 5800 fDirin[in-1] = fDirin[in];; 5801 fG2[in-1] = fG2[in];; 5802 fGstep[in-1] = fGstep[in];; 5803 fWerr[in-1] = fWerr[in];; 5804 fGrd[in-1] = fGrd[in];; 5805 }; 5806 }; 5807L280:; 5808 ix = k;; 5809 fNiofex[ix-1] = 0;; 5810 fNpar = kint;; 5811// lists are now arranged; 5812 if (nvl > 0) {; 5813 in = lastin + 1;; 5814 fNexofi[in-1] = ix;; 5815 fNiofex[ix-1] = in;; 5816 sav = fU[ix-1];; 5817 mnpint(sav, ix-1, pinti);; 5818 fX[in-1] = pinti;; 5819 fXt[in-1] = fX[in-1];; 5820 fWerr[in-1] = wk;; 5821 sav2 = sav + wk;; 5822 mnpint(sav2, ix-1, pinti);; 5823 vplu = pinti - fX[in-1];; 5824 sav2 = sav - wk;; 5825 mnpint(sav2, ix-1, pinti);; 5826 vminu = pinti - fX[in-1];; 5827 fDirin[in-1] = (TMath::Abs(vplu) + TMath::Abs(vminu))*.5;; 5828 fG2[in-1] = fUp*2 / (fDirin[in-1]*fDirin[in-1]);; 5829 gsmin = fEpsma2*8*TMath::Abs(fX[in-1]);; 5830 fGstep[in-1] = TMath::Max(gsmin,fDirin[in-1]*.1);; 5831 if (fAmin != fUndefi) {; 5832 a_small = TMath::Sq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:188305,variab,variable,188305,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,3,['variab'],['variable']
Modifiability,58 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103029,config,configuration,103029,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,5832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100052,config,configuration,100052,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,599 43273.3 0; : 1086 | 3.10333 2.86337 0.0200994 0.00175565 43611.6 1; : 1087 | 2.9523 3.05621 0.0202345 0.00180564 43410.1 2; : 1088 | 2.96621 3.82134 0.0204023 0.0017658 42926.6 3; : 1089 | 2.9107 3.10267 0.0201393 0.00176662 43542.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:119803,config,configuration,119803,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"5class RGeomShapeRenderInfo : public RGeomRenderInfo {; 136public:; 137 TGeoShape *shape{nullptr}; ///< original shape - can be much less than binary data; 138 ~RGeomShapeRenderInfo() override = default;; 139};; 140 ; 141 ; 142/** RGeomVisible contains description of visible node; 143 * It is path to the node plus reference to shape rendering data */; 144 ; 145class RGeomVisible {; 146public:; 147 int nodeid{0}; ///< selected node id,; 148 int seqid{0}; ///< sequence id, used for merging later; 149 std::vector<int> stack; ///< path to the node, index in list of childs; 150 std::string color; ///< color in rgb format; 151 double opacity{1}; ///< opacity; 152 RGeomRenderInfo *ri{nullptr}; ///< render information for the shape, can be same for different nodes; 153 ; 154 RGeomVisible() = default;; 155 RGeomVisible(int _nodeid, int _seqid, const std::vector<int> &_stack) : nodeid(_nodeid), seqid(_seqid), stack(_stack) {}; 156};; 157 ; 158 ; 159/** Configuration parameters which can be configured on the client; 160 * Send as is to-from client */; 161 ; 162class RGeomConfig {; 163public:; 164 int vislevel{0}; ///< visible level; 165 int maxnumnodes{0}; ///< maximal number of nodes; 166 int maxnumfaces{0}; ///< maximal number of faces; 167 bool showtop{false}; ///< show geometry top volume, off by default; 168 int build_shapes{1}; ///< when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all; 169 int nsegm{0}; ///< number of segments for cylindrical shapes; 170 std::string drawopt; ///< draw options for TGeoPainter; 171};; 172 ; 173 ; 174/** Object with full description for drawing geometry; 175 * It includes list of visible items and list of nodes required to build them */; 176 ; 177class RGeomDrawing {; 178public:; 179 RGeomConfig *cfg{nullptr}; ///< current configurations; 180 int numnodes{0}; ///< total number of nodes in description; 181 std::vector<RGeomNode*> nodes; ///< all used nodes to display visible items and not known for clien",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:5530,config,configured,5530,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,2,['config'],['configured']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:36377,inherit,inherited,36377,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,4,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  ; virtual void SetDepthLocal (Float_t d);  Base-class implementation – just sets fDepth. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:32832,inherit,inherited,32832,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,4,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveCompound.h>. Inheritance diagram for TEveCompound:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveCompound() [1/2]. TEveCompound::TEveCompound ; (; const TEveCompound & ; ). private . ◆ TEveCompound() [2/2]. T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompound.html:32587,inherit,inherited,32587,doc/master/classTEveCompound.html,https://root.cern,https://root.cern/doc/master/classTEveCompound.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveElement.h>. Inheritance diagram for TEveElementList:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveElementList() [1/2]. TEveElementList::TEveElementList ; (; const char * ; n = ""TEveElementList"", . const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementList.html:31831,inherit,inherited,31831,doc/master/classTEveElementList.html,https://root.cern,https://root.cern/doc/master/classTEveElementList.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveEventManager.h>. Inheritance diagram for TEveEventManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveEventManager(). TEveEventManager::TEveEventManager ; (; const char * ; n = ""TEveEventManager"", . const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveEventManager.html:32724,inherit,inherited,32724,doc/master/classTEveEventManager.html,https://root.cern,https://root.cern/doc/master/classTEveEventManager.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEvePlot3D.h>. Inheritance diagram for TEvePlot3D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEvePlot3D() [1/2]. TEvePlot3D::TEvePlot3D ; (; const TEvePlot3D & ; ). private . ◆ TEvePlot3D() [2/2]. TEvePlot3D::TEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePlot3D.html:32608,inherit,inherited,32608,doc/master/classTEvePlot3D.html,https://root.cern,https://root.cern/doc/master/classTEvePlot3D.html,2,['inherit'],['inherited']
Modifiability,"6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UCh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSceneList.html:31394,inherit,inherited,31394,doc/master/classTEveSceneList.html,https://root.cern,https://root.cern/doc/master/classTEveSceneList.html,2,['inherit'],['inherited']
Modifiability,"6 // std::endl;; 1147 if (iposBefore >= 0) {; 1148 assert(iposBefore < formula.Length());; 1149 //if (isalpha(formula[iposBefore])) {; 1150 if (IsFunctionNameChar(formula[iposBefore])) {; 1151 // std::cout << ""previous character for function "" << funName << "" is "" << formula[iposBefore] << ""- skip; 1152 // "" << std::endl;; 1153 funPos = formula.Index(funName, lastFunPos);; 1154 continue;; 1155 }; 1156 }; 1157 ; 1158 Bool_t isNormalized = false;; 1159 if (lastFunPos < formula.Length()) {; 1160 // check if function is normalized by looking at ""n"" character after function name (e.g. gausn); 1161 isNormalized = (formula[lastFunPos] == 'n');; 1162 if (isNormalized); 1163 lastFunPos += 1;; 1164 if (lastFunPos < formula.Length()) {; 1165 char c = formula[lastFunPos];; 1166 // check if also last character is not alphanumeric or is not an operator and not a parenthesis ( or [.; 1167 // Parenthesis [] are used to express the variables; 1168 if (isalnum(c) || (!IsOperator(c) && c != '(' && c != ')' && c != '[' && c != ']')) {; 1169 // std::cout << ""last character for function "" << funName << "" is "" << c << "" skip .."" << std::endl;; 1170 funPos = formula.Index(funName, lastFunPos);; 1171 continue;; 1172 }; 1173 }; 1174 }; 1175 ; 1176 if (isNormalized) {; 1177 SetBit(kNormalized, true);; 1178 }; 1179 std::vector<TString> variables;; 1180 Int_t dim = 0;; 1181 TString varList = """";; 1182 Bool_t defaultVariables = false;; 1183 ; 1184 // check if function has specified the [...] e.g. gaus[x,y]; 1185 Int_t openingBracketPos = funPos + funName.Length() + (isNormalized ? 1 : 0);; 1186 Int_t closingBracketPos = kNPOS;; 1187 if (openingBracketPos > formula.Length() || formula[openingBracketPos] != '[') {; 1188 dim = funDim;; 1189 variables.resize(dim);; 1190 for (Int_t idim = 0; idim < dim; ++idim); 1191 variables[idim] = defaultVariableNames[idim];; 1192 defaultVariables = true;; 1193 } else {; 1194 // in case of [..] found, assume they specify all the variables. Use it to get function d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:43675,variab,variables,43675,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.02,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80692,config,configuration,80692,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.395,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83633,config,configuration,83633,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,6 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904 3.46339 0.0200395 0.00176046 43765.9 10; : 1044 | 3.08383 3.85222 0.0200574 0.0017582 43717.6 11; : 1045 | 3.00904 3.46043 0.0200555 0.00175872 43723.6 12; : 1046 Minimum Test error found - save the configuration ; : 1046 | 2.89922 3.28968 0.0204754 0.00188349 43029.5 0; : 1047 | 3.06628 3.80261 0.0206565 0.00177157 42361.9 1; : 1048 | 3.0482 4.21427 0.0203272 0.00175981 43086.2 2; : 1049 | 3.02565 3.406 0.0200479 0.00175462 43732 3; : 1050 | 3.16008 3.99499 0.0202749 0.00175016 43185.5 4; : 1051 | 3.00714 3.41105 0.0202798 0.00177822 43239.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minimum Test error found - save the configuration ; : 1062 | 3.14929 3.19749 0.0201067 0.00181963 43746.8 0; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 |,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:116569,config,configuration,116569,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"6 small scalable dot kFullDotSmall; 7 medium scalable dot kFullDotMedium; 8 large scalable dot kFullDotLarge; 9 -->19 dot; 20 full circle kFullCircle; 21 full square kFullSquare; 22 full triangle up kFullTriangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 open star kOpenStar; 30 full star kFullStar. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Marker types"",0,0,500,200);; TMarker marker;; marker.DisplayMarkerTypes();; return c;; }. Marker size; Various marker sizes are shown in the figure below. The default marker size=1; is shown in the top left corner. Marker sizes smaller than 1 can be; specified. The marker size does not refer to any coordinate systems, it is an; absolute value. Therefore the marker size is not affected by any change ; in TPad's scale.; The marker size of any class inheriting from TAttMarker can ; be changed using the method SetMarkerSize and retrieved using the ; method GetMarkerSize. Picture; Source. {; c = new TCanvas(""c"",""Marker sizes"",0,0,500,200);; TMarker marker;; marker.SetMarkerStyle(3);; Double_t x = 0;; Double_t dx = 1/6.0;; for (Int_t i=1; i<6; i++) {; x += dx;; marker.SetMarkerSize(i*0.2); marker.DrawMarker(x,.165);; marker.SetMarkerSize(i*0.8); marker.DrawMarker(x,.495);; marker.SetMarkerSize(i*1.0); marker.DrawMarker(x,.835);; }; return c;; }. Note that the marker styles number 1 6 and 7 (the dots), cannot be scaled. They ; are meant to be very fast to draw and are always drawn with the same number of; pixels; therefore SetMarkerSize does not apply on them. To have a ; ""scalable dot"" a filled circle should be used instead, i.e. the marker style; number 20. By default (if SetMarkerStyle is not specified), the marker ; style used is 1. That's the most common one to draw scatter plots.; . Function Members (Methods); public:. TAttMarker(); TAttMarker(const TAttMarker&); TAttMarker",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAttMarker.html:2494,inherit,inheriting,2494,root/html526/TAttMarker.html,https://root.cern,https://root.cern/root/html526/TAttMarker.html,1,['inherit'],['inheriting']
Modifiability,"6 splitSpecs.DeclareOptionRef( nEventRequests.at(cl).nTrainingEventsRequested, TString(""nTrain_"")+clName, titleTrain );; 687 splitSpecs.DeclareOptionRef( nEventRequests.at(cl).nTestingEventsRequested , TString(""nTest_"")+clName , titleTest );; 688 splitSpecs.DeclareOptionRef( nEventRequests.at(cl).TrainTestSplitRequested , TString(""TrainTestSplit_"")+clName , titleTest );; 689 }; 690 ; 691 splitSpecs.DeclareOptionRef( fVerbose, ""V"", ""Verbosity (default: true)"" );; 692 ; 693 splitSpecs.DeclareOptionRef( fVerboseLevel=TString(""Info""), ""VerboseLevel"", ""VerboseLevel (Debug/Verbose/Info)"" );; 694 splitSpecs.AddPreDefVal(TString(""Debug""));; 695 splitSpecs.AddPreDefVal(TString(""Verbose""));; 696 splitSpecs.AddPreDefVal(TString(""Info""));; 697 ; 698 fCorrelations = kTRUE;; 699 splitSpecs.DeclareOptionRef(fCorrelations, ""Correlations"", ""Boolean to show correlation output (Default: true)"");; 700 fComputeCorrelations = kTRUE;; 701 splitSpecs.DeclareOptionRef(fComputeCorrelations, ""CalcCorrelations"", ""Compute correlations and also some variable statistics, e.g. min/max (Default: true )"");; 702 ; 703 splitSpecs.ParseOptions();; 704 splitSpecs.CheckForUnusedOptions();; 705 ; 706 // output logging verbosity; 707 if (Verbose()) fLogger->SetMinType( kVERBOSE );; 708 if (fVerboseLevel.CompareTo(""Debug"") ==0) fLogger->SetMinType( kDEBUG );; 709 if (fVerboseLevel.CompareTo(""Verbose"") ==0) fLogger->SetMinType( kVERBOSE );; 710 if (fVerboseLevel.CompareTo(""Info"") ==0) fLogger->SetMinType( kINFO );; 711 ; 712 // put all to upper case; 713 splitMode.ToUpper(); mixMode.ToUpper(); normMode.ToUpper();; 714 // adjust mixmode if same as splitmode option has been set; 715 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 716 << ""\tSplitmode is: \"""" << splitMode << ""\"" the mixmode is: \"""" << mixMode << ""\"""" << Endl;; 717 if (mixMode==""SAMEASSPLITMODE"") mixMode = splitMode;; 718 else if (mixMode!=splitMode); 719 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << ""DataSet splitmode=""<<s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:29107,variab,variable,29107,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6#endif; 16227 return ret;; 16228}; 16229#else; 16230static long; 16231ssl_get_protocol(int version_id); 16232{; 16233 unsigned long ret = (unsigned long)SSL_OP_ALL;; 16234 if (version_id > 0); 16235 ret |= SSL_OP_NO_SSLv2;; 16236 if (version_id > 1); 16237 ret |= SSL_OP_NO_SSLv3;; 16238 if (version_id > 2); 16239 ret |= SSL_OP_NO_TLSv1;; 16240 if (version_id > 3); 16241 ret |= SSL_OP_NO_TLSv1_1;; 16242 if (version_id > 4); 16243 ret |= SSL_OP_NO_TLSv1_2;; 16244#if defined(SSL_OP_NO_TLSv1_3); 16245 if (version_id > 5); 16246 ret |= SSL_OP_NO_TLSv1_3;; 16247#endif; 16248 return (long)ret;; 16249}; 16250#endif /* OPENSSL_API_1_1 */; 16251 ; 16252 ; 16253/* SSL callback documentation:; 16254 * https://www.openssl.org/docs/man1.1.0/ssl/SSL_set_info_callback.html; 16255 * https://wiki.openssl.org/index.php/Manual:SSL_CTX_set_info_callback(3); 16256 * https://linux.die.net/man/3/ssl_set_info_callback */; 16257/* Note: There is no ""const"" for the first argument in the documentation; 16258 * examples, however some (maybe most, but not all) headers of OpenSSL; 16259 * versions / OpenSSL compatibility layers have it. Having a different; 16260 * definition will cause a warning in C and an error in C++. Use ""const SSL; 16261 * *"", while automatical conversion from ""SSL *"" works for all compilers,; 16262 * but not other way around */; 16263static void; 16264ssl_info_callback(const SSL *ssl, int what, int ret); 16265{; 16266 (void)ret;; 16267 ; 16268 if (what & SSL_CB_HANDSHAKE_START) {; 16269 SSL_get_app_data(ssl);; 16270 }; 16271 if (what & SSL_CB_HANDSHAKE_DONE) {; 16272 /* TODO: check for openSSL 1.1 */; 16273 //#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS 0x0001; 16274 // ssl->s3->flags |= SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS;; 16275 }; 16276}; 16277 ; 16278 ; 16279static int; 16280ssl_servername_callback(SSL *ssl, int *ad, void *arg); 16281{; 16282#if defined(GCC_DIAGNOSTIC); 16283#pragma GCC diagnostic push; 16284#pragma GCC diagnostic ignored ""-Wcast-align""; 16285#endif /* defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:480262,layers,layers,480262,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['layers'],['layers']
Modifiability,"6.43e-20 6.43E-20 6,43e-20. TString Itoa(Int_t value, Int_t base); Converts an Int_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; Usage: the following statement produce the same output, namely ""1111""; std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; In case of error returns the ""!"" string. TString UItoa(UInt_t value, Int_t base); Converts a UInt_t (twice the range of an Int_t) to a TString with respect; to the base specified (2-36). Thus it is an enhanced version of sprintf; (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString LLtoa(Long64_t value, Int_t base); Converts a Long64_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString ULLtoa(ULong64_t value, Int_t base); Converts a ULong64_t (twice the range of an Long64_t) to a TString with; respect to the base specified (2-36). Thus it is an enhanced version of; sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Converts string from base base_in to base base_out. Supported bases; are 2-36. At most 64 bit data can be converted. Bool_t EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Return true if string ends with the specified string. TObjArray * Tokenize(const TString& delim) const; This function is used to isolate sequential tokens in a TString.; These tokens are separated in the string by at least one of the; characters in delim. The returned array contains the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TString.html:19146,enhance,enhanced,19146,root/html602/TString.html,https://root.cern,https://root.cern/root/html602/TString.html,8,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"6/// second is the name of the ROOT file where the friend tree is saved.; 1287/// AddFriend automatically opens the friend file. If no file name is given,; 1288/// the tree called ft1 is assumed to be in the same file as the original tree.; 1289///; 1290/// tree.AddFriend(""ft1"",""friendfile1.root"");; 1291/// If the friend tree has the same name as the original tree, you can give it; 1292/// an alias in the context of the friendship:; 1293///; 1294/// tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; 1295/// Once the tree has friends, we can use TTree::Draw as if the friend's; 1296/// variables were in the original tree. To specify which tree to use in; 1297/// the Draw method, use the syntax:; 1298/// ~~~ {.cpp}; 1299/// <treeName>.<branchname>.<varname>; 1300/// ~~~; 1301/// If the variablename is enough to uniquely identify the variable, you can; 1302/// leave out the tree and/or branch name.; 1303/// For example, these commands generate a 3-d scatter plot of variable ""var""; 1304/// in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in; 1305/// TTree ft2.; 1306/// ~~~ {.cpp}; 1307/// tree.AddFriend(""ft1"",""friendfile1.root"");; 1308/// tree.AddFriend(""ft2"",""friendfile2.root"");; 1309/// tree.Draw(""var:ft1.v1:ft2.v2"");; 1310/// ~~~; 1311/// \image html ttree_friend2.png; 1312///; 1313/// The picture illustrates the access of the tree and its friends with a; 1314/// Draw command.; 1315/// When AddFriend is called, the ROOT file is automatically opened and the; 1316/// friend tree (ft1) is read into memory. The new friend (ft1) is added to; 1317/// the list of friends of tree.; 1318/// The number of entries in the friend must be equal or greater to the number; 1319/// of entries of the original tree. If the friend tree has fewer entries a; 1320/// warning is given and the missing entries are not included in the histogram.; 1321/// To retrieve the list of friends from a tree use TTree::GetListOfFriends.; 1322/// When the tree is written to file (TTree:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:47207,variab,variable,47207,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,3,['variab'],['variable']
Modifiability,"603&p=83973#p83973”>here. THStack. Implement GetNhists() to return the number of histograms in the stack.; New drawing option NOSTACKB. histograms are drawn next to each other as bar charts.; Example:; TCanvas* nostackb() {; TCanvas *cst0 = new TCanvas(""cst0"",""cst0"",600,400);; THStack *hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. TH1F *h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. TH1F *h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. TH1F *h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; return cst0;; }. NOSTACKB plot example. GUI Libraries; TGTextViewostream. A new TGTextViewostream class has been added. It is a text viewer widget and is a specialization of TGTextView and std::ostream. It uses a TGTextViewStreamBuf, which inherits from std::streambuf, allowing to stream text directly to the text view in a cout - like fashion. A new tutorial showing how to use the TGTextViewostream widget has also been added. FitPanel. Add the functionality for composing function using convolution and for normalized sums using the new TF1NormSum and TF1Convolution classes. 2D Graphics Libraries; TText. The character position was not correct with the Cocoa backend. (see https://sft.its.cern.ch/jira/browse/ROOT-6561); Interactive update of TText position did not work in NDC mode. (se https://sft.its.cern.ch/jira/browse/ROOT-7284). TLegend. Use the new TStyle global attribute gStyle->GetLegendTextSize() to set the legend item text size. If this value is 0 and if the text size directly set on the TLegend object is also 0, then the text size is automatically computed to fit the legend box. If gStyle->GetLegendTextSize() is non equal to 0 and if text size directly set on the TLegend object is 0, then the gStyle value is used to draw the legend text. If the tex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:20314,inherit,inherits,20314,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['inherit'],['inherits']
Modifiability,6037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:102859,config,configuration,102859,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100557,config,configuration,100557,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"60; TMinuit::Evalvirtual Int_t Eval(Int_t npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)Evaluate the minimisation function Input parameters:Definition TMinuit.cxx:800; TMinuit::fFIXPyyDouble_t * fFIXPyyDefinition TMinuit.h:102; TMinuit::fStatusInt_t fStatusDefinition TMinuit.h:154; TMinuit::fGstepDouble_t * fGstepDefinition TMinuit.h:83; TMinuit::fXtDouble_t * fXtDefinition TMinuit.h:76; TMinuit::mnmigrvirtual void mnmigr()Performs a local function minimization.Definition TMinuit.cxx:5048; TMinuit::fIstratInt_t fIstratDefinition TMinuit.h:150; TMinuit::fCwordTString fCwordDefinition TMinuit.h:169; TMinuit::fPlotTObject * fPlotDefinition TMinuit.h:176; TMinuit::fPSDFsDouble_t * fPSDFsDefinition TMinuit.h:116; TMinuit::fMIGRgsDouble_t * fMIGRgsDefinition TMinuit.h:110; TMinuit::mnematvirtual void mnemat(Double_t *emat, Int_t ndim)Calculates the external error matrix from the internal matrix.Definition TMinuit.cxx:2501; TMinuit::mnrn15virtual void mnrn15(Double_t &val, Int_t &inseed)This is a super-portable random number generator.Definition TMinuit.cxx:6619; TMinuit::mnerrsvirtual void mnerrs(Int_t number, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &gcc)Utility routine to get MINOS errors.Definition TMinuit.cxx:2578; TMinuit::Classstatic TClass * Class(); TMinuit::fMIGRstepDouble_t * fMIGRstepDefinition TMinuit.h:109; TMinuit::fEpsiDouble_t fEpsiDefinition TMinuit.h:53; TMinuit::fWord7Double_t * fWord7Definition TMinuit.h:96; TMinuit::mnexinvirtual void mnexin(Double_t *pint)Transforms the external parameter values U to internal values.Definition TMinuit.cxx:3151; TMinuit::fCovmesTString fCovmes[4]Definition TMinuit.h:172; TMinuit::fIstkwrInt_t fIstkwr[10]Definition TMinuit.h:139; TMinuit::fNparInt_t fNparDefinition TMinuit.h:41; TMinuit::mnexcmvirtual void mnexcm(const char *comand, Double_t *plist, Int_t llist, Int_t &ierflg)Interprets a command and takes appropriate action.Definition TMinuit.cxx:2664; TMinuit::fPbarDouble_t * fPb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:268897,portab,portable,268897,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['portab'],['portable']
Modifiability,"60; TMinuit::Evalvirtual Int_t Eval(Int_t npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)Evaluate the minimisation function Input parameters:Definition TMinuit.cxx:800; TMinuit::fFIXPyyDouble_t * fFIXPyyDefinition TMinuit.h:102; TMinuit::fStatusInt_t fStatusDefinition TMinuit.h:154; TMinuit::fGstepDouble_t * fGstepDefinition TMinuit.h:83; TMinuit::fXtDouble_t * fXtDefinition TMinuit.h:76; TMinuit::mnmigrvirtual void mnmigr()Performs a local function minimization.Definition TMinuit.cxx:5048; TMinuit::fIstratInt_t fIstratDefinition TMinuit.h:150; TMinuit::fCwordTString fCwordDefinition TMinuit.h:169; TMinuit::fPlotTObject * fPlotDefinition TMinuit.h:176; TMinuit::fPSDFsDouble_t * fPSDFsDefinition TMinuit.h:116; TMinuit::fMIGRgsDouble_t * fMIGRgsDefinition TMinuit.h:110; TMinuit::mnematvirtual void mnemat(Double_t *emat, Int_t ndim)Calculates the external error matrix from the internal matrix.Definition TMinuit.cxx:2501; TMinuit::mnrn15virtual void mnrn15(Double_t &val, Int_t &inseed)This is a super-portable random number generator.Definition TMinuit.cxx:6619; TMinuit::mnerrsvirtual void mnerrs(Int_t number, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &gcc)Utility routine to get MINOS errors.Definition TMinuit.cxx:2578; TMinuit::fMIGRstepDouble_t * fMIGRstepDefinition TMinuit.h:109; TMinuit::fEpsiDouble_t fEpsiDefinition TMinuit.h:53; TMinuit::fWord7Double_t * fWord7Definition TMinuit.h:96; TMinuit::mnexinvirtual void mnexin(Double_t *pint)Transforms the external parameter values U to internal values.Definition TMinuit.cxx:3151; TMinuit::fCovmesTString fCovmes[4]Definition TMinuit.h:172; TMinuit::fIstkwrInt_t fIstkwr[10]Definition TMinuit.h:139; TMinuit::fNparInt_t fNparDefinition TMinuit.h:41; TMinuit::mnexcmvirtual void mnexcm(const char *comand, Double_t *plist, Int_t llist, Int_t &ierflg)Interprets a command and takes appropriate action.Definition TMinuit.cxx:2664; TMinuit::fPbarDouble_t * fPbarDefinition TMinuit.h:94; TMinuit::mnh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:27045,portab,portable,27045,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['portab'],['portable']
Modifiability,"61 ; 1362 ; 1363 ; 1364 ; 1365 ; 1366////////////////////////////////////////////////////////////////////////////////; 1367/// Generate a new dataset containing the specified variables with; 1368/// events sampled from our distribution.; 1369///; 1370/// \param[in] whatVars Generate a dataset with the variables (and categories) in this set.; 1371/// Any variables of this PDF that are not in `whatVars` will use their; 1372/// current values and be treated as fixed parameters.; 1373/// \param[in] nEvents Generate the specified number of events or else try to use; 1374/// expectedEvents() if nEvents <= 0 (default).; 1375/// \param[in] verbose Show which generator strategies are being used.; 1376/// \param[in] autoBinned If original distribution is binned, return bin centers and randomise weights; 1377/// instead of generating single events.; 1378/// \param[in] binnedTag; 1379/// \param[in] expectedData Call setExpectedData on the genContext.; 1380/// \param[in] extended Randomise number of events generated according to Poisson(nEvents). Only useful; 1381/// if PDF is extended.; 1382/// \return New dataset. Returns zero in case of an error. The caller takes ownership of the returned; 1383/// dataset.; 1384 ; 1385RooFit::OwningPtr<RooDataSet> RooAbsPdf::generate(const RooArgSet &whatVars, double nEvents, bool verbose, bool autoBinned, const char* binnedTag, bool expectedData, bool extended) const; 1386{; 1387 if (nEvents==0 && extendMode()==CanNotBeExtended) {; 1388 return RooFit::makeOwningPtr(std::make_unique<RooDataSet>(""emptyData"",""emptyData"",whatVars));; 1389 }; 1390 ; 1391 // Request for binned generation; 1392 std::unique_ptr<RooAbsGenContext> context{autoGenContext(whatVars,nullptr,nullptr,verbose,autoBinned,binnedTag)};; 1393 if (expectedData) {; 1394 context->setExpectedData(true) ;; 1395 }; 1396 ; 1397 std::unique_ptr<RooDataSet> generated;; 1398 if(nullptr != context && context->isValid()) {; 1399 generated = std::unique_ptr<RooDataSet>{context->generate(nEven",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:68102,extend,extended,68102,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"61 ; 1962 TConfigSTL *config = (TConfigSTL*)conf;; 1963 UInt_t start, count;; 1964 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1965 ; 1966 std::vector<double> *const vec = (std::vector<double>*)(((char*)addr)+config->fOffset);; 1967 Int_t nvalues;; 1968 buf.ReadInt(nvalues);; 1969 vec->resize(nvalues);; 1970 ; 1971#ifdef R__VISUAL_CPLUSPLUS; 1972 if (nvalues <= 0) {; 1973 buf.CheckByteCount(start,count,config->fTypeName);; 1974 return 0;; 1975 }; 1976#endif; 1977 double *begin = &(*vec->begin());; 1978 buf.ReadFastArrayDouble32(begin, nvalues);; 1979 ; 1980 buf.CheckByteCount(start,count,config->fTypeName);; 1981 return 0;; 1982 }; 1983 ; 1984 template <typename From, typename To>; 1985 struct ConvertCollectionBasicType {; 1986 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 1987 {; 1988 // Collection of numbers. Memberwise or not, it is all the same.; 1989 ; 1990 TConfigSTL *config = (TConfigSTL*)conf;; 1991 UInt_t start, count;; 1992 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1993 ; 1994 std::vector<To> *const vec = (std::vector<To>*)(((char*)addr)+config->fOffset);; 1995 Int_t nvalues;; 1996 buf.ReadInt(nvalues);; 1997 vec->resize(nvalues);; 1998 ; 1999 From *temp = new From[nvalues];; 2000 buf.ReadFastArray(temp, nvalues);; 2001 for(Int_t ind = 0; ind < nvalues; ++ind) {; 2002 (*vec)[ind] = (To)temp[ind];; 2003 }; 2004 delete [] temp;; 2005 ; 2006 buf.CheckByteCount(start,count,config->fTypeName);; 2007 return 0;; 2008 }; 2009 };; 2010 ; 2011 template <typename From, typename To>; 2012 struct ConvertCollectionBasicType<NoFactorMarker<From>,To> {; 2013 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf); 2014 {; 2015 // Collection of numbers. Memberwise or not, it is all the same.; 2016 ; 2017 TConfigSTL *config = (TConfigSTL*)conf;; 2018 UInt_t start, count;; 2019 /* Version_t vers = */ buf.ReadVersion(&start",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:82548,config,config,82548,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network tr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16986,config,configuration,16986,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"6312 mg_lock_context(conn->phys_ctx);; 16313 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16314 mg_unlock_context(conn->phys_ctx);; 16315 return SSL_TLSEXT_ERR_NOACK;; 16316 }; 16317 ; 16318 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16319 ; 16320 while (conn->dom_ctx) {; 16321 if (!mg_strcasecmp(servername,; 16322 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16323 /* Found matching domain */; 16324 DEBUG_TRACE(""TLS domain %s found"",; 16325 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16326 break;; 16327 }; 16328 mg_lock_context(conn->phys_ctx);; 16329 conn->dom_ctx = conn->dom_ctx->next;; 16330 mg_unlock_context(conn->phys_ctx);; 16331 }; 16332 ; 16333 if (conn->dom_ctx == NULL) {; 16334 /* Default domain */; 16335 DEBUG_TRACE(""TLS default domain %s used"",; 16336 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16337 conn->dom_ctx = &(conn->phys_ctx->dd);; 16338 }; 16339 mg_lock_context(conn->phys_ctx);; 16340 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16341 mg_unlock_context(conn->phys_ctx);; 16342 return SSL_TLSEXT_ERR_OK;; 16343}; 16344 ; 16345 ; 16346#if defined(USE_ALPN); 16347static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16348static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16349 alpn_proto_list + 3 + 8,; 16350 NULL};; 16351#if defined(USE_HTTP2); 16352static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16353 alpn_proto_list + 3,; 16354 alpn_proto_list + 3 + 8,; 16355 NULL};; 16356#endif; 16357 ; 16358static int; 16359alpn_select_cb(SSL *ssl,; 16360 const unsigned char **out,; 16361 unsigned char *outlen,; 16362 const unsigned char *in,; 16363 unsigned int inlen,; 16364 void *arg); 16365{; 16366 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16367 unsigned int i, j, enable_http2 = 0;; 16368 const char **alpn_proto_order = alpn_proto_order_http1;; 16369 ; 16370 struct mg_workerTLS *tls =; 16371 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 163",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:482983,config,config,482983,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"6313 mg_lock_context(conn->phys_ctx);; 16314 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16315 mg_unlock_context(conn->phys_ctx);; 16316 return SSL_TLSEXT_ERR_NOACK;; 16317 }; 16318 ; 16319 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16320 ; 16321 while (conn->dom_ctx) {; 16322 if (!mg_strcasecmp(servername,; 16323 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16324 /* Found matching domain */; 16325 DEBUG_TRACE(""TLS domain %s found"",; 16326 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16327 break;; 16328 }; 16329 mg_lock_context(conn->phys_ctx);; 16330 conn->dom_ctx = conn->dom_ctx->next;; 16331 mg_unlock_context(conn->phys_ctx);; 16332 }; 16333 ; 16334 if (conn->dom_ctx == NULL) {; 16335 /* Default domain */; 16336 DEBUG_TRACE(""TLS default domain %s used"",; 16337 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16338 conn->dom_ctx = &(conn->phys_ctx->dd);; 16339 }; 16340 mg_lock_context(conn->phys_ctx);; 16341 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16342 mg_unlock_context(conn->phys_ctx);; 16343 return SSL_TLSEXT_ERR_OK;; 16344}; 16345 ; 16346 ; 16347#if defined(USE_ALPN); 16348static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16349static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16350 alpn_proto_list + 3 + 8,; 16351 NULL};; 16352#if defined(USE_HTTP2); 16353static const char *alpn_proto_order_http2[] = {alpn_proto_list,; 16354 alpn_proto_list + 3,; 16355 alpn_proto_list + 3 + 8,; 16356 NULL};; 16357#endif; 16358 ; 16359static int; 16360alpn_select_cb(SSL *ssl,; 16361 const unsigned char **out,; 16362 unsigned char *outlen,; 16363 const unsigned char *in,; 16364 unsigned int inlen,; 16365 void *arg); 16366{; 16367 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16368 unsigned int i, j, enable_http2 = 0;; 16369 const char **alpn_proto_order = alpn_proto_order_http1;; 16370 ; 16371 struct mg_workerTLS *tls =; 16372 (struct mg_workerTLS *)pthread_getspecific(sTlsKey);; 163",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:483016,config,config,483016,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,64.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91771,config,configuration,91771,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Int_t CreateSymLinks(TList* files); Create in each worker sandbox symlinks to the files in the list; Used to make the caceh information available to workers. Int_t InitDataSetManager(); Initialize the dataset manager from directives or from defaults; Return 0 on success, -1 on failure. void ShowCache(Bool_t all = kFALSE); List contents of file cache. If all is true show all caches also on; slaves. If everything is ok all caches are to be the same. void ClearCache(const char* file = 0); Remove files from all file caches. Int_t Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); Copy the specified macro in the cache directory. The macro file is; uploaded if new or updated. If existing, the corresponding header; basename(macro).h or .hh, is also uploaded. For the other arguments; see TProof::Load().; Returns 0 in case of success and -1 in case of error. Int_t CopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0); Copy a macro, and its possible associated .h[h] file,; to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofLite.html:27910,sandbox,sandbox,27910,root/html528/TProofLite.html,https://root.cern,https://root.cern/root/html528/TProofLite.html,4,['sandbox'],['sandbox']
Modifiability,"64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Int_t CreateSymLinks(TList* files); Create in each worker sandbox symlinks to the files in the list; Used to make the cache information available to workers. Int_t InitDataSetManager(); Initialize the dataset manager from directives or from defaults; Return 0 on success, -1 on failure. void ShowCache(Bool_t all = kFALSE); List contents of file cache. If all is true show all caches also on; slaves. If everything is ok all caches are to be the same. void ClearCache(const char* file = 0); Remove files from all file caches. Int_t Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); Copy the specified macro in the cache directory. The macro file is; uploaded if new or updated. If existing, the corresponding header; basename(macro).h or .hh, is also uploaded. For the other arguments; see TProof::Load().; Returns 0 in case of success and -1 in case of error. Int_t CopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0); Copy a macro, and its possible associated .h[h] file,; to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofLite.html:31907,sandbox,sandbox,31907,root/html602/TProofLite.html,https://root.cern,https://root.cern/root/html602/TProofLite.html,2,['sandbox'],['sandbox']
Modifiability,"64_tGetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; TList*GetListOfAssocObjs() const; virtual TList*GetListOfFriends() const; const char*GetMsd() const; virtual const char*TNamed::GetName() const; Long64_tGetNum() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; Long64_tGetTDSetOffset() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValid() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInvalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; Int_tLookup(Bool_t force = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMergeElement(TDSetElement* elem); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDSetElement.html:4071,Inherit,InheritsFrom,4071,root/html532/TDSetElement.html,https://root.cern,https://root.cern/root/html532/TDSetElement.html,1,['Inherit'],['InheritsFrom']
Modifiability,"64_tGetSelectedRows(); virtual Int_tGetTimerInterval() const; virtual const char*TNamed::GetTitle() const; virtual Long64_tGetTotBytes() const; TBuffer*GetTransientBuffer(Int_t size); virtual TTree*GetTree() const; virtual TVirtualIndex*GetTreeIndex() const; virtual Int_tGetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetUpdate() const; virtual TList*GetUserInfo(); virtual Double_t*GetV1(); virtual Double_t*GetV2(); virtual Double_t*GetV3(); virtual Double_t*GetV4(); virtual Double_t*GetVal(Int_t i); TTreeFormula*GetVar(Int_t i); TTreeFormula*GetVar1(); TTreeFormula*GetVar2(); TTreeFormula*GetVar3(); TTreeFormula*GetVar4(); virtual Double_t*GetW(); virtual Double_tGetWeight() const; virtual Long64_tGetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidIncrementTotalBuffers(Int_t nbytes); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Int_tLoadBaskets(Long64_t maxmemory = 2000000000); virtual Long64_tLoadTree(Long64_t entry); virtual Long64_tLoadTreeFriend(Long64_t entry, TTree* T); virtual voidTNamed::ls(Option_t* option = """") const; virtual Int_tMakeClass(const char* classname = 0, Option_t* option = """"); virtual Int_tMakeCode(const char* filename = 0); virtual Int_tMakeProxy(const char* classname, const char* macrofilename = 0, const char* cutfilename = 0, const char* option = 0, Int_t maxUnrolling = 3); virtual Int_tMakeSelector(const char* selector = 0); voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:20417,Inherit,InheritsFrom,20417,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,4,['Inherit'],['InheritsFrom']
Modifiability,"64_tTProofPlayer::fReadCallsRun! Read calls in this run; Long_tTProofPlayer::fSaveMemThresholdThreshold for saving output to file; Bool_tTProofPlayer::fSavePartialResultsWhether to save the partial results; Bool_tTProofPlayer::fSaveResultsPerPacketWhether to save partial results after each packet; TStatus*TProofPlayer::fSelStatus! status of query in progress; TSelector*TProofPlayer::fSelector! the latest selector; TClass*TProofPlayer::fSelectorClass! class of the latest selector; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*TProofPlayer::fStopTimerTimer associated with a stop request; TMutex*TProofPlayer::fStopTimerMtxTo protect the stop timer; Long64_tTProofPlayer::fTotalEventsnumber of events requested; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*TProofPlayer::fgDrawInputParsList of input parameters to be kept on drawing actions. private:. Bool_tfIsClient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Long64_t Process(TSelector* selector, Long64_t nentries = -1, Option_t* option = """"); Process the specified TSelector object 'nentries' times.; Used to test the PROOF interator mechanism for cycle-driven selectors in a; local session.; The return value is -1 in case of error and TSelector::GetStatus(); in case of success. Long64_t Process(const char* selector, Long64_t nentries = -1, Option_t* option = """"); Process the specified TSelector file 'nentries' times.; Used to test the PROOF interator mechanism for cycle-driven selectors in a; local session.; Process specified TDSet on PROOF worker with TSelector object; The return value is -1 in case of error and TSelector::GetStatus(); in case of success. void SetupFeedback(). public: // fix for broken compilers so TCleanup can call StopFeedback(). Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Bool_t IsClient() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPlayerLocal.html:16659,Inherit,Inheritance,16659,root/html534/TProofPlayerLocal.html,https://root.cern,https://root.cern/root/html534/TProofPlayerLocal.html,6,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"64_tfgAddressNnumber of addresses in bytes to process; static TObjArray*fgBtidlistlist of back trace ids; static TCanvas*fgC1pointer to canvas showing allocs/deallocs vs time; static TCanvas*fgC2pointer to canvas with leaks in decreasing order; static TCanvas*fgC3pointer to canvas showing the main leaks; static Long64_tfgEntryFirstfirst entry to process; static Long64_tfgEntryNnumber of entries to process; static TH1D*fgHhistogram with allocations - frees; static TH1D*fgHallochistogram with allocations; static TH1I*fgHdiffhistogram with diff of entry number between alloc/free; static TH1I*fgHentryhistogram with entry numbers in the TObjArray; static TH1D*fgHfreehistogram with frees; static TH1I*fgHleakshistogram with leaks; static TTree*fgTTMemStat Tree; static TGToolTip*fgTip1pointer to tool tip for canvas 1; static TGToolTip*fgTip2pointer to tool tip for canvas 2; static Double_t*fgV1pointer to V1 array of TTree::Draw (pos); static Double_t*fgV2pointer to V2 array of TTree::Draw (nbytes); static Double_t*fgV3pointer to V3 array of TTree::Draw (time); static Double_t*fgV4pointer to V4 array of TTree::Draw (btid). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMemStatShow(); {;}. virtual ~TMemStatShow(); {;}. void EventInfo1(Int_t event, Int_t px, Int_t py, TObject* selected). void EventInfo2(Int_t event, Int_t px, Int_t py, TObject* selected). void FillBTString(Int_t bin, Int_t mode, TString& btstring). void SetAddressRange(Long64_t nbytes = 0, Long64_t first = 0). void SetEntryRange(Long64_t nentries = 0, Long64_t first = 0). void Show(Double_t update = 0.1, Int_t nbigleaks = 20, const char* fname = ""*""). » Author: Rene Brun 21/09/2010 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/treeviewer:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMemStatShow.html:6796,Inherit,Inheritance,6796,root/html534/TMemStatShow.html,https://root.cern,https://root.cern/root/html534/TMemStatShow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"64_t GetCapacity () const;  Return capacity of the block. ;  ; Long64_t GetDataSize () const;  Return size of the data in the block. ;  ; Int_t * GetLen () const;  Get pointer to the array of lengths. ;  ; Int_t GetLen (Int_t) const;  Get length of the element at index i. ;  ; Int_t GetNoElem () const;  Return number of elements in the block. ;  ; Long64_t * GetPos () const;  Get pointer to the array of postions. ;  ; Long64_t GetPos (Int_t) const;  Get position of the element at index i. ;  ; char * GetPtrToPiece (Int_t index) const;  Get block buffer. ;  ; TClass * IsA () const override;  ; void ReallocBlock (Long64_t *, Int_t *, Int_t);  Reallocate the block's buffer based on the length of the elements it will contain. ;  ; void SetBuffer (char *);  Set block buffer. ;  ; void SetPos (Int_t, Long64_t);  Set pos value for index idx. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFPBlock.html:1803,inherit,inherited,1803,doc/master/classTFPBlock.html,https://root.cern,https://root.cern/doc/master/classTFPBlock.html,1,['inherit'],['inherited']
Modifiability,"64_t fSizeMin;  ; TGraph * fSizeP;  ; Float_t fStart;  ; Float_t fStop;  ; TList fWrkList;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for TProofPerfAnalysis::TFileInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html:10252,inherit,inherited,10252,doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,2,['inherit'],['inherited']
Modifiability,65.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90087,config,configuration,90087,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,65.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84707,config,configuration,84707,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"663e-18 9.36796e-18 1. MnGlobalCorrelationCoeff:. 0.408248; 0.547723; 0.621261; 0; 3.3 CVS code repository; How to check out (–in) code from the CVS code repository is described at the M homepage @bib-C++MINUIT. To get the source code from the CVS repository one needs to do:; Kerberos IV authorization:; $ setenv CVSROOT :kserver:SEAL.cvs.cern.ch:/cvs/SEAL. $ cvs co MathLibs/Minuit; Anonymous read-only access (if it’s enabled by the librarian, see details):; $ setenv CVSROOT :pserver:anonymous@SEAL.cvs.cern.ch:/cvs/SEAL. $ cvs login; (Logging in to :pserver:anonymous@seal.cvs.cern.ch:2401/cvs/SEAL) CVS password:cvs; $ cvs co MathLibs/Minuit; (If you want to check out a tagged version SEAL_x_x_x of MINUIT, then do; $ cvs co -r SEAL\_x\_x\_x MathLibs/Minuit ); 3.4 Create a tar.gz from CVS; Once the sources are checked out from the CVS code repository,. change to the directory:; $ cd MathLibs/Minuit; run autogen:; $ ./autogen; create a new directory:; $ cd ..; $ mkdir Minuit-BUILD; $ cd Minuit-BUILD/; run configure:; $ ../Minuit/configure; create the tar.gz:; $ make dist. This will create a Minuit-x.x.x.tar.gz which can be distributed and used as described above.; 3.5 M versions; The version numbers of M follow the release numbers of the SEAL project @bib-SEAL at CERN @bib-CERN.; 3.5.1 From to; The program is entirely written in standard portable . M does not depend on any external library. In its minimal usage the user must only provide an implementation of the FCNBase class to M and parameters and uncertainties in form of std::vector containers.; 3.5.2 Memory allocation and thread safety; Differently to the version of M , the version has its own memory manager (StackAllocator. The user can select between the standard dynamic memory allocation and deallocation (default) and performance-optimized stack–like allocation (optional). However, the library is not thread save using stack–allocation.; 3.5.3 M parameters; Differently to the version of M there is no limit on the n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:30083,config,configure,30083,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,4,['config'],['configure']
Modifiability,"664 of file RooAbsPdf.cxx. ◆ setNormRange(). void RooAbsPdf::setNormRange ; (; const char * ; rangeName). Definition at line 2726 of file RooAbsPdf.cxx. ◆ setNormRangeOverride(). void RooAbsPdf::setNormRangeOverride ; (; const char * ; rangeName). Definition at line 2746 of file RooAbsPdf.cxx. ◆ setTraceCounter(). void RooAbsPdf::setTraceCounter ; (; Int_t ; value, . bool ; allNodes = false . ). Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ; Definition at line 598 of file RooAbsPdf.cxx. ◆ specialGeneratorConfig() [1/2]. RooNumGenConfig * RooAbsPdf::specialGeneratorConfig ; (; ); const. Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned ; Definition at line 2623 of file RooAbsPdf.cxx. ◆ specialGeneratorConfig() [2/2]. RooNumGenConfig * RooAbsPdf::specialGeneratorConfig ; (; bool ; createOnTheFly). Returns the specialized integrator configuration for this RooAbsReal. ; If this object has no specialized configuration, a null pointer is returned, unless createOnTheFly is true in which case a clone of the default integrator configuration is created, installed as specialized configuration, and returned ; Definition at line 2636 of file RooAbsPdf.cxx. ◆ Streamer(). void RooAbsPdf::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in RooArgusBG, RooBCPEffDecay, RooBCPGenDecay, RooBDecay, RooBernstein, RooBifurGauss, RooBMixDecay, RooBreitWigner, RooBukinPdf, RooCBShape, RooCFunction1PdfBinding< VO, VI >, RooCFunction2PdfBinding< VO, VI1, VI2 >, RooCFunction3PdfBinding< VO, VI1, VI2, VI3 >, RooCFunction4PdfBinding< VO, VI1, VI2, VI3, VI4 >, RooChebychev, RooChiSquarePdf, RooCrystalBall, RooDecay, RooDstD0BG, RooExponential, RooFunctor1DPdfBinding, RooFunctorPdfBinding, RooGamma, RooGaussian, RooGaussModel, RooGExpModel, RooHistConstraint, R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:154174,config,configuration,154174,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['config'],['configuration']
Modifiability,667 0.0807629 0.00695777 43357.4 0; : 17 Minimum Test error found - save the configuration ; : 17 | 0.306787 0.297289 0.0804752 0.00690149 43493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.29682 0.292587 0.0806285 0.00686869 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 3.117e-01; : 2 : var1 : 2.504e-01; : 3 : var2 : 2.430e-01; : 4 : var3 : 1.949e-01; : --------------------------------------; MLP : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Importance; : -----------------------------; : 1 : var4 : 6.076e+01; : 2 : var2 : 4.824e+01; : 3 : var1 : 2.116e+01; : 4 : var3 : 1.692e+01; : -----------------------------; PDEFoam : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.991e-01; : 2 : var1 : 2.930e-01; : 3 : var3 : 2.365e-01; : 4 : var2 : 1.714e-01; : --------------------------------------; : No variable ranking supplied by classi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:17570,variab,variables,17570,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variables']
Modifiability,66865 1.0000 [ -2.9882 3.3086 ]; : var4: -0.20593 1.0000 [ -3.3088 2.8423 ]; : -----------------------------------------------------------; : Preparing the Principle Component (PCA) transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 5.7502e-10 1.8064 [ -8.0344 7.8312 ]; : var2:-1.6078e-11 0.90130 [ -2.6765 2.7523 ]; : var3: 3.0841e-10 0.73386 [ -2.6572 2.2255 ]; : var4:-2.6886e-10 0.62168 [ -1.7384 2.2297 ]; : -----------------------------------------------------------; : Preparing the Gaussian transformation...; : Preparing the Decorrelation transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.013510 1.0000 [ -2.6520 6.2074 ]; : var2: 0.0096839 1.0000 [ -2.8402 6.3073 ]; : var3: 0.010397 1.0000 [ -3.0251 5.8860 ]; : var4: 0.0053980 1.0000 [ -3.0998 5.7078 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; Factory : Train method: BDTG for Multiclass classification; : ; : Training 1000 Decision Trees ... patience please; : Elapsed time for training with 4000 events: 5.42 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of BDTG on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 1.89 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_BDTG.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_BDTG.class.C␛[0m; : TMVAMulticlass.root:/dataset/Method_BDT/BDTG; Factory : Training finished; : ; Factory : Train method: MLP for Multiclass classification; : ; : Training Network; : ; : Elapsed time for training with 4000 events: 23.9 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Mult,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:10336,variab,variables,10336,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variables']
Modifiability,67 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97303,config,configuration,97303,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,67 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80804,config,configuration,80804,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"67 return std::string(cwd);; 1468}; 1469 ; 1470//////////////////////////////////////////////////////////////////////////////; 1471/// Fill buffer with current working directory.; 1472 ; 1473void TUnixSystem::FillWithCwd(char *cwd) const; 1474{; 1475 if (::getcwd(cwd, kMAXPATHLEN) == nullptr) {; 1476 Error(""WorkingDirectory"", ""getcwd() failed"");; 1477 }; 1478}; 1479 ; 1480////////////////////////////////////////////////////////////////////////////////; 1481/// Return the user's home directory.; 1482 ; 1483const char *TUnixSystem::HomeDirectory(const char *userName); 1484{; 1485 return UnixHomedirectory(userName);; 1486}; 1487 ; 1488//////////////////////////////////////////////////////////////////////////////; 1489/// Return the user's home directory.; 1490 ; 1491std::string TUnixSystem::GetHomeDirectory(const char *userName) const; 1492{; 1493 char path[kMAXPATHLEN], mydir[kMAXPATHLEN] = { '\0' };; 1494 auto res = UnixHomedirectory(userName, path, mydir);; 1495 if (res) return std::string(res);; 1496 else return std::string();; 1497}; 1498 ; 1499////////////////////////////////////////////////////////////////////////////////; 1500/// Return a user configured or systemwide directory to create; 1501/// temporary files in.; 1502 ; 1503const char *TUnixSystem::TempDirectory() const; 1504{; 1505 const char *dir = gSystem->Getenv(""TMPDIR"");; 1506 if (!dir || gSystem->AccessPathName(dir, kWritePermission)); 1507 dir = ""/tmp"";; 1508 ; 1509 return dir;; 1510}; 1511 ; 1512////////////////////////////////////////////////////////////////////////////////; 1513/// Create a secure temporary file by appending a unique; 1514/// 6 letter string to base. The file will be created in; 1515/// a standard (system) directory or in the directory; 1516/// provided in dir. Optionally one can provide suffix; 1517/// append to the final name - like extension "".txt"" or "".html"".; 1518/// The full filename is returned in base; 1519/// and a filepointer is returned for safely writing to the file; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:45602,config,configured,45602,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['config'],['configured']
Modifiability,"675{; 3676 if (GetDimension() < 2) {; 3677 return fXaxis.FindBin(x);; 3678 }; 3679 if (GetDimension() < 3) {; 3680 Int_t nx = fXaxis.GetNbins()+2;; 3681 Int_t binx = fXaxis.FindBin(x);; 3682 Int_t biny = fYaxis.FindBin(y);; 3683 return binx + nx*biny;; 3684 }; 3685 if (GetDimension() < 4) {; 3686 Int_t nx = fXaxis.GetNbins()+2;; 3687 Int_t ny = fYaxis.GetNbins()+2;; 3688 Int_t binx = fXaxis.FindBin(x);; 3689 Int_t biny = fYaxis.FindBin(y);; 3690 Int_t binz = fZaxis.FindBin(z);; 3691 return binx + nx*(biny +ny*binz);; 3692 }; 3693 return -1;; 3694}; 3695 ; 3696////////////////////////////////////////////////////////////////////////////////; 3697/// Return Global bin number corresponding to x,y,z.; 3698///; 3699/// 2-D and 3-D histograms are represented with a one dimensional; 3700/// structure. This has the advantage that all existing functions, such as; 3701/// GetBinContent, GetBinError, GetBinFunction work for all dimensions.; 3702/// This function DOES NOT try to extend the axis if the given point belongs; 3703/// to an under-/overflow bin.; 3704///; 3705/// See also TH1::GetBin, TAxis::FindBin and TAxis::FindFixBin; 3706 ; 3707Int_t TH1::FindFixBin(Double_t x, Double_t y, Double_t z) const; 3708{; 3709 if (GetDimension() < 2) {; 3710 return fXaxis.FindFixBin(x);; 3711 }; 3712 if (GetDimension() < 3) {; 3713 Int_t nx = fXaxis.GetNbins()+2;; 3714 Int_t binx = fXaxis.FindFixBin(x);; 3715 Int_t biny = fYaxis.FindFixBin(y);; 3716 return binx + nx*biny;; 3717 }; 3718 if (GetDimension() < 4) {; 3719 Int_t nx = fXaxis.GetNbins()+2;; 3720 Int_t ny = fYaxis.GetNbins()+2;; 3721 Int_t binx = fXaxis.FindFixBin(x);; 3722 Int_t biny = fYaxis.FindFixBin(y);; 3723 Int_t binz = fZaxis.FindFixBin(z);; 3724 return binx + nx*(biny +ny*binz);; 3725 }; 3726 return -1;; 3727}; 3728 ; 3729////////////////////////////////////////////////////////////////////////////////; 3730/// Find first bin with content > threshold for axis (1=x, 2=y, 3=z); 3731/// if no bins with content > threshold i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:146985,extend,extend,146985,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extend']
Modifiability,"6760 } else if (callback_ret > 0) {; 16761 /* Callback > 0: Consider init done. */; 16762 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16763 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16764 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16765 return 0;; 16766 }; 16767 return 1;; 16768 }; 16769 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16770 * 0, CivetWeb should continue initializing SSL */; 16771 ; 16772 /* If PEM file is not specified and the init_ssl callbacks; 16773 * are not specified, setup will fail. */; 16774 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16775 && (phys_ctx->callbacks.init_ssl == NULL); 16776 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16777 /* No certificate and no init_ssl callbacks:; 16778 * Essential data to set up TLS is missing.; 16779 */; 16780 mg_cry_ctx_internal(phys_ctx,; 16781 ""Initializing SSL failed: -%s is not set"",; 16782 config_options[SSL_CERTIFICATE].name);; 16783 return 0;; 16784 }; 16785 ; 16786 /* If a certificate chain is configured, use it. */; 16787 chain = dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 16788 if (chain == NULL) {; 16789 /* Default: certificate chain in PEM file */; 16790 chain = pem;; 16791 }; 16792 if ((chain != NULL) && (*chain == 0)) {; 16793 /* If the chain is an empty string, don't use it. */; 16794 chain = NULL;; 16795 }; 16796 ; 16797 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16798 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16799 return 0;; 16800 }; 16801 ; 16802 return init_ssl_ctx_impl(phys_ctx, dom_ctx, pem, chain);; 16803}; 16804 ; 16805 ; 16806static void; 16807uninitialize_openssl(void); 16808{; 16809#if defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0); 16810 ; 16811 if (mg_atomic_dec(&cryptolib_users) == 0) {; 16812 ; 16813 /* Shutdown according to; 16814 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16815 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16816 */; 16817 CONF_modul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:498393,config,configured,498393,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"6761 } else if (callback_ret > 0) {; 16762 /* Callback > 0: Consider init done. */; 16763 dom_ctx->ssl_ctx = (SSL_CTX *)ssl_ctx;; 16764 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16765 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16766 return 0;; 16767 }; 16768 return 1;; 16769 }; 16770 /* else: external_ssl_ctx/external_ssl_ctx_domain do not exist or return; 16771 * 0, CivetWeb should continue initializing SSL */; 16772 ; 16773 /* If PEM file is not specified and the init_ssl callbacks; 16774 * are not specified, setup will fail. */; 16775 if (((pem = dom_ctx->config[SSL_CERTIFICATE]) == NULL); 16776 && (phys_ctx->callbacks.init_ssl == NULL); 16777 && (phys_ctx->callbacks.init_ssl_domain == NULL)) {; 16778 /* No certificate and no init_ssl callbacks:; 16779 * Essential data to set up TLS is missing.; 16780 */; 16781 mg_cry_ctx_internal(phys_ctx,; 16782 ""Initializing SSL failed: -%s is not set"",; 16783 config_options[SSL_CERTIFICATE].name);; 16784 return 0;; 16785 }; 16786 ; 16787 /* If a certificate chain is configured, use it. */; 16788 chain = dom_ctx->config[SSL_CERTIFICATE_CHAIN];; 16789 if (chain == NULL) {; 16790 /* Default: certificate chain in PEM file */; 16791 chain = pem;; 16792 }; 16793 if ((chain != NULL) && (*chain == 0)) {; 16794 /* If the chain is an empty string, don't use it. */; 16795 chain = NULL;; 16796 }; 16797 ; 16798 if (!initialize_openssl(ebuf, sizeof(ebuf))) {; 16799 mg_cry_ctx_internal(phys_ctx, ""%s"", ebuf);; 16800 return 0;; 16801 }; 16802 ; 16803 return init_ssl_ctx_impl(phys_ctx, dom_ctx, pem, chain);; 16804}; 16805 ; 16806 ; 16807static void; 16808uninitialize_openssl(void); 16809{; 16810#if defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0); 16811 ; 16812 if (mg_atomic_dec(&cryptolib_users) == 0) {; 16813 ; 16814 /* Shutdown according to; 16815 * https://wiki.openssl.org/index.php/Library_Initialization#Cleanup; 16816 * http://stackoverflow.com/questions/29845527/how-to-properly-uninitialize-openssl; 16817 */; 16818 CONF_modul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:498426,config,configured,498426,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['configured']
Modifiability,"68 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network training on CPU using MT, nthreads = 4; : ; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 300 ) Batch size = 256 Loss function = C; Layer 0 DENSE Layer: ( Input = 300 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:17263,config,configuration,17263,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,68 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100838,config,configuration,100838,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"68 case 3:; 3169 equi_bins = equi_bins && !fTotalHistogram->GetZaxis()->GetXbins()->fArray; 3170 && !fTotalHistogram->GetZaxis()->GetXbins()->fN;; 3171 case 2:; 3172 equi_bins = equi_bins && !fTotalHistogram->GetYaxis()->GetXbins()->fArray; 3173 && !fTotalHistogram->GetYaxis()->GetXbins()->fN;; 3174 case 1:; 3175 equi_bins = equi_bins && !fTotalHistogram->GetXaxis()->GetXbins()->fArray; 3176 && !fTotalHistogram->GetXaxis()->GetXbins()->fN;; 3177 }; 3178 ; 3179 //create arrays containing the variable binning; 3180 if(!equi_bins) {; 3181 Int_t i;; 3182 ++naxis;; 3183 sxaxis += naxis;; 3184 syaxis += naxis;; 3185 szaxis += naxis;; 3186 //x axis; 3187 out << indent << ""Double_t "" << sxaxis << ""[""; 3188 << fTotalHistogram->GetXaxis()->GetXbins()->fN << ""] = {"";; 3189 for (i = 0; i < fTotalHistogram->GetXaxis()->GetXbins()->fN; ++i) {; 3190 if (i != 0) out << "", "";; 3191 out << fTotalHistogram->GetXaxis()->GetXbins()->fArray[i];; 3192 }; 3193 out << ""}; "" << std::endl;; 3194 //y axis; 3195 if(GetDimension() > 1) {; 3196 out << indent << ""Double_t "" << syaxis << ""[""; 3197 << fTotalHistogram->GetYaxis()->GetXbins()->fN << ""] = {"";; 3198 for (i = 0; i < fTotalHistogram->GetYaxis()->GetXbins()->fN; ++i) {; 3199 if (i != 0) out << "", "";; 3200 out << fTotalHistogram->GetYaxis()->GetXbins()->fArray[i];; 3201 }; 3202 out << ""}; "" << std::endl;; 3203 }; 3204 //z axis; 3205 if(GetDimension() > 2) {; 3206 out << indent << ""Double_t "" << szaxis << ""[""; 3207 << fTotalHistogram->GetZaxis()->GetXbins()->fN << ""] = {"";; 3208 for (i = 0; i < fTotalHistogram->GetZaxis()->GetXbins()->fN; ++i) {; 3209 if (i != 0) out << "", "";; 3210 out << fTotalHistogram->GetZaxis()->GetXbins()->fArray[i];; 3211 }; 3212 out << ""}; "" << std::endl;; 3213 }; 3214 }//creating variable binning; 3215 ; 3216 //TEfficiency pointer has efficiency name + counter; 3217 static Int_t eff_count = 0;; 3218 ++eff_count;; 3219 TString eff_name = GetName();; 3220 eff_name += eff_count;; 3221 ; 3222 const char* name = eff_name.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:127038,variab,variable,127038,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6856 [ 0.38503 6.4013 ]; : m_wwbb: 0.96265 0.31608 [ 0.43228 4.5350 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; IdTransformation : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Separation; : -------------------------------; : 1 : m_bb : 9.511e-02; : 2 : m_wbb : 4.268e-02; : 3 : m_wwbb : 4.178e-02; : 4 : m_jjj : 2.825e-02; : 5 : m_jlv : 1.999e-02; : 6 : m_jj : 3.834e-03; : 7 : m_lv : 3.699e-03; : -------------------------------; Factory : Train method: Likelihood for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Likelihood ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The maximum-likelihood classifier models the data with probability ; : density functions (PDF) reproducing the signal and background; : distributions of the input variables. Correlations among the ; : variables are ignored.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Required for good performance are decorrelated input variables; : (PCA transformation via the option ""VarTransform=Decorrelate""; : may be tried). Irreducible non-linear correlations may be reduced; : by precombining strongly correlated input variables, or by simply; : removing one of the variables.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : High fidelity PDF estimates are mandatory, i.e., sufficient training ; : statistics is required to populate the tails of the distributions; : It would be a surprise if the default Spline or KDE kernel parameters; : provide a satisfying fit to the data. The user is advised to properly; : tune the events per bin and smooth options in the spline cases; : individually per variable. If the KDE kernel is used, the adaptive; : Gaussian kernel may lead to artefacts, so please always also try; : the non-adaptive one.; : ; : All tuning parameters must be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:16642,variab,variables,16642,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,2,['variab'],['variables']
Modifiability,69.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96177,config,configuration,96177,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"692 goto L800;; 5693 }; 5694 mnfree(-k);; 5695 }; 5696// if redefining previously variable parameter; 5697 if (fNiofex[k-1] > 0) kint = fNpar - 1;; 5698L50:; 5699 ; 5700// print heading; 5701 if (fLphead && fISW[4] >= 0) {; 5702 Printf("" PARAMETER DEFINITIONS:"");; 5703 Printf("" NO. NAME VALUE STEP SIZE LIMITS"");; 5704 fLphead = kFALSE;; 5705 }; 5706 if (wk > 0) goto L122;; 5707// constant parameter; 5708 if (fISW[4] >= 0) {; 5709 Printf("" %5d %-10s %13.5e constant"",k,(const char*)cnamk,uk);; 5710 }; 5711 nvl = 0;; 5712 goto L200;; 5713L122:; 5714 if (a == 0 && b == 0) {; 5715// variable parameter without limits; 5716 nvl = 1;; 5717 if (fISW[4] >= 0) {; 5718 Printf("" %5d %-10s %13.5e%13.5e no limits"",k,(const char*)cnamk,uk,wk);; 5719 }; 5720 } else {; 5721// variable parameter with limits; 5722 nvl = 4;; 5723 fLnolim = kFALSE;; 5724 if (fISW[4] >= 0) {; 5725 Printf("" %5d %-10s %13.5e%13.5e %13.5e%13.5e"",k,(const char*)cnamk,uk,wk,a,b);; 5726 }; 5727 }; 5728// request for another variable parameter; 5729 ++kint;; 5730 if (kint > fMaxint) {; 5731 Printf("" MINUIT USER ERROR. TOO MANY VARIABLE PARAMETERS."");; 5732 goto L800;; 5733 }; 5734 if (nvl == 1) goto L200;; 5735 if (a == b) {; 5736 Printf("" USER ERROR IN MINUIT PARAMETER"");; 5737 Printf("" DEFINITION"");; 5738 Printf("" UPPER AND LOWER LIMITS EQUAL."");; 5739 goto L800;; 5740 }; 5741 if (b < a) {; 5742 sav = b;; 5743 b = a;; 5744 a = sav;; 5745 mnwarn(""W"", ""PARAM DEF"", ""PARAMETER LIMITS WERE REVERSED."");; 5746 if (fLwarn) fLphead = kTRUE;; 5747 }; 5748 if (b - a > 1e7) {; 5749 mnwarn(""W"", ""PARAM DEF"", TString::Format(""LIMITS ON PARAM%d TOO FAR APART."",k));; 5750 if (fLwarn) fLphead = kTRUE;; 5751 }; 5752 danger = (b - uk)*(uk - a);; 5753 if (danger < 0) {; 5754 mnwarn(""W"", ""PARAM DEF"", ""STARTING VALUE OUTSIDE LIMITS."");; 5755 }; 5756 if (danger == 0) {; 5757 mnwarn(""W"", ""PARAM DEF"", ""STARTING VALUE IS AT LIMIT."");; 5758 }; 5759L200:; 5760// input OK, set values, arrange lists,; 5761// calculate step sizes GSTEP, DIRIN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:186818,variab,variable,186818,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6: ""myArr[myvar]/d[0,10]""; 113 - The `myvar` column, which holds the variable size, **MUST** be an `Int_t` (/I).; 114 ; 115- If the address points to a single numerical variable, the leaflist is optional:; 116~~~ {.cpp}; 117 int value;; 118 tree->Branch(branchname, &value);; 119~~~; 120- If the address points to more than one numerical variable, we strongly recommend; 121 that the variable be sorted in decreasing order of size. Any other order will; 122 result in a non-portable TTree (i.e. you will not be able to read it back on a; 123 platform with a different padding strategy).; 124 We recommend to persistify objects rather than composite leaflists.; 125- In case of the truncated floating point types (Float16_t and Double32_t) you can; 126 furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; 127 the type character. For example, for storing a variable size array `myArr` of; 128 `Double32_t` with values within a range of `[0, 2*pi]` and the size of which is stored; 129 in an `Int_t` (/I) branch called `myArrSize`, the syntax for the `leaflist` string would; 130 be: `myArr[myArrSize]/d[0,twopi]`. Of course the number of bits could be specified,; 131 the standard rules of opaque typedefs annotation are valid. For example, if only; 132 18 bits were sufficient, the syntax would become: `myArr[myArrSize]/d[0,twopi,18]`; 133 ; 134\anchor addingacolumnofstl; 135## Adding a column holding STL collection instances (e.g. std::vector, std::list, std::unordered_map); 136 ; 137~~~ {.cpp}; 138 auto branch = tree.Branch( branchname, STLcollection, buffsize, splitlevel);; 139~~~; 140STLcollection is the address of a pointer to std::vector, std::list,; 141std::deque, std::set or std::multiset containing pointers to objects.; 142If the splitlevel is a value bigger than 100 (TTree::kSplitCollectionOfPointers); 143then the collection will be written in split mode, e.g. if it contains objects of; 144any types deriving from TTrack this function will sort the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:6729,variab,variable,6729,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,"6; kBlue@ kBlueDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooKeysPdfClass RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution of...Definition RooKeysPdf.h:24; RooKeysPdf::NoMirror@ NoMirrorDefinition RooKeysPdf.h:26; RooKeysPdf::MirrorBoth@ MirrorBothDefinition RooKeysPdf.h:26; RooNDKeysPdfGeneric N-dimensional implementation of a kernel estimation p.d.f.Definition RooNDKeysPdf.h:44; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf707__kernelestimation_8C.html:5316,variab,variable,5316,doc/master/rf707__kernelestimation_8C.html,https://root.cern,https://root.cern/doc/master/rf707__kernelestimation_8C.html,1,['variab'],['variable']
Modifiability,"6] - build failure with mysql 8.3; [#14372] - File with mtime equal to 0 are ignored by Cling.; [#14333] - “Empty plot” for df014_CSVDataSource.C; [#14331] - Unexpected behaviour when using the Project3D function to make a TH2 from a TH3; [#14329] - [RF] RDataFrameToRooFit - Clarification on returned object; [#14324] - Compatibility Issue with thisroot.sh and zsh; [#14320] - [RF] Wrong analytic integrals when using Gaussians with sigma depending on the observable; [#14303] - Test failure with nbconvert-7.14; [#14302] - The command “root –notebook” is not allowed on Windows 11; [#14277] - Cling triggers a huge number of openat calls when loading libraries; [#14263] - [tmva] When using DNN_USE_CBLAS, CMakeLists should link publicly to gsl instead of privately; [#14256] - TAxis::GetTicks and TAxis::SetTicks are inconsistent. Significantly so.; [#14244] - String comparison operators defined in TString.h should be defined as constexpr; [#14229] - [6.30] root-config –git-revision broken; [#14225] - [RF] Segmentation fault in ROOT 6.30 workspace creation; [#14223] - Extremely long startup time when loading dictionaries with pyroot; [#14219] - [cling] Use deduction guides for llvm::ArrayRef; [#14211] - Implement value printing for std::source_location; [#14205] - [cling] Replace llvm::Optional and llvm::None with std::optional; [#14199] - Memory hoarding triggered by the TPluginManager; [#14188] - cmake find_package ROOT 6.30 broken: it requires nlohmann-json; [#14163] - cmake find_package ROOT broken with 6.30, nlohmann and vdt are builtin but not found; [#14162] - RooFFTConvPdf is not working for ROOT 6.30/02; [#14157] - Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; [#14113] - The find_package(root) command fails when using Root installed via Homebrew.; [#14101] - Missing documentation for RDataSetSpec; [#14097] - Cleaner stack traces in python; [#14085] - thisroot.sh does not recognize bash when running in qemu-x86_64; [#14084] - [n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:29860,config,config,29860,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['config'],['config']
Modifiability,"6} // namespace TMVA; CudaMatrix.h; CUDACHECK#define CUDACHECK(ans)Definition CudaMatrix.h:34; Device.h; Bool_tbool Bool_tDefinition RtypesCore.h:63; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; indexOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t indexDefinition TGWin32VirtualXProxy.cxx:168; TMVA::DNN::TCudaDeviceBufferTCudaDeviceBuffer.Definition CudaBuffers.h:101; TMVA::DNN::TCudaMatrixTCudaMatrix Class.Definition CudaMatrix.h:103; TMVA::DNN::TCudaMatrix::fElementBufferTCudaDeviceBuffer< AFloat > fElementBufferDefinition CudaMatrix.h:119; TMVA::DNN::TCudaMatrix::TCudaMatrixTCudaMatrix()Definition CudaMatrix.cu:57; TMVA::DNN::TCudaMatrix::InitializeCudavoid InitializeCuda()Initializes all shared devices resource and makes sure that a sufficient number of curand states are ...Definition CudaMatrix.cu:103; TMVA::DNN::TCudaMatrix::fNRowssize_t fNRowsDefinition CudaMatrix.h:117; TMVA::DNN::TCudaMatrix::fNColssize_t fNColsDefinition CudaMatrix.h:118; TMVA::DNN::TCudaMatrix::InitializeCurandStatesvoid InitializeCurandStates()Definition CudaMatrix.cu:140; TMVA::DNN::TDevice::BlockDims2Dstatic dim3 BlockDims2D()Definition Device.h:55; TMVA::DNN::TDevice::GridDims2Dstatic dim3 GridDims2D(int nrows, int ncols)Definition Device.h:74; TMVA::DNN::TDevice::NThreadsstatic int NThreads(const AMatrix &A)Definition Device.h:101; TMatrixTTMatrixT.Definition TMatrixT.h:40; double; nconst Int_t nDefinition legend1.C:16; TMVA::DNN::CurandInitializationKernel__global__ void CurandInitializationKernel(unsigned long long seed, curandState_t *state)Definition CudaMatrix.cu:26; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; mTMarker mDefinition textangle.C:8. tmvatmvasrcDNNArchitecturesCudaCudaMatrix.cu. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaMatrix_8cu_source.html:7907,variab,variable,7907,doc/master/CudaMatrix_8cu_source.html,https://root.cern,https://root.cern/doc/master/CudaMatrix_8cu_source.html,1,['variab'],['variable']
Modifiability,"6~~~ {.cpp}; 57 align = 10*HorizontalAlign + VerticalAlign; 58~~~; 59 ; 60For horizontal alignment the following convention applies:; 61 ; 62~~~ {.cpp}; 63 1=left adjusted, 2=centered, 3=right adjusted; 64~~~; 65 ; 66For vertical alignment the following convention applies:; 67 ; 68~~~ {.cpp}; 69 1=bottom adjusted, 2=centered, 3=top adjusted; 70~~~; 71 ; 72For example:; 73 ; 74~~~ {.cpp}; 75 align = 11 = left adjusted and bottom adjusted; 76 align = 32 = right adjusted and vertically centered; 77~~~; 78 ; 79Begin_Macro(source); 80textalign.C; 81End_Macro; 82 ; 83Mnemonic constants are available:; 84 ; 85~~~ {.cpp}; 86kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; 87kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; 88~~~; 89 ; 90They allow to write:; 91 ; 92~~~ {.cpp}; 93object->SetTextAlign(kHAlignLeft+kVAlignTop);; 94~~~; 95 ; 96\anchor ATTTEXT2; 97## Text Angle; 98 ; 99Text angle in degrees.; 100The text angle of any class inheriting from `TAttText` can; 101be changed using the method `SetTextAngle` and retrieved using the; 102method `GetTextAngle`.; 103The following picture shows the text angle:; 104 ; 105Begin_Macro(source); 106textangle.C; 107End_Macro; 108 ; 109\anchor ATTTEXT3; 110## Text Color; 111 ; 112The text color is a color index (integer) pointing in the ROOT; 113color table.; 114The text color of any class inheriting from `TAttText` can; 115be changed using the method `SetTextColor` and retrieved using the; 116method `GetTextColor`.; 117The following table shows the first 50 default colors.; 118 ; 119Begin_Macro; 120{; 121 TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; 122 c->DrawColorTable();; 123 return c;; 124}; 125End_Macro; 126 ; 127### Color transparency; 128`SetTextColorAlpha()`, allows to set a transparent color.; 129In the following example the text color of the text `text`; 130is set to blue with an opacity of 35% (i.e. a transparency of 65%).; 131(The color `kBlue` itself is internally stored as fully opaque.); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttText_8cxx_source.html:2888,inherit,inheriting,2888,doc/master/TAttText_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttText_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:26442,inherit,inherited,26442,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,8,['inherit'],['inherited']
Modifiability,7 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80351,config,configuration,80351,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7 DefaultDataSetInfo().AddSpectator( expression, title, unit, min, max );; 528}; 529 ; 530////////////////////////////////////////////////////////////////////////////////; 531/// default creation; 532 ; 533TMVA::DataSetInfo& TMVA::DataLoader::DefaultDataSetInfo(); 534{; 535 return AddDataSet( fName );; 536}; 537 ; 538////////////////////////////////////////////////////////////////////////////////; 539/// fill input variables in data set; 540 ; 541void TMVA::DataLoader::SetInputVariables( std::vector<TString>* theVariables ); 542{; 543 for (std::vector<TString>::iterator it=theVariables->begin();; 544 it!=theVariables->end(); ++it) AddVariable(*it);; 545}; 546 ; 547////////////////////////////////////////////////////////////////////////////////; 548 ; 549void TMVA::DataLoader::SetSignalWeightExpression( const TString& variable); 550{; 551 DefaultDataSetInfo().SetWeightExpression(variable, ""Signal"");; 552}; 553 ; 554////////////////////////////////////////////////////////////////////////////////; 555 ; 556void TMVA::DataLoader::SetBackgroundWeightExpression( const TString& variable); 557{; 558 DefaultDataSetInfo().SetWeightExpression(variable, ""Background"");; 559}; 560 ; 561////////////////////////////////////////////////////////////////////////////////; 562 ; 563void TMVA::DataLoader::SetWeightExpression( const TString& variable, const TString& className ); 564{; 565 //Log() << kWarning << DefaultDataSetInfo().GetNClasses() /*fClasses.size()*/ << Endl;; 566 if (className=="""") {; 567 SetSignalWeightExpression(variable);; 568 SetBackgroundWeightExpression(variable);; 569 }; 570 else DefaultDataSetInfo().SetWeightExpression( variable, className );; 571}; 572 ; 573////////////////////////////////////////////////////////////////////////////////; 574 ; 575void TMVA::DataLoader::SetCut( const TString& cut, const TString& className ) {; 576 SetCut( TCut(cut), className );; 577}; 578 ; 579////////////////////////////////////////////////////////////////////////////////; 580 ; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:21897,variab,variable,21897,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,2,['variab'],['variable']
Modifiability,"7 Int_t fBeepFreq{0}; //Used by Beep(); 288 Int_t fBeepDuration{0}; //Used by Beep(); 289 ; 290 Bool_t fInControl{kFALSE}; //True if in eventloop; 291 Bool_t fDone{kFALSE}; //True if eventloop should be finished; 292 Int_t fLevel{0}; //Level of nested eventloops; 293 ; 294 TList *fTimers{nullptr}; //List of timers; 295 TSeqCollection *fSignalHandler{nullptr}; //List of signal handlers; 296 TSeqCollection *fFileHandler{nullptr}; //List of file handlers; 297 TSeqCollection *fStdExceptionHandler{nullptr}; //List of std::exception handlers; 298 TSeqCollection *fOnExitList{nullptr}; //List of items to be cleaned-up on exit; 299 ; 300 TString fListLibs; //List shared libraries, cache used by GetLibraries; 301 ; 302 TString fBuildArch; //Architecture for which ROOT was built (passed to ./configure); 303 TString fBuildCompiler; //Compiler used to build this ROOT; 304 TString fBuildCompilerVersion; //Compiler version used to build this ROOT; 305 TString fBuildCompilerVersionStr; //Compiler version identifier string used to build this ROOT; 306 TString fBuildNode; //Detailed information where ROOT was built; 307 TString fBuildDir; //Location where to build ACLiC shared library and use as scratch area.; 308 TString fFlagsDebug; //Flags for debug compilation; 309 TString fFlagsOpt; //Flags for optimized compilation; 310 TString fListPaths; //List of all include (fIncludePath + interpreter include path). Cache used by GetIncludePath; 311 TString fIncludePath; //Used to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; 312 TString fLinkedLibs; //Used to expand $LinkedLibs in the directives given to SetMakeSharedLib and SetMakeExe; 313 TString fSoExt; //Extension of shared library (.so, .sl, .a, .dll, etc.); 314 TString fObjExt; //Extension of object files (.o, .obj, etc.); 315 EAclicMode fAclicMode{kDefault}; //Whether the compilation should be done debug or opt; 316 TString fMakeSharedLib; //Directive used to build a shared library; 317 TString fMake",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:11698,config,configure,11698,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['config'],['configure']
Modifiability,"7 Ssiz_t parStart = tdef.Index( ""("" );; 108 Ssiz_t parLen = tdef.Index( "")"", parStart )-parStart+1;; 109 ; 110 variables = tdef(parStart,parLen);; 111 tdef.Remove(parStart,parLen);; 112 variables.Remove(parLen-1,1);; 113 variables.Remove(0,1);; 114 }; 115 ; 116 TList* trClsList = gTools().ParseFormatLine( tdef, ""_"" ); // split entry to get trf-name and class-name; 117 TListIter trClsIt(trClsList);; 118 if (trClsList->GetSize() < 1); 119 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Incorrect transformation string provided."" << Endl;; 120 const TString& trName = ((TObjString*)trClsList->At(0))->GetString();; 121 ; 122 if (trClsList->GetEntries() > 1) {; 123 TString trCls = ""AllClasses"";; 124 ClassInfo *ci = NULL;; 125 trCls = ((TObjString*)trClsList->At(1))->GetString();; 126 if (trCls != ""AllClasses"") {; 127 ci = dataInfo.GetClassInfo( trCls );; 128 if (ci == NULL); 129 log << kFATAL <<Form(""Dataset[%s] : "",dataInfo.GetName())<< ""Class "" << trCls << "" not known for variable transformation ""; 130 << trName << "", please check."" << Endl;; 131 else; 132 idxCls = ci->GetNumber();; 133 }; 134 }; 135 ; 136 VariableTransformBase* transformation = NULL;; 137 if (trName == ""I"" || trName == ""Ident"" || trName == ""Identity"") {; 138 if (variables.Length() == 0) variables = ""_V_"";; 139 transformation = new VariableIdentityTransform(dataInfo);; 140 }; 141 else if (trName == ""D"" || trName == ""Deco"" || trName == ""Decorrelate"") {; 142 if (variables.Length() == 0) variables = ""_V_"";; 143 transformation = new VariableDecorrTransform(dataInfo);; 144 }; 145 else if (trName == ""P"" || trName == ""PCA"") {; 146 if (variables.Length() == 0) variables = ""_V_"";; 147 transformation = new VariablePCATransform(dataInfo);; 148 }; 149 else if (trName == ""U"" || trName == ""Uniform"") {; 150 if (variables.Length() == 0) variables = ""_V_,_T_"";; 151 transformation = new VariableGaussTransform(dataInfo, ""Uniform"" );; 152 }; 153 else if (trName == ""G"" || trName == ""Gauss"") {; 154 if (variables.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:5365,variab,variable,5365,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['variab'],['variable']
Modifiability,"7 of file RGeomData.cxx. ◆ ProduceDrawData(). void RGeomDescription::ProduceDrawData ; (; ). Collect all information required to draw geometry on the client This includes list of each visible nodes, meshes and matrixes. ; Definition at line 1358 of file RGeomData.cxx. ◆ ProduceDrawingFor(). bool RGeomDescription::ProduceDrawingFor ; (; int ; nodeid, . std::string & ; json, . bool ; check_volume = false . ). Produce shape rendering data for given stack All nodes, which are referencing same shape will be transferred Returns true if new render information provided. ; Definition at line 1757 of file RGeomData.cxx. ◆ ProduceIdShifts(). void RGeomDescription::ProduceIdShifts ; (; ). private . Count total number of visible childs under each node. ; Definition at line 629 of file RGeomData.cxx. ◆ ProduceJson(). std::string RGeomDescription::ProduceJson ; (; bool ; all_nodes = false). Produce JSON string which can be directly used with build function from JSROOT to create three.js model of configured geometry. ; Collect all information required to draw geometry on the client This includes list of each visible nodes, meshes and matrixes IfParameters. all_nodesis true, all existing nodes will be provided, which allows to create complete nodes hierarchy on client side. Example of usage:; void geom() { auto f = TFile::Open(""file_name.root""); auto vol = f->Get<TGeoVolume>(""object_name""); ROOT::RGeomDescription desc; desc.Build(vol); std::ofstream fout(""geom.json""); fout << desc.ProduceJson(); }; In JSROOT one loads data from JSON file and call build function to produce three.js model. Also see example in tutorials/webgui/geom/ folder ; Definition at line 1230 of file RGeomData.cxx. ◆ ProduceModifyReply(). std::string RGeomDescription::ProduceModifyReply ; (; int ; nodeid). Return string with only part of nodes description which were modified Checks also volume. ; Definition at line 1734 of file RGeomData.cxx. ◆ ProduceSearchData(). void RGeomDescription::ProduceSearchData ; (; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html:22519,config,configured,22519,doc/v632/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html,2,['config'],['configured']
Modifiability,"7 of file TStreamerInfoActions.cxx. ◆ ReadTextObject(). Int_t TStreamerInfoActions::ReadTextObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 293 of file TStreamerInfoActions.cxx. ◆ ReadTextStreamer(). Int_t TStreamerInfoActions::ReadTextStreamer ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 315 of file TStreamerInfoActions.cxx. ◆ ReadTextTNamed(). Int_t TStreamerInfoActions::ReadTextTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 335 of file TStreamerInfoActions.cxx. ◆ ReadTextTObject(). Int_t TStreamerInfoActions::ReadTextTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 300 of file TStreamerInfoActions.cxx. ◆ ReadTextTObjectBase(). Int_t TStreamerInfoActions::ReadTextTObjectBase ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 327 of file TStreamerInfoActions.cxx. ◆ ReadTNamed(). Int_t TStreamerInfoActions::ReadTNamed ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 950 of file TStreamerInfoActions.cxx. ◆ ReadTObject(). Int_t TStreamerInfoActions::ReadTObject ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 940 of file TStreamerInfoActions.cxx. ◆ ReadTString(). Int_t TStreamerInfoActions::ReadTString ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 930 of file TStreamerInfoActions.cxx. ◆ SelectLooper(). ESelectLooper TStreamerInfoActions::SelectLooper ; (; TVirtualCollectionProxy & ; proxy). Definition at line 1699 of file TStreamerInfoActions.cxx. ◆ UseCache(). Int_t TStreamerInfoActions::UseCache ; (; TBuffer & ; b, . void * ; addr, . const TConfiguration * ; conf . ). inline . Definition a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:16219,config,config,16219,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,"7 virtual bool selfNormalized() const {; 208 return false ;; 209 }; 210 ; 211 // Support for extended maximum likelihood, switched off by default; 212 enum ExtendMode { CanNotBeExtended, CanBeExtended, MustBeExtended } ;; 213 /// Returns ability of PDF to provide extended likelihood terms. Possible; 214 /// answers are in the enumerator RooAbsPdf::ExtendMode.; 215 /// This default implementation always returns CanNotBeExtended.; 216 virtual ExtendMode extendMode() const { return CanNotBeExtended; }; 217 /// If true, PDF can provide extended likelihood term.; 218 inline bool canBeExtended() const {; 219 return (extendMode() != CanNotBeExtended) ;; 220 }; 221 /// If true PDF must provide extended likelihood term.; 222 inline bool mustBeExtended() const {; 223 return (extendMode() == MustBeExtended) ;; 224 }; 225 /// Return expected number of events to be used in calculation of extended; 226 /// likelihood.; 227 virtual double expectedEvents(const RooArgSet* nset) const ;; 228 /// Return expected number of events to be used in calculation of extended; 229 /// likelihood. This function should not be overridden, as it just redirects; 230 /// to the actual virtual function but takes a RooArgSet reference instead of; 231 /// pointer. \see expectedEvents(const RooArgSet*) const; 232 double expectedEvents(const RooArgSet& nset) const {; 233 return expectedEvents(&nset) ;; 234 }; 235 ; 236 virtual std::unique_ptr<RooAbsReal> createExpectedEventsFunc(const RooArgSet* nset) const;; 237 ; 238 // Printing interface (human readable); 239 void printValue(std::ostream& os) const override ;; 240 void printMultiline(std::ostream& os, Int_t contents, bool verbose=false, TString indent="""") const override ;; 241 ; 242 static void verboseEval(Int_t stat) ;; 243 static int verboseEval() ;; 244 ; 245 double extendedTerm(double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;; 246 double extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:11041,extend,extended,11041,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,1,['extend'],['extended']
Modifiability,"7 void *x = (void *)(((char *)addr) + config->fOffset);; 278 // Idea: Implement buf.ReadBasic/Primitive to avoid the return value; 279 ((TBufferText *)&buf)->WriteBaseClass(x, (TStreamerBase *)config->fCompInfo->fElem);; 280 return 0;; 281 }; 282 ; 283 INLINE_TEMPLATE_ARGS Int_t WriteTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config); 284 {; 285 void *x = (void *)(((char *)addr) + config->fOffset);; 286 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 287 UInt_t pos = buf.WriteVersion(config->fInfo->IsA(), kTRUE);; 288 (*pstreamer)(buf, x, config->fCompInfo->fLength);; 289 buf.SetByteCount(pos, kTRUE);; 290 return 0;; 291 }; 292 ; 293 INLINE_TEMPLATE_ARGS Int_t ReadTextObject(TBuffer &buf, void *addr, const TConfiguration *config); 294 {; 295 void *x = (void *)(((char *)addr) + config->fOffset);; 296 buf.ReadFastArray(x, config->fCompInfo->fClass, config->fCompInfo->fLength, config->fCompInfo->fStreamer);; 297 return 0;; 298 }; 299 ; 300 INLINE_TEMPLATE_ARGS Int_t ReadTextTObject(TBuffer &buf, void *addr, const TConfiguration *config); 301 {; 302 void *x = (void *)(((char *)addr) + config->fOffset);; 303 buf.StreamObject(x, TObject::Class(), TObject::Class());; 304 return 0;; 305 }; 306 ; 307 INLINE_TEMPLATE_ARGS Int_t ReadTextBaseClass(TBuffer &buf, void *addr, const TConfiguration *config); 308 {; 309 void *x = (void *)(((char *)addr) + config->fOffset);; 310 // Idea: Implement buf.ReadBasic/Primitive to avoid the return value; 311 ((TBufferText *)&buf)->ReadBaseClass(x, (TStreamerBase *)config->fCompInfo->fElem);; 312 return 0;; 313 }; 314 ; 315 INLINE_TEMPLATE_ARGS Int_t ReadTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config); 316 {; 317 void *x = (void *)(((char *)addr) + config->fOffset);; 318 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 319 ; 320 UInt_t start, count;; 321 /* Version_t v = */ buf.ReadVersion(&start, &count, config->fCompInfo->fClass);; 322 (*pstreamer)(buf, x, config->fCompInfo->fLen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:11045,config,config,11045,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,5,['config'],['config']
Modifiability,"7#include ""TH2.h""; 18#include ""TVirtualPad.h""; 19#include <iostream>; 20#include ""TColor.h""; 21#include ""TVirtualFitter.h""; 22#include ""Math/IntegratorOptions.h""; 23#include ""snprintf.h""; 24 ; 25ClassImp(TF2);; 26 ; 27/** \class TF2; 28 \ingroup Functions; 29 \brief A 2-Dim function with parameters.; 30 ; 31The following types of functions can be created:; 32 ; 331. [Expression using variables x and y](\ref TF2a); 342. [Expression using a user defined function](\ref TF2b); 353. [Lambda Expression with x and y variables and parameters](\ref TF2c); 36 ; 37\anchor TF2a; 38### Expression using variables x and y; 39 ; 40Begin_Macro (source); 41{; 42 auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; 43 f2->Draw();; 44}; 45End_Macro; 46 ; 47\anchor TF2b; 48### Expression using a user defined function; 49 ; 50~~~~{.cpp}; 51Double_t func(Double_t *val, Double_t *par); 52{; 53 Float_t x = val[0];; 54 Float_t y = val[1];; 55 Double_t f = x*x-y*y;; 56 return f;; 57}; 58 ; 59void fplot(); 60{; 61 auto f = new TF2(""f"",func,-1,1,-1,1);; 62 f->Draw(""surf1"");; 63}; 64~~~~; 65 ; 66\anchor TF2c; 67### Lambda Expression with x and y variables and parameters; 68 ; 69~~~~{.cpp}; 70root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1); 71(TF2 &) Name: f2 Title: f2; 72root [1] f2.SetParameter(0, 1.); 73root [2] f2.Eval(1., 2.); 74(double) 3.0000000; 75~~~~; 76 ; 77See TF1 class for the list of functions formats; 78*/; 79 ; 80////////////////////////////////////////////////////////////////////////////////; 81/// TF2 default constructor; 82 ; 83TF2::TF2(): fYmin(0),fYmax(0),fNpy(100); 84{; 85}; 86 ; 87 ; 88////////////////////////////////////////////////////////////////////////////////; 89/// F2 constructor using a formula definition; 90///; 91/// See TFormula constructor for explanation of the formula syntax.; 92///; 93/// If formula has the form ""fffffff;xxxx;yyyy"", it is assumed that; 94/// the formula string is ""fffffff"" and ""xxxx"" and ""yyy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF2_8cxx_source.html:1858,variab,variables,1858,doc/master/TF2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF2_8cxx_source.html,1,['variab'],['variables']
Modifiability,7.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88333,config,configuration,88333,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7/// instead of a TH2F histogram by specifying option=prof or option=profs; 4308/// or option=profi or option=profg ; the trailing letter select the way; 4309/// the bin error are computed, See TProfile2D::SetErrorOption for; 4310/// details on the differences.; 4311/// The option=prof is automatically selected in case of y:x>>pf; 4312/// where pf is an existing TProfile histogram.; 4313///; 4314/// ### Making a 2D Profile histogram; 4315///; 4316/// In case of a 3-Dim expression, one can generate a TProfile2D histogram; 4317/// instead of a TH3F histogram by specifying option=prof or option=profs.; 4318/// or option=profi or option=profg ; the trailing letter select the way; 4319/// the bin error are computed, See TProfile2D::SetErrorOption for; 4320/// details on the differences.; 4321/// The option=prof is automatically selected in case of z:y:x>>pf; 4322/// where pf is an existing TProfile2D histogram.; 4323///; 4324/// ### Making a 5D plot using GL; 4325///; 4326/// If option GL5D is specified together with 5 variables, a 5D plot is drawn; 4327/// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; 4328///; 4329/// ### Making a parallel coordinates plot; 4330///; 4331/// In case of a 2-Dim or more expression with the option=para, one can generate; 4332/// a parallel coordinates plot. With that option, the number of dimensions is; 4333/// arbitrary. Giving more than 4 variables without the option=para or; 4334/// option=candle or option=goff will produce an error.; 4335///; 4336/// ### Making a candle sticks chart; 4337///; 4338/// In case of a 2-Dim or more expression with the option=candle, one can generate; 4339/// a candle sticks chart. With that option, the number of dimensions is; 4340/// arbitrary. Giving more than 4 variables without the option=para or; 4341/// option=candle or option=goff will produce an error.; 4342///; 4343/// ### Normalizing the output histogram to 1; 4344///; 4345/// When option contains ""norm"" the output histogram is norm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:174353,variab,variables,174353,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variables']
Modifiability,"7/// macrofilename_methodname in each of 6 main selector methods if the method; 6728/// macrofilename_methodname exist (Where macrofilename is stripped of its; 6729/// extension).; 6730///; 6731/// Concretely, with the script named h1analysisProxy.C,; 6732///; 6733/// - The method calls the method (if it exist); 6734/// - Begin -> void h1analysisProxy_Begin(TTree*);; 6735/// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; 6736/// - Notify -> bool h1analysisProxy_Notify();; 6737/// - Process -> bool h1analysisProxy_Process(Long64_t);; 6738/// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; 6739/// - Terminate -> void h1analysisProxy_Terminate();; 6740///; 6741/// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; 6742/// it is included before the declaration of the proxy class. This can; 6743/// be used in particular to insure that the include files needed by; 6744/// the macro file are properly loaded.; 6745///; 6746/// The default histogram is accessible via the variable named 'htemp'.; 6747///; 6748/// If the library of the classes describing the data in the branch is; 6749/// loaded, the skeleton will add the needed `include` statements and; 6750/// give the ability to access the object stored in the branches.; 6751///; 6752/// To draw px using the file hsimple.root (generated by the; 6753/// hsimple.C tutorial), we need a file named hsimple.cxx:; 6754/// ~~~ {.cpp}; 6755/// double hsimple() {; 6756/// return px;; 6757/// }; 6758/// ~~~; 6759/// MakeProxy can then be used indirectly via the TTree::Draw interface; 6760/// as follow:; 6761/// ~~~ {.cpp}; 6762/// new TFile(""hsimple.root""); 6763/// ntuple->Draw(""hsimple.cxx"");; 6764/// ~~~; 6765/// A more complete example is available in the tutorials directory:; 6766/// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; 6767/// which reimplement the selector found in h1analysis.C; 6768 ; 6769Int_t TTree::MakeProxy(const char* proxyClassname, const char* macrofil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:263906,variab,variable,263906,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['variab'],['variable']
Modifiability,71.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91884,config,configuration,91884,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"72 TVirtualStreamerInfo *sinfo = ((TClass *)this)->GetCurrentStreamerInfo();; 2273 if (sinfo==nullptr) sinfo = GetStreamerInfo();; 2274 TIter next(sinfo->GetElements());; 2275 TStreamerElement *element;; 2276 while ((element = (TStreamerElement*)next())) {; 2277 if (element->IsA() == TStreamerBase::Class()) {; 2278 TClass *clbase = element->GetClassPointer();; 2279 if (!clbase) {; 2280 // If there is a missing base class, we can't split the immediate; 2281 // derived class.; 2282 fCanSplit = 0;; 2283 return kFALSE;; 2284 } else if (!clbase->CanSplitBaseAllow()) {; 2285 fCanSplit = 2;; 2286 return kFALSE;; 2287 }; 2288 }; 2289 }; 2290 }; 2291 ; 2292 // If we don't have data member info there is no more information; 2293 // we can find out.; 2294 if (!HasDataMemberInfo()) return kTRUE;; 2295 ; 2296 TObjLink *lnk = GetListOfBases() ? fBase.load()->FirstLink() : nullptr;; 2297 ; 2298 // Look at inheritance tree; 2299 while (lnk) {; 2300 TBaseClass *base = (TBaseClass*) lnk->GetObject();; 2301 TClass *c = base->GetClassPointer();; 2302 if(!c) {; 2303 // If there is a missing base class, we can't split the immediate; 2304 // derived class.; 2305 fCanSplit = 0;; 2306 return kFALSE;; 2307 } else if (!c->CanSplitBaseAllow()) {; 2308 fCanSplit = 2;; 2309 return kFALSE;; 2310 }; 2311 lnk = lnk->Next();; 2312 }; 2313 return kTRUE;; 2314}; 2315 ; 2316////////////////////////////////////////////////////////////////////////////////; 2317/// Return true if the data member of this TClass can be saved separately.; 2318 ; 2319Bool_t TClass::CanSplit() const; 2320{; 2321 // Note: add the possibility to set it for the class and the derived class.; 2322 // save the info in TVirtualStreamerInfo; 2323 // deal with the info in MakeProject; 2324 if (fCanSplit >= 0) {; 2325 // The user explicitly set the value; 2326 return (fCanSplit & 0x1) == 1;; 2327 }; 2328 ; 2329 R__LOCKGUARD(gInterpreterMutex);; 2330 TClass *This = const_cast<TClass*>(this);; 2331 ; 2332 if (this == TObject::Class()) { T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:86817,inherit,inheritance,86817,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"72 of file VavilovAccuratePdf.h. Public Member Functions;  VavilovAccuratePdf ();  Default constructor. ;  ;  VavilovAccuratePdf (const double *p);  Constructor with parameter values. ;  ;  ~VavilovAccuratePdf () override;  Destructor. ;  ; IBaseFunctionOneDim * Clone () const override;  Return a clone of the object. ;  ; double DoEval (double x) const override;  Evaluate the function. ;  ; double DoEvalPar (double x, const double *p) const override;  Evaluate the function, using parameters p. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; std::string ParameterName (unsigned int i) const override;  Return the name of the i-th parameter (starting from zero) ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionOneDim; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  . Private Attributes; double fP [5];  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/VavilovAccuratePdf.h>. Inheritance diagram for ROOT::Math::VavilovAccuratePdf:. This browser is not able to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html:2037,inherit,inherited,2037,doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,1,['inherit'],['inherited']
Modifiability,"721///; 722/// See also RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset),; 723/// which takes a dataset to extract \f$N_\mathrm{observed}\f$ and the; 724/// normalization set.; 725double RooAbsPdf::extendedTerm(double sumEntries, RooArgSet const* nset, double sumEntriesW2, bool doOffset) const; 726{; 727 return extendedTerm(sumEntries, expectedEvents(nset), sumEntriesW2, doOffset);; 728}; 729 ; 730double RooAbsPdf::extendedTerm(double sumEntries, double expected, double sumEntriesW2, bool doOffset) const; 731{; 732 // check if this PDF supports extended maximum likelihood fits; 733 if(!canBeExtended()) {; 734 coutE(InputArguments) << GetName() << "": this PDF does not support extended maximum likelihood""; 735 << std::endl;; 736 return 0.0;; 737 }; 738 ; 739 if(expected < 0.0) {; 740 coutE(InputArguments) << GetName() << "": calculated negative expected events: "" << expected; 741 << std::endl;; 742 logEvalError(""extendedTerm #expected events is <0 return a NaN"");; 743 return TMath::QuietNaN();; 744 }; 745 ; 746 ; 747 // Explicitly handle case Nobs=Nexp=0; 748 if (std::abs(expected)<1e-10 && std::abs(sumEntries)<1e-10) {; 749 return 0.0;; 750 }; 751 ; 752 // Check for errors in Nexpected; 753 if (TMath::IsNaN(expected)) {; 754 logEvalError(""extendedTerm #expected events is a NaN"") ;; 755 return TMath::QuietNaN() ;; 756 }; 757 ; 758 double extra = doOffset; 759 ? (expected - sumEntries) - sumEntries * (std::log(expected) - std::log(sumEntries)); 760 : expected - sumEntries * std::log(expected);; 761 ; 762 if(sumEntriesW2 != 0.0) {; 763 extra *= sumEntriesW2 / sumEntries;; 764 }; 765 ; 766 return extra;; 767}; 768 ; 769////////////////////////////////////////////////////////////////////////////////; 770/// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); 771/// of this PDF for the given number of observed events.; 772///; 773/// This function is a wrapper around; 774/// Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:29639,extend,extendedTerm,29639,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extendedTerm']
Modifiability,724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.53,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95499,config,configuration,95499,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91602,config,configuration,91602,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92221,config,configuration,92221,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"73///; 2474/// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection.; 2475 ; 2476TH1D *TH2::ProjectionY(const char *name, Int_t firstxbin, Int_t lastxbin, Option_t *option) const; 2477{; 2478 return DoProjection(false, name, firstxbin, lastxbin, option);; 2479}; 2480 ; 2481 ; 2482////////////////////////////////////////////////////////////////////////////////; 2483/// Replace current statistics with the values in array stats; 2484 ; 2485void TH2::PutStats(Double_t *stats); 2486{; 2487 TH1::PutStats(stats);; 2488 fTsumwy = stats[4];; 2489 fTsumwy2 = stats[5];; 2490 fTsumwxy = stats[6];; 2491}; 2492 ; 2493 ; 2494////////////////////////////////////////////////////////////////////////////////; 2495/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the median); 2498/// An approximate error for the quantile is computed assuming that the distribution in; 2499/// the other variable is normal. According to this approximate formula the error on the quantile is; 2500/// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; 2501/// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; 2502/// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; 2503/// a normal distribution.; 2504 ; 2505TH1D* TH2::QuantilesX( Double_t prob, const char * name) const; 2506{; 2507 return DoQuantiles(true, name, prob);; 2508}; 2509 ; 2510 ; 2511////////////////////////////////////////////////////////////////////////////////; 2512/// Compute the Y distribution of quantiles in the other variable X; 2513/// name is the name of the returned histogram; 2514/// prob is the probability content for the quantile (0.5 is the default for the median); 2515/// An approxima",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:102549,variab,variable,102549,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['variab'],['variable']
Modifiability,"740///; 2741/// If dirmode is not zero and we need to create the target directory, the; 2742/// file mode bit will be change to 'dirmode' using chmod.; 2743///; 2744/// If library_specified is not specified, CompileMacro generate a default name; 2745/// for library by taking the name of the file ""filename"" but replacing the; 2746/// dot before the extension by an underscore and by adding the shared; 2747/// library extension for the current platform.; 2748/// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; 2749///; 2750/// It uses the directive fMakeSharedLibs to create a shared library.; 2751/// If loading the shared library fails, it tries to output a list of missing; 2752/// symbols by creating an executable (on some platforms like OSF, this does; 2753/// not HAVE to be an executable) containing the script. It uses the; 2754/// directive fMakeExe to do so.; 2755/// For both directives, before passing them to TSystem::Exec, it expands the; 2756/// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; 2757/// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; 2758/// information on those variables.; 2759///; 2760/// This method is used to implement the following feature:; 2761///; 2762/// Synopsis:; 2763///; 2764/// The purpose of this addition is to allow the user to use an external; 2765/// compiler to create a shared library from its C++ macro (scripts).; 2766/// Currently in order to execute a script, a user has to type at the root; 2767/// prompt; 2768/// ~~~ {.cpp}; 2769/// .X myfunc.C(arg1,arg2); 2770/// ~~~; 2771/// We allow them to type:; 2772/// ~~~ {.cpp}; 2773/// .X myfunc.C++(arg1,arg2); 2774/// ~~~; 2775/// or; 2776/// ~~~ {.cpp}; 2777/// .X myfunc.C+(arg1,arg2); 2778/// ~~~; 2779/// In which case an external compiler will be called to create a shared; 2780/// library. This shared library will then be loaded and the function; 2781/// myfunc will be called with the two arguments. With '++' t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:90055,variab,variables,90055,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['variab'],['variables']
Modifiability,74992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:107353,config,configuration,107353,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,75 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.8151 0.020039 0.00176037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.722,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:101737,config,configuration,101737,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"75 for (unsigned int i = 1; i < n; ++i) {; 376 prod *= 1.0 - a[i];; 377 }; 378 ; 379 return prod;; 380}; 381 ; 382inline double cbShape(double m, double m0, double sigma, double alpha, double n); 383{; 384 double t = (m - m0) / sigma;; 385 if (alpha < 0); 386 t = -t;; 387 ; 388 double absAlpha = std::abs((double)alpha);; 389 ; 390 if (t >= -absAlpha) {; 391 return std::exp(-0.5 * t * t);; 392 } else {; 393 double a = std::pow(n / absAlpha, n) * std::exp(-0.5 * absAlpha * absAlpha);; 394 double b = n / absAlpha - absAlpha;; 395 ; 396 return a / std::pow(b - t, n);; 397 }; 398}; 399 ; 400// For RooCBShape; 401inline double approxErf(double arg); 402{; 403 if (arg > 5.0); 404 return 1.0;; 405 if (arg < -5.0); 406 return -1.0;; 407 ; 408 return TMath::Erf(arg);; 409}; 410 ; 411/// @brief Function to calculate the integral of an un-normalized RooGaussian over x. To calculate the integral over; 412/// mean, just interchange the respective values of x and mean.; 413/// @param xMin Minimum value of variable to integrate wrt.; 414/// @param xMax Maximum value of of variable to integrate wrt.; 415/// @param mean Mean.; 416/// @param sigma Sigma.; 417/// @return The integral of an un-normalized RooGaussian over the value in x.; 418inline double gaussianIntegral(double xMin, double xMax, double mean, double sigma); 419{; 420 // The normalisation constant 1./sqrt(2*pi*sigma^2) is left out in evaluate().; 421 // Therefore, the integral is scaled up by that amount to make RooFit normalise; 422 // correctly.; 423 double resultScale = 0.5 * std::sqrt(TMath::TwoPi()) * sigma;; 424 ; 425 // Here everything is scaled and shifted into a standard normal distribution:; 426 double xscale = TMath::Sqrt2() * sigma;; 427 double scaledMin = 0.;; 428 double scaledMax = 0.;; 429 scaledMin = (xMin - mean) / xscale;; 430 scaledMax = (xMax - mean) / xscale;; 431 ; 432 // Here we go for maximum precision: We compute all integrals in the UPPER; 433 // tail of the Gaussian, because erfc has the highes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:12819,variab,variable,12819,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,1,['variab'],['variable']
Modifiability,"76 of file RooPlot.cxx. ◆ RooPlot() [3/9]. RooPlot::RooPlot ; (; const RooAbsRealLValue & ; var, . double ; xmin, . double ; xmax, . Int_t ; nBins . ). Create an 1-dimensional with all properties taken from 'var', but with an explicit range [xmin,xmax] and a default binning of 'nbins'. ; Definition at line 199 of file RooPlot.cxx. ◆ RooPlot() [4/9]. RooPlot::RooPlot ; (; double ; xmin, . double ; xmax, . int ; nBins = 100 . ). Constructor of RooPlot with range [xmin,xmax]. ; Definition at line 96 of file RooPlot.cxx. ◆ RooPlot() [5/9]. RooPlot::RooPlot ; (; double ; xmin, . double ; xmax, . double ; ymin, . double ; ymax . ). Construct of a two-dimensional RooPlot with ranges [xmin,xmax] x [ymin,ymax]. ; Definition at line 113 of file RooPlot.cxx. ◆ RooPlot() [6/9]. Use RooPlot::RooPlot ; (; double ; xmin, . double ; xmax . ). ◆ RooPlot() [7/9]. RooPlot::RooPlot ; (; const RooAbsRealLValue & ; var1, . const RooAbsRealLValue & ; var2 . ). Construct a two-dimensional RooPlot with ranges and properties taken from variables var1 and var2. ; Definition at line 145 of file RooPlot.cxx. ◆ RooPlot() [8/9]. RooPlot::RooPlot ; (; const RooAbsRealLValue & ; var1, . const RooAbsRealLValue & ; var2, . double ; xmin, . double ; xmax, . double ; ymin, . double ; ymax . ). Construct a two-dimensional RooPlot with ranges and properties taken from variables var1 and var2 but with an overriding range definition of [xmin,xmax] x [ymin,ymax]. ; Definition at line 161 of file RooPlot.cxx. ◆ ~RooPlot(). RooPlot::~RooPlot ; (; ). override . Destructor. ; Definition at line 314 of file RooPlot.cxx. ◆ RooPlot() [9/9]. RooPlot::RooPlot ; (; const RooPlot & ; other). delete . Member Function Documentation. ◆ AddDirectory(). static void RooPlot::AddDirectory ; (; bool ; add = true). inlinestatic . Configure whether new instances of RooPlot will add themselves to gDirectory. ; Like TH1::AddDirectory(). ; Definition at line 197 of file RooPlot.h. ◆ addDirectoryStatus(). bool RooPlot::addDirectoryS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:28679,variab,variables,28679,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['variab'],['variables']
Modifiability,76259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:108976,config,configuration,108976,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7668 /* port remains 0 if the protocol is not found */; 17669 return 0;; 17670 }; 17671 ; 17672 /* Check if the request is directed to a different server. */; 17673 /* First check if the port is the same. */; 17674 if (ntohs(USA_IN_PORT_UNSAFE(&conn->client.lsa)) != port) {; 17675 /* Request is directed to a different port */; 17676 return 0;; 17677 }; 17678 ; 17679 /* Finally check if the server corresponds to the authentication; 17680 * domain of the server (the server domain).; 17681 * Allow full matches (like http://mydomain.com/path/file.ext), and; 17682 * allow subdomain matches (like http://www.mydomain.com/path/file.ext),; 17683 * but do not allow substrings (like; 17684 * http://notmydomain.com/path/file.ext; 17685 * or http://mydomain.com.fake/path/file.ext).; 17686 */; 17687 if (auth_domain_check_enabled) {; 17688 server_domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 17689 server_domain_len = strlen(server_domain);; 17690 if ((server_domain_len == 0) || (hostbegin == NULL)) {; 17691 return 0;; 17692 }; 17693 if ((request_domain_len == server_domain_len); 17694 && (!memcmp(server_domain, hostbegin, server_domain_len))) {; 17695 /* Request is directed to this server - full name match. */; 17696 } else {; 17697 if (request_domain_len < (server_domain_len + 2)) {; 17698 /* Request is directed to another server: The server name; 17699 * is longer than the request name.; 17700 * Drop this case here to avoid overflows in the; 17701 * following checks. */; 17702 return 0;; 17703 }; 17704 if (hostbegin[request_domain_len - server_domain_len - 1] != '.') {; 17705 /* Request is directed to another server: It could be a; 17706 * substring; 17707 * like notmyserver.com */; 17708 return 0;; 17709 }; 17710 if (0; 17711 != memcmp(server_domain,; 17712 hostbegin + request_domain_len - server_domain_len,; 17713 server_domain_len)) {; 17714 /* Request is directed to another server:; 17715 * The server name is different. */; 17716 return 0;; 17717 }; 17718 }; 17719 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:525673,config,config,525673,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"7669 /* port remains 0 if the protocol is not found */; 17670 return 0;; 17671 }; 17672 ; 17673 /* Check if the request is directed to a different server. */; 17674 /* First check if the port is the same. */; 17675 if (ntohs(USA_IN_PORT_UNSAFE(&conn->client.lsa)) != port) {; 17676 /* Request is directed to a different port */; 17677 return 0;; 17678 }; 17679 ; 17680 /* Finally check if the server corresponds to the authentication; 17681 * domain of the server (the server domain).; 17682 * Allow full matches (like http://mydomain.com/path/file.ext), and; 17683 * allow subdomain matches (like http://www.mydomain.com/path/file.ext),; 17684 * but do not allow substrings (like; 17685 * http://notmydomain.com/path/file.ext; 17686 * or http://mydomain.com.fake/path/file.ext).; 17687 */; 17688 if (auth_domain_check_enabled) {; 17689 server_domain = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 17690 server_domain_len = strlen(server_domain);; 17691 if ((server_domain_len == 0) || (hostbegin == NULL)) {; 17692 return 0;; 17693 }; 17694 if ((request_domain_len == server_domain_len); 17695 && (!memcmp(server_domain, hostbegin, server_domain_len))) {; 17696 /* Request is directed to this server - full name match. */; 17697 } else {; 17698 if (request_domain_len < (server_domain_len + 2)) {; 17699 /* Request is directed to another server: The server name; 17700 * is longer than the request name.; 17701 * Drop this case here to avoid overflows in the; 17702 * following checks. */; 17703 return 0;; 17704 }; 17705 if (hostbegin[request_domain_len - server_domain_len - 1] != '.') {; 17706 /* Request is directed to another server: It could be a; 17707 * substring; 17708 * like notmyserver.com */; 17709 return 0;; 17710 }; 17711 if (0; 17712 != memcmp(server_domain,; 17713 hostbegin + request_domain_len - server_domain_len,; 17714 server_domain_len)) {; 17715 /* Request is directed to another server:; 17716 * The server name is different. */; 17717 return 0;; 17718 }; 17719 }; 17720 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:525706,config,config,525706,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"77 UInt_t n = (((char*)end)-((char*)start))/incr;; 1878 char **arrptr = new char*[n];; 1879 UInt_t i = 0;; 1880 for(void *iter = start; iter != end; iter = (char*)iter + incr, ++i ) {; 1881 arrptr[i] = (char*)iter;; 1882 }; 1883 ((TStreamerInfo*)config->fInfo)->ReadBuffer(buf, arrptr, &(config->fCompInfo), /*first*/ 0, /*last*/ 1, /*narr*/ n, config->fOffset, 1|2 );; 1884 delete [] arrptr;; 1885 return 0;; 1886 }; 1887 ; 1888 static INLINE_TEMPLATE_ARGS Int_t GenericWrite(TBuffer &buf, void *start, const void *end, const TLoopConfiguration * loopconfig, const TConfiguration *config); 1889 {; 1890 // Well the implementation is non trivial. For now punt.; 1891 ; 1892 UInt_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1893 UInt_t n = (((char*)end)-((char*)start))/incr;; 1894 char **arrptr = new char*[n];; 1895 UInt_t i = 0;; 1896 for(void *iter = start; iter != end; iter = (char*)iter + incr, ++i ) {; 1897 arrptr[i] = (char*)iter;; 1898 }; 1899 ((TStreamerInfo*)config->fInfo)->WriteBufferAux(buf, arrptr, &(config->fCompInfo), /*first*/ 0, /*last*/ 1, n, config->fOffset, 1|2 );; 1900 delete [] arrptr;; 1901 return 0;; 1902 }; 1903 ; 1904 template <typename T>; 1905 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionBasicType(TBuffer &buf, void *addr, const TConfiguration *conf); 1906 {; 1907 // Collection of numbers. Memberwise or not, it is all the same.; 1908 ; 1909 TConfigSTL *config = (TConfigSTL*)conf;; 1910 UInt_t start, count;; 1911 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1912 ; 1913 std::vector<T> *const vec = (std::vector<T>*)(((char*)addr)+config->fOffset);; 1914 Int_t nvalues;; 1915 buf.ReadInt(nvalues);; 1916 vec->resize(nvalues);; 1917 ; 1918#ifdef R__VISUAL_CPLUSPLUS; 1919 if (nvalues <= 0) {; 1920 buf.CheckByteCount(start,count,config->fTypeName);; 1921 return 0;; 1922 }; 1923#endif; 1924 T *begin = &(*vec->begin());; 1925 buf.ReadFastArray(begin, nvalues);; 1926 ; 1927 buf.CheckByteCount(start,count,config->fType",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:79445,config,config,79445,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"77216 (\ref floatmax ""***""); 128 - TH3D : histograms with one double per channel. Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax ""****""); 129 - Profile histograms: See classes TProfile, TProfile2D and TProfile3D.; 130 Profile histograms are used to display the mean value of Y and its standard deviation; 131 for each bin in X. Profile histograms are in many cases an elegant; 132 replacement of two-dimensional histograms : the inter-relation of two; 133 measured quantities X and Y can always be visualized by a two-dimensional; 134 histogram or scatter-plot; If Y is an unknown (but single-valued); 135 approximate function of X, this function is displayed by a profile; 136 histogram with much better precision than by a scatter-plot.; 137 ; 138<sup>; 139\anchor intmax (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 140\anchor llongmax (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; 141\anchor floatmax (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; 142\anchor doublemax (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); 143</sup>; 144 ; 145The inheritance hierarchy looks as follows:; 146 ; 147\image html classTH1__inherit__graph_org.svg width=100%; 148 ; 149\anchor creating-histograms; 150## Creating histograms; 151 ; 152Histograms are created by invoking one of the constructors, e.g.; 153~~~ {.cpp}; 154 TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; 155 TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);; 156~~~; 157Histograms may also be created by:; 158 ; 159 - ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:6736,variab,variable,6736,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"78 fU[ke1-1] = xsav;; 1279 fU[ke2-1] = ysav;; 1280 ierrf = 0;; 1281 return;; 1282L1350:; 1283 Printf("" INVALID PARAMETER NUMBER(S) REQUESTED. IGNORED."");; 1284 ierrf = 1;; 1285}; 1286 ; 1287////////////////////////////////////////////////////////////////////////////////; 1288/// Reads a command string and executes; 1289///; 1290/// Called by user. 'Reads' a command string and executes.; 1291/// Equivalent to MNEXCM except that the command is given as a; 1292/// character string.; 1293///; 1294/// ICONDN =; 1295/// - 0: command executed normally; 1296/// - 1: command is blank, ignored; 1297/// - 2: command line unreadable, ignored; 1298/// - 3: unknown command, ignored; 1299/// - 4: abnormal termination (e.g., MIGRAD not converged); 1300/// - 5: command is a request to read PARAMETER definitions; 1301/// - 6: 'SET INPUT' command; 1302/// - 7: 'SET TITLE' command; 1303/// - 8: 'SET COVAR' command; 1304/// - 9: reserved; 1305/// - 10: END command; 1306/// - 11: EXIT or STOP command; 1307/// - 12: RETURN command; 1308///; 1309 ; 1310void TMinuit::mncomd(const char *crdbin, Int_t &icondn); 1311{; 1312 /* Local variables */; 1313 Int_t ierr, ipos, i, llist, lenbuf, lnc;; 1314 Bool_t leader;; 1315 TString comand, crdbuf, ctemp;; 1316 ; 1317 crdbuf = crdbin;; 1318 crdbuf.ToUpper();; 1319 lenbuf = crdbuf.Length();; 1320 icondn = 0;; 1321// record not case-sensitive, get upper case, strip leading blanks; 1322 leader = kTRUE;; 1323 ipos = 1;; 1324 for (i = 1; i <= TMath::Min(20,lenbuf); ++i) {; 1325 if (crdbuf[i-1] == '\'') break;; 1326 if (crdbuf[i-1] == ' ') {; 1327 if (leader) ++ipos;; 1328 continue;; 1329 }; 1330 leader = kFALSE;; 1331 }; 1332 ; 1333// blank or null command; 1334 if (ipos > lenbuf) {; 1335 Printf("" BLANK COMMAND IGNORED."");; 1336 icondn = 1;; 1337 return;; 1338 }; 1339// preemptive commands; 1340// if command is 'PARAMETER'; 1341 if (crdbuf(ipos-1,3) == ""PAR"") {; 1342 icondn = 5;; 1343 fLphead = kTRUE;; 1344 return;; 1345 }; 1346// if command is 'SET INPUT'",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:45610,variab,variables,45610,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"78/// Note that the mouse does not need to be in the pad or even canvas; 279/// when it is released.; 280 ; 281void TAxis::ExecuteEvent(Int_t event, Int_t px, Int_t py); 282{; 283 if (!gPad) return;; 284 gPad->ExecuteEventAxis(event,px,py,this);; 285}; 286 ; 287////////////////////////////////////////////////////////////////////////////////; 288/// Find bin number corresponding to abscissa x. NOTE: this method does not work with alphanumeric bins !!!; 289///; 290/// If x is underflow or overflow, attempt to extend the axis if TAxis::kCanExtend is true.; 291/// Otherwise, return 0 or fNbins+1.; 292 ; 293Int_t TAxis::FindBin(Double_t x); 294{; 295 Int_t bin;; 296 // NOTE: This should not be allowed for Alphanumeric histograms,; 297 // but it is heavily used (legacy) in the TTreePlayer to fill alphanumeric histograms.; 298 // but in case of alphanumeric do-not extend the axis. It makes no sense; 299 if (IsAlphanumeric() && gDebug) Info(""FindBin"",""Numeric query on alphanumeric axis - Sorting the bins or extending the axes / rebinning can alter the correspondence between the label and the bin interval."");; 300 if (x < fXmin) { //*-* underflow; 301 bin = 0;; 302 if (fParent == nullptr) return bin;; 303 if (!CanExtend() || IsAlphanumeric() ) return bin;; 304 ((TH1*)fParent)->ExtendAxis(x,this);; 305 return FindFixBin(x);; 306 } else if ( !(x < fXmax)) { //*-* overflow (note the way to catch NaN); 307 bin = fNbins+1;; 308 if (fParent == nullptr) return bin;; 309 if (!CanExtend() || IsAlphanumeric() ) return bin;; 310 ((TH1*)fParent)->ExtendAxis(x,this);; 311 return FindFixBin(x);; 312 } else {; 313 if (!fXbins.fN) { //*-* fix bins; 314 bin = 1 + int (fNbins*(x-fXmin)/(fXmax-fXmin) );; 315 } else { //*-* variable bin sizes; 316 //for (bin =1; x >= fXbins.fArray[bin]; bin++);; 317 bin = 1 + TMath::BinarySearch(fXbins.fN,fXbins.fArray,x);; 318 }; 319 }; 320 return bin;; 321}; 322 ; 323////////////////////////////////////////////////////////////////////////////////; 324/// Find",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:8894,extend,extending,8894,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['extend'],['extending']
Modifiability,78412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.974,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:109593,config,configuration,109593,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"79 ; 780 // Compute the first endpoint codes.; 781 Int_t code1 = ClippingCode(x[0],y[0],xclipl,yclipb,xclipr,yclipt);; 782 Int_t code2 = ClippingCode(x[1],y[1],xclipl,yclipb,xclipr,yclipt);; 783 ; 784 Double_t xt=0, yt=0;; 785 Int_t clipped = 0; //this variable could be used in a future version; 786 while(code1 + code2) {; 787 clipped = 1;; 788 ; 789 // The line lies entirely outside the clipping boundary; 790 if (code1&code2) {; 791 clip = 2;; 792 return clip;; 793 }; 794 ; 795 // The line is subdivided into several parts; 796 Int_t ic = code1;; 797 if (ic == 0) ic = code2;; 798 if (ic & 0x1) {; 799 yt = y[0] + (y[1]-y[0])*(xclipl-x[0])/(x[1]-x[0]);; 800 xt = xclipl;; 801 }; 802 if (ic & 0x2) {; 803 yt = y[0] + (y[1]-y[0])*(xclipr-x[0])/(x[1]-x[0]);; 804 xt = xclipr;; 805 }; 806 if (ic & 0x4) {; 807 xt = x[0] + (x[1]-x[0])*(yclipb-y[0])/(y[1]-y[0]);; 808 yt = yclipb;; 809 }; 810 if (ic & 0x8) {; 811 xt = x[0] + (x[1]-x[0])*(yclipt-y[0])/(y[1]-y[0]);; 812 yt = yclipt;; 813 }; 814 if (ic == code1) {; 815 x[0] = xt;; 816 y[0] = yt;; 817 code1 = ClippingCode(xt,yt,xclipl,yclipb,xclipr,yclipt);; 818 } else {; 819 x[1] = xt;; 820 y[1] = yt;; 821 code2 = ClippingCode(xt,yt,xclipl,yclipb,xclipr,yclipt);; 822 }; 823 }; 824 clip = clipped;; 825 return clip;; 826}; 827 ; 828/// @copydoc TPad::Clip(Float_t*,Float_t*,Float_t,Float_t,Float_t,Float_t); 829 ; 830Int_t TPad::Clip(Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt); 831{; 832 const Double_t kP = 10000;; 833 Int_t clip = 0;; 834 ; 835 for (Int_t i=0;i<2;i++) {; 836 if (TMath::Abs(xclipl-x[i]) <= TMath::Abs(xclipr-xclipl)/kP) x[i] = xclipl;; 837 if (TMath::Abs(xclipr-x[i]) <= TMath::Abs(xclipr-xclipl)/kP) x[i] = xclipr;; 838 if (TMath::Abs(yclipb-y[i]) <= TMath::Abs(yclipt-yclipb)/kP) y[i] = yclipb;; 839 if (TMath::Abs(yclipt-y[i]) <= TMath::Abs(yclipt-yclipb)/kP) y[i] = yclipt;; 840 }; 841 ; 842 // Compute the first endpoint codes.; 843 Int_t code1 = 0;; 844 if (x[0] < xclipl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:24581,variab,variable,24581,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['variab'],['variable']
Modifiability,796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.02,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95385,config,configuration,95385,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,79972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.218,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:105334,config,configuration,105334,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"7; TMVA::Types::kMaxAnalysisType@ kMaxAnalysisTypeDefinition Types.h:131; TMVA::Types::kRegression@ kRegressionDefinition Types.h:128; TMVA::Types::fLoggerMsgLogger * fLogger! message loggerDefinition Types.h:181; TMVA::Types::ETreeTypeETreeTypeDefinition Types.h:142; TMVA::Types::kMaxTreeType@ kMaxTreeTypealso used as temporary storage for trees not yet assigned for testing;training...Definition Types.h:145; TMVA::Types::kTrainingOriginal@ kTrainingOriginalever neededDefinition Types.h:147; TMVA::Types::kTraining@ kTrainingDefinition Types.h:143; TMVA::Types::kValidation@ kValidationthese are placeholders... currently not used, but could be moved ""forward"" ifDefinition Types.h:146; TMVA::Types::kTesting@ kTestingDefinition Types.h:144; TMVA::Types::LogMsgLogger & Log() constDefinition Types.h:182; TMVA::Types::TypesTypes()constructorDefinition Types.cxx:56; TMVA::VITypeVITypeDefinition Types.h:69; TMVA::kRandom@ kRandomDefinition Types.h:69; TMVA::kAll@ kAllDefinition Types.h:69; TMVA::kShort@ kShortDefinition Types.h:69; TMVA::EMsgTypeEMsgTypeDefinition Types.h:55; TMVA::kSILENT@ kSILENTDefinition Types.h:62; TMVA::kDEBUG@ kDEBUGDefinition Types.h:56; TMVA::kVERBOSE@ kVERBOSEDefinition Types.h:57; TMVA::kHEADER@ kHEADERDefinition Types.h:63; TMVA::kERROR@ kERRORDefinition Types.h:60; TMVA::kINFO@ kINFODefinition Types.h:58; TMVA::kWARNING@ kWARNINGDefinition Types.h:59; TMVA::kFATAL@ kFATALDefinition Types.h:61; TMVA::HistTypeHistTypeDefinition Types.h:66; TMVA::kRarityType@ kRarityTypeDefinition Types.h:66; TMVA::kCompareType@ kCompareTypeDefinition Types.h:66; TMVA::kProbaType@ kProbaTypeDefinition Types.h:66; TMVA::kMVAType@ kMVATypeDefinition Types.h:66; TMVA::TMVAVersion_tUInt_t TMVAVersion_tDefinition Types.h:49; TStringBasic string class.Definition TString.h:139; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22. tmvatmvaincTMVATypes.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:40 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html:11032,variab,variable,11032,doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,1,['variab'],['variable']
Modifiability,"7={}, const RooCmdArg& arg8={}) const ;; 205 ; 206 /// Create integral over observables in iset in range named rangeName.; 207 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const char* rangeName) const {; 208 return createIntegral(iset,nullptr,nullptr,rangeName) ;; 209 }; 210 /// Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset; 211 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooArgSet& nset, const char* rangeName=nullptr) const {; 212 return createIntegral(iset,&nset,nullptr,rangeName) ;; 213 }; 214 /// Create integral over observables in iset in range named rangeName with integrand normalized over observables in nset while; 215 /// using specified configuration for any numeric integration.; 216 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooArgSet& nset, const RooNumIntConfig& cfg, const char* rangeName=nullptr) const {; 217 return createIntegral(iset,&nset,&cfg,rangeName) ;; 218 }; 219 /// Create integral over observables in iset in range named rangeName using specified configuration for any numeric integration.; 220 RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooNumIntConfig& cfg, const char* rangeName=nullptr) const {; 221 return createIntegral(iset,nullptr,&cfg,rangeName) ;; 222 }; 223 virtual RooFit::OwningPtr<RooAbsReal> createIntegral(const RooArgSet& iset, const RooArgSet* nset=nullptr, const RooNumIntConfig* cfg=nullptr, const char* rangeName=nullptr) const ;; 224 ; 225 ; 226 void setParameterizeIntegral(const RooArgSet& paramVars) ;; 227 ; 228 // Create running integrals; 229 RooFit::OwningPtr<RooAbsReal> createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset={}) ;; 230 RooFit::OwningPtr<RooAbsReal> createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2={},; 231 const RooCmdArg& arg3={}, const RooCmdArg& arg4={},; 232 const RooCmdA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:10711,config,configuration,10711,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['config'],['configuration']
Modifiability,8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85161,config,configuration,85161,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89522,config,configuration,89522,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,8 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83859,config,configuration,83859,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"8 [[maybe_unused]] static const auto _res = []() {; 1609 gROOT->ProcessLine(""TF1::InitStandardFunctions();"");; 1610 isInited = true;; 1611 return true;; 1612 }();; 1613 return fFunctions->FindObject(name);; 1614}; 1615 ; 1616////////////////////////////////////////////////////////////////////////////////; 1617 ; 1618TFunctionTemplate *TROOT::GetFunctionTemplate(const char *name); 1619{; 1620 if (!gInterpreter) return nullptr;; 1621 ; 1622 if (!fFuncTemplate) fFuncTemplate = new TListOfFunctionTemplates(nullptr);; 1623 ; 1624 return (TFunctionTemplate*)fFuncTemplate->FindObject(name);; 1625}; 1626 ; 1627////////////////////////////////////////////////////////////////////////////////; 1628/// Return pointer to global variable by name. If load is true force; 1629/// reading of all currently defined globals from CINT (more expensive).; 1630 ; 1631TGlobal *TROOT::GetGlobal(const char *name, Bool_t load) const; 1632{; 1633 return (TGlobal *)gROOT->GetListOfGlobals(load)->FindObject(name);; 1634}; 1635 ; 1636////////////////////////////////////////////////////////////////////////////////; 1637/// Return pointer to global variable with address addr.; 1638 ; 1639TGlobal *TROOT::GetGlobal(const TObject *addr, Bool_t /* load */) const; 1640{; 1641 if (addr == nullptr || ((Longptr_t)addr) == -1) return nullptr;; 1642 ; 1643 TInterpreter::DeclId_t decl = gInterpreter->GetDataMemberAtAddr(addr);; 1644 if (decl) {; 1645 TListOfDataMembers *globals = ((TListOfDataMembers*)(gROOT->GetListOfGlobals(kFALSE)));; 1646 return (TGlobal*)globals->Get(decl);; 1647 }; 1648 // If we are actually looking for a global that is held by a global; 1649 // pointer (for example gRandom), we need to find a pointer with the; 1650 // correct value.; 1651 decl = gInterpreter->GetDataMemberWithValue(addr);; 1652 if (decl) {; 1653 TListOfDataMembers *globals = ((TListOfDataMembers*)(gROOT->GetListOfGlobals(kFALSE)));; 1654 return (TGlobal*)globals->Get(decl);; 1655 }; 1656 return nullptr;; 1657}; 1658 ; 165",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:63032,variab,variable,63032,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['variab'],['variable']
Modifiability,"8 errdef = 0; // ??; 909 nparx = fNpar;; 910 nvpar = 0;; 911 for(Int_t ii=0; ii<fNpar; ii++) {; 912 if(fPL0[ii]>0.) nvpar++;; 913 }; 914 return 0;; 915}; 916 ; 917////////////////////////////////////////////////////////////////////////////////; 918/// Return Sum(log(i) i=0,n; 919/// used by log-likelihood fits; 920 ; 921Double_t TFumili::GetSumLog(Int_t n); 922{; 923 if (n < 0) return 0;; 924 if (n > fNlog) {; 925 if (fSumLog) delete [] fSumLog;; 926 fNlog = 2*n+1000;; 927 fSumLog = new Double_t[fNlog+1];; 928 Double_t fobs = 0;; 929 for (Int_t j=0;j<=fNlog;j++) {; 930 if (j > 1) fobs += TMath::Log(j);; 931 fSumLog[j] = fobs;; 932 }; 933 }; 934 if (fSumLog) return fSumLog[n];; 935 return 0;; 936}; 937 ; 938////////////////////////////////////////////////////////////////////////////////; 939/// Inverts packed diagonal matrix Z by square-root method.; 940/// Matrix elements corresponding to; 941/// fix parameters are removed.; 942///; 943/// - n: number of variable parameters; 944 ; 945void TFumili::InvertZ(Int_t n); 946{; 947 static Double_t am = 3.4e138;; 948 static Double_t rp = 5.0e-14;; 949 Double_t ap, aps, c, d;; 950 Double_t *r_1=fR;; 951 Double_t *pl_1=fPL;; 952 Double_t *z_1=fZ;; 953 Int_t i, k, l, ii, ki, li, kk, ni, ll, nk, nl, ir, lk;; 954 if (n < 1) {; 955 return;; 956 }; 957 --pl_1;; 958 --r_1;; 959 --z_1;; 960 aps = am / n;; 961 aps = sqrt(aps);; 962 ap = 1.0e0 / (aps * aps);; 963 ir = 0;; 964 for (i = 1; i <= n; ++i) {; 965 L1:; 966 ++ir;; 967 if (pl_1[ir] <= 0.0e0) goto L1;; 968 else goto L2;; 969 L2:; 970 ni = i * (i - 1) / 2;; 971 ii = ni + i;; 972 k = n + 1;; 973 if (z_1[ii] <= rp * TMath::Abs(r_1[ir]) || z_1[ii] <= ap) {; 974 goto L19;; 975 }; 976 z_1[ii] = 1.0e0 / sqrt(z_1[ii]);; 977 nl = ii - 1;; 978 L3:; 979 if (nl - ni <= 0) goto L5;; 980 else goto L4;; 981 L4:; 982 z_1[nl] *= z_1[ii];; 983 if (TMath::Abs(z_1[nl]) >= aps) {; 984 goto L16;; 985 }; 986 --nl;; 987 goto L3;; 988 L5:; 989 if (i - n >= 0) goto L12;; 990 else goto L6;; 991 L6:; 992 -",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:28028,variab,variable,28028,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,1,['variab'],['variable']
Modifiability,"8 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [4/7]. RooSimultaneous::RooSimultaneous ; (; const char * ; name, . const char * ; title, . RooFit::Detail::FlatMap< std::string, RooAbsPdf * > const & ; pdfMap, . RooAbsCategoryLValue & ; inIndexCat . ). For internal use in RooFit. ; Definition at line 155 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [5/7]. RooSimultaneous::RooSimultaneous ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inPdfList, . RooAbsCategoryLValue & ; inIndexCat . ). Constructor from index category and full list of PDFs. ; In this constructor form, a PDF must be supplied for each indexCat state to avoid ambiguities. The PDFs are associated with the states of the index category as they appear when iterating through the category states with RooAbsCategory::begin() and RooAbsCategory::end(). This usually means they are associated by ascending index numbers.; PDFs may not overlap (i.e. share any variables) with the index category (function) ; Definition at line 132 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [6/7]. RooSimultaneous::RooSimultaneous ; (; const RooSimultaneous & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 339 of file RooSimultaneous.cxx. ◆ ~RooSimultaneous(). RooSimultaneous::~RooSimultaneous ; (; ). override . Destructor. ; Definition at line 358 of file RooSimultaneous.cxx. ◆ RooSimultaneous() [7/7]. RooSimultaneous::RooSimultaneous ; (; const char * ; name, . const char * ; title, . RooSimultaneous::InitializationOutput && ; initInfo . ). private . Private internal constructor. ; Definition at line 162 of file RooSimultaneous.cxx. Member Function Documentation. ◆ addPdf(). bool RooSimultaneous::addPdf ; (; const RooAbsPdf & ; pdf, . const char * ; catLabel . ). Associate given PDF with index category state label 'catLabel'. ; The name state must be already defined in the index category.; RooSimultaneous can function without having a PDF associated with eve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:80522,variab,variables,80522,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['variab'],['variables']
Modifiability,"8 of file TProof.cxx. ◆ LoadPackage(). Int_t TProof::LoadPackage ; (; const char * ; package, . Bool_t ; notOnClient = kFALSE, . TList * ; loadopts = 0, . TList * ; workers = 0 . ). private . Load specified package. ; Executes the PROOF-INF/SETUP.C script on all active nodes. If notOnClient = true, don't load package on the client. The default is to load the package also on the client. The argument 'loadopts' specify a list of objects to be passed to the SETUP. The objects in the list must be streamable; the SETUP macro will be executed like this: SETUP.C(loadopts). Returns 0 in case of success and -1 in case of error. ; Definition at line 8069 of file TProof.cxx. ◆ LogMessage(). void TProof::LogMessage ; (; const char * ; msg, . Bool_t ; all . ). Log a message into the appropriate window by emitting a signal. ; Definition at line 6414 of file TProof.cxx. ◆ LogViewer(). void TProof::LogViewer ; (; const char * ; url = 0, . Int_t ; sessionidx = 0 . ). static . Start the log viewer window usign the plugin manager. ; Definition at line 12470 of file TProof.cxx. ◆ MakePlayer(). TVirtualProofPlayer * TProof::MakePlayer ; (; const char * ; player = 0, . TSocket * ; s = 0 . ). protectedvirtual . Construct a TProofPlayer object. ; The player string specifies which player should be created: remote, slave, sm (supermaster) or base. Default is remote. Socket is needed in case a slave player is created. ; Reimplemented in TProofSuperMaster.; Definition at line 10211 of file TProof.cxx. ◆ MarkBad() [1/2]. void TProof::MarkBad ; (; TSlave * ; wrk, . const char * ; reason = 0 . ). private . Add a bad slave server to the bad slave list and remove it from the active list and from the two monitor objects. ; Assume that the work done by this worker was lost and ask packerizer to reassign it. ; Definition at line 4521 of file TProof.cxx. ◆ MarkBad() [2/2]. void TProof::MarkBad ; (; TSocket * ; s, . const char * ; reason = 0 . ). private . Add slave with socket s to the bad slave list a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:115859,plugin,plugin,115859,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['plugin'],['plugin']
Modifiability,"8 virtual double getNorm(const RooArgSet* set=nullptr) const ;; 199 ; 200 virtual void resetErrorCounters(Int_t resetValue=10) ;; 201 void setTraceCounter(Int_t value, bool allNodes=false) ;; 202 ; 203 double analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName=nullptr) const override ;; 204 ; 205 /// Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term.; 206 /// Always returns false, unless a PDF overrides this function.; 207 virtual bool selfNormalized() const {; 208 return false ;; 209 }; 210 ; 211 // Support for extended maximum likelihood, switched off by default; 212 enum ExtendMode { CanNotBeExtended, CanBeExtended, MustBeExtended } ;; 213 /// Returns ability of PDF to provide extended likelihood terms. Possible; 214 /// answers are in the enumerator RooAbsPdf::ExtendMode.; 215 /// This default implementation always returns CanNotBeExtended.; 216 virtual ExtendMode extendMode() const { return CanNotBeExtended; }; 217 /// If true, PDF can provide extended likelihood term.; 218 inline bool canBeExtended() const {; 219 return (extendMode() != CanNotBeExtended) ;; 220 }; 221 /// If true PDF must provide extended likelihood term.; 222 inline bool mustBeExtended() const {; 223 return (extendMode() == MustBeExtended) ;; 224 }; 225 /// Return expected number of events to be used in calculation of extended; 226 /// likelihood.; 227 virtual double expectedEvents(const RooArgSet* nset) const ;; 228 /// Return expected number of events to be used in calculation of extended; 229 /// likelihood. This function should not be overridden, as it just redirects; 230 /// to the actual virtual function but takes a RooArgSet reference instead of; 231 /// pointer. \see expectedEvents(const RooArgSet*) const; 232 double expectedEvents(const RooArgSet& nset) const {; 233 return expectedEvents(&nset) ;; 234 }; 235 ; 236 virtual std::unique_ptr<RooAbsReal> createExpectedEventsFunc(const RooArgSet* nset) const;; 23",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8h_source.html:10442,extend,extendMode,10442,doc/master/RooAbsPdf_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8h_source.html,2,['extend'],"['extendMode', 'extended']"
Modifiability,"8 }; 889 ; 890 class TConfWithFactor : public TConfiguration {; 891 // Configuration object for the Float16/Double32 where a factor has been specified.; 892 public:; 893 Double_t fFactor;; 894 Double_t fXmin;; 895 TConfWithFactor(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset, Double_t factor, Double_t xmin) : TConfiguration(info,id,compinfo,offset),fFactor(factor),fXmin(xmin) {};; 896 TConfiguration *Copy() override { return new TConfWithFactor(*this); }; 897 };; 898 ; 899 template <typename T>; 900 INLINE_TEMPLATE_ARGS Int_t ReadBasicType_WithFactor(TBuffer &buf, void *addr, const TConfiguration *config); 901 {; 902 // Stream a Float16 or Double32 where a factor has been specified.; 903 //a range was specified. We read an integer and convert it back to a double.; 904 ; 905 TConfWithFactor *conf = (TConfWithFactor *)config;; 906 buf.ReadWithFactor((T*)( ((char*)addr) + config->fOffset ), conf->fFactor, conf->fXmin);; 907 return 0;; 908 }; 909 ; 910 class TConfNoFactor : public TConfiguration {; 911 // Configuration object for the Float16/Double32 where a factor has been specified.; 912 public:; 913 Int_t fNbits;; 914 TConfNoFactor(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset, Int_t nbits) : TConfiguration(info,id,compinfo,offset),fNbits(nbits) {};; 915 TConfiguration *Copy() override { return new TConfNoFactor(*this); }; 916 };; 917 ; 918 template <typename T>; 919 INLINE_TEMPLATE_ARGS Int_t ReadBasicType_NoFactor(TBuffer &buf, void *addr, const TConfiguration *config); 920 {; 921 // Stream a Float16 or Double32 where a factor has not been specified.; 922 ; 923 TConfNoFactor *conf = (TConfNoFactor *)config;; 924 Int_t nbits = conf->fNbits;; 925 ; 926 buf.ReadWithNbits( (T*)( ((char*)addr) + config->fOffset ), nbits );; 927 return 0;; 928 }; 929 ; 930 INLINE_TEMPLATE_ARGS Int_t ReadTString(TBuffer &buf, void *addr, const TConfiguration *config); 931 {; 932 // Read in a TString object.; 933 ; 934 // Idea: We c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:36838,config,config,36838,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"8. Double_t Interpolate(Double_t x, Double_t y, Double_t z); illegal for a TH2. Double_t KolmogorovTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; THIS histogram and h2, using Kolmogorov test.; Default: Ignore under- and overflow bins in comparison. option is a character string to specify options; ""U"" include Underflows in test; ""O"" include Overflows; ""N"" include comparison of normalizations; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob. The returned function value is the probability of test; (much less than one means NOT compatible). The KS test uses the distance between the pseudo-CDF's obtained; from the histogram. Since in 2D the order for generating the pseudo-CDF is; arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; other from the y axis and the maximum distance is the average of the two maximum; distances obtained. Code adapted by Rene Brun from original HBOOK routine HDIFF. Long64_t Merge(TCollection* list); Add all histograms in the collection to this histogram.; This function computes the min/max for the axes,; compute a new number of bins, if necessary,; add bin contents, errors and statistics.; If overflows are present and limits are different the function will fail.; The function returns the total number of entries in the result histogram; if the merge is successfull, -1 otherwise. IMPORTANT remark. The 2 axis x and y may have different number; of bins and different limits, BUT the largest bin width must be; a multiple of the smallest bin width and the upper limit must also; be a multiple of the bin width. TH2 * RebinX(Int_t ngroup = 2, const char* newname = """"); Rebin only the X axis; see Rebin2D. TH2 * RebinY(Int_t ngroup = 2, const char* newname = """"); Rebin only the Y axis; see Rebin2D. TH2 * Rebin2D(Int_t nxgroup = 2, Int_t nygroup = 2, const char* newname = """"); -*-*-*Rebin this histogram grouping nxgroup/nygroup ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2.html:40367,adapt,adapted,40367,root/html528/TH2.html,https://root.cern,https://root.cern/root/html528/TH2.html,6,['adapt'],['adapted']
Modifiability,"8. Double_t Interpolate(Double_t x, Double_t y, Double_t z); illegal for a TH2. Double_t KolmogorovTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; THIS histogram and h2, using Kolmogorov test.; Default: Ignore under- and overflow bins in comparison. option is a character string to specify options; ""U"" include Underflows in test; ""O"" include Overflows; ""N"" include comparison of normalizations; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob. The returned function value is the probability of test; (much less than one means NOT compatible). The KS test uses the distance between the pseudo-CDF's obtained; from the histogram. Since in 2D the order for generating the pseudo-CDF is; arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; other from the y axis and the maximum distance is the average of the two maximum; distances obtained. Code adapted by Rene Brun from original HBOOK routine HDIFF. Long64_t Merge(TCollection* list); Add all histograms in the collection to this histogram.; This function computes the min/max for the axes,; compute a new number of bins, if necessary,; add bin contents, errors and statistics.; If overflows are present and limits are different the function will fail.; The function returns the total number of entries in the result histogram; if the merge is successfull, -1 otherwise. IMPORTANT remark. The 2 axis x and y may have different number; of bins and different limits, BUT the largest bin width must be; a multiple of the smallest bin width and the upper limit must also; be a multiple of the bin width. TH2 * RebinX(Int_t ngroup = 2, const char* newname = """"); Rebin only the X axis; see Rebin2D. TH2 * RebinY(Int_t ngroup = 2, const char* newname = """"); Rebin only the Y axis; see Rebin2D. TH2 * Rebin2D(Int_t nxgroup = 2, Int_t nygroup = 2, const char* newname = """"); Rebin this histogram grouping nxgroup/nygroup bins a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2.html:44837,adapt,adapted,44837,root/html602/TH2.html,https://root.cern,https://root.cern/root/html602/TH2.html,4,['adapt'],['adapted']
Modifiability,8.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95727,config,configuration,95727,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"80 ""Trying to read an emulated class (%s) to store in a compiled pointer (%s)"",; 1081 cl->GetName(),expectedClass->GetName());; 1082 }; 1083 }; 1084 // Create an instance of this class; 1085 ; 1086 void *pobj = cl->New();; 1087 if (!pobj) {; 1088 Error(""ReadObjectAny"", ""Cannot create new object of class %s"", fClassName.Data());; 1089 return 0;; 1090 }; 1091 ; 1092 if (kvers > 1); 1093 bufferRef.MapObject(pobj,cl); //register obj in map to handle self reference; 1094 ; 1095 if (fObjlen > fNbytes-fKeylen) {; 1096 char *objbuf = bufferRef.Buffer() + fKeylen;; 1097 UChar_t *bufcur = (UChar_t *)&compressedBuffer[fKeylen];; 1098 Int_t nin, nout = 0, nbuf;; 1099 Int_t noutot = 0;; 1100 while (1) {; 1101 Int_t hc = R__unzip_header(&nin, bufcur, &nbuf);; 1102 if (hc!=0) break;; 1103 R__unzip(&nin, bufcur, &nbuf, (unsigned char*) objbuf, &nout);; 1104 if (!nout) break;; 1105 noutot += nout;; 1106 if (noutot >= fObjlen) break;; 1107 bufcur += nin;; 1108 objbuf += nout;; 1109 }; 1110 if (nout) {; 1111 cl->Streamer((void*)pobj, bufferRef, clOnfile); //read object; 1112 } else {; 1113 cl->Destructor(pobj);; 1114 return nullptr;; 1115 }; 1116 } else {; 1117 cl->Streamer((void*)pobj, bufferRef, clOnfile); //read object; 1118 }; 1119 ; 1120 if (cl->IsTObject()) {; 1121 auto tobjBaseOffset = cl->GetBaseClassOffset(TObject::Class());; 1122 if (tobjBaseOffset == -1) {; 1123 Fatal(""ReadObj"",""Incorrect detection of the inheritance from TObject for class %s.\n"",; 1124 fClassName.Data());; 1125 }; 1126 TObject *tobj = (TObject*)( ((char*)pobj) + tobjBaseOffset);; 1127 ; 1128 // See similar adjustments in ReadObj; 1129 if (gROOT->GetForceStyle()) tobj->UseCurrentStyle();; 1130 ; 1131 if (cl->InheritsFrom(TDirectoryFile::Class())) {; 1132 TDirectory *dir = static_cast<TDirectoryFile*>(tobj);; 1133 dir->SetName(GetName());; 1134 dir->SetTitle(GetTitle());; 1135 dir->SetMother(fMotherDir);; 1136 fMotherDir->Append(dir);; 1137 }; 1138 }; 1139 ; 1140 {; 1141 // Append the object to the directory ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:40340,inherit,inheritance,40340,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"80 // special handling for the text-based streamers; 581 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx); 582 buf.WriteFastArray((void *)nullptr, cl, -1, nullptr);; 583 }; 584 //} // k; 585 }; 586 else {; 587 // -- Older versions do *not* allow polymorphic pointers to objects.; 588 // Loop over the entries in the clones array or the STL container.; 589 //for (int k = 0; k < narr; ++k) {; 590 // Get the counter for the varying length array.; 591 Int_t vlen = *((Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/));; 592 //b << vlen;; 593 if (vlen) {; 594 // Get a pointer to the array of pointers.; 595 char** pp = (char**) ((char *) addr /*entry pointer*/ + ioffset /*object offset*/);; 596 // -- Older versions do *not* allow polymorphic pointers to objects.; 597 // Loop over each element of the array of pointers to varying-length arrays.; 598 for (Int_t ndx = 0; ndx < config->fCompInfo->fLength; ++ndx) {; 599 if (!pp[ndx]) {; 600 // -- We do not have a pointer to a varying-length array.; 601 //Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; 602 // ::ErrorHandler(kError, ""::WriteTextStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));; 603 printf(""WriteStreamerLoop - The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName());; 604 continue;; 605 }; 606 if (!isPtrPtr) {; 607 // -- We are a varying-length array of objects.; 608 // Loop over the elements of the varying length array.; 609 for (Int_t v = 0; v < vlen; ++v) {; 610 // Write the object to the buffer.; 611 cl->Streamer(pp[ndx] + (v * cl->Si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:24440,config,config,24440,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"8000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  VariableRearrangeTransform (DataSetInfo &dsi);  constructor ;  ; virtual ~VariableRearrangeTransform (void);  ; virtual void AttachXMLTo (void *parent);  create XML description of Rearrange transformation ;  ; std::vector< TString > * GetTransformationStrings (Int_t cls) const;  creates string with variable transformations applied ;  ; void Initialize ();  initialization of the rearrangement transformation (nothing to do) ;  ; virtual const Event * InverseTransform (const Event *const, Int_t cls) const;  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName, Int_t part, UInt_t trCounter, Int_t cls);  creates a normalizing function ;  ; Bool_t PrepareTransformation (const std::vector< Event * > &);  prepare transformation --> (nothing to do) ;  ; virtual void PrintTransformation (std::ostream &o);  prints the transformation ranges ;  ; virtual void ReadFromXML (void *trfnode);  Read the transformation matrices from the xml node. ;  ; void ReadTransformationFromStream (std::istream &, const TString &);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  ; void WriteTransformationToStream (std::ostream &) const;  ;  Public Member Functions inherited from TMVA::VariableTransformBase;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html:1689,variab,variable,1689,doc/master/classTMVA_1_1VariableRearrangeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html,1,['variab'],['variable']
Modifiability,"807/// #### Notes:; 2808///; 2809/// - If an attribute should not be changed just give the value ""-1"".; 2810/// - To erase a label set labSize to 0; 2811/// - If labText is not specified or is an empty string, the text label is not changed.; 2812 ; 2813void TGaxis::ChangeLabelByValue(Double_t labValue, Double_t labAngle, Double_t labSize,; 2814 Int_t labAlign, Int_t labColor, Int_t labFont,; 2815 const TString &labText); 2816{; 2817 // special situation when mod labs taken from axis - one have to reset pointer; 2818 if (fModLabs && !IsOwnedModLabs()) {; 2819 fModLabs = nullptr;; 2820 fNModLabs = 0;; 2821 }; 2822 ; 2823 fNModLabs++;; 2824 if (!fModLabs) {; 2825 fModLabs = new TList();; 2826 fModLabs->SetOwner(kTRUE);; 2827 }; 2828 ; 2829 TAxisModLab *ml = FindModLab(0, 0, labValue, 0.);; 2830 if (!ml) {; 2831 ml = new TAxisModLab();; 2832 ml->SetLabValue(labValue);; 2833 fModLabs->Add(ml);; 2834 }; 2835 ; 2836 ml->SetAngle(labAngle);; 2837 ml->SetSize(labSize);; 2838 ml->SetAlign(labAlign);; 2839 ml->SetColor(labColor);; 2840 ml->SetFont(labFont);; 2841 ml->SetText(labText);; 2842}; 2843 ; 2844 ; 2845static TAttText SavedAttText; ///< Global variable saving the current label's text angle. Used by TGaxis::ChangeLabelAttributes.; 2846 ; 2847////////////////////////////////////////////////////////////////////////////////; 2848/// Helper method used by TGaxis::ChangeLabel.; 2849/// Change the label attributes of label number i. If needed.; 2850///; 2851/// \param[in] i Current label number to be changed if needed; 2852/// \param[in] nlabels Totals number of labels for this axis (useful when i is counted from the end); 2853/// \param[in] t Original TLatex string holding the label to be changed; 2854/// \param[in] c Text string to be drawn; 2855/// \param[in] value Axis value which should be changed; 2856/// \param[in] eps Epsilon parameter for axis value, -1 means ignore axis value at all; 2857 ; 2858 ; 2859void TGaxis::ChangeLabelAttributes(Int_t i, Int_t nlabels, TLatex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:96416,variab,variable,96416,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['variab'],['variable']
Modifiability,"81 of file RooProdPdf.cxx. ◆ DeclFileName(). static const char * RooProdPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 190 of file RooProdPdf.h. ◆ doEvalImpl(). void RooProdPdf::doEvalImpl ; (; RooAbsArg const * ; caller, . const RooProdPdf::CacheElem & ; cache, . RooFit::EvalContext & ; ctx . ); const. private . Evaluate product of PDFs in batch mode. ; Definition at line 413 of file RooProdPdf.cxx. ◆ evaluate(). double RooProdPdf::evaluate ; (; ); const. overrideprivatevirtual . Calculate current value of object. ; Implements RooAbsReal.; Definition at line 371 of file RooProdPdf.cxx. ◆ expectedEvents(). double RooProdPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the expected number of events associated with the extendable input PDF in the product. ; If there is no extendable term, abort. ; Reimplemented from RooAbsPdf.; Definition at line 1671 of file RooProdPdf.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooProdPdf::extendMode ; (; ); const. overridevirtual . If this product contains exactly one extendable p.d.f return the extension abilities of that p.d.f, otherwise return CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 1660 of file RooProdPdf.cxx. ◆ factorizeProduct(). void RooProdPdf::factorizeProduct ; (; const RooArgSet & ; normSet, . const RooArgSet & ; intSet, . RooLinkedList & ; termList, . RooLinkedList & ; normList, . RooLinkedList & ; impDepList, . RooLinkedList & ; crossDepList, . RooLinkedList & ; intList . ); const. private . Factorize product in irreducible terms for given choice of integration/normalization. ; Definition at line 472 of file RooProdPdf.cxx. ◆ fillNormSetForServer(). std::unique_ptr< RooArgSet > RooProdPdf::fillNormSetForServer ; (; RooArgSet const & ; normSet, . RooAbsArg const & ; server . ); const. private . Definition at line 2281 of file RooProdPdf.cxx. ◆ findPdfNSet(). RooArgSet * RooProdPdf::find",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:89137,extend,extendMode,89137,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['extend'],['extendMode']
Modifiability,"82 template <typename From, typename To, template <typename F, typename T> class Converter >; 2483 struct ConvertBasicType<WithFactorMarker<From>,To,Converter > {; 2484 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2485 {; 2486 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2487 ; 2488 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2489 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2490 Int_t nvalues = proxy->Size();; 2491 ; 2492 TConfSTLWithFactor *conf = (TConfSTLWithFactor *)config;; 2493 ; 2494 From *items = new From[nvalues];; 2495 buf.ReadFastArrayWithFactor(items, nvalues, conf->fFactor, conf->fXmin);; 2496 Converter<From,To>::ConvertAction(items,start,end,loopconfig,config);; 2497 delete [] items;; 2498 return 0;; 2499 }; 2500 };; 2501 ; 2502 template <typename From, typename To, template <typename F, typename T> class Converter >; 2503 struct ConvertBasicType<NoFactorMarker<From>,To,Converter > {; 2504 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config); 2505 {; 2506 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2507 ; 2508 TGenericLoopConfig *loopconfig = (TGenericLoopConfig*)loopconf;; 2509 TVirtualCollectionProxy *proxy = loopconfig->fProxy;; 2510 Int_t nvalues = proxy->Size();; 2511 ; 2512 TConfSTLNoFactor *conf = (TConfSTLNoFactor *)config;; 2513 ; 2514 From *items = new From[nvalues];; 2515 buf.ReadFastArrayWithNbits(items, nvalues, conf->fNbits);; 2516 Converter<From,To>::ConvertAction(items,start,end,loopconfig,config);; 2517 delete [] items;; 2518 return 0;; 2519 }; 2520 };; 2521 ; 2522 static INLINE_TEMPLATE_ARGS Int_t ReadBase(TBuffer &buf, void *start, const void *end, const TLoopConfiguration * loopconfig, const TConfiguration *config); 2523 {; 2524 // Well the implementation is no",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:100860,config,config,100860,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,82242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:98932,config,configuration,98932,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,83.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88446,config,configuration,88446,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"836 ; 837Double_t TProfile::GetBinEntries(Int_t bin) const; 838{; 839 if (fBuffer) ((TProfile*)this)->BufferEmpty();; 840 ; 841 if (bin < 0 || bin >= fNcells) return 0;; 842 return fBinEntries.fArray[bin];; 843}; 844 ; 845////////////////////////////////////////////////////////////////////////////////; 846/// Return bin effective entries for a weighted filled Profile histogram.; 847/// In case of an unweighted profile, it is equivalent to the number of entries per bin; 848/// The effective entries is defined as the square of the sum of the weights divided by the; 849/// sum of the weights square.; 850/// TProfile::Sumw2() must be called before filling the profile with weights.; 851/// Only by calling this method the sum of the square of the weights per bin is stored.; 852 ; 853Double_t TProfile::GetBinEffectiveEntries(Int_t bin) const; 854{; 855 return TProfileHelper::GetBinEffectiveEntries((TProfile*)this, bin);; 856}; 857 ; 858////////////////////////////////////////////////////////////////////////////////; 859/// Return bin error of a Profile histogram; 860///; 861/// Computing errors: A moving field; 862///; 863/// The computation of errors for a TProfile has evolved with the versions; 864/// of ROOT. The difficulty is in computing errors for bins with low statistics.; 865///; 866/// - prior to version 3.00, we had no special treatment of low statistic bins.; 867/// As a result, these bins had huge errors. The reason is that the; 868/// expression eprim2 is very close to 0 (rounding problems) or 0.; 869/// - in version 3.00 (18 Dec 2000), the algorithm is protected for values of; 870/// eprim2 very small and the bin errors set to the average bin errors, following; 871/// recommendations from a group of users.; 872/// - in version 3.01 (19 Apr 2001), it is realized that the algorithm above; 873/// should be applied only to low statistic bins.; 874/// - in version 3.02 (26 Sep 2001), the same group of users recommend instead; 875/// to take two times the average er",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:31253,evolve,evolved,31253,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['evolve'],['evolved']
Modifiability,"836///; 1837/// A simple modification of the ideas described above can be used for the; 1838/// comparison of the usual (unweighted) and weighted histograms. Let us; 1839/// denote the number of events in the ith bin in the unweighted; 1840/// histogram as ni and the common weight of events in the ith bin of the; 1841/// weighted histogram as wi. The total number of events in the; 1842/// unweighted histogram is equal to; 1843///\f[; 1844/// N = \sum_{i=1}^{r} n_{i}; 1845///\f]; 1846/// and the total weight of events in the weighted histogram is equal to; 1847///\f[; 1848/// W = \sum_{i=1}^{r} w_{i}; 1849///\f]; 1850/// Let us formulate the hypothesis of identity of an unweighted histogram; 1851/// to a weighted histogram so that there exist r constants p1,...,pr, such; 1852/// that; 1853///\f[; 1854/// \sum_{i=1}^{r} p_{i} = 1; 1855///\f]; 1856/// for the unweighted histogram. The weight wi is a random variable with a; 1857/// distribution approximated by the normal probability distribution; 1858/// \f$ N(Wp_{i},\sigma_{i}^{2}) \f$ where \f$ \sigma_{i}^{2} \f$ is the variance of the weight wi.; 1859/// If we replace the variance \f$ \sigma_{i}^{2} \f$; 1860/// with estimate \f$ s_{i}^{2} \f$ (sum of squares of weights of; 1861/// events in the ith bin) and the hypothesis of identity is valid, then the; 1862/// maximum likelihood estimator of pi,i=1,...,r, is; 1863///\f[; 1864/// \hat{p}_{i} = \frac{Ww_{i}-Ns_{i}^{2}+\sqrt{(Ww_{i}-Ns_{i}^{2})^{2}+4W^{2}s_{i}^{2}n_{i}}}{2W^{2}}; 1865///\f]; 1866/// We may then use the test statistic; 1867///\f[; 1868/// X^{2} = \sum_{i=1}^{r} \frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r} \frac{(w_{i}-W\hat{p}_{i})^{2}}{s_{i}^{2}}; 1869///\f]; 1870/// and it has approximately a \f$ \sigma^{2}_{(r-1)} \f$ distribution [2]. This test, as well; 1871/// as the original one [3], has a restriction on the expected frequencies. The; 1872/// expected frequencies recommended for the weighted histogram is more than 25.; 1873/// T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:73469,variab,variable,73469,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['variab'],['variable']
Modifiability,"84 if (new_dom->config[idx] != NULL) {; 20385 /* Duplicate option: Later values overwrite earlier ones. */; 20386 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 20387 mg_free(new_dom->config[idx]);; 20388 }; 20389 new_dom->config[idx] = mg_strdup_ctx(value, ctx);; 20390 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 20391 }; 20392 ; 20393 /* Authentication domain is mandatory */; 20394 /* TODO: Maybe use a new option hostname? */; 20395 if (!new_dom->config[AUTHENTICATION_DOMAIN]) {; 20396 mg_cry_ctx_internal(ctx, ""%s"", ""authentication domain required"");; 20397 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20398 mg_snprintf(NULL,; 20399 NULL, /* No truncation check for error buffers */; 20400 error->text,; 20401 error->text_buffer_size,; 20402 ""Mandatory option %s missing"",; 20403 config_options[AUTHENTICATION_DOMAIN].name);; 20404 }; 20405 mg_free(new_dom);; 20406 return -4;; 20407 }; 20408 ; 20409 /* Set default value if needed. Take the config value from; 20410 * ctx as a default value. */; 20411 for (i = 0; config_options[i].name != NULL; i++) {; 20412 default_value = ctx->dd.config[i];; 20413 if ((new_dom->config[i] == NULL) && (default_value != NULL)) {; 20414 new_dom->config[i] = mg_strdup_ctx(default_value, ctx);; 20415 }; 20416 }; 20417 ; 20418 new_dom->handlers = NULL;; 20419 new_dom->next = NULL;; 20420 new_dom->nonce_count = 0;; 20421 new_dom->auth_nonce_mask =; 20422 (uint64_t)get_random() ^ ((uint64_t)get_random() << 31);; 20423 ; 20424#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20425 new_dom->shared_lua_websockets = NULL;; 20426#endif; 20427 ; 20428#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20429 if (!init_ssl_ctx(ctx, new_dom)) {; 20430 /* Init SSL failed */; 20431 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20432 mg_snprintf(NULL,; 20433 NULL, /* No truncation check for error buffers */; 20434 error->text,; 20435 error->text_buffer_size,; 20436 ""%s"",; 20437 ""Initializing SSL context failed"");; 20438 }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:610311,config,config,610311,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"85 ; 1186 if (col) {; 1187 TString colbuf;; 1188 colbuf.Form(""#%02x%02x%02x"", (int)(col->GetRed() * 255), (int)(col->GetGreen() * 255),; 1189 (int)(col->GetBlue() * 255));; 1190 node.color = colbuf.Data();; 1191 if (node.opacity == 1.); 1192 node.opacity = col->GetAlpha();; 1193 } else {; 1194 node.color.clear();; 1195 }; 1196}; 1197 ; 1198/////////////////////////////////////////////////////////////////////; 1199/// Reset shape info, which used to pack binary data; 1200 ; 1201void RGeomDescription::ResetRndrInfos(); 1202{; 1203 for (auto &s : fShapes); 1204 s.reset();; 1205}; 1206 ; 1207/////////////////////////////////////////////////////////////////////; 1208/// Produce JSON string which can be directly used with `build`; 1209/// function from JSROOT to create three.js model of configured geometry; 1210///; 1211/// Collect all information required to draw geometry on the client; 1212/// This includes list of each visible nodes, meshes and matrixes; 1213/// If @param all_nodes is true, all existing nodes will be provided,; 1214/// which allows to create complete nodes hierarchy on client side; 1215///; 1216/// Example of usage:; 1217///; 1218/// void geom() {; 1219/// auto f = TFile::Open(""file_name.root"");; 1220/// auto vol = f->Get<TGeoVolume>(""object_name"");; 1221/// ROOT::RGeomDescription desc;; 1222/// desc.Build(vol);; 1223/// std::ofstream fout(""geom.json"");; 1224/// fout << desc.ProduceJson();; 1225/// }; 1226///; 1227/// In JSROOT one loads data from JSON file and call `build` function to; 1228/// produce three.js model. Also see example in tutorials/webgui/geom/ folder; 1229 ; 1230std::string RGeomDescription::ProduceJson(bool all_nodes); 1231{; 1232 TLockGuard lock(fMutex);; 1233 ; 1234 std::vector<int> viscnt(fDesc.size(), 0);; 1235 ; 1236 int level = GetVisLevel();; 1237 ; 1238 // first count how many times each individual node appears; 1239 int numnodes = ScanNodes(true, level, [&viscnt](RGeomNode &node, std::vector<int> &, bool, int) {; 1240 viscnt[n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:36465,config,configured,36465,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['config'],['configured']
Modifiability,"85 if (new_dom->config[idx] != NULL) {; 20386 /* Duplicate option: Later values overwrite earlier ones. */; 20387 mg_cry_ctx_internal(ctx, ""warning: %s: duplicate option"", name);; 20388 mg_free(new_dom->config[idx]);; 20389 }; 20390 new_dom->config[idx] = mg_strdup_ctx(value, ctx);; 20391 DEBUG_TRACE(""[%s] -> [%s]"", name, value);; 20392 }; 20393 ; 20394 /* Authentication domain is mandatory */; 20395 /* TODO: Maybe use a new option hostname? */; 20396 if (!new_dom->config[AUTHENTICATION_DOMAIN]) {; 20397 mg_cry_ctx_internal(ctx, ""%s"", ""authentication domain required"");; 20398 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20399 mg_snprintf(NULL,; 20400 NULL, /* No truncation check for error buffers */; 20401 error->text,; 20402 error->text_buffer_size,; 20403 ""Mandatory option %s missing"",; 20404 config_options[AUTHENTICATION_DOMAIN].name);; 20405 }; 20406 mg_free(new_dom);; 20407 return -4;; 20408 }; 20409 ; 20410 /* Set default value if needed. Take the config value from; 20411 * ctx as a default value. */; 20412 for (i = 0; config_options[i].name != NULL; i++) {; 20413 default_value = ctx->dd.config[i];; 20414 if ((new_dom->config[i] == NULL) && (default_value != NULL)) {; 20415 new_dom->config[i] = mg_strdup_ctx(default_value, ctx);; 20416 }; 20417 }; 20418 ; 20419 new_dom->handlers = NULL;; 20420 new_dom->next = NULL;; 20421 new_dom->nonce_count = 0;; 20422 new_dom->auth_nonce_mask =; 20423 (uint64_t)get_random() ^ ((uint64_t)get_random() << 31);; 20424 ; 20425#if defined(USE_LUA) && defined(USE_WEBSOCKET); 20426 new_dom->shared_lua_websockets = NULL;; 20427#endif; 20428 ; 20429#if !defined(NO_SSL) && !defined(USE_MBEDTLS); 20430 if (!init_ssl_ctx(ctx, new_dom)) {; 20431 /* Init SSL failed */; 20432 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20433 mg_snprintf(NULL,; 20434 NULL, /* No truncation check for error buffers */; 20435 error->text,; 20436 error->text_buffer_size,; 20437 ""%s"",; 20438 ""Initializing SSL context failed"");; 20439 }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:610344,config,config,610344,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"86/// Mutual Information method for non-linear correlations estimates in 2D histogram; 587/// Author: Moritz Backes, Geneva (2009); 588 ; 589Double_t TMVA::Tools::GetMutualInformation( const TH2F& h_ ); 590{; 591 Double_t hi = h_.Integral();; 592 if (hi == 0) return -1;; 593 ; 594 // copy histogram and rebin to speed up procedure; 595 TH2F h( h_ );; 596 h.RebinX(2);; 597 h.RebinY(2);; 598 ; 599 Double_t mutualInfo = 0.;; 600 Int_t maxBinX = h.GetNbinsX();; 601 Int_t maxBinY = h.GetNbinsY();; 602 for (Int_t x = 1; x <= maxBinX; x++) {; 603 for (Int_t y = 1; y <= maxBinY; y++) {; 604 Double_t p_xy = h.GetBinContent(x,y)/hi;; 605 Double_t p_x = h.Integral(x,x,1,maxBinY)/hi;; 606 Double_t p_y = h.Integral(1,maxBinX,y,y)/hi;; 607 if (p_x > 0. && p_y > 0. && p_xy > 0.){; 608 mutualInfo += p_xy*TMath::Log(p_xy / (p_x * p_y));; 609 }; 610 }; 611 }; 612 ; 613 return mutualInfo;; 614}; 615 ; 616////////////////////////////////////////////////////////////////////////////////; 617/// Compute Correlation Ratio of 2D histogram to estimate functional dependency between two variables; 618/// Author: Moritz Backes, Geneva (2009); 619 ; 620Double_t TMVA::Tools::GetCorrelationRatio( const TH2F& h_ ); 621{; 622 Double_t hi = h_.Integral();; 623 if (hi == 0.) return -1;; 624 ; 625 // copy histogram and rebin to speed up procedure; 626 TH2F h( h_ );; 627 h.RebinX(2);; 628 h.RebinY(2);; 629 ; 630 Double_t corrRatio = 0.;; 631 Double_t y_mean = h.ProjectionY()->GetMean();; 632 for (Int_t ix=1; ix<=h.GetNbinsX(); ix++) {; 633 corrRatio += (h.Integral(ix,ix,1,h.GetNbinsY())/hi)*pow((GetYMean_binX(h,ix)-y_mean),2);; 634 }; 635 corrRatio /= pow(h.ProjectionY()->GetRMS(),2);; 636 return corrRatio;; 637}; 638 ; 639////////////////////////////////////////////////////////////////////////////////; 640/// Compute the mean in Y for a given bin X of a 2D histogram; 641 ; 642Double_t TMVA::Tools::GetYMean_binX( const TH2& h, Int_t bin_x ); 643{; 644 if (h.Integral(bin_x,bin_x,1,h.GetNbinsY()) == 0.) {r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:21433,variab,variables,21433,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['variab'],['variables']
Modifiability,"87 fBuffer = 0;; 788 return 0;; 789 }; 790 memcpy(bufferRef.Buffer(),fBuffer,fKeylen);; 791 } else {; 792 fBuffer = bufferRef.Buffer();; 793 if( !ReadFile() ) { //Read object structure from file; 794 ; 795 fBuffer = 0;; 796 return 0;; 797 }; 798 }; 799 fBuffer = storeBuffer;; 800 ; 801 // get version of key; 802 bufferRef.SetBufferOffset(sizeof(fNbytes));; 803 Version_t kvers = bufferRef.ReadVersion();; 804 ; 805 bufferRef.SetBufferOffset(fKeylen);; 806 TObject *tobj = 0;; 807 // Create an instance of this class; 808 ; 809 char *pobj = (char*)cl->New();; 810 if (!pobj) {; 811 Error(""ReadObj"", ""Cannot create new object of class %s"", fClassName.Data());; 812 return 0;; 813 }; 814 Int_t baseOffset = cl->GetBaseClassOffset(TObject::Class());; 815 if (baseOffset==-1) {; 816 // cl does not inherit from TObject.; 817 // Since this is not possible yet, the only reason we could reach this code; 818 // is because something is screw up in the ROOT code.; 819 Fatal(""ReadObj"",""Incorrect detection of the inheritance from TObject for class %s.\n"",; 820 fClassName.Data());; 821 }; 822 tobj = (TObject*)(pobj+baseOffset);; 823 if (kvers > 1); 824 bufferRef.MapObject(pobj,cl); //register obj in map to handle self reference; 825 ; 826 if (fObjlen > fNbytes-fKeylen) {; 827 char *objbuf = bufferRef.Buffer() + fKeylen;; 828 UChar_t *bufcur = (UChar_t *)&compressedBuffer[fKeylen];; 829 Int_t nin, nout = 0, nbuf;; 830 Int_t noutot = 0;; 831 while (1) {; 832 Int_t hc = R__unzip_header(&nin, bufcur, &nbuf);; 833 if (hc!=0) break;; 834 R__unzip(&nin, bufcur, &nbuf, (unsigned char*) objbuf, &nout);; 835 if (!nout) break;; 836 noutot += nout;; 837 if (noutot >= fObjlen) break;; 838 bufcur += nin;; 839 objbuf += nout;; 840 }; 841 compressedBuffer.reset(nullptr);; 842 if (nout) {; 843 tobj->Streamer(bufferRef); //does not work with example 2 above; 844 } else {; 845 // Even-though we have a TObject, if the class is emulated the virtual; 846 // table may not be 'right', so let's go via the TClass.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:29235,inherit,inheritance,29235,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"87 of file TSessionViewer.cxx. ◆ ShowStatus(). void TSessionViewer::ShowStatus ; (; ). Retrieve and display Proof status. ; Definition at line 5454 of file TSessionViewer.cxx. ◆ StartupMessage(). void TSessionViewer::StartupMessage ; (; char * ; msg, . Bool_t ; stat, . Int_t ; curr, . Int_t ; total . ). Handle startup message (connection progress) coming from Proof session. ; Definition at line 5490 of file TSessionViewer.cxx. ◆ StartViewer(). void TSessionViewer::StartViewer ; (; ). Start TreeViewer from selected TChain. ; Definition at line 5265 of file TSessionViewer.cxx. ◆ Streamer(). void TSessionViewer::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGMainFrame. ◆ StreamerNVirtual(). void TSessionViewer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 631 of file TSessionViewer.h. ◆ Terminate(). void TSessionViewer::Terminate ; (; ). Terminate Session : save configuration, clean temporary files and close Proof connections. ; Definition at line 4918 of file TSessionViewer.cxx. ◆ UpdateListOfPackages(). void TSessionViewer::UpdateListOfPackages ; (; ). Update the list of packages. ; Definition at line 5324 of file TSessionViewer.cxx. ◆ UpdateListOfProofs(). void TSessionViewer::UpdateListOfProofs ; (; ). Update list of existing Proof sessions. ; Definition at line 3904 of file TSessionViewer.cxx. ◆ UpdateListOfSessions(). void TSessionViewer::UpdateListOfSessions ; (; ). Update list of existing Proof sessions. ; Definition at line 4128 of file TSessionViewer.cxx. ◆ WriteConfiguration(). void TSessionViewer::WriteConfiguration ; (; const char * ; filename = nullptr). Save actual configuration in config file ""filename"". ; Definition at line 4205 of file TSessionViewer.cxx. Member Data Documentation. ◆ fActDesc. TSessionDescription* TSessionViewer::fActDesc. private . Definition at line 530 of file TSessionViewer.h. ◆ fActFrame. TGFrame* TSessionViewer::fActFrame.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionViewer.html:50415,config,configuration,50415,doc/master/classTSessionViewer.html,https://root.cern,https://root.cern/doc/master/classTSessionViewer.html,1,['config'],['configuration']
Modifiability,87.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82330,config,configuration,82330,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"89; TMVA::MethodBase::EWeightFileTypeEWeightFileTypeDefinition MethodBase.h:122; TMVA::MethodBase::kTEXT@ kTEXTDefinition MethodBase.h:122; TMVA::MethodBase::kROOT@ kROOTDefinition MethodBase.h:122; TMVA::MethodBase::fMeanBDouble_t fMeanBmean (background)Definition MethodBase.h:662; TMVA::MethodBase::GetTransformationHandlerconst TransformationHandler & GetTransformationHandler(Bool_t takeReroutedIfAvailable=true) constDefinition MethodBase.h:398; TMVA::MethodBase::fNsmoothMVAPdfInt_t fNsmoothMVAPdfDefinition MethodBase.h:727; TMVA::MethodBase::SetSignalReferenceCutOrientationvoid SetSignalReferenceCutOrientation(Double_t cutOrientation)Definition MethodBase.h:365; TMVA::MethodBase::fBaseDirTDirectory * fBaseDirDefinition MethodBase.h:625; TMVA::MethodBase::fIgnoreNegWeightsInTrainingBool_t fIgnoreNegWeightsInTrainingIf true, events with negative weights are not used in training.Definition MethodBase.h:682; TMVA::MethodBase::WriteStateToFilevoid WriteStateToFile() constwrite options and weights to file note that each one text file for the main configuration information...Definition MethodBase.cxx:1404; TMVA::MethodBase::AddClassesXMLTovoid AddClassesXMLTo(void *parent) constwrite class info to XMLDefinition MethodBase.cxx:1801; TMVA::MethodBase::GetInputLabelconst TString & GetInputLabel(Int_t i) constDefinition MethodBase.h:350; TMVA::MethodBase::GetCutOrientationECutOrientation GetCutOrientation() constDefinition MethodBase.h:552; TMVA::MethodBase::fRankingRanking * fRankingDefinition MethodBase.h:587; TMVA::MethodBase::fTrainHistoryTrainingHistory fTrainHistoryDefinition MethodBase.h:425; TMVA::MethodBase::SetMethodBaseDirvoid SetMethodBaseDir(TDirectory *methodDir)Definition MethodBase.h:374; TMVA::MethodBase::AddClassifierOutputvirtual void AddClassifierOutput(Types::ETreeType type)prepare tree branch with the method's discriminating variableDefinition MethodBase.cxx:869; TMVA::MethodBase::fMVAPdfBPDF * fMVAPdfBbackground MVA PDFDefinition MethodBase.h:646; TMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:63792,config,configuration,63792,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['config'],['configuration']
Modifiability,"9 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.class.C␛[0m; Factory : Training finished; : ; : Ranking input variables (method specific)...; BDTG : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 3.117e-01; : 2 : var1 : 2.504e-01; : 3 : var2 : 2.430e-01; : 4 : var3 : 1.949e-01; : --------------------------------------; MLP : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Importance; : -----------------------------; : 1 : var4 : 6.076e+01; : 2 : var2 : 4.824e+01; : 3 : var1 : 2.116e+01; : 4 : var3 : 1.692e+01; : -----------------------------; PDEFoam : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.991e-01; : 2 : var1 : 2.930e-01; : 3 : var3 : 2.365e-01; : 4 : var2 : 1.714e-01; : --------------------------------------; : No variable ranking supplied by classifier: DL_CPU; TH1.Print Name = TrainingHistory_DL_CPU_trainingError, Entries= 0, Total sum= 7.41943; TH1.Print Name = TrainingHistory_DL_CPU_valError, Entries= 0, Total sum= 7.13905; Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_BDTG.weights.xml␛[0m; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_MLP.wei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:17944,variab,variable,17944,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['variab'],['variable']
Modifiability,9 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83292,config,configuration,83292,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"9 Temple Place, Suite *; 21 * 330, Boston, MA 02111-1307 USA, or contact the author. *; 22 * *; 23 **********************************************************************/; 24 ; 25// Header file for class GSLFunctionWrapper; 26//; 27// Created by: moneta at Sat Nov 13 14:54:41 2004; 28//; 29// Last update: Sat Nov 13 14:54:41 2004; 30//; 31#ifndef ROOT_Math_GSLFunctionWrapper; 32#define ROOT_Math_GSLFunctionWrapper; 33 ; 34#include ""gsl/gsl_math.h""; 35 ; 36#include ""Math/GSLFunctionAdapter.h""; 37 ; 38#include <cassert>; 39 ; 40namespace ROOT {; 41namespace Math {; 42 ; 43 ; 44 ; 45typedef double ( * GSLFuncPointer ) ( double, void *);; 46typedef void ( * GSLFdfPointer ) ( double, void *, double *, double *);; 47 ; 48 ; 49/**; 50 Wrapper class to the gsl_function C structure.; 51 This class to fill the GSL C structure gsl_function with; 52 the C++ function objcet.; 53 Use the class ROOT::Math::GSLFunctionAdapter to adapt the; 54 C++ function object to the right signature (function pointer type); 55 requested by GSL; 56*/; 57class GSLFunctionWrapper {; 58 ; 59public:; 60 ; 61 GSLFunctionWrapper(); 62 {; 63 fFunc.function = nullptr;; 64 fFunc.params = nullptr;; 65 }; 66 ; 67 /// set in the GSL C struct the pointer to the function evaluation; 68 void SetFuncPointer( GSLFuncPointer f) { fFunc.function = f; }; 69 ; 70 /// set in the GSL C struct the extra-object pointer; 71 void SetParams ( void * p) { fFunc.params = p; }; 72 ; 73 /// fill the GSL C struct from a generic C++ callable object; 74 /// implementing operator(); 75 template<class FuncType>; 76 void SetFunction(const FuncType &f) {; 77 const void * p = &f;; 78 assert (p != nullptr);; 79 SetFuncPointer(&GSLFunctionAdapter<FuncType >::F);; 80 SetParams(const_cast<void *>(p));; 81 }; 82 ; 83 gsl_function * GetFunc() { return &fFunc; }; 84 ; 85 GSLFuncPointer FunctionPtr() { return fFunc.function; }; 86 ; 87 // evaluate the function; 88 double operator() (double x) { return GSL_FN_EVAL(&fFunc, x); }; 89 ; 90 /// check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html:2083,adapt,adapt,2083,doc/master/GSLFunctionWrapper_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionWrapper_8h_source.html,1,['adapt'],['adapt']
Modifiability,"9 newFuncs.SetOwner(kTRUE);; 610 TObjArray coeffNames;; 611 coeffNames.SetOwner(kTRUE);; 612 TString fullFormula;; 613 for (int i = 0; i < formDense.Length(); ++i) {; 614 if (formDense[i] == '('); 615 parenCount++;; 616 else if (formDense[i] == ')'); 617 parenCount--;; 618 else if (formDense[i] == delimiter && parenCount == 0) {; 619 // term goes from termStart to i; 620 DefineNSUMTerm(&newFuncs, &coeffNames, fullFormula, formDense, termStart, i, xmin, xmax);; 621 termStart = i + 1;; 622 }; 623 }; 624 DefineNSUMTerm(&newFuncs, &coeffNames, fullFormula, formDense, termStart, formDense.Length(), xmin, xmax);; 625 ; 626 TF1NormSum *normSum = new TF1NormSum(fullFormula, xmin, xmax);; 627 ; 628 if (xmin == 0 && xmax == 1.) Info(""TF1"",""Created TF1NormSum object using the default [0,1] range"");; 629 ; 630 fNpar = normSum->GetNpar();; 631 fNdim = 1; // (note: may want to extend functionality in the future); 632 ; 633 fType = EFType::kCompositionFcn;; 634 fComposition = std::unique_ptr<TF1AbsComposition>(normSum);; 635 ; 636 fParams = std::make_unique<TF1Parameters>(fNpar);; 637 fParams->SetParameters(&(normSum->GetParameters())[0]); // inherit default parameters from normSum; 638 ; 639 // Parameter names; 640 for (int i = 0; i < fNpar; i++) {; 641 if (coeffNames.At(i)) {; 642 this->SetParName(i, coeffNames.At(i)->GetName());; 643 } else {; 644 this->SetParName(i, normSum->GetParName(i));; 645 }; 646 }; 647 ; 648 } else { // regular TFormula; 649 fFormula = std::make_unique<TFormula>(name, formula, false, vectorize);; 650 fNpar = fFormula->GetNpar();; 651 // TFormula can have dimension zero, but since this is a TF1 minimal dim is 1; 652 fNdim = fFormula->GetNdim() == 0 ? 1 : fFormula->GetNdim();; 653 }; 654 if (fNpar) {; 655 fParErrors.resize(fNpar);; 656 fParMin.resize(fNpar);; 657 fParMax.resize(fNpar);; 658 }; 659 // do we want really to have this un-documented feature where we accept cases where dim > 1; 660 // by setting xmin >= xmax ??; 661 if (fNdim > 1 && xmin < xmax)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:20681,extend,extend,20681,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,2,"['extend', 'inherit']","['extend', 'inherit']"
Modifiability,"9 of file BinarySearchTree.h. ◆ Min(). Float_t TMVA::BinarySearchTree::Min ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to Minimum for signal and background for each variable ; Definition at line 125 of file BinarySearchTree.h. ◆ NormalizeTree() [1/2]. void TMVA::BinarySearchTree::NormalizeTree ; (; ). Normalisation of tree. ; Definition at line 343 of file BinarySearchTree.cxx. ◆ NormalizeTree() [2/2]. void TMVA::BinarySearchTree::NormalizeTree ; (; std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator ; leftBound, . std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator ; rightBound, . UInt_t ; actDim . ). private . normalises the binary-search tree to reduce the branch length and hence speed up the search procedure (on average). ; Definition at line 286 of file BinarySearchTree.cxx. ◆ RMS() [1/2]. Float_t TMVA::BinarySearchTree::RMS ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to RMS for signal and background for each variable ; Definition at line 122 of file BinarySearchTree.h. ◆ RMS() [2/2]. Float_t TMVA::BinarySearchTree::RMS ; (; UInt_t ; var). inline . access to RMS for each variable ; Definition at line 133 of file BinarySearchTree.h. ◆ Search() [1/2]. TMVA::BinarySearchTreeNode * TMVA::BinarySearchTree::Search ; (; Event * ; event, . Node * ; node . ); const. private . Private, recursive, function for searching. ; Definition at line 201 of file BinarySearchTree.cxx. ◆ Search() [2/2]. TMVA::BinarySearchTreeNode * TMVA::BinarySearchTree::Search ; (; Event * ; event); const. search the tree to find the node matching ""event"" ; Definition at line 193 of file BinarySearchTree.cxx. ◆ SearchVolume() [1/2]. Double_t TMVA::BinarySearchTree::SearchVolume ; (; Node * ; t, . Volume * ; volume, . Int_t ; depth, . std::vector< const TMVA::BinarySearchTreeNode * > * ; events . ). private . recursively walk through the daughter nodes and add up all weights of events that lie within the given volume ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:13703,variab,variable,13703,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,1,['variab'],['variable']
Modifiability,"9 of file DataSetInfo.cxx. ◆ AddTarget() [1/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddTarget ; (; const TString & ; expression, . const TString & ; title, . const TString & ; unit, . Double_t ; min, . Double_t ; max, . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add a variable (can be a complex expression) to the set of variables used in the MV analysis ; Definition at line 272 of file DataSetInfo.cxx. ◆ AddTarget() [2/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddTarget ; (; const VariableInfo & ; varInfo). add target with given VariableInfo ; Definition at line 292 of file DataSetInfo.cxx. ◆ AddVariable() [1/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddVariable ; (; const TString & ; expression, . const TString & ; title = """", . const TString & ; unit = """", . Double_t ; min = 0, . Double_t ; max = 0, . char ; varType = 'F', . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add a variable (can be a complex expression) to the set of variables used in the MV analysis ; Definition at line 207 of file DataSetInfo.cxx. ◆ AddVariable() [2/2]. TMVA::VariableInfo & TMVA::DataSetInfo::AddVariable ; (; const VariableInfo & ; varInfo). add variable with given VariableInfo ; Definition at line 226 of file DataSetInfo.cxx. ◆ AddVariablesArray(). void TMVA::DataSetInfo::AddVariablesArray ; (; const TString & ; expression, . Int_t ; size, . const TString & ; title = """", . const TString & ; unit = """", . Double_t ; min = 0, . Double_t ; max = 0, . char ; type = 'F', . Bool_t ; normalized = kTRUE, . void * ; external = nullptr . ). add an array of variables identified by an expression corresponding to an array entry in the tree ; Definition at line 235 of file DataSetInfo.cxx. ◆ Class(). static TClass * TMVA::DataSetInfo::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::DataSetInfo::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:19114,variab,variable,19114,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,2,['variab'],"['variable', 'variables']"
Modifiability,"9,beta2=0.999,eps=1e-07) Learning rate = 0.01 regularization 0 minimum error = 0.699892; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.548477 0.466013 0.191275 0.014698 9061.23 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.431501 0.379356 0.191981 0.0145985 9020.06 0; : 3 | 0.40241 0.379482 0.19151 0.014162 9021.8 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.408996 0.379041 0.192713 0.0146534 8985.76 0; : 5 | 0.41143 0.414316 0.191728 0.014237 9014.55 1; : 6 | 0.385066 0.478603 0.19226 0.0142608 8988.82 2; : 7 | 0.404168 0.388159 0.192259 0.0142353 8987.58 3; : 8 Minimum Test error found - save the configuration ; : 8 | 0.394387 0.377539 0.19273 0.0147168 8988.1 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.386834 0.375541 0.192946 0.014741 8978.44 0; : 10 | 0.381359 0.385778 0.195351 0.0142527 8835 1; : 11 | 0.391916 0.415129 0.193961 0.0143386 8907.56 2; : 12 | 0.390755 0.379468 0.194376 0.0145555 8897.75 3; : 13 | 0.409355 0.396515 0.195082 0.0144231 8856.49 4; : 14 | 0.400917 0.375809 0.194321 0.0142902 8887.36 5; : 15 | 0.384495 0.401588 0.194138 0.0144019 8901.96 6; : 16 | 0.400658 0.401489 0.198047 0.014311 8708.13 7; : 17 Minimum Test error found - save the configuration ; : 17 | 0.386851 0.371455 0.194859 0.0148291 8887.42 0; : 18 | 0.389253 0.376491 0.196282 0.0143574 8794.87 1; : 19 | 0.378227 0.384958 0.199317 0.0143422 8649.85 2; : 20 | 0.387911 0.390858 0.193697 0.0144047 8923.97 3; : 21 | 0.391998 0.3743 0.194318 0.0146357 8904.63 4; : 22 | 0.396695 0.384671 0.194406 0.0145452 8895.77 5; : 23 | 0.38744 0.376683 0.195092 0.0143629 8853.03 6; : 24 | 0.38501 0.377878 0.194456 0.0147282 8902.35 7; : 25 | 0.389388 0.376148 0.201694 0.0152248 858",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:48065,config,configuration,48065,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['config'],['configuration']
Modifiability,9.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81653,config,configuration,81653,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"9// //; 120// TEnv //; 121// //; 122//////////////////////////////////////////////////////////////////////////; 123 ; 124class TEnv : public TObject {; 125 ; 126private:; 127 THashList *fTable; // hash table containing env records; 128 TString fRcName; // resource file base name; 129 Bool_t fIgnoreDup; // ignore duplicates, don't issue warning; 130 ; 131 TEnv(const TEnv&) = delete;; 132 TEnv& operator=(const TEnv&) = delete;; 133 ; 134 const char *Getvalue(const char *name) const;; 135 ; 136public:; 137 TEnv(const char *name="""");; 138 virtual ~TEnv();; 139 ; 140 THashList *GetTable() const { return fTable; }; 141 Bool_t Defined(const char *name) const; 142 { return Getvalue(name) != nullptr; }; 143 ; 144 virtual const char *GetRcName() const { return fRcName; }; 145 virtual void SetRcName(const char *name) { fRcName = name; }; 146 ; 147 virtual Int_t GetValue(const char *name, Int_t dflt) const;; 148 virtual Double_t GetValue(const char *name, Double_t dflt) const;; 149 virtual const char *GetValue(const char *name, const char *dflt) const;; 150 ; 151 virtual void SetValue(const char *name, const char *value,; 152 EEnvLevel level = kEnvChange,; 153 const char *type = nullptr);; 154 virtual void SetValue(const char *name, EEnvLevel level = kEnvChange);; 155 virtual void SetValue(const char *name, Int_t value);; 156 virtual void SetValue(const char *name, Double_t value);; 157 ; 158 virtual TEnvRec *Lookup(const char *n) const;; 159 virtual Int_t ReadFile(const char *fname, EEnvLevel level);; 160 virtual Int_t WriteFile(const char *fname, EEnvLevel level = kEnvAll);; 161 virtual void Save();; 162 virtual void SaveLevel(EEnvLevel level);; 163 void Print(Option_t *option="""") const override;; 164 virtual void PrintEnv(EEnvLevel level = kEnvAll) const;; 165 Bool_t IgnoreDuplicates(Bool_t ignore);; 166 ; 167 ClassDefOverride(TEnv,2) // Handle ROOT configuration resources; 168};; 169 ; 170R__EXTERN TEnv *gEnv;; 171 ; 172#endif; R__EXTERN#define R__EXTERNDefinition DllImport.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8h_source.html:6400,config,configuration,6400,doc/master/TEnv_8h_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8h_source.html,1,['config'],['configuration']
Modifiability,"91 ; 292inline TIter TCollection::begin() const { return ++(TIter(this)); }; 293inline TIter TCollection::end() const { return TIter::End(); }; 294 ; 295namespace ROOT {; 296namespace Internal {; 297 ; 298const TCollection &EmptyCollection();; 299bool ContaineeInheritsFrom(TClass *cl, TClass *base);; 300 ; 301} // namespace Internal; 302 ; 303/// Special implementation of ROOT::RRangeCast for TCollection, including a; 304/// check that the cast target type inherits from TObject and a new constructor; 305/// that takes the TCollection by pointer.; 306/// \tparam T The new type to convert to.; 307/// \tparam isDynamic If `true`, `dynamic_cast` is used, otherwise `static_cast` is used.; 308namespace Detail {; 309 ; 310template <typename T, bool isDynamic>; 311class TRangeCast : public ROOT::RRangeCast<T*, isDynamic, TCollection const&> {; 312public:; 313 TRangeCast(TCollection const& col) : ROOT::RRangeCast<T*, isDynamic, TCollection const&>{col} {; 314 static_assert(std::is_base_of<TObject, T>::value, ""Containee type must inherit from TObject"");; 315 }; 316 TRangeCast(TCollection const* col) : TRangeCast{col != nullptr ? *col : ROOT::Internal::EmptyCollection()} {}; 317};; 318 ; 319/// @brief TRangeStaticCast is an adapter class that allows the typed iteration; 320/// through a TCollection. This requires the collection to contain elements; 321/// of the type requested (or a derived class). Any deviation from this expectation; 322/// will only be caught/reported by an assert in debug builds.; 323///; 324/// This is best used with a TClonesArray, for other cases prefered TRangeDynCast.; 325///; 326/// The typical use is:; 327/// ```{.cpp}; 328/// for(auto bcl : TRangeStaticCast<TBaseClass>( *tbaseClassClonesArrayPtr )) {; 329/// ... use bcl as a TBaseClass*; 330/// }; 331/// for(auto bcl : TRangeStaticCast<TBaseClass>( tbaseClassClonesArrayPtr )) {; 332/// ... use bcl as a TBaseClass*; 333/// }; 334/// ```; 335/// \tparam T The new type to convert to.; 336template <type",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8h_source.html:12254,inherit,inherit,12254,doc/master/TCollection_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8h_source.html,2,"['adapt', 'inherit']","['adapter', 'inherit']"
Modifiability,"91 }; 3992 } else if (fType == 3) {; 3993 printf("" %-15s = %d\n"", GetName(), fNdata);; 3994 } else if (fType == 31) {; 3995 TClonesArray* clones = (TClonesArray*) object;; 3996 if (GetInfoImp()) {; 3997 GetInfoImp()->PrintValueClones(GetName(), clones, prID, fOffset, lenmax);; 3998 }; 3999 } else if (fType == 41) {; 4000 TVirtualCollectionProxy::TPushPop helper(((TBranchElement*) this)->GetCollectionProxy(), object);; 4001 if (GetInfoImp()) {; 4002 GetInfoImp()->PrintValueSTL(GetName(), ((TBranchElement*) this)->GetCollectionProxy(), prID, fOffset, lenmax);; 4003 }; 4004 } else {; 4005 if (GetInfoImp()) {; 4006 GetInfoImp()->PrintValue(GetName(), object, prID, -1, lenmax);; 4007 }; 4008 }; 4009}; 4010 ; 4011////////////////////////////////////////////////////////////////////////////////; 4012/// Unconfiguration Read Leave function.; 4013 ; 4014void TBranchElement::ReadLeavesImpl(TBuffer&); 4015{; 4016 Fatal(""ReadLeaves"",""The ReadLeaves function has not been configured for %s"",GetName());; 4017}; 4018 ; 4019////////////////////////////////////////////////////////////////////////////////; 4020/// Read leaves into i/o buffers for this branch.; 4021/// For the case where the branch is set in MakeClass mode (decomposed object).; 4022 ; 4023void TBranchElement::ReadLeavesMakeClass(TBuffer& b); 4024{; 4025 ValidateAddress();; 4026 ; 4027 if (fType == 3 || fType == 4) {; 4028 // Top level branch of a TClonesArray.; 4029 Int_t *n = (Int_t*) fAddress;; 4030 b >> n[0];; 4031 if ((n[0] < 0) || (n[0] > fMaximum)) {; 4032 if (IsMissingCollection()) {; 4033 n[0] = 0;; 4034 b.SetBufferOffset(b.Length() - sizeof(n));; 4035 } else {; 4036 Error(""ReadLeaves"", ""Incorrect size read for the container in %s\nThe size read is %d when the maximum is %d\nThe size is reset to 0 for this entry (%lld)"", GetName(), n[0], fMaximum, GetReadEntry());; 4037 n[0] = 0;; 4038 }; 4039 }; 4040 fNdata = n[0];; 4041 if (fType == 4) {; 4042 Int_t nbranches = fBranches.GetEntriesFast();; 4043 switch(fSTLtype",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:147722,config,configured,147722,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['config'],['configured']
Modifiability,"91/// Normal Constructor for Profile histograms.; 92///; 93/// The first eleven parameters are similar to TH3D::TH3D.; 94/// All values of t are accepted at filling time.; 95/// To fill a profile3D histogram, one must use TProfile3D::Fill function.; 96///; 97/// Note that when filling the profile histogram the function Fill; 98/// checks if the variable t is between fTmin and fTmax.; 99/// If a minimum or maximum value is set for the T scale before filling,; 100/// then all values below tmin or above tmax will be discarded.; 101/// Setting the minimum or maximum value for the T scale before filling; 102/// has the same effect as calling the special TProfile3D constructor below; 103/// where tmin and tmax are specified.; 104///; 105/// H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; 106/// (spread option), or e(I,J,K) if CHOPT=' ' (error on mean).; 107///; 108/// See TProfile3D::BuildOptions for explanation of parameters; 109///; 110/// see other constructors below with all possible combinations of; 111/// fix and variable bin size like in TH3D.; 112 ; 113TProfile3D::TProfile3D(const char *name,const char *title,Int_t nx,Double_t xlow,Double_t xup,Int_t ny,Double_t ylow,Double_t yup,Int_t nz, Double_t zlow,Double_t zup,Option_t *option); 114 : TH3D(name,title,nx,xlow,xup,ny,ylow,yup,nz,zlow,zup); 115{; 116 BuildOptions(0,0,option);; 117 if (xlow >= xup || ylow >= yup || zlow >= zup) SetBuffer(fgBufferSize);; 118}; 119 ; 120////////////////////////////////////////////////////////////////////////////////; 121/// Create a 3-D Profile with variable bins in X , Y and Z.; 122 ; 123TProfile3D::TProfile3D(const char *name,const char *title,Int_t nx,const Double_t *xbins,Int_t ny,const Double_t *ybins,Int_t nz,const Double_t *zbins,Option_t *option); 124 : TH3D(name,title,nx,xbins,ny,ybins,nz,zbins); 125{; 126 BuildOptions(0,0,option);; 127}; 128 ; 129////////////////////////////////////////////////////////////////////////////////; 130",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:4513,variab,variable,4513,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['variab'],['variable']
Modifiability,"918#ifdef R__VISUAL_CPLUSPLUS; 1919 if (nvalues <= 0) {; 1920 buf.CheckByteCount(start,count,config->fTypeName);; 1921 return 0;; 1922 }; 1923#endif; 1924 T *begin = &(*vec->begin());; 1925 buf.ReadFastArray(begin, nvalues);; 1926 ; 1927 buf.CheckByteCount(start,count,config->fTypeName);; 1928 return 0;; 1929 }; 1930 ; 1931 ; 1932 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf); 1933 {; 1934 // Collection of numbers. Memberwise or not, it is all the same.; 1935 ; 1936 TConfigSTL *config = (TConfigSTL*)conf;; 1937 UInt_t start, count;; 1938 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1939 ; 1940 std::vector<float> *const vec = (std::vector<float>*)(((char*)addr)+config->fOffset);; 1941 Int_t nvalues;; 1942 buf.ReadInt(nvalues);; 1943 vec->resize(nvalues);; 1944 ; 1945#ifdef R__VISUAL_CPLUSPLUS; 1946 if (nvalues <= 0) {; 1947 buf.CheckByteCount(start,count,config->fTypeName);; 1948 return 0;; 1949 }; 1950#endif; 1951 float *begin = &(*vec->begin());; 1952 buf.ReadFastArrayFloat16(begin, nvalues);; 1953 ; 1954 buf.CheckByteCount(start,count,config->fTypeName);; 1955 return 0;; 1956 }; 1957 ; 1958 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 1959 {; 1960 // Collection of numbers. Memberwise or not, it is all the same.; 1961 ; 1962 TConfigSTL *config = (TConfigSTL*)conf;; 1963 UInt_t start, count;; 1964 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1965 ; 1966 std::vector<double> *const vec = (std::vector<double>*)(((char*)addr)+config->fOffset);; 1967 Int_t nvalues;; 1968 buf.ReadInt(nvalues);; 1969 vec->resize(nvalues);; 1970 ; 1971#ifdef R__VISUAL_CPLUSPLUS; 1972 if (nvalues <= 0) {; 1973 buf.CheckByteCount(start,count,config->fTypeName);; 1974 return 0;; 1975 }; 1976#endif; 1977 double *begin = &(*vec->begin());; 1978 buf.ReadFastArrayDouble32(begin, nvalues);; 1979 ; 1980 buf.Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:81142,config,config,81142,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,91864 0.689576 0.189646 0.0148842 14648.6 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.689168 0.677551 0.190642 0.015026 14577.3 0; : 5 | 0.686885 0.678678 0.189865 0.0148775 14629.7 1; : 6 | 0.68905 0.681357 0.189104 0.014885 14694.1 2; : 7 | 0.687138 0.683485 0.19023 0.0152893 14633.6 3; : 8 | 0.686429 0.685529 0.189996 0.0147979 14612 4; : 9 | 0.685179 0.683467 0.190317 0.0152552 14623.4 5; : 10 Minimum Test error found - save the configuration ; : 10 | 0.684262 0.673795 0.18992 0.0153518 14664.7 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.682907 0.671521 0.194162 0.0155002 14328.7 0; : 12 | 0.693473 0.677553 0.188937 0.0147664 14698.2 1; : 13 | 0.695581 0.671789 0.190501 0.0149406 14581.9 2; : 14 | 0.68024 0.680521 0.188432 0.0146998 14735.3 3; : 15 | 0.68435 0.688062 0.189615 0.0147881 14643.1 4; : 16 | 0.686476 0.675588 0.190015 0.0152195 14645.7 5; : 17 | 0.677004 0.674528 0.190369 0.0146787 14571.1 6; : 18 Minimum Test error found - save the configuration ; : 18 | 0.670403 0.662 0.188594 0.0151297 14758.1 0; : 19 | 0.673327 0.684121 0.189356 0.0146185 14650.5 1; : 20 | 0.68729 0.678527 0.188558 0.0148948 14741.2 2; : ; : Elapsed time for training with 3200 events: 3.82 sec ; : Evaluate deep neural network on CPU using batches with size = 256; : ; TMVA_DNN : [dataset] : Evaluation of TMVA_DNN on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.0999 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: PyKeras_LSTM for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ PyKeras_LSTM ] :␛[0m; : ; : Keras is a high-level API for the Theano and Tensorflow packages.; : This method wraps the training and predi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:19609,config,configuration,19609,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['config'],['configuration']
Modifiability,"94 ; 16295 (void)ad;; 16296 (void)arg;; 16297 ; 16298 if ((conn == NULL) || (conn->phys_ctx == NULL)) {; 16299 DEBUG_ASSERT(0);; 16300 return SSL_TLSEXT_ERR_NOACK;; 16301 }; 16302 conn->dom_ctx = &(conn->phys_ctx->dd);; 16303 ; 16304 /* Old clients (Win XP) will not support SNI. Then, there; 16305 * is no server name available in the request - we can; 16306 * only work with the default certificate.; 16307 * Multiple HTTPS hosts on one IP+port are only possible; 16308 * with a certificate containing all alternative names.; 16309 */; 16310 if ((servername == NULL) || (*servername == 0)) {; 16311 DEBUG_TRACE(""%s"", ""SSL connection not supporting SNI"");; 16312 mg_lock_context(conn->phys_ctx);; 16313 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16314 mg_unlock_context(conn->phys_ctx);; 16315 return SSL_TLSEXT_ERR_NOACK;; 16316 }; 16317 ; 16318 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16319 ; 16320 while (conn->dom_ctx) {; 16321 if (!mg_strcasecmp(servername,; 16322 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16323 /* Found matching domain */; 16324 DEBUG_TRACE(""TLS domain %s found"",; 16325 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16326 break;; 16327 }; 16328 mg_lock_context(conn->phys_ctx);; 16329 conn->dom_ctx = conn->dom_ctx->next;; 16330 mg_unlock_context(conn->phys_ctx);; 16331 }; 16332 ; 16333 if (conn->dom_ctx == NULL) {; 16334 /* Default domain */; 16335 DEBUG_TRACE(""TLS default domain %s used"",; 16336 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16337 conn->dom_ctx = &(conn->phys_ctx->dd);; 16338 }; 16339 mg_lock_context(conn->phys_ctx);; 16340 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16341 mg_unlock_context(conn->phys_ctx);; 16342 return SSL_TLSEXT_ERR_OK;; 16343}; 16344 ; 16345 ; 16346#if defined(USE_ALPN); 16347static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16348static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16349 alpn_proto_list + 3 + 8,; 16350 NULL};; 16351#if defined(USE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:482513,config,config,482513,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['config'],['config']
Modifiability,"94 ; 95 typedef ROOT::Math::IMultiGenFunction BaseFunc;; 96 typedef ROOT::Math::IMultiGradFunction BaseGradFunc;; 97 ; 98 ; 99 /**; 100 Default constructor; 101 */; 102 Fitter () {}; 103 ; 104 /**; 105 Constructor from a result; 106 */; 107 Fitter (const std::shared_ptr<FitResult> & result);; 108 ; 109 ; 110 /**; 111 Destructor.; 112 Make it virtual in case users derive from Fitter class to extend it by adding new methods.; 113 This is needed to avoid a warning seen when doing from Python; 114 (see ROOT issue [#12391](https://github.com/root-project/root/issues/12391) ).; 115 Note that the Fitter class does not provide virtual functions to be re-implemented by derived classes.; 116 */; 117 virtual ~Fitter () {}; 118 ; 119 /**; 120 Copy constructor (disabled, class is not copyable); 121 */; 122 Fitter(const Fitter &) = delete;; 123 ; 124 /**; 125 Assignment operator (disabled, class is not copyable); 126 */; 127 Fitter & operator = (const Fitter &) = delete;; 128 ; 129 ; 130public:; 131 ; 132 /**; 133 fit a data set using any generic model function; 134 If data set is binned a least square fit is performed; 135 If data set is unbinned a maximum likelihood fit (not extended) is done; 136 Pre-requisite on the function:; 137 it must implement the 1D or multidimensional parametric function interface.; 138 Note that both the input data and the function object are copied by the Fitter.; 139 */; 140 template <class Data, class Function,; 141 class cond = typename std::enable_if<!(std::is_same<Function, ROOT::EExecutionPolicy>::value ||; 142 std::is_same<Function, int>::value),; 143 Function>::type>; 144 bool Fit(const Data &data, const Function &func,; 145 const ROOT::EExecutionPolicy &executionPolicy = ROOT::EExecutionPolicy::kSequential); 146 {; 147 SetFunction(func);; 148 return Fit(data, executionPolicy);; 149 }; 150 ; 151 /**; 152 Fit a binned data set using a least square fit.; 153 Note that the provided input data are copied in the Fitter class.; 154 Use the next func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:4454,extend,extended,4454,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['extend'],['extended']
Modifiability,"94) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 16 of file TSpectrum2Transform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSpectrum2Transform ();  Default constructor. ;  ;  TSpectrum2Transform (Int_t sizeX, Int_t sizeY);  The constructor creates TSpectrum2Transform object. ;  ;  ~TSpectrum2Transform () override;  Destructor. ;  ; void Enhance (const Double_t **fSource, Double_t **fDest);  This function transforms the source spectrum. ;  ; void FilterZonal (const Double_t **fSource, Double_t **fDest);  This function transforms the source spe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:2340,inherit,inherited,2340,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['inherit'],['inherited']
Modifiability,"945/// Static function returning `gStyle->GetAxisMaxDigits()`.; 946 ; 947Int_t TGaxis::GetMaxDigits(); 948{; 949 return gStyle->GetAxisMaxDigits();; 950}; 951 ; 952////////////////////////////////////////////////////////////////////////////////; 953/// Internal method to import TAxis attributes to this TGaxis.; 954 ; 955void TGaxis::ImportAxisAttributes(TAxis *axis); 956{; 957 // cleanup previously configured custom labels; 958 CleanupModLabs();; 959 ; 960 fAxis = axis;; 961 SetLineColor(axis->GetAxisColor());; 962 SetTextColor(axis->GetTitleColor());; 963 SetTextFont(axis->GetTitleFont());; 964 SetLabelColor(axis->GetLabelColor());; 965 SetLabelFont(axis->GetLabelFont());; 966 SetLabelSize(axis->GetLabelSize());; 967 SetLabelOffset(axis->GetLabelOffset());; 968 SetTickSize(axis->GetTickLength());; 969 SetTitle(axis->GetTitle());; 970 SetTitleOffset(axis->GetTitleOffset());; 971 SetTitleSize(axis->GetTitleSize());; 972 SetBit(TAxis::kCenterTitle, axis->TestBit(TAxis::kCenterTitle));; 973 SetBit(TAxis::kCenterLabels, axis->TestBit(TAxis::kCenterLabels));; 974 SetBit(TAxis::kRotateTitle, axis->TestBit(TAxis::kRotateTitle));; 975 SetBit(TAxis::kNoExponent, axis->TestBit(TAxis::kNoExponent));; 976 SetBit(TAxis::kTickPlus, axis->TestBit(TAxis::kTickPlus));; 977 SetBit(TAxis::kTickMinus, axis->TestBit(TAxis::kTickMinus));; 978 SetBit(TAxis::kMoreLogLabels, axis->TestBit(TAxis::kMoreLogLabels));; 979 if (axis->GetDecimals()) SetBit(TAxis::kDecimals); //the bit is in TAxis::fAxis2; 980 SetTimeFormat(axis->GetTimeFormat());; 981}; 982 ; 983////////////////////////////////////////////////////////////////////////////////; 984/// Draw this axis with its current attributes.; 985 ; 986void TGaxis::Paint(Option_t *); 987{; 988 if (!gPad) return;; 989 ; 990 Double_t wmin = fWmin;; 991 Double_t wmax = fWmax;; 992 Int_t ndiv = fNdiv;; 993 ; 994 // following code required to support toggle of lin/log scales; 995 Double_t x1 = gPad->XtoPad(fX1);; 996 Double_t y1 = gPad->YtoPad(fY1);; 9",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:32989,config,configured,32989,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['config'],['configured']
Modifiability,"949/// - pary2p(i) y value of point i; 5950///; 5951/// - coef2p(1...3) coefficients of the fitted parabola; 5952/// - y=coef2p(1) + coef2p(2)*x + coef2p(3)*x**2; 5953/// - sdev2p= variance; 5954/// - method : chi**2 = min equation solved explicitly; 5955 ; 5956void TMinuit::mnpfit(Double_t *parx2p, Double_t *pary2p, Int_t npar2p, Double_t *coef2p, Double_t &sdev2p); 5957{; 5958 /* Local variables */; 5959 Double_t a, f, s, t, y, s2, x2, x3, x4, y2, cz[3], xm, xy, x2y;; 5960 x2 = x3 = 0;; 5961 Int_t i;; 5962 ; 5963 /* Parameter adjustments */; 5964 --coef2p;; 5965 --pary2p;; 5966 --parx2p;; 5967 ; 5968 /* Function Body */; 5969 for (i = 1; i <= 3; ++i) { cz[i-1] = 0; }; 5970 sdev2p = 0;; 5971 if (npar2p < 3) goto L10;; 5972 f = (Double_t) (npar2p);; 5973// center x values for reasons of machine precision; 5974 xm = 0;; 5975 for (i = 1; i <= npar2p; ++i) { xm += parx2p[i]; }; 5976 xm /= f;; 5977 x2 = 0;; 5978 x3 = 0;; 5979 x4 = 0;; 5980 y = 0;; 5981 y2 = 0;; 5982 xy = 0;; 5983 x2y = 0;; 5984 for (i = 1; i <= npar2p; ++i) {; 5985 s = parx2p[i] - xm;; 5986 t = pary2p[i];; 5987 s2 = s*s;; 5988 x2 += s2;; 5989 x3 += s*s2;; 5990 x4 += s2*s2;; 5991 y += t;; 5992 y2 += t*t;; 5993 xy += s*t;; 5994 x2y += s2*t;; 5995 }; 5996 a = (f*x4 - x2*x2)*x2 - f*(x3*x3);; 5997 if (a == 0) goto L10;; 5998 cz[2] = (x2*(f*x2y - x2*y) - f*x3*xy) / a;; 5999 cz[1] = (xy - x3*cz[2]) / x2;; 6000 cz[0] = (y - x2*cz[2]) / f;; 6001 if (npar2p == 3) goto L6;; 6002 sdev2p = y2 - (cz[0]*y + cz[1]*xy + cz[2]*x2y);; 6003 if (sdev2p < 0) sdev2p = 0;; 6004 sdev2p /= f - 3;; 6005L6:; 6006 cz[0] += xm*(xm*cz[2] - cz[1]);; 6007 cz[1] -= xm*2*cz[2];; 6008L10:; 6009 for (i = 1; i <= 3; ++i) { coef2p[i] = cz[i-1]; }; 6010}; 6011 ; 6012////////////////////////////////////////////////////////////////////////////////; 6013/// Calculates the internal parameter value PINTI; 6014///; 6015/// corresponding to the external value PEXTI for parameter I.; 6016 ; 6017void TMinuit::mnpint(Double_t &pexti, Int_t i1, Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:193917,variab,variables,193917,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"94939 a=0.0002833, ; prevFCN = 1659.944972 a=-0.0002833, ; prevFCN = 1659.919376 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001207, ; prevFCN = 1659.902797 a=-0.001266, ; prevFCN = 1659.902798 [#1] INFO:Minimization -- Command timer: Real time 0:00:02, CP time 2.710; [#1] INFO:Minimization -- Session timer: Real time 0:00:02, CP time 2.710; a=-0.001237, ; prevFCN = 1659.902781 a=-0.001207, ; prevFCN = 1659.902797 a=-0.001266, ; prevFCN = 1659.902798 a=-0.001231, ; prevFCN = 1659.902782 a=-0.001243, ; prevFCN = 1659.902782 [#1] INFO:Minimization -- Command timer: Real time 0:00:00, CP time 0.960; [#1] INFO:Minimization -- Session timer: Real time 0:00:03, CP time 3.670, 2 slices; a=-0.001237, [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#0] WARNING:NumericIntegration -- RooAdaptiveIntegratorND::dtor(model) WARNING: Number of suppressed warningings about integral evaluations where target precision was not reached is 17; [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(x,y,z); [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[y,z]_Norm[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(y,z); [#0] WARNING:NumericIntegration -- RooAdaptiveIntegratorND::dtor(model) WARNING: Number of suppressed warningings about integral evaluations where target precision was not reached is 1; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf903_numintcache.py. tutorialsroofitrf903_numintcache.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf903__numintcache_8py.html:5855,variab,variables,5855,doc/master/rf903__numintcache_8py.html,https://root.cern,https://root.cern/doc/master/rf903__numintcache_8py.html,1,['variab'],['variables']
Modifiability,"95 ; 16296 (void)ad;; 16297 (void)arg;; 16298 ; 16299 if ((conn == NULL) || (conn->phys_ctx == NULL)) {; 16300 DEBUG_ASSERT(0);; 16301 return SSL_TLSEXT_ERR_NOACK;; 16302 }; 16303 conn->dom_ctx = &(conn->phys_ctx->dd);; 16304 ; 16305 /* Old clients (Win XP) will not support SNI. Then, there; 16306 * is no server name available in the request - we can; 16307 * only work with the default certificate.; 16308 * Multiple HTTPS hosts on one IP+port are only possible; 16309 * with a certificate containing all alternative names.; 16310 */; 16311 if ((servername == NULL) || (*servername == 0)) {; 16312 DEBUG_TRACE(""%s"", ""SSL connection not supporting SNI"");; 16313 mg_lock_context(conn->phys_ctx);; 16314 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16315 mg_unlock_context(conn->phys_ctx);; 16316 return SSL_TLSEXT_ERR_NOACK;; 16317 }; 16318 ; 16319 DEBUG_TRACE(""TLS connection to host %s"", servername);; 16320 ; 16321 while (conn->dom_ctx) {; 16322 if (!mg_strcasecmp(servername,; 16323 conn->dom_ctx->config[AUTHENTICATION_DOMAIN])) {; 16324 /* Found matching domain */; 16325 DEBUG_TRACE(""TLS domain %s found"",; 16326 conn->dom_ctx->config[AUTHENTICATION_DOMAIN]);; 16327 break;; 16328 }; 16329 mg_lock_context(conn->phys_ctx);; 16330 conn->dom_ctx = conn->dom_ctx->next;; 16331 mg_unlock_context(conn->phys_ctx);; 16332 }; 16333 ; 16334 if (conn->dom_ctx == NULL) {; 16335 /* Default domain */; 16336 DEBUG_TRACE(""TLS default domain %s used"",; 16337 conn->phys_ctx->dd.config[AUTHENTICATION_DOMAIN]);; 16338 conn->dom_ctx = &(conn->phys_ctx->dd);; 16339 }; 16340 mg_lock_context(conn->phys_ctx);; 16341 SSL_set_SSL_CTX(ssl, conn->dom_ctx->ssl_ctx);; 16342 mg_unlock_context(conn->phys_ctx);; 16343 return SSL_TLSEXT_ERR_OK;; 16344}; 16345 ; 16346 ; 16347#if defined(USE_ALPN); 16348static const char alpn_proto_list[] = ""\x02h2\x08http/1.1\x08http/1.0"";; 16349static const char *alpn_proto_order_http1[] = {alpn_proto_list + 3,; 16350 alpn_proto_list + 3 + 8,; 16351 NULL};; 16352#if defined(USE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:482546,config,config,482546,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],['config']
Modifiability,"96 // Booking Seed; 2297 BookMethod(seedloader, theMethod, methodTitle, theOption);; 2298 ; 2299 // Train/Test/Evaluation; 2300 TrainAllMethods();; 2301 TestAllMethods();; 2302 EvaluateAllMethods();; 2303 ; 2304 // getting ROC; 2305 ROC[x] = GetROCIntegral(xbitset.to_string(), methodTitle);; 2306 ; 2307 // cleaning information to process sub-seeds; 2308 TMVA::MethodBase *smethod = dynamic_cast<TMVA::MethodBase *>(fMethodsMap[xbitset.to_string().c_str()][0][0]);; 2309 TMVA::ResultsClassification *sresults = (TMVA::ResultsClassification *)smethod->Data()->GetResults(; 2310 smethod->GetMethodName(), Types::kTesting, Types::kClassification);; 2311 delete sresults;; 2312 delete seedloader;; 2313 this->DeleteAllMethods();; 2314 ; 2315 fMethodsMap.clear();; 2316 // removing global result because it is requiring a lot of RAM for all seeds; 2317 }; 2318 ; 2319 for (x = 0; x < range; x++) {; 2320 SROC = ROC[x];; 2321 for (uint32_t i = 0; i < VIBITS; ++i) {; 2322 if (x & (uint64_t(1) << i)) {; 2323 y = x & ~(1 << i);; 2324 std::bitset<VIBITS> ybitset(y);; 2325 // need at least one variable; 2326 // NOTE: if sub-seed is zero then is the special case; 2327 // that count in xbitset is 1; 2328 uint32_t ny = static_cast<uint32_t>( log(x - y) / 0.693147 ) ;; 2329 if (y == 0) {; 2330 importances[ny] = SROC - 0.5;; 2331 continue;; 2332 }; 2333 ; 2334 // getting ROC; 2335 SSROC = ROC[y];; 2336 importances[ny] += SROC - SSROC;; 2337 // cleaning information; 2338 }; 2339 }; 2340 }; 2341 std::cout << ""--- Variable Importance Results (All)"" << std::endl;; 2342 return GetImportance(nbits, importances, varNames);; 2343}; 2344 ; 2345static uint64_t sum(uint64_t i); 2346{; 2347 // add a limit for overflows; 2348 if (i > 62) return 0;; 2349 return static_cast<uint64_t>( std::pow(2, i + 1)) - 1;; 2350 // uint64_t _sum = 0;; 2351 // for (uint64_t n = 0; n < i; n++); 2352 // _sum += pow(2, n);; 2353 // return _sum;; 2354}; 2355 ; 2356/////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:97676,variab,variable,97676,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"96 return mg_get_var2(data, data_len, name, dst, dst_len, 0);; 6997}; 6998 ; 6999 ; 7000int; 7001mg_get_var2(const char *data,; 7002 size_t data_len,; 7003 const char *name,; 7004 char *dst,; 7005 size_t dst_len,; 7006 size_t occurrence); 7007{; 7008 const char *p, *e, *s;; 7009 size_t name_len;; 7010 int len;; 7011 ; 7012 if ((dst == NULL) || (dst_len == 0)) {; 7013 len = -2;; 7014 } else if ((data == NULL) || (name == NULL) || (data_len == 0)) {; 7015 len = -1;; 7016 dst[0] = '\0';; 7017 } else {; 7018 name_len = strlen(name);; 7019 e = data + data_len;; 7020 len = -1;; 7021 dst[0] = '\0';; 7022 ; 7023 /* data is ""var1=val1&var2=val2..."". Find variable first */; 7024 for (p = data; p + name_len < e; p++) {; 7025 if (((p == data) || (p[-1] == '&')) && (p[name_len] == '='); 7026 && !mg_strncasecmp(name, p, name_len) && 0 == occurrence--) {; 7027 /* Point p to variable value */; 7028 p += name_len + 1;; 7029 ; 7030 /* Point s to the end of the value */; 7031 s = (const char *)memchr(p, '&', (size_t)(e - p));; 7032 if (s == NULL) {; 7033 s = e;; 7034 }; 7035 DEBUG_ASSERT(s >= p);; 7036 if (s < p) {; 7037 return -3;; 7038 }; 7039 ; 7040 /* Decode variable into destination buffer */; 7041 len = mg_url_decode(p, (int)(s - p), dst, (int)dst_len, 1);; 7042 ; 7043 /* Redirect error code from -1 to -2 (destination buffer too; 7044 * small). */; 7045 if (len == -1) {; 7046 len = -2;; 7047 }; 7048 break;; 7049 }; 7050 }; 7051 }; 7052 ; 7053 return len;; 7054}; 7055 ; 7056 ; 7057/* split a string ""key1=val1&key2=val2"" into key/value pairs */; 7058int; 7059mg_split_form_urlencoded(char *data,; 7060 struct mg_header *form_fields,; 7061 unsigned num_form_fields); 7062{; 7063 char *b;; 7064 int i;; 7065 int num = 0;; 7066 ; 7067 if (data == NULL) {; 7068 /* parameter error */; 7069 return -1;; 7070 }; 7071 ; 7072 if ((form_fields == NULL) && (num_form_fields == 0)) {; 7073 /* determine the number of expected fields */; 7074 if (data[0] == 0) {; 7075 return 0;; 7076 }; 7077 /* count ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:202757,variab,variable,202757,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,3,['variab'],['variable']
Modifiability,"9616 TBasket CX = 1.08; 20010404/150441 At:214574 N=29075 TBasket CX = 1.10; 20010404/150441 At:243649 N=9583 TBasket CX = 3.34; 20010404/150442 At:253232 N=28324 TBasket CX = 1.13; 20010404/150442 At:281556 N=29641 TBasket CX = 1.08; 20010404/150442 At:311197 N=29633 TBasket CX = 1.08; 20010404/150442 At:340830 N=29091 TBasket CX = 1.10; 20010404/150442 At:369921 N=10341 TBasket CX = 3.09; 20010404/150442 At:380262 N=509 TH1F CX = 1.93; 20010404/150442 At:380771 N=1769 TH2F CX = 4.32; 20010404/150442 At:382540 N=1849 TProfile CX = 1.65; 20010404/150442 At:384389 N=18434 TNtuple CX = 4.51; 20010404/150442 At:402823 N=307 KeysList; 20010404/150443 At:403130 N=4548 StreamerInfo CX = 3.65; 20010404/150443 At:407678 N=86 FreeSegments; 20010404/150443 At:407764 N=1 END; If the parameter opt contains ""forComp"", the Date/Time is omitted and the decompressed size is also printed.; Record_Adress Logical_Record_Length Key_Length Object_Record_Length ClassName CompressionFactor; If the parameter opt contains ""extended"", the name and title of the keys are added: 20200820/155031 At:100 N=180 TFile name: hsimple.root title: Demo ROOT file with histograms 220200820/155032 At:280 N=28880 TBasket CX = 1.11 name: random title: ntuple 220200820/155032 At:29160 N=29761 TBasket CX = 1.08 name: px title: ntuple 220200820/155032 At:58921 N=29725 TBasket CX = 1.08 name: py title: ntuple 220200820/155032 At:88646 N=29209 TBasket CX = 1.10 name: pz title: ntuple 220200820/155032 At:117855 N=10197 TBasket CX = 3.14 name: i title: ntuple ... 20200820/155032 At:405110 N=808 TNtuple CX = 3.53 name: ntuple title: Demo ntuple 20200820/155706 At:405918 N=307 KeysList name: hsimple.root title: Demo ROOT file with histograms 20200820/155032 At:406225 N=8556 StreamerInfo CX = 3.42 name: StreamerInfo title: Doubly linked list 20200820/155708 At:414781 N=86 FreeSegments name: hsimple.root title: Demo ROOT file with histograms 20200820/155708 At:414867 N=1 END; Note: The combined size of the classname, n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:62791,extend,extended,62791,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,4,['extend'],['extended']
Modifiability,"97 return mg_get_var2(data, data_len, name, dst, dst_len, 0);; 6998}; 6999 ; 7000 ; 7001int; 7002mg_get_var2(const char *data,; 7003 size_t data_len,; 7004 const char *name,; 7005 char *dst,; 7006 size_t dst_len,; 7007 size_t occurrence); 7008{; 7009 const char *p, *e, *s;; 7010 size_t name_len;; 7011 int len;; 7012 ; 7013 if ((dst == NULL) || (dst_len == 0)) {; 7014 len = -2;; 7015 } else if ((data == NULL) || (name == NULL) || (data_len == 0)) {; 7016 len = -1;; 7017 dst[0] = '\0';; 7018 } else {; 7019 name_len = strlen(name);; 7020 e = data + data_len;; 7021 len = -1;; 7022 dst[0] = '\0';; 7023 ; 7024 /* data is ""var1=val1&var2=val2..."". Find variable first */; 7025 for (p = data; p + name_len < e; p++) {; 7026 if (((p == data) || (p[-1] == '&')) && (p[name_len] == '='); 7027 && !mg_strncasecmp(name, p, name_len) && 0 == occurrence--) {; 7028 /* Point p to variable value */; 7029 p += name_len + 1;; 7030 ; 7031 /* Point s to the end of the value */; 7032 s = (const char *)memchr(p, '&', (size_t)(e - p));; 7033 if (s == NULL) {; 7034 s = e;; 7035 }; 7036 DEBUG_ASSERT(s >= p);; 7037 if (s < p) {; 7038 return -3;; 7039 }; 7040 ; 7041 /* Decode variable into destination buffer */; 7042 len = mg_url_decode(p, (int)(s - p), dst, (int)dst_len, 1);; 7043 ; 7044 /* Redirect error code from -1 to -2 (destination buffer too; 7045 * small). */; 7046 if (len == -1) {; 7047 len = -2;; 7048 }; 7049 break;; 7050 }; 7051 }; 7052 }; 7053 ; 7054 return len;; 7055}; 7056 ; 7057 ; 7058/* split a string ""key1=val1&key2=val2"" into key/value pairs */; 7059int; 7060mg_split_form_urlencoded(char *data,; 7061 struct mg_header *form_fields,; 7062 unsigned num_form_fields); 7063{; 7064 char *b;; 7065 int i;; 7066 int num = 0;; 7067 ; 7068 if (data == NULL) {; 7069 /* parameter error */; 7070 return -1;; 7071 }; 7072 ; 7073 if ((form_fields == NULL) && (num_form_fields == 0)) {; 7074 /* determine the number of expected fields */; 7075 if (data[0] == 0) {; 7076 return 0;; 7077 }; 7078 /* count ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:202789,variab,variable,202789,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,3,['variab'],['variable']
Modifiability,98 0; : 603 Minimum Test error found - save the configuration ; : 603 | 116.739 75.9525 0.0201101 0.00180951 43714.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80124,config,configuration,80124,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"99 of file TH3.cxx. ◆ TH3S() [2/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup, . Int_t ; nbinsz, . Double_t ; zlow, . Double_t ; zup . ). Constructor for fix bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3818 of file TH3.cxx. ◆ TH3S() [3/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Float_t * ; xbins, . Int_t ; nbinsy, . const Float_t * ; ybins, . Int_t ; nbinsz, . const Float_t * ; zbins . ). Constructor for variable bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3834 of file TH3.cxx. ◆ TH3S() [4/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins, . Int_t ; nbinsz, . const Double_t * ; zbins . ). Constructor for variable bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3848 of file TH3.cxx. ◆ TH3S() [5/5]. TH3S::TH3S ; (; const TH3S & ; h3s). Copy Constructor. ; The list of functions is not copied. (Use Clone() if needed) ; Definition at line 3862 of file TH3.cxx. ◆ ~TH3S(). TH3S::~TH3S ; (; ). override . Destructor. ; Definition at line 3809 of file TH3.cxx. Member Function Documentation. ◆ AddBinContent() [1/4]. void TH3S::AddBinContent ; (; Int_t ; bin). overridevirtual . Increment bin content by 1. ; Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH3.; Definition at line 3872 of file TH3.cxx. ◆ AddBinContent() [2/4]. void TH3S::AddBinContent ; (; Int_t ; bin, . Double_t ; w . ). overridevirtual . Increment bin content by w. ; WarningThe value of w is cast to Int_t before being added. Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH3.; Definition at line 3883 of file TH3.cxx. ◆ AddBinContent() [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:62436,variab,variable,62436,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['variab'],['variable']
Modifiability,"994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 18 of file TSpectrumTransform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2; , kTransformSin =3; , ;   kTransformFourier =4; , kTransformHartley =5; , kTransformFourierWalsh =6; , kTransformFourierHaar =7; , ;   kTransformWalshHaar =8; , kTransformCosWalsh =9; , kTransformCosHaar =10; , kTransformSinWalsh =11; , ;   kTransformSinHaar =12; , kTransformForward =0; , kTransformInverse =1. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSpectrumTransform ();  default constructor ;  ;  TSpectrumTransform (Int_t size);  the constructor creates TSpectrumTransform object. ;  ;  ~TSpectrumTransform () override;  Destructor. ;  ; void Enhance (const Double_t *source, Double_t *destVector);  This function transforms the source spectrum. ;  ; void FilterZonal (const Double_t *source, Double_t *destVector);  This function transforms the source spectrum. ;  ; TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:2334,inherit,inherited,2334,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['inherit'],['inherited']
Modifiability,"9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. leg = new TLegend(0.1,0.7,0.48,0.9);; leg->SetHeader(""The Legend Title"");; leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; leg->Draw();. return c1;; }; Note that the TPad class has a method to build automatically a legend; for all objects in the pad. It is called TPad::BuildLegend(). Each item in the legend is added using the AddEntry method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified. As shown in the following example, passing a NULL pointer as first parameter in; AddEntry is also valid. This allows to add text or blank lines in a; legend. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg->AddEntry(h, ""Histogram \""h\"""", ""l""); ; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry((TObject*)0, ""Some text"", """");; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. leg->Draw();; return c2;; }. Function Members (Methods); public:. TLegend(); TLegend(const TLegend& legend); TLegend(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* header = """", Option_t* option = ""brNDC""); virtual~TLegend(); voidTObject::AbstractMethod(const char* method) const; TLegendEntry*AddEntry(const TObject* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLegend.html:2658,inherit,inherits,2658,root/html528/TLegend.html,https://root.cern,https://root.cern/root/html528/TLegend.html,6,['inherit'],['inherits']
Modifiability,"9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. leg = new TLegend(0.1,0.7,0.48,0.9);; leg->SetHeader(""The Legend Title"");; leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; leg->Draw();. return c1;; }; Note that the TPad class has a method to build automatically a legend; for all objects in the pad. It is called TPad::BuildLegend(). Each item in the legend is added using the AddEntry method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified. As shown in the following example, passing a NULL pointer as first parameter in; AddEntry is also valid. This allows to add text or blank lines in a; legend. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg->AddEntry(h, ""Histogram \""h\"""", ""l""); ; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry((TObject*)0, ""Some text"", """");; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. leg->Draw();; return c2;; }; It is possible to draw the legend entries over several columns using; the method SetNColumns() like in the following example. Picture; Source. {; TCanvas *c3 = new TCanvas(""c2"",""c2"",500,300);; ; TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);; ; leg-> SetNColumns(2);; ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLegend.html:2658,inherit,inherits,2658,root/html532/TLegend.html,https://root.cern,https://root.cern/root/html532/TLegend.html,6,['inherit'],['inherits']
Modifiability,"9void TMVA::MethodCuts::GetHelpMessage() const; 1720{; 1721 TString bold = gConfig().WriteOptionsReference() ? ""<b>"" : """";; 1722 TString resbold = gConfig().WriteOptionsReference() ? ""</b>"" : """";; 1723 TString brk = gConfig().WriteOptionsReference() ? ""<br>"" : """";; 1724 ; 1725 Log() << Endl;; 1726 Log() << gTools().Color(""bold"") << ""--- Short description:"" << gTools().Color(""reset"") << Endl;; 1727 Log() << Endl;; 1728 Log() << ""The optimisation of rectangular cuts performed by TMVA maximises "" << Endl;; 1729 Log() << ""the background rejection at given signal efficiency, and scans "" << Endl;; 1730 Log() << ""over the full range of the latter quantity. Three optimisation"" << Endl;; 1731 Log() << ""methods are optional: Monte Carlo sampling (MC), a Genetics"" << Endl;; 1732 Log() << ""Algorithm (GA), and Simulated Annealing (SA). GA and SA are"" << Endl;; 1733 Log() << ""expected to perform best."" << Endl;; 1734 Log() << Endl;; 1735 Log() << ""The difficulty to find the optimal cuts strongly increases with"" << Endl;; 1736 Log() << ""the dimensionality (number of input variables) of the problem."" << Endl;; 1737 Log() << ""This behavior is due to the non-uniqueness of the solution space.""<< Endl;; 1738 Log() << Endl;; 1739 Log() << gTools().Color(""bold"") << ""--- Performance optimisation:"" << gTools().Color(""reset"") << Endl;; 1740 Log() << Endl;; 1741 Log() << ""If the dimensionality exceeds, say, 4 input variables, it is "" << Endl;; 1742 Log() << ""advisable to scrutinize the separation power of the variables,"" << Endl;; 1743 Log() << ""and to remove the weakest ones. If some among the input variables"" << Endl;; 1744 Log() << ""can be described by a single cut (e.g., because signal tends to be"" << Endl;; 1745 Log() << ""larger than background), this can be indicated to MethodCuts via"" << Endl;; 1746 Log() << ""the \""Fsmart\"" options (see option string). Choosing this option"" << Endl;; 1747 Log() << ""reduces the number of requirements for the variable from 2 (min/max)"" << Endl;; 1748 Lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:67836,variab,variables,67836,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['variab'],['variables']
Modifiability,": """",; 15394 ri->http_version,; 15395 conn->status_code,; 15396 conn->num_bytes_sent,; 15397 referer,; 15398 user_agent);; 15399 }; 15400 ; 15401 /* Here we have a log message in log_buf. Call the callback */; 15402 if (conn->phys_ctx->callbacks.log_access) {; 15403 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15404 /* do not log if callack returns non-zero */; 15405 if (fi.access.fp) {; 15406 mg_fclose(&fi.access);; 15407 }; 15408 return;; 15409 }; 15410 }; 15411 ; 15412 /* Store in file */; 15413 if (fi.access.fp) {; 15414 int ok = 1;; 15415 flockfile(fi.access.fp);; 15416 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15417 ok = 0;; 15418 }; 15419 if (fflush(fi.access.fp) != 0) {; 15420 ok = 0;; 15421 }; 15422 funlockfile(fi.access.fp);; 15423 if (mg_fclose(&fi.access) != 0) {; 15424 ok = 0;; 15425 }; 15426 if (!ok) {; 15427 mg_cry_internal(conn,; 15428 ""Error writing log file %s"",; 15429 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15430 }; 15431 }; 15432}; 15433#else; 15434#error ""Either enable filesystems or provide a custom log_access implementation""; 15435#endif /* Externally provided function */; 15436 ; 15437 ; 15438/* Verify given socket address against the ACL.; 15439 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15440 */; 15441static int; 15442check_acl(struct mg_context *phys_ctx, const union usa *sa); 15443{; 15444 int allowed, flag, matched;; 15445 struct vec vec;; 15446 ; 15447 if (phys_ctx) {; 15448 const char *list = phys_ctx->dd.config[ACCESS_CONTROL_LIST];; 15449 ; 15450 /* If any ACL is set, deny by default */; 15451 allowed = (list == NULL) ? '+' : '-';; 15452 ; 15453 while ((list = next_option(list, &vec, NULL)) != NULL) {; 15454 flag = vec.ptr[0];; 15455 matched = -1;; 15456 if ((vec.len > 0) && ((flag == '+') || (flag == '-'))) {; 15457 vec.ptr++;; 15458 vec.len--;; 15459 matched = parse_match_net(&vec, sa, 1);; 15460 }; 15461 if (matched < 0) {; 15462 mg_cry_ctx_internal(phys_ctx,; 15463 ""%s: su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:456155,config,config,456155,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,": """",; 15395 ri->http_version,; 15396 conn->status_code,; 15397 conn->num_bytes_sent,; 15398 referer,; 15399 user_agent);; 15400 }; 15401 ; 15402 /* Here we have a log message in log_buf. Call the callback */; 15403 if (conn->phys_ctx->callbacks.log_access) {; 15404 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15405 /* do not log if callack returns non-zero */; 15406 if (fi.access.fp) {; 15407 mg_fclose(&fi.access);; 15408 }; 15409 return;; 15410 }; 15411 }; 15412 ; 15413 /* Store in file */; 15414 if (fi.access.fp) {; 15415 int ok = 1;; 15416 flockfile(fi.access.fp);; 15417 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15418 ok = 0;; 15419 }; 15420 if (fflush(fi.access.fp) != 0) {; 15421 ok = 0;; 15422 }; 15423 funlockfile(fi.access.fp);; 15424 if (mg_fclose(&fi.access) != 0) {; 15425 ok = 0;; 15426 }; 15427 if (!ok) {; 15428 mg_cry_internal(conn,; 15429 ""Error writing log file %s"",; 15430 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15431 }; 15432 }; 15433}; 15434#else; 15435#error ""Either enable filesystems or provide a custom log_access implementation""; 15436#endif /* Externally provided function */; 15437 ; 15438 ; 15439/* Verify given socket address against the ACL.; 15440 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15441 */; 15442static int; 15443check_acl(struct mg_context *phys_ctx, const union usa *sa); 15444{; 15445 int allowed, flag, matched;; 15446 struct vec vec;; 15447 ; 15448 if (phys_ctx) {; 15449 const char *list = phys_ctx->dd.config[ACCESS_CONTROL_LIST];; 15450 ; 15451 /* If any ACL is set, deny by default */; 15452 allowed = (list == NULL) ? '+' : '-';; 15453 ; 15454 while ((list = next_option(list, &vec, NULL)) != NULL) {; 15455 flag = vec.ptr[0];; 15456 matched = -1;; 15457 if ((vec.len > 0) && ((flag == '+') || (flag == '-'))) {; 15458 vec.ptr++;; 15459 vec.len--;; 15460 matched = parse_match_net(&vec, sa, 1);; 15461 }; 15462 if (matched < 0) {; 15463 mg_cry_ctx_internal(phys_ctx,; 15464 ""%s: su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:456188,config,config,456188,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,": +1.000 +0.854 +0.917 +0.965; : var2: +0.854 +1.000 +0.926 +0.934; : var3: +0.917 +0.926 +1.000 +0.972; : var4: +0.965 +0.934 +0.972 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [tmva003_BDT] : ; : ; <HEADER> Factory : Train all methods; <HEADER> Factory : [tmva003_BDT] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'var1' <---> Output : variable 'var1'; : Input : variable 'var2' <---> Output : variable 'var2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.017312 1.6864 [ -5.8991 4.7639 ]; : var2: 0.0068952 1.5665 [ -5.2454 4.6508 ]; : var3: 0.0094455 1.7427 [ -5.3563 4.6430 ]; : var4: 0.16960 2.1719 [ -6.9675 4.9600 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Separation; : -----------------------------; : 1 : var4 : 3.564e-01; : 2 : var3 : 2.899e-01; : 3 : var1 : 2.792e-01; : 4 : var2 : 2.260e-01; : -----------------------------; <HEADER> Factory : Train method: BDT for Classification; : ; <HEADER> BDT : #events: (reweighted) sig: 3000 bkg: 3000; : #events: (unweighted) sig: 3000 bkg: 3000; : Training 300 Decision Trees ... patience please; : Elapsed time for training with 6000 events: 0.538 sec ; <HEADER> BDT : [tmva003_BDT] : Evaluation of BDT on training sample (6000 events); : Elapsed time for evaluation of 6000 events: 0.0709 sec ; : Creating xml weight file: tmva003_BDT/weights/tmva003_BDT.weights.xml; : Creating standalone class: tmva003_BDT/weights/tmva003_BDT.class.C; : TMVARR.root:/tmva003_BDT/Method_BDT/BDT; <HEADER> Factory : Training finished",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva003__RReader_8C.html:9512,variab,variables,9512,doc/master/tmva003__RReader_8C.html,https://root.cern,https://root.cern/doc/master/tmva003__RReader_8C.html,1,['variab'],['variables']
Modifiability,: --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.629389 0.0419042 4255.43 0; : 2 | 0.694153 0.694394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for traini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16428,config,configuration,16428,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,": 0.132 (0.121) 0.404 (0.410) 0.669 (0.673); : dataset BDT : 0.098 (0.099) 0.393 (0.402) 0.657 (0.681); : dataset Likelihood : 0.085 (0.082) 0.355 (0.363) 0.580 (0.596); : dataset Fisher : 0.015 (0.015) 0.121 (0.131) 0.487 (0.506); : -------------------------------------------------------------------------------------------------------------------; : ; Dataset:dataset : Created tree 'TestTree' with 6000 events; : ; Dataset:dataset : Created tree 'TrainTree' with 14000 events; : ; Factory : ␛[1mThank you for using TMVA!␛[0m; : ␛[1mFor citation information, please visit: http://tmva.sf.net/citeTMVA.html␛[0m; ; /***; ## Declare Factory; ; Create the Factory class. Later you can choose the methods; whose performance you'd like to investigate.; ; The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ; - The first argument is the base of the name of all the output; weightfiles in the directory weight/ that will be created with the; method parameters; ; - The second argument is the output file for the training results; ; - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string; ; **/; ; void TMVA_Higgs_Classification() {; ; // options to control used methods; ; bool useLikelihood = true; // likelihood based discriminant; bool useLikelihoodKDE = false; // likelihood based discriminant; bool useFischer = true; // Fischer discriminant; bool useMLP = false; // Multi Layer Perceptron (old TMVA NN implementation); bool useBDT = true; // Boosted Decision Tree; bool useDL = true; // TMVA Deep learning ( CPU or GPU); bool useKeras = true; // Keras Deep learning; bool usePyTorch = true; // PyTorch Deep learning; ; TMVA::Tools::Instance();; ; #ifdef R__HAS_PYMVA; gSystem->Setenv(""KERAS_BACKEND"", ""tensorflow"");; // for using Keras; TMVA::PyMethodBase::PyInitializ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:57583,config,configuration,57583,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['config'],['configuration']
Modifiability,: 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23710,config,configuration,23710,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24505,config,configuration,24505,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33437,config,configuration,33437,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38538,config,configuration,38538,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46245,config,configuration,46245,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46359,config,configuration,46359,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46473,config,configuration,46473,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46587,config,configuration,46587,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46701,config,configuration,46701,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46815,config,configuration,46815,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46929,config,configuration,46929,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test error found - save the configuration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54294,config,configuration,54294,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,: 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70386,config,configuration,70386,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoEltu (const TGeoEltu &)=delete;  ; TGeoEltu & operator= (const TGeoEltu &)=delete;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoEltu.html:21587,inherit,inherited,21587,doc/master/classTGeoEltu.html,https://root.cern,https://root.cern/doc/master/classTGeoEltu.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoHalfSpace (const TGeoHalfSpace &)=delete;  ; TGeoHalfSpace & operator= (const TGeoHalfSpace &)=delete;  . Private Attributes; Double_t fN [3];  ; Double_t fP [3];  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoHalfSpace.html:19507,inherit,inherited,19507,doc/master/classTGeoHalfSpace.html,https://root.cern,https://root.cern/doc/master/classTGeoHalfSpace.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoParaboloid (const TGeoParaboloid &)=delete;  ; TGeoParaboloid & operator= (const TGeoParaboloid &)=delete;  . Private Attributes; Double_t fA;  ; Double_t fB;  ; Double_t fDz;  ; Double_t fRhi;  ; Double_t fRlo;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoParaboloid.html:17998,inherit,inherited,17998,doc/master/classTGeoParaboloid.html,https://root.cern,https://root.cern/doc/master/classTGeoParaboloid.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoTessellated (const TGeoTessellated &)=delete;  Temporary map used to deduplicate vertices. ;  ; TGeoTessellated & operator= (const TGeoTessellated &)=delete;  . Private Attributes; bool fClosedBody = false;  Shape fully defined. ;  ; bool fDefined = false;  ; std::vector< TGeoFacet > fFacets;  ; int fNfacets = 0;  ; int fNseg = 0;  ; int fNvert = 0;  ; std::vector< Vertex_t > fVertices;  ; std::multimap< long, int > fVerticesMap;  . Additional Inherited Membe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTessellated.html:21739,inherit,inherited,21739,doc/master/classTGeoTessellated.html,https://root.cern,https://root.cern/doc/master/classTGeoTessellated.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGeoVGShape (TGeoShape *shape, vecgeom::cxx::VPlacedVolume *vgshape);  Default constructor. ;  . Static Private Member Functions; static vecgeom::cxx::VPlacedVolume * CreateVecGeomSolid (TGeoShape *shape);  Conversion method to create VecGeom solid corresponding to TGeoShape. ;  . Private Attributes; TGeoShape * fShape;  VecGeom placed solid. ;  ; vecgeom::cxx::VPlacedVolume * fVGShape;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVGShape.html:18105,inherit,inherited,18105,doc/master/classTGeoVGShape.html,https://root.cern,https://root.cern/doc/master/classTGeoVGShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fBBoxOK;  ; TGeoVolumeAssembly * fVolume;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoShapeAssembly.html:19127,inherit,inherited,19127,doc/master/classTGeoShapeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoShapeAssembly.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fAlpha1;  ; Double_t fAlpha2;  ; Double_t fBl1;  ; Double_t fBl2;  ; Double_t fH1;  ; Double_t fH2;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTl1;  ; Double_t fTl2;  ;  Protected Attributes inherited from TGeoArb8; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrap.html:20391,inherit,inherited,20391,doc/master/classTGeoTrap.html,https://root.cern,https://root.cern/doc/master/classTGeoTrap.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fNhigh [3];  ; Double_t fNlow [3];  ;  Protected Attributes inherited from TGeoTubeSeg; Double_t fC1;  ; Double_t fC2;  ; Double_t fCdfi;  ; Double_t fCm;  ; Double_t fPhi1;  ; Double_t fPhi2;  ; Double_t fS1;  ; Double_t fS2;  ; Double_t fSm;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCtub.html:23582,inherit,inherited,23582,doc/master/classTGeoCtub.html,https://root.cern,https://root.cern/doc/master/classTGeoCtub.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fStIn;  ; Double_t fStOut;  ;  Protected Attributes inherited from TGeoTube; Double_t fDz;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoHype (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoHype.html:22331,inherit,inherited,22331,doc/master/classTGeoHype.html,https://root.cern,https://root.cern/doc/master/classTGeoHype.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fTwistAngle;  ;  Protected Attributes inherited from TGeoTrap; Double_t fAlpha1;  ; Double_t fAlpha2;  ; Double_t fBl1;  ; Double_t fBl2;  ; Double_t fH1;  ; Double_t fH2;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTl1;  ; Double_t fTl2;  ;  Protected Attributes inherited from TGeoArb8; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGtra.html:22363,inherit,inherited,22363,doc/master/classTGeoGtra.html,https://root.cern,https://root.cern/doc/master/classTGeoGtra.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TGeoScale * fScale;  ; TGeoShape * fShape;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoScaledShape.html:19564,inherit,inherited,19564,doc/master/classTGeoScaledShape.html,https://root.cern,https://root.cern/doc/master/classTGeoScaledShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoShape.html:24041,inherit,inherited,24041,doc/master/classTGeoShape.html,https://root.cern,https://root.cern/doc/master/classTGeoShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void InitTrigonometry ();  ;  Protected Member Functions inherited from TGeoCone;  TGeoCone (const TGeoCone &)=delete;  ; TGeoCone & operator= (const TGeoCone &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoConeSeg.html:21061,inherit,inherited,21061,doc/master/classTGeoConeSeg.html,https://root.cern,https://root.cern/doc/master/classTGeoConeSeg.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void InitTrigonometry ();  ;  Protected Member Functions inherited from TGeoTube;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTubeSeg.html:20171,inherit,inherited,20171,doc/master/classTGeoTubeSeg.html,https://root.cern,https://root.cern/doc/master/classTGeoTubeSeg.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoCompositeShape (const TGeoCompositeShape &)=delete;  ; TGeoCompositeShape & operator= (const TGeoCompositeShape &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCompositeShape.html:29054,inherit,inherited,29054,doc/master/classTGeoCompositeShape.html,https://root.cern,https://root.cern/doc/master/classTGeoCompositeShape.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoCone (const TGeoCone &)=delete;  ; TGeoCone & operator= (const TGeoCone &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCone.html:18974,inherit,inherited,18974,doc/master/classTGeoCone.html,https://root.cern,https://root.cern/doc/master/classTGeoCone.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPara (const TGeoPara &)=delete;  ; TGeoPara & operator= (const TGeoPara &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPara.html:18062,inherit,inherited,18062,doc/master/classTGeoPara.html,https://root.cern,https://root.cern/doc/master/classTGeoPara.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPcon (const TGeoPcon &)=delete;  Cosine of dphi. ;  ; Bool_t HasInsideSurface () const;  ; TGeoPcon & operator= (const TGeoPcon &)=delete;  ; void SetSegsAndPolsNoInside (TBuffer3D &buff) const;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPcon.html:18485,inherit,inherited,18485,doc/master/classTGeoPcon.html,https://root.cern,https://root.cern/doc/master/classTGeoPcon.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPgon (const TGeoPgon &)=delete;  ; Int_t GetPhiCrossList (const Double_t *point, const Double_t *dir, Int_t istart, Double_t *sphi, Int_t *iphi, Double_t stepmax=TGeoShape::Big()) const;  Mutex for thread data. ;  ; Bool_t IsCrossingSlice (const Double_t *point, const Double_t *dir, Int_t iphi, Double_t sstart, Int_t &ipl, Double_t &snext, Double_t stepmax) const;  ; void LocatePhi (const Double_t *point, Int_t &ipsec) const;  ; TGeoPgon & operator= (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPgon.html:19358,inherit,inherited,19358,doc/master/classTGeoPgon.html,https://root.cern,https://root.cern/doc/master/classTGeoPgon.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoSphere (const TGeoSphere &)=delete;  ; TGeoSphere & operator= (const TGeoSphere &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSphere.html:18540,inherit,inherited,18540,doc/master/classTGeoSphere.html,https://root.cern,https://root.cern/doc/master/classTGeoSphere.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTorus (const TGeoTorus &)=delete;  ; TGeoTorus & operator= (const TGeoTorus &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Membe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTorus.html:18422,inherit,inherited,18422,doc/master/classTGeoTorus.html,https://root.cern,https://root.cern/doc/master/classTGeoTorus.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTrd1 (const TGeoTrd1 &)=delete;  ; TGeoTrd1 & operator= (const TGeoTrd1 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrd1.html:17988,inherit,inherited,17988,doc/master/classTGeoTrd1.html,https://root.cern,https://root.cern/doc/master/classTGeoTrd1.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTrd2 (const TGeoTrd2 &)=delete;  ; TGeoTrd2 & operator= (const TGeoTrd2 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrd2.html:18048,inherit,inherited,18048,doc/master/classTGeoTrd2.html,https://root.cern,https://root.cern/doc/master/classTGeoTrd2.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTube (const TGeoTube &)=delete;  ; TGeoTube & operator= (const TGeoTube &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTube.html:18514,inherit,inherited,18514,doc/master/classTGeoTube.html,https://root.cern,https://root.cern/doc/master/classTGeoTube.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoXtru (const TGeoXtru &)=delete;  mutex for thread data ;  ; Double_t DistToPlane (const Double_t *point, const Double_t *dir, Int_t iz, Int_t ivert, Double_t stepmax, Bool_t in) const;  ; void GetPlaneNormal (const Double_t *vert, Double_t *norm) const;  ; void GetPlaneVertices (Int_t iz, Int_t ivert, Double_t *vert) const;  ; Bool_t IsPointInsidePlane (const Double_t *point, Double_t *vert, Double_t *norm) const;  ; TGeoXtru & operator= (const TGeoXtru &)=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoXtru.html:18262,inherit,inherited,18262,doc/master/classTGeoXtru.html,https://root.cern,https://root.cern/doc/master/classTGeoXtru.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  EGeoArb8Type { kArb8Trap = (1ULL << ( 27 )); , kArb8Tra = (1ULL << ( 28 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TGeoArb8 (const TGeoArb8 &)=delete;  ; void CopyTwist (Double_t *twist=nullptr);  ; TGeoArb8 & operator= (const TGeoArb8 &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoArb8.html:20749,inherit,inherited,20749,doc/master/classTGeoArb8.html,https://root.cern,https://root.cern/doc/master/classTGeoArb8.html,2,['inherit'],['inherited']
Modifiability,": A(x1,y1), B(x2,y2), C(x3,y3), D(x4,y4) ;  ; static void NormalPhi (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t c1, Double_t s1, Double_t c2, Double_t s2);  Static method to compute normal to phi planes. ;  ; static Double_t SafetyPhi (const Double_t *point, Bool_t in, Double_t phi1, Double_t phi2);  Static method to compute safety w.r.t a phi corner defined by cosines/sines of the angles phi1, phi2. ;  ; static Double_t SafetySeg (Double_t r, Double_t z, Double_t r1, Double_t z1, Double_t r2, Double_t z2, Bool_t outer);  Compute distance from point of coordinates (r,z) to segment (r1,z1):(r2,z2) ;  ; static void SetTransform (TGeoMatrix *matrix);  Set current transformation matrix that applies to shape. ;  ; static Double_t Tolerance ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; static Bool_t DO NOT USE !The overlap detection does not work for all cases;  ; static Bool_t DEPRECATED;  . Protected Member Functions;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBBox.html:17203,inherit,inherited,17203,doc/master/classTGeoBBox.html,https://root.cern,https://root.cern/doc/master/classTGeoBBox.html,2,['inherit'],['inherited']
Modifiability,: Elapsed time for evaluation of 9000 events: 0.0705 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: KNN for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of KNN on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.0918 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: LD for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of LD on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.00483 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: DNN_CPU for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of DNN_CPU on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.231 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: BDTG for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of BDTG on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 2.1 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : ␛[1mEvaluate all methods␛[0m; : Evaluate regression method: PDEFoam; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.0447 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time fo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:128155,variab,variable,128155,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variable']
Modifiability,": Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 6 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 7 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 119.005; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.881238 0.852851 0.181896 0.0160504 7235.64 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.658204 0.827727 0.182292 0.0161751 7223.84 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.58547 0.792475 0.182478 0.0158424 7201.32 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.508772 0.760461 0.18258 0.0158465 7197.11 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.445197 0.705323 0.183204 0.015935 7174.07 0; : 6 | 0.409018 0.708257 0.18274 0.0151517 7160.42 1; : 7 | 0.369062 0.747523 0.18295 0.0151377 7150.84 2; : 8 | 0.31294 0.740134 0.183339 0.015769 7161.2 3; : 9 | 0.256184 0.756239 0.181088 0.0154708 7245.63 4; : 10 | 0.224257 0.809455 0.18089 0.0153446 7248.78 5; : ; : Elapsed time for training with 1600 events: 1.86 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_DNN_CPU : [dataset] : Evaluation of TMVA_DNN_CPU on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.0796 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_DNN_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:11818,config,configuration,11818,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,": Reading weightfile: datasetcv/weights/TMVACrossValidation_Fisher_fold1.weights.xml; : Reading weight file: datasetcv/weights/TMVACrossValidation_Fisher_fold1.weights.xml; : Reading weightfile: datasetcv/weights/TMVACrossValidation_Fisher_fold2.weights.xml; : Reading weight file: datasetcv/weights/TMVACrossValidation_Fisher_fold2.weights.xml; : ; : ; : ========================================; : Folds processed for all methods, evaluating.; : ========================================; : ; <HEADER> Factory : [datasetcv] : Create Transformation ""I"" with events from all classes.; : ; <HEADER> : Transformation, Variable selection : ; : Input : variable 'x' <---> Output : variable 'x'; : Input : variable 'y' <---> Output : variable 'y'; <HEADER> TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : x: -0.014284 1.4061 [ -4.1075 4.0969 ]; : y: -0.0066370 1.4204 [ -4.8520 4.0761 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; <HEADER> IdTransformation : Ranking result (top variable is best ranked); : --------------------------; : Rank : Variable : Separation; : --------------------------; : 1 : x : 5.429e-01; : 2 : y : 5.230e-01; : --------------------------; : Elapsed time for training with 1998 events: 4.05e-06 sec ; <HEADER> BDTG : [datasetcv] : Evaluation of BDTG on training sample (1998 events); : Elapsed time for evaluation of 1998 events: 0.00616 sec ; : Creating xml weight file: datasetcv/weights/TMVACrossValidation_BDTG.weights.xml; : Creating standalone class: datasetcv/weights/TMVACrossValidation_BDTG.class.C; <WARNING> <WARNING> : MakeClassSpecificHeader not implemented for CrossValidation; <WARNING> <WARNING> : MakeClassSpecific not implemented for CrossValidation; : Elapsed time for training with 1998 events: 3.81e-06 sec ; <HEADER> Fisher : [datasetcv] : Evaluation of Fisher on training sample (1998 events); : Elapsed time for eval",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidation_8C.html:14219,variab,variables,14219,doc/master/TMVACrossValidation_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidation_8C.html,1,['variab'],['variables']
Modifiability,: [dataset] : Evaluation of PyKeras_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.273 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_PyKeras_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_PyKeras_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: BDTG for Classification; : ; BDTG : #events: (reweighted) sig: 1600 bkg: 1600; : #events: (unweighted) sig: 1600 bkg: 1600; : Training 100 Decision Trees ... patience please; : Elapsed time for training with 3200 events: 1.67 sec ; BDTG : [dataset] : Evaluation of BDTG on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.0185 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_BDTG.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_BDTG.class.C␛[0m; : data_RNN_CPU.root:/dataset/Method_BDT/BDTG; Factory : Training finished; : ; : Ranking input variables (method specific)...; : No variable ranking supplied by classifier: TMVA_LSTM; : No variable ranking supplied by classifier: TMVA_DNN; : No variable ranking supplied by classifier: PyKeras_LSTM; BDTG : Ranking result (top variable is best ranked); : --------------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------------; : 1 : vars_time9 : 2.245e-02; : 2 : vars_time8 : 2.023e-02; : 3 : vars_time7 : 1.907e-02; : 4 : vars_time7 : 1.907e-02; : 5 : vars_time8 : 1.847e-02; : 6 : vars_time7 : 1.771e-02; : 7 : vars_time9 : 1.708e-02; : 8 : vars_time6 : 1.653e-02; : 9 : vars_time0 : 1.650e-02; : 10 : vars_time7 : 1.626e-02; : 11 : vars_time8 : 1.623e-02; : 12 : vars_time6 : 1.532e-02; : 13 : vars_time8 : 1.530e-02; : 14 : vars_time9 : 1.520e-02; : 15 : vars_time8 : 1.487e-02; : 16 : vars_time6 : 1.421e-02; : 17 : vars_time6 : 1.421e-02; : 18 : vars_time8 : 1.381e-02; : 19 : vars_time8 : 1.379e-02;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:41476,variab,variables,41476,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['variab'],['variables']
Modifiability,": generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenMapProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenMapProxy(). TGenMapProxy::TGenMapProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 280 of file TGenCollectionProxy.cxx. ◆ ~TGenMapProxy(). TGenMapProxy::~TGenMapProxy ; (; ). inlineoverride . Definition at line 284 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ DeleteItem(). void TGenMapProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct individual item. ; Reimplemented from TGenCollectionProxy.; Definition at line 288 of file TGenCollectionProxy.cxx. io/io/src/TGenCollectionProxy.cxx. TGenMapProxy. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy.html:12030,inherit,inherited,12030,doc/master/classTGenMapProxy.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . #include <TEmulatedCollectionProxy.h>. Inheritance diagram for TEmulatedCollectionProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Cont_t. typedef std::vector<char> TEmulatedCollectionProxy::Cont_t. Definition at line 25 of file TEmulatedCollectionProxy.h. ◆ PCont_t. typedef Cont_t* TEmulatedCollectionProxy::PCont_t. Definition at line 27 of file TEmulatedCollectionProxy.h. Constructor & Destructor Documentation. ◆ TEmulatedCollectionProxy() [1/2]. TEmulatedCollectionProxy::TEmulatedCollectionProxy ; (; const TEmulatedCollectionProxy & ; copy). Definition at line 43 of file TEmulatedCollectionProxy.cxx. ◆ TEmulatedCollectionProxy() [2/2]. TEmulatedCollectionProxy::TEmulatedCollectionProxy ; (; const char * ; cl_name, . Bool_t ; silent . ). Definition at line 50 of file TEmulatedCollectionProxy.cxx. ◆ ~TEmulatedColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedCollectionProxy.html:13304,inherit,inherited,13304,doc/master/classTEmulatedCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . #include <TEmulatedMapProxy.h>. Inheritance diagram for TEmulatedMapProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEmulatedMapProxy() [1/2]. TEmulatedMapProxy::TEmulatedMapProxy ; (; const TEmulatedMapProxy & ; copy). Definition at line 39 of file TEmulatedMapProxy.cxx. ◆ TEmulatedMapProxy() [2/2]. TEmulatedMapProxy::TEmulatedMapProxy ; (; const char * ; cl_name, . Bool_t ; silent . ). Definition at line 48 of file TEmulatedMapProxy.cxx. ◆ ~TEmulatedMapProxy(). TEmulatedMapProxy::~TEmulatedMapProxy ; (; ). override . Definition at line 57 of file TEmulatedMapProxy.cxx. Member Function Documentation. ◆ At(). void * TEmulatedMapProxy::At ; (; UInt_t ; idx). overridevirtual . Return the address of the value at index idx ; Reimplemented from TEmulatedCollectionProxy.; Definition at line 69 of file TEmulate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedMapProxy.html:13442,inherit,inherited,13442,doc/master/classTEmulatedMapProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedMapProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenBitsetProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenBitsetProxy(). TGenBitsetProxy::TGenBitsetProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 138 of file TGenCollectionProxy.cxx. ◆ ~TGenBitsetProxy(). TGenBitsetProxy::~TGenBitsetProxy ; (; ). inlineoverride . Definition at line 142 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ At(). void * TGenBitsetProxy::At ; (; UInt_t ; idx). inlineoverridevirtual . Return the address of the value at index idx ; Implements TVirtualCollectionProxy.; Definition at line 146 of file TGenCollectionProxy.cxx. ◆ DeleteItem(). void TGenBitsetProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct individual item. ; Reimplemented from TGenCol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenBitsetProxy.html:11458,inherit,inherited,11458,doc/master/classTGenBitsetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenBitsetProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenVectorBoolProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenVectorBoolProxy(). TGenVectorBoolProxy::TGenVectorBoolProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 92 of file TGenCollectionProxy.cxx. ◆ ~TGenVectorBoolProxy(). TGenVectorBoolProxy::~TGenVectorBoolProxy ; (; ). inlineoverride . Definition at line 96 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ At(). void * TGenVectorBoolProxy::At ; (; UInt_t ; idx). inlineoverridevirtual . Return the address of the value at index 'idx'. ; Reimplemented from TGenCollectionProxy.; Definition at line 100 of file TGenCollectionProxy.cxx. ◆ DeleteItem(). void TGenVectorBoolProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct indi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorBoolProxy.html:11653,inherit,inherited,11653,doc/master/classTGenVectorBoolProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorBoolProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenVectorProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenVectorProxy(). TGenVectorProxy::TGenVectorProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 42 of file TGenCollectionProxy.cxx. ◆ ~TGenVectorProxy(). TGenVectorProxy::~TGenVectorProxy ; (; ). inlineoverride . Definition at line 46 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ At(). void * TGenVectorProxy::At ; (; UInt_t ; idx). inlineoverridevirtual . Return the address of the value at index 'idx'. ; Reimplemented from TGenCollectionProxy.; Definition at line 50 of file TGenCollectionProxy.cxx. ◆ DeleteItem(). void TGenVectorProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. inlineoverridevirtual . Call to delete/destruct individual item. ; Reimplemented from TGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorProxy.html:11573,inherit,inherited,11573,doc/master/classTGenVectorProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorProxy.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Private Member Functions; TGenCollectionStreamer & operator= (const TGenCollectionStreamer &);  . Additional Inherited Members;  Public Types inherited from TGenCollectionProxy; enum  { kBIT_ISSTRING = 0x20000000; , kBIT_ISTSTRING = 0x40000000; };  ; typedef const std::type_info & Info_t;  ;  Public Types inherited from TVirtualCollectionProxy; typedef void *(* CopyIterator_t) (void *dest, const void *source);  Copy the iterator source into dest. ;  ; typedef void(* CreateIterators_t) (void *collection, void **begin_arena, void **end_arena, TVirtualCollectionProxy *proxy);  *begin_arena and *end_arena should contain the location of a memory arena of size fgIteratorArenaSize. ;  ; typedef void(* DeleteIterator_t) (void *iter);  If the size of the iterator is greater than fgIteratorArenaSize, call delete on the addresses; otherwise, just call the iterator's destructor. ;  ; typedef void(* DeleteTwoIter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionStreamer.html:11947,inherit,inherited,11947,doc/master/classTGenCollectionStreamer.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionStreamer.html,1,['inherit'],['inherited']
Modifiability,": next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Private Member Functions;  TGenCollectionProxy ();  ; TGenCollectionProxy & operator= (const TGenCollectionProxy &);  . Friends; class TCollectionProxyFactory;  . Additional Inherited Members;  Static Public Attributes inherited from TVirtualCollectionProxy; static const Int_t fgIteratorArenaSize = 16;  The size of a small buffer that can be allocated on the stack to store iterator-specific information. ;  . #include <TGenCollectionProxy.h>. Inheritance diagram for TGenCollectionProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ArrIterfunc_t. typedef void *(* TGenCollectionProxy::ArrIterfunc_t) (void *from, size_t size). protected . Definition at line 297 of file TGenCollectionProxy.h. ◆ Collectfunc_t. typedef void *(* TGenCollectionProxy::Collectfunc_t) (void *from, void *to). protected . Definition at line 296 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionProxy.html:12009,inherit,inherited,12009,doc/master/classTGenCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,": public TIterator. RooLinkedListIter is the TIterator implementation for RooLinkedList; . Function Members (Methods); public:. RooLinkedListIter(); RooLinkedListIter(const RooLinkedListIter& other); RooLinkedListIter(const RooLinkedList* list, Bool_t forward); virtual~RooLinkedListIter(); static TClass*Class(); virtual const TCollection*GetCollection() const; virtual Option_t*TIterator::GetOption() const; virtual TClass*IsA() const; virtual TObject*Next(); TObject*NextNV(); virtual booloperator!=(const TIterator& aIter) const; booloperator!=(const RooLinkedListIter& aIter) const; TObject*TIterator::operator()(); virtual TObject*operator*() const; virtual TIterator&operator=(const TIterator& other); virtual voidReset(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. Bool_t_forwardIterator direction; const RooLinkedList*_list! Collection iterated over; const RooLinkedListElem*_ptr! Next link element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLinkedListIter(); coverity[UNINIT_CTOR]. RooLinkedListIter(const RooLinkedList* list, Bool_t forward); { }. RooLinkedListIter(const RooLinkedListIter& other); Copy constructor. virtual ~RooLinkedListIter(); { ; }. TIterator& operator=(const TIterator& other). const TCollection * GetCollection() const; Dummy. TObject * Next(); Return next element in collection. TObject * NextNV(); Return next element in collection. void Reset(); Return iterator to first element in collection. bool operator!=(const TIterator& aIter) const. bool operator!=(const RooLinkedListIter& aIter) const. TObject * operator*() const; Return element iterator points to. » Last changed: Tue Mar 10 17:17:35 2015 » Last generated: 2015-03-10 17:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooLinkedListIter.html:1344,Inherit,Inheritance,1344,root/html534/RooLinkedListIter.html,https://root.cern,https://root.cern/root/html534/RooLinkedListIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,": tmp) {; 88 std::stringstream reader;; 89 reader << ""0x"" << std::hex << r;; 90 ::Error(function, "" Readers includes %s"", reader.str().c_str());; 91 }; 92 gSystem->StackTrace();; 93}; 94 ; 95void TCollection::TErrorLock::Lock(const TCollection *collection, const char *function); 96{; 97 auto local = std::this_thread::get_id();; 98 ; 99 std::thread::id holder;; 100 ; 101 if (fWriteCurrent.compare_exchange_strong(holder, local)) {; 102 // fWriteCurrent was the default id and is now local.; 103 ++fWriteCurrentRecurse;; 104 // std::cerr << ""#"" << ""0x"" << std::hex << local << "" acquired first "" << collection << "" lock:"" << this <<; 105 // std::endl;; 106 ; 107 // Now check if there is any readers lingering; 108 if (fReadCurrentRecurse) {; 109 if (fReadSet.size() > 1 || fReadSet.find(local) != fReadSet.end()) {; 110 ConflictReport(std::thread::id(), ""WriteLock while ReadLock taken"", collection, function);; 111 }; 112 }; 113 } else {; 114 // fWriteCurrent was not the default id and is still the 'holder' thread id; 115 // this id is now also in the holder variable; 116 if (holder == local) {; 117 // The holder was actually this thread, no problem there, we; 118 // allow re-entrancy.; 119 // std::cerr << ""#"" << ""0x"" << std::hex << local << "" re-entered "" << fWriteCurrentRecurse << "" "" << collection; 120 // << "" lock:"" << this << std::endl;; 121 } else {; 122 ConflictReport(holder, ""WriteLock"", collection, function);; 123 }; 124 ++fWriteCurrentRecurse;; 125 }; 126}; 127 ; 128void TCollection::TErrorLock::Unlock(); 129{; 130 auto local = std::this_thread::get_id();; 131 auto none = std::thread::id();; 132 ; 133 --fWriteCurrentRecurse;; 134 if (fWriteCurrentRecurse == 0) {; 135 if (fWriteCurrent.compare_exchange_strong(local, none)) {; 136 // fWriteCurrent was local and is now none.; 137 ; 138 // std::cerr << ""#"" << ""0x"" << std::hex << local << "" zero and cleaned : "" << std::dec << fWriteCurrentRecurse; 139 // << "" 0x"" << std::hex << fWriteCurrent.load() << "" lock:"" << this << s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:4558,variab,variable,4558,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['variab'],['variable']
Modifiability,": ␛[0;36mdataset/weights/TMVAClassification_FDA_GA.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_FDA_GA.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: MLPBNN for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ MLPBNN ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : The MLP artificial neural network (ANN) is a traditional feed-; : forward multilayer perceptron implementation. The MLP has a user-; : defined hidden layer architecture, while the number of input (output); : nodes is determined by the input variables (output classes, i.e., ; : signal and one background). ; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Neural networks are stable and performing for a large variety of ; : linear and non-linear classification problems. However, in contrast; : to (e.g.) boosted decision trees, the user is advised to reduce the ; : number of input variables that have only little discrimination power. ; : ; : In the tests we have carried out so far, the MLP and ROOT networks; : (TMlpANN, interfaced via TMVA) performed equally well, with however; : a clear speed advantage for the MLP. The Clermont-Ferrand neural ; : net (CFMlpANN) exhibited worse classification performance in these; : tests, which is partly due to the slow convergence of its training; : (at least 10k training cycles are required to achieve approximately; : competitive results).; : ; : ␛[1mOvertraining: ␛[0monly the TMlpANN performs an explicit separation of the; : full training sample into independent training and validation samples.; : We have found that in most high-energy physics applications the ; : available degrees of freedom (training events) are sufficient to ; : constrain the weights of the relatively simple architectures required; : to achieve good performance. Hence no overtraining should occur, and ; : the use of validation samples would o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:42367,variab,variables,42367,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,":(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfBranchIsSkipped; TStringfBranchName; TStringfDataName; Bool_tfIsLeafListtrue if the branch was constructed from a leaf list.; Bool_tfIsSplit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBranchProxyDescriptor(const char* dataname, const char* type, const char* branchname, Bool_t split = true, Bool_t skipped = false, Bool_t isleaflist = false); Constructor. const char * GetDataName(); Get the name of the data member. const char * GetTypeName(); Get the name of the type of the data member. const char * GetBranchName(); Get the branch name. Bool_t IsEquivalent(const ROOT::TBranchProxyDescriptor* other, Bool_t inClass = kFALSE); Return true if this description is the 'same' as the other decription. Bool_t IsSplit() const; Return true if the branch is split. void OutputDecl(FILE* hf, int offset, UInt_t maxVarname); Output the declaration corresponding to this proxy. void OutputInit(FILE* hf, int offset, UInt_t maxVarname, const char* prefix); Output the initialization corresponding to this proxy. TBranchProxyDescriptor(const char* dataname, const char* type, const char* branchname, Bool_t split = true, Bool_t skipped = fal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TBranchProxyDescriptor.html:7108,Inherit,Inheritance,7108,root/html602/ROOT__TBranchProxyDescriptor.html,https://root.cern,https://root.cern/root/html602/ROOT__TBranchProxyDescriptor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":(anonymous)TObject::kNotDeleted; static TFormula::(anonymous)TFormula::kNotGlobal; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObjArrayfAliases! List of TTreeFormula for each alias used.; vector<string>fAliasesUsed! List of aliases used during the parsing of the expression.; TBitsTFormula::fAlreadyFound! cache for information; TAxis*fAxis! pointer to histogram axis if this is a string; TObjArrayfBranches! List of branches to read. Similar to fLeaces but duplicates are zeroed out.; Int_tfCodes[500]List of leaf numbers referenced in formula; Double_t*TFormula::fConst[fNconst] Array of fNconst formula constants; LongDouble_t*fConstLDlocal version of fConsts able to store bigger numbers; Int_tfCumulSizes[500][5]Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated; TObjArrayfDataMembers! List of leaf data members; Bool_tfDidBooleanOptimization! True if we executed one boolean optimization since the last time instance number 0 was evaluated; TList*fDimensionSetup! list of dimension setups, for delayed creation of the dimension information.; TString*TFormula::fExpr[fNoper] List of expressions; TString*TFormula::fExprOptimized![fNOperOptimized] List of expressions; TObjArrayfExternalCuts! List of TCutG and TEntryList used in the formula; Int_tfFixedSizes[500][5]Physical sizes of lower dimensions for each leaf; TObjArrayTFormula::fFunctionsArray of function calls to make; Bool_tfHasCastRecord whether the formula contain a cast operation or not; UChar_tfHasMultipleVarDim[500]True if the corresponding variable is an array with more than one variable dimension.; Int_tfIndexes[500][5]Index of array selected by user for each leaf; TObjArrayfLeafNamesList of TNamed describing leaves; TObjArrayfLeaves! List of leaf used in this fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:14867,variab,variable,14867,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,2,['variab'],['variable']
Modifiability,":(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; TList*TSelector::fInputList of objects available during processing; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; Long64_tTSelector::fStatusSelector status. private:. Bool_tfAllf; Bool_tfChangedDs; Bool_tfCheckstg; Bool_tfDbg; Int_tfDisappeared; Bool_tfDoall; Int_tfFopt; Bool_tfFullproc; Bool_tfGetlistonly; Bool_tfLocateonly; TStringfMss; Bool_tfNoaction; Bool_tfNonStgf; Int_tfOpened; Bool_tfReopen; Int_tfRopt; Bool_tfScanlist; Int_tfSopt; Bool_tfStageonly; TStringfStageopts; Bool_tfStgf; TFileCollection*fSubDataSetSub-dataset being verified; Bool_tfTouch; Int_tfTouched. Class Charts. Inheritance Chart:. TObject. ←; TSelector. ←; TSelVerifyDataSet. Function documentation; TSelVerifyDataSet(TTree* ); Constructor. TSelVerifyDataSet(); Constructor. void InitMembers(); Initialize members. void SlaveBegin(TTree* tree); Worker Begin. Bool_t Process(Long64_t entry); Process a single entry. void SlaveTerminate(); Worker Terminate. TSelVerifyDataSet(TTree* ). virtual ~TSelVerifyDataSet(); {}. Int_t Version() const; {return 1;}. void Begin(TTree* ); { }. void Init(TTree* ); { }. Bool_t Notify(); { return kTRUE; }. void SetOption(const char* option); { fOption = option; }. void SetObject(TObject* obj); { fObject = obj; }. void SetInputList(TList* input); {fInput = input;}. TList * GetOutputList() const; { return fOutput; }. void Terminate(); { }. » Author: Sangsu Ryu 28/06/2011 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: Tue Jun 2 16:32:38 2015 » Last generated: 2015-06-02 16:32; This page has been automatically generated. For comments or suggestions re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSelVerifyDataSet.html:7666,Inherit,Inheritance,7666,root/html604/TSelVerifyDataSet.html,https://root.cern,https://root.cern/root/html604/TSelVerifyDataSet.html,1,['Inherit'],['Inheritance']
Modifiability,":(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; TList*TSelector::fInputList of objects available during processing; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; Long64_tTSelector::fStatusSelector status. private:. Bool_tfAllf; Bool_tfChangedDs; Bool_tfCheckstg; Bool_tfDbg; Int_tfDisappeared; Bool_tfDoall; Int_tfFopt; Bool_tfFullproc; Bool_tfGetlistonly; Bool_tfLocateonly; TStringfMss; Bool_tfNoaction; Bool_tfNonStgf; Int_tfOpened; Bool_tfReopen; Int_tfRopt; Bool_tfScanlist; Int_tfSopt; Bool_tfStageonly; TStringfStageopts; Bool_tfStgf; TFileCollection*fSubDataSetSub-dataset being verified; Bool_tfTouch; Int_tfTouched. Class Charts. Inheritance Chart:. TObject. ←; TSelector. ←; TSelVerifyDataSet. Function documentation; TSelVerifyDataSet(TTree* ); Constructor. TSelVerifyDataSet(); Constructor. void InitMembers(); Initialize members. void SlaveBegin(TTree* tree); Worker Begin. Bool_t Process(Long64_t entry); Process a single entry. void SlaveTerminate(); Worker Terminate. TSelVerifyDataSet(TTree* ). virtual ~TSelVerifyDataSet(); {}. Int_t Version() const; {return 1;}. void Begin(TTree* ); { }. void Init(TTree* ); { }. Bool_t Notify(); { return kTRUE; }. void SetOption(const char* option); { fOption = option; }. void SetObject(TObject* obj); { fObject = obj; }. void SetInputList(TList* input); {fInput = input;}. TList * GetOutputList() const; { return fOutput; }. void Terminate(); { }. » Author: Sangsu Ryu 28/06/2011 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: Tue Jun 30 15:29:56 2015 » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelVerifyDataSet.html:7666,Inherit,Inheritance,7666,root/html602/TSelVerifyDataSet.html,https://root.cern,https://root.cern/root/html602/TSelVerifyDataSet.html,1,['Inherit'],['Inheritance']
Modifiability,":(anonymous)TObject::kSingleKey; static TTreeDrawArgsParser::EOutputTypekUNKNOWN; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tfAddvalues should be added to an existing object; Int_tfDimensiondimension of the histogram/plot; Bool_tfDrawProfiletrue if the options contain :""prof""; Bool_tfEntryListif fill a TEntryList; TStringfExpcomplete variable expression; TStringfNamehistogram's/plot's name; Int_tfNoParametersif dimensions of the plot was specified; TStringfOptiondraw options; Bool_tfOptionSameif option contained ""same""; TObject*fOriginaloriginal plot (if it is to be reused); TTreeDrawArgsParser::EOutputTypefOutputTypetype of the output; Bool_tfParameterGiven[9]true if the parameter was given, otherwise false; Double_tfParameters[9]parameters in brackets; TStringfSelectionselection expression; Bool_tfShouldDrawif to draw the plot; TStringfVarExp[4]variable expression 0 - X, 1 - Y, 2 - Z, 3 - W. Class Charts. Inheritance Chart:. TObject. ←; TTreeDrawArgsParser. Function documentation; TTreeDrawArgsParser(); Constructor - cleans all the class variables. ~TTreeDrawArgsParser(); Destructor. Int_t GetMaxDimension(); return fgMaxDimension (cannot be inline). void ClearPrevious(); Resets all the variables of the class. Bool_t SplitVariables(TString variables); Parse expression [var1 [:var2 [:var3] ...]],; number of variables cannot be greater than fgMaxDimension.; A colon which is followed by (or that follows) another semicolon; is not regarded as a separator.; If there are more separating : than fgMaxDimension - 1 then; all characters after (fgMaxDimension - 1)th colon is put into; the last variable.; fDimension := <number of variables>; fVarExp[0] := <first variable string>; fVarExp[1] := <second variable string>; ..; Returns kFALSE in case of an error. Bool_t ParseName(TString name); Syntax:; [' '*][[\+][' '*]name[(num1 [, [num2] ] [, [num3] ] ...)]]; num's are floating point numbers; sets the fileds f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeDrawArgsParser.html:8121,Inherit,Inheritance,8121,root/html602/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html602/TTreeDrawArgsParser.html,2,['Inherit'],['Inheritance']
Modifiability,":(anonymous)TObject::kZombie. protected:. stringfConditionalObsNamename for RooArgSet specifying conditional observables; stringfConstrParamsNamename for RooArgSet specifying constrained parameters; stringfDataNamename of data set in workspace; stringfGlobalObsNamename for RooArgSet specifying global observables; TStringTNamed::fNameobject identifier; stringfNuisParamsNamename for RooArgSet specifying nuisance parameters; stringfObservablesNamename for RooArgSet specifying observable parameters.; stringfPOINamename for RooArgSet specifying parameters of interest; stringfPdfNamename of PDF in workspace; stringfPriorPdfNamename for RooAbsPdf specifying a prior on the parameters; stringfProtoDataNamename for RooArgSet specifying dataset that should be used as protodata; TReffRefWSWS reference used in the file; stringfSnapshotNamename for RooArgSet that specifies a particular hypothesis; TStringTNamed::fTitleobject title; stringfWSNamename of the WS. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void GuessObsAndNuisance(const RooAbsData& data); Makes sensible guesses of observables, parameters of interest; and nuisance parameters. Defaults:; observables: determined from data,; global observables = explicit obs - obs from data; parameters of interest: empty,; nuisance parameters: all parameters except parameters of interest. We use NULL to mean not set, so we don't want to fill; with empty RooArgSets. void Print(Option_t* option = """") const; print contents of Model on the default print stream; It can be changed using RooPrintable. void SetWS(RooWorkspace& ws); set a workspace that owns all the necessary components for the analysis. RooWorkspace * GetWS() const; get from TRef. void SetSnapshot(const RooArgSet& set); save snaphot in the workspace; and use values passed with the set. const RooArgSet * GetSnapshot() const; Load the snapshot from ws and return the corresponding set with the snapshot values.; User must delete returne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ModelConfig.html:9083,Inherit,Inheritance,9083,root/html602/RooStats__ModelConfig.html,https://root.cern,https://root.cern/root/html602/RooStats__ModelConfig.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":(anonymous)kFromChain; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TFile*fFile!pointer to the file containing the friend TTree; TStringTNamed::fNameobject identifier; Bool_tfOwnFiletrue if file is managed by this class; TTree*fParentTree!pointer to the parent TTree; TStringTNamed::fTitleobject title; TTree*fTree!pointer to the TTree described by this element; TStringfTreeNamename of the friend TTree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFriendElement(); Default constructor for a friend element*-*-*-*-*-*-*-; *-* =======================================. TFriendElement(TTree* tree, const char* treename, const char* filename); Create a friend element*-*-; *-* ======================. If treename is of the form ""a=b"", an alias called ""a"" is created for; treename = ""b"" by default the alias name is the name of the tree. TFriendElement(TTree* tree, const char* treename, TFile* file); Create a friend element*-*-; *-* ======================. If treename is of the form ""a=b"", an alias called ""a"" is created for; treename = ""b"" by default the alias name is the name of the tree.; The passed TFile is managed by the user (i.e. user must delete the TFile). TFriendElement(TTree* tree, TTree* friendtree, const char* alias); Create a friend element. TFriendElement(const TFriendElement& ); Copy constructor. TFriendElement& operator=(const TFriendElement& ); Equal operator. ~TFriendElemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFriendElement.html:6979,Inherit,Inheritance,6979,root/html602/TFriendElement.html,https://root.cern,https://root.cern/root/html602/TFriendElement.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const TString& name); Fill out the preliminary TProofNodeInfo structure. EInfoType GetInfoType(const TString& word). TProofResourcesStatic(). TString GetFileName() const; { return fFileName; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-03-14 16:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofResourcesStatic.html:7367,config,config,7367,root/html534/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html534/TProofResourcesStatic.html,4,['config'],['config']
Modifiability,":. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const TString& name); Fill out the preliminary TProofNodeInfo structure. EInfoType GetInfoType(const TString& word). TProofResourcesStatic(). TString GetFileName() const; { return fFileName; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-02 16:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofResourcesStatic.html:7924,config,config,7924,root/html604/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html604/TProofResourcesStatic.html,4,['config'],['config']
Modifiability,":. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const TString& name); Fill out the preliminary TProofNodeInfo structure. EInfoType GetInfoType(const TString& word). TProofResourcesStatic(). TString GetFileName() const; { return fFileName; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofResourcesStatic.html:7924,config,config,7924,root/html602/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html602/TProofResourcesStatic.html,4,['config'],['config']
Modifiability,":. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<unsigned char>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<unsigned char>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TImpProxy_unsigned_char_.html:4474,Inherit,Inheritance,4474,root/html602/ROOT__TImpProxy_unsigned_char_.html,https://root.cern,https://root.cern/root/html602/ROOT__TImpProxy_unsigned_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<unsigned char>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<unsigned char>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TImpProxy_unsigned_char_.html:4474,Inherit,Inheritance,4474,root/html604/ROOT__TImpProxy_unsigned_char_.html,https://root.cern,https://root.cern/root/html604/ROOT__TImpProxy_unsigned_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<unsigned long>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<unsigned long>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TImpProxy_unsigned_long_.html:4474,Inherit,Inheritance,4474,root/html602/ROOT__TImpProxy_unsigned_long_.html,https://root.cern,https://root.cern/root/html602/ROOT__TImpProxy_unsigned_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<unsigned long>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<unsigned long>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TImpProxy_unsigned_long_.html:4474,Inherit,Inheritance,4474,root/html604/ROOT__TImpProxy_unsigned_long_.html,https://root.cern,https://root.cern/root/html604/ROOT__TImpProxy_unsigned_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. TEnv(const TEnv&); const char*Getvalue(const char* name); TEnv&operator=(const TEnv&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIgnoreDupignore duplicates, don't issue warning; TStringfRcNameresource file base name; THashList*fTablehash table containing env records. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEnv(const char* name = """"); Create a resource table and read the (possibly) three resource files, i.e; $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>), $HOME/<name> and; ./<name>. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can; read additional user defined resource files by creating addtional TEnv; objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; the $HOME/<name> resource file will be skipped. This might be useful in; case the home directory resides on an automounted remote file system; and one wants to avoid the file system from being mounted. ~TEnv(); Delete the resource table. const char * Getvalue(const char* name); Returns the character value for a named resouce. Int_t GetValue(const char* name, Int_t dflt); Returns the integer value for a resource. If the resource is not found; return the dflt value. Double_t GetValue(const char* name, Double_t dflt); Returns the double value for a resource. If the resource is not found; return the dflt value. const char * GetValue(const char* name, const char* dflt); Returns the character value for a named resouce. If the resource is; not found the dflt value is returned. TEnvRec * Lookup(const char* n); Loop over all resource records and return the one with name.; Return 0 in case name is not in the resoucre table. void Print(Option_t* option = """") const; Print all resources or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEnv.html:8432,variab,variable,8432,root/html528/TEnv.html,https://root.cern,https://root.cern/root/html528/TEnv.html,6,['variab'],['variable']
Modifiability,":. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. TString*fAllVarsIwhat to do with variables; TMVA::BinarySearchTree*fBinaryTreeB; TMVA::BinarySearchTree*fBinaryTreeS; Double_t**fCutMaxmaximum requirement; Double_t**fCutMinminimum requirement; vector<Interval*>fCutRangeallowed ranges for cut optimisation; Double_t*fCutRangeMaxmaximum of allowed cut range; Double_t*fCutRangeMinminimum of allowed cut range; TH1*fEffBvsSLocalintermediate eff. background versus eff signal histo; TMVA::MethodCuts::EEffMethodfEffMethodchosen efficiency calculation method; TStringfEffMethodSchosen efficiency calculation method (string); Double_tfEffRefreference efficiency; Double_tfEffSMaxused to test optimized signal efficiency; Double_tfEffSMinused to test optimized signal efficiency; TMVA::MethodCuts::EFitMethodTypefFitMethodchosen fit method; TStringfFitMethodSchosen fit method (string); vector<EFitParameters>*fFitParamsvector for series of fit methods; vector<Double_t>*fMeanBmeans of variables (background); vector<Double_t>*fMeanSmeans of variables (signal); Bool_tfNegEffWarningflag risen in case of negative efficiency warning; Int_tfNparnumber of parameters in fit (default: 2*Nvar); TRandom*fRandomrandom generator for MC optimisation method; ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodCuts.html:18486,variab,variables,18486,root/html528/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodCuts.html,1,['variab'],['variables']
Modifiability,":. double hsimple() {; return px;; }. MakeProxy can then be used indirectly via the TTree::Draw interface; as follow:; new TFile(""hsimple.root""); ntuple->Draw(""hsimple.cxx"");. A more complete example is available in the tutorials directory:; h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a parallel coordinates plot. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Making a candle sticks chart. In case of a 2-Dim or more expression with the option=candle, one can generate; a candle sticks chart. With that option, the number of dimensions is; arbitrary. Giving more than 4 variables without the option=para or; option=candle or option=goff will produce an error. Saving the result of Draw to a TEventList or a TEntryList. TTree::Draw can be used to fill a TEventList object (list of entry numbers); instead of histogramming one variable.; If varexp0 has the form >>elist , a TEventList object named ""elist""; is created in the current directory. elist will cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:76779,variab,variables,76779,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,1,['variab'],['variables']
Modifiability,":. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. const TBranch*fBranchpointer to the branch element representing the top object; TClass*fClasspointer to TClass representing our type (i.e. return type for methods), 0 if basic type; TList*fLeavespointer to leaves; const TVirtualBranchBrowsable*fParentparent method if this method is member of a returned class; Bool_tfTypeIsPointerreturn type is pointer to class; static list<MethodCreateListOfBrowsables_t>fgGeneratorslist of MethodCreateListOfBrowsables_t called by CreateListOfBrowsables; static Bool_tfgGeneratorsSethave we set the generators yet? empty is not good enough - user might have removed them. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualBranchBrowsable(const TBranch* b, TClass* type, Bool_t typeIsPointer, const TVirtualBranchBrowsable* parent = 0); constructor setting all members according to parameters. ~TVirtualBranchBrowsable(); Destructor. Delete our leaves. void Browse(TBrowser* b); Calls TTree::Draw on the method if return type is not a class;; otherwise expands returned object's ""folder"". Int_t FillListOfBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); Askes all registered generators to fill their browsables into; the list. The browsables are generated for a given parent,; or (if 0), for a given branch. The branch is passed down to; leaves of TVirtualBranchBrowsable, too, as we need to access; the branch's TTree to be able to traw. TClass* GetCollectionContainedType(const TBranch* b, const TVirtualBranchBrowsable* parent, TClass*& contained); Check whether the branch (or the parent) contains a collection.; If it",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualBranchBrowsable.html:8857,Inherit,Inheritance,8857,root/html532/TVirtualBranchBrowsable.html,https://root.cern,https://root.cern/root/html532/TVirtualBranchBrowsable.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. enum { kWorkMax; };; enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; TVectorDfSigdiagonal of diagonal matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUorthogonal matrix; TMatrixDfVorthogonal matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSVD(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompSVD(const TMatrixD& m, Double_t tol = 0.0); Constructor for general matrix A . TDecompSVD(const TDecompSVD& another); Copy constructor. Bool_t Decompose(); SVD decomposition of matrix; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t Bidiagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder; transformations applied to the left (Q^T) and to the right (H) of a ,; so that A = Q . C . H^T with matrix C bidiagonal. Q and H are orthogonal matrices . Output:; v - (n x n) - matrix H in the (n x n) part of v; u - (m x m) - matrix Q^T; sDiag - diagonal of the (m x n) C; oDiag - off-diagonal ele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDecompSVD.html:8527,Inherit,Inheritance,8527,root/html532/TDecompSVD.html,https://root.cern,https://root.cern/root/html532/TDecompSVD.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. static Int_tfgAscentstring ascent, used to compute Y alignment; static FT_BBoxfgCBoxstring control box; static FT_CharMapfgCharMap[32]font character map; static Int_tfgCurFontIdxcurrent font index; static FT_FacefgFace[32]font face; static Int_tfgFontCountnumber of fonts loaded; static char*fgFontName[32]font name; static TTGlyphfgGlyphs[1024]glyphs; static Bool_tfgHintinguse hinting (true by default); static Bool_tfgInittrue if the Init has been called; static Bool_tfgKerninguse kerning (true by default); static FT_LibraryfgLibraryFreeType font library; static Int_tfgNumGlyphsnumber of glyphs in the string; static FT_Matrix*fgRotMatrixrotation matrix; static Bool_tfgSmoothinguse anti-aliasing (true when >8 planes, false otherwise); static Int_tfgSymbItaFontIdxSymbol italic font index; static Int_tfgTBlankWtrailing blanks width; static Int_tfgWidthstring width, used to compute X alignment; static TTF::(anonymous)kMaxGlyphs; static TTF::(anonymous)kTTMaxFonts. Class Charts. Inheritance Chart:. TTF. Function documentation; ~TTF(); Cleanup TTF environment. void Init(); Initialise the TrueType fonts interface. void Cleanup(); Cleanup. Is called by the gCleanupTTF destructor. Short_t CharToUnicode(UInt_t code); Map char to unicode. Returns 0 in case no mapping exists. void GetTextExtent(UInt_t& w, UInt_t& h, char* text); Get width (w) and height (h) when text is horizontal. void GetTextAdvance(UInt_t& a, char* text); Get advance (a) when text is horizontal. void GetTextExtent(UInt_t& w, UInt_t& h, wchar_t* text); Get width (w) and height (h) when text is horizontal. void LayoutGlyphs(); Compute the glyps positions, fgAscent and fgWidth (needed for alignment).; Perform the Glyphs transformation.; Compute the string control box.; If required take the ""kerning"" into account.; SetRotation and PrepareString should have been called before. void PrepareString(const char* string); Put the characters in ""string"" in the ""glyphs"" array. void PrepareString(const wchar_t* string);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTF.html:2667,Inherit,Inheritance,2667,root/html602/TTF.html,https://root.cern,https://root.cern/root/html602/TTF.html,2,['Inherit'],['Inheritance']
Modifiability,":. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TGeoMedium::EGeoMediumkMedSavePrimitive; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfIdunique Id; TGeoMaterial*fMaterialpointer to material; TStringTNamed::fNameobject identifier; Double_tfParams[20]parameters; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMedium(); Default constructor. TGeoMedium(const char* name, Int_t numed, const TGeoMaterial* mat, Double_t* params = 0); constructor. TGeoMedium(const char* name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin); constructor. TGeoMedium(const TGeoMedium& ); copy constructor. TGeoMedium& operator=(const TGeoMedium& ); assignment operator. ~TGeoMedium(); Destructor. char * GetPointerName() const; Provide a pointer name containing uid. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". Int_t GetByteCount() const; methods. {return sizeof(*this);}. Int_t GetId() const; {return fId;}. Double_t GetParam(Int_t i) const; {return fParams[i];}. void SetParam(Int_t i, Double_t val); {fParams[i] = val;}. TGeoMaterial * GetMaterial() const; {return fMaterial;}. void SetId(Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoMedium.html:7180,Inherit,Inheritance,7180,root/html602/TGeoMedium.html,https://root.cern,https://root.cern/root/html602/TGeoMedium.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. static doubledummyFunction(int, int). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. static RooCFunction2Map<double,int,int>*_fmapPointer to mapping service object; RooCFunction2Ref<double,int,int>::func_t_ptr! Pointer to embedded function. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& R__b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. VO operator()(int x, int y) const; Evaluate embedded function. const char* name() const; Return registered name of embedded function. If function; is not registered return string with hex presentation; of function pointer value. const char* argName(Int_t iarg); Return suggested name for i-th argument. return fmap(). VO dumm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2Ref_double_int_int_.html:6653,Inherit,Inheritance,6653,root/html602/RooCFunction2Ref_double_int_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2Ref_double_int_int_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfBranchingRatiobranching ratio ( < 1); TArrayIfDaughtersPDG codes of the daughters; Int_tfMatrixElementCodematrix element for this decay mode; Int_tfNumberchannel number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecayChannel(); default constructor. TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); constructor. ~TDecayChannel(). TDecayChannel(); ****** constructors and destructor. Int_t Number(); ****** accessors. { return fNumber; }. Int_t MatrixElementCode(); { return fMatrixElementCode; }. Int_t NDaughters(); { return fDaughters.fN; }. Double_t BranchingRatio(); { return fBranchingRatio; }. Int_t DaughterPdgCode(Int_t i); { return fDaughters.fArray[i]; }. » Author: P.Murat 15/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-06-02 15:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TDecayChannel.html:6062,Inherit,Inheritance,6062,root/html604/TDecayChannel.html,https://root.cern,https://root.cern/root/html604/TDecayChannel.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfBranchingRatiobranching ratio ( < 1); TArrayIfDaughtersPDG codes of the daughters; Int_tfMatrixElementCodematrix element for this decay mode; Int_tfNumberchannel number. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecayChannel(); default constructor. TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); constructor. ~TDecayChannel(). TDecayChannel(); ****** constructors and destructor. Int_t Number(); ****** accessors. { return fNumber; }. Int_t MatrixElementCode(); { return fMatrixElementCode; }. Int_t NDaughters(); { return fDaughters.fN; }. Double_t BranchingRatio(); { return fBranchingRatio; }. Int_t DaughterPdgCode(Int_t i); { return fDaughters.fArray[i]; }. » Author: P.Murat 15/02/2001 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/eg:$Id$ » Last generated: 2015-06-30 14:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDecayChannel.html:6062,Inherit,Inheritance,6062,root/html602/TDecayChannel.html,https://root.cern,https://root.cern/root/html602/TDecayChannel.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":. virtual~BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>(); virtual ROOT::Math::IBaseFunctionMultiDim*ROOT::Math::IBaseFunctionMultiDim::Clone() const; virtual doubleDataElement(const double* x, unsigned int i, double* g = 0) const; virtual unsigned intNCalls() const; virtual unsigned intNDim() const; virtual unsigned intNPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>&operator=(const ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>&); virtual voidResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tType() const; virtual voidUpdateNCalls() const. Data Members; public:. enum Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. unsigned intfNCallsnumber of function calls; unsigned intfNDimfunction dimension ; unsigned intfNPointssize of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; unsigned int NDim() const. Number of dimension (parameters) . From IGenMultiFunction interface. { return fNDim; }. double DataElement(const double* x, unsigned int i, double* g = 0) const. method returning the data i-th contribution to the fit objective function; For example the residual for the least square functions or the pdf element for the; likelihood functions.; Estimating eventually also the gradient of the data element if the passed pointer is not null. unsigned int NPoints() const. return the number of data points used in evaluating the function. { return fNPoints; }. unsigned int NCalls() const. return the total number of function calls (overrided if needed). { return fNCalls; }. void UpdateNCalls() const. update number of calls. { fNCalls++; }. void ResetNCalls(). reset number of function calls. { fNCalls = 0; }. » Author: L. Moneta Thu Aug 16 15:40:28 2007 » Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; » Last chang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__BasicFitMethodFunction_-p1IBaseFunctionMultiDim_.html:2295,Inherit,Inheritance,2295,root/html532/ROOT__Math__BasicFitMethodFunction_-p1IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__BasicFitMethodFunction_-p1IBaseFunctionMultiDim_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":101; RooDataSet.h; RooFitResult.h; RooGaussian.h; RooGenericPdf.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; gPad#define gPadDefinition TVirtualPad.h:308; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooFormulaVarA RooFormulaVar is a generic implementation of a real-valued object, which takes a RooArgList of serv...Definition RooFormulaVar.h:30; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf103_interprfunc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf103__interprfuncs_8C.html:4910,variab,variable,4910,doc/master/rf103__interprfuncs_8C.html,https://root.cern,https://root.cern/doc/master/rf103__interprfuncs_8C.html,1,['variab'],['variable']
Modifiability,":219; ROOT::Experimental::RNTupleLocator::kTypeUnknown@ kTypeUnknownDefinition RNTupleUtil.hxx:227; ROOT::Experimental::RNTupleLocator::kLastSerializableType@ kLastSerializableTypeDefinition RNTupleUtil.hxx:225; ROOT::Experimental::RNTupleLocator::kTypeDAOS@ kTypeDAOSDefinition RNTupleUtil.hxx:223; ROOT::Experimental::RNTupleLocator::kTypeFile@ kTypeFileDefinition RNTupleUtil.hxx:222; ROOT::Experimental::RNTupleLocator::kTypePageZero@ kTypePageZeroDefinition RNTupleUtil.hxx:226; ROOT::Experimental::RNTupleLocator::fReservedstd::uint8_t fReservedReserved for use by concrete storage backends.Definition RNTupleUtil.hxx:238; ROOT::Experimental::RNTupleLocator::fTypeELocatorType fTypeFor non-disk locators, the value for the Type field.Definition RNTupleUtil.hxx:236; ROOT::Experimental::RNTupleLocator::operator==bool operator==(const RNTupleLocator &other) constDefinition RNTupleUtil.hxx:240; ROOT::Experimental::RNTupleLocator::fPositionstd::variant< std::uint64_t, RNTupleLocatorObject64 > fPositionSimple on-disk locators consisting of a 64-bit offset use variant type uint64_t; extended locators ha...Definition RNTupleUtil.hxx:233; ROOT::Experimental::RNTupleLocator::GetPositionconst T & GetPosition() constDefinition RNTupleUtil.hxx:245; ROOT::Experimental::RNTupleOpenSpecUsed to specify the underlying RNTuples in RNTupleProcessor and RNTupleReader::OpenFriends()Definition RNTupleUtil.hxx:252; ROOT::Experimental::RNTupleOpenSpec::fStoragestd::string fStorageDefinition RNTupleUtil.hxx:254; ROOT::Experimental::RNTupleOpenSpec::fOptionsRNTupleReadOptions fOptionsDefinition RNTupleUtil.hxx:255; ROOT::Experimental::RNTupleOpenSpec::fNTupleNamestd::string fNTupleNameDefinition RNTupleUtil.hxx:253; ROOT::Experimental::RNTupleOpenSpec::RNTupleOpenSpecRNTupleOpenSpec(std::string_view n, std::string_view s)Definition RNTupleUtil.hxx:257; ROOT::RNTupleCardinalityHelper types to present an offset column as array of collection sizes.Definition RNTupleUtil.hxx:32; ROOT::RNTupleCardinali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html:20907,extend,extended,20907,doc/master/RNTupleUtil_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleUtil_8hxx_source.html,1,['extend'],['extended']
Modifiability,":229; TPrincipal::GetCovarianceMatrixconst TMatrixD * GetCovarianceMatrix() constReturn the covariance matrix.Definition TPrincipal.h:60; TPrincipal::Clearvoid Clear(Option_t *option="""") overrideClear the data in Object.Definition TPrincipal.cxx:494; TPrincipal::MakeHistogramsvirtual void MakeHistograms(const char *name=""pca"", Option_t *option=""epsdx"")Make histograms of the result of the analysis.Definition TPrincipal.cxx:587; TPrincipal::Printvoid Print(Option_t *opt=""MSE"") const overridePrint the statistics Options are.Definition TPrincipal.cxx:1094; TPrincipal::fUserDataTVectorD fUserDataVector of original data points.Definition TPrincipal.h:36; TPrincipal::MakeCodevirtual void MakeCode(const char *filename=""pca"", Option_t *option="""")Generates the file <filename>, with .C appended if it does argument doesn't end in ....Definition TPrincipal.cxx:562; TPrincipal::fCovarianceMatrixTMatrixD fCovarianceMatrixCovariance matrix.Definition TPrincipal.h:29; TPrincipal::fNumberOfVariablesInt_t fNumberOfVariablesNumber of variables.Definition TPrincipal.h:25; TPrincipal::fSigmasTVectorD fSigmasvector of sigmasDefinition TPrincipal.h:28; TPrincipal::fOffDiagonalTVectorD fOffDiagonalElements of the tridiagonal.Definition TPrincipal.h:34; TPrincipal::fEigenValuesTVectorD fEigenValuesEigenvalue vector of trans.Definition TPrincipal.h:32; TPrincipal::GetMeanValuesconst TVectorD * GetMeanValues() constDefinition TPrincipal.h:64; TPrincipal::fMeanValuesTVectorD fMeanValuesMean value over all data points.Definition TPrincipal.h:27; TPrincipal::fHistogramsTList * fHistogramsList of histograms.Definition TPrincipal.h:40; TPrincipal::GetEigenVectorsconst TMatrixD * GetEigenVectors() constDefinition TPrincipal.h:62; TPrincipal::IsFolderBool_t IsFolder() const overrideReturns kTRUE in case object contains browsable objects (like containers or lists of other objects).Definition TPrincipal.h:68; TPrincipal::MakeRealCodevoid MakeRealCode(const char *filename, const char *prefix, Option_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPrincipal_8h_source.html:6774,variab,variables,6774,doc/master/TPrincipal_8h_source.html,https://root.cern,https://root.cern/doc/master/TPrincipal_8h_source.html,1,['variab'],['variables']
Modifiability,":23; TProfile2D::TProfile2DTProfile2D()Default constructor for Profile2D histograms.Definition TProfile2D.cxx:88; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; int; c1return c1Definition legend1.C:41. Definition at line 27 of file TProfile2D.h. Public Member Functions;  TProfile2D ();  Default constructor for Profile2D histograms. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Option_t *option="""");  Create a 2-D Profile with variable bins in X and variable bins in Y. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, Double_t ylow, Double_t yup, Option_t *option="""");  Create a 2-D Profile with variable bins in X and fix bins in Y. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins, Option_t *option="""");  Create a 2-D Profile with fix bins in X and variable bins in Y. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Double_t zlow, Double_t zup, Option_t *option="""");  Constructor for Profile2D histograms with range in z. ;  ;  TProfile2D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Option_t *option="""");  Normal Constructor for Profile histograms. ;  ;  TProfile2D (const TProfile2D &profile);  Copy constructor. ;  ;  ~TProfile2D () override;  Default destructor for Profile2D histograms. ;  ; Bool_t Add (const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) override;  Replace contents of this profile2D by the addition of h1 and h2. ;  ; Bool_t Add (const TH1 *h1, Double_t c1=1) override;  Performs the operation: this = this + c1*h1 . ;  ; Bool_t Add (TF1 *h1, Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:4079,variab,variable,4079,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['variab'],['variable']
Modifiability,":2782; In order to have more flexibility, there are in fact several alternative ways of initializing a modeller state:; // Setting the point and finding the state in one step:; gGeoManager->FindNode(Double_t x,Double_t y,Double_t z);; gGeoManager->FindNode(Double_t *point[3]);; // Setting both initial point and direction and finding the state:; gGeoManager->InitTrack(Double_t x,Double_t y,Double_t z,; Double_t nx, Double_t ny, Double_t nz);; gGeoManager->InitTrack(Double_t *point[3],Double_t *dir[3]);; TGeoManager::InitTrackTGeoNode * InitTrack(const Double_t *point, const Double_t *dir)Initialize current point and current direction vector (normalized) in MARS.Definition TGeoManager.cxx:2856; Note that the current point coordinates can be changed and the state re-initialized at any time. This represents the ‘‘Where am I?’` geometrical query representing the basic navigation functionality provided by the modeller. Checking the Current State; The current state and all variables related to this are essential during tracking and have to be checked several times. Besides the current point and direction, the following additional information can be retrieved from TGeoManager interface:. The current path. This represents a string containing the names and copy numbers of all positioned objects in the current branch written in the /folder/folder/.../folder/file fashion. The final node pointed by the path is the deepest object containing the current point and is representative for the current state. All intermediate folders in the path are in fact also nodes ""touched"" by the current point, but having some ""touched"" containment. The current path can be retrieved only after the state was initialized and is useful for getting an idea of the current point location. const char *path = gGeoManager->GetPath();; cout << ""Current path is: "" << path << endl;; /A_1/B_34/C_3/D_1; TGeoManager::GetPathconst char * GetPath() constGet path to the current node in the form /node0/node1/...Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:72842,variab,variables,72842,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['variab'],['variables']
Modifiability,":70; TMath.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsRealAbstract base class for objects that represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; ROOT::Math::beta_pdfdouble beta_pdf(double x, double a, double b)Probability density function of the beta distribution.Definition PdfFuncMathCore.h:82; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; TMath::ErfDouble_t Erf(Double_t x)Comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf105__funcbinding_8C.html:4325,variab,variable,4325,doc/master/rf105__funcbinding_8C.html,https://root.cern,https://root.cern/doc/master/rf105__funcbinding_8C.html,1,['variab'],['variable']
Modifiability,":820; TGeoPainter::GetDrawnVolumeTGeoVolume * GetDrawnVolume() const overrideGet currently drawn volume.Definition TGeoPainter.cxx:338; TGeoPainter::DrawPolygonvoid DrawPolygon(const TGeoPolygon *poly) overrideDraw a polygon in 3D.Definition TGeoPainter.cxx:770; TGeoPainter::fNsegmentsInt_t fNsegmentsDefinition TGeoPainter.h:47; TGeoPainter::Testvoid Test(Int_t npoints, Option_t *option) overrideCheck time of finding ""Where am I"" for n points.Definition TGeoPainter.cxx:2170; TGeoPainter::PaintVolumevoid PaintVolume(TGeoVolume *vol, Option_t *option="""", TGeoMatrix *global=nullptr) overridePaint recursively a node and its content according to visualization options.Definition TGeoPainter.cxx:1384; TGeoPainter::fVolInfoTString fVolInfoDefinition TGeoPainter.h:58; TGeoPainter::CheckShapevoid CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) overrideTest for shape navigation methods.Definition TGeoPainter.cxx:254; TGeoPainter::SetIteratorPluginvoid SetIteratorPlugin(TGeoIteratorPlugin *plugin) overrideDefinition TGeoPainter.h:165; TGeoPainter::RandomPointsvoid RandomPoints(const TGeoVolume *vol, Int_t npoints, Option_t *option="""") overrideDraw random points in the bounding box of a volume.Definition TGeoPainter.cxx:1693; TGeoPainter::fTopVisibleBool_t fTopVisibleDefinition TGeoPainter.h:53; TGeoPainter::GetTopVolumeTGeoVolume * GetTopVolume() const overrideDefinition TGeoPainter.h:129; TGeoPainter::fGlobalTGeoHMatrix * fGlobalDefinition TGeoPainter.h:61; TGeoPainter::GetBombFactorsvoid GetBombFactors(Double_t &bombx, Double_t &bomby, Double_t &bombz, Double_t &bombr) const overrideDefinition TGeoPainter.h:116; TGeoPainter::fVisLevelInt_t fVisLevelDefinition TGeoPainter.h:49; TGeoPainter::Lockvoid Lock(Bool_t flag=kTRUE)Definition TGeoPainter.h:142; TGeoPainter::SetNsegmentsvoid SetNsegments(Int_t nseg=20) overrideSet number of segments to approximate circles.Definition TGeoPainter.cxx:1992; TGeoPainter::CheckBoundaryReferencevoid CheckBoundaryRef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8h_source.html:22285,plugin,plugin,22285,doc/master/TGeoPainter_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8h_source.html,1,['plugin'],['plugin']
Modifiability,"::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tTSpline::fDeltaDistance between equidistant knots; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TGraph*TSpline::fGraphGraph for drawing the knots; TH1F*TSpline::fHistogramTemporary histogram; Bool_tTSpline::fKstepTrue of equidistant knots; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTSpline::fNpNumber of knots; Int_tTSpline::fNpxNumber of points used for graphical representation; TStringTNamed::fTitleobject title; Double_tTSpline::fXmaxMaximum value of abscissa; Double_tTSpline::fXminMinimum value of abscissa. private:. TGraph*fGraphgraph that is splined. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpline1(const TString& title, TGraph* theGraph); constructor from TGraph; TSpline is a TNamed object. ~TSpline1( void ); destructor. Double_t Eval(Double_t x) const; returns linearly interpolated TGraph entry around x. void BuildCoeff( void ); no coefficients to precompute. void GetKnot(Int_t i, Double_t& x, Double_t& y) const; no knots. TSpline1(const TString& title, TGraph* theGraph). const TGraph* GetGraph() const; { return fGraph; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__TSpline1.html:9136,Inherit,Inheritance,9136,root/html604/TMVA__TSpline1.html,https://root.cern,https://root.cern/root/html604/TMVA__TSpline1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tTSpline::fDeltaDistance between equidistant knots; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TGraph*TSpline::fGraphGraph for drawing the knots; TH1F*TSpline::fHistogramTemporary histogram; Bool_tTSpline::fKstepTrue of equidistant knots; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTSpline::fNpNumber of knots; Int_tTSpline::fNpxNumber of points used for graphical representation; TStringTNamed::fTitleobject title; Double_tTSpline::fXmaxMaximum value of abscissa; Double_tTSpline::fXminMinimum value of abscissa. private:. TGraph*fGraphgraph that is splined. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpline1(const TString& title, TGraph* theGraph); constructor from TGraph; TSpline is a TNamed object. ~TSpline1( void ); destructor. Double_t Eval(Double_t x) const; returns linearly interpolated TGraph entry around x. void BuildCoeff( void ); no coefficients to precompute. void GetKnot(Int_t i, Double_t& x, Double_t& y) const; no knots. TSpline1(const TString& title, TGraph* theGraph). const TGraph* GetGraph() const; { return fGraph; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__TSpline1.html:9128,Inherit,Inheritance,9128,root/html602/TMVA__TSpline1.html,https://root.cern,https://root.cern/root/html602/TMVA__TSpline1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TList* GetStaged(TCollection* pathlist); Retrieves the staging (online) status for a list of path names. Path names; must be of type TUrl, TFileInfo or TObjString. The returned list is the list; of staged files as TObjString (we use TObjString, because you can do a FindObject; on that list using the file name, which is not possible with TUrl objects. Bool_t Stage(TCollection* pathlist, Option_t* opt = 0); Issue a stage request for a list of files.; Return the '&' of all single Prepare commands. TFileStager * Open(const char* stager); Open a stager, after having loaded the relevant plug-in.; The format of 'stager' depends on the plug-in. Bool_t IsStaged(const char* ); Just check if the file exists locally. Int_t Locate(const char* u, TString& f); Just check if the file exists locally. Int_t LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); Massive location of files. Returns < 0 on error, or number of files; processed. Results are returned on the TFileCollection itself. TString GetPathName(TObject* o); Return the path name contained in object 'o' allowing for; TUrl, TObjString or TFileInfo. TFileStager(const char* stager); { }. virtual ~TFileStager(); { }. Bool_t Matches(const char* s); { return ((s && (fName == s)) ? kTRUE : kFALSE); }. Bool_t Stage(const char* , Option_t* = 0); { return kTRUE; }. Bool_t IsValid() const; { return kTRUE; }. » Author: A. Peters, G. Ganis 7/2/2007 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-30 14:49; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileStager.html:7415,plug-in,plug-in,7415,root/html602/TFileStager.html,https://root.cern,https://root.cern/root/html602/TFileStager.html,2,['plug-in'],['plug-in']
Modifiability,"::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TList* GetStaged(TCollection* pathlist); Retrieves the staging (online) status for a list of path names. Path names; must be of type TUrl, TFileInfo or TObjString. The returned list is the list; of staged files as TObjString (we use TObjString, because you can do a FindObject; on that list using the file name, which is not possible with TUrl objects. Bool_t Stage(TCollection* pathlist, Option_t* opt = 0); Issue a stage request for a list of files.; Return the '&' of all single Prepare commands. TFileStager * Open(const char* stager); Open a stager, after having loaded the relevant plug-in.; The format of 'stager' depends on the plug-in. Bool_t IsStaged(const char* ); Just check if the file exists locally. Int_t Locate(const char* u, TString& f); Just check if the file exists locally. Int_t LocateCollection(TFileCollection* fc, Bool_t addDummyUrl = kFALSE); Massive location of files. Returns < 0 on error, or number of files; processed. Results are returned on the TFileCollection itself. TString GetPathName(TObject* o); Return the path name contained in object 'o' allowing for; TUrl, TObjString or TFileInfo. TFileStager(const char* stager); { }. virtual ~TFileStager(); { }. Bool_t Matches(const char* s); { return ((s && (fName == s)) ? kTRUE : kFALSE); }. Bool_t Stage(const char* , Option_t* = 0); { return kTRUE; }. Bool_t IsValid() const; { return kTRUE; }. » Author: A. Peters, G. Ganis 7/2/2007 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-09-08 17:43; Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFileStager.html:7415,plug-in,plug-in,7415,root/html604/TFileStager.html,https://root.cern,https://root.cern/root/html604/TFileStager.html,2,['plug-in'],['plug-in']
Modifiability,"::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TList*fFunctionsPointer to list of functions (fits and user); TH1F*fHistogramPointer to histogram used for drawing axis; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tfMaxSize!Current dimension of arrays fX and fY; Double_tfMaximumMaximum value for plotting along y; Double_tfMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tfNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*fX[fNpoints] array of X points; Double_t*fY[fNpoints] array of Y points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph(); Graph default constructor. TGraph(Int_t n); Constructor with only the number of points set; the arrays x and y will be set later. TGraph(Int_t n, const Int_t* x, const Int_t* y); Graph normal constructor with ints. TGraph(Int_t n, const Float_t* x, const Float_t* y); Graph normal constructor with floats. TGraph(Int_t n, const Double_t* x, const Double_t* y); Graph normal constructor with doubles. TGraph(const TGraph& gr); Copy constructor for this graph. TGraph& operator=(const TGraph& ); Equal operator for this graph. TGraph(const TVectorF& vx, const TVectorF& vy); Graph constructor with two vectors of floats in input; A graph is build with the X coordinates taken from vx and Y coord from vy; The number of points in the graph is the minimum of number of points; in vx and vy. TGraph(const TVectorD& vx, const TVectorD& vy); Graph constructor with two vectors of doubles in input; A graph is build with the X coordinates taken fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraph.html:14187,Inherit,Inheritance,14187,root/html602/TGraph.html,https://root.cern,https://root.cern/root/html602/TGraph.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tTSpline::fDeltaDistance between equidistant knots; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TGraph*TSpline::fGraphGraph for drawing the knots; TH1F*TSpline::fHistogramTemporary histogram; Bool_tTSpline::fKstepTrue of equidistant knots; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTSpline::fNpNumber of knots; Int_tTSpline::fNpxNumber of points used for graphical representation; TStringTNamed::fTitleobject title; Double_tTSpline::fXmaxMaximum value of abscissa; Double_tTSpline::fXminMinimum value of abscissa. private:. TGraph*fGraphgraph that is splined. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpline2(const TString& title, TGraph* theGraph); constructor from TGraph; TSpline is a TNamed object. ~TSpline2( void ); destructor. Double_t Eval(Double_t x) const; returns quadratically interpolated TGraph entry around x. void BuildCoeff( void ); no coefficients to precompute. void GetKnot(Int_t i, Double_t& x, Double_t& y) const; no knots. Double_t Quadrax(Float_t dm, Float_t dm1, Float_t dm2, Float_t dm3, Float_t cos1, Float_t cos2, Float_t cos3) const; quadratic interpolation; Revised and checked by Francois Nov, 16th, 2000; Note the beautiful non-spontaneous symmetry breaking ...; It was checked that the old routine gave exactly the same answers. TSpline2(const TString& title, TGraph* theGraph). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:19; This page has been automatically generated. For comments or suggestions regarding ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__TSpline2.html:9234,Inherit,Inheritance,9234,root/html604/TMVA__TSpline2.html,https://root.cern,https://root.cern/root/html604/TMVA__TSpline2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tTSpline::fDeltaDistance between equidistant knots; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TGraph*TSpline::fGraphGraph for drawing the knots; TH1F*TSpline::fHistogramTemporary histogram; Bool_tTSpline::fKstepTrue of equidistant knots; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTSpline::fNpNumber of knots; Int_tTSpline::fNpxNumber of points used for graphical representation; TStringTNamed::fTitleobject title; Double_tTSpline::fXmaxMaximum value of abscissa; Double_tTSpline::fXminMinimum value of abscissa. private:. TGraph*fGraphgraph that is splined. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpline2(const TString& title, TGraph* theGraph); constructor from TGraph; TSpline is a TNamed object. ~TSpline2( void ); destructor. Double_t Eval(Double_t x) const; returns quadratically interpolated TGraph entry around x. void BuildCoeff( void ); no coefficients to precompute. void GetKnot(Int_t i, Double_t& x, Double_t& y) const; no knots. Double_t Quadrax(Float_t dm, Float_t dm1, Float_t dm2, Float_t dm3, Float_t cos1, Float_t cos2, Float_t cos3) const; quadratic interpolation; Revised and checked by Francois Nov, 16th, 2000; Note the beautiful non-spontaneous symmetry breaking ...; It was checked that the old routine gave exactly the same answers. TSpline2(const TString& title, TGraph* theGraph). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:18; This page has been automatically generated. For comments or suggestions regarding ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__TSpline2.html:9226,Inherit,Inheritance,9226,root/html602/TMVA__TSpline2.html,https://root.cern,https://root.cern/root/html602/TMVA__TSpline2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::(anonymous)TObject::kZombie. protected:. Long64_tfCurcurrent entry; TDSet*fDSetdata set over which to iterate; TDirectory*fDirdirectory containing the objects or the TTree; TDSetElement*fElemCurrent Element; Long64_tfElemCurcurrent entry for this element; Long64_tfElemFirstfirst entry to process for this element; Long64_tfElemNumnumber of entries to process for this element; TEntryList*fEntryList! entry list for processing; Long64_tfEntryListPos! current position in the entrylist; TEventList*fEventList! eventList for processing; Int_tfEventListPos! current position in the eventList; TFile*fFileCurrent file; TStringfFilenameName of the current file; Long64_tfFirstfirst entry to process; Long64_tfNumnumber of entries to process; Long64_tfOldBytesReadlast reported number of bytes read; TList*fPacketslist of packets processed packets; TStringfPathPath to current TDirectory; TSelector*fSelselector to be used; Bool_tfStoptermination of run requested. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEventIter(); Default constructor. TEventIter(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); Constructor. ~TEventIter(); Destructor. void InvalidatePacket(); Invalidated the current packet (if any) by setting the TDSetElement::kCorrupted bit. void StopProcess(Bool_t abort); Set flag to stop the process. TEventIter * Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); Create and instance of the appropriate iterator. Int_t LoadDir(); Load directory. TEventIter(). Long64_t GetCacheSize(). Int_t GetLearnEntries(). Long64_t GetNextEvent(). Int_t GetNextPacket(Long64_t& first, Long64_t& num, TEntryList** enl = 0, TEventList** evl = 0). void PreProcessEvent(Long64_t ). TList * GetPackets(); { return fPackets; }. » Author: Maarten Ballintijn 07/01/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-04 09:58; This page has been automatically ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEventIter.html:7260,Inherit,Inheritance,7260,root/html604/TEventIter.html,https://root.cern,https://root.cern/root/html604/TEventIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::(anonymous)TObject::kZombie. protected:. Long64_tfCurcurrent entry; TDSet*fDSetdata set over which to iterate; TDirectory*fDirdirectory containing the objects or the TTree; TDSetElement*fElemCurrent Element; Long64_tfElemCurcurrent entry for this element; Long64_tfElemFirstfirst entry to process for this element; Long64_tfElemNumnumber of entries to process for this element; TEntryList*fEntryList! entry list for processing; Long64_tfEntryListPos! current position in the entrylist; TEventList*fEventList! eventList for processing; Int_tfEventListPos! current position in the eventList; TFile*fFileCurrent file; TStringfFilenameName of the current file; Long64_tfFirstfirst entry to process; Long64_tfNumnumber of entries to process; Long64_tfOldBytesReadlast reported number of bytes read; TList*fPacketslist of packets processed packets; TStringfPathPath to current TDirectory; TSelector*fSelselector to be used; Bool_tfStoptermination of run requested. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEventIter(); Default constructor. TEventIter(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); Constructor. ~TEventIter(); Destructor. void InvalidatePacket(); Invalidated the current packet (if any) by setting the TDSetElement::kCorrupted bit. void StopProcess(Bool_t abort); Set flag to stop the process. TEventIter * Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); Create and instance of the appropriate iterator. Int_t LoadDir(); Load directory. TEventIter(). Long64_t GetCacheSize(). Int_t GetLearnEntries(). Long64_t GetNextEvent(). Int_t GetNextPacket(Long64_t& first, Long64_t& num, TEntryList** enl = 0, TEventList** evl = 0). void PreProcessEvent(Long64_t ). TList * GetPackets(); { return fPackets; }. » Author: Maarten Ballintijn 07/01/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 14:48; This page has been automatically ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEventIter.html:7260,Inherit,Inheritance,7260,root/html602/TEventIter.html,https://root.cern,https://root.cern/root/html602/TEventIter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,::(anonymous)kLogScale; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TParallelCoordVar::(anonymous)kShowBarHisto; static TParallelCoordVar::(anonymous)kShowBox; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_tfHistoHeightHistogram Height.; Int_tfHistoLWLine width used to draw the histogram line.; TH1F*fHistogram! Histogram holding the variable distribution.; Int_tfIdId identifying the variable for the editor.; Double_tfMaxCurrentCurrent used maximum.; Double_tfMaxInitMemory of the maximum when first initialized.; Double_tfMeanAverage.; Double_tfMedMedian value (Q2).; Double_tfMinCurrentCurrent used minimum.; Double_tfMinInitMemory of the minimum when first initialized.; Int_tfNbinsNumber of bins in fHistogram.; Long64_tfNentriesNumber of stored entries values.; TParallelCoord*fParallelPointer to the TParallelCoord which owns the TParallelCoordVar.; Double_tfQua1First quantile (Q1).; Double_tfQua3Third quantile (Q3).; TList*fRangesList of the TParallelRange owned by TParallelCoordVar.; Double_t*fVal![fNentries] Entries values for the variable.; Double_tfX1x1 coordinate of the axis.; Double_tfX2x2 coordinate of the axis.; Double_tfY1y1 coordinate of the axis.; Double_tfY2y2 coordinate of the axis. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordVar(); Default constructor. ~TParallelCoordVar(); Destructor. TPar,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParallelCoordVar.html:9930,variab,variable,9930,root/html602/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html602/TParallelCoordVar.html,4,['variab'],['variable']
Modifiability,"::AClean@ ACleanDefinition RooAbsArg.h:362; RooAbsArg::getStringAttributeconst Text_t * getStringAttribute(const Text_t *key) constGet string attribute mapped under key 'key'.Definition RooAbsArg.cxx:275; RooAbsArg::getComponentsRooFit::OwningPtr< RooArgSet > getComponents() constCreate a RooArgSet with all components (branch nodes) of the expression tree headed by this object.Definition RooAbsArg.cxx:802; RooAbsArg::serversconst RefCountList_t & servers() constList of all servers of this object.Definition RooAbsArg.h:180; RooAbsArg::dependsOnValuebool dependsOnValue(const RooAbsCollection &serverList, const RooAbsArg *ignoreArg=nullptr) constCheck whether this object depends on values from an element in the serverList.Definition RooAbsArg.h:108; RooAbsArg::setValueDirtyvoid setValueDirty()Mark the element dirty. This forces a re-evaluation when a value is requested.Definition RooAbsArg.h:462; RooAbsArg::getVariablesRooFit::OwningPtr< RooArgSet > getVariables(bool stripDisconnected=true) constReturn RooArgSet with all variables (tree leaf nodes of expression tree)Definition RooAbsArg.cxx:2154; RooAbsArg::printMultilinevoid printMultiline(std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const overrideImplement multi-line detailed printing.Definition RooAbsArg.cxx:1589; RooAbsArg::cloneTreevirtual RooAbsArg * cloneTree(const char *newname=nullptr) constClone tree expression of objects.Definition RooAbsArg.cxx:2293; RooAbsArg::cleanBranchNameTString cleanBranchName() constConstruct a mangled name from the actual name that is free of any math symbols that might be interpre...Definition RooAbsArg.cxx:2075; RooAbsArg::numProxiesInt_t numProxies() constReturn the number of registered proxies.Definition RooAbsArg.cxx:1457; RooAbsArg::_inhibitDirtystatic bool _inhibitDirtyDefinition RooAbsArg.h:668; RooAbsArg::setAttributevoid setAttribute(const Text_t *name, bool value=true)Set (default) or clear a named boolean attribute of this object.Definition Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:205296,variab,variables,205296,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2118; TStreamerInfoActions::VectorPtrLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:2080; TStreamerInfoActions::VectorPtrLooper::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2081; TStreamerInfoActions::VectorPtrLooperDefinition TStreamerInfoActions.cxx:2065; TStreamerInfoActions::VectorPtrLooper::ReadActionstatic Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2163; TStreamerInfoActions::VectorPtrLooper::ReadBasestatic Int_t ReadBase(TBuffer &buf, void *start, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2171; TStreamerInfoActions::VectorPtrLooper::ReadBasicTypestatic Int_t ReadBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2068; TStreamerInfoActions::VectorPtrLooper::GenericReadstatic Int_t GenericRead(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2179; TStreamerInfoActions::VectorPtrLooper::WriteBasicTypestatic Int_t WriteBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2151; TStreamerInfoActions::VectorPtrLooper::GenericWritestatic Int_t GenericWrite(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2186; TStreamerInfoActions::WithFactorMarkerDefinition TStreamerInfoActions.cxx:58; TStreamerInfoActions::WithFactorMarker::Value_tFrom Value_tDefinition TStreamerInfoActions.cxx:59; vecDefinition civetweb.c:1855. ioiosrcTStreamerInfoActions.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:38 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:277122,config,config,277122,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"::AdoptMemberStreamer ; (; const char * ; name, . TMemberStreamer * ; strm . ). Adopt the TMemberStreamer pointer to by p and use it to Stream non basic member name. ; Definition at line 6703 of file TClass.cxx. ◆ AdoptReferenceProxy(). void TClass::AdoptReferenceProxy ; (; TVirtualRefProxy * ; proxy). Adopt the Reference proxy pointer to indicate that this class represents a reference. ; When a new proxy is adopted, the old one is deleted. ; Definition at line 6685 of file TClass.cxx. ◆ AdoptSchemaRules(). void TClass::AdoptSchemaRules ; (; ROOT::Detail::TSchemaRuleSet * ; rules). Adopt a new set of Data Model Evolution rules. ; Definition at line 1920 of file TClass.cxx. ◆ AdoptStreamer(). void TClass::AdoptStreamer ; (; TClassStreamer * ; str). Adopt a TClassStreamer object. ; Ownership is transfered to this TClass object. ; Definition at line 6894 of file TClass.cxx. ◆ AutoBrowse(). Int_t TClass::AutoBrowse ; (; TObject * ; obj, . TBrowser * ; b . ). static . Browse external object inherited from TObject. ; It passes through inheritance tree and calls TBrowser::Add in appropriate cases. Static function. ; Definition at line 1966 of file TClass.cxx. ◆ Browse() [1/2]. void TClass::Browse ; (; TBrowser * ; b). overridevirtual . This method is called by a browser to get the class information. ; Reimplemented from TObject.; Definition at line 2010 of file TClass.cxx. ◆ Browse() [2/2]. Int_t TClass::Browse ; (; void * ; obj, . TBrowser * ; b . ); const. Browse objects of of the class described by this TClass object. ; Definition at line 1978 of file TClass.cxx. ◆ BuildEmulatedRealData(). void TClass::BuildEmulatedRealData ; (; const char * ; name, . Longptr_t ; offset, . TClass * ; cl, . Bool_t ; isTransient = kFALSE . ). Build the list of real data for an emulated class. ; Definition at line 2112 of file TClass.cxx. ◆ BuildRealData(). void TClass::BuildRealData ; (; void * ; pointer = nullptr, . Bool_t ; isTransient = kFALSE . ). Build a full list of persistent data m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:57375,inherit,inherited,57375,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['inherit'],['inherited']
Modifiability,"::AdoptMemberStreamer ; (; const char * ; name, . TMemberStreamer * ; strm . ). Adopt the TMemberStreamer pointer to by p and use it to Stream non basic member name. ; Definition at line 6770 of file TClass.cxx. ◆ AdoptReferenceProxy(). void TClass::AdoptReferenceProxy ; (; TVirtualRefProxy * ; proxy). Adopt the Reference proxy pointer to indicate that this class represents a reference. ; When a new proxy is adopted, the old one is deleted. ; Definition at line 6752 of file TClass.cxx. ◆ AdoptSchemaRules(). void TClass::AdoptSchemaRules ; (; ROOT::Detail::TSchemaRuleSet * ; rules). Adopt a new set of Data Model Evolution rules. ; Definition at line 1987 of file TClass.cxx. ◆ AdoptStreamer(). void TClass::AdoptStreamer ; (; TClassStreamer * ; str). Adopt a TClassStreamer object. ; Ownership is transfered to this TClass object. ; Definition at line 6961 of file TClass.cxx. ◆ AutoBrowse(). Int_t TClass::AutoBrowse ; (; TObject * ; obj, . TBrowser * ; b . ). static . Browse external object inherited from TObject. ; It passes through inheritance tree and calls TBrowser::Add in appropriate cases. Static function. ; Definition at line 2033 of file TClass.cxx. ◆ Browse() [1/2]. void TClass::Browse ; (; TBrowser * ; b). overridevirtual . This method is called by a browser to get the class information. ; Reimplemented from TObject.; Definition at line 2077 of file TClass.cxx. ◆ Browse() [2/2]. Int_t TClass::Browse ; (; void * ; obj, . TBrowser * ; b . ); const. Browse objects of of the class described by this TClass object. ; Definition at line 2045 of file TClass.cxx. ◆ BuildEmulatedRealData(). void TClass::BuildEmulatedRealData ; (; const char * ; name, . Longptr_t ; offset, . TClass * ; cl, . Bool_t ; isTransient = kFALSE . ). Build the list of real data for an emulated class. ; Definition at line 2179 of file TClass.cxx. ◆ BuildRealData(). void TClass::BuildRealData ; (; void * ; pointer = nullptr, . Bool_t ; isTransient = kFALSE . ). Build a full list of persistent data m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:57376,inherit,inherited,57376,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['inherit'],['inherited']
Modifiability,"::BinarySearchTree& b); copy constructor that creates a true copy, i.e. a completely independent tree. ~BinarySearchTree( void ); destructor. TMVA::BinarySearchTree* CreateFromXML(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); re-create a new tree (decision tree or search tree) from XML. void Insert(const TMVA::Event* ); insert a new ""event"" in the binary tree. void Insert(const TMVA::Event* , TMVA::Node* ); private internal function to insert a event (node) at the proper position. TMVA::BinarySearchTreeNode* Search(TMVA::Event* event) const; search the tree to find the node matching ""event"". TMVA::BinarySearchTreeNode* Search(TMVA::Event* , TMVA::Node* ) const; Private, recursive, function for searching. Double_t GetSumOfWeights(Int_t theType) const; return the sum of event (node) weights. Double_t GetSumOfWeights(Int_t theType) const; return the sum of event (node) weights. Double_t Fill(const vector<TMVA::Event*>& events, const vector<Int_t>& theVars, Int_t theType = -1); create the search tree from the event collection; using ONLY the variables specified in ""theVars"". Double_t Fill(const vector<TMVA::Event*>& events, Int_t theType = -1); create the search tree from the events in a TTree; using ALL the variables specified included in the Event. void NormalizeTree(vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator , vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator , UInt_t ). void NormalizeTree(); Normalisation of tree. void Clear(TMVA::Node* n = 0); clear nodes. Double_t SearchVolume(TMVA::Volume* , vector<const TMVA::BinarySearchTreeNode*>* events = 0); search the whole tree and add up all weigths of events that; lie within the given voluem. Double_t SearchVolume(TMVA::Node* , TMVA::Volume* , Int_t , vector<const TMVA::BinarySearchTreeNode*>* events); recursively walk through the daughter nodes and add up all weigths of events that; lie within the given volume. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__BinarySearchTree.html:6003,variab,variables,6003,root/html528/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html528/TMVA__BinarySearchTree.html,6,['variab'],['variables']
Modifiability,"::CladStorage &result);  Compute the gradient employing automatic differentiation. ;  ; TClass * IsA () const override;  ; Bool_t IsLinear () const;  ; Bool_t IsValid () const;  ; Bool_t IsVectorized () const;  ; TFormula & operator= (const TFormula &rhs);  = operator. ;  ; void Print (Option_t *option="""") const override;  Print the formula and its attributes. ;  ; void SetName (const char *name) override;  Set the name of the formula. ;  ; void SetParameter (const char *name, Double_t value);  Sets parameter value. ;  ; void SetParameter (Int_t param, Double_t value);  Set a parameter given a parameter index. ;  ; void SetParameters (const Double_t *params);  Set a vector of parameters value. ;  ; template<typename... Args> ; void SetParameters (Double_t arg1, Args &&... args);  Set a list of parameters. ;  ; void SetParName (Int_t ipar, const char *name);  ; template<typename... Args> ; void SetParNames (Args &&... args);  Set parameter names. ;  ; void SetVariable (const TString &name, Double_t value);  Sets variable value. ;  ; void SetVariables (const std::pair< TString, Double_t > *vars, const Int_t size);  Sets multiple variables. ;  ; void SetVectorized (Bool_t vectorized);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:13267,variab,variable,13267,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"::Closevoid Close(Option_t *option="""") overrideClose a file.Definition TFile.cxx:950; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TMVA::DataLoaderDefinition DataLoader.h:50; TMVA::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::FactoryThis is the main MVA steering class.Definition Factory.h:80; TMVA::Factory::TrainAllMethodsvoid TrainAllMethods()Iterates through all booked methods and calls training.Definition Factory.cxx:1114; TMVA::Factory::BookMethodMethodBase * BookMethod(DataLoader *loader, TString theMethodName, TString methodTitle, TString theOption="""")Book a classifier or regression method.Definition Factory.cxx:352; TMVA::Factory::TestAllMethodsvoid TestAllMethods()Evaluates all booked methods on the testing data and adds the output to the Results in the corresponi...Definition Factory.cxx:1271; TMVA::Factory::EvaluateAllMethodsvoid EvaluateAllMethods(void)Iterates over all MVAs that have been booked, and calls their evaluation methods.Definition Factory.cxx:1376; TMVA::GeneticFitterFitter using a Genetic Algorithm.Definition GeneticFitter.h:44; TMVA::IFitterTarget",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:49802,variab,variable,49802,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,1,['variab'],['variable']
Modifiability,"::Configurable::EnableLooseOptions(Bool_t b = kTRUE); voidForceNetworkCalculations(); voidForceNetworkInputs(const TMVA::Event* ev, Int_t ignoreIndex = -1); virtual voidTMVA::IMethod::GetHelpMessage() const; TMVA::TNeuron*GetInputNeuron(Int_t index); const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; Double_tGetNetworkOutput(); const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; TMVA::TNeuron*GetOutputNeuron(Int_t index = 0); const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); Float_tTMVA::MethodBase::GetTWeight(const TMVA::Event* ev) const; const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); Int_tNumCycles(); vector<Int_t>*ParseLayoutString(TString layerSpec); voidPrintMessage(TString message, Bool_t force = kFALSE) const; voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidWaitForKeyboard(); voidTMVA::Configurable::WriteOptionsReferenceToFile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodANNBase.html:14162,Config,Configurable,14162,root/html532/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodANNBase.html,1,['Config'],['Configurable']
Modifiability,"::Configurable::SetConfigNamevoid SetConfigName(const char *n)Definition Configurable.h:63; TMVA::Configurable::ParseOptionsvirtual void ParseOptions()options parserDefinition Configurable.cxx:124; TMVA::DataSetInfo::AddVariableVariableInfo & AddVariable(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0, char varType='F', Bool_t normalized=kTRUE, void *external=nullptr)add a variable (can be a complex expression) to the set of variables used in the MV analysisDefinition DataSetInfo.cxx:207; TMVA::DataSetManagerClass that contains all the data information.Definition DataSetManager.h:51; TMVA::DataSetManager::AddDataSetInfoDataSetInfo & AddDataSetInfo(DataSetInfo &dsi)stores a copy of the dataset info objectDefinition DataSetManager.cxx:105; TMVA::EventDefinition Event.h:51; TMVA::Event::GetValueFloat_t GetValue(UInt_t ivar) constreturn value of i'th variableDefinition Event.cxx:236; TMVA::Event::GetNVariablesUInt_t GetNVariables() constaccessor to the number of variablesDefinition Event.cxx:316; TMVA::IMethodInterface for all concrete MVA method implementations.Definition IMethod.h:53; TMVA::MethodBaseVirtual base Class for all MVA method.Definition MethodBase.h:111; TMVA::MethodBase::GetRegressionValuesconst std::vector< Float_t > & GetRegressionValues(const TMVA::Event *const ev)Definition MethodBase.h:214; TMVA::MethodBase::GetMvaValuevirtual Double_t GetMvaValue(Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0; TMVA::MethodBase::DeclareCompatibilityOptionsvirtual void DeclareCompatibilityOptions()options that are used ONLY for the READER to ensure backward compatibility they are hence without any...Definition MethodBase.cxx:596; TMVA::MethodBase::GetMethodTypeNameTString GetMethodTypeName() constDefinition MethodBase.h:332; TMVA::MethodBase::GetProbavirtual Double_t GetProba(const Event *ev)Definition MethodBase.cxx:2247; TMVA::MethodBase::GetMulticlassValuesvirtual const std::vector< Float_t > & Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:35175,variab,variablesDefinition,35175,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variablesDefinition']
Modifiability,"::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidInit(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Bool_tfAutomaticuse user given prune strength or automatically determined one using a validation sample ; Double_tfDeltaPruneStrengthstep size in pruning, is adjusted according to experience of previous trees ; Double_tfErrorFractionntuple var: misclassification error fraction ; vector<TMVA::Event*,allocator<TMVA::Event*> >fEventSamplethe training events; UInt_tfMaxDepthmax depth; Int_tfNCutsgrid used in cut applied in node splitting; UInt_tfNNodesMaxmax # of nodes; Int_tfNodeMinEventsmin number of events in node ; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPruneBefor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodDT.html:17902,variab,variables,17902,root/html528/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodDT.html,1,['variab'],['variables']
Modifiability,"::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tRooAbsCollection::_allRRVAll contents are RRV; Bool_t_defShapeServer; Bool_t_defValueServer; TIterator*_iter! do not persist; RooLinkedListRooAbsCollection::_listActual object store; TStringRooAbsCollection::_nameOur name.; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsProxy::_nset! Normalization set to be used for evaluation of RooAbsPdf contents; Bool_tRooAbsCollection::_ownContFlag to identify a list that owns its contents.; RooAbsArg*_owner; static char*RooArgSet::_poolBegin! Start of memory pool; static char*RooArgSet::_poolCur! Next free slot in memory pool; static char*RooArgSet::_poolEnd! End of memory pool; TNamed*RooAbsCollection::_structureTag! Structure tag; TNamed*RooAbsCollection::_typedStructureTag! Typed structure tag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void* operator new(size_t bytes); Overload new operator must be implemented because it is overloaded; in the RooArgSet base class. Perform standard memory allocation; here instead of memory pool management performed in RooArgSet. void operator delete(void* ptr). RooSetProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t defValueServer = kTRUE, Bool_t defShapeServer = kFALSE); Construct proxy with given name and description, with given owner; The default value and shape dirty propagation of the set contents; to the set owner is controlled by flags defValueServer and defShapeServer. RooSetProxy(const char* name, RooAbsArg* owner, const RooSetProxy& other); Copy constructor. ~RooSetProxy(); Destructor. Bool_t add(const RooAbsArg& var, Bool_t valueServer, Bool_t shapeServer, Bool_t silent); Overloaded RooArgSet::add() method insert object into set; and registers object as server to owner with given value; and shape dirty flag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSetProxy.html:14344,Inherit,Inheritance,14344,root/html602/RooSetProxy.html,https://root.cern,https://root.cern/root/html602/RooSetProxy.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::ConvertFromXMLAny ; (; const char * ; str, . TClass ** ; cl = nullptr, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). static . Read object of any class from XML, produced by ConvertToXML() method. ; If cl!=0, return actual class of object. GenericLayout and UseNamespaces should be the same as in ConvertToXML() ; Definition at line 177 of file TBufferXML.cxx. ◆ ConvertFromXMLChecked(). void * TBufferXML::ConvertFromXMLChecked ; (; const char * ; xml, . const TClass * ; expectedClass, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). staticprotected . Convert from XML and check if object derived from specified class When possible, cast to given class. ; Definition at line 201 of file TBufferXML.cxx. ◆ ConvertToXML() [1/2]. TString TBufferXML::ConvertToXML ; (; const TObject * ; obj, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). static . Converts object, inherited from TObject class, to XML string GenericLayout defines layout choice for XML file UseNamespaces allow XML namespaces. ; See TXMLSetup class for details ; Definition at line 105 of file TBufferXML.cxx. ◆ ConvertToXML() [2/2]. TString TBufferXML::ConvertToXML ; (; const void * ; obj, . const TClass * ; cl, . Bool_t ; GenericLayout = kFALSE, . Bool_t ; UseNamespaces = kFALSE . ). static . Converts any type of object to XML string. ; GenericLayout defines layout choice for XML file UseNamespaces allow XML namespaces. See TXMLSetup class for details ; Definition at line 127 of file TBufferXML.cxx. ◆ CreateElemNode(). void TBufferXML::CreateElemNode ; (; const TStreamerElement * ; elem). protected . Create xml node correspondent to TStreamerElement object. ; Definition at line 702 of file TBufferXML.cxx. ◆ CreateItemNode(). XMLNodePointer_t TBufferXML::CreateItemNode ; (; const char * ; name). protected . Create item node of specified name. ; Definition at line 675 of file TBufferXML.cxx. ◆ DeclFileName(). static const char * TBufferX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:58876,inherit,inherited,58876,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,1,['inherit'],['inherited']
Modifiability,"::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::AddSpectatorvoid AddSpectator(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:524; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::FactoryThis is the main MVA steering class.Definition Factory.h:80; TMVA::Factory::TrainAllMethodsvoid TrainAllMethods()Iterates through all booked methods and calls training.Definition Factory.cxx:1114; TMVA::Factory::BookMethodMethodBase * BookMethod(DataLoader *loader, TString theMethodName, TString methodTitle, TString theOption="""")Book a classifier or regression method.Definition Factory.cxx:352; TMVA::Factory::TestAllMethodsvoid TestAllMethods()Evaluates all booked methods on the testing data and adds the output to the Results in the corresponi...Definition Factory.cxx:1271; TMVA::Factory::EvaluateAllMethodsvoid EvaluateAllMethods(void)Iterates over all MVAs that have been booked, and calls their evaluation methods.Definition Factory.cxx:1376; TMVA::MethodBaseVirtual base Class for all MVA method.Definition MethodBase.h:111; TMVA::MethodCategor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:35998,variab,variable,35998,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,1,['variab'],['variable']
Modifiability,"::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::AddSpectatorvoid AddSpectator(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:524; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddBackgroundTreevoid AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:402; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Types::kFisher@ kFisherDefinition Types.h:82; TMVA::Types::kBDT@ kBDTDefinition Types.h:86; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; TMVA::TMVAGuivoid TMVAGui(const char *fName=""TMVA.root"", TString dataset=""""); Factory.h; AuthorKim Albertsson (adapted from code originally by Andreas Hoecker) ; Definition in file TMVACrossValidation.C. tutorialstmvaTMVACross",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidation_8C.html:29396,variab,variable,29396,doc/master/TMVACrossValidation_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidation_8C.html,1,['variab'],['variable']
Modifiability,"::DataPtrstd::shared_ptr< DataType > DataPtr() constaccess to data pointerDefinition BasicFCN.h:75; ROOT::Fit::BasicFCN::ModelFunctionvirtual const IModelFunction & ModelFunction() constaccess to const reference to the model functionDefinition BasicFCN.h:78; ROOT::Fit::BinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y ...Definition BinData.h:52; ROOT::Fit::PoissonLikelihoodFCNclass evaluating the log likelihood for binned Poisson likelihood fits it is template to distinguish ...Definition PoissonLikelihoodFCN.h:46; ROOT::Fit::PoissonLikelihoodFCN::NFitPointsvirtual unsigned int NFitPoints() constDefinition PoissonLikelihoodFCN.h:118; ROOT::Fit::PoissonLikelihoodFCN::IModelFunction::ROOT::Math::IParamMultiFunctionTempl< T > IModelFunctionDefinition PoissonLikelihoodFCN.h:55; ROOT::Fit::PoissonLikelihoodFCN::PoissonLikelihoodFCNPoissonLikelihoodFCN(const BinData &data, const IModelFunction &func, int weight=0, bool extended=true, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)Constructor from unbin data set and model function (pdf) managed by the users.Definition PoissonLikelihoodFCN.h:73; ROOT::Fit::PoissonLikelihoodFCN::DoDerivativevirtual double DoDerivative(const double *x, unsigned int icoord) constDefinition PoissonLikelihoodFCN.h:195; ROOT::Fit::PoissonLikelihoodFCN::BaseObjFunction::ROOT::Math::BasicFitMethodFunction< DerivFunType > BaseObjFunctionDefinition PoissonLikelihoodFCN.h:52; ROOT::Fit::PoissonLikelihoodFCN::PoissonLikelihoodFCNPoissonLikelihoodFCN(const PoissonLikelihoodFCN &f)Copy constructor.Definition PoissonLikelihoodFCN.h:91; ROOT::Fit::PoissonLikelihoodFCN::Clonevirtual BaseFunction * Clone() constclone the function (need to return Base for Windows)Definition PoissonLikelihoodFCN.h:115; ROOT::Fit::PoissonLikelihoodFCN::UseSumOfWeightSquarevoid UseSumOfWeightSquare(bool on=true)Definition PoissonLikelihoodFCN.h:173; ROOT::Fit::PoissonLikelihoodFCN::Is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html:10224,extend,extended,10224,doc/master/PoissonLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html,1,['extend'],['extended']
Modifiability,"::DataSetInfofDataSetInfothe data set; TMVA::DataSetManager*fDataSetManagerDSMTEST; TMVA::MsgLogger*fLoggermessage logger; map<TString,IMethod*>fMethodMapmap of methods; Double_tfMvaEventErrorper-event error returned by MVA; Double_tfMvaEventErrorUpperper-event error returned by MVA; Bool_tfSilentsilent mode; vector<Float_t>fTmpEvalVectemporary evaluation vector (if user input is v<double>); Bool_tfVerboseverbosity. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Reader(const TString& theOption = """", Bool_t verbose = 0); constructor. Reader(vector<TString>& varNames, const TString& theOption = """", Bool_t verbose = 0); constructor. Reader(vector<std::string>& varNames, const TString& theOption = """", Bool_t verbose = 0); constructor. Reader( const std::string& varNames, const TString& theOption, Bool_t verbose ); constructor. Reader(const TString& varNames, const TString& theOption, Bool_t verbose = 0); constructor. void DeclareOptions(); declaration of configuration options. ~Reader( void ); destructor. void Init( void ); default initialisation (no member variables); default initialisation (no member variables). void AddVariable(const TString& expression, Float_t* ); Add a float variable or expression to the reader. void AddVariable(const TString& expression, Int_t* ). void AddSpectator(const TString& expression, Float_t* ); Add a float spectator or expression to the reader. void AddSpectator(const TString& expression, Int_t* ); Add an integer spectator or expression to the reader. TString GetMethodTypeFromFile(const TString& filename); read the method type from the file. TMVA::IMethod* BookMVA(const TString& methodTag, const TString& weightfile); read method name from weight file. TMVA::IMethod* BookMVA(TMVA::Types::EMVA method, const TString& weightfile); books MVA method from weightfile. TMVA::IMethod* BookMVA(TMVA::Types::EMVA methodType, const char* xmlstr). Double_t EvaluateMVA( const std::vector<Float_t>& inputVec, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Reader.html:11431,config,configuration,11431,root/html528/TMVA__Reader.html,https://root.cern,https://root.cern/root/html528/TMVA__Reader.html,6,['config'],['configuration']
Modifiability,"::DecisionTree::GetRandomisedVariables ; (; Bool_t * ; useVariable, . UInt_t * ; variableMap, . UInt_t & ; nVars . ). Definition at line 1247 of file DecisionTree.cxx. ◆ GetRoot(). virtual DecisionTreeNode * TMVA::DecisionTree::GetRoot ; (; ); const. inlinevirtual . Reimplemented from TMVA::BinaryTree.; Definition at line 94 of file DecisionTree.h. ◆ GetSumWeights(). Double_t TMVA::DecisionTree::GetSumWeights ; (; const EventConstList * ; validationSample); const. calculate the normalization factor for a pruning validation sample ; Definition at line 1118 of file DecisionTree.cxx. ◆ GetTreeID(). Int_t TMVA::DecisionTree::GetTreeID ; (; ). inline . Definition at line 186 of file DecisionTree.h. ◆ GetVariableImportance() [1/2]. vector< Double_t > TMVA::DecisionTree::GetVariableImportance ; (; ). Return the relative variable importance, normalized to all variables together having the importance 1. ; The importance in evaluated as the total separation-gain that this variable had in the decision trees (weighted by the number of events) ; Definition at line 2745 of file DecisionTree.cxx. ◆ GetVariableImportance() [2/2]. Double_t TMVA::DecisionTree::GetVariableImportance ; (; UInt_t ; ivar). returns the relative importance of variable ivar ; Definition at line 2766 of file DecisionTree.cxx. ◆ IsA(). virtual TClass * TMVA::DecisionTree::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::BinaryTree.; Definition at line 243 of file DecisionTree.h. ◆ PruneNode(). void TMVA::DecisionTree::PruneNode ; (; TMVA::DecisionTreeNode * ; node). prune away the subtree below the node ; Definition at line 1194 of file DecisionTree.cxx. ◆ PruneNodeInPlace(). void TMVA::DecisionTree::PruneNodeInPlace ; (; TMVA::DecisionTreeNode * ; node). prune a node temporarily (without actually deleting its descendants which allows testing the pruned tree quality for many different pruning stages without ""touching"" the tree. ; Definition at line 1217 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:22263,variab,variable,22263,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,"::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cylindrical3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const Scalar[] src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:10873,Inherit,Inheritance,10873,root/html602/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TDataType&operator=(const TDataType&). private:. voidCheckInfo(); voidSetType(const char* name). Data Members; public:. enum TDictionary::ESTLType { kNone; kVector; kList; kDeque; kMap; kMultimap; kSet; kMultiset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TypedefInfo_t*fInfopointer to CINT typedef info; Long_tfPropertyThe property information for the (potential) underlying class; Int_tfSizesize of type; TStringfTrueNameTrue name of the (potential) underlying class ; EDataTypefTypetype id; static TDataType*fgBuiltins[22]Array of builtins. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataType(TypedefInfo_t* info = 0); Default TDataType ctor. TDataTypes are constructed in TROOT via; a call to TCint::UpdateListOfTypes(). TDataType(const char* typenam); Constructor for basic data types, like ""char"", ""unsigned char"", etc. TDataType(const TDataType& ); copy constructor. TDataType& operator=(const TDataType& ); assignement operator. ~TDataType(); TDataType dtor deletes adopted CINT TypedefInfo object. const char * GetTypeName(EDataType type); Return the name of the type. const char * GetTypeName() const; Get basic type of typedef, e,g.: ""class TDirectory*"" -> ""TDirectory"".; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of typedef, e,g.: ""class TDirectory*"". EDataType GetType(const type_info& typeinfo); Set type id depending on name. const char * AsString(void* buf) const; Return string containing value in buffer formatted according to; the basic data type.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDataType.html:6676,Inherit,Inheritance,6676,root/html532/TDataType.html,https://root.cern,https://root.cern/root/html532/TDataType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static TMVA::MethodCuts*DynamicCast(TMVA::IMethod* method); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tEstimatorFunction(vector<Double_t>&); Double_tEstimatorFunction(Int_t ievt1, Int_t ievt2); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; Double_tGetCuts(Double_t effS, vector<Double_t>& cutMin, vector<Double_t>& cutMax) const; Double_tGetCuts(Double_t effS, Double_t* cutMin, Double_t* cutMax) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tGetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t&); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCuts.html:4780,Config,Configurable,4780,root/html532/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCuts.html,4,['Config'],['Configurable']
Modifiability,"::ECellValue); voidTObject::MakeZombie(); Float_tWeightLinNeighbors(TMVA::PDEFoam*, vector<Float_t>&, TMVA::ECellValue, Bool_t). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::MsgLogger*TMVA::PDEFoamKernelBase::fLogger! message logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamKernelLinN(); Default constructor for streamer. PDEFoamKernelLinN(const TMVA::PDEFoamKernelLinN& ); Copy constructor. Float_t Estimate(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue ); Linear neighbors kernel estimator. It returns the cell value; 'cv', corresponding to the event vector 'txvec' (in foam; coordinates) linear weighted by the cell values of the neighbor; cells. Parameters:. - foam - the pdefoam to search in. - txvec - event vector in foam coordinates [0,1]. - cv - cell value to estimate. Float_t WeightLinNeighbors(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue , Bool_t ); Returns the cell value, corresponding to 'txvec' (foam; coordinates [0,1]), weighted by the neighbor cells via a linear; function. Parameters:; - foam - the foam to search in. - txvec - event vector, transformed into foam coordinates [0,1]. - cv - cell value to be weighted. - treatEmptyCells - if this option is set to false (default),; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamKernelLinN.html:6391,Inherit,Inheritance,6391,root/html602/TMVA__PDEFoamKernelLinN.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamKernelLinN.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EColumnTypeTTable::kUInt; static TTable::EColumnTypeTTable::kULong; static TTable::EColumnTypeTTable::kUShort; static TDataSet::EDataSetPassTDataSet::kUp; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSeqCollection*TDataSet::fListList of the the the objects included into this dataset; Long_tTTable::fMaxIndexThe used capacity of this array; Int_tTTable::fNNumber of array elements; TStringTNamed::fNameobject identifier; TDataSet*TDataSet::fParentpointer to mother of the directory; TClass*fRowClassTClass defining; TTableDescriptor*fSecondDescriptorshadow descriptor; Long_tTTable::fSizeSize of the one element (row) of the table; Char_t*TTable::fTableArray of (fN*fSize) longs; TStringTNamed::fTitleobject title; static TTableDescriptor*fgColDescriptors; static TStringfgCommentsNameThe name of dataset to keep the comments fields; static TDataSet*TDataSet::fgMainSetpointer the main dataset;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTableDescriptor * GetDescriptorPointer() const; return column descriptor. void SetDescriptorPointer(TTableDescriptor* list); set table descriptor. void SetCommentsSetName(const char* name = "".comments""); set comments name. void Streamer(TBuffer& ); The custom Streamer for this table. TTableDescriptor(const TTable* parentTable); to be documented. TTableDescriptor(TClass* classPtr); Create a descriptor of the C-structure defined by TClass; TClass *classPtr must be a valid pointer to TClass object for; ""plain"" C_struture only !!!. ~TTableDescriptor(); class destructor. Int_t AddAt(const void* c); Append one row pointed by ""c"" to the descriptor. void AddAt(const void* c, Int_t i); Add one row pointed by ""c"" to the ""i""-th row of the descriptor. void AddAt(TDataSet* dataset, Int_t idx = 0); Add one dataset to the descriptor.; There is no new implementation here.; One needs it to avoid the ""hidden method"" compilation warning. void AddAt(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTableDescriptor.html:16922,Inherit,Inheritance,16922,root/html604/TTableDescriptor.html,https://root.cern,https://root.cern/root/html604/TTableDescriptor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EGeoVisibilityAttTGeoAtt::kVisStreamed; static TGeoAtt::EGeoVisibilityAttTGeoAtt::kVisThis; static TGeoAtt::EGeoVisibilityAttTGeoAtt::kVisTouched; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGeoExtension*TGeoNode::fFWExtension! Transient framework-defined extension to volumes; UInt_tTGeoAtt::fGeoAttoption flags; TGeoVolume*TGeoNode::fMothermother volume; TStringTNamed::fNameobject identifier; Int_tTGeoNode::fNovlpnumber of overlaps; Int_tTGeoNode::fNumbercopy number; Int_t*TGeoNode::fOverlaps[fNovlp] list of indices for overlapping brothers; TStringTNamed::fTitleobject title; TGeoExtension*TGeoNode::fUserExtension! Transient user-defined extension to volumes; TGeoVolume*TGeoNode::fVolumevolume associated with this. private:. TGeoPatternFinder*fFinderfinder for this node; Int_tfIndexindex of this node in the division; Double_tfOffsetX offset for this node with respect to its mother. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNodeOffset(); Default constructor. TGeoNodeOffset(const TGeoVolume* vol, Int_t index, Double_t offset); Constructor. Null pointer to matrix means identity transformation. TGeoNodeOffset(const TGeoNodeOffset& ); copy constructor. TGeoNodeOffset& operator=(const TGeoNodeOffset& ); assignment operator. ~TGeoNodeOffset(); Destructor. Int_t GetIndex() const; Get the index of this offset. TGeoNode * MakeCopyNode() const; make a copy of this node. void cd() const; {;}. TGeoMatrix * GetMatrix() const. TGeoPatternFinder * GetFinder() const; {return 0;}. Double_t GetOffset() const; {return fOffset;}. void SetFinder(TGeoPatternFinder* finder); {fFinder = finder;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-02 16:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general ple",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoNodeOffset.html:14981,Inherit,Inheritance,14981,root/html604/TGeoNodeOffset.html,https://root.cern,https://root.cern/root/html604/TGeoNodeOffset.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EGeoVisibilityAttTGeoAtt::kVisStreamed; static TGeoAtt::EGeoVisibilityAttTGeoAtt::kVisThis; static TGeoAtt::EGeoVisibilityAttTGeoAtt::kVisTouched; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGeoExtension*TGeoNode::fFWExtension! Transient framework-defined extension to volumes; UInt_tTGeoAtt::fGeoAttoption flags; TGeoVolume*TGeoNode::fMothermother volume; TStringTNamed::fNameobject identifier; Int_tTGeoNode::fNovlpnumber of overlaps; Int_tTGeoNode::fNumbercopy number; Int_t*TGeoNode::fOverlaps[fNovlp] list of indices for overlapping brothers; TStringTNamed::fTitleobject title; TGeoExtension*TGeoNode::fUserExtension! Transient user-defined extension to volumes; TGeoVolume*TGeoNode::fVolumevolume associated with this. private:. TGeoPatternFinder*fFinderfinder for this node; Int_tfIndexindex of this node in the division; Double_tfOffsetX offset for this node with respect to its mother. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNodeOffset(); Default constructor. TGeoNodeOffset(const TGeoVolume* vol, Int_t index, Double_t offset); Constructor. Null pointer to matrix means identity transformation. TGeoNodeOffset(const TGeoNodeOffset& ); copy constructor. TGeoNodeOffset& operator=(const TGeoNodeOffset& ); assignment operator. ~TGeoNodeOffset(); Destructor. Int_t GetIndex() const; Get the index of this offset. TGeoNode * MakeCopyNode() const; make a copy of this node. void cd() const; {;}. TGeoMatrix * GetMatrix() const. TGeoPatternFinder * GetFinder() const; {return 0;}. Double_t GetOffset() const; {return fOffset;}. void SetFinder(TGeoPatternFinder* finder); {fFinder = finder;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-30 15:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general ple",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoNodeOffset.html:14981,Inherit,Inheritance,14981,root/html602/TGeoNodeOffset.html,https://root.cern,https://root.cern/root/html602/TGeoNodeOffset.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EKernel. Member Enumeration Documentation. ◆ EKernel. enum TMVA::MethodPDEFoam::EKernel. EnumeratorkNone ; kGaus ; kLinN . Definition at line 74 of file MethodPDEFoam.h. Constructor & Destructor Documentation. ◆ MethodPDEFoam() [1/2]. TMVA::MethodPDEFoam::MethodPDEFoam ; (; const TString & ; jobName, . const TString & ; methodTitle, . DataSetInfo & ; dsi, . const TString & ; theOption = ""PDEFoam"" . ). init PDEFoam objects ; Definition at line 85 of file MethodPDEFoam.cxx. ◆ MethodPDEFoam() [2/2]. TMVA::MethodPDEFoam::MethodPDEFoam ; (; DataSetInfo & ; dsi, . const TString & ; theWeightFile . ). constructor from weight file ; Definition at line 123 of file MethodPDEFoam.cxx. ◆ ~MethodPDEFoam(). TMVA::MethodPDEFoam::~MethodPDEFoam ; (; void ; ). virtual . destructor ; Definition at line 310 of file MethodPDEFoam.cxx. Member Function Documentation. ◆ AddWeightsXMLTo(). void TMVA::MethodPDEFoam::AddWeightsXMLTo ; (; void * ; parent); const. virtual . create XML output of PDEFoam method variables ; Implements TMVA::MethodBase.; Definition at line 1152 of file MethodPDEFoam.cxx. ◆ CalculateMVAError(). Double_t TMVA::MethodPDEFoam::CalculateMVAError ; (; ). protected . Calculate the error on the Mva value. ; If fSigBgSeparated == true the error is calculated from the number of events in the signal and background PDEFoam cells.; If fSigBgSeparated == false, the error is taken directly from the PDEFoam cell. ; Definition at line 755 of file MethodPDEFoam.cxx. ◆ CalcXminXmax(). void TMVA::MethodPDEFoam::CalcXminXmax ; (; ). protected . Determine foam range [fXmin, fXmax] for all dimensions, such that a fraction of 'fFrac' events lie outside the foam. ; Definition at line 322 of file MethodPDEFoam.cxx. ◆ Class(). static TClass * TMVA::MethodPDEFoam::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::MethodPDEFoam::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::Meth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html:34278,variab,variables,34278,doc/master/classTMVA_1_1MethodPDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html,1,['variab'],['variables']
Modifiability,"::EMVA method) const; TMVA::Types::EMVAGetMethodType(const TString& method) const; static TMVA::Types&Instance(); TMVA::Types&operator=(const TMVA::Types&); TMVA::TypesTypes(const TMVA::Types&). private:. TMVA::MsgLogger&Log() const; TMVA::TypesTypes(). Data Members; public:. enum EMVA { kVariable; kCuts; kLikelihood; kPDERS; kHMatrix; kFisher; kKNN; kCFMlpANN; kTMlpANN; kBDT; kDT; kRuleFit; kSVM; kMLP; kBayesClassifier; kFDA; kCommittee; kBoost; kPDEFoam; kLD; kPlugins; kCategory; kMaxMethod; };; enum EVariableTransform { kIdentity; kDecorrelated; kNormalized; kPCA; kRearranged; kGauss; kUniform; kMaxVariableTransform; };; enum EAnalysisType { kClassification; kRegression; kMulticlass; kNoAnalysisType; kMaxAnalysisType; };; enum ESBType { kSignal; kBackground; kSBBoth; kMaxSBType; kTrueType; };; enum ETreeType { kTraining; kTesting; kMaxTreeType; kValidation; kTrainingOriginal; };; enum EBoostStage { kBoostProcBegin; kBeforeTraining; kBeforeBoosting; kAfterBoosting; kBoostValidation; kBoostProcEnd; };. private:. TMVA::MsgLogger*fLoggermessage logger; map<TString,TMVA::Types::EMVA>fStr2typetypes-to-text map; static TMVA::Types*fgTypesPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Types(); constructor. ~Types(); destructor. TMVA::Types& Instance(); the the single instance of ""Types"" if existin already, or create it (Signleton). void DestroyInstance(); ""destructor"" of the single instance. Bool_t AddTypeMapping(TMVA::Types::EMVA method, const TString& methodname). TString GetMethodName(TMVA::Types::EMVA method) const. Types::EMVA GetMethodType(const TString& method) const. Types(). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: Types.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Types.html:1625,Inherit,Inheritance,1625,root/html532/TMVA__Types.html,https://root.cern,https://root.cern/root/html532/TMVA__Types.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EMatrixStatusBits { kStatus; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTMatrixTBase<float>::fColLwblower bound of the col index; floatfDataStack[25]! data container; float*fElements[fNelems] elements themselves; Bool_tTMatrixTBase<float>::fIsOwner!default kTRUE, when Use array kFALSE; Int_tTMatrixTBase<float>::fNcolsnumber of columns; Int_tTMatrixTBase<float>::fNelemsnumber of elements in matrix; Int_tTMatrixTBase<float>::fNrowIndexlength of row index array (= fNrows+1) wich is only used for sparse matrices; Int_tTMatrixTBase<float>::fNrowsnumber of rows; Int_tTMatrixTBase<float>::fRowLwblower bound of the row index; floatTMatrixTBase<float>::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TMatrixT<Element> Delete_m(Int_t size, float*& ); Delete data pointer m, if it was assigned on the heap. Element* TMatrixT<Element> New_m(Int_t size); Return data pointer . if requested size <= kSizeMax, assign pointer; to the stack space. Int_t TMatrixT<Element> Memcpy_m(float* newp, const float* oldp, Int_t copySize, Int_t newSize, Int_t oldSize); Copy copySize doubles from *oldp to *newp . However take care of the; situation where both pointers are assigned to the same stack space. void TMatrixT<Element> Allocate(Int_t nrows, Int_t ncols, Int_t row_lwb = 0, Int_t col_lwb = 0, Int_t init = 0, Int_t = -1); Allocate new matrix. Arguments are number of rows, columns, row; lowerbound (0 default) and column lowerbound (0 default). void TMatrixT<Element> Plus(const TMatrixT<Element> &a,const TMatrixT<Element> &b); General matrix summation. Create a matrix C such that C = A + B. void TMatrixT<Element> Plus(const TMatrixT<Element> &a,co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixT_float_.html:15058,Inherit,Inheritance,15058,root/html532/TMatrixT_float_.html,https://root.cern,https://root.cern/root/html532/TMatrixT_float_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EMatrixStatusBits { kStatus; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTMatrixTBase<float>::fColLwblower bound of the col index; floatfDataStack[25]! data container; float*fElements[fNelems] elements themselves; Bool_tTMatrixTBase<float>::fIsOwner!default kTRUE, when Use array kFALSE; Int_tTMatrixTBase<float>::fNcolsnumber of columns; Int_tTMatrixTBase<float>::fNelemsnumber of elements in matrix; Int_tTMatrixTBase<float>::fNrowIndexlength of row index array (= fNrows+1) wich is only used for sparse matrices; Int_tTMatrixTBase<float>::fNrowsnumber of rows; Int_tTMatrixTBase<float>::fRowLwblower bound of the row index; floatTMatrixTBase<float>::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TMatrixTSym<Element> Delete_m(Int_t size, float*& ); delete data pointer m, if it was assigned on the heap. Element* TMatrixTSym<Element> New_m(Int_t size); return data pointer . if requested size <= kSizeMax, assign pointer; to the stack space. Int_t TMatrixTSym<Element> Memcpy_m(float* newp, const float* oldp, Int_t copySize, Int_t newSize, Int_t oldSize); copy copySize doubles from *oldp to *newp . However take care of the; situation where both pointers are assigned to the same stack space. void TMatrixTSym<Element> Allocate(Int_t nrows, Int_t ncols, Int_t row_lwb = 0, Int_t col_lwb = 0, Int_t init = 0, Int_t = -1); Allocate new matrix. Arguments are number of rows, columns, row; lowerbound (0 default) and column lowerbound (0 default). void TMatrixTSym<Element> Plus(const TMatrixTSym<float>& a, const TMatrixTSym<float>& b); Symmetric matrix summation. Create a matrix C such that C = A + B. void TMatrixTSym<Element> Minus(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTSym_float_.html:13206,Inherit,Inheritance,13206,root/html532/TMatrixTSym_float_.html,https://root.cern,https://root.cern/root/html532/TMatrixTSym_float_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; operator=(const ROOT::Math::GSLNLSMinimizer& rhs). unsigned int NDim() const; { return fChi2->NDim(); }. GSLNLSMinimizer(int type = 0). Default constructor. ~GSLNLSMinimizer(). Destructor (no operations). GSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limited variable. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limited variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower, double upper); set upper/lower limited variable. bool SetFixedVariable(unsigned int ivar, const string& name, double val); set fixed variable. bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html:6667,variab,variable,6667,root/html528/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html,4,['variab'],['variable']
Modifiability,"::EProperty) ;  ; char * operator[] (UInt_t idx) const;  Return the address of the value at index idx ;  . Protected Member Functions; void Expand (UInt_t nCurr, UInt_t left);  ; TGenCollectionProxy * InitializeEx (Bool_t silent) override;  Proxy initializer. ;  ; void ReadItems (int nElements, TBuffer &b);  ; void Shrink (UInt_t nCurr, UInt_t left, Bool_t force);  ; void WriteItems (int nElements, TBuffer &b);  ;  Protected Member Functions inherited from TGenCollectionProxy; void CheckFunctions () const;  Check existence of function pointers. ;  ; virtual void DeleteItem (Bool_t force, void *ptr) const;  Call to delete/destruct individual item. ;  ; TGenCollectionProxy * Initialize (Bool_t silent) const;  Proxy initializer. ;  . Private Member Functions; TEmulatedCollectionProxy & operator= (const TEmulatedCollectionProxy &);  . Friends; class TCollectionProxy;  . Additional Inherited Members;  Static Public Attributes inherited from TVirtualCollectionProxy; static const Int_t fgIteratorArenaSize = 16;  The size of a small buffer that can be allocated on the stack to store iterator-specific information. ;  ;  Protected Types inherited from TGenCollectionProxy; typedef void *(* ArrIterfunc_t) (void *from, size_t size);  ; typedef void *(* Collectfunc_t) (void *from, void *to);  ; typedef ROOT::Detail::TCollectionProxyInfo::Environ< char[64]> Env_t;  ; typedef ROOT::Detail::TCollectionProxyInfo::EnvironBase EnvironBase_t;  ; typedef void *(* Feedfunc_t) (void *from, void *to, size_t size);  ; typedef std::vector< EnvironBase_t * > Proxies_t;  ; typedef void(* Sizing_t) (void *obj, size_t size);  ; typedef std::vector< TStaging * > Staged_t;  Collection of pre-allocated staged array for associative containers. ;  ;  Protected Attributes inherited from TGenCollectionProxy; Method fClear;  Method cache for container accessors: clear container. ;  ; Collectfunc_t fCollect;  Method to collect objects from container. ;  ; ArrIterfunc_t fConstruct;  Container accessors: bl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedCollectionProxy.html:10352,inherit,inherited,10352,doc/master/classTEmulatedCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,"::ESTLtypeTStreamerElement::kSTLstring; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Int_tfCounter!value of data member when referenced by an array; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerBasicType. Function documentation; TStreamerBasicType(); Default ctor. TStreamerBasicType(const char* name, const char* title, Int_t offset, Int_t dtype, const char* typeName); Create a TStreamerBasicType object. ~TStreamerBasicType(); TStreamerBasicType dtor. ULong_t GetMethod() const; return addr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerBasicType.html:10118,inherit,inherits,10118,root/html602/TStreamerBasicType.html,https://root.cern,https://root.cern/root/html602/TStreamerBasicType.html,2,['inherit'],['inherits']
Modifiability,"::ESTLtypeTStreamerElement::kSTLstring; static TStreamerElement::ESTLtypeTStreamerElement::kSTLvector; static TObject::(anonymous)TObject::kSingleKey; static TStreamerElement::(anonymous)TStreamerElement::kWholeObject; static TStreamerElement::(anonymous)TStreamerElement::kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTStreamerElement::fArrayDimnumber of array dimensions; Int_tTStreamerElement::fArrayLengthcumulative size of all array dims; TClass*TStreamerElement::fClassObject!pointer to class of object; Int_tfCtypeSTL contained type; Double_tTStreamerElement::fFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tTStreamerElement::fMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*TStreamerElement::fNewClass!new element class when reading; Int_tTStreamerElement::fNewType!new element type when reading; Int_tTStreamerElement::fOffset!element offset in class; Int_tfSTLtypetype of STL vector; Int_tTStreamerElement::fSizesizeof element; TMemberStreamer*TStreamerElement::fStreamer!pointer to element Streamer; Int_tTStreamerElement::fTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tTStreamerElement::fTypeelement type; TStringTStreamerElement::fTypeNameData type name of data member; Double_tTStreamerElement::fXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tTStreamerElement::fXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. private:. static TStreamerSTL::(anonymous)kWarned. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←; TStreamerSTL. ←. TStreamerSTLstring. Function documentation; TStreamerSTL(); Default ctor. TStreamerSTL(const char* name, const char* title, Int_t offset, const char* typeName, const TVirtualCollectionProxy& proxy, Bool_t dmPointer); Create a TStreamerSTL o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerSTL.html:10233,inherit,inherits,10233,root/html602/TStreamerSTL.html,https://root.cern,https://root.cern/root/html602/TStreamerSTL.html,2,['inherit'],['inherits']
Modifiability,"::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TH1*fHistogram; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Begin1D(TTree* t); Initialization for 1D Histogram. void Begin2D(TTree* t); Initialization for 2D histogram. void Begin3D(TTree* t); Initialization for 3D histogram. void Begin(TTree* t); See TProofDraw::Begin(). void DefVar1D(); Define vars for 1D Histogram. void DefVar2D(); Define variables for 2D histogram. void DefVar3D(); Define variables for 3D histogram. void DefVar(); Define variables according to arguments. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the histgram with given values. void Terminate(void); See TProofDr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawHist.html:7764,variab,variable,7764,root/html534/TProofDrawHist.html,https://root.cern,https://root.cern/root/html534/TProofDrawHist.html,2,['variab'],['variable']
Modifiability,"::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TMinuit::(anonymous)TMinuit::kMAXWARN; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TMVA::IFitterTarget&fFitterTargetfitter Target; Int_tfNumParnumber of parameters; vector<Double_t>fParametersvector holding the current parameters. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinuitWrapper(TMVA::IFitterTarget& target, Int_t maxpar); constructor. Int_t Eval(Int_t , Double_t* , Double_t& , Double_t* , Int_t ); std::vector<Double_t> parameters( npar );. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); Execute a fitter command;; command : command string; args : list of nargs command arguments. void Clear(Option_t* = 0); reset the fitter environment. Int_t GetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx); return global fit parameters; amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc); return current errors for a parameter; ipar : parameter number; eplus : upper error; eminus : lower error; eparab : parabolic error; globcc : global correlation coefficient. Int_t SetParam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitWrapper.html:18646,Inherit,Inheritance,18646,root/html602/TMVA__MinuitWrapper.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitWrapper.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. char*fBuffercontent of the block; Long64_tfCapacitycapacity of the buffer; Long64_tfDataSizetotal size of useful data in the block; Int_t*fLenarray of lengths of each segment; Int_tfNblocknumber of segment in the block; Long64_t*fPosarray of positions of each segment; Long64_t*fRelOffsetrelative offset of piece in the buffer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFPBlock(Long64_t* , Int_t* , Int_t ); Constructor. ~TFPBlock(); Destructor. void SetPos(Int_t , Long64_t ); Set pos value for index idx. void SetBuffer(char* ); Set block buffer. void ReallocBlock(Long64_t* , Int_t* , Int_t ); Reallocate the block's buffer based on the length; of the elements it will contain. Long64_t* GetPos() const. Int_t* GetLen() const. Long64_t GetDataSize() const. Long64_t GetCapacity() const. Int_t GetNoElem() const. Long64_t GetPos(Int_t ) const. Int_t GetLen(Int_t ) const. char* GetBuffer() const. char* GetPtrToPiece(Int_t index) const. TFPBlock(const TFPBlock& ). TFPBlock & operator=(const TFPBlock& ). » Author: Elvin Sindrilaru 19/05/2011 » Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-06-02 15:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TFPBlock.html:6491,Inherit,Inheritance,6491,root/html604/TFPBlock.html,https://root.cern,https://root.cern/root/html604/TFPBlock.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. char*fBuffercontent of the block; Long64_tfCapacitycapacity of the buffer; Long64_tfDataSizetotal size of useful data in the block; Int_t*fLenarray of lengths of each segment; Int_tfNblocknumber of segment in the block; Long64_t*fPosarray of positions of each segment; Long64_t*fRelOffsetrelative offset of piece in the buffer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFPBlock(Long64_t* , Int_t* , Int_t ); Constructor. ~TFPBlock(); Destructor. void SetPos(Int_t , Long64_t ); Set pos value for index idx. void SetBuffer(char* ); Set block buffer. void ReallocBlock(Long64_t* , Int_t* , Int_t ); Reallocate the block's buffer based on the length; of the elements it will contain. Long64_t* GetPos() const. Int_t* GetLen() const. Long64_t GetDataSize() const. Long64_t GetCapacity() const. Int_t GetNoElem() const. Long64_t GetPos(Int_t ) const. Int_t GetLen(Int_t ) const. char* GetBuffer() const. char* GetPtrToPiece(Int_t index) const. TFPBlock(const TFPBlock& ). TFPBlock & operator=(const TFPBlock& ). » Author: Elvin Sindrilaru 19/05/2011 » Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-06-30 14:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFPBlock.html:6491,Inherit,Inheritance,6491,root/html602/TFPBlock.html,https://root.cern,https://root.cern/root/html602/TFPBlock.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Float_tfCarry; Int_tfCount24; Float_tfFloatSeedTable[24]; Int_tfIlag; const Int_tfIntModulus; Int_tfJlag; Int_tfLuxury; const Double_tfMantissaBit12; const Double_tfMantissaBit24; TStringTNamed::fNameobject identifier; Int_tfNskip; UInt_tTRandom::fSeedRandom number generator seed; const UInt_t*fTheSeeds; TStringTNamed::fTitleobject title; static Int_tfgMaxIndex; static Int_tfgNumEngines. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TRandom. ←; TRandom1. Function documentation; TRandom1(UInt_t seed, Int_t lux = 3); Luxury level is set in the same way as the original FORTRAN routine.; level 0 (p=24): equivalent to the original RCARRY of Marsaglia; and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0,; now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still; defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible; correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. TRandom1(); default constructor. TRandom1(Int_t rowIndex, Int_t colIndex, Int_t lux); constructor. ~TRandom1(); destructor. void GetTableSeeds(UInt_t* seeds, Int_t index); static function returning the table of seeds. Double_t Rndm(Int_t i = 0); return a random number in ]0,1]. void RndmArray(Int_t size, Float_t* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRandom1.html:8045,Inherit,Inheritance,8045,root/html602/TRandom1.html,https://root.cern,https://root.cern/root/html602/TRandom1.html,2,['Inherit'],['Inheritance']
Modifiability,"::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfConfigDescriptiondescription of this configurable; TStringfConfigNamethe name of this configurable; TMVA::OptionBase*fLastDeclaredOption! last declared option; TListfListOfOptions! option list; TMVA::MsgLogger*fLogger! message logger; Bool_tfLooseOptionCheckingEnabled! checker for option string; TStringfOptions! options string; TStringfReferenceFilereference file for options writing. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Configurable(const TString& theOption = """"); constructor. ~Configurable(); default destructur. void SplitOptions(const TString& theOpt, TList& loo) const; splits the option string at ':' and fills the list 'loo' with the primitive strings. void ResetSetFlag(); resets the IsSet falg for all declare options; to be called before options are read from stream. void ParseOptions(); options parser. void CheckForUnusedOptions() const; checks for unused options in option string. void PrintOptions() const; prints out the options set in the options string and the defaults. void WriteOptionsToStream(ostream& o, const TString& prefix) const; write options to output stream (e.g. in writing the MVA weight files. void AddOptionsXMLTo(void* parent) const; write options to XML file. void ReadOptionsFromXML(void* node). void WriteOptionsReferenceToFile(); write complete options to output stream. void ReadOptionsFromStream(istream& istr); read option back from the weight file. Configurable(const TString& theOption = """"); constructur. const char* GetName() const; { return GetConfi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Configurable.html:7049,Config,Configurable,7049,root/html602/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html602/TMVA__Configurable.html,2,['Config'],['Configurable']
Modifiability,"::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMax! Max of source range; TMVA::VariableNormalizeTransform::VectorOfFloatVectorsfMin! Min of source range. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableNormalizeTransform( DataSetInfo& dsi ); constructor. ~VariableNormalizeTransform(). void Initialize(); initialization of the normalization transformation. Bool_t PrepareTransformation(const vector<TMVA::Event*>& ); prepare transformation. const TMVA::Event* Transform(const TMVA::Event*const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event*const , Int_t cls) const; apply the inverse transformation. void CalcNormalizationParams(const vector<TMVA::Event*>& events); compute offset and scale from min and max. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void WriteTransformationToStream(ostream& ) const; write the transformation to the stream. void AttachXMLTo(void* parent); create XML description of Normalize transf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html:10005,Variab,VariableNormalizeTransform,10005,root/html602/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableNormalizeTransform.html,4,['Variab'],['VariableNormalizeTransform']
Modifiability,"::ETextMode mode). void GetCharacterUp(Float_t& chupx, Float_t& chupy); Return character up vector. QPaintDevice * GetDoubleBuffer(Int_t wid); Query the pointer to the dev offscreen buffer if any. void GetGeometry(Int_t wid, Int_t& x, Int_t& y, UInt_t& w, UInt_t& h); Returns the global cooordinate of the window ""wd"". const char * DisplayName(const char* = 0); { return ""localhost""; }. ULong_t GetPixel(Color_t cindex); Return pixel value associated to specified ROOT color number.; see: GQTGUI.cxx:QtColor() also. void GetRGB(Int_t index, Float_t& r, Float_t& g, Float_t& b); Get rgb values for color ""index"". Float_t GetTextMagnitude(); {return fTextMagnitude;}. void SetTextMagnitude(Float_t mgn); { fTextMagnitude = mgn;}. void GetTextExtent(UInt_t& w, UInt_t& h, char* mess); Return the size of a character string.; iw : text width; ih : text height; mess : message. Int_t GetFontAscent() const; Returns ascent of the current font (in pixels).; The ascent of a font is the distance from the baseline; to the highest position characters extend to. Int_t GetFontDescent() const; Returns the descent of the current font (in pixels.; The descent is the distance from the base line; to the lowest point characters extend to. Bool_t HasTTFonts() const; {return fUseTTF;}. void MoveWindow(Int_t wid, Int_t x, Int_t y); Move the window wd.; wd : Window identifier.; x : x new window position; y : y new window position. void PutByte(Byte_t b). void QueryPointer(Int_t& ix, Int_t& iy); Query pointer position.; ix : X coordinate of pointer; iy : Y coordinate of pointer. Pixmap_t ReadGIF(Int_t x0, Int_t y0, const char* file, Window_t id = 0); If id is NULL - loads the specified gif file at position [x0,y0] in the; current window. Otherwise creates pixmap from gif file. Int_t RequestLocator(Int_t mode, Int_t ctyp, Int_t& x, Int_t& y); deprecated. Int_t RequestString(Int_t x, Int_t y, char* text); Request string*-*-*-*-*-*-*-; *-* ==============; *-* x,y : position where text is displayed; *-* text",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGQt.html:27041,extend,extend,27041,root/html528/TGQt.html,https://root.cern,https://root.cern/root/html528/TGQt.html,5,['extend'],['extend']
Modifiability,"::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction3Map<double,double,double,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Ref_double_double_double_double_.html:3276,Inherit,InheritsFrom,3276,root/html534/RooCFunction3Ref_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Ref_double_double_double_double_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static RooCFunction3Map<double,double,double,double>&fmap(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Ref_double_double_double_double_.html:2979,Inherit,InheritsFrom,2979,root/html602/RooCFunction3Ref_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Ref_double_double_double_double_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Bool_tFlush(); virtual Int_tGetBytesInCache() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileCacheWrite.html:2908,Inherit,InheritsFrom,2908,root/html532/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html532/TFileCacheWrite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Bool_tFlush(); virtual Int_tGetBytesInCache() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileCacheWrite.html:2841,Inherit,InheritsFrom,2841,root/html602/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html602/TFileCacheWrite.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TObject*GetUserObject() const; virtual TGeoExtension*Grab(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoRCExtension.html:2734,Inherit,InheritsFrom,2734,root/html534/TGeoRCExtension.html,https://root.cern,https://root.cern/root/html534/TGeoRCExtension.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TObject*GetUserObject() const; virtual TGeoExtension*Grab(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoRCExtension.html:2684,Inherit,InheritsFrom,2684,root/html602/TGeoRCExtension.html,https://root.cern,https://root.cern/root/html602/TGeoRCExtension.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFilterZonal(const Double_t** fSource, Double_t** fDest); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Transform.html:3427,Inherit,InheritsFrom,3427,root/html602/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Transform.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TMVA::MCFitterMCFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual Bool_tTObject::Notify(); voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MCFitter.html:2543,Config,Configurable,2543,root/html532/TMVA__MCFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__MCFitter.html,2,['Config'],['Configurable']
Modifiability,"::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html:2594,Config,Configurable,2594,root/html532/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html,2,['Config'],['Configurable']
Modifiability,"::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator del",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MinuitFitter.html:2656,Config,Configurable,2656,root/html532/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__MinuitFitter.html,2,['Config'],['Configurable']
Modifiability,"::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TObject*Key() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPair.html:2570,Inherit,InheritsFrom,2570,root/html532/TPair.html,https://root.cern,https://root.cern/root/html532/TPair.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TObject*Key() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPair.html:2538,Inherit,InheritsFrom,2538,root/html602/TPair.html,https://root.cern,https://root.cern/root/html602/TPair.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Long64_tGetCurrentEntry() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t force) const; TTreeReader::EEntryStatusGetEntryStatus() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsChain() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeReader.html:7663,Inherit,InheritsFrom,7663,root/html602/TTreeReader.html,https://root.cern,https://root.cern/root/html602/TTreeReader.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetFrontPower() const; virtual const char*TObject::GetIconName() const; UInt_tGetLightState(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetSidePower() const; Float_tGetSpecularPower() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetUseSpecular() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLLightSet.html:2444,Inherit,InheritsFrom,2444,root/html532/TGLLightSet.html,https://root.cern,https://root.cern/root/html532/TGLLightSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetFrontPower() const; virtual const char*TObject::GetIconName() const; UInt_tGetLightState(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetSidePower() const; Float_tGetSpecularPower() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetUseSpecular() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLLightSet.html:2429,Inherit,InheritsFrom,2429,root/html602/TGLLightSet.html,https://root.cern,https://root.cern/root/html602/TGLLightSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TStringGetJobID(); virtual TGridJobStatus*GetJobStatus() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetOutputSandbox(const char* localpath, Option_t* opt = 0); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGridJob.html:2616,Inherit,InheritsFrom,2616,root/html532/TGridJob.html,https://root.cern,https://root.cern/root/html532/TGridJob.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TStringGetJobID(); virtual TGridJobStatus*GetJobStatus() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetOutputSandbox(const char* localpath, Option_t* opt = 0); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJob.html:2616,Inherit,InheritsFrom,2616,root/html602/TGridJob.html,https://root.cern,https://root.cern/root/html602/TGridJob.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*GetResClass() const; TDataMember*GetResMember() const; Int_tGetResNumChilds() const; void*GetResPtr() const; Int_tGetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSnifferStore.html:2683,Inherit,InheritsFrom,2683,root/html534/TRootSnifferStore.html,https://root.cern,https://root.cern/root/html534/TRootSnifferStore.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*GetResClass() const; TDataMember*GetResMember() const; Int_tGetResNumChilds() const; void*GetResPtr() const; Int_tGetResRestrict() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsXml() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSnifferStore.html:2617,Inherit,InheritsFrom,2617,root/html604/TRootSnifferStore.html,https://root.cern,https://root.cern/root/html604/TRootSnifferStore.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTimeGetTime() const; virtual const char*TObject::GetTitle() const; virtual TRecEvent::ERecEventTypeGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRecEvent&operator=(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRecEvent.html:4824,Inherit,InheritsFrom,4824,root/html532/TRecEvent.html,https://root.cern,https://root.cern/root/html532/TRecEvent.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TTimeGetTime() const; virtual const char*TObject::GetTitle() const; virtual TRecEvent::ERecEventTypeGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRecEvent&operator=(const TRecEvent&); TRecEvent&op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRecEvent.html:4879,Inherit,InheritsFrom,4879,root/html602/TRecEvent.html,https://root.cern,https://root.cern/root/html602/TRecEvent.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidForceValue(Double_t value); Double_tGetActivationValue() const; Double_tGetDEDw() const; Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitSynapseDeltas(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInputNeuron() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutputNeuron() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Int_tNumPostLinks() const; Int_tNumPreLinks() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__TNeuron.html:2632,Inherit,InheritsFrom,2632,root/html532/TMVA__TNeuron.html,https://root.cern,https://root.cern/root/html532/TMVA__TNeuron.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidForceValue(Double_t value); Double_tGetActivationValue() const; Double_tGetDEDw() const; Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitSynapseDeltas(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInputNeuron() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutputNeuron() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); Int_tNumPostLinks() const; Int_tNumPreLinks() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__TNeuron.html:3308,Inherit,InheritsFrom,3308,root/html602/TMVA__TNeuron.html,https://root.cern,https://root.cern/root/html602/TMVA__TNeuron.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Factory: public TMVA::Configurable. This is the main MVA steering class: it creates all MVA methods,; and guides them through the training, testing and evaluation; phases. Function Members (Methods); public:. virtual~Factory(); voidTObject::AbstractMethod(const char* method) const; voidAddBackgroundTestEvent(const vector<Double_t>& event, Double_t weight = 1.0); voidAddBackgroundTrainingEvent(const vector<Double_t>& event, Double_t weight = 1.0); voidAddBackgroundTree(TTree* background, Double_t weight = 1.0, TMVA::Types::ETreeType treetype = Types::kMaxTreeType); voidAddBackgroundTree(TString datFileB, Double_t weight = 1.0, TMVA::Types::ETreeType treetype = Types::kMaxTreeType); voidAddBackgroundTree(TTree* background, Double_t weight, const TString& treetype); voidAddCut(const TString& cut, const TString& className = """"); voidAddCut(const TCut& cut, const TString& className = """"); TMVA::DataSetInfo&AddDataSet(TMVA::DataSetInfo&); TMVA::DataSetInfo&AddDataSet(const TString&); voidAddEvent(const TString& className, TMVA::Types::ETreeType tt, const vector<Double_t>& event, Double_t weight); voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidAddRegressionTarget(const TString& expression, const TString& title = """", const TString& unit = """", Double_t min = 0, Double_t max = 0); voidAddRegressionTree(TTree* tree, Double_t weight = 1.0, TMVA::Types::ETreeType treetype = Types::kMaxTreeType); voidAddSignalTestEvent(const vector<Double_t>& event, Double_t weight = 1.0); voidAddSignalTrainingEvent(const vector<Double_t>& event, Double_t weight = 1.0); voidAddSignalTree(TTree* signal, Double_t weight = 1.0, TMVA::Types::ETreeType treetype = Types::kMaxTreeType); voidAddSignalTree(TString datFileS, Double_t weight = 1.0, TMVA::Types::ETreeType treetype = Types::kMaxTreeType); voidAddSignalTree(TTree* signal, Double_t weight, const TString& treetype); voidAddSpectator(const TString& expression, const TString& title = """", const TString& unit = """", Double_t min =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Factory.html:1385,Config,Configurable,1385,root/html532/TMVA__Factory.html,https://root.cern,https://root.cern/root/html532/TMVA__Factory.html,2,['Config'],['Configurable']
Modifiability,"::Fatal(const char* method, const char* msgfmt) const; Int_tFindColumn(const char* name, Bool_t sqlname = kFALSE); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Long64_tGetClassId() const; const char*GetClassTableName() const; Int_tGetClassVersion() const; TObjArray*GetColumns() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetRawTableName() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsClassTableExist() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsRawTableExist() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLClassInfo.html:2905,Inherit,InheritsFrom,2905,root/html532/TSQLClassInfo.html,https://root.cern,https://root.cern/root/html532/TSQLClassInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Fatal(const char* method, const char* msgfmt) const; Int_tFindColumn(const char* name, Bool_t sqlname = kFALSE); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Long64_tGetClassId() const; const char*GetClassTableName() const; Int_tGetClassVersion() const; TObjArray*GetColumns() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetRawTableName() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsClassTableExist() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsRawTableExist() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLClassInfo.html:2804,Inherit,InheritsFrom,2804,root/html602/TSQLClassInfo.html,https://root.cern,https://root.cern/root/html602/TSQLClassInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGeoNode**GetArray() const; TObject*GetClient() const; TGeoNode*GetCurrentNode() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLevel() const; TGeoHMatrix*GetMatrix() const; virtual const char*TObject::GetName() const; TGeoNode*GetNode(Int_t level) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetPath(TString& path) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(TGeoNode** branch, TGeoMatrix* global, Int_t level); voidInitFromNavigator(TGeoNavigator* nav); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutside() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoBranchArray.html:2971,Inherit,InheritsFrom,2971,root/html602/TGeoBranchArray.html,https://root.cern,https://root.cern/root/html602/TGeoBranchArray.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMVA::IMethod*GetMethod(const TString& title) const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeClass(const TString& methodTitle = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Factory.html:5804,Inherit,InheritsFrom,5804,root/html532/TMVA__Factory.html,https://root.cern,https://root.cern/root/html532/TMVA__Factory.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMVA::IMethod*GetMethod(const TString& title) const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeClass(const TString& methodTitle = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Factory.html:5885,Inherit,InheritsFrom,5885,root/html602/TMVA__Factory.html,https://root.cern,https://root.cern/root/html602/TMVA__Factory.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); GVizAgedge_t*GetGVEdge(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; TGraphNode*GetNode1(); TGraphNode*GetNode2(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphEdge.html:2782,Inherit,InheritsFrom,2782,root/html534/TGraphEdge.html,https://root.cern,https://root.cern/root/html534/TGraphEdge.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); GVizAgedge_t*GetGVEdge(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; TGraphNode*GetNode1(); TGraphNode*GetNode2(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphEdge.html:2693,Inherit,InheritsFrom,2693,root/html602/TGraphEdge.html,https://root.cern,https://root.cern/root/html602/TGraphEdge.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::FindObject(const char* name) const; virtual TObject*RooLinkedList::FindObject(const TObject* obj) const; TObject*RooLinkedList::First() const; RooFIterRooLinkedList::fwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tRooLinkedList::getHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*RooLinkedList::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tRooLinkedList::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tRooLinkedList::Hash() const; Int_tRooLinkedList::IndexOf(const char* name) const; Int_tRooLinkedList::IndexOf(const TObject* arg) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; RooLinkedListIterRooLinkedList::iterator(Bool_t dir = kTRUE) const; virtual voidTObject::ls(Option_t* option = """") const; TIterator*RooLinkedList::MakeIterator(Bool_t dir = kTRUE) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRefCountList.html:3070,Inherit,InheritsFrom,3070,root/html602/RooRefCountList.html,https://root.cern,https://root.cern/root/html602/RooRefCountList.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TMatrixD*GetCovarianceMatrix() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TVectorD*GetEigenValues() const; const TMatrixD*GetEigenVectors() const; TList*GetHistograms() const; virtual const char*TObject::GetIconName() const; const TVectorD*GetMeanValues() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const Double_t*GetRow(Int_t row); const TVectorD*GetSigmas() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TVectorD*GetUserData() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidMakeCode(const char* filename = ""pca"", Option_t* option = """")MENU ; virtual voidMakeHistograms(const char* name = ""pca"", Option_t* option = ""epsdx"")MENU ; virtual voidMakeMethods(const char* classname = ""PCA"", Option_t* option = """")MENU ; virtual voidMakePrincipals()MENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPrincipal.html:7824,Inherit,InheritsFrom,7824,root/html532/TPrincipal.html,https://root.cern,https://root.cern/root/html532/TPrincipal.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const TMatrixD*GetCovarianceMatrix() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const TVectorD*GetEigenValues() const; const TMatrixD*GetEigenVectors() const; TList*GetHistograms() const; virtual const char*TObject::GetIconName() const; const TVectorD*GetMeanValues() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const Double_t*GetRow(Int_t row); const TVectorD*GetSigmas() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TVectorD*GetUserData() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidMakeCode(const char* filename = ""pca"", Option_t* option = """")MENU ; virtual voidMakeHistograms(const char* name = ""pca"", Option_t* option = ""epsdx"")MENU ; virtual voidMakeMethods(const char* classname = ""PCA"", Option_t* option = """")MENU ; virtual voidMakePrincipals()MENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPrincipal.html:7760,Inherit,InheritsFrom,7760,root/html602/TPrincipal.html,https://root.cern,https://root.cern/root/html602/TPrincipal.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidRooAbsDataStore::forceCacheUpdate(); virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Stat_tGetEntries() const; Int_tGetEntry(Int_t entry = 0, Int_t getall = 0); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tRooAbsDataStore::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; voidloadValues(const TTree* t, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); virtual Int_tnumEntries() const; voidTObject::O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooTreeDataStore.html:4940,Inherit,InheritsFrom,4940,root/html534/RooTreeDataStore.html,https://root.cern,https://root.cern/root/html534/RooTreeDataStore.html,3,['Inherit'],['InheritsFrom']
Modifiability,"::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; TGeoManager * fGeoManager {nullptr};  ; Int_t fTopVisible {-1};  ! is s ;  ; std::shared_ptr< RGeomViewer > fViewer;  . Additional Inherited Members;  Public Types inherited from TVirtualGeoPainter; enum  EGeoBombOption { kGeoNoBomb = 0; , kGeoBombXYZ = 1; , kGeoBombCyl = 2; , kGeoBombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TVirtualGeoPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualGeoPainter * GeoPainter ();  Static function returning a pointer to the geometry painter. ;  ; static void SetPainter (const TVirtualGeoPainter *painter);  Static function to set an alternative histogram painter. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:13425,inherit,inherited,13425,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,2,['inherit'],['inherited']
Modifiability,"::Functor::ImplBase, ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction, ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction, ROOT::Math::IParametricFunctionMultiDim::BaseFunc, ROOT::Math::MinimTransformFunction::BaseFunc, ROOT::Math::IParametricGradFunctionMultiDim::BaseFunc, ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::BaseFunction, ROOT::Math::IBaseFunctionMultiDim::BaseFunc, ROOT::Math::GradFunctor::ImplBase, ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction, ROOT::Math::IGradientFunctionMultiDim::BaseFunc, ROOT::Fit::Fitter::BaseFunc, ROOT::Math::WrappedMultiTF1::BaseFunc, ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::BaseFunction. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IBaseFunctionMultiDim(); virtual ROOT::Math::IBaseFunctionMultiDim*Clone() const; virtual unsigned intNDim() const; doubleoperator()(const double* x) const; ROOT::Math::IBaseFunctionMultiDim&operator=(const ROOT::Math::IBaseFunctionMultiDim&). private:. virtual doubleDoEval(const double* x) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IBaseFunctionMultiDim(). virtual destructor. {}. IBaseFunctionMultiDim * Clone() const. Clone a function.; Each derived class must implement his version of the Clone method. unsigned int NDim() const. Retrieve the dimension of the function. double operator()(const double* x) const. Evaluate the function at a point x[].; Use the pure virtual private method DoEval which must be implemented by the sub-classes. return DoEval(x). » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__IBaseFunctionMultiDim.html:2526,Inherit,Inheritance,2526,root/html534/ROOT__Math__IBaseFunctionMultiDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__IBaseFunctionMultiDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::GetBrowser(); virtual TObject*TContextMenu::GetCalledObject(); virtual TContextMenuImp*TContextMenu::GetContextMenuImp(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TVirtualPad*TContextMenu::GetSelectedCanvas(); virtual TClassMenuItem*TContextMenu::GetSelectedMenuItem(); virtual TFunction*TContextMenu::GetSelectedMethod(); virtual TObject*TContextMenu::GetSelectedObject(); virtual TVirtualPad*TContextMenu::GetSelectedPad(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveContextMenu.html:3706,Inherit,InheritsFrom,3706,root/html534/TEveContextMenu.html,https://root.cern,https://root.cern/root/html534/TEveContextMenu.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetBrowser(); virtual TObject*TContextMenu::GetCalledObject(); virtual TContextMenuImp*TContextMenu::GetContextMenuImp(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TVirtualPad*TContextMenu::GetSelectedCanvas(); virtual TClassMenuItem*TContextMenu::GetSelectedMenuItem(); virtual TFunction*TContextMenu::GetSelectedMethod(); virtual TObject*TContextMenu::GetSelectedObject(); virtual TVirtualPad*TContextMenu::GetSelectedPad(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveContextMenu.html:3638,Inherit,InheritsFrom,3638,root/html602/TEveContextMenu.html,https://root.cern,https://root.cern/root/html602/TEveContextMenu.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetDecompressedSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tTArchiveMember::GetFilePosition() const; void*GetGlobal() const; UInt_tGetGlobalLen() const; virtual const char*TObject::GetIconName() const; UInt_tGetLevel() const; void*GetLocal() const; UInt_tGetLocalLen() const; UInt_tGetMethod() const; TDatimeTArchiveMember::GetModTime() const; virtual const char*TArchiveMember::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTArchiveMember::GetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTArchiveMember::IsDirectory() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TZIPMember.html:5071,Inherit,InheritsFrom,5071,root/html532/TZIPMember.html,https://root.cern,https://root.cern/root/html532/TZIPMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetDecompressedSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tTArchiveMember::GetFilePosition() const; void*GetGlobal() const; UInt_tGetGlobalLen() const; virtual const char*TObject::GetIconName() const; UInt_tGetLevel() const; void*GetLocal() const; UInt_tGetLocalLen() const; UInt_tGetMethod() const; TDatimeTArchiveMember::GetModTime() const; virtual const char*TArchiveMember::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTArchiveMember::GetPosition() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTArchiveMember::IsDirectory() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TZIPMemb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TZIPMember.html:5013,Inherit,InheritsFrom,5013,root/html602/TZIPMember.html,https://root.cern,https://root.cern/root/html602/TZIPMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressGetInetAddress() const; TTimeStampGetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tGetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tGetPort() const; Int_tGetRemoteProtocol() const; TSecContext*GetSecContext() const; const char*GetService() const; Int_tGetServType() const; static ULong64_tGetSocketBytesRecv(); static ULong64_tGetSocketBytesSent(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidNetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUDPSocket.html:3476,Inherit,InheritsFrom,3476,root/html532/TUDPSocket.html,https://root.cern,https://root.cern/root/html532/TUDPSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressGetInetAddress() const; TTimeStampGetLastUsage(); virtual TInetAddressGetLocalInetAddress(); virtual Int_tGetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tGetOption(ESockOptions opt, Int_t& val); Int_tGetPort() const; Int_tGetRemoteProtocol() const; TSecContext*GetSecContext() const; const char*GetService() const; Int_tGetServType() const; static ULong64_tGetSocketBytesRecv(); static ULong64_tGetSocketBytesSent(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidNetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUDPSocket.html:3157,Inherit,InheritsFrom,3157,root/html602/TUDPSocket.html,https://root.cern,https://root.cern/root/html602/TUDPSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); TObject*GetEntryList() const; TFileInfo*GetFileInfo(const char* type = ""TTree""); const char*GetFileName() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; TList*GetListOfAssocObjs() const; virtual TList*GetListOfFriends() const; const char*GetMsd() const; virtual const char*TNamed::GetName() const; Long64_tGetNum() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; Long64_tGetTDSetOffset() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValid() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInvalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; Int_tLookup(Bool_t force = kFALSE); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMergeElement(TDSetElement* elem); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDSetElement.html:4005,Inherit,InheritsFrom,4005,root/html532/TDSetElement.html,https://root.cern,https://root.cern/root/html532/TDSetElement.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLwb() const; double*GetMatrixArray(); const double*GetMatrixArray() const; virtual const char*TObject::GetName() const; Int_tGetNoElements() const; Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TVectorT<double>GetSub(Int_t row_lwb, Int_t row_upb, Option_t* option = ""S"") const; TVectorT<double>&GetSub(Int_t row_lwb, Int_t row_upb, TVectorT<double>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetUpb() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInvalidate(); TVectorT<double>&Invert(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOwner() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidMakeValid(); Bool_tMatchesNonZeroPattern(const TVectorT<double>& select); doubleMax() const; voidTObject::MayNotUse(const char* method) const; doubleMin() const; Int_tNonZeros() const; doubleNorm1() const; doubleNorm2Sqr() const; doubleNormInf() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVectorT_double_.html:4246,Inherit,InheritsFrom,4246,root/html532/TVectorT_double_.html,https://root.cern,https://root.cern/root/html532/TVectorT_double_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLwb() const; double*GetMatrixArray(); const double*GetMatrixArray() const; virtual const char*TObject::GetName() const; Int_tGetNoElements() const; Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TVectorT<double>GetSub(Int_t row_lwb, Int_t row_upb, Option_t* option = ""S"") const; TVectorT<double>&GetSub(Int_t row_lwb, Int_t row_upb, TVectorT<double>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetUpb() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidInvalidate(); TVectorT<double>&Invert(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOwner() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidMakeValid(); Bool_tMatchesNonZeroPattern(const TVectorT<double>& select); doubleMax() const; voidTObject::MayNotUse(const char* method) const; doubleMin() const; Int_tNonZeros() const; doubleNorm1() const; doubleNorm2Sqr() const; doubleNormInf() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVectorT_double_.html:3716,Inherit,InheritsFrom,3716,root/html602/TVectorT_double_.html,https://root.cern,https://root.cern/root/html602/TVectorT_double_.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual TEnum*GetObject(const char*) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTListOfEnums::IsLoaded() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*LastLink() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection::Merge(TCollection",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfEnumsWithLock.html:4207,Inherit,InheritsFrom,4207,root/html602/TListOfEnumsWithLock.html,https://root.cern,https://root.cern/root/html602/TListOfEnumsWithLock.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfNodes() const; virtual TRotMatrix*GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*GetNode(const char* name) const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const Option_t*GetOption() const; virtual TNode*GetParent() const; TShape*GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetVisibility() const; virtual Double_tGetX() const; virtual Double_tGetY() const; virtual Double_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImportShapeAttributes(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidLocal2Master(const Double_t* local, Double_t* master); virtual voidLocal2Master(const Float_t* local, Float_t* master); virtual voidls(Option_t* option = ""2"") constMENU ; virtual voidMaster2Local(const Double_t* master, Double_t* local); virtual voidMaster2Local(const Float_t* master, Float_t* local); voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNode.html:3397,Inherit,InheritsFrom,3397,root/html602/TNode.html,https://root.cern,https://root.cern/root/html602/TNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetFoamName() const; virtual const char*TObject::GetIconName() const; UInt_tTMVA::PDEFoam::GetMaxDepth() const; UInt_tTMVA::PDEFoam::GetNActiveCells() const; virtual const char*TObject::GetName() const; UInt_tTMVA::PDEFoam::GetNCells() const; UInt_tTMVA::PDEFoam::GetNInActiveCells() const; UInt_tTMVA::PDEFoam::GetNmin(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMVA::PDEFoamCell*TMVA::PDEFoam::GetRootCell() const; virtual const char*TObject::GetTitle() const; Int_tTMVA::PDEFoam::GetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; TObjString*TMVA::PDEFoam::GetVariableName(Int_t idx); Double_tTMVA::PDEFoam::GetXmax(Int_t idim) const; Double_tTMVA::PDEFoam::GetXmin(Int_t idim) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidTMVA::PDEFoam::Initialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::PDEFoam::Log() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDEFoamDecisionTree.html:4235,Inherit,InheritsFrom,4235,root/html532/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html532/TMVA__PDEFoamDecisionTree.html,10,['Inherit'],['InheritsFrom']
Modifiability,"::GetFoamName() const; virtual const char*TObject::GetIconName() const; UInt_tTMVA::PDEFoam::GetMaxDepth() const; UInt_tTMVA::PDEFoam::GetNActiveCells() const; virtual const char*TObject::GetName() const; UInt_tTMVA::PDEFoam::GetNCells() const; UInt_tTMVA::PDEFoam::GetNInActiveCells() const; UInt_tTMVA::PDEFoam::GetNmin(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMVA::PDEFoamCell*TMVA::PDEFoam::GetRootCell() const; virtual const char*TObject::GetTitle() const; Int_tTMVA::PDEFoam::GetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; TObjString*TMVA::PDEFoam::GetVariableName(Int_t idx); Double_tTMVA::PDEFoam::GetXmax(Int_t idim) const; Double_tTMVA::PDEFoam::GetXmin(Int_t idim) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidTMVA::PDEFoam::Initialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::PDEFoam::Log() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamDecisionTree.html:4237,Inherit,InheritsFrom,4237,root/html602/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamDecisionTree.html,10,['Inherit'],['InheritsFrom']
Modifiability,"::GetInetAddress() const; TTimeStampTSocket::GetLastUsage(); virtual TInetAddressTSocket::GetLocalInetAddress(); virtual Int_tTSocket::GetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTSocket::GetServType() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSSLSocket.html:3960,Inherit,InheritsFrom,3960,root/html532/TSSLSocket.html,https://root.cern,https://root.cern/root/html532/TSSLSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetInetAddress() const; TTimeStampTSocket::GetLastUsage(); virtual TInetAddressTSocket::GetLocalInetAddress(); virtual Int_tTSocket::GetLocalPort(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tTSocket::GetServType() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSSLSocket.html:3556,Inherit,InheritsFrom,3556,root/html602/TSSLSocket.html,https://root.cern,https://root.cern/root/html602/TSSLSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TObject::GetName() const; virtual TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLegendEntry.html:3321,Inherit,InheritsFrom,3321,root/html532/TLegendEntry.html,https://root.cern,https://root.cern/root/html532/TLegendEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TObject::GetName() const; virtual TObject*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLegendEntry.html:3181,Inherit,InheritsFrom,3181,root/html602/TLegendEntry.html,https://root.cern,https://root.cern/root/html602/TLegendEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetList() const; virtual TList*GetListOfPositions(); TList*GetListOfShapes() const; virtual Int_tTDataSet::GetListSize() const; virtual voidGetLocalRange(Float_t* min, Float_t* max); static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TObjectSet::GetObject() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const Option_t*GetOption() const; virtual TDataSet*TDataSet::GetParent() const; TShape*GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual TVolume::ENodeSEENGetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tTObjectSet::HasData() const; virtual ULong_tHash() const; virtual voidImportShapeAttributes(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TObjectSet::Instance() const; static TObjectSet*TObjectSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual Bool_tIs3D() const; virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDataSet::IsFolder() const; virtual Bool_tIsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObjectSet::IsOwner() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; static Int_tMapGEANT2StNodeVis(Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVolume.html:5068,Inherit,InheritsFrom,5068,root/html602/TVolume.html,https://root.cern,https://root.cern/root/html602/TVolume.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); virtual char*GetPrompt(); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidHandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tHandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRint.html:5899,Inherit,InheritsFrom,5899,root/html532/TRint.html,https://root.cern,https://root.cern/root/html532/TRint.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTApplication::GetOptions(Int_t* argc, char** argv); virtual char*GetPrompt(); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidHandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tHandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidInterrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRint.html:5804,Inherit,InheritsFrom,5804,root/html602/TRint.html,https://root.cern,https://root.cern/root/html602/TRint.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetMethodTypeFromFile ; (; const TString & ; filename). private . read the method type from the file ; Definition at line 337 of file Reader.cxx. ◆ GetMVAError(). Double_t TMVA::Reader::GetMVAError ; (; ); const. inline . Definition at line 94 of file Reader.h. ◆ GetMVAErrorLower(). Double_t TMVA::Reader::GetMVAErrorLower ; (; ); const. inline . Definition at line 95 of file Reader.h. ◆ GetMVAErrorUpper(). Double_t TMVA::Reader::GetMVAErrorUpper ; (; ); const. inline . Definition at line 96 of file Reader.h. ◆ GetName(). virtual const char * TMVA::Reader::GetName ; (; ); const. inlinevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 113 of file Reader.h. ◆ GetProba(). Double_t TMVA::Reader::GetProba ; (; const TString & ; methodTag, . Double_t ; ap_sig = 0.5, . Double_t ; mvaVal = -9999999 . ). evaluates probability of MVA for given set of input variables ; Definition at line 706 of file Reader.cxx. ◆ GetRarity(). Double_t TMVA::Reader::GetRarity ; (; const TString & ; methodTag, . Double_t ; mvaVal = -9999999 . ). evaluates the MVA's rarity ; Definition at line 737 of file Reader.cxx. ◆ Init(). void TMVA::Reader::Init ; (; void ; ). private . default initialisation (no member variables) ; Definition at line 292 of file Reader.cxx. ◆ IsA(). virtual TClass * TMVA::Reader::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::Configurable.; Definition at line 164 of file Reader.h. ◆ Log(). MsgLogger & TMVA::Reader::Log ; (; ); const. inlineprivate . Definition at line 162 of file Reader.h. ◆ SetVerbose(). void TMVA::Reader::SetVerbose ; (; Bool_t ; v). inline . Definition at line 115 of file Reader.h. ◆ Streamer(). virtual void TMVA::Reader::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::Configurable. ◆ StreamerNVirtual(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:28929,variab,variables,28929,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['variab'],['variables']
Modifiability,"::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event*const, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html:3190,Variab,VariableTransformBase,3190,root/html602/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html,6,['Variab'],['VariableTransformBase']
Modifiability,"::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; static voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGApplication.html:5976,Inherit,InheritsFrom,5976,root/html532/TGApplication.html,https://root.cern,https://root.cern/root/html532/TGApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetOptions(Int_t* argc, char** argv); TSignalHandler*TApplication::GetSignalHandler() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTApplication::HandleException(Int_t sig); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTApplication::IsCmdThread(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; static voidTApplication::NeedGraphicsLibs(); Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGApplication.html:5869,Inherit,InheritsFrom,5869,root/html602/TGApplication.html,https://root.cern,https://root.cern/root/html602/TGApplication.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Int_t*GetRowIndexArray() const; virtual Int_t*GetRowIndexArray(); Int_tTMatrixTBase<float>::GetRowLwb() const; Int_tTMatrixTBase<float>::GetRowUpb() const; TMatrixTSparse<float>GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t* option = ""S"") const; virtual TMatrixTBase<float>&GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase<float>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; floatTMatrixTBase<float>::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual TMatrixTBase<float>&InsertRow(Int_t row, Int_t col, const float* v, Int_t n = -1); virtual voidTObject::Inspect() constMENU ; voidTMatrixTBase<float>::Invalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTMatrixTBase<float>::IsOwner() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsSymmetric() const; Bool_tTMatrixTBase<float>::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTMatrixTBase<float>::MakeValid(); virtual floatTMatrixTBase<float>::Max() const; voidTObject::MayNotUse(const char* method) const; virtual floatTMatrixTBase<float>::Min() const; voidMult(const TMatrixTSparse<float>& a, const TMatrixTSparse<float>& b); static float&TMatrixTBase<float>::NaNValue(); virtual Int_tNonZeros() const; floatTMatrixTBas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMatrixTSparse_float_.html:6243,Inherit,InheritsFrom,6243,root/html604/TMatrixTSparse_float_.html,https://root.cern,https://root.cern/root/html604/TMatrixTSparse_float_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Int_t*GetRowIndexArray() const; virtual Int_t*GetRowIndexArray(); Int_tTMatrixTBase<float>::GetRowLwb() const; Int_tTMatrixTBase<float>::GetRowUpb() const; TMatrixTSparse<float>GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t* option = ""S"") const; virtual TMatrixTBase<float>&GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase<float>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; floatTMatrixTBase<float>::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual TMatrixTBase<float>&InsertRow(Int_t row, Int_t col, const float* v, Int_t n = -1); virtual voidTObject::Inspect() constMENU ; voidTMatrixTBase<float>::Invalidate(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTMatrixTBase<float>::IsOwner() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tIsSymmetric() const; Bool_tTMatrixTBase<float>::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTMatrixTBase<float>::MakeValid(); virtual floatTMatrixTBase<float>::Max() const; voidTObject::MayNotUse(const char* method) const; virtual floatTMatrixTBase<float>::Min() const; voidMult(const TMatrixTSparse<float>& a, const TMatrixTSparse<float>& b); virtual Int_tNonZeros() const; floatTMatrixTBase<float>::Norm1() const; virtual TMatrixTBase<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTSparse_float_.html:7244,Inherit,InheritsFrom,7244,root/html532/TMatrixTSparse_float_.html,https://root.cern,https://root.cern/root/html532/TMatrixTSparse_float_.html,3,['Inherit'],['InheritsFrom']
Modifiability,"::GetObjectCount(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObjArray*TProcessID::GetObjects() const; static Bool_tTObject::GetObjectStat(); TObject*TProcessID::GetObjectWithID(UInt_t uid); virtual Option_t*TObject::GetOption() const; static TProcessID*TProcessID::GetPID(); static TObjArray*TProcessID::GetPIDs(); static TProcessID*TProcessID::GetProcessID(UShort_t pid); static TProcessID*TProcessID::GetProcessWithUID(const TObject* obj); static TProcessID*TProcessID::GetProcessWithUID(UInt_t uid, const void* obj); static TProcessID*TProcessID::GetSessionProcessID(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TList*GetUUIDs() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Int_tTProcessID::IncrementCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; static Bool_tTProcessID::IsValid(TProcessID* pid); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProcessUUID.html:4514,Inherit,InheritsFrom,4514,root/html532/TProcessUUID.html,https://root.cern,https://root.cern/root/html532/TProcessUUID.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetObjectCount(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; TObjArray*TProcessID::GetObjects() const; static Bool_tTObject::GetObjectStat(); TObject*TProcessID::GetObjectWithID(UInt_t uid); virtual Option_t*TObject::GetOption() const; static TProcessID*TProcessID::GetPID(); static TObjArray*TProcessID::GetPIDs(); static TProcessID*TProcessID::GetProcessID(UShort_t pid); static TProcessID*TProcessID::GetProcessWithUID(const TObject* obj); static TProcessID*TProcessID::GetProcessWithUID(UInt_t uid, const void* obj); static TProcessID*TProcessID::GetSessionProcessID(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TList*GetUUIDs() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Int_tTProcessID::IncrementCount(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; static Bool_tTProcessID::IsValid(TProcessID* pid); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProcessUUID.html:4498,Inherit,InheritsFrom,4498,root/html602/TProcessUUID.html,https://root.cern,https://root.cern/root/html602/TProcessUUID.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidTText::GetTextAdvance(UInt_t& a, const char* text, const Bool_t kern = kTRUE) const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidTText::GetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidTText::GetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTText::GetX() const; Double_tGetXsize(); Double_tTText::GetY() const; Double_tGetYsize(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTText::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLatex.html:22768,Inherit,InheritsFrom,22768,root/html532/TLatex.html,https://root.cern,https://root.cern/root/html532/TLatex.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetPixel() const; Double_tGetR1() const; Double_tGetR2() const; Double_tGetRadius() const; Float_tTColor::GetRed() const; virtual voidTColor::GetRGB(Float_t& r, Float_t& g, Float_t& b) const; Float_tTColor::GetSaturation() const; const TColorGradient::Point&GetStart() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTColor::HLS2RGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HLS2RGB(Int_t h, Int_t l, Int_t s, Int_t& r, Int_t& g, Int_t& b); static voidTColor::HLStoRGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HSV2RGB(Float_t h, Float_t s, Float_t v, Float_t& r, Float_t& g, Float_t& b); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidTColor::InitializeColors(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTColor::IsGrayscale(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTColor::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static ULong_tTColor::Number2Pixel(Int_t ci); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRadialGradient.html:5508,Inherit,InheritsFrom,5508,root/html534/TRadialGradient.html,https://root.cern,https://root.cern/root/html534/TRadialGradient.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetPixel() const; Double_tGetR1() const; Double_tGetR2() const; Double_tGetRadius() const; Float_tTColor::GetRed() const; virtual voidTColor::GetRGB(Float_t& r, Float_t& g, Float_t& b) const; Float_tTColor::GetSaturation() const; const TColorGradient::Point&GetStart() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTColor::HLS2RGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HLS2RGB(Int_t h, Int_t l, Int_t s, Int_t& r, Int_t& g, Int_t& b); static voidTColor::HLStoRGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HSV2RGB(Float_t h, Float_t s, Float_t v, Float_t& r, Float_t& g, Float_t& b); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidTColor::InitializeColors(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTColor::IsGrayscale(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTColor::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static ULong_tTColor::Number2Pixel(Int_t ci); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRadialGradient.html:5156,Inherit,InheritsFrom,5156,root/html602/TRadialGradient.html,https://root.cern,https://root.cern/root/html602/TRadialGradient.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetRMSError(Int_t axis = 1) const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidHoneycomb(Double_t xstart, Double_t ystart, Double_t a, Int_t k, Int_t s); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t, Int_t, Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Option_t*) const; virtual Double_tIntegral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t*) const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2Poly.html:15628,Inherit,InheritsFrom,15628,root/html532/TH2Poly.html,https://root.cern,https://root.cern/root/html532/TH2Poly.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::KolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1C.html:9736,Inherit,InheritsFrom,9736,root/html532/TH1C.html,https://root.cern,https://root.cern/root/html532/TH1C.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::KolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1D.html:9775,Inherit,InheritsFrom,9775,root/html532/TH1D.html,https://root.cern,https://root.cern/root/html532/TH1D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::KolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1F.html:9768,Inherit,InheritsFrom,9768,root/html532/TH1F.html,https://root.cern,https://root.cern/root/html532/TH1F.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::KolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1I.html:9737,Inherit,InheritsFrom,9737,root/html532/TH1I.html,https://root.cern,https://root.cern/root/html532/TH1I.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH1::GetStats(Double_t* stats) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH1::Integral(Option_t* option = """") const; virtual Double_tTH1::Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tTH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tTH1::Interpolate(Double_t x); virtual Double_tTH1::Interpolate(Double_t x, Double_t y); virtual Double_tTH1::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tTH1::KolmogorovTest(const TH1* h2, Option_t* option = """") const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1S.html:9744,Inherit,InheritsFrom,9744,root/html532/TH1S.html,https://root.cern,https://root.cern/root/html532/TH1S.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2C.html:11056,Inherit,InheritsFrom,11056,root/html532/TH2C.html,https://root.cern,https://root.cern/root/html532/TH2C.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2D.html:11100,Inherit,InheritsFrom,11100,root/html532/TH2D.html,https://root.cern,https://root.cern/root/html532/TH2D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2F.html:11093,Inherit,InheritsFrom,11093,root/html532/TH2F.html,https://root.cern,https://root.cern/root/html532/TH2F.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2I.html:11064,Inherit,InheritsFrom,11064,root/html532/TH2I.html,https://root.cern,https://root.cern/root/html532/TH2I.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH2::GetStats(Double_t* stats) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH2::Integral(Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Option_t* option = """") const; virtual Double_tTH2::Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t* = """") const; virtual Double_tTH2::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Double_t& err, Option_t* option = """") const; virtual Double_tTH2::Interpolate(Double_t x); virtual Double_tTH2::Interpolate(Double_t x, Double_t y); virtual Double_tTH2::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2S.html:11071,Inherit,InheritsFrom,11071,root/html532/TH2S.html,https://root.cern,https://root.cern/root/html532/TH2S.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayC::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLTH3Composition.html:10932,Inherit,InheritsFrom,10932,root/html532/TGLTH3Composition.html,https://root.cern,https://root.cern/root/html532/TGLTH3Composition.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayD::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3D.html:11368,Inherit,InheritsFrom,11368,root/html532/TH3D.html,https://root.cern,https://root.cern/root/html532/TH3D.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayF::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3F.html:11361,Inherit,InheritsFrom,11361,root/html532/TH3F.html,https://root.cern,https://root.cern/root/html532/TH3F.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayI::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3I.html:11361,Inherit,InheritsFrom,11361,root/html532/TH3I.html,https://root.cern,https://root.cern/root/html532/TH3I.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSize() const; virtual Double_tTH1::GetSkewness(Int_t axis = 1) const; virtual voidTH3::GetStats(Double_t* stats) const; Stat_tTArrayS::GetSum() const; virtual Double_tTH1::GetSumOfWeights() const; virtual TArrayD*TH1::GetSumw2(); virtual const TArrayD*TH1::GetSumw2() const; virtual Int_tTH1::GetSumw2N() const; virtual Float_tTH1::GetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tTH1::GetTitleFont(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tTH1::GetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*TH1::GetXaxis() const; TAxis*TH1::GetYaxis() const; TAxis*TH1::GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tTH3::Integral(Option_t* option = """") const; virtual Double_tTH3::Integral(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Option_t* option = """") const; virtual Double_tTH3::IntegralAndError(Int_t binx1, Int_t binx2, Int_t biny1, Int_t biny2, Int_t binz1, Int_t binz2, Double_t& err, Option_t* option = """") const; virtual Double_tTH3::Interpolate(Double_t x); virtual Double_tTH3::Interpolate(Double_t x, Double_t y); virtual Double_tTH3::Interpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTH1::IsBinOverflow(Int_t bin) const; Bool_tTH1::IsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH3S.html:11368,Inherit,InheritsFrom,11368,root/html532/TH3S.html,https://root.cern,https://root.cern/root/html532/TH3S.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetSourceFileKind ; (; const char * ; filename); const. private . Check whether the file's extension is compatible with C or C++. ; Return whether source, header, Linkdef or nothing. ; Definition at line 102 of file TModuleGenerator.cxx. ◆ GetUmbrellaName(). const std::string & ROOT::TModuleGenerator::GetUmbrellaName ; (; ); const. inline . Definition at line 76 of file TModuleGenerator.h. ◆ IsPCH(). bool ROOT::TModuleGenerator::IsPCH ; (; ); const. inline . Definition at line 52 of file TModuleGenerator.h. ◆ ParseArgs(). void TModuleGenerator::ParseArgs ; (; const std::vector< std::string > & ; args). Parse -I -D -U headers.h SomethingLinkdef.h. ; Definition at line 180 of file TModuleGenerator.cxx. ◆ WriteContentHeader(). void TModuleGenerator::WriteContentHeader ; (; std::ostream & ; out); const. Write a header file describing the content of this module through a series of variables inside the namespace ROOT::Dict::[DictionaryName]. ; Each variable is an array of string literals, with a const char* of 0 being the last element, e.g. ROOT::Dict::_DictName::arrIncludes[] = { ""A.h"", ""B.h"", 0 }; ; Definition at line 543 of file TModuleGenerator.cxx. ◆ WriteDefinesArray(). std::ostream & ROOT::TModuleGenerator::WriteDefinesArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 133 of file TModuleGenerator.h. ◆ WriteHeaderArray(). std::ostream & ROOT::TModuleGenerator::WriteHeaderArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 125 of file TModuleGenerator.h. ◆ WriteIncludePathArray(). std::ostream & ROOT::TModuleGenerator::WriteIncludePathArray ; (; std::ostream & ; out); const. inlineprivate . Definition at line 129 of file TModuleGenerator.h. ◆ WritePPCode(). std::ostream & ROOT::TModuleGenerator::WritePPCode ; (; std::ostream & ; out); const. inlineprivate . Definition at line 117 of file TModuleGenerator.h. ◆ WritePPDefines(). std::ostream & TModuleGenerator::WritePPDefines ; (; std::ostream & ; out); const. Write #i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html:7905,variab,variable,7905,doc/v632/classROOT_1_1TModuleGenerator.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TModuleGenerator.html,2,['variab'],['variable']
Modifiability,"::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tGetTubeR() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveVectorGetVector(); TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveArrow.html:8932,Inherit,InheritsFrom,8932,root/html532/TEveArrow.html,https://root.cern,https://root.cern/root/html532/TEveArrow.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetSourceObject() const; virtual const char*TNamed::GetTitle() const; Float_tGetTubeR() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveVectorGetVector(); TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveArrow.html:8813,Inherit,InheritsFrom,8813,root/html602/TEveArrow.html,https://root.cern,https://root.cern/root/html602/TEveArrow.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetTitleFont() const; virtual Float_tTAttAxis::GetTitleOffset() const; virtual Float_tTAttAxis::GetTitleSize() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveProjectionAxes.html:9686,Inherit,InheritsFrom,9686,root/html532/TEveProjectionAxes.html,https://root.cern,https://root.cern/root/html532/TEveProjectionAxes.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetTitleFont() const; virtual Float_tTAttAxis::GetTitleOffset() const; virtual Float_tTAttAxis::GetTitleSize() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveProjectionAxes.html:9612,Inherit,InheritsFrom,9612,root/html602/TEveProjectionAxes.html,https://root.cern,https://root.cern/root/html602/TEveProjectionAxes.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; virtual Double_tRooAbsPdf::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsAnaConvPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDecay.html:19023,Inherit,InheritsFrom,19023,root/html532/RooDecay.html,https://root.cern,https://root.cern/root/html532/RooDecay.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; virtual Double_tRooAbsPdf::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDstD0BG.html:18297,Inherit,InheritsFrom,18297,root/html532/RooDstD0BG.html,https://root.cern,https://root.cern/root/html532/RooDstD0BG.html,24,['Inherit'],['InheritsFrom']
Modifiability,"::GetUniqueID() const; const Text_t*RooAbsReal::getUnit() const; virtual Double_tRooAbsPdf::getVal(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidinitGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsAnaConvPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNonCPEigenDecay.html:20128,Inherit,InheritsFrom,20128,root/html532/RooNonCPEigenDecay.html,https://root.cern,https://root.cern/root/html532/RooNonCPEigenDecay.html,1,['Inherit'],['InheritsFrom']
Modifiability,"::GlobalCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html:9718,Inherit,Inheritance,9718,root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::GlobalCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html:9718,Inherit,Inheritance,9718,root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); Bool_tHasAlias(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLVEntry::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tIsCut(); Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTVLVEntry.html:8673,Inherit,InheritsFrom,8673,root/html532/TTVLVEntry.html,https://root.cern,https://root.cern/root/html532/TTVLVEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); Bool_tHasAlias(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLVEntry::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tIsCut(); Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTVLVEntry.html:8661,Inherit,InheritsFrom,8661,root/html602/TTVLVEntry.html,https://root.cern,https://root.cern/root/html602/TTVLVEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::HandleEvent(Event_t* event); virtual Bool_tTGView::HandleExpose(Event_t* event); virtual Bool_tHandleFocusChange(Event_t* event); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tHandleSelection(Event_t* event); virtual Bool_tTGTextView::HandleSelectionClear(Event_t* event); virtual Bool_tTGTextView::HandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidHome(); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInsChar(char character); virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; virtual Bool_tIsCursorEnabledithoutFocus() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTGTextView::IsMarked() const; virtual Bool_tIsMenuEnabled() const; Bool_tTObject::IsOnHeap() const; Bool_tTGTextView::IsReadOnly() const; virtual Bool_tTGTex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextEdit.html:10541,Inherit,InheritsFrom,10541,root/html532/TGTextEdit.html,https://root.cern,https://root.cern/root/html532/TGTextEdit.html,4,['Inherit'],['InheritsFrom']
Modifiability,"::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGPopupMenu::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGPopupMenu::HideEntry(Int_t id); virtual voidTGPopupMenu::Highlighted(Int_t id)SIGNAL ; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGPopupMenu::IsEntryChecked(Int_t id); virtual Bool_tTGPopupMenu::IsEntryEnabled(Int_t id); virtual Bool_tTGPopupMenu::IsEntryHidden(Int_t id); virtual Bool_tTGPopupMenu::IsEntryRChecked(Int_t id); virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootContextMenu.html:10491,Inherit,InheritsFrom,10491,root/html532/TRootContextMenu.html,https://root.cern,https://root.cern/root/html532/TRootContextMenu.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGPopupMenu::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGPopupMenu::HideEntry(Int_t id); virtual voidTGPopupMenu::Highlighted(Int_t id)SIGNAL ; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGPopupMenu::IsEntryChecked(Int_t id); virtual Bool_tTGPopupMenu::IsEntryEnabled(Int_t id); virtual Bool_tTGPopupMenu::IsEntryHidden(Int_t id); virtual Bool_tTGPopupMenu::IsEntryRChecked(Int_t id); virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootContextMenu.html:10437,Inherit,InheritsFrom,10437,root/html602/TRootContextMenu.html,https://root.cern,https://root.cern/root/html602/TRootContextMenu.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::IBaseFunctionMultiDim>&); ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>(int dim, int npoint); virtual ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction*Clone() const; virtual const ROOT::Fit::BinData&Data() const; virtual doubleDataElement(const double* x, unsigned int i, double* g) const; virtual voidGradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(); ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(const ROOT::Math::IBaseFunctionMultiDim&); boolIsWeighted() const; virtual const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&ModelFunction() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::BinData& data, const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = true); virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeights(); voidUseSumOfWeightSquare(bool on = true).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:2630,extend,extended,2630,root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,2,['extend'],['extended']
Modifiability,"::IMultiGenFunction * chi2func) {; 837 // perform the minimization initializing the minimizer starting from a given obj function; 838 fFitType = objFunc->Type();; 839 fExtObjFunction = nullptr;; 840 fObjFunction = std::move(objFunc);; 841 if (!DoInitMinimizer()) return false;; 842 return DoMinimization(chi2func);; 843}; 844template<class ObjFunc_t>; 845bool Fitter::DoWeightMinimization(std::unique_ptr<ObjFunc_t> objFunc, const ROOT::Math::IMultiGenFunction * chi2func) {; 846 // perform the minimization initializing the minimizer starting from a given obj function; 847 // and apply afterwards the correction for weights. This applies only for logL fitting; 848 this->fFitType = objFunc->Type();; 849 fExtObjFunction = nullptr;; 850 // need to use a temporary shared pointer to the objective function since we cannot use the unique pointer when it has been moved; 851 std::shared_ptr<ObjFunc_t> sObjFunc{ std::move(objFunc)};; 852 fObjFunction = sObjFunc;; 853 if (!DoInitMinimizer()) return false;; 854 if (!DoMinimization(chi2func)) return false;; 855 sObjFunc->UseSumOfWeightSquare();; 856 return ApplyWeightCorrection(*sObjFunc);; 857}; 858 ; 859 ; 860void Fitter::DoUpdateFitConfig() {; 861 // update the fit configuration after a fit using the obtained result; 862 if (fResult->IsEmpty() || !fResult->IsValid() ) return;; 863 for (unsigned int i = 0; i < fConfig.NPar(); ++i) {; 864 ParameterSettings & par = fConfig.ParSettings(i);; 865 par.SetValue( fResult->Value(i) );; 866 if (fResult->Error(i) > 0) par.SetStepSize( fResult->Error(i) );; 867 }; 868}; 869 ; 870int Fitter::GetNCallsFromFCN() {; 871 // retrieve ncalls from the fit method functions; 872 // this function is called when minimizer does not provide a way of returning the number of function calls; 873 int ncalls = 0;; 874 if (!fUseGradient) {; 875 const ROOT::Math::FitMethodFunction * fcn = dynamic_cast<const ROOT::Math::FitMethodFunction *>(fObjFunction.get());; 876 if (fcn) ncalls = fcn->NCalls();; 877 }; 878 else ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:33531,config,configuration,33531,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,1,['config'],['configuration']
Modifiability,::InitArrays(Int_t newsize); voidTObject::MakeZombie(). private:. TEveSelectorToEventList(const TEveSelectorToEventList&); TEveSelectorToEventList&operator=(const TEveSelectorToEventList&). Data Members; public:. enum TSelectorDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTSelectorDraw::fAction! Action type; Bool_tTSelectorDraw::fCleanElisttrue if original Tree elist must be saved; Int_tTSelectorDraw::fDimensionDimension of the current expression; Long64_tTSelectorDraw::fDraw! Last entry loop number when object was drawn; TEventList*fEvList; Int_tTSelectorDraw::fForceReadForce Read flag; TListfInput; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TSelectorDraw::fManagerPointer to the formula manager; Int_tTSelectorDraw::fMultiplicityIndicator of the variability of the size of entries; Int_t*TSelectorDraw::fNbins![fDimension] Number of bins per dimension; Int_tTSelectorDraw::fNfill! Total number of histogram fills; Bool_tTSelectorDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); Long64_tTSelectorDraw::fOldEstimatevalue of Tree fEstimate when selector is called; TH1*TSelectorDraw::fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TSelectorDraw::fSelectPointer to selection formula; Bool_tTSelectorDraw::fSelectMultipletrue if selection has a variable index; Long64_tTSelectorDraw::fSelectedRowsNumber of selected entries; Long64_tTSelector,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSelectorToEventList.html:8546,variab,variability,8546,root/html528/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html528/TEveSelectorToEventList.html,2,['variab'],['variability']
Modifiability,"::IntegratorMultiDim&). Data Members; private:. ROOT::Math::VirtualIntegratorMultiDim*fIntegratorpointer to multi-dimensional integrator base class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; IntegratorMultiDim(ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Generic constructor of multi dimensional Integrator. By default uses the Adaptive integration method. @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. IntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon methods). SetFunction(const ROOT::Math::IMultiGenFunction& f). IntegratorMultiDim(const Function & f, unsigned int dim, IntegrationMultiDim::Type type = IntegrationMultiDim::kADAPTIVE, double absTol = 1.E-9, double relTol = 1E-6, unsigned int ncall = 100000); Template Constructor of multi dimensional Integrator passing a generic function. By default uses the adaptive integration method. @param f integration function (generic function implementin operator()(const double *); @param dim function dimension; @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__IntegratorMultiDim.html:2888,adapt,adaptive,2888,root/html526/ROOT__Math__IntegratorMultiDim.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__IntegratorMultiDim.html,1,['adapt'],['adaptive']
Modifiability,"::InvReLUstd::shared_ptr< std::function< double(double)> > InvReLUDefinition NeuralNet.cxx:17; TMVA::DNN::GaussComplementstd::shared_ptr< std::function< double(double)> > GaussComplementDefinition NeuralNet.cxx:13; TMVA::DNN::Gaussstd::shared_ptr< std::function< double(double)> > GaussDefinition NeuralNet.cxx:12; TMVA::DNN::MinimizerTypeMinimizerType< list all the minimizer typesDefinition NeuralNet.h:321; TMVA::DNN::Sigmoidstd::shared_ptr< std::function< double(double)> > SigmoidDefinition NeuralNet.cxx:26; TMVA::DNN::gaussDoubledouble gaussDouble(double mean, double sigma)Definition NeuralNet.cxx:35; TMVA::DNN::ModeOutputValuesModeOutputValuesDefinition NeuralNet.h:179; TMVA::DNN::ModeOutputValues::SOFTMAX@ SOFTMAX; TMVA::DNN::ModeOutputValues::DIRECT@ DIRECT; TMVA::DNN::ModeOutputValues::SIGMOID@ SIGMOID; TMVA::DNN::SoftSignstd::shared_ptr< std::function< double(double)> > SoftSignDefinition NeuralNet.cxx:32; TMVA::DNN::InvSoftPlusstd::shared_ptr< std::function< double(double)> > InvSoftPlusDefinition NeuralNet.cxx:19; TMVA::DNN::ReLUstd::shared_ptr< std::function< double(double)> > ReLUDefinition NeuralNet.cxx:25; TMVA::DNN::isFlagSetbool isFlagSet(T flag, T value)Definition NeuralNet.h:212; TMVA::DNN::randomIntint randomInt(int maxValue)Definition NeuralNet.cxx:52; TMVA::DNN::InvTanhShiftstd::shared_ptr< std::function< double(double)> > InvTanhShiftDefinition NeuralNet.cxx:23; TMVA::DNN::DropContainerstd::vector< char > DropContainerDefinition NeuralNet.h:227; TMVA::DNN::InvSymmReLUstd::shared_ptr< std::function< double(double)> > InvSymmReLUDefinition NeuralNet.cxx:21; TMVA::DNN::InvLinearstd::shared_ptr< std::function< double(double)> > InvLinearDefinition NeuralNet.cxx:16; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; sumstatic uint64_t sum(uint64_t i)Definition Factory.cxx:2345; outputstatic void output(). tmvatmvasrcNeuralNet.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8cxx_source.html:32209,variab,variable,32209,doc/master/NeuralNet_8cxx_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8cxx_source.html,1,['variab'],['variable']
Modifiability,::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; TMVA::MinuitWrapper*fMinWrapholds a wrapper around TMinuit; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Bool_tfBatchbatch mode; Int_tfErrorLevelminuit error level; Int_tfFitStrategyminuit strategy level; Int_tfMaxCalls(approximate) maximum number of function calls; Int_tfPrintLevelminuit printout level; Bool_tfPrintWarningsminuit warnings level; Double_tfTolerancetolerance to the function value at the minimum; Bool_tfUseImproveflag for 'IMPROVE' use; Bool_tfUseMinosflag for 'MINOS' use. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~MinuitFitter(); destructor. void DeclareOptions(); declare SA options. void Init(); minuit-specific settings. Double_t Run(vector<Double_t>& pars); performs the fit. Double_t EstimatorFunction(vector<Double_t>& pars); performs the fit by calliung Run(pars). » Author: Andreas Hoecker » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MinuitFitter.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MinuitFitter.html:7592,Inherit,Inheritance,7592,root/html532/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__MinuitFitter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,::MCFitter::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 65 of file MCFitter.h. ◆ DeclareOptions(). void TMVA::MCFitter::DeclareOptions ; (; ). privatevirtual . Declare MCFitter options. ; Implements TMVA::FitterBase.; Definition at line 67 of file MCFitter.cxx. ◆ DeclFileName(). static const char * TMVA::MCFitter::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 65 of file MCFitter.h. ◆ IsA(). virtual TClass * TMVA::MCFitter::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::FitterBase.; Definition at line 65 of file MCFitter.h. ◆ Run(). Double_t TMVA::MCFitter::Run ; (; std::vector< Double_t > & ; pars). virtual . Execute fitting. ; Implements TMVA::FitterBase.; Definition at line 86 of file MCFitter.cxx. ◆ SetParameters(). void TMVA::MCFitter::SetParameters ; (; Int_t ; cycles). set MC fitter configuration parameters ; Definition at line 78 of file MCFitter.cxx. ◆ Streamer(). virtual void TMVA::MCFitter::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::FitterBase. ◆ StreamerNVirtual(). void TMVA::MCFitter::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 65 of file MCFitter.h. Member Data Documentation. ◆ fSamples. Int_t TMVA::MCFitter::fSamples. private . number of MC samples ; Definition at line 61 of file MCFitter.h. ◆ fSeed. UInt_t TMVA::MCFitter::fSeed. private . Seed for the random generator (0 takes random seeds) ; Definition at line 63 of file MCFitter.h. ◆ fSigma. Double_t TMVA::MCFitter::fSigma. private . new samples are generated randomly with a gaussian probability with fSigma around the current best value ; Definition at line 62 of file MCFitter.h. Libraries for TMVA::MCFitter:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MCFitter.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MCFitter.html:17412,config,configuration,17412,doc/master/classTMVA_1_1MCFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MCFitter.html,1,['config'],['configuration']
Modifiability,"::MakeZombie(). Data Members; public:. enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TTree*fChain! pointer to the analyzed TTree or TChain; TTreeFormula*fSelectPointer to selection formula; Bool_tfSelectMultipletrue if selection has a variable index; Long64_tfSelectedRowsNumber of selected entries. protected:. TSelector::EAbortTSelector::fAbortabort status; TList*TSelector::fInputlist of objects available during processing; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; Long64_tTSelector::fStatusselector status. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSelectorEntries(TTree* tree = 0, const char* selection = 0). TSelectorEntries(const char* selection). virtual ~TSelectorEntries(). Int_t Version() const; { return 2; }. void Begin(TTree* tree). void SlaveBegin(TTree* tree). void Init(TTree* tree). Bool_t Notify(). Bool_t Process(Long64_t entry). Int_t GetEntry(Long64_t entry, Int_t getall = 0). Long64_t GetSelectedRows() const; { return fSelectedRows; }. void SetOption(const char* option); { fOption = option; }. void SetObject(TObject* obj); { fObject = obj; }. void SetSelection(const char* selection). TList * GetOutputList() const; { return fOutput; }. void SlaveTerminate(). void Terminate(). » Author: Philippe Canal 09/06/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/treeplayer:$Id: TSelectorEntries.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelectorEntries.html:7249,Inherit,Inheritance,7249,root/html532/TSelectorEntries.html,https://root.cern,https://root.cern/root/html532/TSelectorEntries.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::MakeZombie(). private:. voidConvexCheck(); Bool_tIsRightSided(Double_t* point, Int_t ind1, Int_t ind2) const; Bool_tIsSegConvex(Int_t i1, Int_t i2 = -1) const; voidOutscribedConvex(). Data Members; public:. enum { kGeoConvex; kGeoFinishPolygon; kGeoACW; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArray*fDaughterslist of concave daughters; Int_t*fInd[fNvert] list of vertex indices; Int_t*fIndc[fNconvex] indices of vertices of the outscribed convex polygon; Int_tfNconvexnumber of points of the outscribed convex polygon ; Int_tfNvertnumber of vertices (must be defined clockwise in XY plane); Double_t*fX! pointer to list of current X coordinates of vertices; Double_t*fY! pointer to list of current Y coordinates of vertices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPolygon(); Dummy constructor. TGeoPolygon(Int_t nvert); Default constructor. ~TGeoPolygon(); Destructor. Double_t Area() const; Computes area of the polygon in [length^2]. Bool_t Contains(Double_t* point) const; Check if a point given by X = point[0], Y = point[1] is inside the polygon. void ConvexCheck(); Check polygon convexity. void FinishPolygon(); Decompose polygon in a convex outscribed part and a list of daughter; polygons that have to be substracted to get the actual one. Bool_t IsRightSided(Double_t* point, Int_t ind1, Int_t ind2) const; Check if POINT is right-sided with respect to the segment defined by IND1 and IND2. Bool_t IsSegConvex(Int_t i1, Int_t i2 = -1) const; Check if a segment [0..fNvert-1] belongs to the outscribed convex pgon. Bool_t IsIllegalCheck() const; Check for illegal crossings between non-consecutive segments. void OutscribedConvex(); Compute indices for the outscribed convex polygon. Double_t Safety(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPolygon.html:7595,Inherit,Inheritance,7595,root/html532/TGeoPolygon.html,https://root.cern,https://root.cern/root/html532/TGeoPolygon.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::MakeZombie(); voidReadLeaves0Impl(TBuffer& b); voidReadLeaves1Impl(TBuffer& b); voidReadLeaves2Impl(TBuffer& b); voidReadLeavesImpl(TBuffer& b); voidSetSkipZip(Bool_t skip = kTRUE); Int_tWriteBasket(TBasket* basket, Int_t where). private:. TBranch(const TBranch&); Int_tFillEntryBuffer(TBasket* basket, TBuffer* buf, Int_t& lnew); TBranch&operator=(const TBranch&). Data Members; public:. enum EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*fAddress! Address of 1st leaf (variable or object); Int_t*fBasketBytes[fMaxBaskets] Lenght of baskets on file; Long64_t*fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tfBasketSizeInitial Size of Basket Buffer; TObjArrayfBaskets-> List of baskets of this branch; TObjArrayfBranches-> List of Branches of this branch; TList*fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tfCompressCompression level and algorithm; TBasket*fCurrentBasket! Pointer to the current basket.; TDirectory*fDirectory! Pointer to directory where this branch buffers are stored; Long64_tfEntriesNumber of entries; TBuffer*fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tfEntryNumberCurrent entry number (last one filled in this branch); Int_tfEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringfFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; G__p2memfuncfFillLeaves! Pointer to the FillLeaves implementation to use. ; Style_tTAttFill::fFillStylefill area style; Long64_tfFirstBasketEntry! First entry in the current basket.; Long64_tfFirstEntryNumber of the firs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranch.html:10010,variab,variable,10010,root/html532/TBranch.html,https://root.cern,https://root.cern/root/html532/TBranch.html,2,['variab'],['variable']
Modifiability,"::MakeZombie(); voidReadLeaves0Impl(TBuffer& b); voidReadLeaves1Impl(TBuffer& b); voidReadLeaves2Impl(TBuffer& b); voidReadLeavesImpl(TBuffer& b); voidSetSkipZip(Bool_t skip = kTRUE); Int_tWriteBasket(TBasket* basket, Int_t where). private:. TBranch(const TBranch&); Int_tFillEntryBuffer(TBasket* basket, TBuffer* buf, Int_t& lnew); TBranch&operator=(const TBranch&). Data Members; public:. enum EStatusBits { kAutoDelete; kDoNotUseBufferMap; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*fAddress! Address of 1st leaf (variable or object); Int_t*fBasketBytes[fMaxBaskets] Length of baskets on file; Long64_t*fBasketEntry[fMaxBaskets] Table of first entry in eack basket; Long64_t*fBasketSeek[fMaxBaskets] Addresses of baskets on file; Int_tfBasketSizeInitial Size of Basket Buffer; TObjArrayfBaskets-> List of baskets of this branch; TObjArrayfBranches-> List of Branches of this branch; TList*fBrowsables! List of TVirtualBranchBrowsables used for Browse(); Int_tfCompressCompression level and algorithm; TBasket*fCurrentBasket! Pointer to the current basket.; TDirectory*fDirectory! Pointer to directory where this branch buffers are stored; Long64_tfEntriesNumber of entries; TBuffer*fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tfEntryNumberCurrent entry number (last one filled in this branch); Int_tfEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringfFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; G__p2memfuncfFillLeaves! Pointer to the FillLeaves implementation to use. ; Style_tTAttFill::fFillStylefill area style; Long64_tfFirstBasketEntry! First entry in the current basket.; Long64_tfFirstEntryNumber of the firs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBranch.html:10102,variab,variable,10102,root/html534/TBranch.html,https://root.cern,https://root.cern/root/html534/TBranch.html,2,['variab'],['variable']
Modifiability,"::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix fU so that a = fU^T fU. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompChol(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompChol(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompChol(const TMatrixDSym& a, Double_t tol = 0.0); Constructor for symmetric matrix A . Matrix should be positive definite. TDecompChol(const TMatrixD& a, Double_t tol = 0.0); Constructor for general matrix A . Matrix should be symmetric positive definite. TDecompChol(const TDecompChol& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in component U so that A = U^T * U; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixDSym GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Solve(TVectorD& b); Solve equations Ax=b assuming A has been factored by Cholesky. The factor U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDecompChol.html:7423,Inherit,Inheritance,7423,root/html534/TDecompChol.html,https://root.cern,https://root.cern/root/html534/TDecompChol.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. enum TDecompBase::EMatrixDecompStat { kInit; kPatternSet; kValuesSet; kMatrixSet; kDecomposed; kDetermined; kCondition; kSingular; };; enum TDecompBase::[unnamed] { kWorkMax; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTDecompBase::fColLwbColumn lower bound of decomposed matrix; Double_tTDecompBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUdecomposed matrix fU so that a = fU^T fU. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompChol(Int_t nrows); Constructor for (nrows x nrows) matrix. TDecompChol(Int_t row_lwb, Int_t row_upb); Constructor for ([row_lwb..row_upb] x [row_lwb..row_upb]) matrix. TDecompChol(const TMatrixDSym& a, Double_t tol = 0.0); Constructor for symmetric matrix A . Matrix should be positive definite. TDecompChol(const TMatrixD& a, Double_t tol = 0.0); Constructor for general matrix A . Matrix should be symmetric positive definite. TDecompChol(const TDecompChol& another); Copy constructor. Bool_t Decompose(); Matrix A is decomposed in component U so that A = U^T*U^T; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. const TMatrixDSym GetMatrix(); Reconstruct the original matrix using the decomposition parts. void SetMatrix(const TMatrixDSym& a); Set the matrix to be decomposed, decomposition status is reset. Bool_t Solve(TVectorD& b); Solve equations Ax=b assuming A has been factored by Cholesky. The factor U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDecompChol.html:7404,Inherit,Inheritance,7404,root/html532/TDecompChol.html,https://root.cern,https://root.cern/root/html532/TDecompChol.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Math::BasicMinimizer::CheckDimension ; (; ); const. protected . Definition at line 247 of file BasicMinimizer.cxx. ◆ CheckObjFunction(). bool ROOT::Math::BasicMinimizer::CheckObjFunction ; (; ); const. protected . Definition at line 256 of file BasicMinimizer.cxx. ◆ CreateTransformation(). MinimTransformFunction * ROOT::Math::BasicMinimizer::CreateTransformation ; (; std::vector< double > & ; startValues, . const ROOT::Math::IMultiGradFunction * ; func = nullptr . ). protected . Definition at line 265 of file BasicMinimizer.cxx. ◆ FixVariable(). bool ROOT::Math::BasicMinimizer::FixVariable ; (; unsigned int ; ivar). overridevirtual . fix an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 182 of file BasicMinimizer.cxx. ◆ GetVariableSettings(). bool ROOT::Math::BasicMinimizer::GetVariableSettings ; (; unsigned int ; ivar, . ROOT::Fit::ParameterSettings & ; varObj . ); const. overridevirtual . get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 211 of file BasicMinimizer.cxx. ◆ GradObjFunction(). const ROOT::Math::IMultiGradFunction * ROOT::Math::BasicMinimizer::GradObjFunction ; (; ); const. return pointer to used gradient object function (NULL if gradient is not supported) ; Definition at line 325 of file BasicMinimizer.cxx. ◆ IsFixedVariable(). bool ROOT::Math::BasicMinimizer::IsFixedVariable ; (; unsigned int ; ivar); const. overridevirtual . query if an existing variable is fixed (i.e. ; considered constant in the minimization) note that by default all variables are not fixed ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 206 of file BasicMinimizer.cxx. ◆ Minimize(). bool ROOT::Math::BasicMinimizer::Minimize ; (; ). overridevirtual . method to perform the minimization ; Implements ROOT::Math::Minimizer.; Reimplemented in ROOT::Math::GSLMinimizer, ROOT::Math::GSLNLSMinimizer, ROOT::Math::GSLSimAnMinimizer, and ROOT::Math::RMi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:13085,variab,variable,13085,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,2,['variab'],['variable']
Modifiability,"::Math::FitMethodGradFunction& fcn, const double* params = 0); boolFitFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolFitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); ROOT::Fit::FitterFitter(); ROOT::Math::IMultiGenFunction*GetFCN() const; ROOT::Math::Minimizer*GetMinimizer() const; boolIsBinFit() const; boolLeastSquareFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data); boolLikelihoodFit(const ROOT::Fit::UnBinData& data); boolLikelihoodFit(const ROOT::Fit::BinData& data, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, bool extended); boolLikelihoodFit(const ROOT::Fit::BinData& data, const ROOT::Math::IParametricFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, const ROOT::Math::IParametricFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::BinData& data, const ROOT::Math::IParametricGradFunctionMultiDim& func, bool extended); boolLikelihoodFit(const ROOT::Fit::UnBinData& data, const ROOT::Math::IParametricGradFunctionMultiDim& func, bool extended); boolLinearFit(const ROOT::Fit::BinData& data); const ROOT::Fit::FitResult&Result() const; boolSetFCN(const ROOT::Math::FitMethodFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::FitMethodGradFunction& fcn, const double* params = 0); boolSetFCN(const ROOT::Math::IMultiGenFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(const ROOT::Math::IMultiGradFunction& fcn, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false); boolSetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__Fitter.html:2859,extend,extended,2859,root/html532/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__Fitter.html,4,['extend'],['extended']
Modifiability,"::Math::GSLMultiRootFinder::EType type); voidSetType(ROOT::Math::GSLMultiRootFinder::EDerivType type); voidSetType(const char* name); boolSolve(const double* x, int maxIter = 0, double absTol = 0, double relTol = 0); intStatus() const; const double*X() const. protected:. voidClearFunctions(); pair<bool,int>GetType(const char* name). private:. ROOT::Math::GSLMultiRootFinderGSLMultiRootFinder(const ROOT::Math::GSLMultiRootFinder&); ROOT::Math::GSLMultiRootFinder&operator=(const ROOT::Math::GSLMultiRootFinder&). Data Members; public:. enum EDerivType { kHybridSJ; kHybridJ; kNewton; kGNewton; };; enum EType { kHybridS; kHybrid; kDNewton; kBroyden; };. private:. vector<ROOT::Math::IMultiGenFunction*>fFunctions! transient Vector of the functions ; intfItercurrent numer of iterations; intfPrintLevelprint level ; ROOT::Math::GSLMultiRootBaseSolver*fSolver; intfStatuscurrent status ; intfTypetype of algorithm ; boolfUseDerivAlgoalgorithm using derivative. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLMultiRootFinder(EType type); create a multi-root finder based on an algorithm not requiring function derivative. GSLMultiRootFinder(EDerivType type); create a multi-root finder based on an algorithm requiring function derivative. GSLMultiRootFinder(const char* name = 0). create a multi-root finder using a string.; The names are those defined in the GSL manuals; after having remived the GSL prefix (gsl_multiroot_fsolver).; Default algorithm is ""hybrids"" (without derivative). virtual ~GSLMultiRootFinder(); destructor. GSLMultiRootFinder(const GSLMultiRootFinder &); usually copying is non trivial, so we make this unaccessible. void SetType(EType type); set the type for an algorithm without derivatives. void SetType(EDerivType type); set the type of algorithm using derivatives. void SetType(const char* name); set the type using a string. int AddFunction(const ROOT::Math::IMultiGenFunction& func). add (set) a single function fi(x1,...xn)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLMultiRootFinder.html:4396,Inherit,Inheritance,4396,root/html532/ROOT__Math__GSLMultiRootFinder.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLMultiRootFinder.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Math::IMultiGradFunction & func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function call",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html:6667,variab,variables,6667,root/html526/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,"::Math::MatRepSym<double,2> >::rep_type. Function Members (Methods); public:. ~MatRepSym<double,2>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<double,2>MatRepSym<double,2>(); ROOT::Math::MatRepSym<double,2>MatRepSym<double,2>(const ROOT::Math::MatRepSym<double,2>&); const ROOT::Math::RowOffsets<2>&Offsets() const; const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<double,2>&operator+=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2>&operator-=(const ROOT::Math::MatRepSym<double,2>& rhs); ROOT::Math::MatRepSym<double,2>&operator=(const ROOT::Math::MatRepSym<double,2>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[3]; ROOT::Math::RowOffsets<2>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,2>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,2>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,2>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_2_.html:1974,Inherit,Inheritance,1974,root/html532/ROOT__Math__MatRepSym_double_2_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_2_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Math::MatRepSym<double,3> >::rep_type. Function Members (Methods); public:. ~MatRepSym<double,3>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<double,3>MatRepSym<double,3>(); ROOT::Math::MatRepSym<double,3>MatRepSym<double,3>(const ROOT::Math::MatRepSym<double,3>&); const ROOT::Math::RowOffsets<3>&Offsets() const; const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<double,3>&operator+=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3>&operator-=(const ROOT::Math::MatRepSym<double,3>& rhs); ROOT::Math::MatRepSym<double,3>&operator=(const ROOT::Math::MatRepSym<double,3>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[6]; ROOT::Math::RowOffsets<3>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,3>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,3>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,3>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_3_.html:1974,Inherit,Inheritance,1974,root/html532/ROOT__Math__MatRepSym_double_3_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Math::MinimTransformFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseFunc. typedef ROOT::Math::IMultiGradFunction::BaseFunc ROOT::Math::MinimTransformFunction::BaseFunc. Definition at line 46 of file MinimTransformFunction.h. ◆ BaseGradFunc. typedef ROOT::Math::IMultiGradFunction ROOT::Math::MinimTransformFunction::BaseGradFunc. Definition at line 45 of file MinimTransformFunction.h. Constructor & Destructor Documentation. ◆ MinimTransformFunction() [1/2]. ROOT::Math::MinimTransformFunction::MinimTransformFunction ; (; const IMultiGradFunction * ; f, . const std::vector< ROOT::Math::EMinimVariableType > & ; types, . const std::vector< double > & ; values, . const std::map< unsigned int, std::pair< double, double > > & ; bounds . ). Constructor from a IMultiGradFunction interface that is externally managed vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ) variable values (used for the fixed ones) and a map with the bounds (for the bounded variables) ; Definition at line 24 of file MinimTransformFunction.cxx. ◆ ~MinimTransformFunction(). ROOT::Math::MinimTransformFunction::~MinimTransformFunction ; (; ). inlineoverride . Destructor (no operation) ; Definition at line 62 of file MinimTransformFunction.h. ◆ MinimTransformFunction() [2/2]. ROOT::Math::MinimTransformFunction::MinimTransformFunction ; (; const MinimTransformFunction & ; ). inlineprivate . Definition at line 127 of file MinimTransformFunction.h. Member Function Documentation. ◆ Clone(). IMultiGenFunction * ROOT::Math::MinimTransformFunction::Clone ; (; ); const. inlineoverridevirtual . clone: not supported (since unique_ptr used in the fVariables) ; Implements ROOT::Math::IBaseFunctionMultiDimTempl< T >.; Definition at line 71 of file MinimTransformFunction.h. ◆ DoDerivative(). double ROOT::Math::MinimTransformFunction::DoDerivative ; (; const double * ; x, . unsig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html:5922,variab,variable,5922,doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,3,['variab'],"['variable', 'variables']"
Modifiability,"::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidSetTestSignalEfficiency(Double_t effS); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCuts.html:15010,Config,Configurable,15010,root/html532/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCuts.html,1,['Config'],['Configurable']
Modifiability,"::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Int_t>*fClassthe event class (1=signal, 2=background); struct(anonymous)TMVA::MethodCFMlpANN_Utils::fCost_1; TMatrixF*fDatathe (data,var) string; struct(anonymous)TMVA::MethodCFMlpANN_Utils::fDel_1; TStringfLayerSpecthe hidden layer specification string; Int_tfNcyclesnumber of training cycles; struct(anonymous)TMVA::MethodCFMlpANN_Utils::fNeur_1; Int_tfNlayersnumber of layers (including input and output layers); Int_t*fNodesnumber of nodes per layer; struct(anonymous)TMVA::MethodCFMlpANN_Utils::fParam_1; VARn2TMVA::MethodCFMlpANN_Utils::fVarn2_1; VARn2TMVA::MethodCFMlpANN_Utils::fVarn3_1; struct(anonymous)TMVA::MethodCFMlpANN_Utils::fVarn_1; Double_t**fYNNweights; static TMVA::MethodCFMlpANN*fgThisthis carrier; static Int_tTMVA::MethodCFMlpANN_Utils::fg_0constant; static Int_tTMVA::MethodCFMlpANN_Utils::fg_100constant; static Int_tTMVA::MethodCFMlpANN_Utils::fg_999constant; static const char*constTMVA::MethodCFMlpANN_Utils::fg_MethodNamemethod name for print; static const Int_tTMVA::MethodCFMlpANN_Utils::fg_max_nNodes_maximum number of nodes per variable; static const Int_tTMVA::MethodCFMlpANN_Utils::fg_max_nVar_static maximum number of input variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodCFMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); standard constructor; option string: ""n_training_cycles:n_hidden_layers""; default is: n_training_cycles = 5000, n_layers = 4. * note that the number o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCFMlpANN.html:21473,layers,layers,21473,root/html602/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCFMlpANN.html,16,"['layers', 'variab']","['layers', 'variable', 'variables']"
Modifiability,"::MethodBoost, TMVA::MethodCategory, TMVA::MethodCFMlpANN, TMVA::MethodCrossValidation, TMVA::MethodCuts, TMVA::MethodDL, TMVA::MethodDNN, TMVA::MethodDT, TMVA::MethodFDA, TMVA::MethodFisher, TMVA::MethodHMatrix, TMVA::MethodKNN, TMVA::MethodLD, TMVA::MethodLikelihood, TMVA::MethodPDEFoam, TMVA::MethodPDERS, TMVA::MethodRuleFit, TMVA::MethodSVM, TMVA::MethodTMlpANN, TMVA::PyMethodBase, TMVA::RMethodBase, and TMVA::MethodCompositeBase. ◆ Data(). DataSet * TMVA::MethodBase::Data ; (; ); const. inline . Definition at line 409 of file MethodBase.h. ◆ DataInfo(). DataSetInfo & TMVA::MethodBase::DataInfo ; (; ); const. inline . Definition at line 410 of file MethodBase.h. ◆ DeclareBaseOptions(). void TMVA::MethodBase::DeclareBaseOptions ; (; ). private . define the options (their key words) that can be set in the option string here the options valid for ALL MVA methods are declared. ; know options:. VariableTransform=None,Decorrelated,PCA to use transformed variables instead of the original ones; VariableTransformType=Signal,Background which decorrelation matrix to use in the method. Only the Likelihood Method can make proper use of independent transformations of signal and background; fNbinsMVAPdf = 50 Number of bins used to create a PDF of MVA; fNsmoothMVAPdf = 2 Number of times a histogram is smoothed before creating the PDF; fHasMVAPdfs create PDFs for the MVA outputs; V for Verbose output (!V) for non verbos; H for Help message . Definition at line 509 of file MethodBase.cxx. ◆ DeclareCompatibilityOptions(). void TMVA::MethodBase::DeclareCompatibilityOptions ; (; ). virtual . options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .xml weight file at hand ; Reimplemented in TMVA::MethodBDT, TMVA::MethodBoost, TMVA::MethodCrossValidation, TMVA::MethodDT, TMVA::MethodKNN, TMVA::MethodLikelihood, TMVA::MethodPDEFoam, and TMVA::M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBase.html:40318,variab,variables,40318,doc/master/classTMVA_1_1MethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBase.html,1,['variab'],['variables']
Modifiability,"::MethodFisher. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::MethodFisher. class TMVA::MethodFisher: public TMVA::MethodBase. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis); ; In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of the discriminant variable space.; . The classification of the events in signal and background classes; relies on the following characteristics (only): overall sample means,; xi, for each input variable, i,; class-specific sample means, xS(B),i,; and total covariance matrix Tij. The covariance matrix; can be decomposed into the sum of a within- (Wij); and a between-class (Bij) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, Fi, are then given by . where in TMVA is set NS=NB, so that the factor; in front of the sum simplifies to ½.; The Fisher discriminant then reads. The offset F0 centers the sample mean of xFi; at zero. Instead of using the within-class matrix, the Mahalanobis variant; determines the Fisher coefficients as follows:. with resulting xMa that are very s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodFisher.html:1084,variab,variable,1084,root/html528/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodFisher.html,8,['variab'],['variable']
Modifiability,"::MinimTransformFunction&operator=(const ROOT::Math::MinimTransformFunction&). Data Members; private:. const ROOT::Math::IMultiGradFunction*fFuncuser function ; vector<unsigned int>fIndexvector with external indices for internal variables ; vector<MinimTransformVariable>fVariablesvector of variable settings and tranformation function; vector<double>fXinternal cached of external values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformFunction(const ROOT::Math::IMultiGradFunction* f, const vector<ROOT::Math::EMinimVariableType>& types, const vector<double>& values, const map<unsigned int,std::pair<double,double> >& bounds). Constructor from a IMultiGradFunction interface (which is managed by the class); vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ); variable values (used for the fixed ones) and a map with the bounds (for the bounded variables). unsigned int NDim() const; method inherited from IFunction interface. { return fIndex.size(); }. unsigned int NTot() const; { return fFunc->NDim(); }. IMultiGenFunction * Clone() const; clone: not supported (since auto_ptr used in the fVariables). const double * Transformation(const double* x) const; transform from internal to external; result is cached also inside the class. Transformation(x, &fX[0]). void InvTransformation(const double* xext, double* xint) const; inverse transformation (external -> internal). void InvStepTransformation(const double* x, const double* sext, double* sint) const; inverse transformation for steps (external -> internal) at external point x. void GradientTransformation(const double* x, const double* gExt, double* gInt) const; transform gradient vector (external -> internal) at internal point x. void MatrixTransformation(const double* x, const double* covInt, double* covExt) const; transform covariance matrix (internal -> external) at internal point x; use row storages for matrices m(i,j) = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MinimTransformFunction.html:2903,inherit,inherited,2903,root/html534/ROOT__Math__MinimTransformFunction.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MinimTransformFunction.html,2,['inherit'],['inherited']
Modifiability,"::Minimizer::MinimizerMinimizer(Minimizer const &)=delete; ROOT::Math::Minimizer::CovMatrixStatusvirtual int CovMatrixStatus() constreturn status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made po...Definition Minimizer.h:256; ROOT::Math::Minimizer::Minimizevirtual bool Minimize()=0method to perform the minimization; ROOT::Math::Minimizer::Statusint Status() conststatus code of minimizerDefinition Minimizer.h:310; ROOT::Math::Minimizer::SetVariableUpperLimitvirtual bool SetVariableUpperLimit(unsigned int ivar, double upper)set the upper-limit of an already existing variableDefinition Minimizer.cxx:78; ROOT::Math::Minimizer::SetCovariancevirtual bool SetCovariance(std::span< const double > cov, unsigned int nrow)set initial covariance matrixDefinition Minimizer.cxx:25; ROOT::Math::Minimizer::MinimizerMinimizer()Default constructor.Definition Minimizer.h:124; ROOT::Math::Minimizer::VariableNamevirtual std::string VariableName(unsigned int ivar) constget name of variables (override if minimizer support storing of variable names) return an empty strin...Definition Minimizer.cxx:224; ROOT::Math::Minimizer::SetPrintLevelvoid SetPrintLevel(int level)set print levelDefinition Minimizer.h:328; ROOT::Math::Minimizer::CovMatrixvirtual double CovMatrix(unsigned int ivar, unsigned int jvar) constreturn covariance matrices element for variables ivar,jvar if the variable is fixed the return value ...Definition Minimizer.cxx:120; ROOT::Math::Minimizer::GetHessianMatrixvirtual bool GetHessianMatrix(double *hMat) constFill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second...Definition Minimizer.cxx:148; ROOT::Math::Minimizer::Strategyint Strategy() conststrategyDefinition Minimizer.h:307; ROOT::Math::Minimizer::NCallsvirtual unsigned int NCalls() constnumber of function calls to reach the minimumDefinition Minimizer.h:228; ROOT::Math::Minimizer::SetUpperLimitedVariablevirtual bool SetUpperLimitedVariab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:26506,variab,variables,26506,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"::Minimizer::fMaxCallsmax number of function calls ; unsigned intROOT::Math::Minimizer::fMaxItermax number or iterations used to find the minimum; doubleROOT::Math::Minimizer::fPrecprecision; intROOT::Math::Minimizer::fStatusstatus of minimizer ; intROOT::Math::Minimizer::fStrategyminimizer strategy; doubleROOT::Math::Minimizer::fToltolerance (absolute); doubleROOT::Math::Minimizer::fUperror scale ; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. vector<double>fCovar; unsigned intfDim; vector<double>fErrors; boolfMinosRun; TMinuit*fMinuit; vector<double>fParams; unsigned intfStrategy; ROOT::Minuit::EMinimizerTypefType; boolfUsed; static ROOT::Math::IBaseFunctionMultiDim*fgFunc; static TMinuit*fgMinuit; static boolfgUseStaticMinuitflag to control if using global TMInuit instance (gMinuit); static boolfgUsedflag to control if static instance has done minimization. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMinuitMinimizer(ROOT::Minuit::EMinimizerType type = ROOT::Minuit::kMigrad, unsigned int ndim = 0); Constructor for TMinuitMinimier class via an enumeration specifying the minimization; algorithm type. Supported types are : kMigrad, kSimplex, kCombined (a combined; Migrad + Simplex minimization) and kMigradImproved (a Migrad mininimization folloed by an; improved search for global minima). The default type is Migrad (kMigrad). TMinuitMinimizer(const char* type, unsigned int ndim = 0); constructor from a char * for the algorithm type, used by the plug-in manager; The names supported (case unsensitive) are:; Migrad (default), Simplex, Minimize (for the combined Migrad+ Simplex) and Migrad_imp. ~TMinuitMinimizer(); Destructor implementation. TMinuitMinimizer(const TMinuitMinimizer& ); Implementation of copy constructor (it is private). bool UseStaticMinuit(bool on = true); static method to control usage of global TMinuit instance. void In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMinuitMinimizer.html:5626,Inherit,Inheritance,5626,root/html532/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html532/TMinuitMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Net::forward_backwarddouble forward_backward(LayerContainer &layers, PassThrough &settingsAndBatch, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t trainFromLayer, OutContainer &outputContainer, bool fetchOutput) constmain NN computation functionDefinition NeuralNet.icc:1405; TMVA::DNN::Net::trainCycledouble trainCycle(Minimizer &minimizer, std::vector< double > &weights, Iterator itPatternBegin, Iterator itPatternEnd, Settings &settings, DropContainer &dropContainer)executes one training cycleDefinition NeuralNet.icc:939; TMVA::DNN::Net::fIPyCurrentIterUInt_t * fIPyCurrentIterDefinition NeuralNet.h:1278; TMVA::DNN::Net::operator()double operator()(PassThrough &settingsAndBatch, const Weights &weights) constexecute computation of the DNN for one mini-batch (used by the minimizer); no computation of gradient...Definition NeuralNet.icc:1070; TMVA::DNN::Net::dropOutWeightFactorvoid dropOutWeightFactor(WeightsType &weights, const DropProbabilities &drops, bool inverse=false)set the drop out configurationDefinition NeuralNet.icc:652; TMVA::DNN::Net::fillDropContainervoid fillDropContainer(DropContainer &dropContainer, double dropFraction, size_t numNodes) constprepare the drop-out-container (select the nodes which are to be dropped out)Definition NeuralNet.cxx:572; TMVA::DNN::Net::numWeightssize_t numWeights(size_t trainingStartLayer=0) constreturns the number of weights in this netDefinition NeuralNet.cxx:540; TMVA::DNN::Net::fInteractiveIPythonInteractive * fInteractiveDefinition NeuralNet.h:1276; TMVA::DNN::Net::computeErrorstd::tuple< double, double > computeError(const Settings &settings, std::vector< LayerData > &lastLayerData, Batch &batch, ItWeight itWeightBegin, ItWeight itWeightEnd) constDefinition NeuralNet.icc:1321; TMVA::DNN::Net::forwardPatternvoid forwardPattern(const LayerContainer &_layers, std::vector< LayerData > &layerData) constDefinition NeuralNet.icc:1221; TMVA::DNN::Net::backPropagatevoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:65630,config,configurationDefinition,65630,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['config'],['configurationDefinition']
Modifiability,"::Node::SetPos(char s); virtual voidTMVA::Node::SetRight(TMVA::Node* r); voidSetSelector(Short_t i); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. virtual voidReadAttributes(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); virtual voidReadContent(stringstream& s); virtual Bool_tReadDataRecord(istream& is, UInt_t tmva_Version_Code = TMVA_VERSION_CODE). Data Members; protected:. UInt_tTMVA::Node::fDepthdepth of the node within the tree (seen from root node); TMVA::Node*TMVA::Node::fLeftpointers to the two ""daughter"" nodes; TMVA::Node*TMVA::Node::fParentthe previous (parent) node; TMVA::BinaryTree*TMVA::Node::fParentTreepointer to the parent tree to which the Node belongs ; charTMVA::Node::fPosposition, i.e. it is a left (l) or right (r) daughter ; TMVA::Node*TMVA::Node::fRightpointers to the two ""daughter"" nodes. private:. UInt_tfClass; vector<Float_t>fEventV; Short_tfSelectorindex of variable used in node selection (decision tree) ; vector<Float_t>fTargets; Float_tfWeight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinarySearchTreeNode(const TMVA::Event* e = NULL, UInt_t signalClass = 0); constructor of a node for the search tree. BinarySearchTreeNode(TMVA::BinarySearchTreeNode* parent, char pos); constructor of a daughter node as a daughter of 'p'. BinarySearchTreeNode(const TMVA::BinarySearchTreeNode& n, TMVA::BinarySearchTreeNode* parent = NULL); copy constructor of a node. It will result in an explicit copy of; the node and recursively all it's daughters. ~BinarySearchTreeNode(); node destructor. Bool_t GoesRight(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the right daughter. Bool_t GoesLeft(const TMVA::Event& ) const; check if the event fed into the node goes/decends to the left daughter. Bool_t EqualsMe(const TMVA::Event& ) const; check if the event fed into the node actually equals the e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__BinarySearchTreeNode.html:3376,variab,variable,3376,root/html530/TMVA__BinarySearchTreeNode.html,https://root.cern,https://root.cern/root/html530/TMVA__BinarySearchTreeNode.html,3,['variab'],['variable']
Modifiability,"::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidRemoveHandler(const char* base, const char* regexp = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TPluginManager(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Int_tWritePluginMacros(const char* dir, const char* plugin = 0) const; Int_tWritePluginRecords(const char* envFile, const char* plugin = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPluginManager.html:8150,plugin,plugin,8150,root/html602/TPluginManager.html,https://root.cern,https://root.cern/root/html602/TPluginManager.html,8,['plugin'],['plugin']
Modifiability,::PDEFoamDensityBase←. TMVA::PDEFoamDecisionTreeDensity. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEventDensity. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamDiscriminant←. TMVA::PDEFoamDecisionTree. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationReLU. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<doub,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ClassHierarchy.html:78945,Variab,VariableGaussTransform,78945,root/html604/ClassHierarchy.html,https://root.cern,https://root.cern/root/html604/ClassHierarchy.html,1,['Variab'],['VariableGaussTransform']
Modifiability,"::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetPhi(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar ang); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetR(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetX(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetXY(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const. Data Members; private:. ROOT::Math::Polar2D<double>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__PositionVector2D_-p1Polar2D_double__-p1DefaultCoordinateSystemTag_.html:6523,Inherit,Inheritance,6523,root/html602/ROOT__Math__PositionVector2D_-p1Polar2D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__PositionVector2D_-p1Polar2D_double__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetPhi(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar ang); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetR(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetX(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetXY(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector2D<ROOT::Math::Polar2D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const. Data Members; private:. ROOT::Math::Polar2D<double>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__PositionVector2D_-p1Polar2D_double__-p1DefaultCoordinateSystemTag_.html:6523,Inherit,Inheritance,6523,root/html604/ROOT__Math__PositionVector2D_-p1Polar2D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__PositionVector2D_-p1Polar2D_double__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PositionVector3D & operator=(const ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). SetXYZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar a, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar c). const CoordSystem & Coordinates() const. Retrieve a copy of the coordinates object. PositionVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style array o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html:10220,Inherit,Inheritance,10220,root/html532/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_Double32_t__-p1GlobalCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::RGeomDescription::GetJsonCompint GetJsonComp() constReturns JSON compression level for data transfer.Definition RGeomData.hxx:354; ROOT::RGeomDescription::Buildvoid Build(TGeoManager *mgr, const std::string &volname="""")Collect information about geometry hierarchy into flat list like it done in JSROOT ClonedNodes....Definition RGeomData.cxx:425; ROOT::RGeomDescription::fClickedStackstd::vector< int > fClickedStack! clicked element by stackDefinition RGeomData.hxx:250; ROOT::RGeomDescription::SetClickedItembool SetClickedItem(const std::vector< int > &stack)Definition RGeomData.hxx:419; ROOT::RGeomDrawingObject with full description for drawing geometry It includes list of visible items and list of nodes...Definition RGeomData.hxx:177; ROOT::RGeomDrawing::numnodesint numnodestotal number of nodes in descriptionDefinition RGeomData.hxx:180; ROOT::RGeomDrawing::visiblesstd::vector< RGeomVisible > visiblesall visible itemsDefinition RGeomData.hxx:182; ROOT::RGeomDrawing::cfgRGeomConfig * cfgcurrent configurationsDefinition RGeomData.hxx:179; ROOT::RGeomDrawing::nodesstd::vector< RGeomNode * > nodesall used nodes to display visible items and not known for clientDefinition RGeomData.hxx:181; ROOT::RGeomNodeBaseBase description of geometry node, required only to build hierarchy.Definition RGeomData.hxx:44; ROOT::RGeomNodeBase::IsVisiblebool IsVisible() constDefinition RGeomData.hxx:58; ROOT::RGeomNodeBase::visint visvisibility flag, 0 - off, 1 - only when level==0, 99 - alwaysDefinition RGeomData.hxx:49; ROOT::RGeomNodeBase::materialstd::string materialname of the materialDefinition RGeomData.hxx:53; ROOT::RGeomNodeBase::RGeomNodeBaseRGeomNodeBase(int _id=0)Definition RGeomData.hxx:56; ROOT::RGeomNodeBase::sortidint sortid! place in sorted array, to check cuts, or id of original node when used search structuresDefinition RGeomData.hxx:54; ROOT::RGeomNodeBase::nochldsbool nochldshow far in hierarchy depth should be scannedDefinition RGeomData.hxx:50; ROOT::RGeomNodeBase::c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RGeomData_8hxx_source.html:37211,config,configurationsDefinition,37211,doc/v632/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RGeomData_8hxx_source.html,1,['config'],['configurationsDefinition']
Modifiability,"::RGeomDescription::GetJsonCompint GetJsonComp() constReturns JSON compression level for data transfer.Definition RGeomData.hxx:354; ROOT::RGeomDescription::Buildvoid Build(TGeoManager *mgr, const std::string &volname="""")Collect information about geometry hierarchy into flat list like it done in JSROOT ClonedNodes....Definition RGeomData.cxx:425; ROOT::RGeomDescription::fClickedStackstd::vector< int > fClickedStack! clicked element by stackDefinition RGeomData.hxx:250; ROOT::RGeomDescription::SetClickedItembool SetClickedItem(const std::vector< int > &stack)Definition RGeomData.hxx:421; ROOT::RGeomDrawingObject with full description for drawing geometry It includes list of visible items and list of nodes...Definition RGeomData.hxx:177; ROOT::RGeomDrawing::numnodesint numnodestotal number of nodes in descriptionDefinition RGeomData.hxx:180; ROOT::RGeomDrawing::visiblesstd::vector< RGeomVisible > visiblesall visible itemsDefinition RGeomData.hxx:182; ROOT::RGeomDrawing::cfgRGeomConfig * cfgcurrent configurationsDefinition RGeomData.hxx:179; ROOT::RGeomDrawing::nodesstd::vector< RGeomNode * > nodesall used nodes to display visible items and not known for clientDefinition RGeomData.hxx:181; ROOT::RGeomNodeBaseBase description of geometry node, required only to build hierarchy.Definition RGeomData.hxx:44; ROOT::RGeomNodeBase::IsVisiblebool IsVisible() constDefinition RGeomData.hxx:58; ROOT::RGeomNodeBase::visint visvisibility flag, 0 - off, 1 - only when level==0, 99 - alwaysDefinition RGeomData.hxx:49; ROOT::RGeomNodeBase::materialstd::string materialname of the materialDefinition RGeomData.hxx:53; ROOT::RGeomNodeBase::RGeomNodeBaseRGeomNodeBase(int _id=0)Definition RGeomData.hxx:56; ROOT::RGeomNodeBase::sortidint sortid! place in sorted array, to check cuts, or id of original node when used search structuresDefinition RGeomData.hxx:54; ROOT::RGeomNodeBase::nochldsbool nochldshow far in hierarchy depth should be scannedDefinition RGeomData.hxx:50; ROOT::RGeomNodeBase::c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:37462,config,configurationsDefinition,37462,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,1,['config'],['configurationsDefinition']
Modifiability,"::Releasevoid Release() const overrideDefinition TGeoExtension.cxx:68; The extension is going to be released by the TGeoVolume holder at the destruction or when calling SetUserExtension(0).; The following usage is not correct:; some_TGeoVolume->SetUserExtension(new TGeoRCExtension()); since the producer code does not release the extension. One cannot call directly ""delete ext"" nor allocate an extension on the stack, since the destructor is protected. Use Release instead. ; Definition at line 33 of file TGeoExtension.h. Public Member Functions;  TGeoRCExtension ();  ;  TGeoRCExtension (TObject *obj);  ; TObject * GetUserObject () const;  ; TGeoExtension * Grab () override;  ; TClass * IsA () const override;  ; void Release () const override;  ; void SetUserObject (TObject *obj);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoExtension; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoRCExtension.html:2175,inherit,inherited,2175,doc/master/classTGeoRCExtension.html,https://root.cern,https://root.cern/doc/master/classTGeoRCExtension.html,2,['inherit'],['inherited']
Modifiability,"::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetAdaBoostBeta(Double_t b); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMaxDepth(Int_t d); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); voidSetNodeMinEvents(Int_t d); voidSetNodePurityLimit(Double_t l); voidSetNTrees(Int_t d); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidSetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::Tes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBDT.html:15150,Config,Configurable,15150,root/html532/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBDT.html,1,['Config'],['Configurable']
Modifiability,"::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidsetCacheAllNumeric(Int_t ndim); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCacheNumeric(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealIntegral.html:22095,config,config,22095,root/html526/RooRealIntegral.html,https://root.cern,https://root.cern/root/html526/RooRealIntegral.html,1,['config'],['config']
Modifiability,"::RooBinIntegrator WARNING: integrand provide no binning definition observable #0 substituting default binning of 10 bins; [#1] INFO:NumericIntegration -- RooRealIntegral::init(powerlaw_Int[x]) using numeric integrator RooBinIntegrator to calculate Int(x); ; RooFitResult: minimized FCN value: 15739.9, estimated distance to minimum: 4.99474e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a -3.1481e-01 +/- 1.15e-02; ; ; RooFitResult: minimized FCN value: 15739.6, estimated distance to minimum: 3.92419e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a -3.0010e-01 +/- 1.07e-02; ; [#0] PROGRESS:Generation -- RooAbsPdf::generateBinned(model) Performing costly accept/reject sampling. If this takes too long, use extended mode to speed up the process.; ; RooFitResult: minimized FCN value: -1.47174e+08, estimated distance to minimum: 0.162058; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=-1 HESSE=3 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; c -1.7972e+00 +/- 7.39e-04; mu 2.9756e+00 +/- 3.90e-02; nbkg 1.0001e+07 +/- 3.25e+03; nsig 9.4264e+03 +/- 7.36e+02; sigma 4.6849e-01 +/- 2.75e-02; ; ; RooFitResult: minimized FCN value: 3416.14, estimated distance to minimum: 0.000238265; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; c -1.7971e+00 +/- 7.26e-04; mu 2.9939e+00 +/- 3.63e-02; nbkg 1.0001e+07 +/- 3.24e+03; nsig 9.2425e+03 +/- 6.92e+02; sigma 4.5747e-01 +/- 2.59e-02; ; DateJanuary 2023 ; AuthorJonas Rembser ; Definition in file rf614_binned_fit_problems.C. tutorialsroofitrf614_binned",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf614__binned__fit__problems_8C.html:15184,extend,extended,15184,doc/master/rf614__binned__fit__problems_8C.html,https://root.cern,https://root.cern/doc/master/rf614__binned__fit__problems_8C.html,1,['extend'],['extended']
Modifiability,"::RooBinIntegrator WARNING: integrand provide no binning definition observable #0 substituting default binning of 10 bins; [#1] INFO:NumericIntegration -- RooRealIntegral::init(powerlaw_Int[x]) using numeric integrator RooBinIntegrator to calculate Int(x); ; RooFitResult: minimized FCN value: 15739.9, estimated distance to minimum: 4.99474e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a -3.1481e-01 +/- 1.15e-02; ; ; RooFitResult: minimized FCN value: 15739.6, estimated distance to minimum: 3.92419e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a -3.0010e-01 +/- 1.07e-02; ; [#0] PROGRESS:Generation -- RooAbsPdf::generateBinned(model) Performing costly accept/reject sampling. If this takes too long, use extended mode to speed up the process.; ; RooFitResult: minimized FCN value: -1.47174e+08, estimated distance to minimum: 0.162058; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=-1 HESSE=3 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; c -1.7972e+00 +/- 7.39e-04; mu 2.9756e+00 +/- 3.90e-02; nbkg 1.0001e+07 +/- 3.25e+03; nsig 9.4264e+03 +/- 7.36e+02; sigma 4.6849e-01 +/- 2.75e-02; ; ; RooFitResult: minimized FCN value: 3416.14, estimated distance to minimum: 0.000238265; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; c -1.7971e+00 +/- 7.26e-04; mu 2.9939e+00 +/- 3.63e-02; nbkg 1.0001e+07 +/- 3.24e+03; nsig 9.2425e+03 +/- 6.92e+02; sigma 4.5747e-01 +/- 2.59e-02; ; DateJanuary 2023 ; AuthorJonas Rembser ; Definition in file rf614_binned_fit_problems.py. tutorialsroofitrf614_binne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf614__binned__fit__problems_8py.html:10481,extend,extended,10481,doc/master/rf614__binned__fit__problems_8py.html,https://root.cern,https://root.cern/doc/master/rf614__binned__fit__problems_8py.html,1,['extend'],['extended']
Modifiability,"::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::rep_type. Function Members (Methods); public:. ~MatRepSym<float,2>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<float,2>MatRepSym<float,2>(); ROOT::Math::MatRepSym<float,2>MatRepSym<float,2>(const ROOT::Math::MatRepSym<float,2>&); const ROOT::Math::RowOffsets<2>&Offsets() const; const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<float,2>&operator+=(const ROOT::Math::MatRepSym<float,2>& rhs); ROOT::Math::MatRepSym<float,2>&operator-=(const ROOT::Math::MatRepSym<float,2>& rhs); ROOT::Math::MatRepSym<float,2>&operator=(const ROOT::Math::MatRepSym<float,2>& rhs); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[3]; ROOT::Math::RowOffsets<2>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<float,2>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<float,2>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<float,2>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_2_.html:1949,Inherit,Inheritance,1949,root/html532/ROOT__Math__MatRepSym_float_2_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_2_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::rep_type. Function Members (Methods); public:. ~MatRepSym<float,3>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<float,3>MatRepSym<float,3>(); ROOT::Math::MatRepSym<float,3>MatRepSym<float,3>(const ROOT::Math::MatRepSym<float,3>&); const ROOT::Math::RowOffsets<3>&Offsets() const; const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<float,3>&operator+=(const ROOT::Math::MatRepSym<float,3>& rhs); ROOT::Math::MatRepSym<float,3>&operator-=(const ROOT::Math::MatRepSym<float,3>& rhs); ROOT::Math::MatRepSym<float,3>&operator=(const ROOT::Math::MatRepSym<float,3>& rhs); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[6]; ROOT::Math::RowOffsets<3>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<float,3>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<float,3>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<float,3>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_3_.html:1949,Inherit,Inheritance,1949,root/html532/ROOT__Math__MatRepSym_float_3_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SampleDiscrint SampleDiscr()Sample discrete distributions.Definition TUnuran.cxx:407; TUnuran::SetLogStreambool SetLogStream()set stream for log and error (not yet implemented)Definition TUnuran.h:276; TUnuran::MethodNameconst std::string & MethodName() constused Unuran methodDefinition TUnuran.h:281; TUnuran::TUnuranTUnuran(TUnuran &&)=delete; TUnuran::fDiststd::unique_ptr< TUnuranBaseDist > fDistDefinition TUnuran.h:308; TUnuran::SetDiscreteDistributionbool SetDiscreteDistribution(const TUnuranDiscrDist &dist)Definition TUnuran.cxx:287; TUnuran::GetDistTypeint GetDistType() constReturn the type of the distribution.Definition TUnuran.cxx:383; TUnuran::InitBinomialbool InitBinomial(unsigned int ntot, double prob, const std::string &method=""dstd"")Initialize method for the Binomial distribution.Definition TUnuran.cxx:462; TUnuran::SetContDistributionbool SetContDistribution(const TUnuranContDist &dist)Definition TUnuran.cxx:156; TUnuran::GetInfostd::string GetInfo(bool extended=false)Return an information string about the used Unuran generator method.Definition TUnuran.cxx:362; TUnuran::SampleMultibool SampleMulti(double *x)Sample multidimensional distributions.Definition TUnuran.cxx:421; TUnuran::ReInitDiscrDistbool ReInitDiscrDist(unsigned int npar, double *params)Reinitialize UNURAN by changing the distribution parameters but maintaining same distribution and met...Definition TUnuran.cxx:477; TUnuran::IsDistMultiContbool IsDistMultiCont() constReturn true for a multivariate continuous distribution.Definition TUnuran.cxx:394; TUnuran::fUdistrUNUR_DISTR * fUdistrDefinition TUnuran.h:306; TUnuran::Initbool Init(const std::string &distr, const std::string &method)Initialize with Unuran string API interface.Definition TUnuran.cxx:62; TUnuran::operator=TUnuran & operator=(const TUnuran &rhs)=delete; TUnuran::fGenUNUR_GEN * fGenDefinition TUnuran.h:305; TUnuran::SetRandomGeneratorbool SetRandomGenerator()Definition TUnuran.cxx:139; TUnuran::SetLogLevelbool SetLogLevel(un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8h_source.html:14203,extend,extended,14203,doc/master/TUnuran_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8h_source.html,1,['extend'],['extended']
Modifiability,"::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsCachedReal.html:23002,config,config,23002,root/html528/RooAbsCachedReal.html,https://root.cern,https://root.cern/root/html528/RooAbsCachedReal.html,1,['config'],['config']
Modifiability,"::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsCachedPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedPdf::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsSelfCachedPdf.html:28407,config,config,28407,root/html532/RooAbsSelfCachedPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsSelfCachedPdf.html,2,['config'],['config']
Modifiability,"::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cartesian3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PositionVector3D & operator=(const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). SetXYZ(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). const CoordSystem & Coordinates() const. Retrieve a copy of the coordinates object. PositionVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style array of 3 Scalar numbers. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1Cartesian3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:10026,Inherit,Inheritance,10026,root/html532/ROOT__Math__PositionVector3D_-p1Cartesian3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1Cartesian3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_tfDetIdCustom detector id.; Int_tfEvaLabelLabel of primary particle, ancestor of label.; Int_tfLabelLabel of particle that produced the hit.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVHit position. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveHit& ); { *((TParticle*)this) = p; return *this; }. TEveHit(); Float_t charge; probably specific. {}. virtual ~TEveHit(); {}. » Last changed: root/eve:$Id: TEveVSDStructs.h 38721 2011-04-04 13:37:12Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveHit.html:5283,Inherit,Inheritance,5283,root/html532/TEveHit.html,https://root.cern,https://root.cern/root/html532/TEveHit.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. UShort_tfDetIdCustom detector id.; Int_tfLabel[3]Labels of particles that contributed hits.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVVertex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveCluster& ); { *((TParticle*)this) = p; return *this; }. TEveCluster(); TEveVector fW; // Cluster widths.; Coord system? Errors and/or widths Wz, Wy?. { fLabel[0] = fLabel[1] = fLabel[2] = 0; }. virtual ~TEveCluster(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveCluster.html:5276,Inherit,Inheritance,5276,root/html534/TEveCluster.html,https://root.cern,https://root.cern/root/html534/TEveCluster.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TDNDData(const TDNDData&); TDNDData&operator=(const TDNDData&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Atom_tfActionAction description; void*fDataActual data; Int_tfDataLengthLength of data; Atom_tfDataTypeData type description. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDNDData(const TDNDData& ). TDNDData& operator=(const TDNDData& ). TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); {}. ~TDNDData(); {}. » Author: Bertrand Bellenot 19/04/07 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGDNDManager.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDNDData.html:5273,Inherit,Inheritance,5273,root/html532/TDNDData.html,https://root.cern,https://root.cern/root/html532/TDNDData.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TXMLAttr(const TXMLAttr&); TXMLAttr&operator=(const TXMLAttr&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. const char*fKeyXML attribute key; const char*fValueXML attribute value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXMLAttr(const TXMLAttr& ). TXMLAttr& operator=(const TXMLAttr& ). TXMLAttr(const char* key, const char* value); { }. virtual ~TXMLAttr(); { }. const char * GetName() const; { return fKey; }. const char * Key() const; { return fKey; }. const char * GetValue() const; { return fValue; }. » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id: TXMLAttr.h 22428 2008-03-03 18:17:03Z brun $ » Last generated: 2011-11-03 20:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLAttr.html:5332,Inherit,Inheritance,5332,root/html532/TXMLAttr.html,https://root.cern,https://root.cern/root/html532/TXMLAttr.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TThreadFactory(); { }. TMutexImp * CreateMutexImp(Bool_t recursive). TConditionImp * CreateConditionImp(TMutexImp* m). TThreadImp * CreateThreadImp(). » Author: Fons Rademakers 01/07/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-03-15 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TThreadFactory.html:5830,Inherit,Inheritance,5830,root/html534/TThreadFactory.html,https://root.cern,https://root.cern/root/html534/TThreadFactory.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Bool_tWriteFile(const char*, unsigned char*, UInt_t, UInt_t). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTImagePlugin::fExtensionfile extension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TASImagePlugin(const char* ext); { }. virtual ~TASImagePlugin(); { }. unsigned char * ReadFile(const char* , UInt_t& , UInt_t& ); { return 0; }. Bool_t WriteFile(const char* , unsigned char* , UInt_t , UInt_t ); { return kFALSE; }. ASImage * File2ASImage(const char* ); { return 0; }. Bool_t ASImage2File(ASImage* ); { return kFALSE; }. » Author: Valeriy Onuchin 23/06/05 » Copyright (C) 2001-2002, Rene Brun, Fons Rademakers and Reiner Rohlfs *; » Last changed: root/graf:$Id: TASImagePlugin.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TASImagePlugin.html:6162,Inherit,Inheritance,6162,root/html532/TASImagePlugin.html,https://root.cern,https://root.cern/root/html532/TASImagePlugin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SetSilentvoid SetSilent(Bool_t s)Definition Config.h:63; TMVA::ConfigurableDefinition Configurable.h:45; TMVA::Configurable::SetConfigNamevoid SetConfigName(const char *n)Definition Configurable.h:63; TMVA::Configurable::ParseOptionsvirtual void ParseOptions()options parserDefinition Configurable.cxx:124; TMVA::DataSetInfo::AddVariableVariableInfo & AddVariable(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0, char varType='F', Bool_t normalized=kTRUE, void *external=nullptr)add a variable (can be a complex expression) to the set of variables used in the MV analysisDefinition DataSetInfo.cxx:207; TMVA::DataSetManagerClass that contains all the data information.Definition DataSetManager.h:51; TMVA::DataSetManager::AddDataSetInfoDataSetInfo & AddDataSetInfo(DataSetInfo &dsi)stores a copy of the dataset info objectDefinition DataSetManager.cxx:105; TMVA::EventDefinition Event.h:51; TMVA::Event::GetValueFloat_t GetValue(UInt_t ivar) constreturn value of i'th variableDefinition Event.cxx:236; TMVA::Event::GetNVariablesUInt_t GetNVariables() constaccessor to the number of variablesDefinition Event.cxx:316; TMVA::IMethodInterface for all concrete MVA method implementations.Definition IMethod.h:53; TMVA::MethodBaseVirtual base Class for all MVA method.Definition MethodBase.h:111; TMVA::MethodBase::GetRegressionValuesconst std::vector< Float_t > & GetRegressionValues(const TMVA::Event *const ev)Definition MethodBase.h:214; TMVA::MethodBase::GetMvaValuevirtual Double_t GetMvaValue(Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0; TMVA::MethodBase::DeclareCompatibilityOptionsvirtual void DeclareCompatibilityOptions()options that are used ONLY for the READER to ensure backward compatibility they are hence without any...Definition MethodBase.cxx:596; TMVA::MethodBase::GetMethodTypeNameTString GetMethodTypeName() constDefinition MethodBase.h:332; TMVA::MethodBase::GetProbavirtual Double_t GetProba(const Event *e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:35061,variab,variableDefinition,35061,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['variab'],['variableDefinition']
Modifiability,"::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. set<std::string>fDependenciesdependencies on other libraries; set<std::string>fModulesmodules in the library. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLibraryDocInfo(); {}. TLibraryDocInfo(const char* lib); {}. std::set<std::string>& GetDependencies(); {return fDependencies;}. std::set<std::string>& GetModules(); {return fModules;}. void AddDependency(const string& lib); {fDependencies.insert(lib);}. void AddModule(const string& module); {fModules.insert(module);}. » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLibraryDocInfo.html:5773,Inherit,Inheritance,5773,root/html534/TLibraryDocInfo.html,https://root.cern,https://root.cern/root/html534/TLibraryDocInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::SimpleInterval::fConfidenceLevelconfidence level; Double_tRooStats::SimpleInterval::fLowerLimitlower interval limit; RooArgSetRooStats::SimpleInterval::fParametersset containing the parameter of interest; Double_tRooStats::SimpleInterval::fUpperLimitupper interval limit. protected:. doublefCLsCleanupThreshold; TListfExpPValueslist of expected sampling distribution for each point; boolfFittedLowerLimit; boolfFittedUpperLimit; RooStats::HypoTestInverterResult::InterpolOption_tfInterpolOptioninterpolatation option (linear or spline); boolfInterpolateLowerLimit; boolfInterpolateUpperLimit; boolfIsTwoSidedtwo sided scan (look for lower/upper limit) ; doublefLowerLimitError; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; doublefUpperLimitError; boolfUseCLs; vector<double>fXValues; TListfYObjectslist of HypoTestResult for each point; static doublefgAsymptoticMaxSigmamax sigma value used to scan asymptotic expected p values . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestInverterResult(const char* name = 0); default constructor. HypoTestInverterResult(const RooStats::HypoTestInverterResult& other, const char* name); copy constructor. operator=(const RooStats::HypoTestInverterResult& other). HypoTestInverterResult(const char* name, const RooRealVar& scannedVariable, double cl); constructor. ExclusionCleanup(). ~HypoTestInverterResult(); destructor; no need to delete explictly the objects in the TList since the TList owns the objects. bool Add(const RooStats::HypoTestInverterResult& otherResult); Merge this HypoTestInverterResult with another; HypoTestInverterResult passed as argument; The merge is done by combining the HypoTestResult when the same point value exist in both results.; If results exist at different points these are added in the new result; NOTE: Merging of the expected p-values obtained with pseudo-data.; When expected p-values exist in the result (i.e. when rebuild option is used ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HypoTestInverterResult.html:9996,Inherit,Inheritance,9996,root/html534/RooStats__HypoTestInverterResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HypoTestInverterResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::StatDialogBDT ; TMVA::StatDialogBDTReg ; TMVA::StatDialogMVAEffs ; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationReLU Tanh sigmoid activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TMVAGUI ; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ClassIndex.html:107476,variab,variable,107476,root/html604/ClassIndex.html,https://root.cern,https://root.cern/root/html604/ClassIndex.html,15,"['Variab', 'variab']","['Variable', 'VariableDecorrTransform', 'VariableGaussTransform', 'VariableIdentityTransform', 'VariableNormalizeTransform', 'VariablePCATransform', 'VariableRearrangeTransform', 'VariableTransformBase', 'variable']"
Modifiability,"::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGeoUniformMagField(const TGeoUniformMagField&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TGeoUniformMagField&operator=(const TGeoUniformMagField&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_tfB[3]Magnetic field vector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoUniformMagField(); Default constructor;. TGeoUniformMagField(Double_t Bx, Double_t By, Double_t Bz); Default constructor;. void Field(const Double_t* , Double_t* B). TGeoUniformMagField(const TGeoUniformMagField& ). TGeoUniformMagField& operator=(const TGeoUniformMagField& ). virtual ~TGeoUniformMagField(); {}. const Double_t * GetFieldValue() const; { return &fB[0]; }. void SetFieldValue(Double_t Bx, Double_t By, Double_t Bz); {fB[0]=Bx; fB[1]=By; fB[2]=Bz;}. » Last changed: root/geom:$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoUniformMagField.html:5840,Inherit,Inheritance,5840,root/html534/TGeoUniformMagField.html,https://root.cern,https://root.cern/root/html534/TGeoUniformMagField.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; RooArgSetRooAbsDataStore::_cachedVars; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsDataStore::_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooVectorDataStore*_cache! Optimization cache; RooAbsArg*_cacheOwner! Cache owner; vector<CatVector*>_catStoreList; Double_t_curWgtWeight of current event; Double_t_curWgtErrWeight of current event; Double_t_curWgtErrHiWeight of current event; Double_t_curWgtErrLoWeight of current event; Double_t*_extSumW2Array! External sum of weights array; Double_t*_extWgtArray! External weight array; Double_t*_extWgtErrHiArray! External weight array - high error; Double_t*_extWgtErrLoArray! External weight array - low error; RooVectorDataStore::CatVector**_firstCat! do not persist; RooVectorDataStore::RealVector**_firstReal! do not persist; RooVectorDataStore::RealFullVector**_firstRealF! do not persist; Int_t_nCat; Int_t_nEntries; Int_t_nReal; Int_t_nRealF; vector<RealVector*>_realStoreList; vector<RealFullVector*>_realfStoreList; Double_t_sumWeight; RooArgSet_varsww; RooRealVar*_wgtVarPointer to weight variable (if set). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooVectorDataStore(). RooVectorDataStore(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0). void setAllBuffersNative(). RooArgSet varsNoWeight(const RooArgSet& allVars, const char* wgtName); Utility function for constructors; Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. RooRealVar* weightVar(const RooArgSet& allVars, const char* wgtName); Utility function for cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooVectorDataStore.html:11358,variab,variable,11358,root/html532/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html532/RooVectorDataStore.html,2,['variab'],['variable']
Modifiability,"::TBranchProxyDirector* director, ROOT::TBranchProxy* parent, const char* name, const char* top = 0, const char* mid = 0). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html:4545,Inherit,Inheritance,4545,root/html534/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html,https://root.cern,https://root.cern/root/html534/ROOT__TClaArrayProxy_-p0TArrayType_bool_0___.html,18,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::TBranchProxyDirector* director, ROOT::TBranchProxy* parent, const char* name, const char* top = 0, const char* mid = 0). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_char_0___.html:4728,Inherit,Inheritance,4728,root/html534/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_char_0___.html,https://root.cern,https://root.cern/root/html534/ROOT__TClaArrayProxy_-p0TArrayType_unsigned_char_0___.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::TClaImpProxy<int>TClaImpProxy<int>(int). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(int ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id: TBranchProxy.h 41244 2011-10-06 19:42:35Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TClaImpProxy_int_.html:4022,Inherit,Inheritance,4022,root/html532/ROOT__TClaImpProxy_int_.html,https://root.cern,https://root.cern/root/html532/ROOT__TClaImpProxy_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::TFormula::DefinedVariablevirtual Int_t DefinedVariable(TString &variable, Int_t &action)Check if expression is in the list of defined variables.Definition TFormula_v5.cxx:2621; ROOT::v5::TFormula::GetActionParamInt_t GetActionParam(Int_t code) constDefinition TFormula.h:105; ROOT::v5::TFormula::fOptimalTFuncG fOptimal[fNPar] predefined functionDefinition TFormula.h:96; ROOT::v5::TFormula::fAlreadyFoundTBits fAlreadyFoundDefinition TFormula.h:88; ROOT::v5::TFormula::EvalPrimitive4Double_t EvalPrimitive4(const Double_t *x, const Double_t *params)Evaluate primitive formula.Definition TFormula_v5.cxx:4173; ROOT::v5::TFormula::Printvoid Print(Option_t *option="""") const overrideDump this formula with its attributes.Definition TFormula_v5.cxx:3277; ROOT::v5::TFormula::Analyzevirtual void Analyze(const char *schain, Int_t &err, Int_t offset=0)Analyze a sub-expression in one formula.Definition TFormula_v5.cxx:712; ROOT::v5::TFormula::GetExpFormulavirtual TString GetExpFormula(Option_t *option="""") constReconstruct the formula expression from the internal TFormula member variables.Definition TFormula_v5.cxx:3022; ROOT::v5::TFormula::MakePrimitivevoid MakePrimitive(const char *expr, Int_t pos)MakePrimitive find TFormulaPrimitive replacement for some operands.Definition TFormula_v5.cxx:3746; ROOT::v5::TFormula::GetActionParamOptimizedInt_t GetActionParamOptimized(Int_t code) constDefinition TFormula.h:113; ROOT::v5::TFormula::EvalParOldvirtual Double_t EvalParOld(const Double_t *x, const Double_t *params=nullptr)Evaluate this formula.Definition TFormula_v5.cxx:2687; ROOT::v5::TFormula::GetMaximastatic void GetMaxima(Int_t &maxop, Int_t &maxpar, Int_t &maxconst)static function to get the maximum value of 3 parameters -maxop : maximum number of operations -maxpa...Definition TFormula_v5.cxx:4540; ROOT::v5::TFormula::fPredefinedTFormulaPrimitive ** fPredefined[fNOperOptimized] Offsets of operrandsDefinition TFormula.h:95; ROOT::v5::TFormula::fNoperInt_t fNoperDefinition TFormula.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/v5_2TFormula_8h_source.html:26345,variab,variables,26345,doc/master/v5_2TFormula_8h_source.html,https://root.cern,https://root.cern/doc/master/v5_2TFormula_8h_source.html,1,['variab'],['variables']
Modifiability,"::TFormula::ksq; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::ksqrt; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kstrstr; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::ktan; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::ktanh; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxgaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxlandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxpol; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxyexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxygaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxylandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kyexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kygaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kylandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kypol; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzgaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzlandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzpol. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TF1Data(); F1 default constructor. ~TF1Data(); TF1 default destructor. void Streamer(TBuffer& ); Stream a class object. void Streamer(TBuffer& b, Int_t version, UInt_t start, UInt_t count, const TClass* onfile_class = 0); specialized streamer function being able to read old TF1 versions as TF1Data in memory. TF1Data(). » Author: Rene Brun 18/08/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__v5__TF1Data.html:21981,Inherit,Inheritance,21981,root/html604/ROOT__v5__TF1Data.html,https://root.cern,https://root.cern/root/html604/ROOT__v5__TF1Data.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::TH2 for explanation of parameters) ;  ;  TH2C (const TH2C &h2c);  Copy constructor. ;  ;  ~TH2C () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2C & operator= (const TH2C &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2C. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y, Double_t w);  Increment cell defined by x,y by a weight w. ;  ; void FillN (Int_t ntimes, const Double_t *x, const Double_t *y, const Double_t *w, Int_t stride=1) override;  Fill a 2-D histogram with an array of values and weights. ;  ; void FillN (Int_t, const Double_t *, const Double_t *, Int_t) override;  Fill this his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:2388,inherit,inherited,2388,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,1,['inherit'],['inherited']
Modifiability,"::TTreeReaderValueBaseBase class of TTreeReaderValue.Definition TTreeReaderValue.h:45; TTreeReaderArrayAn interface for reading collections stored in ROOT columnar datasets.Definition TTreeReaderArray.h:75; TTreeReader::kEntryBeyondEnd@ kEntryBeyondEndlast entry loop has reached its endDefinition TTreeReader.h:160. Definition at line 46 of file TTreeReader.h. Classes; class  Iterator_t;  Iterate through the entries of a TTree. More...;  . Public Types; enum  EEntryStatus { ;   kEntryValid = 0; , kEntryNotLoaded; , kEntryNoTree; , kEntryNotFound; , ;   kEntryChainSetupError; , kEntryChainFileError; , kEntryDictionaryError; , kEntryBeyondEnd; , ;   kEntryBadReader; , kIndexedFriendNoMatch; , kMissingBranchWhenSwitchingTree; , kEntryUnknownError. };  ; enum  ELoadTreeStatus { ;   kNoTree = 0; , kLoadTreeNone; , kInternalLoadTree; , kExternalLoadTree; , ;   kMissingBranchFromTree. };  ; typedef Iterator_t iterator;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeReader ();  Default constructor. Call SetTree to connect to a TTree. ;  ;  TTreeReader (const char *keyname, TDirectory *dir, TEntryList *entryList=nullptr);  Access data from the tree called keyname in the directory (e.g. ;  ;  TTreeReader (const char *keyname, TEntryList *entryList=nullptr);  ;  TTreeReader (TTree *tree, TEntryList *entryList=nullptr, bool warnAboutLongerFriends=true, const std::vec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeReader.html:6972,inherit,inherited,6972,doc/master/classTTreeReader.html,https://root.cern,https://root.cern/doc/master/classTTreeReader.html,1,['inherit'],['inherited']
Modifiability,"::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TH1D*fWtHst1Histogram of the weight wt; TH1D*fWtHst2Histogram of wt filled with wt. private:. Double_tfNentNo. of MC events; Int_tfnBinNo. of bins on the weight distribution; Double_tfwmaxMaximum analyzed weight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFoamMaxwt(); Constructor for streamer. TFoamMaxwt(Double_t , Int_t ); Principal user constructor. TFoamMaxwt(TFoamMaxwt& From); Explicit COPY CONSTRUCTOR (unused, so far). ~TFoamMaxwt(); Destructor. void Reset(); Reseting weight analysis. TFoamMaxwt& operator=(const TFoamMaxwt& ); substitution =. void Fill(Double_t ); Filling analyzed weight. void Make(Double_t , Double_t& ); Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; To be called at the end of the MC run. void GetMCeff(Double_t , Double_t& , Double_t& ); Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1; using information stored in two histograms.; To be called at the end of the MC run. » Last changed: root/foam:$Id: TFoamMaxwt.h 22726 2008-03-19 09:53:41Z pcanal $ » Last generated: 2011-11-03 20:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFoamMaxwt.html:5767,Inherit,Inheritance,5767,root/html532/TFoamMaxwt.html,https://root.cern,https://root.cern/root/html532/TFoamMaxwt.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); TStringToken(const TStringToken&); TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); static TStringTString::UItoa(UInt_t value, Int_t base); static TStringTString::ULLtoa(ULong64_t value, Int_t base); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. static TString::EStripTypeTString::kBoth; static TString::ECaseCompareTString::kExact; static TString::ECaseCompareTString::kIgnoreCase; static TString::EStripTypeTString::kLeading; static const Ssiz_tTString::kNPOS; static TString::EStripTypeTString::kTrailing. protected:. const TStringfFullStr; Int_tfPos; TString::Rep_tTString::fRep! String data; Bool_tfReturnVoid; TPRegexpfSplitRe; static TString::(anonymous)TString::kAlignment. Class Charts. Inheritance Chart:. TString. ←; TStringToken. Function documentation; TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); Constructor. Bool_t NextToken(); Get the next token, it is stored in this TString.; Returns true if new token is available, false otherwise. TPRegexp & operator=(const TStringToken& ). TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE). virtual ~TStringToken(); {}. Bool_t AtEnd() const; { return fPos >= fFullStr.Length(); }. » Author: Eddy Offermann 24/06/05 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-02 16:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStringToken.html:8817,Inherit,Inheritance,8817,root/html604/TStringToken.html,https://root.cern,https://root.cern/root/html604/TStringToken.html,1,['Inherit'],['Inheritance']
Modifiability,"::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); TStringToken(const TStringToken&); TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); static TStringTString::UItoa(UInt_t value, Int_t base); static TStringTString::ULLtoa(ULong64_t value, Int_t base); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. static TString::EStripTypeTString::kBoth; static TString::ECaseCompareTString::kExact; static TString::ECaseCompareTString::kIgnoreCase; static TString::EStripTypeTString::kLeading; static const Ssiz_tTString::kNPOS; static TString::EStripTypeTString::kTrailing. protected:. const TStringfFullStr; Int_tfPos; TString::Rep_tTString::fRep! String data; Bool_tfReturnVoid; TPRegexpfSplitRe; static TString::(anonymous)TString::kAlignment. Class Charts. Inheritance Chart:. TString. ←; TStringToken. Function documentation; TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); Constructor. Bool_t NextToken(); Get the next token, it is stored in this TString.; Returns true if new token is available, false otherwise. TPRegexp & operator=(const TStringToken& ). TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE). virtual ~TStringToken(); {}. Bool_t AtEnd() const; { return fPos >= fFullStr.Length(); }. » Author: Eddy Offermann 24/06/05 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStringToken.html:8761,Inherit,Inheritance,8761,root/html602/TStringToken.html,https://root.cern,https://root.cern/root/html602/TStringToken.html,1,['Inherit'],['Inheritance']
Modifiability,"::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGeoIteratorPlugin&operator=(const TGeoIteratorPlugin&); TGeoIteratorPlugin(const TGeoIteratorPlugin&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. const TGeoIterator*fIteratorCaller iterator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNode& operator=(const TGeoIteratorPlugin& ). TGeoIteratorPlugin(const TGeoIteratorPlugin& ); No copy. TGeoIteratorPlugin(); {}. virtual ~TGeoIteratorPlugin(); {}. void ProcessNode(). void SetIterator(const TGeoIterator* iter); {fIterator = iter;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-02 16:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoIteratorPlugin.html:7650,Inherit,Inheritance,7650,root/html604/TGeoIteratorPlugin.html,https://root.cern,https://root.cern/root/html604/TGeoIteratorPlugin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGeoIteratorPlugin&operator=(const TGeoIteratorPlugin&); TGeoIteratorPlugin(const TGeoIteratorPlugin&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. const TGeoIterator*fIteratorCaller iterator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNode& operator=(const TGeoIteratorPlugin& ). TGeoIteratorPlugin(const TGeoIteratorPlugin& ); No copy. TGeoIteratorPlugin(); {}. virtual ~TGeoIteratorPlugin(); {}. void ProcessNode(). void SetIterator(const TGeoIterator* iter); {fIterator = iter;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-30 15:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoIteratorPlugin.html:7650,Inherit,Inheritance,7650,root/html602/TGeoIteratorPlugin.html,https://root.cern,https://root.cern/root/html602/TGeoIteratorPlugin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::VarTypeGetDist(const TMVA::kNN::Event& other) const; TMVA::kNN::VarTypeGetDist(TMVA::kNN::VarType var, UInt_t ivar) const; TMVA::kNN::VarTypeGetDist(const TMVA::kNN::VarType var1, const UInt_t ivar) const; UInt_tGetNTgt() const; UInt_tGetNVar() const; const TMVA::kNN::VarVec&GetTargets() const; TMVA::kNN::VarTypeGetTgt(UInt_t i) const; TMVA::kNN::VarTypeGetTgt(const UInt_t i) const; Short_tGetType() const; TMVA::kNN::VarTypeGetVar(UInt_t i) const; TMVA::kNN::VarTypeGetVar(const UInt_t i) const; const TMVA::kNN::VarVec&GetVars() const; Double_tGetWeight() const; TMVA::kNN::Event&operator=(const TMVA::kNN::Event&); voidPrint() const; voidPrint(ostream& os) const; voidSetTargets(const TMVA::kNN::VarVec& tvec). Data Members; private:. TMVA::kNN::VarVecfTgttargets for regression analysis; Short_tfTypeevent type ==0 or == 1, expand it to arbitrary class types? ; TMVA::kNN::VarVecfVarcoordinates (variables) for knn search; Double_tfWeightevent weight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Event(); Create an Event object.; When the constructor is invoked for the first time, the class static; variable fgTracks is 0 and the TClonesArray fgTracks is created. ~Event(). Event(). Event(const TMVA::kNN::VarVec& vec, Double_t weight, Short_t type). Event(const TMVA::kNN::VarVec& vec, Double_t weight, Short_t type, const TMVA::kNN::VarVec& tvec). Double_t GetWeight() const. VarType GetVar(UInt_t i) const. VarType GetTgt(UInt_t i) const. UInt_t GetNVar() const. UInt_t GetNTgt() const. Short_t GetType() const. VarType GetDist(TMVA::kNN::VarType var, UInt_t ivar) const; keep these two function separate. VarType GetDist(const TMVA::kNN::Event& other) const. void SetTargets(const TMVA::kNN::VarVec& tvec). const VarVec& GetTargets() const. const VarVec& GetVars() const. void Print() const. void Print(ostream& os) const. VarType GetDist(const TMVA::kNN::VarType var1, const UInt_t ivar) const. inlined functions for Event class. VarType G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__kNN__Event.html:4435,Inherit,Inheritance,4435,root/html532/TMVA__kNN__Event.html,https://root.cern,https://root.cern/root/html532/TMVA__kNN__Event.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::VariableDecorrTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintTransformation(ostream& o); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets() const; Bool_tTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html:5359,Variab,VariableTransformBase,5359,root/html602/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"::VariableInfo> TMVA::VariableTransformBase::fSpectators. private . event spectators [saved to weight file --> TODO ] ; Definition at line 160 of file VariableTransformBase.h. ◆ fTargets. std::vector<TMVA::VariableInfo> TMVA::VariableTransformBase::fTargets. private . event targets [saved to weight file --> TODO ] ; Definition at line 159 of file VariableTransformBase.h. ◆ fTMVAVersion. TMVAVersion_t TMVA::VariableTransformBase::fTMVAVersion. protected . Definition at line 172 of file VariableTransformBase.h. ◆ fTransformedEvent. Event* TMVA::VariableTransformBase::fTransformedEvent. mutableprotected . holds the current transformed event ; Definition at line 139 of file VariableTransformBase.h. ◆ fTransformName. TString TMVA::VariableTransformBase::fTransformName. private . name of transformation ; Definition at line 157 of file VariableTransformBase.h. ◆ fUseSignalTransform. Bool_t TMVA::VariableTransformBase::fUseSignalTransform. private . true if transformation bases on signal data ; Definition at line 152 of file VariableTransformBase.h. ◆ fVariables. std::vector<TMVA::VariableInfo> TMVA::VariableTransformBase::fVariables. private . event variables [saved to weight file] ; Definition at line 158 of file VariableTransformBase.h. ◆ fVariableTransform. Types::EVariableTransform TMVA::VariableTransformBase::fVariableTransform. private . Decorrelation, PCA, etc. ; Definition at line 148 of file VariableTransformBase.h. ◆ fVariableTypesAreCounted. Bool_t TMVA::VariableTransformBase::fVariableTypesAreCounted. mutableprivate . true if variable types have been counted already ; Definition at line 162 of file VariableTransformBase.h. Libraries for TMVA::VariableTransformBase:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/VariableTransformBase.h; tmva/tmva/src/VariableTransformBase.cxx. TMVAVariableTransformBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:32292,variab,variables,32292,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,2,['variab'],"['variable', 'variables']"
Modifiability,"::VariableInfo>&TMVA::VariableTransformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. voidCleanUpCumulativeArrays(TString opt = ""ALL""); voidGetCumulativeDist(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); Double_tOldCumulant(Float_t x, TH1* h) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<std::vector<TH1F*> >fCumulativeDist! The Cummulative distributions ; vector<std::vector<PDF*> >fCumulativePDFThe cumulative PDF; UInt_tfElementsperbinav number of events stored per bin in cum dist; Bool_tfFlatNotGauss; Int_tfPdfMaxSmooth; Int_tfPdfMinSmooth. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableGaussTransform(TMVA::DataSetInfo& dsi, TString strcor = """"); constructor; can only be applied one after the other when they are created. But in order to; determine the Gauss transformation. ~VariableGaussTransform( void ); destructor. void Initialize(). Bool_t PrepareTransformation(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableGaussTransform.html:8960,variab,variables,8960,root/html530/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableGaussTransform.html,30,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,"::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<std::vector<Float_t> >fMax! Max of source range; vector<std::vector<Float_t> >fMin! Min of source range. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableNormalizeTransform( DataSetInfo& dsi ); constructor. ~VariableNormalizeTransform(). void Initialize(); initialization of the normalization transformation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const; apply the inverse transformation. void CalcNormalizationParams(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events); compute offset and scale from min and max. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void WriteTransformationToStream(ostream& ) const; write the decorrelation matrix to the stream. void AttachXMLTo(void* parent); create XML description of Normalize transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. BuildTransformationFromVarInfo(const vector<TMVA::VariableInfo>& var); this method is only used when building a normalization transformation; from old text files; in this case regression didn't exist and there were no targets. void ReadTransformationFromStream(istream& , const TString& ); Read the variable ranges from an input stream. void PrintTransformation(ostream& o); prints the transformation ranges. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates a normalizing function; TODO include target-transformation into makefunction. VariableNormalizeTransform( DataSetInfo& dsi ). » Author: Andreas Hoecker, Joerg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__VariableNormalizeTransform.html:8850,variab,variable,8850,root/html528/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html528/TMVA__VariableNormalizeTransform.html,1,['variab'],['variable']
Modifiability,"::VecOps::RVecImpl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Types |; List of all members ; ROOT::Detail::VecOps::RVecImpl< T > Class Template Reference. ; template<typename T>; class ROOT::Detail::VecOps::RVecImpl< T >This class consists of common code factored out of the SmallVector class to reduce code duplication based on the SmallVector 'N' template parameter. ; Definition at line 561 of file RVec.hxx. Public Types; using const_iterator = typename SuperClass::const_iterator;  ; using iterator = typename SuperClass::iterator;  ; using reference = typename SuperClass::reference;  ; using size_type = typename SuperClass::size_type;  ;  Public Types inherited from ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >; using const_iterator = const T *;  ; using const_pointer = const T *;  ; using const_reference = const T &;  ; using const_reverse_iterator = std::reverse_iterator< const_iterator >;  ; using difference_type = ptrdiff_t;  ; using iterator = T *;  ; using pointer = T *;  ; using reference = T &;  ; using reverse_iterator = std::reverse_iterator< iterator >;  ; using size_type = size_t;  ; using value_type = T;  ;  Public Types inherited from ROOT::Internal::VecOps::SmallVectorBase; using Size_T = int32_t;  . Public Member Functions;  RVecImpl (const RVecImpl &)=delete;  ;  ~RVecImpl ();  ; template<typename in_iter , typename = typename std::enable_if<std::is_convertible< typename std::iterator_traits<in_iter>::iterator_category, std::input_iterator_tag>::value>::type> ; void append (in_iter in_start, in_iter in_end);  Add the specified range to the end of the SmallVector. ;  ; void append (size_type NumInputs, const T &Elt);  Append NumInputs copies of Elt to the end. ;  ; void append (std::initializer_list< T > IL);  ; template<typename in_iter , typename = typename std::enable_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html:853,inherit,inherited,853,doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1VecOps_1_1RVecImpl.html,2,['inherit'],['inherited']
Modifiability,"::VirtualIntegratorOneDim::operator=(const ROOT::Math::VirtualIntegratorOneDim&); virtual ROOT::Math::IntegratorOneDimOptionsOptions() const; virtual doubleResult() const; virtual voidSetAbsTolerance(double); virtual voidSetFunction(const ROOT::Math::IGenFunction&); virtual voidSetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); virtual voidSetRelTolerance(double); virtual intStatus() const; virtual ROOT::Math::IntegrationOneDim::TypeROOT::Math::VirtualIntegratorOneDim::Type() const. private:. virtual doubleDoIntegral(double a, double b, const ROOT::Math::IGenFunction* func). Data Members; protected:. doublefEpsilonRelative error.; const ROOT::Math::IGenFunction*fFunctionPointer to function used.; doublefLastErrorError from the last stimation.; doublefLastResultResult from the last stimation.; boolfUsedOnceBool value to check if the function was at least called once.; static boolfgAbsValueAbsValue used for the calculation of the integral. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~GaussIntegrator(); Destructor . GaussIntegrator(double relTol = 1.E-12); Default Constructor. . void AbsValue(bool flag); Static function: set the fgAbsValue flag.; By default TF1::Integral uses the original function value to compute the integral; However, TF1::Moment, CentralMoment require to compute the integral; using the absolute value of the function. void SetRelTolerance(double ); Implementing VirtualIntegrator Interface; Set the desired relative Error. . void SetAbsTolerance(double ); This method is not implemented. . double Result() const; Returns the result of the last Integral calculation. . double Error() const; Return the estimate of the absolute Error of the last Integral calculation. . int Status() const; return the status of the last integration - 0 in case of success . double Integral(double a, double b); Implementing VirtualIntegratorOneDim Interface. Returns Integral of function between a and b.; Based on ori",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GaussIntegrator.html:2142,Inherit,Inheritance,2142,root/html532/ROOT__Math__GaussIntegrator.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GaussIntegrator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfClassNamereal object class name; FileStat_tfFileStatfile status; Bool_tfIsFolderis folder flag; TStringfKeyClassNamekey object class name; TStringfKeyObjectNamekey object name; TStringTNamed::fNameobject identifier; Long64_tfRemoteAddressremote address; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRemoteObject(); Create a remote object. TRemoteObject(const char* name, const char* title, const char* classname); Create a remote object. ~TRemoteObject(); Delete remote object. void Browse(TBrowser* b); Browse remote object. TList * Browse(); Browse OS system directories. Bool_t GetFileStat(FileStat_t* sbuf); Get remote file status. void Streamer(TBuffer& ); Remote object streamer. TRemoteObject(). Bool_t IsFolder() const; { return fIsFolder; }. const char * GetClassName() const; { return fClassName.Data(); }. const char * GetKeyObjectName() const; { return fKeyObjectName.Data(); }. const char * GetKeyClassName() const; { return fKeyClassName.Data(); }. void SetFolder(Bool_t isFolder); { fIsFolder = isFolder; }. void SetKeyObjectName(const char* name); { fKeyObjectName = name; }. void SetKeyClassName(const char* name); { fKeyClassName = name; }. void SetRemoteAddress(Long_t addr); { fRemoteAddress = addr; }. » Author: Bertrand Belle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRemoteObject.html:6441,Inherit,Inheritance,6441,root/html534/TRemoteObject.html,https://root.cern,https://root.cern/root/html534/TRemoteObject.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringfClassNamereal object class name; FileStat_tfFileStatfile status; Bool_tfIsFolderis folder flag; TStringfKeyClassNamekey object class name; TStringfKeyObjectNamekey object name; TStringTNamed::fNameobject identifier; Long64_tfRemoteAddressremote address; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRemoteObject(); Create a remote object. TRemoteObject(const char* name, const char* title, const char* classname); Create a remote object. ~TRemoteObject(); Delete remote object. void Browse(TBrowser* b); Browse remote object. TList * Browse(); Browse OS system directories. Bool_t GetFileStat(FileStat_t* sbuf); Get remote file status. void Streamer(TBuffer& b); Remote object streamer. TRemoteObject(). Bool_t IsFolder() const; { return fIsFolder; }. const char * GetClassName() const; { return fClassName.Data(); }. const char * GetKeyObjectName() const; { return fKeyObjectName.Data(); }. const char * GetKeyClassName() const; { return fKeyClassName.Data(); }. void SetFolder(Bool_t isFolder); { fIsFolder = isFolder; }. void SetKeyObjectName(const char* name); { fKeyObjectName = name; }. void SetKeyClassName(const char* name); { fKeyClassName = name; }. void SetRemoteAddress(Long_t addr); { fRemoteAddress = addr; }. » Author: Bertrand Bell",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRemoteObject.html:6423,Inherit,Inheritance,6423,root/html532/TRemoteObject.html,https://root.cern,https://root.cern/root/html532/TRemoteObject.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooLinkedList_altRangesOptional alternative ranges; Int_tRooSharedProperties::_inSharedList! Is in shared list; Int_tRooSharedProperties::_refCount! Use count; TUUIDRooSharedProperties::_uuidUnique object ID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategorySharedProperties(); Constructor. RooCategorySharedProperties(const char* uuidstr); Constructor with unique-id string. RooCategorySharedProperties(const RooCategorySharedProperties& other). ~RooCategorySharedProperties(); Destructor. RooSharedProperties* clone(); { return new RooCategorySharedProperties(*this) ; }. » Last changed: Tue Jun 2 15:29:51 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCategorySharedProperties.html:6605,Inherit,Inheritance,6605,root/html604/RooCategorySharedProperties.html,https://root.cern,https://root.cern/root/html604/RooCategorySharedProperties.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooCatType_cat; Double_t_thresh. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooThreshEntry(Double_t thresh, const RooCatType& cat); Constructor with threshold value and associated category value. RooThreshEntry(const RooThreshEntry& other); Copy constructor. Int_t Compare(const TObject* ) const; Implement TObject Compare() operator to facilitate sorting of; RooThreshEntry object in ROOT collection. Only comparison; to other RooThreshEntry objects is supported. inline RooThreshEntry(); {}. virtual ~RooThreshEntry(); {}. TObject* Clone(const char* ) const; { return new RooThreshEntry(*this); }. Bool_t IsSortable() const; { return kTRUE ; }. Double_t thresh() const; { return _thresh ; }. const RooCatType& cat() const; { return _cat ; }. » Last changed: Tue Jun 2 15:36:11 2015 » Last generated: 2015-06-02 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooThreshEntry.html:5776,Inherit,Inheritance,5776,root/html604/RooThreshEntry.html,https://root.cern,https://root.cern/root/html604/RooThreshEntry.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TLeaf&TLeaf::operator=(const TLeaf&). Data Members; public:. enum TLeaf::[unnamed] { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*TLeaf::fBranch! Pointer to supporting branch (we do not own the branch); Bool_tTLeaf::fIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tTLeaf::fIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*TLeaf::fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tTLeaf::fLenNumber of fixed length elements; Int_tTLeaf::fLenTypeNumber of bytes for this data type; Short_tfMaximumMaximum value if leaf range is specified; Short_tfMinimumMinimum value if leaf range is specified; TStringTNamed::fNameobject identifier; Int_tTLeaf::fNdata! Number of elements in fAddress data buffer; Int_tTLeaf::fOffsetOffset in ClonesArray object (if one); Short_t**fPointer!Address of pointer to data buffer; TStringTNamed::fTitleobject title; Short_t*fValue!Pointer to data buffer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafS(); Default constructor for LeafS*-*-*-*-*-*-*-*-; *-* ============================. TLeafS(TBranch* parent, const char* name, const char* type); Create a LeafS*-*-; *-* ==============; -. ~TLeafS(); Default destructor for a LeafS*-*-*-*-*-*-; *-* ===============================. void Export(TClonesArray* list, Int_t n); -*Export element from local leaf buffer to ClonesArray; *-* ====================================================. void FillBasket(TBuffer& b); -*-*-*-*Pack leaf elements in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLeafS.html:6997,variab,variable,6997,root/html528/TLeafS.html,https://root.cern,https://root.cern/root/html528/TLeafS.html,6,['variab'],['variable']
Modifiability,"::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TDSet::EStatusBits { kWriteV3; kEmpty; kValidityChecked; kSomeInvalid; kMultiDSet; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TDSetElement*TDSet::fCurrent! current element; TStringTDSet::fDirname of the directory; THashList*TDSet::fElements-> list of TDSetElements (or TDSets, if in multi mode); TIter*TDSet::fIterator! iterator on fElements; TStringTNamed::fNameobject identifier; TStringTDSet::fObjNamename of objects to be analyzed (e.g. TTree name); TList*TDSet::fSrvMaps! list for mapping server coordinates for files; TIter*TDSet::fSrvMapsIter! iterator on fSrvMaps; TStringTNamed::fTitleobject title; TStringTDSet::fTypetype of objects (e.g. TTree);. private:. TProofServ*fServ!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDSetProxy(); Constructor. TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); Constructor. void SetProofServ(TProofServ* serv); Set the reference TProofServ instance. void Reset(); Reset this instance. TDSetElement * Next(Long64_t totalEntries = -1); Get the next packet. » Author: Maarten Ballintijn 12/03/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id: TDSetProxy.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDSetProxy.html:8275,Inherit,Inheritance,8275,root/html532/TDSetProxy.html,https://root.cern,https://root.cern/root/html532/TDSetProxy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgrThe cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; RooArgSet*_curNormSet!; Double_t_cutOffCutoff parameter for running product; RooArgSet_defNormSetDefault normalization set; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Int_t_extendedIndexIndex of extended PDF (if any); Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAICRegistry_genCode! Registry of composite direct generator codes; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooProdPdf.html:45283,extend,extended,45283,root/html602/RooProdPdf.html,https://root.cern,https://root.cern/root/html602/RooProdPdf.html,4,['extend'],['extended']
Modifiability,"::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxyRooAbsHiddenReal::_stateProxy to hiding state category; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; RooRealProxy_value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooUnblindOffset.html:32411,config,configuration,32411,root/html526/RooUnblindOffset.html,https://root.cern,https://root.cern/root/html526/RooUnblindOffset.html,4,['config'],['configuration']
Modifiability,"::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypdf. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendedBinding(const char* name, const char* title, RooAbsPdf& _pdf). RooExtendedBinding(const RooExtendedBinding& other, const char* name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooExtendedBinding.html:34778,config,configuration,34778,root/html534/RooExtendedBinding.html,https://root.cern,https://root.cern/root/html534/RooExtendedBinding.html,2,['config'],['configuration']
Modifiability,"::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet_ownedClonedModelSetOwning set of cloned model components; RooArgSet_ownedClonedPdfSetOwning set of cloned PDF components; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_useWindowSwitch to activate window convolution; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; Int_t_verboseThreshCall count threshold for verbose printing; RooListProxy_windowParamHolder for optional convolution integration window scaling parameter; Double_t_windowScaleScale factor for window parameter; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumConvolution.html:35085,config,configuration,35085,root/html526/RooNumConvolution.html,https://root.cern,https://root.cern/root/html526/RooNumConvolution.html,2,['config'],['configuration']
Modifiability,"::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2Binding_double_double_int_.html:35591,config,configuration,35591,root/html534/RooCFunction2Binding_double_double_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2Binding_double_double_int_.html,2,['config'],['configuration']
Modifiability,"::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2Binding_double_int_double_.html:35591,config,configuration,35591,root/html534/RooCFunction2Binding_double_int_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2Binding_double_int_double_.html,2,['config'],['configuration']
Modifiability,"::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxy_paramSetSet of parameters to which constraints apply; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooListProxy_set1Set of constraint terms; TIterator*_setIter1! do not persist; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooConstraintSum(); Default constructor. RooConstraintSum(const char* name, const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooConstraintSum.html:36775,config,configuration,36775,root/html602/RooConstraintSum.html,https://root.cern,https://root.cern/root/html602/RooConstraintSum.html,4,['config'],['configuration']
Modifiability,"::_lastNSet!; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; static RooRealVarSharedProperties_nullPropNull property; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; static Bool_t_printScientific; static Int_t_printSigDigits; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooRealVarSharedProperties*_sharedProp! Shared properties associated with this instance; static RooSharedPropertiesList_sharedPropListList of properties shared among clone sets ; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealVar.html:39440,config,configuration,39440,root/html532/RooRealVar.html,https://root.cern,https://root.cern/root/html532/RooRealVar.html,2,['config'],['configuration']
Modifiability,"::_normRangeNormalization range of pdf; RooArgSet_otherVarsList of observables generated internally, randomly, and by accept/reject sampling; RooAbsPdf*_pdfCloneClone of input p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; TIterator*_uniIterIterator over uniform observables; RooArgSet_uniformVars; Int_t_updateFMaxPerEventIf true, maximum p.d.f value needs to be recalculated for each event; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGenContext(const RooAbsPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); Initialize a new context for generating events with the specified; variables, using the specified PDF model. A prototype dataset (if provided); is not cloned and still belongs to the caller. The contents and shape; of this dataset can be changed between calls to generate() as long as the; expected columns to be copied to the generated dataset are present.; Any argument supplied in the forceDirect RooArgSet are always offered; for internal generation to the p.d.f., even if this is deemed unsafe by; the logic of RooGenContext. ~RooGenContext(); Destructor. void attach(const RooArgSet& params); Attach the cloned model to the event buffer we will be filling. void initGenerator(const RooArgSet& theEvent); Perform one-time initialization of the generator context. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate one event. The 'remaining' integer is not used other than; for printing messages. void printMultiline(ostream& os,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGenContext.html:9576,variab,variables,9576,root/html528/RooGenContext.html,https://root.cern,https://root.cern/root/html528/RooGenContext.html,6,['variab'],['variables']
Modifiability,"::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/Roo2DKeysPdf.html:40760,config,configuration,40760,root/html532/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html532/Roo2DKeysPdf.html,28,['config'],['configuration']
Modifiability,"::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_tRooResolutionModel::_ownBasisFlag indicating ownership of _basis ; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxymsf; RooRealProxysigma; RooRealProxyssf; RooRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGaussModel.html:41238,config,configuration,41238,root/html528/RooGaussModel.html,https://root.cern,https://root.cern/root/html528/RooGaussModel.html,1,['config'],['configuration']
Modifiability,"::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_tRooResolutionModel::_ownBasisFlag indicating ownership of _basis ; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyrlife; RooRealProxyrsf; RooRealProxysigma; RooRealProxyssf; RooR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGExpModel.html:42112,config,configuration,42112,root/html528/RooGExpModel.html,https://root.cern,https://root.cern/root/html528/RooGExpModel.html,1,['config'],['configuration']
Modifiability,"::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; RooRealProxy_t; RooRealProxy_tau; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; RooDecay::DecayType_type; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooDecay.html:41145,config,configuration,41145,root/html530/RooDecay.html,https://root.cern,https://root.cern/root/html530/RooDecay.html,2,['config'],['configuration']
Modifiability,"::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; RooCategoryProxy_rhoQ; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; RooRealProxy_t; RooCategoryProxy_tag; RooRealProxy_tau; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; RooNonCPEigenDecay::DecayType_type; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_wQ; TStringTNamed::fNameobject identifier; TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNonCPEigenDecay.html:42511,config,configuration,42511,root/html530/RooNonCPEigenDecay.html,https://root.cern,https://root.cern/root/html530/RooNonCPEigenDecay.html,1,['config'],['configuration']
Modifiability,"::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; TIterator*_pdfObsIter! ; RooSetProxy_pdfObsListList of observables mapped onto histogram observables; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNormAssume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHistPdf.html:41544,config,configuration,41544,root/html532/RooHistPdf.html,https://root.cern,https://root.cern/root/html532/RooHistPdf.html,2,['config'],['configuration']
Modifiability,"::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxyc; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Heaviside(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _c). Heaviside(const RooStats::Heaviside& other, const char* name = 0). Double_t evaluate() const; ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE. Heaviside(); {}. TObject* clone(const char* newname) const; { return new Heaviside(*this,newname); }. virtual ~Heaviside(); { }. » Last changed: Tue Jun 2 15:34:23 2015 » Last generated: 2015-06-02 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__Heaviside.html:37009,Inherit,Inheritance,37009,root/html604/RooStats__Heaviside.html,https://root.cern,https://root.cern/root/html604/RooStats__Heaviside.html,3,"['Inherit', 'VARIAB']","['Inheritance', 'Inherited', 'VARIABLE']"
Modifiability,"::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooListProxy_set1Set of constraint terms; TIterator*_setIter1! do not persist; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooConstraintSum(); Default constructor. RooConstraintSum(const char* name, const char* title, const RooArgSet& constraintSet, const RooArgSet& paramSet); Constructor with set of constraint p.d.f.s. All elements in constraintSet must inherit from RooAbsPdf. RooConstraintSum(const RooConstraintSum& other, const char* name = 0); Copy constructor. ~RooConstraintSum(); Destructor. Double_t evaluate() const; Return sum of -log of constraint p.d.f.s. TObject* clone(const char* newname) const; { return new RooConstraintSum(*this, newname); }. » Last changed: Tue Dec 8 17:03:16 2009 » Last generated: 2009-12-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooConstraintSum.html:32877,inherit,inherit,32877,root/html526/RooConstraintSum.html,https://root.cern,https://root.cern/root/html526/RooConstraintSum.html,1,['inherit'],['inherit']
Modifiability,"::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; set<std::string>_statUncertParams; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBarlowBeestonLL(); _obs(""paramOfInterest"",""Parameters of interest"",this),; _par(""nuisanceParam"",""Nuisance parameters"",this,kFALSE,kFALSE),; Default constructor; Should only be used by proof.; _piter = _par.createIterator() ;; _oiter = _obs.createIterator() ;. RooBarlowBeestonLL(const char *name, const char *title, 				 RooAbsReal& nllIn /*, const RooArgSet& observables*/); _obs(""paramOfInterest"",""Parameters of interest"",this),; _par(""nuisanceParam"",""Nuisance parameters"",this,kFALSE,kFALSE),; Constructor of profile likelihood given input likelihood nll w.r.t; the given set of variables. The input log likelihood is minimized w.r.t; to all other variables of the likelihood at each evaluation and the; value of the global log likelihood minimum is always subtracted. RooBarlowBeestonLL(const RooStats::HistFactory::RooBarlowBeestonLL& other, const char* name = 0); _obs(""obs"",this,other._obs),; _par(""par"",this,other._par),; Copy constructor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html:36137,Inherit,Inheritance,36137,root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooCategorySharedProperties*_sharedProp! Shared properties associated with this instance; static RooSharedPropertiesList_sharedPropListList of properties shared among clone sets ; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsCategory::_treeVar! do not persist; TIterator*RooAbsCategory::_typeIter!; TObjArrayRooAbsCategory::_typesArray of allowed values; RooCatTypeRooAbsCategory::_valueCurrent value; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategory(). RooCategory(const char *name, const char *title); Constructor. Types must be defined using defineType() before variable can be used. RooCategory(const RooCategory& other, const char* name); Copy constructor. ~RooCategory(); Destructor. Bool_t setIndex(Int_t index, Bool_t printError = kTRUE); Set value by specifying the index code of the desired state.; If printError is set, a message will be printed if; the specified index does not represent a valid state. Bool_t setLabel(const char* label, Bool_t printError = kTRUE); Set value by specifying the name of the desired state; If printError is set, a message will be printed if; the specified label does not represent a valid state. Bool_t defineType(const char* label); Define a state with given name, the lowest available; positive integer is assigned as index. Category; state labels may not contain semicolons.; Error status is return if state with given name; is already defined. Bool_t defineType(const char* label, Int_t index); Define a state with given name and index. Category; state labels may not contain semicolons; Error status is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCategory.html:22211,variab,variable,22211,root/html526/RooCategory.html,https://root.cern,https://root.cern/root/html526/RooCategory.html,1,['variab'],['variable']
Modifiability,"::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooCategorySharedProperties*_sharedProp! Shared properties associated with this instance; static RooSharedPropertiesList_sharedPropListList of properties shared among clone sets ; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsCategory::_treeVar! do not persist; TIterator*RooAbsCategory::_typeIter!; TObjArrayRooAbsCategory::_typesArray of allowed values; RooCatTypeRooAbsCategory::_valueCurrent value; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategory(). RooCategory(const char* name, const char* title); Constructor. Types must be defined using defineType() before variable can be used. RooCategory(const RooCategory& other, const char* name = 0); Copy constructor. ~RooCategory(); Destructor. Bool_t setIndex(Int_t index, Bool_t printError = kTRUE); Set value by specifying the index code of the desired state.; If printError is set, a message will be printed if; the specified index does not represent a valid state. Bool_t setLabel(const char* label, Bool_t printError = kTRUE); Set value by specifying the name of the desired state; If printError is set, a message will be printed if; the specified label does not represent a valid state. Bool_t defineType(const char* label); Define a state with given name, the lowest available; positive integer is assigned as index. Category; state labels may not contain semicolons.; Error status is return if state with given name; is already defined. Bool_t defineType(const char* label, Int_t index); Define a state with given name and index. Category; state labels may not contain semicolons; Error status",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCategory.html:22339,variab,variable,22339,root/html528/RooCategory.html,https://root.cern,https://root.cern/root/html528/RooCategory.html,5,['variab'],['variable']
Modifiability,"::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:20 2015 »",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction1PdfBinding_double_int_.html:45409,Inherit,Inheritance,45409,root/html602/RooCFunction1PdfBinding_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction1PdfBinding_double_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:41:40 2015 » ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction1PdfBinding_double_int_.html:45409,Inherit,Inheritance,45409,root/html604/RooCFunction1PdfBinding_double_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction1PdfBinding_double_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:21:49 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction1Binding_double_double_.html:34696,variab,variable,34696,root/html530/RooCFunction1Binding_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction1Binding_double_double_.html,1,['variab'],['variable']
Modifiability,"::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:08 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction1Binding_double_double_.html:35075,variab,variable,35075,root/html532/RooCFunction1Binding_double_double_.html,https://root.cern,https://root.cern/root/html532/RooCFunction1Binding_double_double_.html,1,['variab'],['variable']
Modifiability,"::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:03:05 2015 » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction4PdfBinding_double_double_double_double_double_.html:44658,variab,variable,44658,root/html534/RooCFunction4PdfBinding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction4PdfBinding_double_double_double_double_double_.html,2,['variab'],['variable']
Modifiability,"::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:50 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_double_.html:46828,variab,variable,46828,root/html602/RooCFunction4PdfBinding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_double_.html,2,['variab'],['variable']
Modifiability,"::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooResolutionModel::xDependent/convolution variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddModel(). RooAddModel(const char* name, const char* title, const RooArgList& pdfList, const RooArgList& coefList, Bool_t ownPdfList = kFALSE); Generic constructor from list of PDFs and list of coefficients.; Each pdf list element (i) is paired with coefficient list element (i).; The number of coefficients must be either equal to the number of PDFs,; in which case extended MLL fitting is enabled, or be one less. All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal. RooAddModel(const RooAddModel& other, const char* name = 0); Copy constructor. ~RooAddModel(); Destructor. void fixCoefNormalization(const RooArgSet& refCoefNorm); By default the interpretation of the fraction coefficients is; performed in the contextual choice of observables. This makes the; shape of the p.d.f explicitly dependent on the choice of; observables. This method instructs RooAddPdf to freeze the; interpretation of the coefficients to be done in the given set of; observables. If frozen, fractions are automatically transformed; from the reference normalization set to the contextual normalization; set by ratios of integrals. void fixCoefRange(const char* rangeName); By default the interpretation of the fraction coefficients is; performed in the default range. This make the shape of a RooAddPdf; explicitly dependent on the ran",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAddModel.html:42985,extend,extended,42985,root/html526/RooAddModel.html,https://root.cern,https://root.cern/root/html526/RooAddModel.html,4,['extend'],['extended']
Modifiability,"::cleanBranchName() const; const RooRealVar*convVar() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tevaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Double_tgetCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidmakeCoefVarList(RooArgList&) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsAnaConvPdf.html:36147,extend,extended,36147,root/html602/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsAnaConvPdf.html,2,['extend'],['extended']
Modifiability,"::connect(const QObject* sender, const char* signal, const QObject* receiver, const char* member, Qt::ConnectionType = Qt::AutoConnection); static boolQObject::connect(const QObject* sender, const QMetaMethod& signal, const QObject* receiver, const QMetaMethod& method, Qt::ConnectionType type = Qt::AutoConnection); voidQObject::deleteLater(); boolQObject::disconnect(const QObject* receiver, const char* member = 0); boolQObject::disconnect(const char* signal = 0, const QObject* receiver = 0, const char* member = 0); static boolQObject::disconnect(const QObject* sender, const char* signal, const QObject* receiver, const char* member); static boolQObject::disconnect(const QObject* sender, const QMetaMethod& signal, const QObject* receiver, const QMetaMethod& member); voidQObject::dumpObjectInfo(); voidQObject::dumpObjectTree(); QList<QByteArray>QObject::dynamicPropertyNames() const; virtual boolQObject::event(QEvent*); virtual boolQObject::eventFilter(QObject*, QEvent*); boolQObject::inherits(const char* classname) const; voidQObject::installEventFilter(QObject*); boolQObject::isWidgetType() const; voidQObject::killTimer(int id); virtual const QMetaObject*QObject::metaObject() const; voidQObject::moveToThread(QThread* thread); QStringQObject::objectName() const; QObject*QObject::parent() const; QVariantQObject::property(const char* name) const; virtual intQObject::qt_metacall(QMetaObject::Call, int, void**); virtual void*QObject::qt_metacast(const char*); static uintQObject::registerUserData(); voidQObject::removeEventFilter(QObject*); voidQObject::setObjectName(const QString& name); voidQObject::setParent(QObject*); boolQObject::setProperty(const char* name, const QVariant& value); voidQObject::setUserData(uint id, QObjectUserData* data); boolQObject::signalsBlocked() const; intQObject::startTimer(int interval); QThread*QObject::thread() const; static QStringQObject::tr(const char* s, const char* c = 0); static QStringQObject::tr(const char* s, const char* c, int n); s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQCanvasMenu.html:1589,inherit,inherits,1589,root/html602/TQCanvasMenu.html,https://root.cern,https://root.cern/root/html602/TQCanvasMenu.html,4,['inherit'],['inherits']
Modifiability,"::cout << ""==> Start TMVAMulticlassApp"" << std::endl;; 52 if (myMethodList != """") {; 53 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) it->second = 0;; 54 ; 55 std::vector<TString> mlist = gTools().SplitString( myMethodList, ',' );; 56 for (UInt_t i=0; i<mlist.size(); i++) {; 57 std::string regMethod(mlist[i]);; 58 ; 59 if (Use.find(regMethod) == Use.end()) {; 60 std::cout << ""Method \"""" << regMethod << ""\"" not known in TMVA under this name. Choose among the following:"" << std::endl;; 61 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) std::cout << it->first << "" "" << std::endl;; 62 std::cout << std::endl;; 63 return;; 64 }; 65 Use[regMethod] = 1;; 66 }; 67 }; 68 ; 69 ; 70 // create the Reader object; 71 TMVA::Reader *reader = new TMVA::Reader( ""!Color:!Silent"" );; 72 ; 73 // create a set of variables and declare them to the reader; 74 // - the variable names must corresponds in name and type to; 75 // those given in the weight file(s) that you use; 76 Float_t var1, var2, var3, var4;; 77 reader->AddVariable( ""var1"", &var1 );; 78 reader->AddVariable( ""var2"", &var2 );; 79 reader->AddVariable( ""var3"", &var3 );; 80 reader->AddVariable( ""var4"", &var4 );; 81 ; 82 // book the MVA methods; 83 TString dir = ""dataset/weights/"";; 84 TString prefix = ""TMVAMulticlass"";; 85 ; 86 for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) {; 87 if (it->second) {; 88 TString methodName = TString(it->first) + TString("" method"");; 89 TString weightfile = dir + prefix + TString(""_"") + TString(it->first) + TString("".weights.xml"");; 90 // check if file existing (i.e. method has been trained); 91 if (!gSystem->AccessPathName( weightfile )); 92 // file exists; 93 reader->BookMVA( methodName, weightfile );; 94 else {; 95 std::cout << ""TMVAMultiClassApplication: Skip "" << methodName << "" since it has not been trained !"" << std::endl;; 96 it->second = 0;; 97 }; 98 }; 99 }; 100 ; 101 // book output histog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlassApplication_8C_source.html:2382,variab,variables,2382,doc/master/TMVAMulticlassApplication_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlassApplication_8C_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"::doEval ; (; RooFit::EvalContext & ; ctx); const. overrideprivatevirtual . Compute multiple values of Chebychev. ; Reimplemented from RooAbsReal.; Definition at line 107 of file RooChebychev.cxx. ◆ evalAnaInt(). double RooChebychev::evalAnaInt ; (; const double ; a, . const double ; b . ); const. private . ◆ evaluate(). double RooChebychev::evaluate ; (; ); const. overrideprivatevirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 78 of file RooChebychev.cxx. ◆ getAnalyticalIntegral(). Int_t RooChebychev::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 122 of file RooChebychev.cxx. ◆ IsA(). TClass * RooChebychev::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 55 of file RooChebychev.h. ◆ selectNormalizationRange(). void RooChebychev::selectNormalizationRange ; (; const char * ; rangeName = nullptr, . bool ; force = false . ). overridevirtual . Interface function to force use of a given normalization range to interpret function value. ; Needed for functions or p.d.f.s whose shape depends on the choice of normalization such as RooAddPdf ; Reimplemented from RooAbsReal.; Definition at line 66 of file RooChebychev.cxx. ◆ Streamer(). void RooChebychev::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:77243,config,configuration,77243,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,1,['config'],['configuration']
Modifiability,"::doEval ; (; RooFit::EvalContext & ; ctx); const. overrideprotectedvirtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 25 of file RooNormalizedPdf.cxx. ◆ evaluate(). double RooNormalizedPdf::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 73 of file RooNormalizedPdf.h. ◆ expectedEvents(). double RooNormalizedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooAbsPdf.; Definition at line 60 of file RooNormalizedPdf.h. ◆ extendMode(). ExtendMode RooNormalizedPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 59 of file RooNormalizedPdf.h. ◆ forceAnalyticalInt(). bool RooNormalizedPdf::forceAnalyticalInt ; (; const RooAbsArg & ; ); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 46 of file RooNormalizedPdf.h. ◆ getAnalyticalIntegralWN(). Int_t RooNormalizedPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const RooArgSet * ; , . const char * ; rangeName = nullptr . ); const. inlineoverridevirtual . Forward determination of analytical integration capabilities to input p.d.f. ; Reimplemented from RooAbsReal.; Definition at line 48 of file RooNormalizedPdf.h. ◆ getValV(). double RooNormalizedPdf::getValV ; (; const RooArgSet * ; nset); const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNormalizedPdf.html:75807,extend,extendMode,75807,doc/master/classRooNormalizedPdf.html,https://root.cern,https://root.cern/doc/master/classRooNormalizedPdf.html,1,['extend'],['extendMode']
Modifiability,"::fDenyDestroy! Deny-destroy count.; Bool_tTEveStraightLineSet::fDepthTest; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveStraightLineSet::Line_t*TEveStraightLineSet::fLastLine!; Color_tTAttLine::fLineColorline color; TEveChunkManagerTEveStraightLineSet::fLinePlex; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; TEveChunkManagerTEveStraightLineSet::fMarkerPlex; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveStraightLineSet::fOwnLinesIdsFlag specifying if id-objects are owned by the line-set; Bool_tTEveStraightLineSet::fOwnMarkersIdsFlag specifying if id-objects are owned by the line-set; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveStraightLineSet::fRnrLines; Bool_tTEveStraightLineSet::fRnrMarkers; Bool_tTEveElement::fRnrSelfRender this element.; Float_tfScaleCenter[3]; Bool_tTEveElement::fSelected!; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveScalableStraightLineSet.html:24726,variab,variable,24726,root/html528/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html528/TEveScalableStraightLineSet.html,1,['variab'],['variable']
Modifiability,"::fDenyDestroy! Deny-destroy count.; Bool_tTEveStraightLineSet::fDepthTest; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveStraightLineSet::Line_t*TEveStraightLineSet::fLastLine!; Color_tTAttLine::fLineColorline color; TEveChunkManagerTEveStraightLineSet::fLinePlex; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; TEveChunkManagerTEveStraightLineSet::fMarkerPlex; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveStraightLineSet::fOwnLinesIdsFlag specifying if id-objects are owned by the line-set; Bool_tTEveStraightLineSet::fOwnMarkersIdsFlag specifying if id-objects are owned by the line-set; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveStraightLineSet::fRnrLines; Bool_tTEveStraightLineSet::fRnrMarkers; Bool_tTEveElement::fRnrSelfRender this element.; Float_tfScaleCenter[3]; Bool_tTEveElement::fSelected!; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveScalableStraightLineSet.html:25266,variab,variable,25266,root/html530/TEveScalableStraightLineSet.html,https://root.cern,https://root.cern/root/html530/TEveScalableStraightLineSet.html,5,['variab'],['variable']
Modifiability,"::fEpochMonHistBepoch monitoring hitograms for background; vector<TH1*>TMVA::MethodANNBase::fEpochMonHistSepoch monitoring hitograms for signal; vector<TH1*>TMVA::MethodANNBase::fEpochMonHistWepoch monitoring hitograms for weights; TMVA::MethodANNBase::EEstimatorTMVA::MethodANNBase::fEstimator; TH1F*TMVA::MethodANNBase::fEstimatorHistTestmonitors convergence of independent test sample; TH1F*TMVA::MethodANNBase::fEstimatorHistTrainmonitors convergence of training sample; TStringTMVA::MethodANNBase::fEstimatorS; TMVA::TActivation*TMVA::MethodANNBase::fIdentityactivation for input and output layers; TMVA::TNeuronInput*TMVA::MethodANNBase::fInputCalculatorinput calculator for all neurons; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; TMatrixDTMVA::MethodANNBase::fInvHessianzjh; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in representative histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; TObjArray*TMVA::MethodANNBase::fNetworkTObjArray of TObjArrays representing network; TMVA::TActivation*TMVA::MethodANNBase::fOutputactivation function to be used for output layers, depending on estimator; Int_tTMVA::MethodANNBase::fRandomSeedrandom seed for initial synapse weights; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; vector<Int_t>TMVA::MethodANNBase::fRegulatorIdxindex to different priors from every synapses; vector<Double_t>TMVA::MethodANNBase::fRegulatorsthe priors as regulator; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class; TObjArray*TMVA::MethodANNBase::fSynapsesarray of pointers to synapses, no structural data; boolTMVA::MethodANNBase::fUseRegulatorzjh; TRandom3*TMVA::MethodANNBase::frgenrandom number generator for various uses.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodMLP.html:19264,layers,layers,19264,root/html528/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodMLP.html,1,['layers'],['layers']
Modifiability,"::fFillStylefill area style; TImage*fImageimage; const char*TVirtualPS::fImplicitCREscEscape symbol before enforced new line; Int_tTVirtualPS::fLenBufferBuffer length; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTVirtualPS::fNByteNumber of bytes written in the file (PDF); TStringTNamed::fNameobject identifier; Bool_tTVirtualPS::fPrintedTrue when a page must be printed; Int_tTVirtualPS::fSizBufferBuffer size; ofstream*TVirtualPS::fStreamFile stream identifier; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; TStringTNamed::fTitleobject title; Int_tfTypePostScript workstation type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TImageDump(); Default SVG constructor. TImageDump(const char* filename, Int_t type = -111); Initialize batch image interface. fname : image file name. The possible workstation types are:; 111 - Portrait; 112 - Landscape; 114 - preview, keep in memory (do not write on delete). void Open(const char* filename, Int_t type = -111); Open a image file. ~TImageDump(); destructor. void Close(Option_t* opt = """"); Close a image file. void DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Draw a Box. void DrawFrame(Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light); Draw a Frame around a box. mode = -1 the box looks as it is behind the screen; mode = 1 the box looks as it is in front of the screen; border is the border size in already pre-computed dark is the; color for the dark part of the frame light is the color for the light; part of the frame. void DrawPolyMarker(Int_t n, Float_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TImageDump.html:10761,Inherit,Inheritance,10761,root/html532/TImageDump.html,https://root.cern,https://root.cern/root/html532/TImageDump.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fNameTString fNameDefinition TFormula.h:67; TFormulaVariable::fArrayPosInt_t fArrayPosDefinition TFormula.h:69; TFormulaVariable::fValueDouble_t fValueDefinition TFormula.h:68; TFormulaThe Formula class.Definition TFormula.h:89; TFormula::fHessFuncPtrCallFuncSignature fHessFuncPtr! Function pointer, owned by the JIT.Definition TFormula.h:109; TFormula::GetParameterDouble_t GetParameter(const char *name) constReturns parameter value given by string.Definition TFormula.cxx:2833; TFormula::PrepareFormulaBool_t PrepareFormula(TString &formula)prepare the formula to be executed normally is called with fFormulaDefinition TFormula.cxx:1793; TFormula::fClingInitializedstd::atomic< Bool_t > fClingInitialized! Transient to force re-initializationDefinition TFormula.h:97; TFormula::GradientParvoid GradientPar(const Double_t *x, TFormula::CladStorage &result)Compute the gradient employing automatic differentiation.Definition TFormula.cxx:3222; TFormula::FillDefaultsvoid FillDefaults()Fill structures with default variables, constants and function shortcuts.Definition TFormula.cxx:902; TFormula::GetHessianFormulaTString GetHessianFormula() constDefinition TFormula.cxx:3602; TFormula::Clearvoid Clear(Option_t *option="""") overrideClear the formula setting expression to empty and reset the variables and parameters containers.Definition TFormula.cxx:767; TFormula::GetLinearPartconst TObject * GetLinearPart(Int_t i) constReturn linear part.Definition TFormula.cxx:2553; TFormula::InputFormulaIntoClingvoid InputFormulaIntoCling()Inputs formula, transfered to C++ code into Cling.Definition TFormula.cxx:876; TFormula::DoAddParametervoid DoAddParameter(const TString &name, Double_t value, bool processFormula)Adds parameter to known parameters.Definition TFormula.cxx:2743; TFormula::HandleLinearvoid HandleLinear(TString &formula)Handle linear functions defined with the operator ++.Definition TFormula.cxx:1735; TFormula::fClingNameTString fClingName! Unique name passed to Cling to define t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:153323,variab,variables,153323,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a horizontal frame widget as a C++ statement(s) on output stream out. TGFrame& operator=(const TGFrame&). TGCompositeFrame& operator=(const TGCompositeFrame&). TGHorizontalFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); { SetWindowName(); }. » Author: Fons Rademakers 03/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGHorizontalFrame.html:20648,Inherit,Inheritance,20648,root/html604/TGHorizontalFrame.html,https://root.cern,https://root.cern/root/html604/TGHorizontalFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SavePrimitive(ostream& out, Option_t* option = """"); Save a horizontal frame widget as a C++ statement(s) on output stream out. TGFrame& operator=(const TGFrame&). TGCompositeFrame& operator=(const TGCompositeFrame&). TGHorizontalFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); { SetWindowName(); }. » Author: Fons Rademakers 03/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGHorizontalFrame.html:20648,Inherit,Inheritance,20648,root/html602/TGHorizontalFrame.html,https://root.cern,https://root.cern/root/html602/TGHorizontalFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fNnumber of points; TStringTPolyMarker3D::fNamename of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionoptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringTEvePointSet::fTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEvePointSetProjected(); Default contructor. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); Set projection manager and projection model.; Virtual from TEveProjected. void SetDepthLocal(Float_t d); Set depth (z-coordinate) of the projected points. void UpdateProjection(); Re-apply the projection.; Virtual from TEveProjected. void PointSelected(Int_t id); Virtual method of base ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSetProjected.html:26642,variab,variables,26642,root/html528/TEvePointSetProjected.html,https://root.cern,https://root.cern/root/html528/TEvePointSetProjected.html,4,['variab'],['variables']
Modifiability,"::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TGTab*fTab; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Pixel_tTEveWindow::fgCurrentBackgroundColor; static UInt_tTEveWindow::fgMainFrameDefHeight; static UInt_tTEveWindow::fgMainFrameDefWidth; static Pixel_tTEveWindow::fgMiniBarBackgroundColor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveWindowTab(TGTab* tab, const char* n = ""TEveWindowTab"", const char* t = """"); Constructor.; If passed tab is 0, a defualt one is instantiated. ~TEveWindowTab(); Destructor. TGFrame* GetGUIFrame(); Return top-frame of this eve-window - the tab. TEveWindowSlot* NewSlot(); Create new frame-slot - a new tab. TEveCompositeFrame& operator=(const TEveWindowTab& ). Bool_t CanMakeNewSlots() const; { return kFALSE; }. TEveWindowTab(const TEveWindowTab& ). TGTab* GetTab() const; { return fTab; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveWindowTab.html:21621,Inherit,Inheritance,21621,root/html534/TEveWindowTab.html,https://root.cern,https://root.cern/root/html534/TEveWindowTab.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fPadPhi; Double_tTGLPlotPainter::fPadTheta; const Float_t*TGLPlotPainter::fPhysicalShapeColor; Int_tTGLPlotPainter::fSelectedPart; TGLSelectionBufferTGLPlotPainter::fSelection; Int_tTGLPlotPainter::fSelectionBase; Bool_tTGLPlotPainter::fSelectionPass; Bool_tTGLPlotPainter::fUpdateSelection; TAxis*TGLPlotPainter::fXAxis; Double_tTGLPlotPainter::fXOYSectionPos; Double_tTGLPlotPainter::fXOZSectionPos; TAxis*TGLPlotPainter::fYAxis; Double_tTGLPlotPainter::fYOZSectionPos; TAxis*TGLPlotPainter::fZAxis; vector<Double_t>TGLPlotPainter::fZLevels; static TGLPlotPainter::ESelectionBaseTGLPlotPainter::kHighColorSelectionBase; static TGLPlotPainter::ESelectionBaseTGLPlotPainter::kTrueColorSelectionBase. private:. vector<Int_t>fBinColors; TStringfBinInfoUsed by GetPlotInfo.; list<Rgl::Pad::Tesselation_t>fCapsCaps for all bins.; vector<Double_t>fPolygonTemporary array for polygon's vertices.; Bool_tfZLogChange in logZ updates only bin heights.; Double_tfZMin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLH2PolyPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Ctor. char * GetPlotInfo(Int_t px, Int_t py); Show number of bin and bin contents, if bin is under the cursor. Bool_t InitGeometry(); Tesselate polygons, if not done yet.; All pointers are validated here (and in functions called from here).; If any pointer is invalid - zero, or has unexpected type (dynamic_cast fails) -; InitGeometry will return false and nothing will be painted later.; That's why there are no checks in other functions. void StartPan(Int_t px, Int_t py); User clicks on a lego with middle mouse button (middle for pad). void Pan(Int_t px, Int_t py); Mouse events handler. void AddOption(const TString& stringOption); No additional options. void ProcessEvent(Int_t event, Int_t px, Int_t py); No events. void InitGL() const; Initialize some gl state variables. void DeInitGL() const; Return some gl states to original values. void DrawPlot() const; D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLH2PolyPainter.html:4652,Inherit,Inheritance,4652,root/html602/TGLH2PolyPainter.html,https://root.cern,https://root.cern/root/html602/TGLH2PolyPainter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fParamsPointer to Function parameters object (exusts only for not-formula functions); TObject*TF1::fParent!Parent object hooking this function (if one); vector<Double_t>TF1::fSaveArray of fNsave function values; TStringTNamed::fTitleobject title; Int_tTF1::fType(=0 for standard functions, 1 if pointer to function); Double_tTF1::fXmaxUpper bounds for the range; Double_tTF1::fXminLower bounds for the range; Double_tTF2::fYmaxUpper bound for the range in y; Double_tTF2::fYminLower bound for the range in y; Double_tfZmaxUpper bound for the range in z; Double_tfZminLower bound for the range in z; static Bool_tTF1::fgAbsValueuse absolute value of function when computing integral; static Bool_tTF1::fgAddToGlobListTrue if we want to register the function in the global list; static TF1*TF1::fgCurrentpointer to current function being processed; static Bool_tTF1::fgRejectPointTrue if point must be rejected in a fit; static TF1::(anonymous)TF1::kNotGlobal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TF3(); F3 default constructor*-*-*-*-*-*-; *-* ======================. TF3(const char* name, const char* formula, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1, Double_t zmin = 0, Double_t zmax = 1); F3 constructor using a formula definition*-*-*-*-; *-* =========================================; -; *-* See TFormula constructor for explanation of the formula syntax.; -; -; -. TF3(const char *name,Double_t (*fcn)(Double_t *, Double_t *), Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Double_t zmin, Double_t zmax, Int_t npar,Int_t ndim); F3 constructor using a pointer to real function*-; *-* ===============================================; -; *-* npar is the number of free parameters used by the function; -; *-* For example, for a 3-dim function with 3 parameters, the user function; *-* looks like:; *-* Double_t fun1(Double_t *x, Double_t *par); *-* return par[0]*x[2] + par[1]*exp(par[2]*x[0]*x[1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF3.html:23546,Inherit,Inheritance,23546,root/html604/TF3.html,https://root.cern,https://root.cern/root/html604/TF3.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fProcessedRun! Events processed in this run; TProofProgressStatus*TProofPlayer::fProgressStatusthe progress status object;; TQueryResult*TProofPlayer::fQueryInstance of TQueryResult currently processed; TList*TProofPlayer::fQueryResultsList of TQueryResult; Long64_tTProofPlayer::fReadBytesRun! Bytes read in this run; Long64_tTProofPlayer::fReadCallsRun! Read calls in this run; Long_tTProofPlayer::fSaveMemThresholdThreshold for saving output to file; Bool_tTProofPlayer::fSavePartialResultsWhether to save the partial results; Bool_tTProofPlayer::fSaveResultsPerPacketWhether to save partial results after each packet; TStatus*TProofPlayer::fSelStatus! status of query in progress; TSelector*TProofPlayer::fSelector! the latest selector; TClass*TProofPlayer::fSelectorClass! class of the latest selector; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*TProofPlayer::fStopTimerTimer associated with a stop request; TMutex*TProofPlayer::fStopTimerMtxTo protect the stop timer; Long64_tTProofPlayer::fTotalEventsnumber of events requested; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*TProofPlayer::fgDrawInputParsList of input parameters to be kept on drawing actions. private:. TList*fFeedbackList of objects to send updates of; TSocket*fSocket. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupFeedback(); Setup feedback. void StopFeedback(); Stop feedback. Bool_t HandleTimer(TTimer* timer); Handle timer event. void HandleGetTreeHeader(TMessage* mess); Handle tree header request. TProofPlayerSlave(TSocket* socket = 0); { }. » Author: Maarten Ballintijn 07/01/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-03 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofPlayerSlave.html:17494,Inherit,Inheritance,17494,root/html604/TProofPlayerSlave.html,https://root.cern,https://root.cern/root/html604/TProofPlayerSlave.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fProcessedRun! Events processed in this run; TProofProgressStatus*TProofPlayer::fProgressStatusthe progress status object;; TQueryResult*TProofPlayer::fQueryInstance of TQueryResult currently processed; TList*TProofPlayer::fQueryResultsList of TQueryResult; Long64_tTProofPlayer::fReadBytesRun! Bytes read in this run; Long64_tTProofPlayer::fReadCallsRun! Read calls in this run; Long_tTProofPlayer::fSaveMemThresholdThreshold for saving output to file; Bool_tTProofPlayer::fSavePartialResultsWhether to save the partial results; Bool_tTProofPlayer::fSaveResultsPerPacketWhether to save partial results after each packet; TStatus*TProofPlayer::fSelStatus! status of query in progress; TSelector*TProofPlayer::fSelector! the latest selector; TClass*TProofPlayer::fSelectorClass! class of the latest selector; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*TProofPlayer::fStopTimerTimer associated with a stop request; TMutex*TProofPlayer::fStopTimerMtxTo protect the stop timer; Long64_tTProofPlayer::fTotalEventsnumber of events requested; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*TProofPlayer::fgDrawInputParsList of input parameters to be kept on drawing actions. private:. TList*fFeedbackList of objects to send updates of; TSocket*fSocket. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupFeedback(); Setup feedback. void StopFeedback(); Stop feedback. Bool_t HandleTimer(TTimer* timer); Handle timer event. void HandleGetTreeHeader(TMessage* mess); Handle tree header request. TProofPlayerSlave(TSocket* socket = 0); { }. » Author: Maarten Ballintijn 07/01/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-04 16:54; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPlayerSlave.html:16559,Inherit,Inheritance,16559,root/html534/TProofPlayerSlave.html,https://root.cern,https://root.cern/root/html534/TProofPlayerSlave.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fProcessedRun! Events processed in this run; TProofProgressStatus*TProofPlayer::fProgressStatusthe progress status object;; TQueryResult*TProofPlayer::fQueryInstance of TQueryResult currently processed; TList*TProofPlayer::fQueryResultsList of TQueryResult; Long64_tTProofPlayer::fReadBytesRun! Bytes read in this run; Long64_tTProofPlayer::fReadCallsRun! Read calls in this run; Long_tTProofPlayer::fSaveMemThresholdThreshold for saving output to file; Bool_tTProofPlayer::fSavePartialResultsWhether to save the partial results; Bool_tTProofPlayer::fSaveResultsPerPacketWhether to save partial results after each packet; TStatus*TProofPlayer::fSelStatus! status of query in progress; TSelector*TProofPlayer::fSelector! the latest selector; TClass*TProofPlayer::fSelectorClass! class of the latest selector; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*TProofPlayer::fStopTimerTimer associated with a stop request; TMutex*TProofPlayer::fStopTimerMtxTo protect the stop timer; Long64_tTProofPlayer::fTotalEventsnumber of events requested; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*TProofPlayer::fgDrawInputParsList of input parameters to be kept on drawing actions. private:. TList*fFeedbackList of objects to send updates of; TSocket*fSocket. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupFeedback(); Setup feedback. void StopFeedback(); Stop feedback. Bool_t HandleTimer(TTimer* timer); Handle timer event. void HandleGetTreeHeader(TMessage* mess); Handle tree header request. TProofPlayerSlave(TSocket* socket = 0); { }. » Author: Maarten Ballintijn 07/01/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofPlayerSlave.html:17411,Inherit,Inheritance,17411,root/html602/TProofPlayerSlave.html,https://root.cern,https://root.cern/root/html602/TProofPlayerSlave.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fSignalsBlocked! flag used for suppression of signals; TGTextEntry*fTitleSlice label; TGNumberEntry*fValueValue of the slice; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TPieSlice*fPieSlice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPieSliceEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); TPieSliceEditor constructor. ~TPieSliceEditor(); TPieSliceEditor destructor. void SetModel(TObject* ); Set model. void ConnectSignals2Slots(); Connect signals to slots. void DoTitle(const char* ); Slot for setting the graph title. void DoValue(); Slot for setting the graph title. void DoOffset(); Slot for setting the graph title. » Author: Guido Volpi 05/18/2008 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: Thu Nov 3 20:21:18 2011 » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPieSliceEditor.html:19828,Inherit,Inheritance,19828,root/html532/TPieSliceEditor.html,https://root.cern,https://root.cern/root/html532/TPieSliceEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, TString options = ""a"", Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; from dataset 'data'. Options can be. 'a' = Use adaptive kernels (width varies with local event density); 'm' = Mirror data points over observable boundaries. Improves modeling; behavior at edges for distributions that are not close to zero; at edge; 'd' = Debug flag; 'v' = Verbose flag. The parameter rho (default = 1) provides an overall scale factor that can; be applied to the bandwith calculated for each kernel. The nSigma parameter; determines the size of the box that is used to search for contributing kernels; around a given point in observable space. The nSigma parameters is used; in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; the calculation of adaptive keys p.d.f.s. The optional weight arguments allows to specify an observable or function; expression in observables that specifies the weight of each event. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooDataSet& data, RooNDKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for (1-dim) RooKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooAbsReal& y, RooDataSet& data, TString options = ""a"", Double_t rho = 1.0, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for Roo2DKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const RooNDKeysPdf& other, const char* name = 0); Constructor. ~RooNDKeysPdf(). createPdf(Bool_t firstCall = kTRUE) const; evaluation order of constructor. se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNDKeysPdf.html:44104,adapt,adaptive,44104,root/html528/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html528/RooNDKeysPdf.html,12,['adapt'],['adaptive']
Modifiability,"::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, TString options = ""a"", Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; from dataset 'data'. Options can be. 'a' = Use adaptive kernels (width varies with local event density); 'm' = Mirror data points over observable boundaries. Improves modeling; behavior at edges for distributions that are not close to zero; at edge; 'd' = Debug flag; 'v' = Verbose flag. The parameter rho (default = 1) provides an overall scale factor that can; be applied to the bandwith calculated for each kernel. The nSigma parameter; determines the size of the box that is used to search for contributing kernels; around a given point in observable space. The nSigma parameters is used; in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; the calculation of adaptive keys p.d.f.s. The optional weight arguments allows to specify an observable or function; expression in observables that specifies the weight of each event. RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, const TVectorD& rho, TString options = ""a"", Double_t nSigma = 3, Bool_t rotate = kTRUE); Constructor. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooDataSet& data, RooNDKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for (1-dim) RooKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooAbsReal& y, RooDataSet& data, TString options = ""a"", Double_t rho = 1., Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for Roo2DKeysPdf. If you are a new user,; please use the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNDKeysPdf.html:49556,adapt,adaptive,49556,root/html602/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html602/RooNDKeysPdf.html,12,['adapt'],['adaptive']
Modifiability,"::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, TString options = ""a"", Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; from dataset 'data'. Options can be. 'a' = Use adaptive kernels (width varies with local event density); 'm' = Mirror data points over observable boundaries. Improves modeling; behavior at edges for distributions that are not close to zero; at edge; 'd' = Debug flag; 'v' = Verbose flag. The parameter rho (default = 1) provides an overall scale factor that can; be applied to the bandwith calculated for each kernel. The nSigma parameter; determines the size of the box that is used to search for contributing kernels; around a given point in observable space. The nSigma parameters is used; in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; the calculation of adaptive keys p.d.f.s. The optional weight arguments allows to specify an observable or function; expression in observables that specifies the weight of each event. RooNDKeysPdf(const char* name, const char* title, const RooArgList& varList, RooDataSet& data, const TVectorD& rho, TString options = ""a"", Double_t nSigma = 3, Bool_t rotate = kTRUE); Constructor. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooDataSet& data, RooNDKeysPdf::Mirror mirror = NoMirror, Double_t rho = 1, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for (1-dim) RooKeysPdf. If you are a new user,; please use the first constructor form. RooNDKeysPdf(const char* name, const char* title, RooAbsReal& x, RooAbsReal& y, RooDataSet& data, TString options = ""a"", Double_t rho = 1.0, Double_t nSigma = 3, Bool_t rotate = kTRUE); Backward compatibility constructor for Roo2DKeysPdf. If you are a new user,; please use th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNDKeysPdf.html:47646,adapt,adaptive,47646,root/html534/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html534/RooNDKeysPdf.html,6,['adapt'],['adaptive']
Modifiability,"::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. private:. vector<TGLTH3Composition::TH3Pair_t>fHists; auto_ptr<TGLHistPainter>fPainter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTH3Composition(); I have to define it, since explicit copy ctor was declared. void AddTH3(const TH3* hist, TGLTH3Composition::ETH3BinShape shape = kBox); Add TH3 into collection. Throw if fHists is not empty; but ranges are not equal. Int_t DistancetoPrimitive(Int_t px, Int_t py); Check if ""this"" is under cursor. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Mouse and keyboard events. char * GetObjectInfo(Int_t px, Int_t py) const; I cannot show bin content in a status bar -; since there can be several bins in one. void Paint(Option_t* option); Paint a composition of 3d hists. TGLTH3Composition(). void CheckRanges(const TH3* hist). » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLTH3Composition.html:29565,Inherit,Inheritance,29565,root/html604/TGLTH3Composition.html,https://root.cern,https://root.cern/root/html604/TGLTH3Composition.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fTitleobject title; Double_tTH1::fTsumwTotal Sum of weights; Double_tTH1::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. private:. vector<TGLTH3Composition::TH3Pair_t>fHists; auto_ptr<TGLHistPainter>fPainter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTH3Composition(); I have to define it, since explicit copy ctor was declared. void AddTH3(const TH3* hist, TGLTH3Composition::ETH3BinShape shape = kBox); Add TH3 into collection. Throw if fHists is not empty; but ranges are not equal. Int_t DistancetoPrimitive(Int_t px, Int_t py); Check if ""this"" is under cursor. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Mouse and keyboard events. char * GetObjectInfo(Int_t px, Int_t py) const; I cannot show bin content in a status bar -; since there can be several bins in one. void Paint(Option_t* option); Paint a composition of 3d hists. TGLTH3Composition(). void CheckRanges(const TH3* hist). » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:54; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLTH3Composition.html:29565,Inherit,Inheritance,29565,root/html602/TGLTH3Composition.html,https://root.cern,https://root.cern/root/html602/TGLTH3Composition.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TBuffer*TTree::fTransientBuffer! Pointer to the current transient buffer.; TTree*fTree! Pointer to current tree (Note: We do *not* own this tree.); TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tfTreeNumber! Current Tree number in fTreeOffset table; Long64_t*fTreeOffset[fTreeOffsetLen] Array of variables; Int_tfTreeOffsetLenCurrent size of fTreeOffset array; Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TChain(); -- Default constructor. TChain(const char* name, const char* title = """"); -- Create a chain. A TChain is a collection of TFile objects.; the first parameter ""name"" is the name of the TTree object; in the files added with Add.; Use TChain::Add to add a new element to this chain. In case the Tree is in a subdirectory, do, eg:; TChain ch(""subdir/treename"");. Example:; Suppose we have 3 files f1.root, f2.root and f3.root. Each file; contains a TTree object named ""T"".; TChain ch(""T""); creates a chain to process a Tree called ""T""; ch.Add(""f1.root"");; ch.Add(""f2.root"");; ch.Add(""f3.root"");; ch.Draw(""x"");; The Draw function above will process the variable ""x"" in Tree ""T""; reading sequentially the 3 files in the chain ch. The TChain data structure; Each TChainElement has a name equal to the tree name of this TChain; and a title equal to the file name. So, to loop over the; TFiles that have been added to this chain:. TObjArray *fileEle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TChain.html:26562,Inherit,Inheritance,26562,root/html532/TChain.html,https://root.cern,https://root.cern/root/html532/TChain.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fTsumw2Total Sum of squares of weights; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH1C(); Constructor. TH1C(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup). Create a 1-Dim histogram with fix bins of type char (one byte per channel). (see TH1::TH1 for explanation of parameters). TH1C(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins). Create a 1-Dim histogram with variable bins of type char (one byte per channel). (see TH1::TH1 for explanation of parameters). TH1C(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins). Create a 1-Dim histogram with variable bins of type char (one byte per channel). (see TH1::TH1 for explanation of parameters). ~TH1C(); Destructor. TH1C(const TH1C& h1c); Copy constructor. void AddBinContent(Int_t bin); -*-*-*-*-*-*-*-*Increment bin content by 1*-*-*-*-*-*-*-*-*-*-*-*-*-*. void AddBinContent(Int_t bin, Double_t w); -*-*-*-*-*-*-*-*Increment bin content by w*-*-*-*-*-*-*-*-*-*-*-*-*-*. void Copy(TObject& hnew) const; Copy this to newth1. TH1 * DrawCopy(Option_t* option = """") const; Draw copy. Double_t GetBinContent(Int_t bin) const; see convention for numbering bins in TH1::GetBin. void Reset(Option_t* option = """"); Reset. void SetBinContent(Int_t bin, Double_t content); Set bin content; see convention for numbering bins in TH1::GetBin; In case the bin number is greater than the number of bins and; the tim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1C.html:22328,variab,variable,22328,root/html528/TH1C.html,https://root.cern,https://root.cern/root/html528/TH1C.html,6,['variab'],['variable']
Modifiability,"::fWMMinHeightWM min height; UInt_tTGMainFrame::fWMMinWidthWM min width; UInt_tTGMainFrame::fWMWidthWM width; UInt_tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TObject*fgSelectedObjSelected object; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TObject * GetSelected(); static; return selected object. ~TGeoTreeDialog(); Destructor. void DoSelect(TGListTreeItem* item); Update dialog to reflect current clicked object. void BuildListTree(). void ConnectSignalsToSlots(). void DoClose(); Slots. void DoItemClick(TGListTreeItem* item, Int_t btn). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTabManager.h 21565 2007-12-28 12:28:46Z brun $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTreeDialog.html:22794,Inherit,Inheritance,22794,root/html532/TGeoTreeDialog.html,https://root.cern,https://root.cern/root/html532/TGeoTreeDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; Double_t*fZiInitial Z positions; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPconEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for polycone editor. ~TGeoPconEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to a given pcon. void CreateSections(Int_t inew); Change dynamically the number of sections. Bool_t CheckSections(Bool_t change = kFALSE); Check validity of sections. void UpdateSections(); Update sections according fShape. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoSectionChange(Int_t i); Change parameters of section isect;. void DoNz(); Change number of sections. void DoPhi(); Change phi range. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void CreateEdges(); {;}. » Auth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPconEditor.html:21102,Inherit,Inheritance,21102,root/html532/TGeoPconEditor.html,https://root.cern,https://root.cern/root/html532/TGeoPconEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXframe x position; Double_tfXiInitial X; Int_tTGFrame::fYframe y position; Double_tfYiInitial Y; Double_tfZiInitial Z; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoParaEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for para editor. ~TGeoParaEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoX(); Slot for X. void DoY(); Slot for Y. void DoZ(); Slot for Z. void DoAlpha(); Slot for alpha. void DoTheta(); Slot for theta. void DoPhi(); Slot for phi. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:39; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoParaEditor.html:20829,Inherit,Inheritance,20829,root/html534/TGeoParaEditor.html,https://root.cern,https://root.cern/root/html534/TGeoParaEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXframe x position; Double_tfXiInitial X; Int_tTGFrame::fYframe y position; Double_tfYiInitial Y; Double_tfZiInitial Z; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoParaEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for para editor. ~TGeoParaEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoX(); Slot for X. void DoY(); Slot for Y. void DoZ(); Slot for Z. void DoAlpha(); Slot for alpha. void DoTheta(); Slot for theta. void DoPhi(); Slot for phi. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoParaEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:17; This page has been automat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoParaEditor.html:20810,Inherit,Inheritance,20810,root/html532/TGeoParaEditor.html,https://root.cern,https://root.cern/root/html532/TGeoParaEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXframe x position; Int_tTGFrame::fYframe y position; TGLabel*fZelemLabel for Z; Int_tTGeoMaterialEditor::fZiInitial Z; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMixtureEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for mixture editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected mixture. void DoChkFraction(); Check button state changed for fraction. void DoChkNatoms(); Check button state changed for natoms. void DoFraction(); Fraction changed. void DoNatoms(); Natoms changed. void DoSelectElement(Int_t iel); Slot for selecting an element. void DoAddElem(); Slot for adding an element. No undo. void DoApply1(); Slot for applying modifications. void DoUndo1(); Slot for undoing all changes. void UpdateElements(); Update the list of elements in the TGCanvas. virtual ~TGeoMixtureEditor(); {}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:39;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoMixtureEditor.html:22457,Inherit,Inheritance,22457,root/html534/TGeoMixtureEditor.html,https://root.cern,https://root.cern/root/html534/TGeoMixtureEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXframe x position; Int_tTGFrame::fYframe y position; TGLabel*fZelemLabel for Z; Int_tTGeoMaterialEditor::fZiInitial Z; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMixtureEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for mixture editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected mixture. void DoChkFraction(); Check button state changed for fraction. void DoChkNatoms(); Check button state changed for natoms. void DoFraction(); Fraction changed. void DoNatoms(); Natoms changed. void DoSelectElement(Int_t iel); Slot for selecting an element. void DoAddElem(); Slot for adding an element. No undo. void DoApply1(); Slot for applying modifications. void DoUndo1(); Slot for undoing all changes. void UpdateElements(); Update the list of elements in the TGCanvas. virtual ~TGeoMixtureEditor(); {}. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoMaterialEditor.h 32718 2010-03-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMixtureEditor.html:22438,Inherit,Inheritance,22438,root/html532/TGeoMixtureEditor.html,https://root.cern,https://root.cern/root/html532/TGeoMixtureEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGroupFrame(const TGWindow* p, TGString* title, UInt_t options = kVerticalFrame, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); Create a group frame. The title will be adopted and deleted by the; group frame. TGGroupFrame(const TGWindow* p = 0, const char* title = 0, UInt_t options = kVerticalFrame, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), Pixel_t back = GetDefaultFrameBackground()); Create a group frame. ~TGGroupFrame(); Delete a group frame. TGDimension GetDefaultSize() const; Returns default size. void DoRedraw(); Redraw the group frame. Need special DoRedraw() since we need to; redraw with fBorderWidth=0. void SetTextColor(Pixel_t color, Bool_t local = kTRUE); Changes text color.; If local is true color is changed locally, otherwise - globally. void SetTextFont(FontStruct_t font, Bool_t local = kTRUE); Changes text ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGGroupFrame.html:20897,Inherit,Inheritance,20897,root/html532/TGGroupFrame.html,https://root.cern,https://root.cern/root/html532/TGGroupFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGC; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTab(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Create tab widget. ~TGTab(); Delete tab widget. This deletes the tab windows and the containers.; The tab string is deleted by the TGTabElement dtor. TGCompositeFrame * AddTab(TGString* text); Add a tab to the tab widget. Returns the new container, which; is owned by the tab widget. The text is adopted by the tab widget. TGCompositeFrame * AddTab(const char* text); Add a tab to the tab widget. Returns the new container. The container; is owned by the tab widget. void AddTab(const char* text, TGCompositeFrame* cf); Add a tab to the tab widget and fill it with given TGCompositeFrame. void AddTab(TGString* text, TGCompositeFrame* cf); Add a tab to the tab widget and fill it with given TGCompositeFrame. void RemoveTab(Int_t tabInde",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTab.html:21103,Inherit,Inheritance,21103,root/html532/TGTab.html,https://root.cern,https://root.cern/root/html532/TGTab.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXtoPixelxpixel = fXtoPixelk + fXtoPixel*xworld; Double_tTPad::fXtoPixelkConversion coefficient for X World to pixel; Double_tTPad::fY1Y of lower Y coordinate; Double_tTPad::fY2Y of upper Y coordinate; Float_tTAttPad::fYfileY position where to draw the file name; Double_tTPad::fYlowNDCY bottom left corner of pad in NDC [0,1]; Size_tTCanvas::fYsizeRealCurrent size of canvas along Y in CM; Size_tTCanvas::fYsizeUserUser specified size of canvas along Y in CM; Float_tTAttPad::fYstatY position where to draw the statistics; Double_tTPad::fYtoAbsPixelkConversion coefficient for Y World to absolute pixel; Double_tTPad::fYtoPixelypixel = fYtoPixelk + fYtoPixel*yworld; Double_tTPad::fYtoPixelkConversion coefficient for Y World to pixel; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTCanvas::fgIsFolderIndicates if canvas can be browsed as a folder; static Int_tTPad::fgMaxPickDistanceMaximum Pick Distance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDialogCanvas(); -*DialogCanvas default constructor; *-* ================================. TDialogCanvas(const char* name, const char* title, Int_t ww, Int_t wh); DialogCanvas constructor*-*-*-; *-* ========================. TDialogCanvas(const char* name, const char* title, Int_t wtopx, Int_t wtopy, UInt_t ww, UInt_t wh); DialogCanvas constructor*-*-*-; *-* ========================. ~TDialogCanvas(); DialogCanvas default destructor*-; *-* ===============================. void Apply(const char* action = """"); Called when the APPLY button is executed*-*-; *-* ========================================. void BuildStandardButtons(); Create APPLY, gStyle and CLOSE buttons*-*-; *-* ======================================. void Range(Double_t x1, Double_t y1, Double_t x2, Double_t y2); -*-*-*-*Set world coordinate system for the pad; *-* =======================================. void RecursiveRemove(TObject* obj); -*-*-*Recursively remove object ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDialogCanvas.html:35506,Inherit,Inheritance,35506,root/html532/TDialogCanvas.html,https://root.cern,https://root.cern/root/html532/TDialogCanvas.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fXtoPixelxpixel = fXtoPixelk + fXtoPixel*xworld; Double_tTPad::fXtoPixelkConversion coefficient for X World to pixel; Double_tTPad::fY1Y of lower Y coordinate; Double_tTPad::fY2Y of upper Y coordinate; Float_tTAttPad::fYfileY position where to draw the file name; Double_tTPad::fYlowNDCY bottom left corner of pad in NDC [0,1]; Size_tTCanvas::fYsizeRealCurrent size of canvas along Y in CM; Size_tTCanvas::fYsizeUserUser specified size of canvas along Y in CM; Float_tTAttPad::fYstatY position where to draw the statistics; Double_tTPad::fYtoAbsPixelkConversion coefficient for Y World to absolute pixel; Double_tTPad::fYtoPixelypixel = fYtoPixelk + fYtoPixel*yworld; Double_tTPad::fYtoPixelkConversion coefficient for Y World to pixel; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTCanvas::fgIsFolderIndicates if canvas can be browsed as a folder; static Int_tTPad::fgMaxPickDistanceMaximum Pick Distance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TInspectCanvas(); InspectCanvas default constructor. TInspectCanvas(UInt_t ww, UInt_t wh); InspectCanvas constructor. ~TInspectCanvas(); InspectCanvas default destructor. void InspectObject(TObject* obj); Dump contents of obj in a graphics canvas.; Same action as TObject::Dump but in a graphical form.; In addition pointers to other objects can be followed. The following picture is the Inspect of a histogram object:. /*; ; */. void GoBackward(); static function , inspect previous object. void GoForward(); static function , inspect next object. void Inspector(TObject* obj); static function , interface to InspectObject.; Create the InspectCanvas if it does not exist yet. void RecursiveRemove(TObject* obj); Recursively remove object from the list of objects. void Divide(Int_t nx = 1, Int_t ny = 1, Float_t xmargin = 0.01, Float_t ymargin = 0.01, Int_t color = 0); { }. void SetGrid(Int_t valuex = 1, Int_t valuey = 1); { }. void SetGridx(Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TInspectCanvas.html:35111,Inherit,Inheritance,35111,root/html532/TInspectCanvas.html,https://root.cern,https://root.cern/root/html532/TInspectCanvas.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static const TGFont*TGTextButton::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGC; static const TGGC*TGButton::fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGButton::fgHibckgndGC; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static Window_tTGButton::fgReleaseBtnthe last released button; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGCheckButton(const TGWindow* p, TGHotString* s, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); Create a check button widget. The hotstring will be adopted and deleted; by the check button. TGCheckButton(const TGWindow* p = 0, const char* s = 0, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); Create a check button widget. TGCheckButton(const TGWindow* p, const char* s, const char* cmd, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); Create a check button widget. void Init(); Common check button initialization. ~TGCheckButton(); Delete a check button. TGDimension GetDefaultSize() const; default size. void SetState(EButtonState state, Bool_t emit = kFALSE); Set check button state. void EmitSignals(Bool_t wasUp = kTRUE); Emit signals. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGCheckButton.html:25861,Inherit,Inheritance,25861,root/html602/TGCheckButton.html,https://root.cern,https://root.cern/root/html602/TGCheckButton.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static const TGFont*TGTextButton::fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*fgDefaultGC; static const TGGC*TGButton::fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGButton::fgHibckgndGC; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static Window_tTGButton::fgReleaseBtnthe last released button; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGRadioButton(const TGWindow* p, TGHotString* s, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); Create a radio button widget. The hotstring will be adopted and deleted; by the radio button. TGRadioButton(const TGWindow* p = 0, const char* s = 0, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); Create a radio button widget. TGRadioButton(const TGWindow* p, const char* s, const char* cmd, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); Create a radio button widget. void Init(); Common radio button initialization. ~TGRadioButton(); Delete a radio button. TGDimension GetDefaultSize() const; default size. void SetState(EButtonState state, Bool_t emit = kFALSE); Set radio button state. void SetDisabledAndSelected(Bool_t ); Set the state of a ra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGRadioButton.html:25851,Inherit,Inheritance,25851,root/html602/TGRadioButton.html,https://root.cern,https://root.cern/root/html602/TGRadioButton.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::fgBlackPixel; static TContextMenu*fgContextMenu; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static TStringTVirtualPadEditor::fgEditorNamename of the default pad editor ""Ged""; static TList*fgExtraEditors; static TGedEditor*TGedEditor::fgFrameCreator; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static Int_tfgMaxExtraEditors; static TVirtualPadEditor*TVirtualPadEditor::fgPadEditorsingleton editor dialog; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGedEditor(TCanvas* canvas = 0, UInt_t width = 250, UInt_t height = 400); Constructor. ~TEveGedEditor(); Destructor. void CloseWindow(); Called from window-manger close button.; Unregister from global list and delete the window. void DeleteWindow(); This is exact clone of TGFrame::DeleteWindow().; Needs to be overriden together with CloseWindow() otherwise CINT; goes kaboom in timer execution. TGedFrame* CreateNameFrame(const TGWindow* parent, const char* tab_name); Create name-frame for a tab. TEveElement* GetEveElement() const; Return eve-element if it is the model object. void DisplayElement(TEveElement* re); Show a TEveElement in editor. void DisplayObject(TObject* obj); Show a TObject in editor. void SetModel(TVirtualPad* pad, TObject* obj, Int_t event); Set model object. void Update(TGedFrame* gframe = 0); Virtual method from TGedEditor, called on every change.; Propagates changes to TEveElement and TEveManager. void SpawnNewE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGedEditor.html:25642,Inherit,Inheritance,25642,root/html532/TEveGedEditor.html,https://root.cern,https://root.cern/root/html532/TEveGedEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsCachedPdf::getAnalyticalIntegralWN(Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsSelfCachedPdf.html:13905,extend,extended,13905,root/html528/RooAbsSelfCachedPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsSelfCachedPdf.html,4,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Roo2DKeysPdf.html:13464,extend,extended,13464,root/html528/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html528/Roo2DKeysPdf.html,29,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsAnaConvPdf.html:15141,extend,extended,15141,root/html528/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsAnaConvPdf.html,7,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooArgusBG.html:13398,extend,extended,13398,root/html528/RooArgusBG.html,https://root.cern,https://root.cern/root/html528/RooArgusBG.html,16,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsCachedPdf::getAnalyticalIntegra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsSelfCachedPdf.html:13831,extend,extended,13831,root/html526/RooAbsSelfCachedPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsSelfCachedPdf.html,4,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/Roo2DKeysPdf.html:13390,extend,extended,13390,root/html526/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html526/Roo2DKeysPdf.html,29,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsAnaConvPdf.html:15067,extend,extended,15067,root/html526/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsAnaConvPdf.html,7,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooArgusBG.html:13324,extend,extended,13324,root/html526/RooArgusBG.html,https://root.cern,https://root.cern/root/html526/RooArgusBG.html,14,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/Roo2DKeysPdf.html:13656,extend,extended,13656,root/html530/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html530/Roo2DKeysPdf.html,85,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooArgusBG.html:13590,extend,extended,13590,root/html530/RooArgusBG.html,https://root.cern,https://root.cern/root/html530/RooArgusBG.html,39,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsPdf::generateEvent(Int_t code); virtual RooDataSet*generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSimultaneous.html:14300,extend,extended,14300,root/html530/RooSimultaneous.html,https://root.cern,https://root.cern/root/html530/RooSimultaneous.html,1,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsAnaConvPdf::getAnalyticalIntegralWN(RooArgSet& a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooBCPEffDecay.html:14182,extend,extended,14182,root/html528/RooBCPEffDecay.html,https://root.cern,https://root.cern/root/html528/RooBCPEffDecay.html,6,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooLandau.html:13241,extend,extended,13241,root/html528/RooLandau.html,https://root.cern,https://root.cern/root/html528/RooLandau.html,1,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddModel.html:14783,extend,extended,14783,root/html528/RooAddModel.html,https://root.cern,https://root.cern/root/html528/RooAddModel.html,3,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGamma.html:13209,extend,extended,13209,root/html528/RooGamma.html,https://root.cern,https://root.cern/root/html528/RooGamma.html,9,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsAnaConvPdf::getAnalyticalIntegralWN(RooArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooBCPEffDecay.html:13916,extend,extended,13916,root/html526/RooBCPEffDecay.html,https://root.cern,https://root.cern/root/html526/RooBCPEffDecay.html,6,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooLandau.html:13167,extend,extended,13167,root/html526/RooLandau.html,https://root.cern,https://root.cern/root/html526/RooLandau.html,1,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tgetAnalyticalIntegralWN(RooArgSet& allVars, RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAddModel.html:14517,extend,extended,14517,root/html526/RooAddModel.html,https://root.cern,https://root.cern/root/html526/RooAddModel.html,3,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, const RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; virtual Int_tRooAbsReal::getAnalyticalIntegralWN(RooArgSet& allVars, RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGaussian.html:13166,extend,extended,13166,root/html526/RooGaussian.html,https://root.cern,https://root.cern/root/html526/RooGaussian.html,7,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tRooAbsReal::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAddModel.html:14783,extend,extended,14783,root/html530/RooAddModel.html,https://root.cern,https://root.cern/root/html530/RooAddModel.html,21,['extend'],['extended']
Modifiability,"::generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataSet*RooAbsPdf::generate(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); RooDataHist*RooAbsPdf::generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidgenerateEvent(Int_t code); virtual RooDataSet*RooAbsPdf::generateSimGlobal(const RooArgSet& whatVars, Int_t nEvents); virtual RooArgSet*RooAbsPdf::getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; virtual Int_tgetAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooGamma.html:13401,extend,extended,13401,root/html530/RooGamma.html,https://root.cern,https://root.cern/root/html530/RooGamma.html,25,['extend'],['extended']
Modifiability,"::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. ROOT::v5::TFormulaPrimitive::(anonymous); Bool_tfIsStaticindication if the function is static; Int_tfNArgumentsnumber of arguments; Int_tfNParametersnumber of parameters; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; Int_tfTypetype of the function; static TObjArray*fgListOfFunction!list of global primitive formulas. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFormulaPrimitive(); Default constructor. TFormulaPrimitive(const char *name,const char *formula, GenFunc0 fpointer); Constructor. TFormulaPrimitive(const char *name,const char *formula, GenFunc10 fpointer); Constructor. TFormulaPrimitive(const char *name,const char *formula, GenFunc110 fpointer); Constructor. TFormulaPrimitive(const char *name,const char *formula, GenFunc1110 fpointer); Constructor. TFormulaPrimitive(const char* name, const char* formula, ROOT::v5::TFormulaPrimitive::GenFuncG fpointer, Int_t npar); Constructor. TFormulaPrimitive(const char *name,const char *formula, TFuncG fpointer); Constructor. TFormulaPrimitive(const char *name,const char *formula, TFunc0 fpointer); Constructor. TFormulaPrimitive(const char *name,const char *formula, TFunc10 fpointer); Constructor. TFormulaPrimitive(const char *name,const char *formula, TFunc110 fpointer); Constructor. TFormulaPrimitive(const char *name,const char *formula, TFunc11",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__v5__TFormulaPrimitive.html:8939,Inherit,Inheritance,8939,root/html604/ROOT__v5__TFormulaPrimitive.html,https://root.cern,https://root.cern/root/html604/ROOT__v5__TFormulaPrimitive.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMemFile*fMemFile! file used to manage streamer infos; TStringTNamed::fNameobject identifier; TStringfObjectsPath! path for registered objects; Bool_tfReadOnly! indicate if sniffer allowed to change ROOT structures - for instance, read objects from files; Int_tfSinfoSize! number of elements in streamer info, used as version; TStringTNamed::fTitleobject title. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TRootSniffer. Function documentation; TRootSniffer(const char* name, const char* objpath = ""online""); constructor. ~TRootSniffer(); destructor. void ScanObjectMemebers(TRootSnifferScanRec& rec, TClass* cl, char* ptr, unsigned long cloffset); scan object data members; some members like enum or static members will be excluded. void ScanObject(TRootSnifferScanRec& rec, TObject* obj); scan object content; if object is known collection class (like TFolder),; collection content will be scanned as well. void ScanObjectProperties(TRootSnifferScanRec& rec, TObject*& obj, TClass*& obj_class); scans basic object properties; here such fields as _typename, _title, _more properties can be specified. void ScanObjectChilds(TRootSnifferScanRec& rec, TObject* obj); scans object childs (if any); here one scans collection, branches, trees and so on. void ScanCollection(TRootSnifferScanRec& rec, TCollection* lst, const char* foldername = 0, Bool_t extra = kFALSE, TCollecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSniffer.html:8153,Inherit,Inheritance,8153,root/html602/TRootSniffer.html,https://root.cern,https://root.cern/root/html602/TRootSniffer.html,1,['Inherit'],['Inheritance']
Modifiability,"::kDeleteWindowCalled. private:. TH2*fBinHistCloned histogram for rebin; Double_tfOldXOffsetsaves the old x offset of the histogram; Double_tfOldYOffsetsaves the old y offset of the histogram; Float_tfP1oldx[3]; Float_tfP1oldy[3]; Float_tfP2oldx[3]; Float_tfP2oldy[3]; Float_tfP3oldx[3]; Float_tfP3oldy[3]; Float_tfP4oldx[3]; Float_tfP4oldy[3]; Float_tfP5oldx[3]; Float_tfP5oldy[3]; Float_tfP6oldx[3]; Float_tfP6oldy[3]; Float_tfP7oldx[3]; Float_tfP7oldy[3]; Float_tfP8oldx[3]; Float_tfP8oldy[3]; Int_tfPx1old; Int_tfPx2old; Int_tfPy1old; Int_tfPy2old. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH2Editor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of histogram attribute GUI. void CreateBinTab(); Create the Binning tab. ~TH2Editor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. Bool_t AcceptModel(TObject* model); Check if object is able to configure with this editor. void SetModel(TObject* obj); Pick up the values of current histogram attributes. void DoTitle(const char* text); Slot connected to the histogram title setting. void DoHistView(); Slot connected to the 'Plot' button group. void DoHistSimple(); Slot connected to the 2D-Plot radio button. void DoHistComplex(); Slot connected to the 3D-Plot radio button. void DoHistChanges(); Slot connected to histogram type, coordinate system, contour combo box. void DoAddArr(Bool_t on); Slot connected to the ""Arrow draw option"" check button. void DoAddBox(Bool_t on); Slot connected to the ""Box draw option"" check button. void DoAddCol(Bool_t on); Slot connected to the ""Col draw option"" check button. void DoAddScat(Bool_t on); Slot connected to the ""Scat draw option"" check button. void DoAddText(Bool_t on); Slot connected to the ""Text draw option"" check button. void DoAddError(Bool_t on); Slot connected to the ""Error"" check button. void DoAddPalette(Bool_t on);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2Editor.html:30400,config,configure,30400,root/html602/TH2Editor.html,https://root.cern,https://root.cern/root/html602/TH2Editor.html,4,['config'],['configure']
Modifiability,"::kExtras@ kExtrasDefinition RooPrintable.h:33; RooPrintable::printStreamvirtual void printStream(std::ostream &os, Int_t contents, StyleOption style, TString indent="""") constPrint description of object on ostream, printing contents set by contents integer,...Definition RooPrintable.cxx:72; RooRealIntegralPerforms hybrid numerical/analytical integrals of RooAbsReal objects.Definition RooRealIntegral.h:29; RooRealIntegral::numIntRealVarsconst RooArgSet & numIntRealVars() constDefinition RooRealIntegral.h:48; RooRealIntegral::setAllowComponentSelectionvoid setAllowComponentSelection(bool allow)Set component selection to be allowed/forbidden.Definition RooRealIntegral.cxx:1031; RooRealIntegral::Classstatic TClass * Class(); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooRealVar::setValvoid setVal(double value) overrideSet value of variable to 'value'.Definition RooRealVar.cxx:242; RooRealVar::setBinningvoid setBinning(const RooAbsBinning &binning, const char *name=nullptr)Add given binning under name 'name' with this variable.Definition RooRealVar.cxx:403; RooRealVar::setBinsvoid setBins(Int_t nBins, const char *name=nullptr)Create a uniform binning under name 'name' for this variable.Definition RooRealVar.cxx:396; RooSecondMomentDefinition RooSecondMoment.h:27; RooStringViewThe RooStringView is a wrapper around a C-style string that can also be constructed from a std::strin...Definition RooStringView.h:27; RooVectorDataStore::RealVector::setBuffervoid setBuffer(RooAbsReal *real, double *newBuf)Definition RooVectorDataStore.h:248; RooVectorDataStoreUses std::vector to store data columns.Definition RooVectorDataStore.h:41; RooVectorDataStore::addRealRealVector * addReal(RooAbsReal *real)Definition RooVectorDataStore.cxx:1244; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:249453,variab,variable,249453,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TVirtualProofPlayer::EStatusBitskIsSubmerger; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TVirtualProofPlayer::EExitStatuskStopped; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualProofPlayer * Create(const char* player, TProof* p, TSocket* s = 0); Create a PROOF player. TVirtualProofPlayer(); { ResetBit(TVirtualProofPlayer::kIsSubmerger); }. virtual ~TVirtualProofPlayer(); { }. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Bool_t JoinProcess(TList* workers). Long64_t Finalize(Bool_t force = kFALSE, Bool_t sync = kFALSE). Long64_t Finalize(TQueryResult* qr). Long64_t DrawSelect(TDSet* set, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). void HandleGetTreeHeader(TMessage* mess). void HandleRecvHisto(TMessage* mess). void StopProcess(Bool_t abort, Int_t timeout = -1). void AddInput(TObject* inp). void ClearInput(). TObject * GetOutput(const char* name) const. TList * GetOutputList() const. TList * GetInputList() const. TList * GetListOfResults() const. void AddQu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TVirtualProofPlayer.html:13154,Inherit,Inheritance,13154,root/html604/TVirtualProofPlayer.html,https://root.cern,https://root.cern/root/html604/TVirtualProofPlayer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::kInline; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static RooPrintable::ContentsOptionRooPrintable::kName; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. UInt_t_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendMode_extendModeExtended mode capabilities of p.d.f.; RooDataSet*_genData! Data being generated; Bool_t_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_t_nextProtoIndexNext prototype event to load according to LUT; TString_normRangeNormalization range of pdf; Int_t*_protoOrderLUT with traversal order of prototype data; RooArgSet_protoVarsPrototype observables; const RooDataSet*_prototypePointer to prototype dataset; RooArgSet*_theEventPointer to observable event being generated; Bool_t_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsGenContext(const RooAbsPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor. ~RooAbsGenContext(); Destructor. void attach(const RooArgSet& para",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsGenContext.html:8822,extend,extended,8822,root/html602/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html602/RooAbsGenContext.html,4,['extend'],['extended']
Modifiability,::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. UInt_tfEhwidth and height of entry; Int_tfEntryIdthe entry id (used for event processing); UInt_tfEwwidth and height of entry; Int_tfExposition of entry; Int_tfEyposition of entry; TGHotString*fLabelmenu entry label; const TGPicture*fPicmenu entry icon; TGPopupMenu*fPopuppointer to popup menu (in case of cascading menus); TGString*fShortcutmenu entry shortcut; Int_tfStatusentry status (OR of EMenuEntryState); EMenuEntryTypefTypetype of entry; void*fUserDatapointer to user data structure. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMenuEntry(const TGMenuEntry& ). TGMenuEntry& operator=(const TGMenuEntry& ). TGMenuEntry(); { }. virtual ~TGMenuEntry(); { if (fLabel) delete fLabel; if (fShortcut) delete fShortcut; }. Int_t GetEntryId() const; { return fEntryId; }. const char * GetName() const; { return fLabel ? fLabel->GetString() : 0; }. const char * GetShortcutText() const; { return fShortcut ? fShortcut->GetString() : 0; }. Int_t GetStatus() const; { return fStatus; }. EMenuEntryType GetType() const; { return fType; }. TGPopupMenu * GetPopup() const; { return fPopup; }. TGHotString * GetLabel() const; { return fLabel; }. TGString * GetShortcut() const; { return fShortcut; }. Int_t GetEx() const; { return fEx; }. Int_t GetEy() const; { return fEy; }. UInt_t GetEw() const; { return fEw; }. UInt_t GetEh() const; { return fEh; }. const TGPicture * GetPic() const; { return fPic; }. void * GetUserData() const; { return fUserData; }. » Author: Fons Rademakers 09/01/98,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGMenuEntry.html:8191,Inherit,Inheritance,8191,root/html602/TGMenuEntry.html,https://root.cern,https://root.cern/root/html602/TGMenuEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static RooPrintable::ContentsOptionRooPrintable::kName; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TIterator*_cacheIter! Iterator over cached variables; RooArgSet_cachedVars; Bool_t_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; TIterator*_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSet_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsDataStore(); Default constructor. RooAbsDataStore(const char* name, const char* title, const RooArgSet& vars); Default constructor. RooAbsDataStore(const RooAbsDataStore& other, const char* newname = 0). RooAbsDataStore(const RooAbsDataStore& other, const RooArgSet& vars, const char* newname = 0). ~RooAbsDataStore(); Destructor. Bool_t valid() const; Return true if currently loaded coordinate is considered valid within; the current range definitions of all observables. void printName(ostream& os) const; Print name of dataset. void printTitle(ostream& os) const; Print title of dataset. void printClassName(ostream& os) const; Print class name of dataset. void printValue(ostream& os) const; Print value of the dataset, i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsDataStore.html:10022,variab,variables,10022,root/html602/RooAbsDataStore.html,https://root.cern,https://root.cern/root/html602/RooAbsDataStore.html,8,['variab'],['variables']
Modifiability,"::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TBuffer3D::ESectionkNone; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TBuffer3D::ESectionkRaw; static TBuffer3D::ESectionkRawSizes; static TBuffer3D::ESectionkShapeSpecific; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. UInt_tfNbPntsNumber of points describing the shape; UInt_tfNbPolsNumber of polygons describing the shape; UInt_tfNbSegsNumber of segments describing the shape; UInt_tfPntsCapacityCurrent capacity of fPnts space; UInt_tfPolsCapacityCurrent capacity of fSegs space; UInt_tfSectionsSection validity flags; UInt_tfSegsCapacityCurrent capacity of fSegs space; const Int_tfTypePrimitive type - predefined ones in TBuffer3DTypes.h; static UInt_tfgCSLevel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBuffer3D(Int_t type, UInt_t reqPnts = 0, UInt_t reqPntsCapacity = 0, UInt_t reqSegs = 0, UInt_t reqSegsCapacity = 0, UInt_t reqPols = 0, UInt_t reqPolsCapacity = 0); Destructor; Construct from supplied shape type and raw sizes. ~TBuffer3D(); Destructor. void Init(); Initialise buffer. void ClearSectionsValid(); Clear any sections marked valid. void SetLocalMasterIdentity(); Set kRaw tesselation section of buffer with supplied sizes; Set fLocalMaster in section kCore to identity. void SetAABoundingBox(const Double_t[3] origin, const Double_t[3] halfLengths); Set fBBVertex in kBoundingBox section to a axis aligned (local) BB; using supplied origin and box half lengths. 7-------6; /| /|; 3-------2 |; | 4-----|-5; |/ |; 0-------1. Bool_t SetRawSizes(UInt_t reqPnts, UInt_t reqPntsCapacity, UInt_t reqSegs, UInt_t reqSegsCapacity, UInt_t reqPols, UInt_t reqPolsCapacity); Set kRaw tesselation section of buffer with supplied sizes. UInt_t GetC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBuffer3D.html:16517,Inherit,Inheritance,16517,root/html602/TBuffer3D.html,https://root.cern,https://root.cern/root/html602/TBuffer3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; TMVA::MinuitWrapper*fMinWrapholds a wrapper around TMinuit; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Bool_tfBatchbatch mode; Int_tfErrorLevelminuit error level; Int_tfFitStrategyminuit strategy level; Int_tfMaxCalls(approximate) maximum number of function calls; Int_tfPrintLevelminuit printout level; Bool_tfPrintWarningsminuit warnings level; Double_tfTolerancetolerance to the function value at the minimum; Bool_tfUseImproveflag for 'IMPROVE' use; Bool_tfUseMinosflag for 'MINOS' use. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinuitFitter(TMVA::IFitterTarget& target, const TString& name, vector<TMVA::Interval*>& ranges, const TString& theOption); constructor. ~MinuitFitter(); destructor. void DeclareOptions(); declare SA options. void Init(); minuit-specific settings. Double_t Run(vector<Double_t>& pars); performs the fit. Double_t EstimatorFunction(vector<Double_t>& pars); performs the fit by calliung Run(pars). MinuitFitter(TMVA::IFitterTarget& target, const TString& name, vector<TMVA::Interval*>& ranges, const TString& theOption). » Author: Andreas Hoecker » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MinuitFitter.html:8616,Inherit,Inheritance,8616,root/html604/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html604/TMVA__MinuitFitter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; TMVA::MinuitWrapper*fMinWrapholds a wrapper around TMinuit; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Bool_tfBatchbatch mode; Int_tfErrorLevelminuit error level; Int_tfFitStrategyminuit strategy level; Int_tfMaxCalls(approximate) maximum number of function calls; Int_tfPrintLevelminuit printout level; Bool_tfPrintWarningsminuit warnings level; Double_tfTolerancetolerance to the function value at the minimum; Bool_tfUseImproveflag for 'IMPROVE' use; Bool_tfUseMinosflag for 'MINOS' use. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinuitFitter(TMVA::IFitterTarget& target, const TString& name, vector<TMVA::Interval*>& ranges, const TString& theOption); constructor. ~MinuitFitter(); destructor. void DeclareOptions(); declare SA options. void Init(); minuit-specific settings. Double_t Run(vector<Double_t>& pars); performs the fit. Double_t EstimatorFunction(vector<Double_t>& pars); performs the fit by calliung Run(pars). MinuitFitter(TMVA::IFitterTarget& target, const TString& name, vector<TMVA::Interval*>& ranges, const TString& theOption). » Author: Andreas Hoecker » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitFitter.html:8608,Inherit,Inheritance,8608,root/html602/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitFitter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::kOverwrite; static TApplication::EStatusBitsTApplication::kProcessRemotely; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. private:. Bool_tfCaughtExceptionTRint just caught an exception or signal; TStringfDefaultPromptdefault prompt: ""root [%d] ""; TFileHandler*fInputHandlerterminal input handler; Bool_tfInterruptif true macro execution will be stopped; Int_tfNcmdcommand history number; charfPrompt[64]interpreter prompt. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TApplication. ←; TRint. Function documentation; TRint(const char* appClassName, int* argc, char** argv, void* options = 0, int numOptions = 0, Bool_t noLogo = kFALSE); Create an application environment. The TRint environment provides an; interface to the WM manager functionality and eventloop via inheritance; of TApplication and in addition provides interactive access to; the CINT C++ interpreter via the command line. ~TRint(); Destructor. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. void Run(Bool_t retrn = kFALSE); Main application eventloop. First process files g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRint.html:13307,Inherit,Inheritance,13307,root/html604/TRint.html,https://root.cern,https://root.cern/root/html604/TRint.html,1,['Inherit'],['Inheritance']
Modifiability,"::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. const RooAbsFunc*_functionPointer to function binding of integrand; Bool_t_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_validIs integrator in valid state?. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsIntegrator(); Default constructor. RooAbsIntegrator(const RooAbsFunc& function, Bool_t printEvalCounter = kFALSE); Copy constructor. Double_t calculate(const Double_t* yvec = 0); Calculate integral value with given array of parameter values. Bool_t setLimits(Double_t xmin, Double_t xmax); Interface to set limits on integration. Bool_t setUseIntegrandLimits(Bool_t flag); Interface function that allows to defer limit definition to integrand definition. RooAbsIntegrator(). virtual ~RooAbsIntegrator(); Destructor. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const. Bool_t isValid() const; Is integrator in valid state. Double_t integrand(const Double_t[] x) const; Return value of integrand at given observable values. const RooAbsFunc * integrand() const; Return integrand function binding. Bool_t checkLimits() const; If true, finite limits are required on the observable range. Double_t integral(const Double_t* yvec = 0). Bool_t canIntegrate1D() const. Bool_t canIntegrate2D() const. Bool_t canIntegrateND() const. Bool_t canIntegrateOpenEnded() const. Bool_t printEvalCounter() const; { return _printEvalCounter ; }. void setPrintEvalCounter(Bool_t value); { _printEvalCounter = value ; }. Bool_t setLimits(Double_t* , Double_t* ); { return kFALSE ; }. » Last changed: Tue Jun 2 15:27:08 2015 » Last generated: 2015-06-02 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsIntegrator.html:7554,config,config,7554,root/html604/RooAbsIntegrator.html,https://root.cern,https://root.cern/root/html604/RooAbsIntegrator.html,2,['config'],['config']
Modifiability,"::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. UChar_t*fAxis[fNNodes] nodes cutting axis; double*fBoundaries! nodes boundaries; intfBucketSizesize of the terminal nodes; Int_tfCrossNode! cross node - node that begins the last row (with terminal nodes only); double**fData! data points; Int_tfDataOwner! 0 - not owner, 2 - owner of the pointer array, 1 - owner of the whole 2-d array; int*fIndPoints! array of points indexes; intfNDimnumber of dimensions; intfNDimmdummy 2*fNDim; Int_tfNNodessize of node array; intfNPointsnumber of multidimensional points; Int_tfOffset! offset in fIndPoints - if there are 2 rows, that contain terminal nodes; double*fRange[fNDimm] range of data for each dimension; Int_tfRowT0! smallest terminal row - first row that contains terminal nodes; Int_tfTotalNodestotal number of nodes (fNNodes + terminal nodes); double*fValue[fNNodes] nodes cutting value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TKDTree<Index, Value> Build(). Build the kd-tree. 1. calculate number of nodes; 2. calculate first terminal row; 3. initialize index array; 4. non recursive building of the binary tree. The tree is divided recursively. See class description, section 4b for the details; of the division alogrithm. void TKDTree<Index, Value> FindNearestNeighbors(const double* point, Int_t k, int* ind, double* dist); Find kNN nearest neighbors to the point in the first argument; Returns 1 on success, 0 on failure; Arrays ind and dist are provided by the user and are assumed to be at least kNN elements long. void TKDTree<Index, Value> UpdateNearestNeighbors(int inode, const double* point, Int_t kNN, int* ind, double* dist); Update the nearest neighbors values by examining the node inode. Double_t TKDTree<Index, Value> Distance(const double* point, int ind, Int_t type = 2) const; Find the distance between point of the first argument and the point at ind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKDTree_int_double_.html:18120,Inherit,Inheritance,18120,root/html602/TKDTree_int_double_.html,https://root.cern,https://root.cern/root/html602/TKDTree_int_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::kZombie. protected:. vector<list<Double_t>*>_binb! list of bin boundaries; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; Int_t_numBins! Size of integration range; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; vector<Double_t>_xmax! Upper integration bound; vector<Double_t>_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooBinIntegrator, is parameters and capabilities with RooNumIntFactory. RooBinIntegrator(); Default constructor. RooBinIntegrator(const RooAbsFunc& function); Construct integrator on given function binding binding. RooBinIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); Construct integrator on given function binding binding. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with new function binding and configuration. Needed by RooNumIntFactory. ~RooBinIntegrator(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Double_t integral(const Double_t* yvec = 0); Calculate numeric integral at given set of function binding parameters. RooBinIntegrator(); Constructors, assignment etc. Bool_t setUseIntegrandLimits(Bool_t flag); {_useIntegrandLimits = flag ; return kTRUE ; }. Bool_t canIntegrate1D() const; { return kTRUE ; }. Bool_t c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBinIntegrator.html:7776,config,config,7776,root/html602/RooBinIntegrator.html,https://root.cern,https://root.cern/root/html602/RooBinIntegrator.html,4,['config'],['config']
Modifiability,"::list< RooAbsData * > allData () const;  Return list of all dataset in the workspace. ;  ; std::list< RooAbsData * > allEmbeddedData () const;  Return list of all dataset in the workspace. ;  ; RooArgSet allFunctions () const;  Return set with all function objects. ;  ; std::list< TObject * > allGenericObjects () const;  Return list of all generic objects in the workspace. ;  ; RooArgSet allPdfs () const;  Return set with all probability density function objects. ;  ; RooArgSet allResolutionModels () const;  Return set with all resolution model objects. ;  ; RooArgSet allVars () const;  Return set with all variable objects. ;  ; RooAbsArg * arg (RooStringView name) const;  Return RooAbsArg with given name. A null pointer is returned if none is found. ;  ; RooArgSet argSet (RooStringView nameList) const;  Return set of RooAbsArgs matching to given list of names. ;  ; bool cancelTransaction ();  Cancel an ongoing import transaction. ;  ; RooCategory * cat (RooStringView name) const;  Retrieve discrete variable (RooCategory) with given name. A null pointer is returned if not found. ;  ; RooAbsCategory * catfunc (RooStringView name) const;  Retrieve discrete function (RooAbsCategory) with given name. A null pointer is returned if not found. ;  ; bool cd (const char *path=nullptr);  ; void clearStudies ();  Remove all RooStudyManager modules. ;  ; TObject * Clone (const char *newname="""") const override;  TObject::Clone() needs to be overridden. ;  ; bool commitTransaction ();  ; const RooArgSet & components () const;  ; RooAbsData * data (RooStringView name) const;  Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. ;  ; bool defineSet (const char *name, const char *contentList);  Define a named set in the workspace through a comma separated list of names of objects already in the workspace. ;  ; bool defineSet (const char *name, const RooArgSet &aset, bool importMissing=false);  Define a named RooArgSet with given constituen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:3843,variab,variable,3843,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['variab'],['variable']
Modifiability,"::max();  . Static Private Attributes; static TVirtualTreePlayer * fgCurrent = nullptr;  Pointer to current Tree player. ;  ; static TClass * fgPlayer = nullptr;  Pointer to class of Tree player. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualTreePlayer.h>. Inheritance diagram for TVirtualTreePlayer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualTreePlayer(). TVirtualTreePlayer::TVirtualTreePlayer ; (; ). inline . Definition at line 47 of file TVirtualTreePlayer.h. ◆ ~TVirtualTreePlayer(). TVirtualTreePlayer::~TVirtualTreePlayer ; (; ). override . Common destructor. ; Definition at line 58 of file TVirtualTreePlayer.cxx. Member Function Documentation. ◆ BuildIndex(). virtual TVirtualIndex * TVirtualTreePlayer::BuildIndex ; (; const TTree * ; T, . const char * ; majorname, . const char * ; minorname . ). pure virtual . Implemented in TTreePlayer. ◆ Class(). static TClass * TVirtualTreePlayer::Class ; (; ). static . ReturnsTClass describing this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualTreePlayer.html:13386,inherit,inherited,13386,doc/master/classTVirtualTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualTreePlayer.html,2,['inherit'],['inherited']
Modifiability,"::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); static TClass*Class(); virtual TClass*IsA() const; RooSimWSTool::BuildConfig&operator=(const RooSimWSTool::BuildConfig&); voidrestrictBuild(const char* catName, const char* stateList); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. RooSimWSTool::BuildConfigBuildConfig(); voidinternalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimWSTool__BuildConfig.html:5017,config,configuration,5017,root/html534/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html534/RooSimWSTool__BuildConfig.html,2,['config'],['configuration']
Modifiability,"::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection* whichVars = NULL) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection& whichVars) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual RooRealVar*GetNLLVar() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual RooRealVar*GetWeightVar() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; RooStats::MarkovChainMarkovChain(); RooStats::MarkovChainMarkovChain(RooArgSet& parameters); RooStats::MarkovChainMarkovChain(const RooStats::MarkovChain&); RooStats::MarkovChainMarkovChain(const char* name, const char* title, RooArgSet& parameters); voidTObject::MayNotUse(const char* method) const; virtual Double_tNLL() const; virtual Double_tNLL(Int_t i) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__MarkovChain.html:3920,Inherit,InheritsFrom,3920,root/html532/RooStats__MarkovChain.html,https://root.cern,https://root.cern/root/html532/RooStats__MarkovChain.html,2,['Inherit'],['InheritsFrom']
Modifiability,"::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidPrintCuts(Double_t effS) const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); virtual voidTMVA::IFitterTarget::ProgressNotifier(TString, TString); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodCuts.html:11872,Config,Configurable,11872,root/html532/TMVA__MethodCuts.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodCuts.html,2,['Config'],['Configurable']
Modifiability,"::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariablePCATransform&operator=(const TMVA::VariablePCATransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&TMVA::Variable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariablePCATransform.html:5104,Variab,VariableTransformBase,5104,root/html602/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariablePCATransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp); const vector<TMVA::VariableInfo>&TMVA::VariableTransf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:5156,Variab,VariableTransformBase,5156,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::VariableTransformBase::SetEnabled(Bool_t e); voidTMVA::VariableTransformBase::SetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTMVA::VariableTransformBase::SetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidTMVA::VariableTransformBase::SetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidTMVA::VariableTransformBase::SetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::VariableTransformBase::SetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html:5156,Variab,VariableTransformBase,5156,root/html534/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,"::operator= ; (; RooPolyFunc && ; other). delete . ◆ setCoordinate(). void RooPolyFunc::setCoordinate ; (; const RooAbsCollection & ; observables, . std::vector< double > const & ; observableValues . ). protected . ◆ Streamer(). void RooPolyFunc::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooPolyFunc::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 68 of file RooPolyFunc.h. ◆ taylorExpand(). std::unique_ptr< RooPolyFunc > RooPolyFunc::taylorExpand ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . const RooArgList & ; observables, . int ; order = 1, . std::vector< double > const & ; observableValues = {}, . double ; eps1 = 1e-6, . double ; eps2 = 1e-3 . ). static . Taylor expanding given function in terms of observables around observableValues. ; Supports expansions upto order 2. Parameters. [in]funcFunction of variables that is taylor expanded. ; [in]observablesSet of variables to perform the expansion. It's type is RooArgList to ensure that it is always ordered the same as the observableValues vector. However, duplicate observables are still not allowed. ; [in]orderOrder of the expansion (0,1,2 supported). ; [in]observableValuesCoordinates around which expansion is performed. If empty, the nominal observable values are taken, if the size matches the size of the observables RooArgSet, the values are mapped to the observables in matching order. If it contains only one element, the same single value is used for all observables. ; [in]eps1Precision for first derivative and second derivative. ; [in]eps2Precision for second partial derivative of cross-derivative. . Definition at line 242 of file RooPolyFunc.cxx. ◆ terms(). const std::vector< std::unique_ptr< RooListProxy > > & RooPolyFunc::terms ; (; ); const. inline . Definition at line 41 of file RooPolyFunc.h. ◆ variables(). const RooArgList & RooPol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyFunc.html:65641,variab,variables,65641,doc/master/classRooPolyFunc.html,https://root.cern,https://root.cern/doc/master/classRooPolyFunc.html,1,['variab'],['variables']
Modifiability,"::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsDataStore; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCompositeDataStore.html:16021,inherit,inherited,16021,doc/master/classRooCompositeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooCompositeDataStore.html,9,['inherit'],['inherited']
Modifiability,::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooRealProxy _avgC;  ; RooRealProxy _avgMistag;  ; RooRealProxy _avgS;  ; Int_t _basisCos;  ; Int_t _basisExp;  ; Int_t _basisSin;  ; RooRealProxy _delMistag;  ; RooRealProxy _dm;  ; double _genB0Frac;  ; RooRealProxy _mu;  ; RooRealProxy _t;  ; RooCategoryProxy _tag;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basisFunc) convolution objects. ;  ; RooRealProxy _convVar;  Convolution variable. ;  ; bool _isCopy;  ; RooRealProxy _model;  Original model. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormS,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPGenDecay.html:64231,variab,variable,64231,doc/master/classRooBCPGenDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPGenDecay.html,1,['variab'],['variable']
Modifiability,"::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigmaL; RooRealProxysigmaR; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBifurGauss(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _mean, RooAbsReal& _sigmaL, RooAbsReal& _sigmaR). RooBifurGauss(const RooBifurGauss& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooBifurGauss(); {}. TObject* clone(const char* newname) const; { return new RooBifurGauss(*this,newname); }. virtual ~RooBifurGauss(); { }. » Last changed: Tue Jun 30 14:31:05 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBifurGauss.html:44771,Inherit,Inheritance,44771,root/html602/RooBifurGauss.html,https://root.cern,https://root.cern/root/html602/RooBifurGauss.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"::plotOn(RooPlot *frame, PlotOpt o) const; 1884{; 1885 // Sanity checks; 1886 if (plotSanityChecks(frame)) return frame ;; 1887 ; 1888 // ProjDataVars is either all projData observables, or the user indicated subset of it; 1889 RooArgSet projDataVars ;; 1890 if (o.projData) {; 1891 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") have ProjData with observables = "" << *o.projData->get() << std::endl ;; 1892 if (o.projDataSet) {; 1893 projDataVars.add(*std::unique_ptr<RooArgSet>{o.projData->get()->selectCommon(*o.projDataSet)}) ;; 1894 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") have ProjDataSet = "" << *o.projDataSet << "" will only use this subset of projData"" << std::endl ;; 1895 } else {; 1896 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") using full ProjData"" << std::endl ;; 1897 projDataVars.add(*o.projData->get()) ;; 1898 }; 1899 }; 1900 ; 1901 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") ProjDataVars = "" << projDataVars << std::endl ;; 1902 ; 1903 // Make list of variables to be projected; 1904 RooArgSet projectedVars ;; 1905 RooArgSet sliceSet ;; 1906 if (o.projSet) {; 1907 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") have input projSet = "" << *o.projSet << std::endl ;; 1908 makeProjectionSet(frame->getPlotVar(),o.projSet,projectedVars,false) ;; 1909 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") calculated projectedVars = "" << *o.projSet << std::endl ;; 1910 ; 1911 // Print list of non-projected variables; 1912 if (frame->getNormVars()) {; 1913 RooArgSet sliceSetTmp;; 1914 getObservables(frame->getNormVars(), sliceSetTmp) ;; 1915 ; 1916 cxcoutD(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") frame->getNormVars() that are also observables = "" << sliceSetTmp << std::endl ;; 1917 ; 1918 sliceSetTmp.remove(projectedVars,true,true) ;; 1919 sliceSetTmp.remove(*frame->getPlotVar(),true,true) ;; 1920 ; 1921 if (o.projData) {; 1922 std::unique_ptr<RooArgSet> tmp{projDat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:84029,variab,variables,84029,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"::removeError ; (; ). inline . Definition at line 61 of file RooRealVar.h. ◆ removeMax(). void RooRealVar::removeMax ; (; const char * ; name = nullptr). Remove upper range limit for binning with given name. Empty name means default range. ; Definition at line 384 of file RooRealVar.cxx. ◆ removeMin(). void RooRealVar::removeMin ; (; const char * ; name = nullptr). Remove lower range limit for binning with given name. Empty name means default range. ; Definition at line 381 of file RooRealVar.cxx. ◆ removeRange(). void RooRealVar::removeRange ; (; const char * ; name = nullptr). Remove range limits for binning with given name. Empty name means default range. ; Definition at line 387 of file RooRealVar.cxx. ◆ setAsymError(). void RooRealVar::setAsymError ; (; double ; lo, . double ; hi . ). inline . Definition at line 66 of file RooRealVar.h. ◆ setBinning(). void RooRealVar::setBinning ; (; const RooAbsBinning & ; binning, . const char * ; name = nullptr . ). Add given binning under name 'name' with this variable. ; If name is null, the binning is installed as the default binning. ; Definition at line 403 of file RooRealVar.cxx. ◆ setBins(). void RooRealVar::setBins ; (; Int_t ; nBins, . const char * ; name = nullptr . ). Create a uniform binning under name 'name' for this variable. ; Parameters. [in]nBinsNumber of bins. The limits are taken from the currently set limits. ; [in]nameOptional name. If name is null, install as default binning. . Definition at line 396 of file RooRealVar.cxx. ◆ setError(). void RooRealVar::setError ; (; double ; value). inline . Definition at line 60 of file RooRealVar.h. ◆ setExpensiveObjectCache(). void RooRealVar::setExpensiveObjectCache ; (; RooExpensiveObjectCache & ; ). inlineoverrideprotectedvirtual . variables don't need caches ; Reimplemented from RooAbsArg.; Definition at line 162 of file RooRealVar.h. ◆ setMax() [1/2]. void RooRealVar::setMax ; (; const char * ; name, . double ; value . ). Set maximum of name range to given va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:86726,variab,variable,86726,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAnaIntZ(Double_t z); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMultiVarGaussian.html:28651,config,config,28651,root/html532/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html532/RooMultiVarGaussian.html,2,['config'],['config']
Modifiability,"::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetErrorTolerance(Double_t t); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidSetForceSum(Bool_t flag); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidSetMaxIters(Int_t mi); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNonCentralChiSquare.html:28811,config,config,28811,root/html530/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html530/RooNonCentralChiSquare.html,1,['config'],['config']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsRealLValue.h>. Inheritance diagram for RooAbsRealLValue:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooAbsRealLValue() [1/3]. RooAbsRealLValue::RooAbsRealLValue ; (; ). inline . Definition at line 34 of file RooAbsRealLValue.h. ◆ RooAbsRealLValue() [2/3]. RooAbsRealLValue::RooAbsRealLValue ; (; const char * ; name, . const char * ; title, . const char * ; unit = """" . ). Constructor. ; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsRealLValue.html:67381,inherit,inherited,67381,doc/master/classRooAbsRealLValue.html,https://root.cern,https://root.cern/doc/master/classRooAbsRealLValue.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBinWidthFunction.h>. Inheritance diagram for RooBinWidthFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooBinWidthFunction() [1/3]. RooBinWidthFunction::RooBinWidthFunction ; (; ). inline . Create an empty instance. ; Definition at line 34 of file RooBinWidthFunction.h. ◆ RooBinWidthFunction() [2/3]. RooBinWidthFunction::RooBinWidthFunction ; (; const char * ; name, . const char * ; title, . const R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinWidthFunction.html:59936,inherit,inherited,59936,doc/master/classRooBinWidthFunction.html,https://root.cern,https://root.cern/doc/master/classRooBinWidthFunction.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooConstVar.h>. Inheritance diagram for RooConstVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooConstVar() [1/3]. RooConstVar::RooConstVar ; (; ). inline . Definition at line 26 of file RooConstVar.h. ◆ RooConstVar() [2/3]. RooConstVar::RooConstVar ; (; const char * ; name, . const char * ; title, . double ; value . ). Constructor with value. ; Definition at line 33 of file RooConstVar.cxx. ◆ RooConstVar(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstVar.html:59079,inherit,inherited,59079,doc/master/classRooConstVar.html,https://root.cern,https://root.cern/doc/master/classRooConstVar.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooFit/TestStatistics/RooRealL.h>. Inheritance diagram for RooFit::TestStatistics::RooRealL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRealL() [1/2]. RooFit::TestStatistics::RooRealL::RooRealL ; (; const char * ; name, . const char * ; title, . std::shared_ptr< RooAbsL > ; likelihood . ). Definition at line 32 of file RooRealL.cxx. ◆ RooRealL() [2/2]. RooFit::TestStatistics::RooRealL::RooRealL ; (; const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html:59752,inherit,inherited,59752,doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooFormulaVar.h>. Inheritance diagram for RooFormulaVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFormulaVar() [1/4]. RooFormulaVar::RooFormulaVar ; (; ). Definition at line 65 of file RooFormulaVar.cxx. ◆ ~RooFormulaVar(). RooFormulaVar::~RooFormulaVar ; (; ). override . Definition at line 67 of file RooFormulaVar.cxx. ◆ RooFormulaVar() [2/4]. RooFormulaVar::RooFormulaVar ; (; const char * ; name, . co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormulaVar.html:61935,inherit,inherited,61935,doc/master/classRooFormulaVar.html,https://root.cern,https://root.cern/doc/master/classRooFormulaVar.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooLagrangianMorphFunc.h>. Inheritance diagram for RooLagrangianMorphFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ FlagMap. typedef std::map<const std::string, FlagSet> RooLagrangianMorphFunc::FlagMap. Definition at line 83 of file RooLagrangianMorphFunc.h. ◆ FlagSet. typedef std::map<const std::string, int> RooLagrangianMorphFunc::FlagSet. Definition at line 81 of file RooLagrangianMorphFunc.h. ◆ ParamMap. typedef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:70055,inherit,inherited,70055,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooLinearCombination.h>. Inheritance diagram for RooLinearCombination:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooLinearCombination() [1/3]. RooLinearCombination::RooLinearCombination ; (; ). Definition at line 38 of file RooLinearCombination.cxx. ◆ RooLinearCombination() [2/3]. RooLinearCombination::RooLinearCombination ; (; const char * ; name). Definition at line 44 of file RooLinearCombination.cxx. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearCombination.html:59359,inherit,inherited,59359,doc/master/classRooLinearCombination.html,https://root.cern,https://root.cern/doc/master/classRooLinearCombination.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooMultiBinomial.h>. Inheritance diagram for RooMultiBinomial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooMultiBinomial() [1/3]. RooMultiBinomial::RooMultiBinomial ; (; ). inline . Definition at line 27 of file RooMultiBinomial.h. ◆ RooMultiBinomial() [2/3]. RooMultiBinomial::RooMultiBinomial ; (; const char * ; name, . const char * ; title, . const RooArgList & ; effFuncList, . const RooArgList & ; catLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiBinomial.html:60004,inherit,inherited,60004,doc/master/classRooMultiBinomial.html,https://root.cern,https://root.cern/doc/master/classRooMultiBinomial.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooNumCdf.h>. Inheritance diagram for RooNumCdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooNumCdf() [1/2]. RooNumCdf::RooNumCdf ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; _pdf, . RooRealVar & ; _x, . const char * ; bname = ""cache"" . ). Construct a cumulative distribution function from given input p.d.f over observable x. ; using a numeric sampling algorithm. Use binning named 'bnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumCdf.html:63247,inherit,inherited,63247,doc/master/classRooNumCdf.html,https://root.cern,https://root.cern/doc/master/classRooNumCdf.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooSpHarmonic.h>. Inheritance diagram for RooSpHarmonic:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooSpHarmonic() [1/4]. RooSpHarmonic::RooSpHarmonic ; (; ). Definition at line 69 of file RooSpHarmonic.cxx. ◆ RooSpHarmonic() [2/4]. RooSpHarmonic::RooSpHarmonic ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; ctheta, . RooAbsReal & ; phi, . int ; l, . int ; m . ). Definition at line 78 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpHarmonic.html:61322,inherit,inherited,61322,doc/master/classRooSpHarmonic.html,https://root.cern,https://root.cern/doc/master/classRooSpHarmonic.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooSpline.h>. Inheritance diagram for RooSpline:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooSpline() [1/4]. RooSpline::RooSpline ; (; ). default . ◆ RooSpline() [2/4]. RooSpline::RooSpline ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . std::span< const double > ; x0, . std::span< const double > ; y0, . int ; order = 3, . bool ; logx = false, . bool ; logy = false . ). Constructor ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpline.html:60937,inherit,inherited,60937,doc/master/classRooSpline.html,https://root.cern,https://root.cern/doc/master/classRooSpline.html,2,['inherit'],['inherited']
Modifiability,"::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStepFunction.h>. Inheritance diagram for RooStepFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooStepFunction() [1/3]. RooStepFunction::RooStepFunction ; (; ). inline . Definition at line 29 of file RooStepFunction.h. ◆ RooStepFunction() [2/3]. RooStepFunction::RooStepFunction ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . const RooArgList & ; coefList, . const RooArgList &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStepFunction.html:59692,inherit,inherited,59692,doc/master/classRooStepFunction.html,https://root.cern,https://root.cern/doc/master/classRooStepFunction.html,2,['inherit'],['inherited']
Modifiability,"::string fSavedInputFormula! Unique name used to defined the function and used in the global map (need to be saved in case of la...Definition TFormula.h:102; TFormula::IsValidBool_t IsValid() constDefinition TFormula.h:271; TFormula::ReplaceAllNamesvoid ReplaceAllNames(TString &formula, std::map< TString, TString > &substitutions)Definition TFormula.cxx:405; TFormula::IsDefaultVariableNamestatic Bool_t IsDefaultVariableName(const TString &name)Definition TFormula.cxx:312; TFormula::FillParametrizedFunctionsvoid FillParametrizedFunctions(std::map< std::pair< TString, Int_t >, std::pair< TString, TString > > &functions)Fill map with parametrized functions.Definition TFormula.cxx:2417; TFormula::EvalParDouble_t EvalPar(const Double_t *x, const Double_t *params=nullptr) constDefinition TFormula.cxx:3078; TFormula::AddVariablesvoid AddVariables(const TString *vars, const Int_t size)Adds multiple variables.Definition TFormula.cxx:2602; TFormula::GetVarNumberInt_t GetVarNumber(const char *name) constReturns variable number (positon in array) given its name.Definition TFormula.cxx:2699; TFormula::fClingVariablesstd::vector< Double_t > fClingVariables! Cached variablesDefinition TFormula.h:94; TFormula::fMethodstd::unique_ptr< TMethodCall > fMethod! Pointer to methodcallDefinition TFormula.h:100; TFormula::fFormulaTString fFormulaString representing the formula expression.Definition TFormula.h:148; TFormula::IsScientificNotationstatic Bool_t IsScientificNotation(const TString &formula, int ipos)Definition TFormula.cxx:318; TFormula::fGradFuncPtrCallFuncSignature fGradFuncPtr! Function pointer, owned by the JIT.Definition TFormula.h:108; TFormula::fClingParametersstd::vector< Double_t > fClingParametersParameter values.Definition TFormula.h:95; TFormula::SetParametervoid SetParameter(const char *name, Double_t value)Sets parameter value.Definition TFormula.cxx:2893; TFormula::Printvoid Print(Option_t *option="""") const overridePrint the formula and its attributes.Definition TF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:161353,variab,variable,161353,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:17 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_double_double_double_.html:37512,variab,variable,37512,root/html534/RooCFunction3Binding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_double_double_double_.html,2,['variab'],['variable']
Modifiability,"::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:03 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3Binding_double_double_double_double_.html:34961,variab,variable,34961,root/html530/RooCFunction3Binding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3Binding_double_double_double_double_.html,1,['variab'],['variable']
Modifiability,"::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:22 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction3Binding_double_double_double_double_.html:35340,variab,variable,35340,root/html532/RooCFunction3Binding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html532/RooCFunction3Binding_double_double_double_double_.html,1,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. template <> void RooCFunction1Ref<Double_t,Double_t> ShowMembers(TMemberInspector& insp, char* parent). » Last changed: Mon Dec 7 13:46:14 2009 » Last generated: 2009-12-07 13:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction1Binding_double_int_.html:33905,variab,variable,33905,root/html526/RooCFunction1Binding_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction1Binding_double_int_.html,1,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:20 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html:37628,variab,variable,37628,root/html534/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,2,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:06 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html:35077,variab,variable,35077,root/html530/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,1,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:25 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html:35456,variab,variable,35456,root/html532/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html532/RooCFunction3Binding_double_unsigned_int_double_unsigned_int_.html,1,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:23 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html:37628,variab,variable,37628,root/html534/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,2,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Mon Jul 4 15:22:06 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html:35077,variab,variable,35077,root/html530/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,1,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Nov 3 20:07:25 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html:35456,variab,variable,35456,root/html532/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html532/RooCFunction3Binding_double_unsigned_int_unsigned_int_double_.html,1,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:02:44 2015 » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1PdfBinding_double_double_.html:44262,variab,variable,44262,root/html534/RooCFunction1PdfBinding_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1PdfBinding_double_double_.html,2,['variab'],['variable']
Modifiability,"::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; Double_tfErrorTol; Bool_tfForceSum; Bool_tfHasIssuedConvWarning; Bool_tfHasIssuedSumWarning; Int_tfMaxIters; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxylambda; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNonCentralChiSquare(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _k, RooAbsReal& _lambda). RooNonCentralChiSquare(const RooNonCentralChiSquare& other, const char* name = 0). void SetForceSum(Bool_t flag). Double_t evaluate() const; ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooNonCentralChiSquare(); {}. TObject* clone(const char* newname) const; { return new RooNonCentralChiSquare(*this,newname); }. virtual ~RooNonCentralChiSquare(); { }. void SetErrorTolerance(Double_t t); {fErrorTol = t;}. void SetMaxIters(Int_t mi); {fMaxIters = mi;}. » Last changed: Thu Nov 3 20:08:47 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNonCentralChiSquare.html:42537,VARIAB,VARIABLE,42537,root/html532/RooNonCentralChiSquare.html,https://root.cern,https://root.cern/root/html532/RooNonCentralChiSquare.html,1,['VARIAB'],['VARIABLE']
Modifiability,::vector< double > _x1;  ; std::vector< double > _x2;  ; std::vector< double > _xDatHi;  ; std::vector< double > _xDatHi3s;  ; std::vector< double > _xDatLo;  ; std::vector< double > _xDatLo3s;  ; std::vector< double > _xVarHi;  ; std::vector< double > _xVarHiM3s;  ; std::vector< double > _xVarHiP3s;  ; std::vector< double > _xVarLo;  ; std::vector< double > _xVarLoM3s;  ; std::vector< double > _xVarLoP3s;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:75598,config,configuration,75598,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,1,['config'],['configuration']
Modifiability,"::~MethodCutsvirtual ~MethodCuts(void)destructorDefinition MethodCuts.cxx:270; TMVA::MethodCuts::TestClassificationvoid TestClassification()nothing to testDefinition MethodCuts.cxx:827; TMVA::MethodCuts::EFitMethodTypeEFitMethodTypeDefinition MethodCuts.h:146; TMVA::MethodCuts::kUseMinuit@ kUseMinuitDefinition MethodCuts.h:149; TMVA::MethodCuts::kUseEventScan@ kUseEventScanDefinition MethodCuts.h:150; TMVA::MethodCuts::kUseSimulatedAnnealing@ kUseSimulatedAnnealingDefinition MethodCuts.h:148; TMVA::MethodCuts::kUseGeneticAlgorithm@ kUseGeneticAlgorithmDefinition MethodCuts.h:147; TMVA::MethodCuts::kUseMonteCarlo@ kUseMonteCarloDefinition MethodCuts.h:146; TMVA::MethodCuts::kUseMonteCarloEvents@ kUseMonteCarloEventsDefinition MethodCuts.h:151; TMVA::MethodCuts::fCutRangeMinDouble_t * fCutRangeMinminimum of allowed cut rangeDefinition MethodCuts.h:175; TMVA::MethodCuts::fBinaryTreeBBinarySearchTree * fBinaryTreeBDefinition MethodCuts.h:181; TMVA::MethodCuts::fRmsSstd::vector< Double_t > * fRmsSRMSs of variables (signal)Definition MethodCuts.h:199; TMVA::MethodCuts::fMeanSstd::vector< Double_t > * fMeanSmeans of variables (signal)Definition MethodCuts.h:197; TMVA::MethodCuts::fMeanBstd::vector< Double_t > * fMeanBmeans of variables (background)Definition MethodCuts.h:198; TMVA::MethodCuts::fAllVarsITString * fAllVarsIwhat to do with variablesDefinition MethodCuts.h:188; TMVA::MethodCuts::fFitParamsstd::vector< EFitParameters > * fFitParamsvector for series of fit methodsDefinition MethodCuts.h:171; TMVA::MethodCuts::GetSeparationDouble_t GetSeparation(TH1 *, TH1 *) constcompute ""separation"" defined asDefinition MethodCuts.h:100; TMVA::MethodCuts::fTestSignalEffDouble_t fTestSignalEffused to test optimized signal efficiencyDefinition MethodCuts.h:172; TMVA::MethodCuts::fCutRangestd::vector< Interval * > fCutRangeallowed ranges for cut optimisationDefinition MethodCuts.h:177; TMVA::MethodCuts::fTmpCutMaxDouble_t * fTmpCutMaxtemporary maximum requirementDefinition MethodCu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:20065,variab,variables,20065,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,1,['variab'],['variables']
Modifiability,"::~Minuit2Minimizer ; (; ). override . Destructor (no operations) ; Definition at line 145 of file Minuit2Minimizer.cxx. Member Function Documentation. ◆ Clear(). void ROOT::Minuit2::Minuit2Minimizer::Clear ; (; ). overridevirtual . reset for consecutive minimization - implement if needed ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 156 of file Minuit2Minimizer.cxx. ◆ Contour(). bool ROOT::Minuit2::Minuit2Minimizer::Contour ; (; unsigned int ; i, . unsigned int ; j, . unsigned int & ; npoints, . double * ; xi, . double * ; xj . ). overridevirtual . find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1148 of file Minuit2Minimizer.cxx. ◆ Correlation(). double ROOT::Minuit2::Minuit2Minimizer::Correlation ; (; unsigned int ; i, . unsigned int ; j . ); const. overridevirtual . return correlation coefficient between variable i and j. ; If the variable is fixed or const the return value is zero ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 815 of file Minuit2Minimizer.cxx. ◆ CovMatrix(). double ROOT::Minuit2::Minuit2Minimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. overridevirtual . return covariance matrix elements if the variable is fixed or const the value is zero The ordering of the variables is the same as in errors and parameter value. ; This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 739 of file Minuit2Minimizer.cxx. ◆ CovMatrixStatus(). int ROOT::Minuit2::Minuit2Minimizer::CovMatrixStatus ; (; ); const. overridevirtual . return the status of the covariance matrix status = -1 : not available (inversion failed or Hesse failed) status = 0 : available but not positive defined status = 1 : covariance onl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:14000,variab,variable,14000,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variable']
Modifiability,":; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::Ranking. class TMVA::Ranking. Ranking for variables in method (implementation). Function Members (Methods); public:. virtual~Ranking(); virtual voidAddRank(const TMVA::Rank& rank); static TClass*Class(); virtual TClass*IsA() const; TMVA::Ranking&operator=(const TMVA::Ranking&); virtual voidPrint() const; TMVA::RankingRanking(); TMVA::RankingRanking(const TMVA::Ranking&); TMVA::RankingRanking(const TString& context, const TString& rankingDiscriminatorName); voidSetContext(const TString& context); voidSetDiscrName(const TString& discrName); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TMVA::MsgLogger&Log() const. Data Members; private:. TStringfContextthe ranking context; TMVA::MsgLogger*fLogger! message logger; vector<TMVA::Rank>fRankingvector of ranks; TStringfRankingDiscriminatorNamethe name of the ranking discriminator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Ranking(); default constructor. Ranking(const TString& context, const TString& rankingDiscriminatorName); constructor. ~Ranking(); destructor. void SetContext(const TString& context). void AddRank(const TMVA::Rank& rank); Add a new rank; take ownership of it. void Print() const; get maximum length of variable names. Ranking(). void SetDiscrName(const TString& discrName); { fRankingDiscriminatorName = discrName; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: Ranking.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Ranking.html:1555,variab,variable,1555,root/html532/TMVA__Ranking.html,https://root.cern,https://root.cern/root/html532/TMVA__Ranking.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable']"
Modifiability,":; a,b: One-dimensional arrays of length na, nb, respectively.; The elements of a and b must be given in ascending order.; option is a character string to specify options; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob. Output:; The returned value prob is a calculated confidence level which gives a; statistical test for compatibility of a and b.; Values of prob close to zero are taken as indicating a small probability; of compatibility. For two point sets drawn randomly from the same parent; distribution, the value of prob should be uniformly distributed between; zero and one.; in case of error the function return -1; If the 2 sets have a different number of points, the minimum of; the two sets is used. Method:; The Kolmogorov test is used. The test statistic is the maximum deviation; between the two integrated distribution functions, multiplied by the; normalizing factor (rdmax*sqrt(na*nb/(na+nb)). Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; Statistical Methods in Experimental Physics, (North-Holland,; Amsterdam 1971) 269-271). Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov). The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; over the two sorted arrays a and b representing empirical distribution; functions. The for-loop handles 3 cases: when the next points to be; evaluated satisfy a>b, a<b, or a=b:. for (Int_t i=0;i<na+nb;i++) {; if (a[ia-1] < b[ib-1]) {; rdiff -= sa;; ia++;; if (ia > na) {ok = kTRUE; break;}; } else if (a[ia-1] > b[ib-1]) {; rdiff += sb;; ib++;; if (ib > nb) {ok = kTRUE; break;}; } else {; rdiff += sb - sa;; ia++;; ib++;; if (ia > na) {ok = kTRUE; break;}; if (ib > nb) {ok = kTRUE; break;}; }; rdmax = TMath::Max(rdmax,TMath::Abs(rdiff));; }. For the last case, a=b, the algorithm advances each array by one index in an; attempt to move through the equality. However, this is in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMath.html:18508,adapt,adapted,18508,root/html528/TMath.html,https://root.cern,https://root.cern/root/html528/TMath.html,10,['adapt'],['adapted']
Modifiability,":; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::MaxLikelihoodEstimateTestStat. class RooStats::MaxLikelihoodEstimateTestStat: public RooStats::TestStatistic. MaxLikelihoodEstimateTestStat: TestStatistic that returns maximum likelihood estimate of a specified parameter. Function Members (Methods); public:. ~MaxLikelihoodEstimateTestStat(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet&); virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::MaxLikelihoodEstimateTestStatMaxLikelihoodEstimateTestStat(); RooStats::MaxLikelihoodEstimateTestStatMaxLikelihoodEstimateTestStat(const RooStats::MaxLikelihoodEstimateTestStat&); RooStats::MaxLikelihoodEstimateTestStatMaxLikelihoodEstimateTestStat(RooAbsPdf& pdf, RooRealVar& parameter); RooStats::MaxLikelihoodEstimateTestStat&operator=(const RooStats::MaxLikelihoodEstimateTestStat&); virtual boolPValueIsRightTail() const; virtual voidPValueIsRightTail(bool isright); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. TStringfMinimizer; RooRealVar*fParameter; RooAbsPdf*fPdf; Int_tfPrintLevel; Int_tfStrategy; boolfUpperLimit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MaxLikelihoodEstimateTestStat(). MaxLikelihoodEstimateTestStat(RooAbsPdf& pdf, RooRealVar& parameter). Double_t Evaluate(RooAbsData& data, RooArgSet& ). const TString GetVarName() const. void PValueIsRightTail(bool isright); { fUpperLimit = isright; }. bool PValueIsRightTail(void); { return fUpperLimit; }. » Author: Kyle Cranmer June 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__MaxLikelihoodEstimateTestStat.html:1453,Inherit,Inheritance,1453,root/html532/RooStats__MaxLikelihoodEstimateTestStat.html,https://root.cern,https://root.cern/root/html532/RooStats__MaxLikelihoodEstimateTestStat.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Abs(fFunc->EvalPar(fX, nullptr));; 222 }; 223 // evaluate (x - x0) ^n * f(x); 224 Double_t EvalNMom(Double_t x) const; 225 {; 226 fX[0] = x;; 227 return TMath::Power(fX[0] - fX0, fN) * TMath::Abs(fFunc->EvalPar(fX, nullptr));; 228 }; 229 ; 230 TF1 *fFunc;; 231 mutable Double_t fX[1];; 232 const double *fPar;; 233 Bool_t fAbsVal;; 234 Double_t fN;; 235 Double_t fX0;; 236};; 237 ; 238////////////////////////////////////////////////////////////////////////////////; 239/** \class TF1; 240 \ingroup Functions; 241 \brief 1-Dim function class; 242 ; 243 ; 244## TF1: 1-Dim function class; 245 ; 246A TF1 object is a 1-Dim function defined between a lower and upper limit.; 247The function may be a simple function based on a TFormula expression or a precompiled user function.; 248The function may have associated parameters.; 249TF1 graphics function is via the TH1 and TGraph drawing functions.; 250 ; 251The following types of functions can be created:; 252 ; 2531. [Expression using variable x and no parameters](\ref F1); 2542. [Expression using variable x with parameters](\ref F2); 2553. [Lambda Expression with variable x and parameters](\ref F3); 2564. [A general C function with parameters](\ref F4); 2575. [A general C++ function object (functor) with parameters](\ref F5); 2586. [A member function with parameters of a general C++ class](\ref F6); 259 ; 260 ; 261 ; 262\anchor F1; 263### 1 - Expression using variable x and no parameters; 264 ; 265#### Case 1: inline expression using standard C++ functions/operators; 266 ; 267Begin_Macro(source); 268{; 269 auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; 270 fa1->Draw();; 271}; 272End_Macro; 273 ; 274#### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters; 275 ; 276 ; 277Begin_Macro(source); 278{; 279 auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; 280 fa2->Draw();; 281}; 282End_Macro; 283 ; 284#### Case 3: inline expression using a user defined CLING function by name; 285 ; 286~~~~{.cpp}; 287Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:7772,variab,variable,7772,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['variab'],['variable']
Modifiability,":BuildConfig&operator=(const RooSimWSTool::BuildConfig&); voidrestrictBuild(const char* catName, const char* stateList); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. RooSimWSTool::BuildConfigBuildConfig(); voidinternalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimWSTool__BuildConfig.html:5373,config,configuration,5373,root/html534/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html534/RooSimWSTool__BuildConfig.html,2,['config'],['configuration']
Modifiability,":Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 46 of file TEnumConstant.h. ◆ DeclFileName(). static const char * TEnumConstant::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 46 of file TEnumConstant.h. ◆ GetAddress(). void * TEnumConstant::GetAddress ; (; ); const. inlineoverridevirtual . Return address of global. ; Reimplemented from TGlobal.; Definition at line 39 of file TEnumConstant.h. ◆ GetFullTypeName(). const char * TEnumConstant::GetFullTypeName ; (; ); const. inlineoverridevirtual . Get full type description of global variable, e,g.: ""class TDirectory*"". ; Reimplemented from TGlobal.; Definition at line 44 of file TEnumConstant.h. ◆ GetType(). const TEnum * TEnumConstant::GetType ; (; ); const. inline . Definition at line 41 of file TEnumConstant.h. ◆ GetTypeName(). const char * TEnumConstant::GetTypeName ; (; ); const. inlineoverridevirtual . Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"". ; Result needs to be used or copied immediately. ; Reimplemented from TGlobal.; Definition at line 43 of file TEnumConstant.h. ◆ GetValue(). Long64_t TEnumConstant::GetValue ; (; ); const. inline . Definition at line 40 of file TEnumConstant.h. ◆ IsA(). TClass * TEnumConstant::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TDictionary.; Definition at line 46 of file TEnumConstant.h. ◆ Streamer(). void TEnumConstant::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDictionary. ◆ StreamerNVirtual(). void TEnumConstant::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 46 of file TEnumConstant.h. Member Data Documentation. ◆ fEnum. const TEnum* TEnumConstant::fEnum. private . Definition at line 31 of file TEnumConstant.h. ◆ fValue. Long64_t TEnumConstant::fValue. private . Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnumConstant.html:16828,variab,variable,16828,doc/master/classTEnumConstant.html,https://root.cern,https://root.cern/doc/master/classTEnumConstant.html,1,['variab'],['variable']
Modifiability,:Config::IONames&GetIONames(); TMVA::Config::VariablePlotting&GetVariablePlotting(); static TMVA::Config&Instance(); virtual TClass*IsA() const; Bool_tIsSilent() const; voidSetDrawProgressBar(Bool_t d); voidSetSilent(Bool_t s); voidSetUseColor(Bool_t uc); voidSetWriteOptionsReference(Bool_t w); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Bool_tUseColor() const; Bool_tWriteOptionsReference() const. private:. virtual~Config(); TMVA::ConfigConfig(); TMVA::ConfigConfig(const TMVA::Config&); TMVA::MsgLogger&Log() const; TMVA::Config&operator=(const TMVA::Config&). Data Members; public:. IONamesfIONamesCustomisable weight file properties; VariablePlottingfVariablePlottingCustomisable plotting properties. private:. atomic<Bool_t>fDrawProgressBardraw progress bar to indicate training evolution; TMVA::MsgLogger*fLoggermessage logger; atomic<Bool_t>fSilentno output at all; atomic<Bool_t>fUseColoredConsolecoloured standard output; atomic<Bool_t>fWriteOptionsReferenceif set true: Configurable objects write file with option reference; static atomic<TMVA::Config*>fgConfigPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Config(); constructor - set defaults. ~Config(); destructor. void DestroyInstance(); static function: destroy TMVA instance. TMVA::Config& Instance(); static function: returns TMVA instance. Bool_t UseColor() const; { return fUseColoredConsole; }. void SetUseColor(Bool_t uc); { fUseColoredConsole = uc; }. Bool_t IsSilent() const; { return fSilent; }. void SetSilent(Bool_t s); { fSilent = s; }. Bool_t WriteOptionsReference() const; { return fWriteOptionsReference; }. void SetWriteOptionsReference(Bool_t w); { fWriteOptionsReference = w; }. Bool_t DrawProgressBar() const; { return fDrawProgressBar; }. void SetDrawProgressBar(Bool_t d); { fDrawProgressBar = d; }. VariablePlotting& GetVariablePlotting(); { return fVariable,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Config.html:1485,Config,Configurable,1485,root/html602/TMVA__Config.html,https://root.cern,https://root.cern/root/html602/TMVA__Config.html,4,['Config'],"['Config', 'Configurable']"
Modifiability,":CvSplit::RecombineKFoldDataSetvirtual void RecombineKFoldDataSet(DataSetInfo &dsi, Types::ETreeType tt=Types::kTraining)Definition CvSplit.cxx:114; TMVA::CvSplit::MakeKFoldDataSetvirtual void MakeKFoldDataSet(DataSetInfo &dsi)=0; TMVA::CvSplit::PrepareFoldDataSetvirtual void PrepareFoldDataSet(DataSetInfo &dsi, UInt_t foldNumber, Types::ETreeType tt)Set training and test set vectors of dataset described by dsi.Definition CvSplit.cxx:57; TMVA::DataInputHandlerClass that contains all the data information.Definition DataInputHandler.h:78; TMVA::DataLoaderDefinition DataLoader.h:50; TMVA::DataLoader::fDataInputHandlerDataInputHandler * fDataInputHandler->Definition DataLoader.h:189; TMVA::DataLoader::CreateEventAssignTreesTTree * CreateEventAssignTrees(const TString &name)create the data assignment tree (for event-wise data assignment by user)Definition DataLoader.cxx:195; TMVA::DataLoader::AddVariablesArrayvoid AddVariablesArray(const TString &expression, int size, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating array of variables in data set info in case input tree provides an array ...Definition DataLoader.cxx:504; TMVA::DataLoader::SetBackgroundTreevoid SetBackgroundTree(TTree *background, Double_t weight=1.0)Definition DataLoader.cxx:439; TMVA::DataLoader::AddSignalTreevoid AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)number of signal events (used to compute significance)Definition DataLoader.cxx:371; TMVA::DataLoader::AddDataSetDataSetInfo & AddDataSet(DataSetInfo &)Definition DataLoader.cxx:119; TMVA::DataLoader::AddSpectatorvoid AddSpectator(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:524; TMVA::DataLoader::SetInputTreesFromEventAssignTreesvoid SetInputTreesFromEventAssignTrees()assign event-wise local trees to data setDefinition DataLoader.cxx:319; TMVA::DataLoa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:31940,variab,variables,31940,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,1,['variab'],['variables']
Modifiability,":DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 60 of file TSelectorEntries.h. ◆ GetEntry(). Int_t TSelectorEntries::GetEntry ; (; Long64_t ; entry, . Int_t ; getall = 0 . ). overridevirtual . Read entry. ; Reimplemented from TSelector.; Definition at line 115 of file TSelectorEntries.cxx. ◆ GetOutputList(). TList * TSelectorEntries::GetOutputList ; (; ); const. inlineoverridevirtual . Reimplemented from TSelector.; Definition at line 56 of file TSelectorEntries.h. ◆ GetSelectedRows(). virtual Long64_t TSelectorEntries::GetSelectedRows ; (; ); const. inlinevirtual . Definition at line 52 of file TSelectorEntries.h. ◆ Init(). void TSelectorEntries::Init ; (; TTree * ; tree). overridevirtual . The Init() function is called when the selector needs to initialize a new tree or chain. ; Typically here the branch addresses and branch pointers of the tree will be set. It is normally not necessary to make changes to the generated code, but the routine can be extended by the user if needed. Init() will be called many times when running on PROOF (once per file to be processed). ; Reimplemented from TSelector.; Definition at line 129 of file TSelectorEntries.cxx. ◆ IsA(). TClass * TSelectorEntries::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TSelector.; Definition at line 60 of file TSelectorEntries.h. ◆ Notify(). bool TSelectorEntries::Notify ; (; ). overridevirtual . This function is called at the first entry of a new tree in a chain. ; Reimplemented from TSelector.; Definition at line 136 of file TSelectorEntries.cxx. ◆ Process(). bool TSelectorEntries::Process ; (; Long64_t ; entry). overridevirtual . The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ; The entry argument specifies which entry in the currently loaded tree is to be processed. It can be passed to either TSelector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorEntries.html:16874,extend,extended,16874,doc/master/classTSelectorEntries.html,https://root.cern,https://root.cern/doc/master/classTSelectorEntries.html,1,['extend'],['extended']
Modifiability,":DefaultCoordinateSystemTag>Unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Polar3D<double>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1Polar3D_double__-p1DefaultCoordinateSystemTag_.html:13742,Inherit,Inheritance,13742,root/html532/ROOT__Math__DisplacementVector3D_-p1Polar3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1Polar3D_double__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":DefaultCoordinateSystemTag>Unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Polar3D<double>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Polar3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const Scalar[] src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector3D<ROOT::Math::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Polar3D_double__-p1DefaultCoordinateSystemTag_.html:10347,Inherit,Inheritance,10347,root/html602/ROOT__Math__DisplacementVector3D_-p1Polar3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1Polar3D_double__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Detail::CodeSquashContext &ctx) const override;  This function defines the analytical integral translation for the class. ;  ; TObject * clone (const char *newname) const override;  ; RooAbsReal const & coefficient () const;  Get the coefficient ""c"". ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; TClass * IsA () const override;  ; bool negateCoefficient () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ; RooAbsReal const & variable () const;  Get the x variable. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::uni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExponential.html:2096,inherit,inherited,2096,doc/master/classRooExponential.html,https://root.cern,https://root.cern/doc/master/classRooExponential.html,1,['inherit'],['inherited']
Modifiability,":DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a); ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>Unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const. Data Members; private:. ROOT::Math::Cartesian2D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXY(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). DisplacementVector2D & operator=(const ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& ). Assignment from a foreign 2D vector type, for example, Hep2Vector; Precondition: v must implement methods x() and y(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector2D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector2D<ROOT::Math::Cartesian2D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b). Set int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_Double32_t__-p1DefaultCoordinateSystemTag_.html:7812,Inherit,Inheritance,7812,root/html532/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DisplacementVector2D_-p1Cartesian2D_Double32_t__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":DistSamplerOptions& opt); ROOT::Math::IOptions*ExtraOptions() const; static ROOT::Math::IOptions*FindDefault(const char* name); ROOT::Math::DistSamplerOptions&operator=(const ROOT::Math::DistSamplerOptions& opt); voidPrint(ostream& os = std::cout) const; static voidPrintDefault(const char* name, ostream& os = std::cout); intPrintLevel() const; const string&Sampler() const; voidSetAlgorithm(const char* type); static voidSetDefaultAlgorithm1D(const char* algo); static voidSetDefaultAlgorithmND(const char* algo); static voidSetDefaultPrintLevel(int level); static voidSetDefaultSampler(const char* type); voidSetExtraOptions(const ROOT::Math::IOptions& opt); voidSetPrintLevel(int level); voidSetSampler(const char* type). Data Members; private:. stringfAlgoTypeDistSampler algorithmic specification (for Unuran only); ROOT::Math::IOptions*fExtraOptionsextra options; intfLeveldebug print level; stringfSamplerTypeDistSampler type (Unuran, Foam, etc...)xs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetDefaultSampler(const char* type); static methods for setting and retrieving the default options. void SetDefaultAlgorithm1D(const char* algo). void SetDefaultAlgorithmND(const char* algo). void SetDefaultPrintLevel(int level). const std::string & DefaultSampler(). const std::string & DefaultAlgorithm1D(). const std::string & DefaultAlgorithmND(). int DefaultPrintLevel(). ROOT::Math::IOptions & Default(const char* name); retrieve extra options - if not existing create a IOptions. ROOT::Math::IOptions * FindDefault(const char* name); find extra options - return 0 if not existing. void PrintDefault(const char* name, ostream& os = std::cout); print all the default options for the name given. DistSamplerOptions(int dim = 0); constructor using the default options; pass optionally a pointer to the additional options; otherwise look if they exist for this default minimizer; and in that case they are copied in the constructed instance; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DistSamplerOptions.html:1764,Inherit,Inheritance,1764,root/html602/ROOT__Math__DistSamplerOptions.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DistSamplerOptions.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Divide ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1, . Option_t * ; option = """" . ). overridevirtual . Replace contents of this profile by the division of h1 by h2. ; this = c1*h1/(c2*h2); The function return kFALSE if the divide operation failed ; Reimplemented from TH1.; Definition at line 547 of file TProfile.cxx. ◆ Divide() [3/3]. Bool_t TProfile::Divide ; (; TF1 * ; h1, . Double_t ; c1 = 1 . ). overridevirtual . Performs the operation: this = this/(c1*f1). ; This function is not implemented for the TProfile ; Reimplemented from TH1.; Definition at line 453 of file TProfile.cxx. ◆ ExtendAxis(). void TProfile::ExtendAxis ; (; Double_t ; x, . TAxis * ; axis . ). overridevirtual . Profile histogram is resized along x axis such that x is in the axis range. ; The new axis limits are recomputed by doubling iteratively the current axis range until the specified value x is within the limits. The algorithm makes a copy of the histogram, then loops on all bins of the old histogram to fill the extended histogram. Takes into account errors (Sumw2) if any. The axis must be extendable before invoking this function.; Ex: h->GetXaxis()->SetCanExtend(kTRUE) ; Reimplemented from TH1.; Definition at line 1583 of file TProfile.cxx. ◆ Fill() [1/6]. Int_t TProfile::Fill ; (; const char * ; namex, . Double_t ; y . ). overridevirtual . Fill a Profile histogram (no weights). ; Reimplemented from TH1.; Definition at line 680 of file TProfile.cxx. ◆ Fill() [2/6]. Int_t TProfile::Fill ; (; const char * ; namex, . Double_t ; y, . Double_t ; w . ). virtual . Fill a Profile histogram with weights. ; Definition at line 742 of file TProfile.cxx. ◆ Fill() [3/6]. Int_t TProfile::Fill ; (; const Double_t * ; v). inlineprotected . Definition at line 55 of file TProfile.h. ◆ Fill() [4/6]. Int_t TProfile::Fill ; (; Double_t ; x, . Double_t ; y . ). overridevirtual . Fill a Profile histogram (no weights). ; Reimplemented from TH1.; Definition at line 650 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:68622,extend,extended,68622,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['extend'],['extended']
Modifiability,":DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_t_inSharedList! Is in shared list; Int_t_refCount! Use count; TUUID_uuidUnique object ID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSharedProperties(); Default constructor. RooSharedProperties(const char* uuidstr); Constructor with unique-id string. ~RooSharedProperties(); Destructor. Bool_t operator==(const RooSharedProperties& other); Return true of unique id of this property is equal to that of other. void Print(Option_t* opts = 0) const; Printing interface. RooSharedProperties(). RooSharedProperties* clone(). void increaseRefCount(); { _refCount++ ; }. void decreaseRefCount(); { if (_refCount>0) _refCount-- ; }. Int_t refCount() const; { return _refCount ; }. void setInSharedList(); { _inSharedList = kTRUE ; }. Bool_t inSharedList() const; { return _inSharedList ; }. TString asString(); { return TString(_uuid.AsString()); }. » Last changed: Sat Jun 20 17:30:31 2015 » Last generated: 2015-06-20 17:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooSharedProperties.html:6250,Inherit,Inheritance,6250,root/html604/RooSharedProperties.html,https://root.cern,https://root.cern/root/html604/RooSharedProperties.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_t_inSharedList! Is in shared list; Int_t_refCount! Use count; TUUID_uuidUnique object ID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSharedProperties(); Default constructor. RooSharedProperties(const char* uuidstr); Constructor with unique-id string. ~RooSharedProperties(); Destructor. Bool_t operator==(const RooSharedProperties& other); Return true of unique id of this property is equal to that of other. void Print(Option_t* opts = 0) const; Printing interface. RooSharedProperties(). RooSharedProperties* clone(). void increaseRefCount(); { _refCount++ ; }. void decreaseRefCount(); { if (_refCount>0) _refCount-- ; }. Int_t refCount() const; { return _refCount ; }. void setInSharedList(); { _inSharedList = kTRUE ; }. Bool_t inSharedList() const; { return _inSharedList ; }. TString asString(); { return TString(_uuid.AsString()); }. » Last changed: Tue Jun 30 14:35:39 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSharedProperties.html:6250,Inherit,Inheritance,6250,root/html602/RooSharedProperties.html,https://root.cern,https://root.cern/root/html602/RooSharedProperties.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":DoError(int level, const char* location, const char* fmt, va_list va) const; voidextendBuffer(Int_t inc); voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. Int_t_len; char*_nameList[_len]. protected:. static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNameSet(); Default constructor. RooNameSet(const RooArgSet& argSet); Construct from RooArgSet. RooNameSet(const RooNameSet& other); Copy constructor. void extendBuffer(Int_t inc); Increment internal buffer by specified amount. void refill(const RooArgSet& argSet); Refill internal contents from names in given argSet. RooArgSet* select(const RooArgSet& list) const; Construct a RooArgSet of objects in input 'list'; whose names match to those in the internal name; list of RooNameSet. ~RooNameSet(); Destructor. Bool_t operator==(const RooNameSet& other); Comparison operator. RooNameSet& operator=(const RooNameSet& ); Assignment operator. void printName(ostream& os) const; Print name of nameset. void printTitle(ostream& os) const; Print title of nameset. void printClassName(ostream& os) const; Print class name of nameset. void printValue(ostream& os) const; Print value of nameset, i.e the list of names. TObject* Clone(const char* ) const; { return new RooNameSet(*this) ; }. void Print(Option_t* options = 0) const. » Last changed: Fri Dec 2 14:26:55 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNameSet.html:7078,extend,extendBuffer,7078,root/html532/RooNameSet.html,https://root.cern,https://root.cern/root/html532/RooNameSet.html,2,['extend'],['extendBuffer']
Modifiability,":DoError(int level, const char* location, const char* fmt, va_list va) const; voidextendBuffer(Int_t inc); voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. Int_t_len; char*_nameList[_len]. protected:. static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNameSet(); Default constructor. RooNameSet(const RooArgSet& argSet); Construct from RooArgSet. RooNameSet(const RooNameSet& other); Copy constructor. void extendBuffer(Int_t inc); Increment internal buffer by specified amount. void refill(const RooArgSet& argSet); Refill internal contents from names in given argSet. RooArgSet* select(const RooArgSet& list) const; Construct a RooArgSet of objects in input 'list'; whose names match to those in the internal name; list of RooNameSet. ~RooNameSet(); Destructor. Bool_t operator==(const RooNameSet& other); Comparison operator. RooNameSet& operator=(const RooNameSet& ); Assignment operator. void printName(ostream& os) const; Print name of nameset. void printTitle(ostream& os) const; Print title of nameset. void printClassName(ostream& os) const; Print class name of nameset. void printValue(ostream& os) const; Print value of nameset, i.e the list of names. TObject* Clone(const char* ) const; { return new RooNameSet(*this) ; }. void Print(Option_t* options = 0) const. » Last changed: Mon Dec 7 13:48:25 2009 » Last generated: 2009-12-07 13:48; This page has been automatically generated. For comments or suggestions regarding the do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNameSet.html:7023,extend,extendBuffer,7023,root/html526/RooNameSet.html,https://root.cern,https://root.cern/root/html526/RooNameSet.html,1,['extend'],['extendBuffer']
Modifiability,":DoError(int level, const char* location, const char* fmt, va_list va) const; voidextendBuffer(Int_t inc); voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. Int_t_len; char*_nameList[_len]. protected:. static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNameSet(); Default constructor. RooNameSet(const RooArgSet& argSet); Construct from RooArgSet. RooNameSet(const RooNameSet& other); Copy constructor. void extendBuffer(Int_t inc); Increment internal buffer by specified amount. void refill(const RooArgSet& argSet); Refill internal contents from names in given argSet. RooArgSet* select(const RooArgSet& list) const; Construct a RooArgSet of objects in input 'list'; whose names match to those in the internal name; list of RooNameSet. ~RooNameSet(); Destructor. Bool_t operator==(const RooNameSet& other); Comparison operator. RooNameSet& operator=(const RooNameSet& ); Assignment operator. void printName(ostream& os) const; Print name of nameset. void printTitle(ostream& os) const; Print title of nameset. void printClassName(ostream& os) const; Print class name of nameset. void printValue(ostream& os) const; Print value of nameset, i.e the list of names. TObject* Clone(const char* ) const; { return new RooNameSet(*this) ; }. void Print(Option_t* options = 0) const. » Last changed: Mon Jul 4 15:23:28 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For comments or suggestions regarding the do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNameSet.html:7078,extend,extendBuffer,7078,root/html530/RooNameSet.html,https://root.cern,https://root.cern/root/html530/RooNameSet.html,1,['extend'],['extendBuffer']
Modifiability,":DoError(int level, const char* location, const char* fmt, va_list va) const; voidextendBuffer(Int_t inc); voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. public:. Int_t_len; char*_nameList[_len]. protected:. static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNameSet(); Default constructor. RooNameSet(const RooArgSet& argSet); Construct from RooArgSet. RooNameSet(const RooNameSet& other); Copy constructor. void extendBuffer(Int_t inc); Increment internal buffer by specified amount. void refill(const RooArgSet& argSet); Refill internal contents from names in given argSet. RooArgSet* select(const RooArgSet& list) const; Construct a RooArgSet of objects in input 'list'; whose names match to those in the internal name; list of RooNameSet. ~RooNameSet(); Destructor. Bool_t operator==(const RooNameSet& other); Comparison operator. RooNameSet& operator=(const RooNameSet& ); Assignment operator. void printName(ostream& os) const; Print name of nameset. void printTitle(ostream& os) const; Print title of nameset. void printClassName(ostream& os) const; Print class name of nameset. void printValue(ostream& os) const; Print value of nameset, i.e the list of names. TObject* Clone(const char* ) const; { return new RooNameSet(*this) ; }. void Print(Option_t* options = 0) const. » Last changed: Sat Oct 9 22:38:44 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNameSet.html:7009,extend,extendBuffer,7009,root/html528/RooNameSet.html,https://root.cern,https://root.cern/root/html528/RooNameSet.html,1,['extend'],['extendBuffer']
Modifiability,":DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; Int_tGetBoostNum(); TMVA::Types::EBoostStageGetBoostStage(); const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; TMVA::IMethod*TMVA::MethodCompositeBase::GetCurrentMethod(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&TMVA::MethodBase::GetEventCollection(TMVA::Types::ETreeType type); virtual const char*TObject::GetIconName() const; const TString&TMVA::MethodBase::GetInputLabel(Int_t i) const; const TString&TMVA::MethodBase::GetInputTitle(Int_t i) const; const TString&TMVA::MethodBase::GetInputVar(Int_t i) const; const TString&TMVA::MethodBase::GetJobName() const; TMVA::IMethod*TMVA::MethodCompositeBase::GetLast",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBoost.html:3006,Config,Configurable,3006,root/html532/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBoost.html,1,['Config'],['Configurable']
Modifiability,":ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveCaloDataHist.html:22218,variab,variables,22218,root/html604/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html604/TEveCaloDataHist.html,2,['variab'],['variables']
Modifiability,":ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCaloDataHist(); Constructor. ~TEveCaloDataHist(); Destructor. void DataChanged(); Update limits and notify data users. void GetCellList(Float_t etaMin, Float_t etaMax, Float_t phi, Float_t phiRng, TEveCaloData::vCellId_t& out) const; Get list of cell IDs in given eta and phi range. void Rebin(TAxis* ax, TAxis* ay, TEveCaloData::vCellId_t& in, Bool_t et, TEveCaloData::RebinData_t& out) const. void GetCellData(const TEveCaloData::CellId_t& id, TEveCaloData::CellData_t& data) const; Get cell geometry and value from cell ID. Int_t AddHistogram(TH2F* hist); Add new slice to calo tower. Updates cached variables fMaxValE; and fMaxValEt; Return last index in the vector of slice infos. TH2F* GetHist(Int_t slice) const; Get histogram in given slice. void GetEtaLimits(Double_t& min, Double_t& max) const; Get eta limits. void GetPhiLimits(Double_t& min, Double_t& max) const; Get phi limits. TEveCaloData& operator=(const TEveCaloDataHist& ). TEveCaloDataHist(const TEveCaloDataHist& ). THStack* GetStack(); { return fHStack; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloDataHist.html:22218,variab,variables,22218,root/html602/TEveCaloDataHist.html,https://root.cern,https://root.cern/root/html602/TEveCaloDataHist.html,2,['variab'],['variables']
Modifiability,":ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetCone(const Text_t* n = ""TEveJetCone"", const Text_t* t = """"); Constructor. void ComputeBBox(); Compute bounding-box of the data. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveJetConeProjected class. Int_t AddCone(Float_t eta, Float_t phi, Float_t cone_r, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * cone_r : cone radius in eta-phi space; * length : length of the cone; * if cylinder is set and length is adapted to cylinder.; - if length is given, it will be used as scalar factor; * if cylinder is not set, length is used as length of the cone; Return 0 on sucess. Int_t AddEllipticCone(Float_t eta, Float_t phi, Float_t reta, Float_t rphi, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * (reta, rphi) : radius of cone in eta-phi space; * length : length of the cone; * if cylinder is set and length is adapted to cylinder.; - if length is given, it will be used as scalar factor; * if cylinder is not set, length is used as length of the cone; Returns 0 on sucess. TEveVector CalcEtaPhiVec(Float_t eta, Float_t phi) const; Fill TEveVector with eta and phi, magnitude 1. TEveVector CalcBaseVec(Float_t eta, Float_t phi) const; Returns point on the base of the cone with given eta and phi. TEveVector CalcBaseVec(Float_t alpha) const; Returns point on the base of the cone w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveJetCone.html:24356,adapt,adapted,24356,root/html602/TEveJetCone.html,https://root.cern,https://root.cern/root/html602/TEveJetCone.html,4,['adapt'],['adapted']
Modifiability,:EContext_tkCXX_IndirectProto; static TTabCom::EContext_tkCXX_NewProto; static TTabCom::EContext_tkCXX_ScopeMember; static TTabCom::EContext_tkCXX_ScopeProto; static TTabCom::(anonymous)kDebug; static TTabCom::EContext_tkNUM_PAT; static TTabCom::EContext_tkROOT_Load; static TTabCom::EContext_tkSYS_EnvVar; static TTabCom::EContext_tkSYS_FileName; static TTabCom::EContext_tkSYS_UserName; static TTabCom::EContext_tkUNKNOWN_CONTEXT. private:. char*fBufinitialized by Hook(); Int_tfLastIterfrodo: iteration counter for recursive MakeClassFromVarName; Pattern_tfPat[25][1024]array of patterns; ULong64_tfPrevInterpMarker; const char*fRegExp[25]corresponding regular expression plain text; Bool_tfVarIsPointerfrodo: pointer or not flag; TSeqCollection*fpClasses; TSeqCollection*fpDirectives; TSeqCollection*fpEnvVars; TSeqCollection*fpFiles; TSeqCollection*fpGlobals; int*fpLocinitialized by Hook(); TSeqCollection*fpPragmas; TSeqCollection*fpSysIncFiles; TSeqCollection*fpUsers. Class Charts. Inheritance Chart:. TTabCom. Function documentation; TTabCom(); Default constructor. ~TTabCom(); Destructor. void ClearClasses(); Clear classes and namespace collections. void ClearCppDirectives(); Forget all Cpp directives seen so far. void ClearEnvVars(); Forget all environment variables seen so far. void ClearFiles(); Close all files. void ClearGlobalFunctions(); Forget all global functions seen so far.; Not needed anymore. Use gROOT->GetListOfGlobalFunctions(). void ClearGlobals(); Forget all global variables seen so far.; With teh new implamentation the list is gROOT->GetListOfGlobals(true). void ClearPragmas(); Forget all pragmas seen so far. void ClearSysIncFiles(); Close system files. void ClearUsers(); Forget all user seen so far. void ClearAll(); clears all lists; except for user names and system include files. void RehashClasses(); Do the class rehash. void RehashCppDirectives(); Cpp rehashing. void RehashEnvVars(); Environemnt variables rehashing. void RehashFiles(); Close files. vo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTabCom.html:7484,Inherit,Inheritance,7484,root/html602/TTabCom.html,https://root.cern,https://root.cern/root/html602/TTabCom.html,2,['Inherit'],['Inheritance']
Modifiability,":EGeoVisibilityAttTGeoAtt::kVisStreamed; static TGeoAtt::EGeoVisibilityAttTGeoAtt::kVisThis; static TGeoAtt::EGeoVisibilityAttTGeoAtt::kVisTouched; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. UInt_tTGeoAtt::fGeoAttoption flags; Int_tTVirtualGeoTrack::fIdtrack id; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTVirtualGeoTrack::fPDGtrack pdg code; TVirtualGeoTrack*TVirtualGeoTrack::fParentid of parent; TObject*TVirtualGeoTrack::fParticleparticle for this track; TObjArray*TVirtualGeoTrack::fTracksdaughter tracks. private:. Int_tfNpointsnumber of stored points; Double_t*fPoints[fNpoints] array of points (x,y,z,t) belonging to this track; Int_tfPointsSizecapacity of points array. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTrack(); -*-*Tracks default constructor; *-* ==========================. TGeoTrack(Int_t id, Int_t pdgcode, TVirtualGeoTrack* parent = 0, TObject* particle = 0); Constructor. TGeoTrack(const TGeoTrack& ); Copy ctor. NOT TO BE CALLED. TGeoTrack& operator=(const TGeoTrack& ); Assignment operator. NOT TO BE CALLED. ~TGeoTrack(); Destructor. TVirtualGeoTrack * AddDaughter(Int_t id, Int_t pdgcode, TObject* particle = 0); Add a daughter track to this. Int_t AddDaughter(TVirtualGeoTrack* other); Add a daughter and return its index. void AnimateTrack(Double_t tmin = 0, Double_t tmax = 4.9999999999999998E-8, Double_t nframes = 200, Option_t* option = ""/*""); Draw animation of this track. void AddPoint(Double_t x, Double_t y, Double_t z, Double_t t); Add a point on the track. void Browse(TBrowser* b); How-to-browse for a track. Int_t DistancetoPrimitive(Int_t px, Int_t py); Returns distance to track primitive for picking. void Draw(Option_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoTrack.html:12749,Inherit,Inheritance,12749,root/html602/TGeoTrack.html,https://root.cern,https://root.cern/root/html602/TGeoTrack.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":EQueryActionTProofServ::GetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE); virtual voidTProofServ::HandleException(Int_t sig); virtual voidHandleFork(TMessage* mess); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual voidHandleSigPipe(); virtual voidTProofServ::HandleSocketInput(); virtual Int_tTProofServ::HandleSocketInput(TMessage* mess, Bool_t all); virtual voidHandleTermination(); virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual voidTProofServ::HandleUrgentData(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTProofServ::Interrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTProofServ::IsActive(); virtual Bool_tTApplication::IsCmdThread(); Bool_tTProofServ::IsEndMaster() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTProofServ::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProofServ::IsParallel() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTProofServ::IsTopMaster() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; static voidTQObject::LoadRQ_OBJECT(); voidTProofServ::LogToMaster(Bool_t on = kTRUE); virtual voidTApplication::Lowe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofServLite.html:8320,Inherit,InheritsFrom,8320,root/html532/TProofServLite.html,https://root.cern,https://root.cern/root/html532/TProofServLite.html,2,['Inherit'],['InheritsFrom']
Modifiability,":EQueryActionTProofServ::GetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE); virtual voidTProofServ::HandleException(Int_t sig); virtual voidHandleFork(TMessage* mess); virtual voidTApplication::HandleIdleTimer()SIGNAL ; virtual voidHandleSigPipe(); virtual voidTProofServ::HandleSocketInput(); virtual Int_tTProofServ::HandleSocketInput(TMessage* mess, Bool_t all); virtual voidHandleTermination(); virtual Bool_tTApplication::HandleTermInput(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual voidTProofServ::HandleUrgentData(); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTApplication::Hide(); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTApplication::Iconify(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTApplication::Init(); voidTApplication::InitializeGraphics(); TObjArray*TApplication::InputFiles() const; virtual voidTObject::Inspect() constMENU ; voidTProofServ::Interrupt(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; static Bool_tTProofServ::IsActive(); virtual Bool_tTApplication::IsCmdThread(); Bool_tTProofServ::IsEndMaster() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTProofServ::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProofServ::IsParallel() const; Bool_tTApplication::IsRunning() const; virtual Bool_tTObject::IsSortable() const; Bool_tTProofServ::IsTopMaster() const; Bool_tTObject::IsZombie() const; virtual voidTApplication::KeyPressed(Int_t key)SIGNAL ; virtual voidTApplication::LineProcessed(const char* line)SIGNAL ; voidTProofServ::LogToMaster(Bool_t on = kTRUE); virtual voidTApplication::Lower(); virtual voidTQObject::LowPriority",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofServLite.html:8537,Inherit,InheritsFrom,8537,root/html602/TProofServLite.html,https://root.cern,https://root.cern/root/html602/TProofServLite.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ERunStatusTProof::GetRunStatus() const; Int_tTProof::GetSeqNum() const; Int_tTProof::GetSessionID() const; const char*TProof::GetSessionTag() const; virtual TFileCollection*TProof::GetStagingStatusDataSet(const char* dataset); voidTProof::GetStatistics(Bool_t verbose = kFALSE); Int_tTProof::GetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*TProof::GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*TProof::GetUrl(); const char*TProof::GetUser() const; const char*TProof::GetWorkDir() const; voidTProof::GoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsTty() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tTProof::Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); static voidTQObject::LoadRQ_OBJECT(); voidTProof::LogMessage(const char* msg, Bool_t all)SIGNAL ; static voidTProof::LogViewer(const char* url = 0, Int_t sessionidx = 0); virtual voidTQObject::LowPriority(const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofCondor.html:11250,Inherit,InheritsFrom,11250,root/html534/TProofCondor.html,https://root.cern,https://root.cern/root/html534/TProofCondor.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ERunStatusTProof::GetRunStatus() const; Int_tTProof::GetSeqNum() const; Int_tTProof::GetSessionID() const; const char*TProof::GetSessionTag() const; virtual TFileCollection*TProof::GetStagingStatusDataSet(const char* dataset); voidTProof::GetStatistics(Bool_t verbose = kFALSE); Int_tTProof::GetStatus() const; virtual const char*TNamed::GetTitle() const; virtual TTree*TProof::GetTreeHeader(TDSet* tdset); virtual UInt_tTObject::GetUniqueID() const; const char*TProof::GetUrl(); const char*TProof::GetUser() const; const char*TProof::GetWorkDir() const; voidTProof::GoAsynchronous(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsTty() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tTProof::Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); voidTProof::LogMessage(const char* msg, Bool_t all)SIGNAL ; static voidTProof::LogViewer(const char* url = 0, Int_t sessionidx = 0); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofCondor.html:11073,Inherit,InheritsFrom,11073,root/html602/TProofCondor.html,https://root.cern,https://root.cern/root/html602/TProofCondor.html,4,['Inherit'],['InheritsFrom']
Modifiability,":EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. static RooNumIntFactory*_instance; map<std::string,std::pair<RooAbsIntegrator*,std::string> >_map. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumIntFactory(); Constructor. Register all known integrators by calling; their static registration functions. ~RooNumIntFactory(); Destructor. RooNumIntFactory(const RooNumIntFactory& other); Copy constructor. RooNumIntFactory& instance(); Static method returning reference to singleton instance of factory. void cleanup(); Cleanup routine called by atexit() handler installed by RooSentinel. Bool_t storeProtoIntegrator(RooAbsIntegrator* proto, const RooArgSet& defConfig, const char* depName = """"); Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; default configuration options and an optional list of names of other numeric integrators; on which this integrator depends. Returns true if integrator was previously registered. const RooAbsIntegrator* getProtoIntegrator(const char* name); Return prototype integrator with given (class) name. const char* getDepIntegratorName(const char* name); Get list of class names of integrators needed by integrator named 'name'. RooAbsIntegrator* createIntegrator(RooAbsFunc& func, const RooNumIntConfig& config, Int_t ndim = 0); Construct a numeric integrator instance that operates on function 'func' and is configured; with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; of the integration, otherwise it is queried from 'func'. This function iterators over list; of available prototype integrators and returns an clone attached to the given function of; the first class that matches the specifications of the requested integr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumIntFactory.html:6719,config,configuration,6719,root/html526/RooNumIntFactory.html,https://root.cern,https://root.cern/root/html526/RooNumIntFactory.html,5,['config'],['configuration']
Modifiability,":EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. static RooNumIntFactory*_instance; map<std::string,std::pair<RooAbsIntegrator*,std::string> >_map. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumIntFactory(); Constructor. Register all known integrators by calling; their static registration functions. ~RooNumIntFactory(); Destructor. RooNumIntFactory(const RooNumIntFactory& other); Copy constructor. RooNumIntFactory& instance(); Static method returning reference to singleton instance of factory. void cleanup(); Cleanup routine called by atexit() handler installed by RooSentinel. Bool_t storeProtoIntegrator(RooAbsIntegrator* proto, const RooArgSet& defConfig, const char* depName = """"); Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; default configuration options and an optional list of names of other numeric integrators; on which this integrator depends. Returns true if integrator was previously registered. const RooAbsIntegrator* getProtoIntegrator(const char* name); Return prototype integrator with given (class) name. const char* getDepIntegratorName(const char* name); Get list of class names of integrators needed by integrator named 'name'. RooAbsIntegrator* createIntegrator(RooAbsFunc& func, const RooNumIntConfig& config, Int_t ndim = 0, Bool_t isBinned = kFALSE); Construct a numeric integrator instance that operates on function 'func' and is configured; with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; of the integration, otherwise it is queried from 'func'. This function iterators over list; of available prototype integrators and returns an clone attached to the given function of; the first class that matches the specificatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumIntFactory.html:6819,config,configuration,6819,root/html534/RooNumIntFactory.html,https://root.cern,https://root.cern/root/html534/RooNumIntFactory.html,2,['config'],['configuration']
Modifiability,:EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tfDecayedTrue if decayed during tracking.; Int_tfEvaLabelLabel of primary particle; Int_tfIndexIndex of the track (in some source array); Int_tfLabelLabel of the track; TEveVectorfPDecayDecay momentum; Float_tfTDecayDecay time; TEveVectorfVDecayDecay vertex. protected:. Double_tTParticle::fCalcMassCalculated mass; Int_tTParticle::fDaughter[2]Indices of the daughter particles; Double_tTParticle::fEEnergy; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Int_tTParticle::fMother[2]Indices of the mother particles; TParticlePDG*TParticle::fParticlePDG! reference to the particle record in PDG database; Int_tTParticle::fPdgCodePDG code of the particle; Double_tTParticle::fPolarPhiazymutal angle of polarisation; Double_tTParticle::fPolarThetaPolar angle of polarisation; Double_tTParticle::fPxx component of momentum; Double_tTParticle::fPyy component of momentum; Double_tTParticle::fPzz component of momentum; Int_tTParticle::fStatusCodegeneration status code; Double_tTParticle::fVtt of production vertex; Double_tTParticle::fVxx of production vertex; Double_tTParticle::fVyy of production vertex; Double_tTParticle::fVzz of production vertex; Float_tTParticle::fWeightparticle weight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack(); {}. virtual ~TEveMCTrack(); {}. TEveMCTrack& operator=(const TParticle& p); { *((TParticle*)this) = p; return *this; }. void ResetPdgCode(); { fPdgCode = 0; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveMCTrack.html:9406,Inherit,Inheritance,9406,root/html534/TEveMCTrack.html,https://root.cern,https://root.cern/root/html534/TEveMCTrack.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TParameter<int>::EStatusBitskFirst; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TParameter<int>::EStatusBitskIsConst; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TParameter<int>::EStatusBitskLast; static TParameter<int>::EStatusBitskMax; static TParameter<int>::EStatusBitskMin; static TParameter<int>::EStatusBitskMultiply; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfName; intfVal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t TParameter<AParamType> Merge(TCollection* in); Merge objects in the list.; Returns the number of objects that were in the list. void Reset(). const char * GetName() const; { return fName; }. const AParamType & GetVal() const; { return fVal; }. Bool_t IsConst() const; { return (TestBit(kIsConst) ? kTRUE : kFALSE); }. void SetVal(const int& val); { fVal = val; }. void SetMergeMode(char mergemode = '+'); Merging modes:; '+' addition ('OR' for booleans) [default]; '*' multiplication ('AND' for booleans); 'M' maximum ('OR' for booleans); 'm' minimum ('AND' for booleans); 'f' first value; 'l' last value. ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. Int_t Compare(const TObject* obj) const; Compare two TParameter objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp). void ls(Option_t* ) const; Print this parameter content. void Print(Option_t* ) const; Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParameter_int_.html:6166,Inherit,Inheritance,6166,root/html602/TParameter_int_.html,https://root.cern,https://root.cern/root/html602/TParameter_int_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. floatfDataStack[5]! data container; float*fElements[fNrows] elements themselves; Bool_tfIsOwner!default kTRUE, when Use array kFALSE; Int_tfNrowsnumber of rows; Int_tfRowLwblower bound of the row index; static TVectorT<float>::(anonymous)kSizeMax; static TVectorT<float>::EVectorStatusBitskStatus; static TVectorT<float>::(anonymous)kWorkMax. Class Charts. Inheritance Chart:. TObject. ←; TVectorT<float>. Function documentation; void TVectorT<Element> Delete_m(Int_t size, float*& ); Delete data pointer m, if it was assigned on the heap. Element* TVectorT<Element> New_m(Int_t size); Return data pointer . if requested size <= kSizeMax, assign pointer; to the stack space. void TVectorT<Element> Add(const TVectorT<float>& v); Add vector v to this vector. void TVectorT<Element> Add(const TVectorT<float>& v1, const TVectorT<float>& v2); Set this vector to v1+v2. Int_t TVectorT<Element> Memcpy_m(float* newp, const float* oldp, Int_t copySize, Int_t newSize, Int_t oldSize); Copy copySize doubles from *oldp to *newp . However take care of the; situation where both pointers are assigned to the same stack space. void TVectorT<Element> Allocate(Int_t nrows, Int_t row_lwb = 0, Int_t init = 0); Allocate new vector. Arguments are number of rows and row; lowerbound (0 default). TVectorT<Element> &TVectorT<Element> ResizeTo(Int_t lwb, Int_t upb); Resize the vector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVectorT_float_.html:10248,Inherit,Inheritance,10248,root/html602/TVectorT_float_.html,https://root.cern,https://root.cern/root/html602/TVectorT_float_.html,2,['Inherit'],['Inheritance']
Modifiability,":EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Int_tfCounternumber of times the stopwatch was started; Double_tfStartCpuTimecpu start time; Double_tfStartRealTimewall clock start time; TStopwatch::EStatefStatestopwatch state; Double_tfStopCpuTimecpu stop time; Double_tfStopRealTimewall clock stop time; Double_tfTotalCpuTimetotal cpu time; Double_tfTotalRealTimetotal real time; static TStopwatch::EStatekRunning; static TStopwatch::EStatekStopped; static TStopwatch::EStatekUndefined. Class Charts. Inheritance Chart:. TObject. ←; TStopwatch. ←. TMVA::Timer. Function documentation; TStopwatch(); Create a stopwatch and start it. void Start(Bool_t reset = kTRUE); Start the stopwatch. If reset is kTRUE reset the stopwatch before; starting it (including the stopwatch counter).; Use kFALSE to continue timing after a Stop() without; resetting the stopwatch. void Stop(); Stop the stopwatch. void Continue(); Resume a stopped stopwatch. The stopwatch continues counting from the last; Start() onwards (this is like the laptimer function). Double_t RealTime(); Stop the stopwatch (if it is running) and return the realtime (in; seconds) passed between the start and stop events. Double_t CpuTime(); Stop the stopwatch (if it is running) and return the cputime (in; seconds) passed between the start and stop events. Double_t GetRealTime(); Private static method returning system realtime. Double_t GetCPUTime(); Private static method returning system CPU time. void Print(Option_t* option = """") const; Print th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStopwatch.html:6459,Inherit,Inheritance,6459,root/html602/TStopwatch.html,https://root.cern,https://root.cern/root/html602/TStopwatch.html,2,['Inherit'],['Inheritance']
Modifiability,":EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TClass*fClasspointer to the class info; Bool_tfDtorOnlycall only dtor and not delete when calling ~xxx; CallFunc_t*fFuncCINT method invocation environment; TFunction*fMetPtrpointer to the method or function info; TStringfMethodmethod name; Long_tfOffsetoffset added to object pointer before method invocation; TStringfParamsargument string; TStringfProtoprototype string; TMethodCall::EReturnTypefRetTypemethod return type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMethodCall(); Default TMethodCall ctor. Use Init() to initialize the method call; environment. TMethodCall(TClass* cl, CallFunc_t* callfunc, Long_t offset = 0); Create a method invocation environment for a specific class, method; described by the callfunc. TMethodCall(TClass* cl, const char* method, const char* params); Create a method invocation environment for a specific class, method and; parameters. The parameter string has the form: ""\""aap\"", 3, 4.35"".; To execute the method call TMethodCall::Execute(object,...).; This two step method is much more efficient than calling for; every invocation TInterpreter::Execute(...). TMethodCall(const char* function, const char* params); Create a global function invocation environment. The parameter; string has the form: ""\""aap\"", 3, 4,35"". To execute the; function call TMethodCall::Execute(...).; This two step method is much more efficient than calling for; every invocation TInterpreter::Execu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMethodCall.html:8458,Inherit,Inheritance,8458,root/html602/TMethodCall.html,https://root.cern,https://root.cern/root/html602/TMethodCall.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfBtot; Int_tfDtot; Int_t*fISB[fNNMC]; Int_t*fISS[fNNMC]; Double_t*fLRB[fNNMC]; Double_t*fLRS[fNNMC]; Double_tfMCL3S; Double_tfMCL5S; Double_tfNMC; Int_tfNNMC; Double_tfStot; Double_t*fTSB[fNNMC]; Double_tfTSD; Double_t*fTSS[fNNMC]; static const Double_tfgMCL3S1S; static const Double_tfgMCL3S2S; static const Double_tfgMCL5S1S; static const Double_tfgMCL5S2S; static const Double_tfgMCLM1S; static const Double_tfgMCLM2S; static const Double_tfgMCLMED; static const Double_tfgMCLP1S; static const Double_tfgMCLP2S. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TConfidenceLevel(); Default constructor. TConfidenceLevel(Int_t mc, bool onesided = kTRUE); a constructor that fix some conventions:; mc is the number of Monte Carlo experiments; while onesided specifies if the intervals are one-sided or not. ~TConfidenceLevel(); The destructor. Double_t GetExpectedStatistic_b(Int_t sigma = 0) const; Get the expected statistic value in the background only hypothesis. Double_t GetExpectedStatistic_sb(Int_t sigma = 0) const; Get the expected statistic value in the signal plus background hypothesis. Double_t CLb(bool use_sMC = kFALSE) const; Get the Confidence Level for the background only. Double_t CLsb(bool use_sMC = kFALSE) const; Get the Confidence Level for the signal plus background hypothesis. Double_t CLs(bool use_sMC = kFALSE) const; Get the Confidence Level defined by CLs = CLsb/CLb.; This quantity is stable w.r.t. background fluctuations. Double_t GetExpectedCLsb_b(Int_t sigma = 0) const; Get t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TConfidenceLevel.html:7105,Inherit,Inheritance,7105,root/html602/TConfidenceLevel.html,https://root.cern,https://root.cern/root/html602/TConfidenceLevel.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TConditionImp*fConditionImppointer to condition variable implementation; TMutex*fMutexmutex used around Wait() and TimedWait(); Bool_tfPrivateMutexis fMutex our private mutex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCondition(TMutex* m = 0); Create a condition variable. The actual condition implementation; will be provided via the TThreadFactory. If no external mutex is; provided one will be created. Use GetMutex() to get this mutex; and use it before calling Signal() or Broadcast(). ~TCondition(); Clean up condition variable. TMutex * GetMutex() const; Get internally created mutex. Use it to lock resources; before calling Signal() or Broadcast(). Returns 0 if; external mutex was provided in TCondition ctor. Int_t Wait(); Wait to be signaled. Int_t TimedWait(ULong_t secs, ULong_t nanoSecs); Wait to be signaled or till the timer times out.; This method is given an absolute time since the beginning of; the EPOCH (use TThread::GetTime() to get this absolute time).; To wait for a relative time from now, use; TCondition::TimedWaitRelative(ULong_t ms).; Returns 0 if successfully signalled, 1 if time expired and -1 in; case of error. Int_t TimedWaitRelative(ULong_t ms); Wait to be signaled or till the timer times out.; This method is given a relative time from now.; To wait for an absolute time since the beginning of the EPOCH, use; TCondition::TimedWait(ULong_t secs, ULong_t nanoSec).; Returns 0 if successfully signalled, 1 if time expired and -1 in; case of error. TCondition(const TConditio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCondition.html:6497,variab,variable,6497,root/html602/TCondition.html,https://root.cern,https://root.cern/root/html602/TCondition.html,4,['variab'],['variable']
Modifiability,":EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. _xmlParserCtxt*fContextparse the xml file; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tfParseCodeto keep track of the errorcodes; Bool_tfReplaceEntitiesreplace entities; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tfStopErrorstop when parse error occurs; Bool_tfValidateto validate the parse context; TStringfValidateErrorparse error; TStringfValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TXMLParser. ←. TDOMParser. TSAXParser. Function documentation; TXMLParser(); Initializes parser variables. ~TXMLParser(); Cleanup. void SetValidate(Bool_t val = kTRUE); The parser will validate the xml file if val = true. void SetReplaceEntities(Bool_t val = kTRUE); The parser will replace/expand entities. void ReleaseUnderlying(); To release any existing document. void OnValidateError(const TString& message); This function is called when an error from the parser has occured.; Message is the parse error. void OnValidateWarning(const TString& message); This function is called when a warning from the parser has occured.; Message is the parse error. const char * GetParseCodeMessage(Int_t parseCode) const; Returns the parse code message. void InitializeContext(); Initialize parser parameters, such as, disactivate non-standards libxml1; features, on/off validation, clear error and warning messages. void StopParser(); Stops parsing. void SetParseCode(Int_t co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLParser.html:10695,Inherit,Inheritance,10695,root/html602/TXMLParser.html,https://root.cern,https://root.cern/root/html602/TXMLParser.html,2,['Inherit'],['Inheritance']
Modifiability,":EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TGraph*fGraph; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the graph with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawGraph(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-03 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofDrawGraph.html:8262,variab,variable,8262,root/html604/TProofDrawGraph.html,https://root.cern,https://root.cern/root/html604/TProofDrawGraph.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable']"
Modifiability,":EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TGraph*fGraph; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions; static TProofDraw::(anonymous)TProofDraw::kWarn. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Init(TTree* tree); See TProofDraw::Init(). void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the graph with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawGraph(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawGraph.html:8262,variab,variable,8262,root/html602/TProofDrawGraph.html,https://root.cern,https://root.cern/root/html602/TProofDrawGraph.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable']"
Modifiability,":ETF3StylefStyle; TGLTH3SlicefXOYSlice; TGLTH3SlicefXOZSlice; TGLTH3SlicefYOZSlice; static TGLTF3Painter::ETF3StylekDefault; static TGLTF3Painter::ETF3StylekMaple0; static TGLTF3Painter::ETF3StylekMaple1; static TGLTF3Painter::ETF3StylekMaple2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTF3Painter(TF3* fun, TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Coords for point on surface under cursor. Bool_t InitGeometry(); Create mesh. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement.; Slicing is disabled (since somebody has broken it). void AddOption(const TString& stringOption); No options for tf3. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color sheme. void InitGL() const; Initialize OpenGL state variables. void DeInitGL() const; Initialize OpenGL state variables. void DrawToSelectionBuffer() const; Draw triangles, no normals, no lighting. void DrawDefaultPlot() const; Surface with material properties and lighting. void DrawMaplePlot() const; Colored surface, without lighting and; material properties. void DrawPlot() const; Draw mesh. void SetSurfaceColor() const; Set color for surface. Bool_t HasSections() const; Any section exists. void DrawSectionXOZ() const; Draw XOZ parallel section. void DrawSectionYOZ() const; Draw YOZ parallel section. void DrawSectionXOY() const; Draw XOY parallel section. TGLTF3Painter(TF3* fun, TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord). » Author: Timur Pocheptsov 31/08/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLTF3Painter.html:4904,variab,variables,4904,root/html604/TGLTF3Painter.html,https://root.cern,https://root.cern/root/html604/TGLTF3Painter.html,2,['variab'],['variables']
Modifiability,":ETF3StylefStyle; TGLTH3SlicefXOYSlice; TGLTH3SlicefXOZSlice; TGLTH3SlicefYOZSlice; static TGLTF3Painter::ETF3StylekDefault; static TGLTF3Painter::ETF3StylekMaple0; static TGLTF3Painter::ETF3StylekMaple1; static TGLTF3Painter::ETF3StylekMaple2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTF3Painter(TF3* fun, TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Constructor. char * GetPlotInfo(Int_t px, Int_t py); Coords for point on surface under cursor. Bool_t InitGeometry(); Create mesh. void StartPan(Int_t px, Int_t py); User clicks right mouse button (in a pad). void Pan(Int_t px, Int_t py); User's moving mouse cursor, with middle mouse button pressed (for pad).; Calculate 3d shift related to 2d mouse movement.; Slicing is disabled (since somebody has broken it). void AddOption(const TString& stringOption); No options for tf3. void ProcessEvent(Int_t event, Int_t px, Int_t py); Change color sheme. void InitGL() const; Initialize OpenGL state variables. void DeInitGL() const; Initialize OpenGL state variables. void DrawToSelectionBuffer() const; Draw triangles, no normals, no lighting. void DrawDefaultPlot() const; Surface with material properties and lighting. void DrawMaplePlot() const; Colored surface, without lighting and; material properties. void DrawPlot() const; Draw mesh. void SetSurfaceColor() const; Set color for surface. Bool_t HasSections() const; Any section exists. void DrawSectionXOZ() const; Draw XOZ parallel section. void DrawSectionYOZ() const; Draw YOZ parallel section. void DrawSectionXOY() const; Draw XOY parallel section. TGLTF3Painter(TF3* fun, TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord). » Author: Timur Pocheptsov 31/08/2006 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:54; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLTF3Painter.html:4904,variab,variables,4904,root/html602/TGLTF3Painter.html,https://root.cern,https://root.cern/root/html602/TGLTF3Painter.html,2,['variab'],['variables']
Modifiability,":Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCoord(Int_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHaveSkippedBin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tNext(Int_t* coord = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnIter.html:2393,Inherit,InheritsFrom,2393,root/html534/THnIter.html,https://root.cern,https://root.cern/root/html534/THnIter.html,1,['Inherit'],['InheritsFrom']
Modifiability,":Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCoord(Int_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHaveSkippedBin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tNext(Int_t* coord = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnIter.html:2304,Inherit,InheritsFrom,2304,root/html602/THnIter.html,https://root.cern,https://root.cern/root/html602/THnIter.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDataMember*GetDataMember() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; static voidGetName(TString& output, TDataMember* dm); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMemberStreamer*GetStreamer() const; Long_tGetThisOffset() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsObject() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRealData.html:2874,Inherit,InheritsFrom,2874,root/html534/TRealData.html,https://root.cern,https://root.cern/root/html534/TRealData.html,1,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDataMember*GetDataMember() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; static voidGetName(TString& output, TDataMember* dm); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMemberStreamer*GetStreamer() const; Long_tGetThisOffset() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsObject() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRealData.html:2816,Inherit,InheritsFrom,2816,root/html602/TRealData.html,https://root.cern,https://root.cern/root/html602/TRealData.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocDirective&operator=(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocDirective.html:3457,Inherit,InheritsFrom,3457,root/html532/TDocDirective.html,https://root.cern,https://root.cern/root/html532/TDocDirective.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocHtmlDirective&operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocHtmlDirective.html:2702,Inherit,InheritsFrom,2702,root/html532/TDocHtmlDirective.html,https://root.cern,https://root.cern/root/html532/TDocHtmlDirective.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocMacroDirective&operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocMacroDirective.html:3121,Inherit,InheritsFrom,3121,root/html532/TDocMacroDirective.html,https://root.cern,https://root.cern/root/html532/TDocMacroDirective.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocDirective&operator=(const TDocDirective&); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocDirective.html:3457,Inherit,InheritsFrom,3457,root/html602/TDocDirective.html,https://root.cern,https://root.cern/root/html602/TDocDirective.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocHtmlDirective&operator=(const TDocHtmlDirective&)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocHtmlDirective.html:2636,Inherit,InheritsFrom,2636,root/html602/TDocHtmlDirective.html,https://root.cern,https://root.cern/root/html602/TDocHtmlDirective.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocMacroDirective&operator=(const TDocMacroDirective",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocMacroDirective.html:3052,Inherit,InheritsFrom,3052,root/html602/TDocMacroDirective.html,https://root.cern,https://root.cern/root/html602/TDocMacroDirective.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*TMacro::GetLineWith(const char* text) const; TList*TMacro::GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tTMacro::Load() constMENU ; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveMacro.html:2622,Inherit,InheritsFrom,2622,root/html602/TEveMacro.html,https://root.cern,https://root.cern/root/html602/TEveMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,":ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TObjString*TMacro::GetLineWith(const char* text) const; TList*TMacro::GetListOfLines() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveMacro.html:2693,Inherit,InheritsFrom,2693,root/html532/TEveMacro.html,https://root.cern,https://root.cern/root/html532/TEveMacro.html,2,['Inherit'],['InheritsFrom']
Modifiability,":Experimental::Internal::RPageSink Class ReferenceabstractNTuple-related classes. ; Abstract interface to write data into an ntuple. ; The page sink takes the list of columns and afterwards a series of page commits and cluster commits. The user is responsible to commit clusters at a consistent point, i.e. when all pages corresponding to data up to the given entry number are committed.; An object of this class may either be a wrapper (for example a RPageSinkBuf) or a ""persistent"" sink, inheriting from RPagePersistentSink. ; Definition at line 256 of file RPageStorage.hxx. Classes; struct  RSealPageConfig;  Parameters for the SealPage() method. More...;  ; class  RSinkGuard;  An RAII wrapper used to synchronize a page sink. See GetSinkGuard(). More...;  ; struct  RStagedCluster;  Cluster that was staged, but not yet logically appended to the RNTuple. More...;  . Public Types; using Callback_t = std::function< void(RPageSink &)>;  ;  Public Types inherited from ROOT::Experimental::Internal::RPageStorage; using ColumnHandle_t = RColumnHandle;  The column handle identifies a column with the current open page storage. ;  ; using SealedPageSequence_t = std::deque< RSealedPage >;  . Public Member Functions;  RPageSink (const RPageSink &)=delete;  ;  RPageSink (RPageSink &&)=default;  ;  RPageSink (std::string_view ntupleName, const RNTupleWriteOptions &options);  ;  ~RPageSink () override;  ; virtual std::uint64_t CommitCluster (NTupleSize_t nNewEntries);  Finalize the current cluster and create a new one for the following data. ;  ; virtual void CommitClusterGroup ()=0;  Write out the page locations (page list envelope) for all the committed clusters since the last call of CommitClusterGroup (or the beginning of writing). ;  ; void CommitDataset ();  Run the registered callbacks and finalize the current cluster and the entrire data set. ;  ; virtual void CommitPage (ColumnHandle_t columnHandle, const RPage &page)=0;  Write a page to the storage. The column must have been ad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html:1318,inherit,inherited,1318,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html,1,['inherit'],['inherited']
Modifiability,":Fatal(const char* method, const char* msgfmt) const; virtual Int_tfill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual const RooArgSet*getNative(Int_t index) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsDataStore::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); virtual Int_tnumEntries() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooVectorDataStore.html:4315,Inherit,InheritsFrom,4315,root/html532/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html532/RooVectorDataStore.html,1,['Inherit'],['InheritsFrom']
Modifiability,":Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; CallFunc_t*GetCallFunc() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TFunction*GetMethod(); const char*GetMethodName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetParams() const; const char*GetProto() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(TFunction* func); voidInit(const char* function, const char* params); voidInit(TClass* cl, CallFunc_t* func, Long_t offset = 0); voidInit(TClass* cl, const char* method, const char* params, Bool_t objectIsConst = kFALSE); voidInitWithPrototype(const char* function, const char* proto, ROOT::EFunctionMatchMode mode = ROOT::kConversionMatch); voidInitWithPrototype(TClass* cl, const char* method, const char* proto, Bool_t objectIsConst = kFALSE, ROOT::EFunctionMatchMode mode = ROOT::kConversionMatch); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMethodCall.html:3354,Inherit,InheritsFrom,3354,root/html604/TMethodCall.html,https://root.cern,https://root.cern/root/html604/TMethodCall.html,1,['Inherit'],['InheritsFrom']
Modifiability,":Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Double_tGetCondition() const; Double_tGetDet1() const; Double_tGetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDecompBase.html:6464,Inherit,InheritsFrom,6464,root/html532/TDecompBase.html,https://root.cern,https://root.cern/root/html532/TDecompBase.html,2,['Inherit'],['InheritsFrom']
Modifiability,":Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetColLwb() const; Double_tGetCondition() const; Double_tGetDet1() const; Double_tGetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tGetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDecompBase.html:6464,Inherit,InheritsFrom,6464,root/html602/TDecompBase.html,https://root.cern,https://root.cern/root/html602/TDecompBase.html,2,['Inherit'],['InheritsFrom']
Modifiability,":Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMethodCall*GetGetter() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Long_tGetOffValue(); virtual Long_tGetOnValue(); virtual Option_t*TObject::GetOption() const; TMethodCall*GetSetter() const; virtual Bool_tGetState(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetValue(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInitialized(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TToggle.html:3273,Inherit,InheritsFrom,3273,root/html532/TToggle.html,https://root.cern,https://root.cern/root/html532/TToggle.html,2,['Inherit'],['InheritsFrom']
Modifiability,":Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMethodCall*GetGetter() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Long_tGetOffValue(); virtual Long_tGetOnValue(); virtual Option_t*TObject::GetOption() const; TMethodCall*GetSetter() const; virtual Bool_tGetState(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetValue(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInitialized(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TToggle.html:3268,Inherit,InheritsFrom,3268,root/html602/TToggle.html,https://root.cern,https://root.cern/root/html602/TToggle.html,2,['Inherit'],['InheritsFrom']
Modifiability,":Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual RooDataSet*generate(Int_t nEvents = 0, Bool_t skipInit = kFALSE, Bool_t extendedMode = kFALSE); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsGenContext::isValid() const; Bool_tRooAbsGenContext::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimSplitGenContext.html:3106,Inherit,InheritsFrom,3106,root/html532/RooSimSplitGenContext.html,https://root.cern,https://root.cern/root/html532/RooSimSplitGenContext.html,1,['Inherit'],['InheritsFrom']
Modifiability,":FdF(const double* x, double& f, double* df) const; virtual voidGradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(); ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(const ROOT::Math::IBaseFunctionMultiDim&); ROOT::Math::IGradientFunctionMultiDimROOT::Math::IGradientFunctionMultiDim::IGradientFunctionMultiDim(); ROOT::Math::IGradientFunctionMultiDimROOT::Math::IGradientFunctionMultiDim::IGradientFunctionMultiDim(const ROOT::Math::IGradientFunctionMultiDim&); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(const ROOT::Math::IGradientMultiDim&); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const ROOT::Fit::UnBinData& data, const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = false); virtual const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&ModelFunction() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeightSquare(bool on = true).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html:2701,extend,extended,2701,root/html602/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,2,['extend'],['extended']
Modifiability,":FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGeoHMatrix*GetGlobalOrig() const; virtual const char*TObject::GetIconName() const; const TGeoHMatrix*GetMatrix() const; TGeoHMatrix*GetMatrixOrig() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPath() const; TGeoPhysicalNode*GetPhysicalNode() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPNEntry.html:4157,Inherit,InheritsFrom,4157,root/html532/TGeoPNEntry.html,https://root.cern,https://root.cern/root/html532/TGeoPNEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGeoHMatrix*GetGlobalOrig() const; virtual const char*TObject::GetIconName() const; const TGeoHMatrix*GetMatrix() const; TGeoHMatrix*GetMatrixOrig() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPath() const; TGeoPhysicalNode*GetPhysicalNode() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPNEntry.html:4086,Inherit,InheritsFrom,4086,root/html602/TGeoPNEntry.html,https://root.cern,https://root.cern/root/html602/TGeoPNEntry.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const TObject* obj) const; virtual const char*GetCWD(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetMaxOpenedFies() const; TList*GetMergeList() const; const char*GetMsgPrefix() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; const char*GetObjectNames() const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFile*GetOutputFile() const; const char*GetOutputFileName() const; Int_tGetPrintLevel() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasCompressionChange() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMerge(Bool_t = kTRUE); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileMerger.html:3309,Inherit,InheritsFrom,3309,root/html534/TFileMerger.html,https://root.cern,https://root.cern/root/html534/TFileMerger.html,1,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const TObject* obj) const; virtual const char*GetCWD(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetMaxOpenedFies() const; TList*GetMergeList() const; const char*GetMsgPrefix() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; const char*GetObjectNames() const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFile*GetOutputFile() const; const char*GetOutputFileName() const; Int_tGetPrintLevel() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasCompressionChange() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMerge(Bool_t = kTRUE); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileMerger.html:3245,Inherit,InheritsFrom,3245,root/html602/TFileMerger.html,https://root.cern,https://root.cern/root/html602/TFileMerger.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDecompSparse.html:3115,Inherit,InheritsFrom,3115,root/html532/TDecompSparse.html,https://root.cern,https://root.cern/root/html532/TDecompSparse.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTDecompBase::GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDecompSparse.html:2857,Inherit,InheritsFrom,2857,root/html602/TDecompSparse.html,https://root.cern,https://root.cern/root/html602/TDecompSparse.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetClass() const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; Long64_tGetLast() const; virtual const char*TNamed::GetName() const; const char*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Long64_tGetTotBytes() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTree() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileInfoMeta.html:3073,Inherit,InheritsFrom,3073,root/html532/TFileInfoMeta.html,https://root.cern,https://root.cern/root/html532/TFileInfoMeta.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetClass() const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tGetEntries() const; Long64_tGetFirst() const; virtual const char*TObject::GetIconName() const; Long64_tGetLast() const; virtual const char*TNamed::GetName() const; const char*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Long64_tGetTotBytes() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetZipBytes() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsTree() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileInfoMeta.html:2649,Inherit,InheritsFrom,2649,root/html602/TFileInfoMeta.html,https://root.cern,https://root.cern/root/html602/TFileInfoMeta.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tGetA() const; virtual Float_tGetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Float_tGetInterLength() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetRadLength() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMaterial.html:2875,Inherit,InheritsFrom,2875,root/html532/TMaterial.html,https://root.cern,https://root.cern/root/html532/TMaterial.html,2,['Inherit'],['InheritsFrom']
Modifiability,":FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tGetA() const; virtual Float_tGetDensity() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Float_tGetInterLength() const; virtual const char*TNamed::GetName() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetRadLength() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMaterial.html:2630,Inherit,InheritsFrom,2630,root/html602/TMaterial.html,https://root.cern,https://root.cern/root/html602/TMaterial.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GSLIntegrator&operator=(const ROOT::Math::GSLIntegrator&). Data Members; private:. doublefAbsTol; doublefError; ROOT::Math::GSLFunctionWrapper*fFunction; size_tfMaxIntervals; intfNEval; doublefRelTol; doublefResult; ROOT::Math::Integration::GKRulefRule; size_tfSize; intfStatus; ROOT::Math::Integration::TypefType; ROOT::Math::GSLIntegrationWorkspace*fWorkspace. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLIntegrator(double absTol = 1.0000000000000001E-9, double relTol = 9.9999999999999995E-7, size_t size = 1000); constructors; Default constructor of GSL Integrator for Adaptive Singular integration. @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. GSLIntegrator(const ROOT::Math::Integration::Type type, double absTol = 1.0000000000000001E-9, double relTol = 9.9999999999999995E-7, size_t size = 1000); constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. GSLIntegrator(const Integration::Type type, const Integration::GKRule rule, double absTol = 1.E-9, double relTol = 1E-6, size_t size = 1000). generic constructor for GSL Integrator. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule. It is used only for ADAPTIVE::Integration types. The possible rules are defined in the Integration::GKRule enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. GSLIntegrator(const char* type, int rule, double absTol, double relTol, size_t size); constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLIntegrator.html:5693,Adapt,Adaptive,5693,root/html602/ROOT__Math__GSLIntegrator.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLIntegrator.html,2,['Adapt'],['Adaptive']
Modifiability,":GSLRandomEngine::GaussianZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine&); ROOT::Math::GSLRngGFSR4GSLRngGFSR4(); ROOT::Math::GSLRngGFSR4GSLRngGFSR4(const ROOT::Math::GSLRngGFSR4&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngGFSR4&operator=(const ROOT::Math::GSLRngGFSR4&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRngGFSR4(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLRndmEngines.h 37441 2010-12-09 16:27:54Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLRngGFSR4.html:3443,Inherit,Inheritance,3443,root/html532/ROOT__Math__GSLRngGFSR4.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLRngGFSR4.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":GeneticRange&); TMVA::GeneticRangeGeneticRange(TRandom3* rnd, TMVA::Interval* interval); Double_tGetFrom(); Double_tGetTo(); Double_tGetTotalLength(); virtual TClass*IsA() const; TMVA::GeneticRange&operator=(const TMVA::GeneticRange&); Double_tRandom(Bool_t near = kFALSE, Double_t value = 0, Double_t spread = 0.10000000000000001, Bool_t mirror = kFALSE); Double_tRandomDiscrete(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. Double_tReMap(Double_t val); Double_tReMapMirror(Double_t val). Data Members; private:. Double_tfFromthe constraints of the coefficient; TMVA::Interval*fIntervalholds the complete information of the interval; Int_tfNbins; TRandom3*fRandomGeneratorthe randomGenerator for calculating the new values; Double_tfTothe constraints of the coefficient; Double_tfTotalLengththe distance between the lower and upper constraints. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticRange(TRandom3* rnd, TMVA::Interval* interval); defines the ""f"" (from) and ""t"" (to) of the coefficient; and takes a randomgenerator. Double_t RandomDiscrete(); creates a new random value for the coefficient; returns a discrete value. Double_t Random(Bool_t near = kFALSE, Double_t value = 0, Double_t spread = 0.10000000000000001, Bool_t mirror = kFALSE); creates a new random value for the coefficient; Parameters:; Bool_t near : takes a random value near the current value; double value : this is the current value; double spread : the sigma of the gaussian which is taken to calculate the new value; Bool_t mirror : if the new value would be outside of the range, mirror = false; maps the value between the constraints by periodic boundary conditions.; With mirror = true, the value gets ""reflected"" on the boundaries. Double_t ReMap(Double_t val); remapping the value to the allowed space. Double_t ReMapMirror(Double_t val); remapping th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__GeneticRange.html:1432,Inherit,Inheritance,1432,root/html602/TMVA__GeneticRange.html,https://root.cern,https://root.cern/root/html602/TMVA__GeneticRange.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":GetBinError(const Int_t* idx) const; Double_tTHnSparse::GetBinError(Long64_t linidx) const; Bool_tTHnSparse::GetCalculateErrors() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tTHnSparse::GetEntries() const; virtual const char*TObject::GetIconName() const; TObjArray*THnSparse::GetListOfAxes(); TList*THnSparse::GetListOfFunctions(); virtual const char*TNamed::GetName() const; Long64_tTHnSparse::GetNbins() const; Int_tTHnSparse::GetNChunks() const; Int_tTHnSparse::GetNdimensions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidTHnSparse::GetRandom(Double_t* rand, Bool_t subBinRandom = kTRUE); Double_tTHnSparse::GetSparseFractionBins() const; Double_tTHnSparse::GetSparseFractionMem() const; Double_tTHnSparse::GetSumw() const; Double_tTHnSparse::GetSumw2() const; Double_tTHnSparse::GetSumwx(Int_t dim) const; Double_tTHnSparse::GetSumwx2(Int_t dim) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTHnSparse::GetWeightSum() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTHnSparse::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tTHnSparse::Merge(TCollection* list); voidTHnSparse::Multiply(const THnSparse* h); voidTHnSparse::Multiply(TF1* f, Double_t c = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THnSparseT_TArrayC_.html:5760,Inherit,InheritsFrom,5760,root/html532/THnSparseT_TArrayC_.html,https://root.cern,https://root.cern/root/html532/THnSparseT_TArrayC_.html,12,['Inherit'],['InheritsFrom']
Modifiability,":GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixD&GetLU(); const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); static Bool_tInvertLU(TMatrixD& a, Double_t tol, Double_t* det = 0); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDecompLU.html:3661,Inherit,InheritsFrom,3661,root/html532/TDecompLU.html,https://root.cern,https://root.cern/root/html532/TDecompLU.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetColLwb() const; Double_tTDecompBase::GetCondition() const; Double_tTDecompBase::GetDet1() const; Double_tTDecompBase::GetDet2() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TMatrixD&GetLU(); const TMatrixDGetMatrix(); virtual const char*TObject::GetName() const; virtual Int_tGetNcols() const; virtual Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTDecompBase::GetRowLwb() const; virtual const char*TObject::GetTitle() const; Double_tTDecompBase::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; TMatrixDInvert(); Bool_tInvert(TMatrixD& inv); TMatrixDInvert(Bool_t& status); voidTObject::InvertBit(UInt_t f); static Bool_tInvertLU(TMatrixD& a, Double_t tol, Double_t* det = 0); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTDecompBase::MultiSolve(TMatrixD& B); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDecompLU.html:3476,Inherit,InheritsFrom,3476,root/html602/TDecompLU.html,https://root.cern,https://root.cern/root/html602/TDecompLU.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(); TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(const TMVA::IFitterTarget&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TMVA::MinuitFitterMinuitFitter(const TMVA::MinuitFitter&); TMVA::MinuitFitterMinuitFitter(TMVA::IFitterTarget& target, const TString& name, vector<TMVA::Interval*>& ranges, const TString& theOption); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitFitter.html:3292,Inherit,InheritsFrom,3292,root/html602/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitFitter.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection::Merge(TCollection* list); virtual Bool_tTObject::Notify(); static Int_tTSeqCollection::ObjCompare(TObject* a, TObject*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TOrdCollection.html:4075,Inherit,InheritsFrom,4075,root/html532/TOrdCollection.html,https://root.cern,https://root.cern/root/html532/TOrdCollection.html,4,['Inherit'],['InheritsFrom']
Modifiability,":GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; Int_tGetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long_tGetOffset() const; Long_tGetOffsetCint() const; virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; TMethodCall*GetterMethod(TClass* cl = 0); virtual const char*TNamed::GetTitle() const; const char*GetTrueTypeName() const; const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetUnitSize() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsaPointer() const; Bool_tIsBasic() const; Bool_tIsEnum() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsPersistent() const; virtual Bool_tTNamed::IsSortable() const; Int_tIsSTLContainer(); Bool_tIsValid(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataMember.html:7910,Inherit,InheritsFrom,7910,root/html602/TDataMember.html,https://root.cern,https://root.cern/root/html602/TDataMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; Int_tGetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long_tGetOffset() const; Long_tGetOffsetCint() const; virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; TMethodCall*GetterMethod(TClass* cl = 0); virtual const char*TNamed::GetTitle() const; const char*GetTrueTypeName() const; const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGetUnitSize() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsaPointer() const; Bool_tIsBasic() const; Bool_tIsEnum() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsPersistent() const; virtual Bool_tTNamed::IsSortable() const; Int_tIsSTLContainer(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDataMember.html:7830,Inherit,InheritsFrom,7830,root/html532/TDataMember.html,https://root.cern,https://root.cern/root/html532/TDataMember.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const Int_t*GetIdBranch() const; TGeoStateInfo*GetInfo(); Int_tGetLevel() const; void*GetMatrices() const; TGeoNode*GetMother(Int_t up = 1) const; TGeoHMatrix*GetMotherMatrix(Int_t up = 1) const; virtual const char*TObject::GetName() const; TGeoNode*GetNode() const; Int_tGetNodeId() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPath(); Int_tGetStackLevel() const; virtual const char*TObject::GetTitle() const; TGeoNode*GetTopNode() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasIdArray() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsDummy() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLocalToMaster(const Double_t* local, Double_t* master) const; voidLocalToMasterBomb(const Double_t* local, Double_t* master) const; voidLocalToMasterVect(const Double_t* local, Double_t* master) const; virtual voidTObject::ls(Option_t* option = """") const; voidMasterToLocal(const Double_t* master, Double_t* local) const; voidMasterToLocalBomb(const Double_t* master, Double_t* local) const; voidMasterToLocalVect(const Double_t* master, Double_t* local) const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoNodeCache.html:3142,Inherit,InheritsFrom,3142,root/html602/TGeoNodeCache.html,https://root.cern,https://root.cern/root/html602/TGeoNodeCache.html,1,['Inherit'],['InheritsFrom']
Modifiability,":GetDtorOnly(); virtual const char*TObject::GetIconName() const; THashList*GetListOfMaterials() const; THashList*GetListOfMatrices() const; TList*GetListOfNodes() const; THashList*GetListOfShapes() const; TMaterial*GetMaterial(const char* name) const; TMaterial*GetMaterialByNumber(Int_t number) const; virtual const char*TNamed::GetName() const; TNode*GetNode(const char* name) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TRotMatrix*GetRotMatrix(const char* name) const; TRotMatrix*GetRotMatrixByNumber(Int_t number) const; TShape*GetShape(const char* name) const; TShape*GetShapeByNumber(Int_t number) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLocal2Master(Double_t* local, Double_t* master); virtual voidLocal2Master(Float_t* local, Float_t* master); virtual voidls(Option_t* option = ""rsn2"") const; virtual voidMaster2Local(Double_t* master, Double_t* local); virtual voidMaster2Local(Float_t* master, Float_t* local); voidTObject::MayNotUse(const char* method) const; virtual voidNode(const char* name, const char* title, const char* shapename, Double_t x = 0, Double_t y = 0, Double_t z = 0, const char* matrixname = """", Option_t* option = """"); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeometry.html:5132,Inherit,InheritsFrom,5132,root/html532/TGeometry.html,https://root.cern,https://root.cern/root/html532/TGeometry.html,4,['Inherit'],['InheritsFrom']
Modifiability,":GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; Float_tGetH1() const; Float_tGetH2() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Float_tGetTl1() const; Float_tGetTl2() const; Float_tGetTwist() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTRA.html:5209,Inherit,InheritsFrom,5209,root/html532/TGTRA.html,https://root.cern,https://root.cern/root/html532/TGTRA.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; Float_tGetH1() const; Float_tGetH2() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTShape::GetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Float_tGetTl1() const; Float_tGetTl2() const; Float_tGetTwist() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTRA.html:4950,Inherit,InheritsFrom,4950,root/html602/TGTRA.html,https://root.cern,https://root.cern/root/html602/TGTRA.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; Int_tGetLast() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; Int_tGetNevBuf() const; Int_tGetNevBufSize() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tTKey::GetSeekKey() const; virtual Long64_tTKey::GetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTKey::Keep(); Int_tLoadBasketBuffers(Long64_t pos, Int_t len, TFile* file); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMoveEntries(Int_t dentries); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBasket.html:3408,Inherit,InheritsFrom,3408,root/html532/TBasket.html,https://root.cern,https://root.cern/root/html532/TBasket.html,1,['Inherit'],['InheritsFrom']
Modifiability,":GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; Int_tGetLast() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; Int_tGetNevBuf() const; Int_tGetNevBufSize() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tTKey::GetSeekKey() const; virtual Long64_tTKey::GetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTKey::Keep(); Int_tLoadBasketBuffers(Long64_t pos, Int_t len, TFile* file, TTree* tree = 0); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMoveEntries(Int_t dentries); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBasket.html:3408,Inherit,InheritsFrom,3408,root/html534/TBasket.html,https://root.cern,https://root.cern/root/html534/TBasket.html,1,['Inherit'],['InheritsFrom']
Modifiability,":GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; Int_tGetLast() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; Int_tGetNevBuf() const; Int_tGetNevBufSize() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tTKey::GetSeekKey() const; virtual Long64_tTKey::GetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTKey::Keep(); Int_tLoadBasketBuffers(Long64_t pos, Int_t len, TFile* file, TTree* tree = 0); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMoveEntries(Int_t dentries); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBasket.html:3302,Inherit,InheritsFrom,3302,root/html602/TBasket.html,https://root.cern,https://root.cern/root/html602/TBasket.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetIconName() const; virtual const char*TNamed::GetName() const; RooDataSet*GetNullDetailedOutput() const; RooStats::SamplingDistribution*GetNullDistribution() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tGetPValueIsRightTail() const; Double_tGetTestStatisticData() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasTestStatisticData() const; RooStats::HypoTestResultHypoTestResult(const char* name = 0); RooStats::HypoTestResultHypoTestResult(const RooStats::HypoTestResult& other); RooStats::HypoTestResultHypoTestResult(const char* name, Double_t nullp, Double_t altp); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual Double_tNullPValue() const; Double_tNullPValueError() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HypoTestResult.html:3933,Inherit,InheritsFrom,3933,root/html534/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HypoTestResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,":GetIconName() const; virtual const char*TNamed::GetName() const; RooDataSet*GetNullDetailedOutput() const; RooStats::SamplingDistribution*GetNullDistribution() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tGetPValueIsRightTail() const; Double_tGetTestStatisticData() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tHasTestStatisticData() const; RooStats::HypoTestResultHypoTestResult(const char* name = 0); RooStats::HypoTestResultHypoTestResult(const RooStats::HypoTestResult& other); RooStats::HypoTestResultHypoTestResult(const char* name, Double_t nullp, Double_t altp); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); virtual Double_tNullPValue() const; Double_tNullPValueError() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestResult.html:3933,Inherit,InheritsFrom,3933,root/html602/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestResult.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetInfo(); virtual TProcessID*TBufferFile::GetLastProcessID(TRefTable* reftable) const; virtual Int_tTBufferFile::GetMapCount() const; virtual voidTBufferFile::GetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*TBuffer::GetParent() const; virtual UShort_tTBufferFile::GetPidOffset() const; ReAllocCharFun_tTBuffer::GetReAllocFunc() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTBufferFile::GetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTBufferFile::GetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTBufferFile::IncrementLevel(TVirtualStreamerInfo* info); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTBufferFile::InitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTBuffer::IsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tTBuffer::IsWriting() const; Bool_tTObject::IsZombie() const; Int_tTBuffer::Length() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTBufferFile::MapObject(const TObject* obj, UInt_t offset = 1); virtual voidTBufferFile::MapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBufferSQL.html:4852,Inherit,InheritsFrom,4852,root/html532/TBufferSQL.html,https://root.cern,https://root.cern/root/html532/TBufferSQL.html,3,['Inherit'],['InheritsFrom']
Modifiability,":GetInfo(); virtual TProcessID*TBufferFile::GetLastProcessID(TRefTable* reftable) const; virtual Int_tTBufferFile::GetMapCount() const; virtual voidTBufferFile::GetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*TBuffer::GetParent() const; virtual UShort_tTBufferFile::GetPidOffset() const; ReAllocCharFun_tTBuffer::GetReAllocFunc() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTBufferFile::GetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTBufferFile::GetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTBufferFile::IncrementLevel(TVirtualStreamerInfo* info); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTBufferFile::InitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTBuffer::IsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tTBuffer::IsWriting() const; Bool_tTObject::IsZombie() const; Int_tTBuffer::Length() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTBufferFile::MapObject(const TObject* obj, UInt_t offset = 1); virtual voidTBufferFile::MapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferSQL.html:4498,Inherit,InheritsFrom,4498,root/html602/TBufferSQL.html,https://root.cern,https://root.cern/root/html602/TBufferSQL.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetLeafCount() const; virtual TLeaf*TLeaf::GetLeafCounter(Int_t& countval) const; virtual Int_tTLeaf::GetLen() const; virtual Int_tTLeaf::GetLenStatic() const; virtual Int_tTLeaf::GetLenType() const; virtual Int_tTLeaf::GetMaximum() const; virtual Int_tTLeaf::GetMinimum() const; virtual const char*TNamed::GetName() const; virtual Int_tTLeaf::GetNdata() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Int_tTLeaf::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual const char*GetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetValue(Int_t i = 0) const; virtual void*GetValuePointer() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidImport(TClonesArray* list, Int_t n); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTLeaf::IsOnTerminalBranch() const; virtual Bool_tTLeaf::IsRange() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTLeaf::IsUnsigned() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLeafD.html:3062,Inherit,InheritsFrom,3062,root/html532/TLeafD.html,https://root.cern,https://root.cern/root/html532/TLeafD.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*TNode::GetListOfNodes() const; virtual TRotMatrix*TNode::GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*TNode::GetNode(const char* name) const; virtual char*TNode::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TNode::GetOption() const; virtual TNode*TNode::GetParent() const; TShape*TNode::GetShape() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTNode::GetVisibility() const; virtual Double_tTNode::GetX() const; virtual Double_tTNode::GetY() const; virtual Double_tTNode::GetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTNode::ImportShapeAttributes(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTNode::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNode::Local2Master(const Double_t* local, Double_t* master); virtual voidTNode::Local2Master(const Float_t* local, Float_t* master); virtual voidTNode::ls(Option_t* option = ""2"") constMENU ; virtual voidTNode::Master2Local(const Double_t* master, Double_t* local); virtual voidTNode::Master2Local(const Float_t* master, Float_t* local); voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNodeDiv.html:3538,Inherit,InheritsFrom,3538,root/html532/TNodeDiv.html,https://root.cern,https://root.cern/root/html532/TNodeDiv.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetList() const; virtual Int_tTDataSet::GetListSize() const; static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; virtual Long_tGetNRows() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TDataSet::GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual TClass*GetRowClass() const; virtual TTableDescriptor*GetRowDescriptors() const; virtual Long_tGetRowSize() const; virtual Long_tGetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tHasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidls(Option_t* option = """") const; virtual voidls(Int_t deep) const; virtual Char_t*MakeExpression(const Char_t** expressions, Int_t nExpressions); voidTDataSet::Mark()MENU ; voidTDataSet::Mark(UInt_t flag, TDataSet::EBitOpt reset = kSet); voidTDataS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TChair.html:4337,Inherit,InheritsFrom,4337,root/html532/TChair.html,https://root.cern,https://root.cern/root/html532/TChair.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetList() const; virtual Int_tTDataSet::GetListSize() const; static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; virtual Long_tGetNRows() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TDataSet::GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual TClass*GetRowClass() const; virtual TTableDescriptor*GetRowDescriptors() const; virtual Long_tGetRowSize() const; virtual Long_tGetTableSize() const; virtual const char*TNamed::GetTitle() const; virtual const Char_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tHasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTDataSet::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidls(Option_t* option = """") const; virtual voidls(Int_t deep) const; virtual Char_t*MakeExpression(const Char_t*[] expressions, Int_t nExpressions); voidTDataSet::Mark()MENU ; voidTDataSet::Mark(UInt_t flag, TDataSet::EBitOpt reset = kSet); voidTData",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TChair.html:4287,Inherit,InheritsFrom,4287,root/html602/TChair.html,https://root.cern,https://root.cern/root/html602/TChair.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetParseCode() const; const char*GetParseCodeMessage(Int_t parseCode) const; Bool_tGetReplaceEntities() const; Bool_tGetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValidate() const; const char*GetValidateError() const; const char*GetValidateWarning() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLParser.html:5456,Inherit,InheritsFrom,5456,root/html532/TXMLParser.html,https://root.cern,https://root.cern/root/html532/TXMLParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetParseCode() const; const char*GetParseCodeMessage(Int_t parseCode) const; Bool_tGetReplaceEntities() const; Bool_tGetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tGetValidate() const; const char*GetValidateError() const; const char*GetValidateWarning() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLParser.html:5481,Inherit,InheritsFrom,5481,root/html602/TXMLParser.html,https://root.cern,https://root.cern/root/html602/TXMLParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetMarkerStyle() const; Double_tTGraph::GetMaximum() const; Int_tTGraph::GetMaxSize() const; virtual Double_tTGraph::GetMean(Int_t axis = 1) const; Double_tTGraph::GetMinimum() const; Int_tTGraph::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTGraph::GetPoint(Int_t i, Double_t& x, Double_t& y) const; virtual Double_tTGraph::GetRMS(Int_t axis = 1) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGraph::GetX() const; TAxis*TGraph::GetXaxis() const; Double_t*TGraph::GetY() const; TAxis*TGraph::GetYaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGraph::InitExpo(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitGaus(Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::InitPolynom(Double_t xmin = 0, Double_t xmax = 0); virtual Int_tTGraph::InsertPoint()MENU ; virtual voidTObject::Inspect() constMENU ; virtual Double_tTGraph::Integral(Int_t first = 0, Int_t last = -1) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGraph::IsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTGraph::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTGraph::LeastSquareFit(Int_t m, Double_t* a, Double_t xmin = 0, Double_t xmax = 0); virtual voidTGraph::LeastSquareLinearFit(Int_t n, Double_t& a0, Double_t& a1, Int_t& ifai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphAsymmErrors.html:7559,Inherit,InheritsFrom,7559,root/html532/TGraphAsymmErrors.html,https://root.cern,https://root.cern/root/html532/TGraphAsymmErrors.html,12,['Inherit'],['InheritsFrom']
Modifiability,":GetName() const; Int_tTBranch::GetNleaves() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; TRefTable*GetRefTable() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTBranch::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBranchRef.html:5623,Inherit,InheritsFrom,5623,root/html532/TBranchRef.html,https://root.cern,https://root.cern/root/html532/TBranchRef.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetName() const; Int_tTBranch::GetNleaves() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTBranch::GetOffset() const; virtual Option_t*TObject::GetOption() const; Int_tTBranch::GetReadBasket() const; Long64_tTBranch::GetReadEntry() const; TRefTable*GetRefTable() const; virtual Int_tTBranch::GetRow(Int_t row); Int_tTBranch::GetSplitLevel() const; TBranch*TBranch::GetSubBranch(const TBranch* br) const; virtual const char*TNamed::GetTitle() const; Long64_tTBranch::GetTotalSize(Option_t* option = """") const; Long64_tTBranch::GetTotBytes(Option_t* option = """") const; TTree*TBranch::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTBranch::GetWriteBasket() const; Long64_tTBranch::GetZipBytes(Option_t* option = """") const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBranch::IsAutoDelete() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTBranch::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBranch::KeepCircular(Long64_t maxEntries); virtual Int_tTBranch::LoadBaskets(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBranchRef.html:5584,Inherit,InheritsFrom,5584,root/html602/TBranchRef.html,https://root.cern,https://root.cern/root/html602/TBranchRef.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStringTMVA::VariableTransformBase::GetShortName() const; virtual const char*TObject::GetTitle() const; virtual vector<TString>*GetTransformationStrings(Int_t cls) const; virtual UInt_tTObject::GetUniqueID() const; TMVA::Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event *const, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html:3191,Variab,VariableTransformBase,3191,root/html532/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableDecorrTransform.html,6,['Variab'],['VariableTransformBase']
Modifiability,":GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; struct HDURecord*GetRecord(const char* keyword); Int_tGetRecordNumber() const; Int_tGetTabNColumns() const; Int_tGetTabNRows() const; TVectorD*GetTabRealVectorCell(Int_t rownum, Int_t colnum); TVectorD*GetTabRealVectorCell(Int_t rownum, const char* colname); TObjArray*GetTabRealVectorCells(Int_t colnum); TObjArray*GetTabRealVectorCells(const char* colname); TVectorD*GetTabRealVectorColumn(Int_t colnum); TVectorD*GetTabRealVectorColumn(const char* colname); TObjArray*GetTabStringColumn(Int_t colnum); TObjArray*GetTabStringColumn(const char* colname); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFITSHDU.html:3234,Inherit,InheritsFrom,3234,root/html602/TFITSHDU.html,https://root.cern,https://root.cern/root/html602/TFITSHDU.html,2,['Inherit'],['InheritsFrom']
Modifiability,":GetNdiags() const; virtual TClass*IsA() const; doubleoperator()(Int_t i) const; double&operator()(Int_t i); voidoperator*=(double val); voidoperator*=(const TMatrixTSparseDiag_const<double>& d); voidoperator+=(double val); voidoperator+=(const TMatrixTSparseDiag_const<double>& d); voidoperator=(double val); voidoperator=(const TMatrixTSparseDiag_const<double>& d); TMatrixTSparseDiag<double>&operator=(const TMatrixTSparseDiag<double>& d); voidoperator=(const TVectorT<double>& vec); doubleoperator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. const double*TMatrixTSparseDiag_const<double>::fDataPtrdata pointer; TMatrixTSparse<double>*TMatrixTSparseDiag_const<double>::fMatrixthe matrix I am the diagonal of; Int_tTMatrixTSparseDiag_const<double>::fNdiagnumber of diag elems, min(nrows,ncols). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. TElementPosActionT<Element>& operator=(const TElementPosActionT<Element> &); {return *this;}. TMatrixTRow_const<Element>& operator=(const TMatrixTRow_const<Element>& trc). const Element & operator()(Int_t i) const. Element & operator()(Int_t i). const Element & operator[](Int_t i) const; { return (*(const TMatrixTRow<Element> *)this)(i); }. Element & operator[](Int_t i); { return (*( TMatrixTRow<Element> *)this)(i); }. void operator=(Element val). void operator+=(Element val). void operator*=(Element val). void operator+=(const TMatrixTRow_const<Element> &r). void operator*=(const TMatrixTRow_const<Element> &r). const Element * GetDataPtr() const; { return fDataPtr; }. » Last changed: root/matrix:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general plea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixTSparseDiag_double_.html:2283,Inherit,Inheritance,2283,root/html534/TMatrixTSparseDiag_double_.html,https://root.cern,https://root.cern/root/html534/TMatrixTSparseDiag_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":GetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Int_t*GetRowIndexArray() const; virtual Int_t*GetRowIndexArray(); Int_tTMatrixTBase<double>::GetRowLwb() const; Int_tTMatrixTBase<double>::GetRowUpb() const; TMatrixT<double>GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Option_t* option = ""S"") const; virtual TMatrixTBase<double>&GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase<double>& target, Option_t* option = ""S"") const; virtual const char*TObject::GetTitle() const; doubleTMatrixTBase<double>::GetTol() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual TMatrixTBase<double>&TMatrixTBase<double>::InsertRow(Int_t row, Int_t col, const double* v, Int_t n = -1); virtual voidTObject::Inspect() constMENU ; voidTMatrixTBase<double>::Invalidate(); TMatrixT<double>&Invert(Double_t* det = 0); voidTObject::InvertBit(UInt_t f); TMatrixT<double>&InvertFast(Double_t* det = 0); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTMatrixTBase<double>::IsOwner() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTMatrixTBase<double>::IsSymmetric() const; Bool_tTMatrixTBase<double>::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTMatrixTBase<double>::MakeValid(); virtual doubleTMatrixTBase<double>::Max() const; voidTObject::MayNotUse(const char* method) const; virtual doubleTMatrixTBase<double>::Min() const; voidMinus(const TMatr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixT_double_.html:5231,Inherit,InheritsFrom,5231,root/html532/TMatrixT_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixT_double_.html,4,['Inherit'],['InheritsFrom']
Modifiability,":GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; ULong_tTColor::GetPixel() const; Float_tTColor::GetRed() const; virtual voidTColor::GetRGB(Float_t& r, Float_t& g, Float_t& b) const; Float_tTColor::GetSaturation() const; const TColorGradient::Point&GetStart() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTColor::HLS2RGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HLS2RGB(Int_t h, Int_t l, Int_t s, Int_t& r, Int_t& g, Int_t& b); static voidTColor::HLStoRGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HSV2RGB(Float_t h, Float_t s, Float_t v, Float_t& r, Float_t& g, Float_t& b); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidTColor::InitializeColors(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTColor::IsGrayscale(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTColor::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static ULong_tTColor::Number2Pixel(Int_t ci); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLinearGradient.html:5267,Inherit,InheritsFrom,5267,root/html534/TLinearGradient.html,https://root.cern,https://root.cern/root/html534/TLinearGradient.html,1,['Inherit'],['InheritsFrom']
Modifiability,":GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; ULong_tTColor::GetPixel() const; Float_tTColor::GetRed() const; virtual voidTColor::GetRGB(Float_t& r, Float_t& g, Float_t& b) const; Float_tTColor::GetSaturation() const; const TColorGradient::Point&GetStart() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTColor::HLS2RGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HLS2RGB(Int_t h, Int_t l, Int_t s, Int_t& r, Int_t& g, Int_t& b); static voidTColor::HLStoRGB(Float_t h, Float_t l, Float_t s, Float_t& r, Float_t& g, Float_t& b); static voidTColor::HSV2RGB(Float_t h, Float_t s, Float_t v, Float_t& r, Float_t& g, Float_t& b); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidTColor::InitializeColors(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTColor::IsGrayscale(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTColor::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static ULong_tTColor::Number2Pixel(Int_t ci); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLinearGradient.html:4891,Inherit,InheritsFrom,4891,root/html602/TLinearGradient.html,https://root.cern,https://root.cern/root/html602/TLinearGradient.html,2,['Inherit'],['InheritsFrom']
Modifiability,":HandleDNDFinished(); virtual Bool_tTGFrame::HandleDNDLeave(); virtual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tHandleTimerEvent(Event_t* ev, TTimer* t); voidHandleUpdateSelected(TGFrame*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; static TVirtualDragManager*TVirtualDragManager::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; Bool_tTVirtualDragManager::IsDragging() const; Bool_tTVirtualDragManager::IsDropping() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; Bool_tTVirtualDragManager::IsPasting() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsStopped() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGuiBldDragManager.html:8931,Inherit,InheritsFrom,8931,root/html532/TGuiBldDragManager.html,https://root.cern,https://root.cern/root/html532/TGuiBldDragManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,":HandleDNDFinished(); virtual Bool_tTGFrame::HandleDNDLeave(); virtual Atom_tTGFrame::HandleDNDPosition(Int_t, Int_t, Atom_t, Int_t, Int_t); virtual Bool_tTGFrame::HandleDragDrop(TGFrame*, Int_t, Int_t, TGLayoutHints*); virtual Bool_tTGFrame::HandleDragEnter(TGFrame*); virtual Bool_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tHandleTimerEvent(Event_t* ev, TTimer* t); voidHandleUpdateSelected(TGFrame*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; static TVirtualDragManager*TVirtualDragManager::Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; Bool_tTVirtualDragManager::IsDragging() const; Bool_tTVirtualDragManager::IsDropping() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; Bool_tTVirtualDragManager::IsPasting() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsStopped() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGuiBldDragManager.html:8910,Inherit,InheritsFrom,8910,root/html602/TGuiBldDragManager.html,https://root.cern,https://root.cern/root/html602/TGuiBldDragManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,":HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual voidHandleShiftTab(); virtual voidHandleTab(); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFitParametersDialog.html:10240,Inherit,InheritsFrom,10240,root/html534/TFitParametersDialog.html,https://root.cern,https://root.cern/root/html534/TFitParametersDialog.html,1,['Inherit'],['InheritsFrom']
Modifiability,":HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual voidHandleShiftTab(); virtual voidHandleTab(); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); virtual voidTGWindow:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFitParametersDialog.html:10128,Inherit,InheritsFrom,10128,root/html602/TFitParametersDialog.html,https://root.cern,https://root.cern/root/html602/TFitParametersDialog.html,2,['Inherit'],['InheritsFrom']
Modifiability,":HypoTestPlot Class ReferenceRooFit » RooStats. ; This class provides the plots for the result of a study performed with any of the HypoTestCalculatorGeneric (e.g. ; HybridCalculator or FrequentistCalculator) class. ; Definition at line 22 of file HypoTestPlot.h. Public Member Functions;  HypoTestPlot ()=default;  Constructor. ;  ;  HypoTestPlot (HypoTestResult &result, Int_t bins, double min, double max, Option_t *opt=""NORMALIZE HIST"");  ;  HypoTestPlot (HypoTestResult &result, Int_t bins=100, Option_t *opt=""NORMALIZE HIST"");  ; void ApplyDefaultStyle (void);  Set default style options (also called in the constructor that takes a HypoTestResult). ;  ; void ApplyResult (HypoTestResult &result, Option_t *opt=""NORMALIZE HIST"");  Applies a HypoTestResult. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooStats::SamplingDistPlot;  SamplingDistPlot (Int_t nbins, double min, double max);  SamplingDistPlot constructor with bin size, min and max. ;  ;  SamplingDistPlot (Int_t nbins=100);  Constructors for SamplingDistribution. ;  ;  ~SamplingDistPlot () override;  Destructor of SamplingDistribution. ;  ; void AddLine (double x1, double y1, double x2, double y2, const char *title=nullptr);  add a line ;  ; double AddSamplingDistribution (const SamplingDistribution *samplingDist, Option_t *drawOptions=""NORMALIZE HIST"");  adds the sampling distribution and returns the scale factor ;  ; double AddSamplingDistributionShaded (const SamplingDistribution *samplingDist, double minShaded, double maxShaded, Option_t *drawOptions=""NORMALIZE HIST"");  Like AddSamplingDistribution, but also sets a shaded area in the minShaded and maxShaded boundaries. ;  ; void AddTF1 (TF1 *f, const char *title=nullptr, Option_t *drawOptions=""SAME"");  add a TF1 ;  ; void AddTH1 (TH1 *h, Option_t *drawOptions="""");  add a TH1 ;  ; void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestPlot.html:1236,inherit,inherited,1236,doc/master/classRooStats_1_1HypoTestPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestPlot.html,1,['inherit'],['inherited']
Modifiability,":IFitterTarget& target, const TString& name, const vector<TMVA::Interval*> ranges, const TString& theOption); const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TMVA::MCFitterMCFitter(const TMVA::MCFitter&); TMVA::MCFitterMCFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MCFitter.html:3162,Inherit,InheritsFrom,3162,root/html602/TMVA__MCFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__MCFitter.html,2,['Inherit'],['InheritsFrom']
Modifiability,":IFitterTarget& target, const TString& name, const vector<TMVA::Interval*> ranges, const TString& theOption); const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html:3213,Inherit,InheritsFrom,3213,root/html602/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__SimulatedAnnealingFitter.html,2,['Inherit'],['InheritsFrom']
Modifiability,":IRootFinderMethod(); ROOT::Math::IRootFinderMethodROOT::Math::IRootFinderMethod::IRootFinderMethod(const ROOT::Math::IRootFinderMethod&); virtual intIterate(); virtual intIterations() const; virtual const char*Name() const; virtual doubleRoot() const; virtual boolSetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); boolSetFunction(ROOT::Math::GSLRootFinder::GSLFuncPointer f, void* params, double xlow, double xup); virtual boolSolve(int maxIter = 100, double absTol = 1.0E-8, double relTol = 1.0E-10); virtual intStatus() const. protected:. voidFreeSolver(); voidSetSolver(ROOT::Math::GSLRootFSolver* s). private:. ROOT::Math::GSLRootFinderGSLRootFinder(const ROOT::Math::GSLRootFinder&); ROOT::Math::GSLRootFinder&operator=(const ROOT::Math::GSLRootFinder&). Data Members; private:. ROOT::Math::GSLFunctionWrapper*fFunction; intfIter; doublefRoot; ROOT::Math::GSLRootFSolver*fS; intfStatus; boolfValidInterval; doublefXlow; doublefXup. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRootFinder(). virtual ~GSLRootFinder(). GSLRootFinder(const ROOT::Math::GSLRootFinder& ); usually copying is non trivial, so we make this unaccessible. bool SetFunction( const IGradFunction & , double ). bool SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup). int Iterate(); iterate to find ROOTS return GSL_CONTINUE if iteration was successful or another error. double Root() const. bool Solve(int maxIter = 100, double absTol = 1.0E-8, double relTol = 1.0E-10); double XLower() const;; double XUpper() const;; Find the root. int Iterations() const; Return number of iterations. int Status() const; Return the status of last root finding. { return fStatus; }. const char * Name() const. void SetSolver(ROOT::Math::GSLRootFSolver* s). void FreeSolver(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:22; This pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLRootFinder.html:2328,Inherit,Inheritance,2328,root/html602/ROOT__Math__GSLRootFinder.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLRootFinder.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":IRootFinderMethod(); ROOT::Math::IRootFinderMethodROOT::Math::IRootFinderMethod::IRootFinderMethod(const ROOT::Math::IRootFinderMethod&); virtual intIterate(); virtual intIterations() const; virtual const char*Name() const; virtual doubleRoot() const; virtual boolSetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup); boolSetFunction(ROOT::Math::GSLRootFinder::GSLFuncPointer f, void* params, double xlow, double xup); virtual boolSolve(int maxIter = 100, double absTol = 1.0E-8, double relTol = 1.0E-10); virtual intStatus() const. protected:. voidFreeSolver(); voidSetSolver(ROOT::Math::GSLRootFSolver* s). private:. ROOT::Math::GSLRootFinderGSLRootFinder(const ROOT::Math::GSLRootFinder&); ROOT::Math::GSLRootFinder&operator=(const ROOT::Math::GSLRootFinder&). Data Members; private:. ROOT::Math::GSLFunctionWrapper*fFunction; intfIter; doublefRoot; ROOT::Math::GSLRootFSolver*fS; intfStatus; boolfValidInterval; doublefXlow; doublefXup. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRootFinder(). virtual ~GSLRootFinder(). GSLRootFinder(const ROOT::Math::GSLRootFinder& ); usually copying is non trivial, so we make this unaccessible. bool SetFunction( const IGradFunction & , double ). bool SetFunction(const ROOT::Math::IGenFunction& f, double xlow, double xup). int Iterate(); iterate to find ROOTS return GSL_CONTINUE if iteration was successful or another error. double Root() const. bool Solve(int maxIter = 100, double absTol = 1.0E-8, double relTol = 1.0E-10); double XLower() const;; double XUpper() const;; Find the root. int Iterations() const; Return number of iterations. int Status() const; Return the status of last root finding. { return fStatus; }. const char * Name() const. void SetSolver(ROOT::Math::GSLRootFSolver* s). void FreeSolver(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:34; This pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__GSLRootFinder.html:2328,Inherit,Inheritance,2328,root/html604/ROOT__Math__GSLRootFinder.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__GSLRootFinder.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":InVolume ; (; const std::vector< Float_t > & ; event, . Volume * ; volume . ); const. private . test if the data points are in the given volume ; Definition at line 415 of file BinarySearchTree.cxx. ◆ IsA(). virtual TClass * TMVA::BinarySearchTree::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::BinaryTree.; Definition at line 173 of file BinarySearchTree.h. ◆ Max(). Float_t TMVA::BinarySearchTree::Max ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to Maximum for signal and background for each variable ; Definition at line 128 of file BinarySearchTree.h. ◆ Mean(). Float_t TMVA::BinarySearchTree::Mean ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to mean for signal and background for each variable ; Definition at line 119 of file BinarySearchTree.h. ◆ Min(). Float_t TMVA::BinarySearchTree::Min ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to Minimum for signal and background for each variable ; Definition at line 125 of file BinarySearchTree.h. ◆ NormalizeTree() [1/2]. void TMVA::BinarySearchTree::NormalizeTree ; (; ). Normalisation of tree. ; Definition at line 343 of file BinarySearchTree.cxx. ◆ NormalizeTree() [2/2]. void TMVA::BinarySearchTree::NormalizeTree ; (; std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator ; leftBound, . std::vector< std::pair< Double_t, const TMVA::Event * > >::iterator ; rightBound, . UInt_t ; actDim . ). private . normalises the binary-search tree to reduce the branch length and hence speed up the search procedure (on average). ; Definition at line 286 of file BinarySearchTree.cxx. ◆ RMS() [1/2]. Float_t TMVA::BinarySearchTree::RMS ; (; Types::ESBType ; sb, . UInt_t ; var . ). inline . access to RMS for signal and background for each variable ; Definition at line 122 of file BinarySearchTree.h. ◆ RMS() [2/2]. Float_t TMVA::BinarySearchTree::RMS ; (; UInt_t ; var). inline . access to RMS for each variable ; Definition at ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:12890,variab,variable,12890,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,1,['variab'],['variable']
Modifiability,":MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGeoNode**fArray![fMaxLevel] Array of nodes; TObject*fClientClient object to notify; Int_tfLevelBranch depth; TGeoHMatrix*fMatrixGlobal matrix (owned); Int_tfMaxLevelArray length. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoBranchArray(Int_t level); Constructor. Alocates the array with a size given by level. ~TGeoBranchArray(); Destructor. TGeoBranchArray(const TGeoBranchArray& ); Copy constructor. TGeoBranchArray& operator=(const TGeoBranchArray& ); Assignment. void AddLevel(Int_t dindex); Add and extra daughter to the current path array. No validity check performed !. Long64_t BinarySearch(Long64_t n, const TGeoBranchArray** array, TGeoBranchArray* value); Binary search in an array of n pointers to branch arrays, to locate value.; Returns element index or index of nearest element smaller than value. Int_t Compare(const TObject* obj) const; Compare with other object of same type. Returns -1 if this is smaller (first; smaller array value prevails), 0 if equal (size and values) and 1 if this is; larger. void CleanMatrix(); Garbage collect the stored matrix. void Init(TGeoNode** branch, TGeoMatrix* global, Int_t level); Init the branch array from an arr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoBranchArray.html:7129,Inherit,Inheritance,7129,root/html602/TGeoBranchArray.html,https://root.cern,https://root.cern/root/html602/TGeoBranchArray.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(). private:. TProofMgr(const TProofMgr&); static TProofMgr_tGetXProofMgrHook(); TProofMgr&operator=(const TProofMgr&). Data Members; public:. enum EServType { kProofd; kXProofd; kProofLite; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSignalHandler*fIntHandlerInterrupt signal handler (ctrl-c); TStringTNamed::fNameobject identifier; Int_tfRemoteProtocolProtocol number run by the daemon server; TProofMgr::EServTypefServTypeType of server: old-proofd, XrdProofd; TList*fSessionsPROOF session managed by this server; TStringTNamed::fTitleobject title; TUrlfUrlServer URL; static TListfgListOfManagersSub-list of TROOT::ListOfProofs for managers. private:. static TProofMgr_tfgTXProofMgrHookConstructor hooks for TXProofMgr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofMgr(const char* url, Int_t loglevel = -1, const char* alias = """"); Create a PROOF manager for the standard (old) environment. ~TProofMgr(); Destroy a TProofMgr instance. TProof * AttachSession(Int_t , Bool_t = kFALSE); Dummy version provided for completeness. Just returns a pointer to; existing session 'id' (as shown by TProof::QuerySessions) or 0 if 'id' is; not valid. The boolena 'gui' should be kTRUE when invoked from the GUI. TProof * AttachSession(TProofDesc* , Bool_t = kFALSE); Dummy version provided for completeness. Just returns a pointer to; existing session 'id' (as shown by TProof::QuerySessions) or 0 if 'id' is; not valid. void DetachSession(Int_t , Option_t* = """"); Detach session with 'id' from its proofserv. The 'id' is the number; shown by QuerySessions. The correspondent TProof object is deleted.; If id == 0 all the known sessions are detached.; Option opt=""S"" or ""s"" forces session shutdown. void DetachSession(TPr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofMgr.html:8505,Inherit,Inheritance,8505,root/html532/TProofMgr.html,https://root.cern,https://root.cern/root/html532/TProofMgr.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternCylR(); Default constructor. TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternCylR(); Destructor. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); find the node containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternCylR.html:8322,Inherit,Inheritance,8322,root/html532/TGeoPatternCylR.html,https://root.cern,https://root.cern/root/html532/TGeoPatternCylR.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternParaX(); Default constructor. TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternParaX(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); get the node division containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void Updat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternParaX.html:8332,Inherit,Inheritance,8332,root/html532/TGeoPatternParaX.html,https://root.cern,https://root.cern/root/html532/TGeoPatternParaX.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternSphPhi(); Default constructor. TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions); constructor; compute step, start, end. TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternSphPhi(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); find the node containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternSphPhi.html:8355,Inherit,Inheritance,8355,root/html532/TGeoPatternSphPhi.html,https://root.cern,https://root.cern/root/html532/TGeoPatternSphPhi.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternSphR(); Default constructor. TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions); constructor; compute step, start, end. TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternSphR(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); find the node containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the local one c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternSphR.html:8335,Inherit,Inheritance,8335,root/html532/TGeoPatternSphR.html,https://root.cern,https://root.cern/root/html532/TGeoPatternSphR.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternSphTheta(); Default constructor. TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions); constructor; compute step, start, end. TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternSphTheta(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); find the node containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternSphTheta.html:8375,Inherit,Inheritance,8375,root/html532/TGeoPatternSphTheta.html,https://root.cern,https://root.cern/root/html532/TGeoPatternSphTheta.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternX(); Default constructor. TGeoPatternX(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternX(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the local one corresponding to the given division; index. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); Find the cell corresponding to point and next cell along dir (if asked). Double_t FindNextBoundary(Double_t* point, Double_t* dir, Int_t& indnext); Compute distance t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternX.html:8374,Inherit,Inheritance,8374,root/html532/TGeoPatternX.html,https://root.cern,https://root.cern/root/html532/TGeoPatternX.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternY(); Default constructor. TGeoPatternY(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternY(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the local one corresponding to the given division; index. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); Find the cell corresponding to point and next cell along dir (if asked). Double_t FindNextBoundary(Double_t* point, Double_t* dir, Int_t& indnext); Compute distance t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternY.html:8374,Inherit,Inheritance,8374,root/html532/TGeoPatternY.html,https://root.cern,https://root.cern/root/html532/TGeoPatternY.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); TGeoPatternFinder&TGeoPatternFinder::operator=(const TGeoPatternFinder&). Data Members; public:. enum TGeoPatternFinder::EGeoPatternFlags { kPatternReflected; kPatternSpacedOut; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternZ(); Default constructor. TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. ~TGeoPatternZ(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the local one corresponding to the given division; index. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); Find the cell corresponding to point and next cell along dir (if asked). Double_t FindNextBoundary(Double_t* point, Double_t* dir, Int_t& indnext); Compute distance t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternZ.html:8374,Inherit,Inheritance,8374,root/html532/TGeoPatternZ.html,https://root.cern,https://root.cern/root/html532/TGeoPatternZ.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MakeZombie(); virtual voidTSystem::SigAlarmInterruptsSyscalls(Bool_t); static const char*TSystem::StripOffProto(const char* path, const char* proto). Data Members; public:. enum TSystem::EAclicMode { kDefault; kDebug; kOpt; };; enum TSystem::EAclicProperties { kFlatBuildDir; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixDefault suffix for linkdef files to be used by ACLiC (see EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGSystem.html:16585,config,configure,16585,root/html534/TNetXNGSystem.html,https://root.cern,https://root.cern/root/html534/TNetXNGSystem.html,2,['config'],['configure']
Modifiability,":MatRepSym<float,2> >(ROOT::Math::SMatrixIdentity); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(const ROOT::Math::SMatrix<float,2U,2U,ROOT::Math::MatRepSym<float,2> >& rhs); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(const float& rhs); ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >(const ROOT::Math::SVector<float,2U*(2U+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,2U*(2U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepSym<float,2>fRep; static ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::(anonymous)kCols; static ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::(anonymous)kRows; static ROOT::Math::SMatrix<float,2,2,ROOT::Math::MatRepSym<float,2> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2___.html:4921,Inherit,Inheritance,4921,root/html602/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_2_2_-p1MatRepSym_float_2___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MatRepSym<float,3> >(ROOT::Math::SMatrixIdentity); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(const ROOT::Math::SMatrix<float,3U,3U,ROOT::Math::MatRepSym<float,3> >& rhs); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(const float& rhs); ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >(const ROOT::Math::SVector<float,3U*(3U+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,3U*(3U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepSym<float,3>fRep; static ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::(anonymous)kCols; static ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::(anonymous)kRows; static ROOT::Math::SMatrix<float,3,3,ROOT::Math::MatRepSym<float,3> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3___.html:4921,Inherit,Inheritance,4921,root/html602/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_3_3_-p1MatRepSym_float_3___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MatRepSym<float,4> >(ROOT::Math::SMatrixIdentity); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(const ROOT::Math::SMatrix<float,4U,4U,ROOT::Math::MatRepSym<float,4> >& rhs); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(const float& rhs); ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >(const ROOT::Math::SVector<float,4U*(4U+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,4U*(4U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepSym<float,4>fRep; static ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::(anonymous)kCols; static ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::(anonymous)kRows; static ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4___.html:4921,Inherit,Inheritance,4921,root/html602/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_4_4_-p1MatRepSym_float_4___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MatRepSym<float,5> >(ROOT::Math::SMatrixIdentity); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(const ROOT::Math::SMatrix<float,5U,5U,ROOT::Math::MatRepSym<float,5> >& rhs); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(const float& rhs); ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >(const ROOT::Math::SVector<float,5U*(5U+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,5U*(5U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepSym<float,5>fRep; static ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::(anonymous)kCols; static ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::(anonymous)kRows; static ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5___.html:4921,Inherit,Inheritance,4921,root/html602/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_5_5_-p1MatRepSym_float_5___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MatRepSym<float,6> >(ROOT::Math::SMatrixIdentity); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(const ROOT::Math::SMatrix<float,6U,6U,ROOT::Math::MatRepSym<float,6> >& rhs); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(const float& rhs); ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >(const ROOT::Math::SVector<float,6U*(6U+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,6U*(6U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepSym<float,6>fRep; static ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::(anonymous)kCols; static ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::(anonymous)kRows; static ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6___.html:4921,Inherit,Inheritance,4921,root/html602/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_6_6_-p1MatRepSym_float_6___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":MatRepSym<float,7> >(ROOT::Math::SMatrixIdentity); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(const ROOT::Math::SMatrix<float,7U,7U,ROOT::Math::MatRepSym<float,7> >& rhs); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(const float& rhs); ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >(const ROOT::Math::SVector<float,7U*(7U+1)/2>& v, bool lower = true); floatTrace() const; ROOT::Math::SVector<float,7U*(7U+1)/2>UpperBlock() const. Data Members; public:. ROOT::Math::MatRepSym<float,7>fRep; static ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::(anonymous)kCols; static ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::(anonymous)kRows; static ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::(anonymous)kSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. SMatrix<T,D1,D2,R> & operator=(ROOT::Math::SMatrixIdentity ). Assign from an identity matrix. T apply(unsigned int i) const; @name --- Access functions --- ; access the parse tree with the index starting from zero and; following the C convention for the order in accessing; the matrix elements.; Same convention for general and symmetric matrices. const T* Array() const; return read-only pointer to internal array. T* Array(); return pointer to internal array. iterator begin(); @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7___.html:4921,Inherit,Inheritance,4921,root/html602/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_float_7_7_-p1MatRepSym_float_7___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cylindrical3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cylindrical3D<Double32_t>,ROOT::Math::DefaultCoordinateSystemTa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html:10993,Inherit,Inheritance,10993,root/html532/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__DisplacementVector3D_-p1Cylindrical3D_Double32_t__-p1DefaultCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::Functor1D. class ROOT::Math::Functor1D: public ROOT::Math::IBaseFunctionOneDim. LM 7/2/2014: no needed this : make template ctor of Functor1D and GradFunctor1D not; available to CINT s. #if defined(__MAKECINT__) || defined(G__DICTIONARY); needed since CINT initialize it with TRootIOCtor; class TRootIOCtor;. Function Members (Methods); public:. virtual~Functor1D(); virtual ROOT::Math::Functor1D::ImplBase*Clone() const; ROOT::Math::Functor1DFunctor1D(); ROOT::Math::Functor1DFunctor1D(const ROOT::Math::Functor1D& f); ROOT::Math::Functor1DFunctor1D(const ROOT::Math::Functor1D& rhs); ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(); ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(const ROOT::Math::IBaseFunctionOneDim&); doubleROOT::Math::IBaseFunctionOneDim::operator()(double x) const; doubleROOT::Math::IBaseFunctionOneDim::operator()(const double* x) const; ROOT::Math::Functor1D&operator=(const ROOT::Math::Functor1D& rhs). private:. virtual doubleDoEval(double x) const. Data Members; private:. auto_ptr<ROOT::Math::Functor1D::Impl>fImplpointer to base functor handler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunc * Clone() const; clone of the function handler (use copy-ctor). double DoEval(double x) const. Functor1D(). Default constructor. {}. Functor1D(const Func & f). construct from a callable object with the right signature; implementing operator() (double x). {}. Functor1D(const PtrObj& p, MemFn memFn). construct from a pointer to member function (1D type). {}. virtual ~Functor1D(). Destructor (no operations). {}. » Author: L. Moneta Mon Nov 13 15:58:13 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Functor1D.html:1415,Inherit,Inheritance,1415,root/html602/ROOT__Math__Functor1D.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Functor1D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::Functor1D. class ROOT::Math::Functor1D: public ROOT::Math::IBaseFunctionOneDim. LM 7/2/2014: no needed this : make template ctor of Functor1D and GradFunctor1D not; available to CINT s. #if defined(__MAKECINT__) || defined(G__DICTIONARY); needed since CINT initialize it with TRootIOCtor; class TRootIOCtor;. Function Members (Methods); public:. virtual~Functor1D(); virtual ROOT::Math::Functor1D::ImplBase*Clone() const; ROOT::Math::Functor1DFunctor1D(); ROOT::Math::Functor1DFunctor1D(const ROOT::Math::Functor1D& f); ROOT::Math::Functor1DFunctor1D(const ROOT::Math::Functor1D& rhs); ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(); ROOT::Math::IBaseFunctionOneDimROOT::Math::IBaseFunctionOneDim::IBaseFunctionOneDim(const ROOT::Math::IBaseFunctionOneDim&); doubleROOT::Math::IBaseFunctionOneDim::operator()(double x) const; doubleROOT::Math::IBaseFunctionOneDim::operator()(const double* x) const; ROOT::Math::Functor1D&operator=(const ROOT::Math::Functor1D& rhs). private:. virtual doubleDoEval(double x) const. Data Members; private:. auto_ptr<ROOT::Math::Functor1D::Impl>fImplpointer to base functor handler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunc * Clone() const; clone of the function handler (use copy-ctor). double DoEval(double x) const. Functor1D(). Default constructor. {}. Functor1D(const Func & f). construct from a callable object with the right signature; implementing operator() (double x). {}. Functor1D(const PtrObj& p, MemFn memFn). construct from a pointer to member function (1D type). {}. virtual ~Functor1D(). Destructor (no operations). {}. » Author: L. Moneta Mon Nov 13 15:58:13 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__Functor1D.html:1415,Inherit,Inheritance,1415,root/html604/ROOT__Math__Functor1D.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__Functor1D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::GSLSimAnnealingfSolver; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLSimAnMinimizer(int type = 0). Default constructor. ~GSLSimAnMinimizer(). Destructor (no operations). GSLSimAnMinimizer(const ROOT::Math::GSLSimAnMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * Mi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLSimAnMinimizer.html:5841,variab,variable,5841,root/html528/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLSimAnMinimizer.html,4,['variab'],['variable']
Modifiability,":Math::IBaseFunctionMultiDim>::IModelFunction, ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. ~IParametricFunctionMultiDim(); virtual ROOT::Math::IBaseFunctionMultiDim*ROOT::Math::IBaseFunctionMultiDim::Clone() const; virtual unsigned intROOT::Math::IBaseFunctionMultiDim::NDim() const; virtual unsigned intROOT::Math::IBaseParam::NPar() const; doubleoperator()(const double* x, const double* p) const; ROOT::Math::IParametricFunctionMultiDim&operator=(const ROOT::Math::IParametricFunctionMultiDim&); virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*ROOT::Math::IBaseParam::Parameters() const; virtual voidROOT::Math::IBaseParam::SetParameters(const double* p). private:. virtual doubleDoEval(const double* x) const; virtual doubleDoEvalPar(const double* x, const double* p) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; double operator()(const double* x, const double* p) const. Evaluate function at a point x and for given parameters p.; This method does not change the internal status of the function (internal parameter values).; If for some reason one prefers caching the parameter values, SetParameters(p) and then operator()(x) should be; called.; Use the pure virtual function DoEvalPar to implement it. return DoEvalPar(x, p). double DoEval(const double* x) const. Implement the ROOT::Math::IBaseFunctionMultiDim interface DoEval(x) using the cached parameter values. » Author: L. Moneta Tue Nov 14 14:20:07 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__IParametricFunctionMultiDim.html:2381,Inherit,Inheritance,2381,root/html534/ROOT__Math__IParametricFunctionMultiDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__IParametricFunctionMultiDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::MatRepSym<double,4> >::rep_type. Function Members (Methods); public:. ~MatRepSym<double,4>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<double,4>MatRepSym<double,4>(); ROOT::Math::MatRepSym<double,4>MatRepSym<double,4>(const ROOT::Math::MatRepSym<double,4>&); const ROOT::Math::RowOffsets<4>&Offsets() const; const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<double,4>&operator+=(const ROOT::Math::MatRepSym<double,4>& rhs); ROOT::Math::MatRepSym<double,4>&operator-=(const ROOT::Math::MatRepSym<double,4>& rhs); ROOT::Math::MatRepSym<double,4>&operator=(const ROOT::Math::MatRepSym<double,4>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[10]; ROOT::Math::RowOffsets<4>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,4>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,4>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,4>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_4_.html:1975,Inherit,Inheritance,1975,root/html532/ROOT__Math__MatRepSym_double_4_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::MatRepSym<double,5> >::rep_type. Function Members (Methods); public:. ~MatRepSym<double,5>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<double,5>MatRepSym<double,5>(); ROOT::Math::MatRepSym<double,5>MatRepSym<double,5>(const ROOT::Math::MatRepSym<double,5>&); const ROOT::Math::RowOffsets<5>&Offsets() const; const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<double,5>&operator+=(const ROOT::Math::MatRepSym<double,5>& rhs); ROOT::Math::MatRepSym<double,5>&operator-=(const ROOT::Math::MatRepSym<double,5>& rhs); ROOT::Math::MatRepSym<double,5>&operator=(const ROOT::Math::MatRepSym<double,5>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[15]; ROOT::Math::RowOffsets<5>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,5>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,5>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,5>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_5_.html:1975,Inherit,Inheritance,1975,root/html532/ROOT__Math__MatRepSym_double_5_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::MatRepSym<double,6> >::rep_type. Function Members (Methods); public:. ~MatRepSym<double,6>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<double,6>MatRepSym<double,6>(); ROOT::Math::MatRepSym<double,6>MatRepSym<double,6>(const ROOT::Math::MatRepSym<double,6>&); const ROOT::Math::RowOffsets<6>&Offsets() const; const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<double,6>&operator+=(const ROOT::Math::MatRepSym<double,6>& rhs); ROOT::Math::MatRepSym<double,6>&operator-=(const ROOT::Math::MatRepSym<double,6>& rhs); ROOT::Math::MatRepSym<double,6>&operator=(const ROOT::Math::MatRepSym<double,6>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[21]; ROOT::Math::RowOffsets<6>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,6>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,6>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,6>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_6_.html:1975,Inherit,Inheritance,1975,root/html532/ROOT__Math__MatRepSym_double_6_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::MatRepSym<double,7> >::rep_type. Function Members (Methods); public:. ~MatRepSym<double,7>(); doubleapply(unsigned int i) const; double*Array(); const double*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<double,7>MatRepSym<double,7>(); ROOT::Math::MatRepSym<double,7>MatRepSym<double,7>(const ROOT::Math::MatRepSym<double,7>&); const ROOT::Math::RowOffsets<7>&Offsets() const; const double&operator()(unsigned int i, unsigned int j) const; double&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<double,7>&operator+=(const ROOT::Math::MatRepSym<double,7>& rhs); ROOT::Math::MatRepSym<double,7>&operator-=(const ROOT::Math::MatRepSym<double,7>& rhs); ROOT::Math::MatRepSym<double,7>&operator=(const ROOT::Math::MatRepSym<double,7>& rhs); double&operator[](unsigned int i); const double&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. doublefArray[28]; ROOT::Math::RowOffsets<7>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<double,7>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<double,7>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<double,7>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_7_.html:1975,Inherit,Inheritance,1975,root/html532/ROOT__Math__MatRepSym_double_7_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_double_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::Minimizer::PrintResults(); virtual boolProvidesError() const; virtual boolROOT::Math::Minimizer::Scan(unsigned int, unsigned int&, double*, double*, double = 0, double = 0); voidROOT::Math::Minimizer::SetDefaultOptions(); voidROOT::Math::Minimizer::SetErrorDef(double up); virtual boolSetFixedVariable(unsigned int, const string&, double); virtual voidSetFunction(const ROOT::Math::IMultiGenFunction& func); virtual voidSetFunction(const ROOT::Math::IMultiGradFunction& func); virtual boolROOT::Math::Minimizer::SetLimitedVariable(unsigned int, const string&, double, double, double, double); virtual boolROOT::Math::Minimizer::SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); voidROOT::Math::Minimizer::SetMaxFunctionCalls(unsigned int maxfcn); voidROOT::Math::Minimizer::SetMaxIterations(unsigned int maxiter); voidROOT::Math::Minimizer::SetOptions(const ROOT::Math::MinimizerOptions& opt); voidROOT::Math::Minimizer::SetPrecision(double prec); voidROOT::Math::Minimizer::SetPrintLevel(int level); voidROOT::Math::Minimizer::SetStrategy(int strategyLevel); voidROOT::Math::Minimizer::SetTolerance(double tol); virtual boolROOT::Math::Minimizer::SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); voidROOT::Math::Minimizer::SetValidError(bool on); virtual boolSetVariable(unsigned int, const string&, double, double); virtual boolROOT::Math::Minimizer::SetVariableValue(unsigned int, double); virtual boolROOT::Math::Minimizer::SetVariableValues(const double* x); virtual voidShowMembers(TMemberInspector& insp); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); doubleROOT::Math::Minimizer::Tolerance() const; virtual intROOT::Math::Minimizer::VariableIndex(const string&) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int) const; virtual const double*X() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLinearMinimizer.html:4185,Variab,VariableIndex,4185,root/html532/TLinearMinimizer.html,https://root.cern,https://root.cern/root/html532/TLinearMinimizer.html,2,['Variab'],"['VariableIndex', 'VariableName']"
Modifiability,":Math::Plane3D::Scalar& a, const ROOT::Math::Plane3D::Scalar& b, const ROOT::Math::Plane3D::Scalar& c, const ROOT::Math::Plane3D::Scalar& d); ROOT::Math::Plane3D::PointProjectOntoPlane(const ROOT::Math::Plane3D::Point& p) const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>ProjectOntoPlane<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>(const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>& p) const. protected:. voidNormalize(). private:. voidBuildFrom3Points(const ROOT::Math::Plane3D::Point& p1, const ROOT::Math::Plane3D::Point& p2, const ROOT::Math::Plane3D::Point& p3); voidBuildFromVecAndPoint(const ROOT::Math::Plane3D::Vector& n, const ROOT::Math::Plane3D::Point& p). Data Members; private:. ROOT::Math::Plane3D::ScalarfA; ROOT::Math::Plane3D::ScalarfB; ROOT::Math::Plane3D::ScalarfC; ROOT::Math::Plane3D::ScalarfD. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; D(). default constructor create plane z = 0. { }. Plane3D(const ROOT::Math::Plane3D::Scalar& a, const ROOT::Math::Plane3D::Scalar& b, const ROOT::Math::Plane3D::Scalar& c, const ROOT::Math::Plane3D::Scalar& d). generic constructors from the four scalar values describing the plane; according to the equation ax + by + cz + d = 0; \param a scalar value; \param b scalar value; \param c scalar value; \param d sxcalar value. Plane3D(const ROOT::Math::Plane3D::Vector& n, const ROOT::Math::Plane3D::Point& p). constructor a Plane3D from a normal vector and a point coplanar to the plane; \param n normal expressed as a ROOT::Math::DisplacementVector3D<Cartesian3D<double> >; \param p point expressed as a ROOT::Math::PositionVector3D<Cartesian3D<double> >. BuildFromVecAndPoint(const ROOT::Math::Plane3D::Vector& n, const ROOT::Math::Plane3D::Point& p). Plane3D(const ROOT::Math::Plane3D::Vector& n, const ROOT::Math::Plane3D::Point& p). Construct from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Plane3D.html:3107,Inherit,Inheritance,3107,root/html602/ROOT__Math__Plane3D.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Plane3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::TDataPoint<1,double>. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::TDataPoint<1,double>. class ROOT::Math::TDataPoint<1,double>. This class is also known as (typedefs to this class)ROOT::Math::TDataPoint<1,Double_t>, ROOT::Math::KDTree<ROOT::Math::TDataPoint<1,double> >::point_type, ROOT::Math::TDataPoint1D. Function Members (Methods); public:. ~TDataPoint<1,double>(); static UInt_tDimension(); doubleGetCoordinate(unsigned int iAxis) const; ROOT::Math::TDataPoint<1,double>::value_typeGetWeight() const; Bool_tLess(ROOT::Math::TDataPoint<1,double>& rPoint, unsigned int iAxis) const; ROOT::Math::TDataPoint<1,double>&operator=(const ROOT::Math::TDataPoint<1,double>&); voidSetCoordinate(unsigned int iAxis, double fValue); voidSetWeight(float fWeight); ROOT::Math::TDataPoint<1,double>TDataPoint<1,double>(); ROOT::Math::TDataPoint<1,double>TDataPoint<1,double>(const ROOT::Math::TDataPoint<1,double>&). Data Members; public:. enum { kDimension; };. private:. ROOT::Math::TDataPoint<1,double>::value_typem_fWeightweight at this point; ROOT::Math::TDataPoint<1,double>::value_typem_vCoordinates[1]coordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UInt_t Dimension(); {return kDimension;}. value_type GetCoordinate(unsigned int iAxis) const. value_type GetWeight() const; {return m_fWeight;}. Bool_t Less(ROOT::Math::TDataPoint<1,double>& rPoint, unsigned int iAxis) const. void SetCoordinate(unsigned int iAxis, double fValue). void SetWeight(float fWeight); {m_fWeight = fWeight;}. » Last changed: root/mathcore:$Id: TDataPoint.h 41518 2011-10-20 16:19:03Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__TDataPoint_1_double_.html:1319,Inherit,Inheritance,1319,root/html532/ROOT__Math__TDataPoint_1_double_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__TDataPoint_1_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Math::VirtualIntegratorOneDim ; ROOT::Math::WrappedMultiTF1 ; ROOT::Math::WrappedTF1 ; ROOT::MathMore ; ROOT::Minuit2::CombinedMinimizer ; ROOT::Minuit2::FCNBase ; ROOT::Minuit2::FCNGradientBase ; ROOT::Minuit2::FumiliFCNBase ; ROOT::Minuit2::FumiliMinimizer ; ROOT::Minuit2::FunctionMinimizer ; ROOT::Minuit2::FunctionMinimum ; ROOT::Minuit2::GenericFunction ; ROOT::Minuit2::MinosError ; ROOT::Minuit2::Minuit2Minimizer ; ROOT::Minuit2::MinuitParameter ; ROOT::Minuit2::MnApplication ; ROOT::Minuit2::MnContours ; ROOT::Minuit2::MnFumiliMinimize ; ROOT::Minuit2::MnHesse ; ROOT::Minuit2::MnMachinePrecision ; ROOT::Minuit2::MnMigrad ; ROOT::Minuit2::MnMinimize ; ROOT::Minuit2::MnMinos ; ROOT::Minuit2::MnPlot ; ROOT::Minuit2::MnScan ; ROOT::Minuit2::MnSimplex ; ROOT::Minuit2::MnStrategy ; ROOT::Minuit2::MnUserParameterState ; ROOT::Minuit2::MnUserParameters ; ROOT::Minuit2::ModularFunctionMinimizer ; ROOT::Minuit2::ScanMinimizer ; ROOT::Minuit2::SimplexMinimizer ; ROOT::Minuit2::VariableMetricMinimizer ; ROOT::TArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<ULong64_t,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<bool,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<double,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<float,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<short,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned char,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned long,0> > ; ROOT::TArrayProxy<ROOT::TArrayType<unsigned short,0> > ; ROOT::TBranchProxy ; ROOT::TBranchProxyClassDescriptor Class to cache the information we gathered about the branch and its content; ROOT::TBranchProxyDescriptor Describe the proxy for a branch; ROOT::TBranchProxyDirector ; ROOT::TClaArrayProxy<ROOT::TArrayType<Long64_t,0> > ; ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:21123,Variab,VariableMetricMinimizer,21123,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,1,['Variab'],['VariableMetricMinimizer']
Modifiability,":MethodANNBase::ForceNetworkCalculations(); voidTMVA::MethodANNBase::ForceNetworkInputs(const TMVA::Event* ev, Int_t ignoreIndex = -1); virtual voidGetHelpMessage() const; TMVA::TNeuron*TMVA::MethodANNBase::GetInputNeuron(Int_t index); const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; Double_tTMVA::MethodANNBase::GetNetworkOutput(); const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; TMVA::TNeuron*TMVA::MethodANNBase::GetOutputNeuron(Int_t index = 0); const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); Int_tTMVA::MethodANNBase::NumCycles(); vector<Int_t>*TMVA::MethodANNBase::ParseLayoutString(TString layerSpec); voidTMVA::MethodANNBase::PrintMessage(TString message, Bool_t force = kFALSE) const; voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::MethodANNBase::WaitForKeyboard(); voidTM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodMLP.html:14840,Config,Configurable,14840,root/html534/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodMLP.html,1,['Config'],['Configurable']
Modifiability,":MethodANNBase::ForceNetworkCalculations(); voidTMVA::MethodANNBase::ForceNetworkInputs(const TMVA::Event* ev, Int_t ignoreIndex = -1); virtual voidGetHelpMessage() const; TMVA::TNeuron*TMVA::MethodANNBase::GetInputNeuron(Int_t index); const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; Double_tTMVA::MethodANNBase::GetNetworkOutput(); const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; TMVA::TNeuron*TMVA::MethodANNBase::GetOutputNeuron(Int_t index = 0); const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); Int_tTMVA::MethodANNBase::NumCycles(); vector<Int_t>*TMVA::MethodANNBase::ParseLayoutString(TString layerSpec); voidTMVA::MethodANNBase::PrintMessage(TString message, Bool_t force = kFALSE) const; voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::MethodANNBase::WaitForKeyboard(); voidTMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodMLP.html:16665,Config,Configurable,16665,root/html602/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodMLP.html,2,['Config'],['Configurable']
Modifiability,":MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; TMVA::MethodBase*fCurrentMethod; UInt_tfCurrentMethodIdx; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Double_t>fMethodWeight; vector<IMethod*>fMethodsvector of all classifiers; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMVA::IMethod* GetMethod(const TString& title) const; returns pointer to MVA that corresponds to given method title. TMVA::IMethod* GetMethod(const Int_t index) const; returns pointer to MVA that corresponds to given method index. void AddWeightsXMLTo(void* parent) const. ~MethodCompositeBase( void ); delete methods. void ReadWeightsFromXML(void* wghtnode); XML streamer. void ReadWeightsFromStream(is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCompositeBase.html:15870,variab,variables,15870,root/html534/TMVA__MethodCompositeBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCompositeBase.html,4,['variab'],"['variable', 'variables']"
Modifiability,":MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* parent); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetAdaBoostBeta(Double_t b); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMaxDepth(Int_t d); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); voidSetNodeMinEvents(Int_t d); voidSetNodePurityLimit(Double_t l); voidSetNTrees(Int_t d); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidSetTuneParameters(map<TString,Double_t> tuneParameters); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBDT.html:14772,Config,Configurable,14772,root/html532/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBDT.html,1,['Config'],['Configurable']
Modifiability,":MethodBase::WriteStateToFile() const. protected:. Double_tCalculateMVAError(); voidCalcXminXmax(); TMVA::PDEFoamKernelBase*CreatePDEFoamKernel(); voidDeleteFoams(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); voidFillVariableNamesToFoam() const; virtual voidGetHelpMessage() const; const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; TMVA::PDEFoam*InitFoam(TString, TMVA::EFoamType, UInt_t cls = 0); Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidSetXminXmax(TMVA::PDEFoam*); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareCompatibilityOptions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDEFoam.html:14952,Config,Configurable,14952,root/html602/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDEFoam.html,12,['Config'],['Configurable']
Modifiability,":MinimTransformVariableMinimTransformVariable(double lower, ROOT::Math::SqrtLowVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double upper, ROOT::Math::SqrtUpVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); ROOT::Math::MinimTransformVariable&operator=(const ROOT::Math::MinimTransformVariable& rhs); doubleUpperBound() const. Data Members; private:. boolfBoundshas double bound; boolfFixfix variable; boolfLowBoundhas lower bound; doublefLowerlower parameter limit; auto_ptr<ROOT::Math::MinimizerVariableTransformation>fTransformpointer to the minimizer transformation; boolfUpBoundhas uppper bound param; doublefUpperupper parameter limit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformVariable(). Default Constructor for an unlimited variable. {}. MinimTransformVariable(double value); constructor for fixed variable. {}. MinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); constructor for double bound variable. { }. MinimTransformVariable(double lower, SqrtLowVariableTransformation * trafo); constructor for lower bound variable. {}. MinimTransformVariable(double upper, SqrtUpVariableTransformation * trafo); constructor for upper bound variable. {}. MinimTransformVariable(const ROOT::Math::MinimTransformVariable& rhs); copy constructor. MinimTransformVariable & operator=(const ROOT::Math::MinimTransformVariable& rhs); assignment. bool IsFixed() const; { return fFix; }. bool IsLimited() const; { return fBounds || fLowBound || fUpBound; }. bool HasLowerBound() const; { return fLowBound || fBounds; }. bool HasUpperBound() const; { return fUpBound || fBounds; }. double LowerBound() const; { return fLower; }. double UpperBound() const; { return fUpper; }. double FixValue() const; { return fLower; }. double InternalToExternal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MinimTransformVariable.html:1939,variab,variable,1939,root/html602/ROOT__Math__MinimTransformVariable.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MinimTransformVariable.html,4,['variab'],['variable']
Modifiability,":Minimize) the Minimizer class provides:; the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface) the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization. These are the ROOT::Math::Functor class and the ROOT::Math::GradFunctor class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition the ROOT::Math::FitMethodFunction interface.; The interface for setting the initial values for the function variables (which are the parameters in of the model function in case of solving for fitting) and specifying their limits.; The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class ROOT::Math::MinimizerOptions. When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the MinimizerOptions class. For the list of the available option parameter one must look at the documentation of the corresponding derived class.; The interface to retrieve the result of minimization ( minimum X values, function value, gradient, error on the minimum, etc...); The interface to perform a Scan, Hesse or a Contour plot (for the minimizers that support this, i.e. Minuit and Minuit2). An example on how to use this interface is the tutorial NumericalMinimization.C in the tutorials/fit directory. ; Definition at line 119 of file Minimizer.h. Public Member Functions;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:3069,variab,variables,3069,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variables']
Modifiability,:Minimizer.; Definition at line 440 of file TMinuitMinimizer.cxx. ◆ MinosStatus(). int TMinuitMinimizer::MinosStatus ; (; ); const. inlineoverridevirtual . minos status code of last Minos run minos status = -1 : Minos is not run = 0 : last MINOS run was successful > 0 : some problems encountered when running MINOS ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 182 of file TMinuitMinimizer.h. ◆ MinValue(). double TMinuitMinimizer::MinValue ; (; ); const. overridevirtual . return minimum function value ; Implements ROOT::Math::Minimizer.; Definition at line 644 of file TMinuitMinimizer.cxx. ◆ NCalls(). unsigned int TMinuitMinimizer::NCalls ; (; ); const. overridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 638 of file TMinuitMinimizer.cxx. ◆ NDim(). unsigned int TMinuitMinimizer::NDim ; (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 130 of file TMinuitMinimizer.h. ◆ NFree(). unsigned int TMinuitMinimizer::NFree ; (; ); const. overridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 663 of file TMinuitMinimizer.cxx. ◆ PrintResults(). void TMinuitMinimizer::PrintResults ; (; ). overridevirtual . return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ; print the result according to set level (implemented for TMinuit for maintaining Minuit-style printing) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 862 of file TMinuitMinimizer.cxx. ◆ ProvidesError(). bool TMinuitMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 137 of file TMinuit,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:20505,variab,variables,20505,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['variab'],['variables']
Modifiability,":Minimizer::MinValuevirtual double MinValue() const =0return minimum function value; ROOT::Math::Minimizer::PrintLevelint PrintLevel() constminimizer configuration parametersDefinition Minimizer.h:291; ROOT::Math::Minimizer::PrintResultsvirtual void PrintResults()return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const ...Definition Minimizer.h:282; ROOT::Math::Minimizer::NDimvirtual unsigned int NDim() const =0this is <= Function().NDim() which is the total number of variables (free+ constrained ones); ROOT::Math::Minimizer::NFreevirtual unsigned int NFree() constnumber of free variables (real dimension of the problem) this is <= Function().NDim() which is the to...Definition Minimizer.h:240; ROOT::Math::Minimizer::SetVariableLowerLimitvirtual bool SetVariableLowerLimit(unsigned int ivar, double lower)set the lower-limit of an already existing variableDefinition Minimizer.cxx:70; ROOT::Math::Minimizer::IsFixedVariablevirtual bool IsFixedVariable(unsigned int ivar) constquery if an existing variable is fixed (i.e.Definition Minimizer.cxx:102; ROOT::Math::Minimizer::ReleaseVariablevirtual bool ReleaseVariable(unsigned int ivar)release an existing variableDefinition Minimizer.cxx:94; ROOT::Math::Minimizer::Hessevirtual bool Hesse()perform a full calculation of the Hessian matrix for error calculationDefinition Minimizer.cxx:185; ROOT::Math::Minimizer::Contourvirtual bool Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj)find the contour points (xi, xj) of the function for parameter ivar and jvar around the minimum The c...Definition Minimizer.cxx:211; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; HFit::FitTFitResultPtr Fit(FitObject *h1, TF1 *f1, Foption_t &option, const ROOT::Math::MinimizerOptions &moption, const char *goption, ROOT::Fit::DataRange &range)Definition HFitImpl.cxx:133; MathNamespace for new Math cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:31950,variab,variable,31950,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variable']
Modifiability,":Minuit2::FCNGradientBase. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::FCNGradientBase. class ROOT::Minuit2::FCNGradientBase: public ROOT::Minuit2::FCNBase. Extension of the FCNBase for providing the analytical Gradient of the; function. The user-Gradient is checked at the beginning of the; minimization against the Minuit internal numerical Gradient in order to; spot problems in the analytical Gradient calculation. This can be turned; off by overriding CheckGradient() to make it return ""false"".; The size of the output Gradient vector must be equal to the size of the; input Parameter vector.; Minuit does a check of the user Gradient at the beginning, if this is not; wanted the method ""CheckGradient()"" has to be overridden to return; ""false"". Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~FCNGradientBase(); virtual boolCheckGradient() const; virtual doubleROOT::Minuit2::FCNBase::ErrorDef() const; virtual vector<double>Gradient(const vector<double>&) const; virtual doubleROOT::Minuit2::FCNBase::operator()(const vector<double>& x) const; ROOT::Minuit2::FCNGradientBase&operator=(const ROOT::Minuit2::FCNGradientBase&); virtual voidROOT::Minuit2::FCNBase::SetErrorDef(double); virtual doubleROOT::Minuit2::FCNBase::Up() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~FCNGradientBase(); {}. std::vector<double> Gradient(const vector<double>& ) const. bool CheckGradient() const; {return true;}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__FCNGradientBase.html:1569,Inherit,Inheritance,1569,root/html534/ROOT__Minuit2__FCNGradientBase.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__FCNGradientBase.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":ModelFunction() const; shared_ptr<ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::IModelFunction>ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDim,ROOT::Fit::BinData>::ModelFunctionPtr() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&operator=(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>& rhs); ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>& f); ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const shared_ptr<ROOT::Fit::BinData>& data, const shared_ptr<ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction>& func, int weight = 0, bool extended = true); ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::BinData& data, const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = true); virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeights(); voidUseSumOfWeightSquare(bool on = true).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:3798,extend,extended,3798,root/html604/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,4,['extend'],['extended']
Modifiability,":Open( outfileName, ""RECREATE"" );; ; // Create the factory object (see TMVAClassification.C for more information); ; std::string factoryOptions( ""!V:!Silent:Transformations=I;D;P;G,D"" );; if (batchMode) factoryOptions += "":!Color:!DrawProgressBar"";; ; TMVA::Factory *factory = new TMVA::Factory( ""TMVAClassificationCategory"", outputFile, factoryOptions );; ; // Create DataLoader; TMVA::DataLoader *dataloader=new TMVA::DataLoader(""dataset"");; ; // Define the input variables used for the MVA training; dataloader->AddVariable( ""var1"", 'F' );; dataloader->AddVariable( ""var2"", 'F' );; dataloader->AddVariable( ""var3"", 'F' );; dataloader->AddVariable( ""var4"", 'F' );; ; // You can add so-called ""Spectator variables"", which are not used in the MVA training,; // but will appear in the final ""TestTree"" produced by TMVA. This TestTree will contain the; // input variables, the response values of all trained MVAs, and the spectator variables; dataloader->AddSpectator( ""eta"" );; ; // Load the signal and background event samples from ROOT trees; TFile *input(0);; TString fname = gSystem->GetDirName(__FILE__) + ""/data/"";; if (gSystem->AccessPathName( fname + ""toy_sigbkg_categ_offset.root"")) {; // if directory data not found try using tutorials dir; fname = gROOT->GetTutorialDir() + ""/tmva/data/"";; }; if (UseOffsetMethod) fname += ""toy_sigbkg_categ_offset.root"";; else fname += ""toy_sigbkg_categ_varoff.root"";; if (!gSystem->AccessPathName( fname )) {; // first we try to find tmva_example.root in the local directory; std::cout << ""--- TMVAClassificationCategory: Accessing "" << fname << std::endl;; input = TFile::Open( fname );; }; ; if (!input) {; std::cout << ""ERROR: could not open data file: "" << fname << std::endl;; exit(1);; }; ; TTree *signalTree = (TTree*)input->Get(""TreeS"");; TTree *background = (TTree*)input->Get(""TreeB"");; ; // Global event weights per tree (see below for setting event-wise weights); Double_t signalWeight = 1.0;; Double_t backgroundWeight = 1.0;; ; // You can add",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:29538,variab,variables,29538,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,2,['variab'],['variables']
Modifiability,:PDEFoam Tree of PDEFoamCells; TMVA::PDEFoamCell Single cell of FOAM; TMVA::PDEFoamDecisionTree Decision tree like PDEFoam; TMVA::PDEFoamDecisionTreeDensity Class for decision tree like PDEFoam density; TMVA::PDEFoamDensityBase PDEFoam event density interface; TMVA::PDEFoamDiscriminant Tree of PDEFoamCells; TMVA::PDEFoamDiscriminantDensity Class for Discriminant density; TMVA::PDEFoamEvent Tree of PDEFoamCells; TMVA::PDEFoamEventDensity Class for Event density; TMVA::PDEFoamKernelBase PDEFoam kernel interface; TMVA::PDEFoamKernelGauss Gaussian PDEFoam kernel estimator; TMVA::PDEFoamKernelLinN next neighbor PDEFoam kernel estimator; TMVA::PDEFoamKernelTrivial trivial PDEFoam kernel estimator; TMVA::PDEFoamMultiTarget Tree of PDEFoamCells; TMVA::PDEFoamTarget Tree of PDEFoamCells; TMVA::PDEFoamTargetDensity Class for Target density; TMVA::PDEFoamVect n-dimensional vector with dynamical allocation; TMVA::PDF PDF wrapper for histograms; TMVA::Ranking Method-specific ranking for input variables ; TMVA::Reader Interpret the trained MVAs in an analysis context; TMVA::RegressionVariance Interface to different separation critiera used in training algorithms; TMVA::RootFinder Root finding using Brents algorithm; TMVA::RuleFit Calculations for Friedman's RuleFit method; TMVA::RuleFitAPI Friedman's RuleFit method; TMVA::SVEvent Event for SVM; TMVA::SdivSqrtSplusB Implementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ClassIndex.html:104066,variab,variables,104066,root/html530/ClassIndex.html,https://root.cern,https://root.cern/root/html530/ClassIndex.html,5,['variab'],['variables']
Modifiability,:PDEFoamEventDensity. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamDiscriminant←. TMVA::PDEFoamDecisionTree. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationReLU. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTSparseDiag<float>. TMatrixTSpars,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ClassHierarchy.html:79042,Variab,VariablePCATransform,79042,root/html604/ClassHierarchy.html,https://root.cern,https://root.cern/root/html604/ClassHierarchy.html,1,['Variab'],['VariablePCATransform']
Modifiability,":PDF::fHistAvgEvtPerBin. private . avg event per source hist bin ; Definition at line 180 of file PDF.h. ◆ fHistDefinedNBins. Int_t TMVA::PDF::fHistDefinedNBins. private . source hist bin num set by user ; Definition at line 181 of file PDF.h. ◆ fHistOriginal. TH1* TMVA::PDF::fHistOriginal. private . the input histogram ; Definition at line 176 of file PDF.h. ◆ fIGetVal. TF1* TMVA::PDF::fIGetVal. private . integration interface ; Definition at line 178 of file PDF.h. ◆ fInterpolateString. TString TMVA::PDF::fInterpolateString. private . Definition at line 186 of file PDF.h. ◆ fInterpolMethod. TMVA::PDF::EInterpolateMethod TMVA::PDF::fInterpolMethod. private . interpolation method ; Definition at line 172 of file PDF.h. ◆ fKDEborder. KDEKernel::EKernelBorder TMVA::PDF::fKDEborder. private . The method to take care about ""border"" effects (string) ; Definition at line 190 of file PDF.h. ◆ fKDEiter. KDEKernel::EKernelIter TMVA::PDF::fKDEiter. private . Number of iterations (adaptive or not) ; Definition at line 189 of file PDF.h. ◆ fKDEiterString. TString TMVA::PDF::fKDEiterString. private . Definition at line 184 of file PDF.h. ◆ fKDEtype. KDEKernel::EKernelType TMVA::PDF::fKDEtype. private . Kernel type to use for KDE. ; Definition at line 188 of file PDF.h. ◆ fKDEtypeString. TString TMVA::PDF::fKDEtypeString. private . strings used to read definitions ; Definition at line 183 of file PDF.h. ◆ fLogger. MsgLogger* TMVA::PDF::fLogger. mutableprivate . ! message logger ; Definition at line 199 of file PDF.h. ◆ fMaxNsmooth. Int_t TMVA::PDF::fMaxNsmooth. private . Max number of smoothing iterations. ; Definition at line 169 of file PDF.h. ◆ fMinNsmooth. Int_t TMVA::PDF::fMinNsmooth. private . Min number of smoothing iterations. ; Definition at line 168 of file PDF.h. ◆ fNormalize. Bool_t TMVA::PDF::fNormalize. private . normalize histogram (false for cumulative distribution used in GaussTranform) ; Definition at line 196 of file PDF.h. ◆ fNsmooth. Int_t TMVA::PDF::fNsmooth.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDF.html:29966,adapt,adaptive,29966,doc/master/classTMVA_1_1PDF.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDF.html,1,['adapt'],['adaptive']
Modifiability,":PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cartesian3D<double>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1Cartesian3D_double__-p1DefaultCoordinateSystemTag_.html:9376,Inherit,Inheritance,9376,root/html602/ROOT__Math__PositionVector3D_-p1Cartesian3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1Cartesian3D_double__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cartesian3D<double>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1Cartesian3D_double__-p1DefaultCoordinateSystemTag_.html:9376,Inherit,Inheritance,9376,root/html604/ROOT__Math__PositionVector3D_-p1Cartesian3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1Cartesian3D_double__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. private:. TGeoNavigatorArray(const TGeoNavigatorArray&); TGeoNavigatorArray&operator=(const TGeoNavigatorArray&). Data Members; public:. enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObject**TObjArray::fCont!Array contents; Int_tTObjArray::fLastLast element in array containing an object; Int_tTObjArray::fLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. private:. TGeoNavigator*fCurrentNavigatorCurrent navigator; TGeoManager*fGeoManagerManager to which it applies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNavigator * AddNavigator(); Add a new navigator to the array. TGeoNavigator& operator=(const TGeoNavigatorArray& ). TGeoNavigatorArray(const TGeoNavigatorArray& ). TGeoNavigatorArray(); {}. TGeoNavigatorArray(TGeoManager* mgr); {SetOwner();}. virtual ~TGeoNavigatorArray(); {}. TGeoNavigator * GetCurrentNavigator() const; {return fCurrentNavigator;}. TGeoNavigator * SetCurrentNavigator(Int_t inav); {return (fCurrentNavigator=(TGeoNavigator*)At(inav));}. » Author: Mihaela Gheata 30/05/07 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id: TGeoNavigator.h 41341 2011-10-11 14:58:29Z agheata $ » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoNavigatorArray.html:10631,Inherit,Inheritance,10631,root/html532/TGeoNavigatorArray.html,https://root.cern,https://root.cern/root/html532/TGeoNavigatorArray.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":PtEtaPhiE4D<double>::Scalar eta, ROOT::Math::PtEtaPhiE4D<double>::Scalar phi, ROOT::Math::PtEtaPhiE4D<double>::Scalar e); ROOT::Math::PtEtaPhiE4D<double>::ScalarPx() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarPy() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarPz() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarR() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarRho() const; voidScale(ROOT::Math::PtEtaPhiE4D<double>::Scalar a); voidSetCoordinates(const Scalar[] src); voidSetCoordinates(ROOT::Math::PtEtaPhiE4D<double>::Scalar pt, ROOT::Math::PtEtaPhiE4D<double>::Scalar eta, ROOT::Math::PtEtaPhiE4D<double>::Scalar phi, ROOT::Math::PtEtaPhiE4D<double>::Scalar e); voidSetE(ROOT::Math::PtEtaPhiE4D<double>::Scalar e); voidSetEta(ROOT::Math::PtEtaPhiE4D<double>::Scalar eta); voidSetPhi(ROOT::Math::PtEtaPhiE4D<double>::Scalar phi); voidSetPt(ROOT::Math::PtEtaPhiE4D<double>::Scalar pt); voidSetPxPyPzE(ROOT::Math::PtEtaPhiE4D<double>::Scalar px, ROOT::Math::PtEtaPhiE4D<double>::Scalar py, ROOT::Math::PtEtaPhiE4D<double>::Scalar pz, ROOT::Math::PtEtaPhiE4D<double>::Scalar e); ROOT::Math::PtEtaPhiE4D<double>::ScalarT() const; ROOT::Math::PtEtaPhiE4D<double>::Scalart() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarTheta() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarX() const; ROOT::Math::PtEtaPhiE4D<double>::Scalarx() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarY() const; ROOT::Math::PtEtaPhiE4D<double>::Scalary() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarZ() const; ROOT::Math::PtEtaPhiE4D<double>::Scalarz() const. private:. static ROOT::Math::PtEtaPhiE4D<double>::Scalarpi(); voidRestrict(). Data Members; private:. doublefE; doublefEta; doublefPhi; doublefPt. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__PtEtaPhiE4D_double_.html:3900,Inherit,Inheritance,3900,root/html602/ROOT__Math__PtEtaPhiE4D_double_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__PtEtaPhiE4D_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":PtEtaPhiE4D<double>::Scalar eta, ROOT::Math::PtEtaPhiE4D<double>::Scalar phi, ROOT::Math::PtEtaPhiE4D<double>::Scalar e); ROOT::Math::PtEtaPhiE4D<double>::ScalarPx() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarPy() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarPz() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarR() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarRho() const; voidScale(ROOT::Math::PtEtaPhiE4D<double>::Scalar a); voidSetCoordinates(const Scalar[] src); voidSetCoordinates(ROOT::Math::PtEtaPhiE4D<double>::Scalar pt, ROOT::Math::PtEtaPhiE4D<double>::Scalar eta, ROOT::Math::PtEtaPhiE4D<double>::Scalar phi, ROOT::Math::PtEtaPhiE4D<double>::Scalar e); voidSetE(ROOT::Math::PtEtaPhiE4D<double>::Scalar e); voidSetEta(ROOT::Math::PtEtaPhiE4D<double>::Scalar eta); voidSetPhi(ROOT::Math::PtEtaPhiE4D<double>::Scalar phi); voidSetPt(ROOT::Math::PtEtaPhiE4D<double>::Scalar pt); voidSetPxPyPzE(ROOT::Math::PtEtaPhiE4D<double>::Scalar px, ROOT::Math::PtEtaPhiE4D<double>::Scalar py, ROOT::Math::PtEtaPhiE4D<double>::Scalar pz, ROOT::Math::PtEtaPhiE4D<double>::Scalar e); ROOT::Math::PtEtaPhiE4D<double>::ScalarT() const; ROOT::Math::PtEtaPhiE4D<double>::Scalart() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarTheta() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarX() const; ROOT::Math::PtEtaPhiE4D<double>::Scalarx() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarY() const; ROOT::Math::PtEtaPhiE4D<double>::Scalary() const; ROOT::Math::PtEtaPhiE4D<double>::ScalarZ() const; ROOT::Math::PtEtaPhiE4D<double>::Scalarz() const. private:. static ROOT::Math::PtEtaPhiE4D<double>::Scalarpi(); voidRestrict(). Data Members; private:. doublefE; doublefEta; doublefPhi; doublefPt. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__PtEtaPhiE4D_double_.html:3900,Inherit,Inheritance,3900,root/html604/ROOT__Math__PtEtaPhiE4D_double_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__PtEtaPhiE4D_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":RCompressionSetting::EDefaults::kUseGlobal@ kUseGlobalUse the global compression setting for this process; may be affected by rootrc.Definition Compression.h:50; ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault@ kUseCompiledDefaultUse the compile-time default setting.Definition Compression.h:52; ROOT::RCompressionSetting::EDefaults::kUseSmallest@ kUseSmallestUse the setting that results in the smallest files; very slow read and write.Definition Compression.h:58; ROOT::RCompressionSetting::EDefaults::kUseGeneralPurpose@ kUseGeneralPurposeUse the new recommended general-purpose setting; it is a best trade-off between compression ratio/dec...Definition Compression.h:56; ROOT::RCompressionSetting::ELevelDefinition Compression.h:61; ROOT::RCompressionSetting::ELevel::EValuesEValuesNote: this is only temporarily a struct and will become a enum class hence the name convention used.Definition Compression.h:63; ROOT::RCompressionSetting::ELevel::kInherit@ kInheritSome objects use this value to denote that the compression algorithm should be inherited from the par...Definition Compression.h:66; ROOT::RCompressionSetting::ELevel::kUseMin@ kUseMinCompression level reserved when we are not sure what to use (1 is for the fastest compression)Definition Compression.h:70; ROOT::RCompressionSetting::ELevel::kDefaultOld@ kDefaultOldCompression level reserved for old ROOT compression algorithm.Definition Compression.h:78; ROOT::RCompressionSetting::ELevel::kUncompressed@ kUncompressedCompression level reserved for ""uncompressed state"".Definition Compression.h:68; ROOT::RCompressionSetting::ELevel::kDefaultLZMA@ kDefaultLZMACompression level reserved for LZMA compression algorithm (slowest compression with smallest files)Definition Compression.h:80; ROOT::RCompressionSetting::ELevel::kDefaultZSTD@ kDefaultZSTDCompression level reserved for ZSTD compression algorithm (trade-off between file ratio/decompression...Definition Compression.h:76; ROOT::RCompressionSetting::ELevel::kDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Compression_8h_source.html:9992,inherit,inherited,9992,doc/v632/Compression_8h_source.html,https://root.cern,https://root.cern/doc/v632/Compression_8h_source.html,1,['inherit'],['inherited']
Modifiability,":RCompressionSetting::EDefaults::kUseGlobal@ kUseGlobalUse the global compression setting for this process; may be affected by rootrc.Definition Compression.h:51; ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault@ kUseCompiledDefaultUse the compile-time default setting.Definition Compression.h:53; ROOT::RCompressionSetting::EDefaults::kUseSmallest@ kUseSmallestUse the setting that results in the smallest files; very slow read and write.Definition Compression.h:60; ROOT::RCompressionSetting::EDefaults::kUseGeneralPurpose@ kUseGeneralPurposeUse the new recommended general-purpose setting; it is a best trade-off between compression ratio/dec...Definition Compression.h:58; ROOT::RCompressionSetting::ELevelDefinition Compression.h:63; ROOT::RCompressionSetting::ELevel::EValuesEValuesNote: this is only temporarily a struct and will become a enum class hence the name convention used.Definition Compression.h:65; ROOT::RCompressionSetting::ELevel::kInherit@ kInheritSome objects use this value to denote that the compression algorithm should be inherited from the par...Definition Compression.h:68; ROOT::RCompressionSetting::ELevel::kUseMin@ kUseMinCompression level reserved when we are not sure what to use (1 is for the fastest compression)Definition Compression.h:72; ROOT::RCompressionSetting::ELevel::kDefaultOld@ kDefaultOldCompression level reserved for old ROOT compression algorithm.Definition Compression.h:81; ROOT::RCompressionSetting::ELevel::kUncompressed@ kUncompressedCompression level reserved for ""uncompressed state"".Definition Compression.h:70; ROOT::RCompressionSetting::ELevel::kDefaultLZMA@ kDefaultLZMACompression level reserved for LZMA compression algorithm (slowest compression with smallest files)Definition Compression.h:83; ROOT::RCompressionSetting::ELevel::kDefaultZSTD@ kDefaultZSTDCompression level reserved for ZSTD compression algorithm (trade-off between file ratio/decompression...Definition Compression.h:79; ROOT::RCompressionSetting::ELevel::kDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Compression_8h_source.html:9652,inherit,inherited,9652,doc/master/Compression_8h_source.html,https://root.cern,https://root.cern/doc/master/Compression_8h_source.html,1,['inherit'],['inherited']
Modifiability,":RWebWindow::_MakeSendHeaderstd::string _MakeSendHeader(std::shared_ptr< WebConn > &conn, bool txt, const std::string &data, int chid)Internal method to prepare text part of send data Should be called under locked connection mutex.Definition RWebWindow.cxx:1107; ROOT::RWebWindow::timestamp_tstd::chrono::time_point< std::chrono::system_clock > timestamp_tDefinition RWebWindow.hxx:60; ROOT::RWebWindow::SetMaxQueueLengthvoid SetMaxQueueLength(unsigned len=10)configures maximal queue length of data which can be held by windowDefinition RWebWindow.hxx:300; ROOT::RWebWindow::ProcessWSbool ProcessWS(THttpCallArg &arg)Processing of websockets call-backs, invoked from RWebWindowWSHandler Method invoked from http server...Definition RWebWindow.cxx:736; ROOT::RWebWindow::HasConnectionbool HasConnection(unsigned connid=0, bool only_active=true) constreturns true if specified connection id existsDefinition RWebWindow.cxx:1413; ROOT::RWebWindow::GetWidthunsigned GetWidth() constreturns configured window width (0 - default) actual window width can be differentDefinition RWebWindow.hxx:278; ROOT::RWebWindow::fWindowThrdstd::thread fWindowThrd! special thread for that windowDefinition RWebWindow.hxx:163; ROOT::RWebWindow::ProvideQueueEntryvoid ProvideQueueEntry(unsigned connid, EQueueEntryKind kind, std::string &&arg)Provide data to user callback User callback must be executed in the window thread.Definition RWebWindow.cxx:421; ROOT::RWebWindow::HasKeybool HasKey(const std::string &key, bool also_newkey=false) constReturns true if provided key value already exists (in processes map or in existing connections) In sp...Definition RWebWindow.cxx:558; ROOT::RWebWindow::CompleteWSSendvoid CompleteWSSend(unsigned wsid)Complete websocket send operation Clear ""doing send"" flag and check if next operation has to be start...Definition RWebWindow.cxx:1088; ROOT::RWebWindow::IsUseCurrentDirbool IsUseCurrentDir() constreturns true if window can access local files via currentdir/ path of http serv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebWindow_8hxx_source.html:41033,config,configured,41033,doc/v632/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebWindow_8hxx_source.html,1,['config'],['configured']
Modifiability,":RWebWindow::_MakeSendHeaderstd::string _MakeSendHeader(std::shared_ptr< WebConn > &conn, bool txt, const std::string &data, int chid)Internal method to prepare text part of send data Should be called under locked connection mutex.Definition RWebWindow.cxx:1140; ROOT::RWebWindow::timestamp_tstd::chrono::time_point< std::chrono::system_clock > timestamp_tDefinition RWebWindow.hxx:62; ROOT::RWebWindow::SetMaxQueueLengthvoid SetMaxQueueLength(unsigned len=10)configures maximal queue length of data which can be held by windowDefinition RWebWindow.hxx:303; ROOT::RWebWindow::ProcessWSbool ProcessWS(THttpCallArg &arg)Processing of websockets call-backs, invoked from RWebWindowWSHandler Method invoked from http server...Definition RWebWindow.cxx:737; ROOT::RWebWindow::HasConnectionbool HasConnection(unsigned connid=0, bool only_active=true) constreturns true if specified connection id existsDefinition RWebWindow.cxx:1455; ROOT::RWebWindow::GetWidthunsigned GetWidth() constreturns configured window width (0 - default) actual window width can be differentDefinition RWebWindow.hxx:281; ROOT::RWebWindow::fWindowThrdstd::thread fWindowThrd! special thread for that windowDefinition RWebWindow.hxx:166; ROOT::RWebWindow::ProvideQueueEntryvoid ProvideQueueEntry(unsigned connid, EQueueEntryKind kind, std::string &&arg)Provide data to user callback User callback must be executed in the window thread.Definition RWebWindow.cxx:422; ROOT::RWebWindow::HasKeybool HasKey(const std::string &key, bool also_newkey=false) constReturns true if provided key value already exists (in processes map or in existing connections) In sp...Definition RWebWindow.cxx:559; ROOT::RWebWindow::CompleteWSSendvoid CompleteWSSend(unsigned wsid)Complete websocket send operation Clear ""doing send"" flag and check if next operation has to be start...Definition RWebWindow.cxx:1121; ROOT::RWebWindow::IsUseCurrentDirbool IsUseCurrentDir() constreturns true if window can access local files via currentdir/ path of http serv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebWindow_8hxx_source.html:41178,config,configured,41178,doc/master/RWebWindow_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RWebWindow_8hxx_source.html,1,['config'],['configured']
Modifiability,":ReaderReader(const TMVA::Reader&); TMVA::ReaderReader(const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(vector<string>& varNames, const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(const string& varNames, const TString& theOption, Bool_t verbose = 0); TMVA::ReaderReader(vector<TString>& varNames, const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(const TString& varNames, const TString& theOption, Bool_t verbose = 0); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVerbose(Bool_t v); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); Bool_tVerbose() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Reader.html:8404,Config,Configurable,8404,root/html602/TMVA__Reader.html,https://root.cern,https://root.cern/root/html602/TMVA__Reader.html,2,['Config'],['Configurable']
Modifiability,":SMatrix<float,4,4,ROOT::Math::MatRepSym<float,4> >::rep_type. Function Members (Methods); public:. ~MatRepSym<float,4>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<float,4>MatRepSym<float,4>(); ROOT::Math::MatRepSym<float,4>MatRepSym<float,4>(const ROOT::Math::MatRepSym<float,4>&); const ROOT::Math::RowOffsets<4>&Offsets() const; const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<float,4>&operator+=(const ROOT::Math::MatRepSym<float,4>& rhs); ROOT::Math::MatRepSym<float,4>&operator-=(const ROOT::Math::MatRepSym<float,4>& rhs); ROOT::Math::MatRepSym<float,4>&operator=(const ROOT::Math::MatRepSym<float,4>& rhs); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[10]; ROOT::Math::RowOffsets<4>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<float,4>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<float,4>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<float,4>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_4_.html:1950,Inherit,Inheritance,1950,root/html532/ROOT__Math__MatRepSym_float_4_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SMatrix<float,5,5,ROOT::Math::MatRepSym<float,5> >::rep_type. Function Members (Methods); public:. ~MatRepSym<float,5>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<float,5>MatRepSym<float,5>(); ROOT::Math::MatRepSym<float,5>MatRepSym<float,5>(const ROOT::Math::MatRepSym<float,5>&); const ROOT::Math::RowOffsets<5>&Offsets() const; const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<float,5>&operator+=(const ROOT::Math::MatRepSym<float,5>& rhs); ROOT::Math::MatRepSym<float,5>&operator-=(const ROOT::Math::MatRepSym<float,5>& rhs); ROOT::Math::MatRepSym<float,5>&operator=(const ROOT::Math::MatRepSym<float,5>& rhs); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[15]; ROOT::Math::RowOffsets<5>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<float,5>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<float,5>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<float,5>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_5_.html:1950,Inherit,Inheritance,1950,root/html532/ROOT__Math__MatRepSym_float_5_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SMatrix<float,6,6,ROOT::Math::MatRepSym<float,6> >::rep_type. Function Members (Methods); public:. ~MatRepSym<float,6>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<float,6>MatRepSym<float,6>(); ROOT::Math::MatRepSym<float,6>MatRepSym<float,6>(const ROOT::Math::MatRepSym<float,6>&); const ROOT::Math::RowOffsets<6>&Offsets() const; const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<float,6>&operator+=(const ROOT::Math::MatRepSym<float,6>& rhs); ROOT::Math::MatRepSym<float,6>&operator-=(const ROOT::Math::MatRepSym<float,6>& rhs); ROOT::Math::MatRepSym<float,6>&operator=(const ROOT::Math::MatRepSym<float,6>& rhs); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[21]; ROOT::Math::RowOffsets<6>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<float,6>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<float,6>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<float,6>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_6_.html:1950,Inherit,Inheritance,1950,root/html532/ROOT__Math__MatRepSym_float_6_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SMatrix<float,7,7,ROOT::Math::MatRepSym<float,7> >::rep_type. Function Members (Methods); public:. ~MatRepSym<float,7>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; voidCreateOffsets(); ROOT::Math::MatRepSym<float,7>MatRepSym<float,7>(); ROOT::Math::MatRepSym<float,7>MatRepSym<float,7>(const ROOT::Math::MatRepSym<float,7>&); const ROOT::Math::RowOffsets<7>&Offsets() const; const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepSym<float,7>&operator+=(const ROOT::Math::MatRepSym<float,7>& rhs); ROOT::Math::MatRepSym<float,7>&operator-=(const ROOT::Math::MatRepSym<float,7>& rhs); ROOT::Math::MatRepSym<float,7>&operator=(const ROOT::Math::MatRepSym<float,7>& rhs); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[28]; ROOT::Math::RowOffsets<7>*fOff! transient. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator+=(const ROOT::Math::MatRepSym<float,7>& rhs). MatRepStd<T, D1, D2>& operator-=(const ROOT::Math::MatRepSym<float,7>& rhs). MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepSym<float,7>& rhs). return fArray[ Offsets(). void CreateOffsets(). » Last changed: root/smatrix:$Id: MatrixRepresentationsStatic.h 34964 2010-08-24 13:58:51Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_7_.html:1950,Inherit,Inheritance,1950,root/html532/ROOT__Math__MatRepSym_float_7_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__MatRepSym_float_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SamplingDistPlot::SetSampleWeights(const RooStats::SamplingDistribution* samplingDist). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; Bool_tRooStats::SamplingDistPlot::fApplyStyle; Style_tRooStats::SamplingDistPlot::fFillStyle; TH1F*RooStats::SamplingDistPlot::fHist; RooListRooStats::SamplingDistPlot::fItemsholds TH1Fs only; TIterator*RooStats::SamplingDistPlot::fIteratorTODO remove class variable and instantiate locally as necessary; TLegend*RooStats::SamplingDistPlot::fLegend; Bool_tRooStats::SamplingDistPlot::fLogXaxis; Bool_tRooStats::SamplingDistPlot::fLogYaxis; TStringTNamed::fNameobject identifier; RooListRooStats::SamplingDistPlot::fOtherItemsother objects to be drawn like TLine etc.; RooPlot*RooStats::SamplingDistPlot::fRooPlot; TStringTNamed::fTitleobject title. private:. RooStats::HypoTestResult*fHypoTestResult. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestPlot(RooStats::HypoTestResult& result, Int_t bins = 100). void ApplyResult(RooStats::HypoTestResult& result). void ApplyDefaultStyle(void). HypoTestPlot(); Constructor. {}. ~HypoTestPlot(void); {}. » Author: Sven Kreiss June 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: HypoTestPlot.h 41251 2011-10-07 09:07:46Z moneta $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HypoTestPlot.html:9773,Inherit,Inheritance,9773,root/html532/RooStats__HypoTestPlot.html,https://root.cern,https://root.cern/root/html532/RooStats__HypoTestPlot.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidsetGeneratorConfig(); voidsetGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidsetNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidsetTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:30111,config,config,30111,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['config'],['config']
Modifiability,":SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGWindow& operator=(const TGUnknownWindowHandler& ). Bool_t HandleEvent(Event_t* ); { return kFALSE; }. virtual ~TGUnknownWindowHandler(); { }. » Author: Fons Rademakers 28/12/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGWindow.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGUnknownWindowHandler.html:5298,Inherit,Inheritance,5298,root/html532/TGUnknownWindowHandler.html,https://root.cern,https://root.cern/root/html532/TGUnknownWindowHandler.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidselectDefaultAlgorithm(); voidselectFastAlgorithm(); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooVoigtian.html:27307,config,config,27307,root/html526/RooVoigtian.html,https://root.cern,https://root.cern/root/html526/RooVoigtian.html,1,['config'],['config']
Modifiability,":ScalarT() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalart() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::ScalarTheta() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalartheta() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>Vect() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::ScalarX() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalarx() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::ScalarY() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalary() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::ScalarZ() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalarz() const. Data Members; private:. ROOT::Math::PxPyPzE4D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; LorentzVector & operator=(const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >& ); ------ assignment ------. Assignment operator from a lorentz vector of arbitrary type. SetXYZT(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar xx, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar yy, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar zz, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar tt). fCoordinates. SetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar a, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar b, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar c, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<Double32_t> >::Scalar d). const CoordSystem & Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a const reference to the coordinate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__LorentzVector_-p1PxPyPzE4D_Double32_t___.html:10328,Inherit,Inheritance,10328,root/html532/ROOT__Math__LorentzVector_-p1PxPyPzE4D_Double32_t___.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__LorentzVector_-p1PxPyPzE4D_Double32_t___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":ScalarT() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalart() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::ScalarTheta() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalartheta() const; ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>Vect() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::ScalarX() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalarx() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::ScalarY() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalary() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::ScalarZ() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalarz() const. Data Members; private:. ROOT::Math::PxPyPzM4D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; LorentzVector & operator=(const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >& ); ------ assignment ------. Assignment operator from a lorentz vector of arbitrary type. SetXYZT(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar xx, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar yy, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar zz, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar tt). fCoordinates. SetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar a, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar b, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar c, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<Double32_t> >::Scalar d). const CoordSystem & Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a const reference to the coordinate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__LorentzVector_-p1PxPyPzM4D_Double32_t___.html:10328,Inherit,Inheritance,10328,root/html532/ROOT__Math__LorentzVector_-p1PxPyPzM4D_Double32_t___.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__LorentzVector_-p1PxPyPzM4D_Double32_t___.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Int_tTryLock(); virtual Int_tUnLock(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. pthread_mutex_tfMutexthe pthread mutex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPosixMutex(Bool_t recursive = kFALSE); Create a posix mutex lock. ~TPosixMutex(); TMutex dtor. Int_t Lock(); Lock the mutex. Int_t TryLock(); Try locking the mutex. Returns 0 if mutex can be locked. Int_t UnLock(void); Unlock the mutex. TPosixMutex(Bool_t recursive = kFALSE). » Author: Fons Rademakers 25/06/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id: TPosixMutex.h 29797 2009-08-17 14:35:51Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPosixMutex.html:5298,Inherit,Inheritance,5298,root/html532/TPosixMutex.html,https://root.cern,https://root.cern/root/html532/TPosixMutex.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. floatfBetaRelativistic beta factor.; Int_tfIndexIndex of the track (in some source array).; Int_tfLabelLabel of the track.; TEveVectorT<float>fPReconstructed momentum at start vertex.; Int_tfSignCharge of the track.; Int_tfStatusStatus as exported from reconstruction.; TEveVectorT<float>fVStart vertex from reconstruction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveRecTrackT<float>& ); { *((TParticle*)this) = p; return *this; }. Float_t Pt(); { return fP.Perp(); }. » Last changed: root/eve:$Id: TEveVSDStructs.h 38721 2011-04-04 13:37:12Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveRecTrackT_float_.html:5625,Inherit,Inheritance,5625,root/html532/TEveRecTrackT_float_.html,https://root.cern,https://root.cern/root/html532/TEveRecTrackT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetObjectName(const char* s); static voidTObject::SetObjectStat(Bool_t stat); voidSetOriginal(TObject* o); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidClearPrevious(); TTreeDrawArgsParser::EOutputTypeDefineType(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); Bool_tParseName(TString name); Bool_tParseOption(); Bool_tParseVarExp(); Bool_tSplitVariables(TString variables). Data Members; public:. enum EOutputType { kUNKNOWN; kEVENTLIST; kENTRYLIST; kPROFILE; kPROFILE2D; kGRAPH; kPOLYMARKER3D; kHISTOGRAM1D; kHISTOGRAM2D; kLISTOFGRAPHS; kLISTOFPOLYMARKERS3D; kHISTOGRAM3D; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. static Int_tfgMaxDimension= 4; static Int_tfgMaxParameters= 9. protected:. Bool_tfAddvalues should be added to an existing object; Int_tfDimensiondimension of the histogram/plot; Bool_tfDrawProfiletrue if the options contain :""prof""; Bool_tfEntryListif fill a TEntryList; TStringfExpcomplete variable expression; TStringfNamehistogram's/plot's name; Int_tfNoParametersif dimension",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeDrawArgsParser.html:5845,variab,variables,5845,root/html534/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html534/TTreeDrawArgsParser.html,2,['variab'],['variables']
Modifiability,":SetParamsSettingsvoid SetParamsSettings(unsigned int npar, const double *params, const double *vstep=nullptr)set the parameter settings from number of parameters and a vector of values and optionally step value...Definition FitConfig.cxx:135; ROOT::Fit::FitConfig::fSettingsstd::vector< ROOT::Fit::ParameterSettings > fSettingsvector with the parameter settingsDefinition FitConfig.h:265; ROOT::Fit::FitConfig::MinimizerNamestd::string MinimizerName() constreturn Minimizer full name (type / algorithm)Definition FitConfig.cxx:239; ROOT::Fit::FitConfig::fParabErrorsbool fParabErrorsget correct parabolic errors estimate (call Hesse after minimizing)Definition FitConfig.h:260; ROOT::Fit::FitConfig::fMinimizerOptsROOT::Math::MinimizerOptions fMinimizerOptsminimizer control parameters including name and algo typeDefinition FitConfig.h:268; ROOT::Fit::FitConfig::~FitConfig~FitConfig()Destructor.Definition FitConfig.cxx:52; ROOT::Fit::FitConfig::CreateMinimizerROOT::Math::Minimizer * CreateMinimizer()create a new minimizer according to chosen configurationDefinition FitConfig.cxx:173; ROOT::Fit::FitConfig::fMinosErrorsbool fMinosErrorsdo full error analysis using MinosDefinition FitConfig.h:261; ROOT::Fit::FitConfig::SetDefaultMinimizerstatic void SetDefaultMinimizer(const char *type, const char *algo=nullptr)static function to control default minimizer type and algorithmDefinition FitConfig.cxx:252; ROOT::Fit::FitConfig::SetFromFitResultvoid SetFromFitResult(const FitResult &rhs)Definition FitConfig.cxx:80; ROOT::Fit::FitConfig::MinimizerTypeconst std::string & MinimizerType() constreturn type of minimizer packageDefinition FitConfig.h:187; ROOT::Fit::FitConfig::fWeightCorrbool fWeightCorrapply correction to errors for weights fitsDefinition FitConfig.h:263; ROOT::Fit::FitConfig::fUpdateAfterFitbool fUpdateAfterFitupdate the configuration after a fit using the resultDefinition FitConfig.h:262; ROOT::Fit::FitConfig::operator=FitConfig & operator=(const FitConfig &rhs)Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8cxx_source.html:13310,config,configurationDefinition,13310,doc/master/FitConfig_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8cxx_source.html,1,['config'],['configurationDefinition']
Modifiability,":SetTextAlign(Short_t align = 11); virtual voidTAttText::SetTextAngle(Float_t tangle = 0)MENU ; virtual voidTAttText::SetTextAttributes()MENU ; virtual voidTAttText::SetTextColor(Color_t tcolor = 1); virtual voidTAttText::SetTextFont(Font_t tfont = 62); virtual voidTAttText::SetTextSize(Float_t tsize = 1); virtual voidTAttText::SetTextSizePixels(Int_t npixels); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TGLText(const TGLText&); TGLText&operator=(const TGLText&). Data Members; protected:. Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size. private:. Double_tfAngle11st angle.; Double_tfAngle22nd angle.; Double_tfAngle33rd angle.; FTFont*fGLTextFont; Double_tfXX position; Double_tfYY position; Double_tfZZ position. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLText(). TGLText(Double_t x, Double_t y, Double_t z, const char* text); TGLext normal constructor. ~TGLText(). void PaintGLText(Double_t x, Double_t y, Double_t z, const char* text); Draw text. void PaintBBox(const char* text). void BBox(const char* string, float& llx, float& lly, float& llz, float& urx, float& ury, float& urz); Calculate bounding-box for given string. void SetGLTextAngles(Double_t a1, Double_t a2, Double_t a3); Set the text rotation angles. void SetGLTextFont(Font_t fontnumber). TGLText(const TGLText& ). TGLText& operator=(const TGLText& ). FTFont* GetFont(); { return fGLTextFont; }. » Author: Olivier Couet 12/04/2007 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLText.h 21807 2008-01-22 15:46:23Z matevz $ » Last generated: 2011-11-03 20:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLText.html:2485,Inherit,Inheritance,2485,root/html532/TGLText.html,https://root.cern,https://root.cern/root/html532/TGLText.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >& events, Int_t maxCls); voidCalcSQRMats(const vector<TMVA::Event*,allocator<TMVA::Event*> >&, Int_t maxCls). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fDecorrMatrices! Decorrelation matrix [class0/class1/.../all classes]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableDecorrTransform( DataSetInfo& dsi ); constructor. ~VariableDecorrTransform(); destructor. void Initialize(); initialisation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the decorrelation matrix and the normalization. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; apply ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableDecorrTransform.html:8950,variab,variables,8950,root/html534/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableDecorrTransform.html,14,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,":StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Int_tRooPrintable::_nameLength; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TGraph*fBurnIn; Int_tfDimension; TGraph*fFirst; RooStats::MCMCInterval*fInterval; Color_tfLineColor; Int_tfLineWidth; TGraph*fNLLGraph; TH1*fNLLHist; TGraph*fParamGraph; RooArgSet*fParameters; TH1*fPosteriorHist; TH1*fPosteriorHistHistCopy; TH1*fPosteriorHistTFCopy; RooNDKeysPdf*fPosteriorKeysPdf; RooProduct*fPosteriorKeysProduct; Color_tfShadeColor; Bool_tfShowBurnIn; TGraph*fWalk; TH1*fWeightHist. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MCMCIntervalPlot(). MCMCIntervalPlot(MCMCInterval& interval). ~MCMCIntervalPlot(). void SetMCMCInterval(RooStats::MCMCInterval& interval). void Draw(const Option_t* options = __null). void DrawPosterior(const Option_t* options = __null). void* DrawPosteriorHist(const Option_t* options = __null, const char* title = __null, Bool_t scale = kTRUE). void* DrawPosteriorKeysPdf(const Option_t* options = __null). void DrawInterval(const Option_t* options = __null). void DrawShortestInterval(const Option_t* options = __null). void DrawKeysPdfInterval(const Option_t* options = __null). void DrawHistInterval(const Option_t* options = __null). void DrawTailFractionInterval(const Option_t* options = __null). void* DrawPosteriorKeysProduct(const Option_t* options = __null). void DrawChainScatter(RooRealVar& xVar, RooRealVar& yVar). void DrawParameterVsTime(RooRealVar& param). void DrawNLLVsTime(). void DrawNLLHist(const Option_t* options = __null). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__MCMCIntervalPlot.html:9773,Inherit,Inheritance,9773,root/html602/RooStats__MCMCIntervalPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__MCMCIntervalPlot.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<bool>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<bool>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaImpProxy_bool_.html:4375,Inherit,Inheritance,4375,root/html602/ROOT__TClaImpProxy_bool_.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaImpProxy_bool_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<bool>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<bool>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaImpProxy_bool_.html:4375,Inherit,Inheritance,4375,root/html604/ROOT__TClaImpProxy_bool_.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaImpProxy_bool_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<char>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<char>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaImpProxy_char_.html:4375,Inherit,Inheritance,4375,root/html602/ROOT__TClaImpProxy_char_.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaImpProxy_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<char>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<char>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaImpProxy_char_.html:4375,Inherit,Inheritance,4375,root/html604/ROOT__TClaImpProxy_char_.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaImpProxy_char_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<long>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<long>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaImpProxy_long_.html:4375,Inherit,Inheritance,4375,root/html602/ROOT__TClaImpProxy_long_.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaImpProxy_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaImpProxy<long>& ). TClaImpProxy & operator=(const ROOT::TClaImpProxy<long>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaImpProxy_long_.html:4375,Inherit,Inheritance,4375,root/html604/ROOT__TClaImpProxy_long_.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaImpProxy_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TClaImpProxy<float>&operator=(float); ROOT::TClaImpProxy<float>TClaImpProxy<float>(float). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(float ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TClaImpProxy_float_.html:4076,Inherit,Inheritance,4076,root/html534/ROOT__TClaImpProxy_float_.html,https://root.cern,https://root.cern/root/html534/ROOT__TClaImpProxy_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TClaImpProxy<short>&operator=(short); ROOT::TClaImpProxy<short>TClaImpProxy<short>(short). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(short ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TClaImpProxy_short_.html:4076,Inherit,Inheritance,4076,root/html534/ROOT__TClaImpProxy_short_.html,https://root.cern,https://root.cern/root/html534/ROOT__TClaImpProxy_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TFuncG)&TFormula::EvalPrimitive3; break;}; case kFDM : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive4; break;}; }; b.) ex. fOptimal = ::EvalPrimitive0 - if it return only variable, constant or parameter; = ::EvalParameter1 - if only one unary operation; = ::EvalPrimitive2 - if only one binary operation. Double_t EvalPrimitive(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive0(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive1(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive2(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive3(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalPrimitive4(const Double_t* x, const Double_t* params). Evaluate primitive formula. Double_t EvalParFast(const Double_t* x, const Double_t* params); Evaluate this formula*-*-*-*-*-*-; *-* =====================; -; *-* The current value of variables x,y,z,t is passed through the pointer x.; *-* The parameters used will be the ones in the array params if params is given; *-* otherwise parameters will be taken from the stored data members fParams. /*; ; */. -; -; -. Int_t PreCompile(). Pre compile function. void SetMaxima(Int_t maxop = 1000, Int_t maxpar = 1000, Int_t maxconst = 1000); static function to set the maximum value of 3 parameters; -maxop : maximum number of operations; -maxpar : maximum number of parameters; -maxconst : maximum number of constants; None of these parameters cannot be less than 10 (default is 1000); call this function to increase one or all maxima when processing; very complex formula, eg TFormula::SetMaxima(100000,1000,1000000);; If you process many functions with a small number of operations/parameters; you may gain some memory and performance by decreasing these values. Int_t * GetOper() const; { return fOper; }. Short_t GetAction(Int_t code",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:32048,variab,variables,32048,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,4,['variab'],['variables']
Modifiability,":TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*fEdgesList of edges in this TGraphStruct; GVC_s*fGVCGraphviz context; GVizAgraph_t*fGVGraphGraphviz graph; Double_tfMarginMargin around the graph (in dots); TList*fNodesList of nodes in this TGraphStruct. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphStruct(); Graph Structure default constructor. ~TGraphStruct(); Graph Structure default destructor. void AddEdge(TGraphEdge* edge); Add the edge ""edge"" in this TGraphStruct. TGraphEdge * AddEdge(TGraphNode* n1, TGraphNode* n2); Create an edge between n1 and n2 and put it in this graph. Two edges can connect the same nodes the same way, so there; is no need to check if an edge already exists. void AddNode(TGraphNode* node); Add the node ""node"" in this TGraphStruct. TGraphNode * AddNode(const char* name, const char* title = """"); Create the node ""name"" if it does not exist and add it to this TGraphStruct. void DumpAsDotFile(const char* filename); Dump this graph structure as a ""dot"" file. void Draw(Option_t* option = """"); Draw the graph. Int_t Layout(); Layout the graph into a GraphViz data structure. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void Streamer(TBu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphStruct.html:7726,Inherit,Inheritance,7726,root/html534/TGraphStruct.html,https://root.cern,https://root.cern/root/html534/TGraphStruct.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. map<TString,ClassRelInfo>_c2fmapList of contained classes; Bool_t_compiledOK! Flag indicating that classes compiled OK; map<TString,ClassFiles>_fmapList of contained files; RooWorkspace*_wspaceowning workspace. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t autoImportClass(TClass* tc, Bool_t doReplace = kFALSE); Import code of class 'tc' into the repository. If code is already in repository it is only imported; again if doReplace is false. The names and location of the source files is determined from the information; in TClass. If no location is found in the TClass information, the files are searched in the workspace; search path, defined by addClassDeclImportDir() and addClassImplImportDir() for declaration and implementation; files respectively. If files cannot be found, abort with error status, otherwise update the internal; class-to-file map and import the contents of the files, if they are not imported yet. void Streamer(TBuffer& b); Custom streamer for the workspace. Stream contents of workspace; and code repository. When reading, read code repository first; and compile missing classes before proceeding with streaming; of workspace contents to avoid errors. std::string listOf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooWorkspace__CodeRepo.html:6550,Inherit,Inheritance,6550,root/html532/RooWorkspace__CodeRepo.html,https://root.cern,https://root.cern/root/html532/RooWorkspace__CodeRepo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":TransformationHandler::GetMaxDouble_t GetMax(Int_t ivar, Int_t cls=-1) constDefinition TransformationHandler.cxx:993; TMVA::Types::GetMethodNameTString GetMethodName(Types::EMVA method) constDefinition Types.cxx:136; TMVA::Types::Instancestatic Types & Instance()The single instance of ""Types"" if existing already, or create it (Singleton)Definition Types.cxx:70; TMVA::Types::ESBTypeESBTypeDefinition Types.h:134; TMVA::Types::kBackground@ kBackgroundDefinition Types.h:136; TMVA::Types::EMVAEMVADefinition Types.h:76; TMVA::Types::EAnalysisTypeEAnalysisTypeDefinition Types.h:126; TMVA::Types::kMulticlass@ kMulticlassDefinition Types.h:129; TMVA::Types::kRegression@ kRegressionDefinition Types.h:128; TMVA::Types::ETreeTypeETreeTypeDefinition Types.h:142; TMVA::Types::kTraining@ kTrainingDefinition Types.h:143; TMVA::Types::kTesting@ kTestingDefinition Types.h:144; TMVA::VariableInfo::GetLabelconst TString & GetLabel() constDefinition VariableInfo.h:59; TMVA::VariableInfo::GetExpressionconst TString & GetExpression() constDefinition VariableInfo.h:57; TMVA::VariableInfo::GetInternalNameconst TString & GetInternalName() constDefinition VariableInfo.h:58; TMatrixT< Double_t >; TMultiGraphA TMultiGraph is a collection of TGraph (or derived) objects.Definition TMultiGraph.h:34; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TSplineBase class for spline implementation containing the Draw/Paint methods.Definition TSpline.h:31; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; bool; double; int; unsigned int; xDouble_t x[n]Definition legend1.C:17; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; v@ vDefinition rootcling_impl.cxx:3699; Types.h. tmvatmvaincTMVAMethodBase.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:70598,variab,variable,70598,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['variab'],['variable']
Modifiability,":Types::EVariableTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event*const ev, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableIdentityTransform&operator=(const TMVA::VariableIdentityTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:3613,Variab,VariableTransformBase,3613,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableTransformBase']
Modifiability,":VariableIdentityTransformVariableIdentityTransform(TMVA::DataSetInfo& dsi); TMVA::VariableIdentityTransformVariableIdentityTransform(const TMVA::VariableIdentityTransform&); const vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream&) const. protected:. voidTMVA::VariableTransformBase::CalcNorm(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tTMVA::VariableTransformBase::GetNClasses() const; UInt_tTMVA::VariableTransformBase::GetNSpectators() const; UInt_tTMVA::VariableTransformBase::GetNTargets() const; UInt_tTMVA::VariableTransformBase::GetNVariables() const; voidTObject::MakeZombie(); voidTMVA::VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:7354,Variab,VariableTransformBase,7354,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,15,['Variab'],"['VariableInfo', 'VariableTransformBase', 'Variables']"
Modifiability,":VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableIdentityTransform( DataSetInfo& dsi ); constructor. void Initialize(); nothing to initialize. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); the identity does not need to be prepared, only calculate the normalization. void AttachXMLTo(void* parent); identity transformation to write to XML; Log() << kFATAL << ""Please implement writing of transformation as XML"" << Endl;. void ReadFromXML(void* trfnode); reding the identity transformation from XML. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; ide",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableIdentityTransform.html:8769,variab,variables,8769,root/html530/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableIdentityTransform.html,30,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,":VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableRearrangeTransform( DataSetInfo& dsi ); constructor. ~VariableRearrangeTransform(). void Initialize(); initialization of the rearrangement transformation; (nothing to do). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation --> (nothing to do). const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableRearrangeTransform.html:8719,variab,variables,8719,root/html530/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableRearrangeTransform.html,30,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,":VecOps::SmallVectorBase; size_t capacity () const noexcept;  ; bool empty () const;  ; void set_size (size_t N);  Set the array size to N, which the current array must have enough capacity for. ;  ; size_t size () const;  . Protected Member Functions;  SmallVectorTemplateBase (size_t Size);  ; void grow (size_t MinSize=0);  Grow the allocated memory (without initializing new elements), doubling the size of the allocated memory. ;  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >;  SmallVectorTemplateCommon (size_t Size);  ; void grow_pod (size_t MinSize, size_t TSize);  ; bool isSmall () const;  Return true if this is a smallvector which has not had dynamic memory allocated for it. ;  ; void resetToSmall ();  Put this vector in a state of being small. ;  ;  Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase;  SmallVectorBase ()=delete;  ;  SmallVectorBase (void *FirstEl, size_t TotalCapacity);  ; void grow_pod (void *FirstEl, size_t MinSize, size_t TSize);  This is an implementation of the grow() method which only works on POD-like data types and is out of line to reduce code duplication. ;  ; bool Owns () const;  If false, the RVec is in ""memory adoption"" mode, i.e. it is acting as a view on a memory buffer it does not own. ;  . Static Protected Member Functions; static void destroy_range (T *S, T *E);  ; template<typename It1 , typename It2 > ; static void uninitialized_copy (It1 I, It1 E, It2 Dest);  Copy the range [I, E) onto the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ; template<typename It1 , typename It2 > ; static void uninitialized_move (It1 I, It1 E, It2 Dest);  Move the range [I, E) into the uninitialized memory starting with ""Dest"", constructing elements as needed. ;  ;  Static Protected Member Functions inherited from ROOT::Internal::VecOps::SmallVectorBase; static void report_at_maximum_capacity ();  Report that this vector is alread",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html:3279,inherit,inherited,3279,doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateBase.html,1,['inherit'],['inherited']
Modifiability,":VirtualIntegratorMultiDim::VirtualIntegratorMultiDim(); ROOT::Math::VirtualIntegratorMultiDimROOT::Math::VirtualIntegratorMultiDim::VirtualIntegratorMultiDim(const ROOT::Math::VirtualIntegratorMultiDim&). protected:. doubleDoIntegral(const double* xmin, const double* xmax, bool absVal = false). Data Members; private:. doublefAbsTolabsolute tolerance; unsigned intfDimdimentionality of integrand; doublefErrorintegration error; const ROOT::Math::IMultiGenFunction*fFunpointer to integrand function; unsigned intfMaxPtsmaximum number of function evaluation requested; unsigned intfMinPtsminimum number of function evaluation requested; intfNEvalnumber of function evaluation; doublefRelErrorRelative error; doublefRelTolrelative tolerance; doublefResultlast integration result; unsigned intfSizemax size of working array (explode with dimension); intfStatusstatus of algorithm (error if not zero). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AdaptiveIntegratorMultiDim(double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxpts = 100000, unsigned int size = 0). construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than >= (2N + 3) * (1 + MAXPTS/(2**N + 2N(N + 1) + 1))/2). For smaller value passed, the; minimum allowed will be used. AdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxcall = 100000, unsigned int size = 0). Construct with a reference to the integrand function and given optionally; tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working arr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html:5450,Adapt,AdaptiveIntegratorMultiDim,5450,root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,2,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,":Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tfModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLayoutHints& operator=(const TGLayoutHints&). TGFrameElement& operator=(const TGFrameElement&). TGLayoutManager(); {}. void Layout(). TGDimension GetDefaultSize() const. void SetDefaultWidth(UInt_t ); {}. void SetDefaultHeight(UInt_t ); {}. Bool_t IsModified() const; { return fModified; }. void SetModified(Bool_t flag = kTRUE); { fModified = flag; }. TGLayoutManager(gvl); { }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:54; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLayoutManager.html:7068,Inherit,Inheritance,7068,root/html604/TGLayoutManager.html,https://root.cern,https://root.cern/root/html604/TGLayoutManager.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tfModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLayoutHints& operator=(const TGLayoutHints&). TGFrameElement& operator=(const TGFrameElement&). TGLayoutManager(); {}. void Layout(). TGDimension GetDefaultSize() const. void SetDefaultWidth(UInt_t ); {}. void SetDefaultHeight(UInt_t ); {}. Bool_t IsModified() const; { return fModified; }. void SetModified(Bool_t flag = kTRUE); { fModified = flag; }. TGLayoutManager(gvl); { }. » Author: Fons Rademakers 02/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:55; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLayoutManager.html:7068,Inherit,Inheritance,7068,root/html602/TGLayoutManager.html,https://root.cern,https://root.cern/root/html602/TGLayoutManager.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooLinkedList_altRangesOptional alternative ranges; Int_tRooSharedProperties::_inSharedList! Is in shared list; Int_tRooSharedProperties::_refCount! Use count; TUUIDRooSharedProperties::_uuidUnique object ID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategorySharedProperties(); Constructor. RooCategorySharedProperties(const char* uuidstr); Constructor with unique-id string. RooCategorySharedProperties(const RooCategorySharedProperties& other). ~RooCategorySharedProperties(); Destructor. RooSharedProperties* clone(); { return new RooCategorySharedProperties(*this) ; }. » Last changed: Tue Jun 30 14:31:59 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCategorySharedProperties.html:6645,Inherit,Inheritance,6645,root/html602/RooCategorySharedProperties.html,https://root.cern,https://root.cern/root/html602/RooCategorySharedProperties.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TGridJobStatus::EGridJobStatuskABORTED; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TGridJobStatus::EGridJobStatuskDONE; static TGridJobStatus::EGridJobStatuskFAIL; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TGridJobStatus::EGridJobStatuskRUNNING; static TObject::(anonymous)TObject::kSingleKey; static TGridJobStatus::EGridJobStatuskUNKNOWN; static TGridJobStatus::EGridJobStatuskWAITING; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGridJobStatus(); { }. virtual ~TGridJobStatus(); { }. EGridJobStatus GetStatus() const; These functions reduces the possible job states to the subset given above; in EGridJobStatus, for detailed status information query the specific; implementation. » Author: Jan Fiete Grosse-Oetringhaus 06/10/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-02 13:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJobStatus.html:6465,Inherit,Inheritance,6465,root/html602/TGridJobStatus.html,https://root.cern,https://root.cern/root/html602/TGridJobStatus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TGridJobStatus::EGridJobStatuskABORTED; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TGridJobStatus::EGridJobStatuskDONE; static TGridJobStatus::EGridJobStatuskFAIL; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TGridJobStatus::EGridJobStatuskRUNNING; static TObject::(anonymous)TObject::kSingleKey; static TGridJobStatus::EGridJobStatuskUNKNOWN; static TGridJobStatus::EGridJobStatuskWAITING; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGridJobStatus(); { }. virtual ~TGridJobStatus(); { }. EGridJobStatus GetStatus() const; These functions reduces the possible job states to the subset given above; in EGridJobStatus, for detailed status information query the specific; implementation. » Author: Jan Fiete Grosse-Oetringhaus 06/10/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-02 16:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGridJobStatus.html:6465,Inherit,Inheritance,6465,root/html604/TGridJobStatus.html,https://root.cern,https://root.cern/root/html604/TGridJobStatus.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. RooCatType_cat; Double_t_thresh. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooThreshEntry(Double_t thresh, const RooCatType& cat); Constructor with threshold value and associated category value. RooThreshEntry(const RooThreshEntry& other); Copy constructor. Int_t Compare(const TObject* ) const; Implement TObject Compare() operator to facilitate sorting of; RooThreshEntry object in ROOT collection. Only comparison; to other RooThreshEntry objects is supported. inline RooThreshEntry(); {}. virtual ~RooThreshEntry(); {}. TObject* Clone(const char* ) const; { return new RooThreshEntry(*this); }. Bool_t IsSortable() const; { return kTRUE ; }. Double_t thresh() const; { return _thresh ; }. const RooCatType& cat() const; { return _cat ; }. » Last changed: Tue Jun 30 14:37:44 2015 » Last generated: 2015-06-30 14:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooThreshEntry.html:5776,Inherit,Inheritance,5776,root/html602/RooThreshEntry.html,https://root.cern,https://root.cern/root/html602/RooThreshEntry.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. float*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<float>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArrayT_float_.html:6992,Inherit,Inheritance,6992,root/html602/TNDArrayT_float_.html,https://root.cern,https://root.cern/root/html602/TNDArrayT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. float*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<float>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNDArrayT_float_.html:6992,Inherit,Inheritance,6992,root/html604/TNDArrayT_float_.html,https://root.cern,https://root.cern/root/html604/TNDArrayT_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. short*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<short>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArrayT_short_.html:6992,Inherit,Inheritance,6992,root/html602/TNDArrayT_short_.html,https://root.cern,https://root.cern/root/html602/TNDArrayT_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. short*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<short>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNDArrayT_short_.html:6992,Inherit,Inheritance,6992,root/html604/TNDArrayT_short_.html,https://root.cern,https://root.cern/root/html604/TNDArrayT_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TLeaf&TLeaf::operator=(const TLeaf&). Data Members; public:. enum TLeaf::[unnamed] { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*TLeaf::fBranch! Pointer to supporting branch (we do not own the branch); Bool_tTLeaf::fIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tTLeaf::fIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*TLeaf::fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tTLeaf::fLenNumber of fixed length elements; Int_tTLeaf::fLenTypeNumber of bytes for this data type; Float_tfMaximumMaximum value if leaf range is specified; Float_tfMinimumMinimum value if leaf range is specified; TStringTNamed::fNameobject identifier; Int_tTLeaf::fNdata! Number of elements in fAddress data buffer; Int_tTLeaf::fOffsetOffset in ClonesArray object (if one); Float_t**fPointer!Addresss of pointer to data buffer!; TStringTNamed::fTitleobject title; Float_t*fValue!Pointer to data buffer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafF(); Default constructor for LeafF*-*-*-*-*-*-*-*-; *-* ============================. TLeafF(TBranch* parent, const char* name, const char* type); Create a LeafF*-*-; *-* ==============; -. ~TLeafF(); Default destructor for a LeafF*-*-*-*-*-*-; *-* ===============================. void Export(TClonesArray* list, Int_t n); -*Export element from local leaf buffer to ClonesArray; *-* ====================================================. void FillBasket(TBuffer& b); -*-*-*-*Pack leaf elements i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLeafF.html:7004,variab,variable,7004,root/html528/TLeafF.html,https://root.cern,https://root.cern/root/html528/TLeafF.html,6,['variab'],['variable']
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. TStringfCommandCommand to be executed; Int_tfSubTabTab element number; Int_tfTabTab number; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBrowserPlugin(const char* name, const char* cmd = """", Int_t tab = 1, Int_t sub = -1); { }. virtual ~TBrowserPlugin(); {}. void SetTab(Int_t tab); { fTab = tab; }. void SetSubTab(Int_t sub); { fSubTab = sub; }. void SetCommand(const char* cmd); { fCommand = cmd; }. TRootBrowser& operator=(const TBrowserPlugin& ). » Author: Bertrand Bellenot 26/09/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: 7cf312b9bc9940a03d7c0cee95eea0085dc9898c $ » Last generated: 2015-06-30 14:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBrowserPlugin.html:7478,Inherit,Inheritance,7478,root/html602/TBrowserPlugin.html,https://root.cern,https://root.cern/root/html602/TBrowserPlugin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. TStringfCommandCommand to be executed; Int_tfSubTabTab element number; Int_tfTabTab number; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBrowserPlugin(const char* name, const char* cmd = """", Int_t tab = 1, Int_t sub = -1); { }. virtual ~TBrowserPlugin(); {}. void SetTab(Int_t tab); { fTab = tab; }. void SetSubTab(Int_t sub); { fSubTab = sub; }. void SetCommand(const char* cmd); { fCommand = cmd; }. TRootBrowser& operator=(const TBrowserPlugin& ). » Author: Bertrand Bellenot 26/09/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: 7cf312b9bc9940a03d7c0cee95eea0085dc9898c $ » Last generated: 2015-09-08 17:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TBrowserPlugin.html:7478,Inherit,Inheritance,7478,root/html604/TBrowserPlugin.html,https://root.cern,https://root.cern/root/html604/TBrowserPlugin.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TXMLNode(const TXMLNode&); TXMLNode&operator=(const TXMLNode&). Data Members; public:. enum EXMLElementType { kXMLElementNode; kXMLAttributeNode; kXMLTextNode; kXMLCommentNode; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TList*fAttrListList of Attributes; TXMLNode*fChildrenChildren node; TXMLNode*fNextNodeNext sibling node; TXMLNode*fParentParent node; TXMLNode*fPreviousNodePrevious sibling node; _xmlNode*fXMLNodelibxml node. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXMLNode(_xmlNode* node, TXMLNode* parent = 0, TXMLNode* previous = 0); TXMLNode constructor. ~TXMLNode(); Destructor. It deletes the node's child, next sibling and the; attribute list. const char * GetNodeName() const; Returns the node's name. TXMLNode * GetChildren(); Returns the node's child if any, returns 0 if no child. TXMLNode * GetParent() const; Returns the node's parent if any, returns 0 if no parent. const char * GetContent() const; Returns the content if any, or 0. TList * GetAttributes(); Returns a list of node's attribute if any,; returns 0 if no attribute. TXMLNode * GetNextNode(); Returns the next sibling XMLNode in the DOM tree, if any; return 0 if no next node. TXMLNode * GetPreviousNode() const; Returns the previous sibling XMLNode in the DOM tree, if any; return 0 if no previous node. const char * GetText() const; Returns the content of a Text node if node is a TextNode, 0 otherwise. Bool_t HasChildren() const; Retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLNode.html:6226,Inherit,Inheritance,6226,root/html532/TXMLNode.html,https://root.cern,https://root.cern/root/html532/TXMLNode.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":], etc. are not supported,; only [a-zA-Z], [^ntf] and so on. Function Members (Methods); public:. TRegexp(const TString& re); TRegexp(const TRegexp& re); TRegexp(const char* re, Bool_t wildcard = kFALSE); virtual~TRegexp(); static TClass*Class(); Ssiz_tIndex(const TString& str, Ssiz_t* len, Ssiz_t start = 0) const; virtual TClass*IsA() const; TRegexp&operator=(const TRegexp& re); TRegexp&operator=(const TString& re); TRegexp&operator=(const char* re); virtual voidShowMembers(TMemberInspector&); TRegexp::EStatValStatus(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. voidCopyPattern(const TRegexp& re); voidGenPattern(const char* re); const char*MakeWildcard(const char* re). Data Members; public:. enum EStatVal { kOK; kIllegal; kNomem; kToolong; };. private:. unsigned short*fPatternCompiled pattern; TRegexp::EStatValfStatStatus; static const unsigned intfgMaxpatMax length of compiled pattern. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRegexp(const char* re, Bool_t wildcard = kFALSE); Create a regular expression from the input string. If wildcard is; true then the input string will first be interpreted as a wildcard; expression by MakeWildcard(), and the result then interpreted as a; regular expression. TRegexp(const TString& re); Create a regular expression from a TString. TRegexp(const TRegexp& re); Copy ctor. ~TRegexp(); Destructor. TRegexp& operator=(const TRegexp& re); Assignment operator. TRegexp& operator=(const char* re); Assignment operator taking a char* and assigning it to a regexp. TRegexp& operator=(const TString& re); Assignment operator taking a TString. void GenPattern(const char* re); Generate the regular expression pattern. void CopyPattern(const TRegexp& re); Copy the regular expression pattern. const char * MakeWildcard(const char* re); This routine transforms a wildcarding regular expression into; a general regular expression used for pattern ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRegexp.html:1749,Inherit,Inheritance,1749,root/html534/TRegexp.html,https://root.cern,https://root.cern/root/html534/TRegexp.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,":_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction1Binding_double_int_.html:32193,config,configuration,32193,root/html526/RooCFunction1Binding_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction1Binding_double_int_.html,2,['config'],['configuration']
Modifiability,":_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction1Binding_double_double_.html:32981,config,configuration,32981,root/html530/RooCFunction1Binding_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction1Binding_double_double_.html,1,['config'],['configuration']
Modifiability,":_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxyRooAbsHiddenReal::_stateProxy to hiding state category; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; RooRealProxy_value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooUnblindOffset.html:33548,config,configuration,33548,root/html532/RooUnblindOffset.html,https://root.cern,https://root.cern/root/html532/RooUnblindOffset.html,4,['config'],['configuration']
Modifiability,":_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,bool>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3Binding_double_double_double_bool_.html:33137,config,configuration,33137,root/html530/RooCFunction3Binding_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3Binding_double_double_double_bool_.html,1,['config'],['configuration']
Modifiability,":_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction3Binding_double_double_int_int_.html:33476,config,configuration,33476,root/html532/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html532/RooCFunction3Binding_double_double_int_int_.html,1,['config'],['configuration']
Modifiability,":_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxyc; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Heaviside(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _c). Heaviside(const RooStats::Heaviside& other, const char* name =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__Heaviside.html:36343,config,configuration,36343,root/html602/RooStats__Heaviside.html,https://root.cern,https://root.cern/root/html602/RooStats__Heaviside.html,4,['config'],['configuration']
Modifiability,":_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TVectorD*_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooAbsReal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Roo1DMomentMorphFunction.html:37013,config,configuration,37013,root/html602/Roo1DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html602/Roo1DMomentMorphFunction.html,4,['config'],['configuration']
Modifiability,":_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooNumRunningInt::funcProxy to functions whose running integral is calculated; RooRealProxyRooNumRunningInt::xIntergrated observable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumCdf(const char* name, const char* title, RooAbsPdf& _pdf, RooRealVar& _x, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumCdf.html:38082,config,configuration,38082,root/html602/RooNumCdf.html,https://root.cern,https://root.cern/root/html602/RooNumCdf.html,4,['config'],['configuration']
