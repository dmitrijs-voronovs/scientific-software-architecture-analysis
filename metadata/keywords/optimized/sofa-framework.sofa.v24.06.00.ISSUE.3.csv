quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,This PR fix an issue with sofa-launcher. When we are using sofa-launcher the scene we want to execute is copied in the /tmp directory. ; But because we weren't closing the current file it wasn't saved and so wasn't executed. . The fix close it.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/592:345,message,message,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/592,1,['message'],['message']
Integrability,This PR fix an issue with the BoxROI component. There was a test in the constructor of BoxROI that created an unwanted behavior.; This test was moved in reinit(); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/627:262,message,message,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/627,1,['message'],['message']
Integrability,"This PR fix an issue with the WriteState component. When we are using WriteState, we indicate as an argument the period with which we want to save the states. The states will be then saved in a file when a modulo of the period is reached.; But I have observed that there is always a one step offset between reaching the time to save and the actual saving. So I naively add one dt to the time WriteState is working with. . If there is an other way to resolve this issue without hard-coding in WriteState like I have done, I will be happy implement it . Thanks in advance; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/625:670,message,message,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/625,1,['message'],['message']
Integrability,"This PR fix the opengl performance issue reported in #https://github.com/sofa-framework/sofa/issues/1070. The fix is in OglModel.cpp/OglModel.h and is very simple, when the positions and normals array are containg double precision numbers they are converted into single precision one before sending the data to OpenGL. I'm sure we can optimize further the conversion loop...but I have not time for that (volunteer needed). . Because the code in OglModel was hard to read because of the #ifdef GLEW all around I first cleaned the whole SofaOpenglVisual code, by removing the #ifdef. I also updated the call to function with name *ARB because they are now part of any baseline opengl implementation since nearly a decade. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069:821,message,message,821,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069,1,['message'],['message']
Integrability,This PR fixes ShewchukPCGLinearSolver member `preconditioners` initialization.; Should fix the failing scene test `FEMBAR-PCGLinearSolver.scn`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/737:243,message,message,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/737,1,['message'],['message']
Integrability,"This PR fixes a requirement of https://github.com/conda-forge/staged-recipes/pull/23085 for the SOFA conda package on conda-forge.; This add a find package to the cmakelists to avoid the cmake fetch of cxxopts sources if a cxxopts is already available and found. This is a simplified version of a find or fetch mechanism which looks enough here, and does not require cmake >= 3.24 (which embedds a more sophisticated find or fetch within an improved FetchContent set of macros).; The PR also adds a cmake SOFA option, which may be re-used if other dependencies will be managed by a similar mechanism, to allow or disable the fetch content of cmake (default behavior is to allow fetching to keep compatibility). ; This is required by the conda-forge PR to disable the fetching of source. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4273:548,depend,dependencies,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4273,1,['depend'],['dependencies']
Integrability,This PR fixes errors like `[FileRepository] File icons/back.png NOT FOUND` reported recently. These errors were caused by the fact that SofaGuiQt and runSofa had no idea were to find their resources (if not installed).; Adding and configuring some .ini files will fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/758:373,message,message,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/758,1,['message'],['message']
Integrability,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2170:482,depend,dependency,482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170,1,['depend'],['dependency']
Integrability,"This PR fixes exception handling in Python bindings. Mostly, the PR replaces the incorrect:; ```c++; PyErr_BadArgument();; Py_RETURN_NONE;; ```; with the correct:; ```c++; PyErr_BadArgument();; return NULL;; ```. As the [Python API](https://docs.python.org/2/c-api/exceptions.html) documentation says: . > [Python exception handling] works somewhat like the Unix errno variable: there is a global indicator (per thread) of the last error that occurred. Most functions don’t clear this on success, but will set it to indicate the cause of the error on failure.; > ; > **Most functions also return an error indicator, usually NULL if they are supposed to return a pointer, or -1 if they return an integer (exception: the PyArg_*() functions return 1 for success and 0 for failure).**. As it happened, any error triggered within the python bindings would go unnoticed until someone else would check the error flag using `PyErr_Occurred`, possibly during a python code error or by some other C extension (in my case, Numpy). . Hopefully the behaviour is now correct. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] the content of the PR is clear and that a future PR from @maxime-tournier may follow the @matthieu-nesme suggestion. ; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156:1106,message,message,1106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156,1,['message'],['message']
Integrability,This PR fixes install finding of Boost::program_options dependency added for the new ArgumentParser API in #513 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/618:56,depend,dependency,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/618,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"This PR fixes missing default ""plugins"" (now modules) after https://github.com/sofa-framework/sofa/pull/732. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/753:208,message,message,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/753,1,['message'],['message']
Integrability,"This PR fixes quaternion integration so that a 1 rad.s^{-1} angular velocity integrated during 1 second results in a 1 rad angle change, as one generally expects. The original quaternion integration scheme is a [gnomonic projection](https://en.wikipedia.org/wiki/Gnomonic_projection) on the 3-sphere (or equivalently, a variant of the Cayley transform) that prevents the maximum angular change to exceed *pi* rad during one time-step, which is problematic as angular velocities get larger. Also, the angular velocity does not integrate to the corresponding rotation angle using this chart, as demonstrated in the failing test. This PR implements the [exponential map](https://en.wikipedia.org/wiki/Exponential_map_(Riemannian_geometry)) for unit quaternion integration given spatial angular velocity, which fixes both issues. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed ; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/172:25,integrat,integration,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/172,6,"['integrat', 'message']","['integrate', 'integrated', 'integration', 'message']"
Integrability,This PR fixes the compilation of CGAL plugin with CGAL version greater than 4.10. It also enables back the CylinderMesh component for which I'm not sure why it was removed in the first place as it seems to work perfectly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/783:321,message,message,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/783,1,['message'],['message']
Integrability,This PR follows #1272 to fix a link error on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1282:153,message,message,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1282,1,['message'],['message']
Integrability,"This PR follows @marques-bruno work on https://github.com/sofa-framework/sofa/pull/909. - add INCLUDE_SOURCE_DIR parameter to sofa_generate_package; - rename INCLUDE_ROOT_DIR to INCLUDE_INSTALL_DIR (avoid confusion with INCLUDE_SOURCE_DIR). The idea is to permit this:; ```; sofa_generate_package(; NAME SofaSparseSolver ; VERSION ${PROJECT_VERSION} ; TARGETS SofaSparseSolver; INCLUDE_SOURCE_DIR ""src/SofaSparseSolver""; INCLUDE_INSTALL_DIR ""SofaSparseSolver/SofaSparseSolver""; ); ```; to obtain for example an install tree like this; ```; install; include <-- include_directories here exposes ALL module headers; SofaBaseTopology; header.h; SofaSparseSolver <-- include_directories here exposes ONLY SofaSparseSolver headers; SofaSparseSolver; header.h; SofaValidation; header.h; ...; ```; which is needed if we want to cleanly separate SOFA include directories. In a future PR I'd like to rework all SOFA install tree based on this INCLUDE_SOURCE_DIR + INCLUDE_INSTALL_DIR mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/951:1085,message,message,1085,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/951,1,['message'],['message']
Integrability,"This PR gives the ability to exchange images between different threads in the MultiThreading plugin. It would be especially usefull for multithreading a camera grabber component and other components (for instance computer vision algorithms). In more details: ; - It consists in adding, in the DataExchange component, exchanges of image data types (ImageUC, ImageUS, ImageF). It involves a depedency with the image plugin, handled in the CMakeLists through a preprocessor directive (WITH_IMAGE) defined in config.h.in.; - A simple example passing an image loaded from an ImageContainer component (thread 1) to an ImageViewer component (thread 2), to display the image in the GUI, is added.; - An issue with OpenGL in the draw() function in the Kinect component in the image plugin has also been fixed, by using the SOFA_NO_OPENGL directive (in the CMakeLists and in Kinect.h). Indeed, with the lib FREENECT detected, the OpenGL functions in draw() may not be compiled given the OpenGL support of SOFA. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:1102,message,message,1102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,1,['message'],['message']
Integrability,"This PR hopes to solve the bug where radius option can't be used with AttachConstraint. Provided scenario will crash SOFA.; [attach_radius.txt](https://github.com/sofa-framework/sofa/files/1973782/attach_radius.txt) (Github don't let me give `*.scn` ...). This is due to a call done to early. First commit solve this specific issue.; However, if you execute the previous scenario with just the first commit, it will still not work correctly : both index 0 points will be attached to each other, and that's it. The reason is that the mechanical objects are not correctly initialized when AttachConstraint `init()` is called. Commit 2 is a hack to show how it behave if we delay the initialisation. This does not aim to stay (and likely breaks working scenarios). Is there a way to delay said initialisation ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/650:908,message,message,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/650,1,['message'],['message']
Integrability,"This PR improves the `sofa_add_external_*` macros used for example by SofaHighOrder. It changes `sofa_add_external_subdirectory` behavior: instead of directly fetching/cloning the repository, it creates a CMake option which, if checked, will do the fetch (and be automatically reset to OFF aftewards). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/759:401,message,message,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/759,1,['message'],['message']
Integrability,"This PR improves the message about missing required plugins for python users. Before it was printing lines to cut and paste in the scene (which is really nice!), but only for xml users. Now I propose to check the scene's extension and adapt the message. Here's an example for python:. ![image](https://user-images.githubusercontent.com/12150715/173034896-f7547d53-6a99-475a-892f-b481709ed0c4.png); . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033:21,message,message,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033,2,['message'],['message']
Integrability,This PR include PR #1508 and replace last use of Qwt in QGraphDataWidget by qtCharts; Remove all cmake config of Qwt and remove the internal library. should fix #1496 or make things worst!. ![graph_cg](https://user-images.githubusercontent.com/21199245/94787278-63f5ca00-03d2-11eb-8fca-80bfcd40ba29.JPG); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1512:404,message,message,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1512,1,['message'],['message']
Integrability,"This PR integrate PR #2114 and will be merged inside branch inf_topologyChanges_POC. Remove several header includes not needed. Also remove all TopologyDataHandler in constraints as they were only redefining a Data resize operation. This is already done directly inside the TopologyData. ; The destroyFunction should be only overridden if a complex behavior is needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2162:8,integrat,integrate,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2162,1,['integrat'],['integrate']
Integrability,"This PR introduces CMake configurations for SOFA activating and deactivating sub-parts of the project given the SOFA_CONFIGURATION string : CORE/STANDARD/FULL. . The configuration can be forced using `SOFA_FORCE_CONFIGURATION` otherwise the configuration can still be tweaked using CMake option command line. . To apply those configuration I've made two main modification depending on what needed to be activated :; - For options : I've added a CMake macro `sofa_configuration_dependent_option` that allows to specify the scope of the option and force it when needed.; - For plugins : I've modified the sofa_add_subdirectory adding the possibility to specify a `CONFIGURATION` type enabling or disabling the plugin by default depending on the config type and forcing the activation when needed. These configurations have been defined regarding the last STC discussion. . PS: This PR also enables to build Sofa.GUI without Qt. ; PPS: This PR also deactivates the legacy headers by default now; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:372,depend,depending,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,2,['depend'],['depending']
Integrability,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4268:542,message,message,542,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268,1,['message'],['message']
Integrability,"This PR introduces nice python wrappers for mappings. . It enables easy definition of pure python mappings similar to c++ with little overhead, since all the Eigen sparse matrices are aliased as SciPy sparse matrices (yay!). Here is a small taste:. ``` python; class DistanceMapping(easy.Mapping):; '''a hooke-like distance mapping: . f(p1, p2) = norm(p2 - p1) - rest_length; '''. def __init__(self, node, **kwargs):; easy.Mapping.__init__(self, node, **kwargs). self.rest_length = 0. def apply(self, out, at):. p1 = at[0][0]; p2 = at[1][0]. delta = p2 - p1; norm = math.sqrt(delta.dot(delta)). out[0][0] = norm - self.rest_length. def jacobian(self, js, at):. p1 = at[0][0]; p2 = at[1][0]. delta = p2 - p1; norm = math.sqrt(delta.dot(delta)). if norm > 1e-14:; u = delta / norm; js[0][0] = -u; js[1][0] = u; else:; # warning; js[0][0] = np.zeros(3); js[1][0] = np.zeros(3). def geometric_stiffness(self, gs, at, force):. p1 = at[0][0]; p2 = at[1][0]. delta = p2 - p1. norm = math.sqrt(delta.dot(delta)); if norm > 1e-14:. u = delta / norm; f = force[0][0]. block = (np.identity(3) - np.outer(u, u)) * (f / norm); gs[:3, :3] = block; gs[3:, 3:] = block. gs[:3, 3:] = -block; gs[3:, :3] = -block. else:; gs[:, :] = 0; ```. See `Compliant/examples/easy.py` for a complete example. For now the code lives in `Compliant` for other people to try out, but could migrate to `SofaPython` if needed. . This PR also ditches a previous but less elegant/powerful attempt at the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/46:31,wrap,wrappers,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/46,1,['wrap'],['wrappers']
Integrability,This PR is Based on #1004 . CHANGELOG:; - Cosmetic cleaning in RigidRigidMapping & replace serr with msg_error. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1005:213,message,message,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1005,1,['message'],['message']
Integrability,"This PR is a ""all-in-one"" fix that correct all the failing test taggued ""OpenIssue"". ; To fix the issues some changes have been done but it shouldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:535,message,message,535,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,3,['message'],"['message', 'messages']"
Integrability,This PR is a cherry pick of the changes proposed in PR #869 . Here is the initial description of the PR by @fspadoni . ---------. When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1447:1181,message,message,1181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1447,1,['message'],['message']
Integrability,"This PR is a clean before introducing more work on the GeomagicDriver and a GeomagicEmulator. - Move all code related to model display from GeomagicDriver to an embedded class GeomagicVisualModel. This last class is not a component but it creates the node hierarchy to display the device.; - Various minor changes in Driver like adding a singleLink to the Forcefeedback. If needed this work would allow to use GeomagicDriver without linking to SofaOpenglVisual nor SofaLoader. (With a few changes in the cmakelists and in code). ![geomagic_demo](https://user-images.githubusercontent.com/21199245/81161088-4e978380-8f8b-11ea-9f59-bad683bc014d.JPG). - Even if this display is only for debug, my eyes were bleeding too much to let that.; Update the mesh to have cleaner normals/vertices. New mesh display:. ![Geomagic-RigidCubes_00000003](https://user-images.githubusercontent.com/21199245/81160922-06786100-8f8b-11ea-91f8-59fd904c8c2f.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1366:1039,message,message,1039,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1366,1,['message'],['message']
Integrability,This PR is a follow up #548 ; My last batch of changes to fix the CI. Please review :) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/565:188,message,message,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/565,1,['message'],['message']
Integrability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to Issue https://github.com/sofa-framework/sofa/issues/94). The reason is that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure. In case I'm wrong please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. Concretely by this PR:; - The class TestMessageHandler is removed; - Handler needed by ExpectMessage & MessageAsTestFailure are now installed by default for tests ( Issue https://github.com/sofa-framework/sofa/issues/94); - The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure.; - A bug in LoggingMessageHandler.h has also been corrected. Examples of use of the ExpectMessage & MessageAsTestFailure classes... To generate a test failure when an expected message have not been emitted you have to do; ```cpp; {; ExpectMessage raii(Message::Error);; ... do something that must emit a message ...; }; ```; To generate a test failure when a un-expected message have been emitted you have to do; ```cpp; {; 	MessageAsTestFailure raii(Message::Error);; ... do something that must not emit an error message ...; }; ```. The raii can be combined in the following way:; ```cpp; {; 	ExpectMessage warning(Message::Info);; 	MessageAsTestFailure raii(Message::Error);; 	MessageAsTestFailure raii(Message::Warning);; 	...; }; ```. Any suggestion on this API is more than welcome. . TODO:; 	It would be nice to be able to write; ExpectMessage warning(Message::Info & Message::Warning);,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/96:285,Message,MessageAsTestFailure,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/96,19,"['Message', 'message']","['Message', 'MessageAsTestFailure', 'message']"
Integrability,This PR is a proposal to remove the TestMessageHandler as it was discussed during the today's meeting (connected to this https://github.com/sofa-framework/sofa/issues/94). . The thing was that the TestMessageHandler class is more or less included in the behavior of the ExpectMessage & MessageAsTestFailure so it make sense to remove it. Please tell me if some scenario of yours cannot be handled nicely with the ExpectMessage & MessageAsTestFailure so that I can update their API. The handlers needed by the ExpectMessage & MessageAsTestFailure are now installed by default. . The tests using the TestMessageHandler class have been fixed to use the ExpectMessage&MessageAsTestFailure. . A bug in LoggingMessageHandler.h has also been corrected.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/95:286,Message,MessageAsTestFailure,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/95,4,['Message'],['MessageAsTestFailure']
Integrability,This PR is an attempt to solve the problem pointed in Issue #193 . Problem summary: ; Currently in runSofa when reloading the scene only the ScriptController's are reloaded but not the python code imported by the controllers. . This PR:; solve the issue which avoid to restart runSofa each time an imported module used by a ScriptController is changed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/198:454,message,message,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/198,1,['message'],['message']
Integrability,"This PR is based on #1406 and #1407 and uses the callback mechanism on some SOFA components (mainly Mesh loaders); It also takes advantage of the newly added ""isDirectory"" method in DataFileName in AddResourceRepository. It also:; - Removes the isPersistent flag from datafields in MeshLoaders (because this flag should only be used to set application-specific behaviors: in runSofa2, this flag is used to determine whether the datafield should be recorded when saving the scene for instance); - takes advantage of the getAccessors introduced by @damienmarchal in #1254 ; - Clears log messages from components withing update callbacks if the componentState changes to ""Valid""; - Sets the dynamic datafields created on-the-fly in the MeshVTKLoader depending on the mesh file content as outputs of the component (to guarantee they're update when the component's inputs change; - Checks for the validity of binary STL files using `isBinarySTLValid` for better error handling (see comment in the code l.103 in MeshSTLLoader.cpp); - Removes the autoLink flag from fileMesh in VisualModelImpl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408:585,message,messages,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408,3,"['depend', 'message']","['depending', 'message', 'messages']"
Integrability,This PR is based on #853 despite there is not real connection. ; I was to lazy to swtich branch. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/862:196,message,message,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/862,1,['message'],['message']
Integrability,This PR is basically the same as #444 but this time it is against master. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/449:173,message,message,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/449,1,['message'],['message']
Integrability,"This PR is big but should finally clean all licenses in SOFA. Here is what I did:; - Fix the licenseUpdater script; - Fix wrong or missing LGPL headers in modules; - Fix wrong or missing LGPL headers in SofaKernel; **WARNING**: I found a **contaminating paste of GPL code** in LCPcalc.cpp:501 (lcp_lexicolemke function). Since I didn't found any usage of this function in SOFA (including plugins), **I removed it**. ; Please **tell me if this is OK**. Otherwise, we will have to discuss about GPL contamination.; - Fix wrong or missing GPL headers in applications/projects; - ~~Fix wrong or missing LGPL headers in applications/plugins~~ (commits removed); - ~~Fix wrong or missing GPL headers in applications/plugins: OptiTrackNatNet, SofaPML and SofaVRPNClient~~ (commits removed); - ~~Fix wrong license in SofaHAPI/initSofaHAPI:58 (should be LGPL)~~ (commits removed); - Optimize organization of LICENSE files in SOFA. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139:965,message,message,965,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139,1,['message'],['message']
Integrability,"This PR is en enhancement of the AdvancedTimer. We have added the possibility to get two different JSON ouputs. The first one represent all informations without deep limitation and the other is easier to use but does not represent all the componants tree of the simulation. You can now use the timer in C++ and in python, change dynamically the output type of each timer separately and use the output of the AdvancedTimer to create graphs and/or compare datas from two different scene timers. You can find an exemple of JSON output here : [JSON_example.txt](https://github.com/sofa-framework/sofa/files/1200444/JSON_example.txt); And an exemple of Light JSON output here : [LJSON_example.txt](https://github.com/sofa-framework/sofa/files/1200439/LJSON_example.txt). This work was done with the help of @untereiner and @chpaulus. A documentation will come at the end of my internship. suggested tag : enhancement; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360:1012,message,message,1012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360,1,['message'],['message']
Integrability,"This PR is focused on cleaning the DefaultPipeline component. It contains:; - several tests with one of them is an OpenIssue (the depth parameter that is not checked nor generate warnings); - fix of the data field names that are not following the sofa guidelines, this may break code; directly using these attributes. ; - change some of the docstring to be more helpful; ; It also depend on the following other pull-requests: ; - https://github.com/sofa-framework/sofa/pull/101",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/105:381,depend,depend,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/105,1,['depend'],['depend']
Integrability,This PR is here to support Issue #388 . This is the beginning of a work on cleaning and modularizing the; SofaVolumetricData.; The module is splitted in two Plugins.; - SofaDistanceGrid; - SofaImplicitField. A third plugin act as a transitional package SofaVolumetricData guiding; other developpers on the change they have to do in order to have their; code compiling again. CHANGELOG.txt:; - SofaVolumetricData was strongly refactored and splitted in two plugins SofaDistanceGrid and SofaImplicitField. Please report to sofa-dev any broken behavior. A transitional plugin SofaVolumetricData is provided for one year. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389:719,message,message,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389,1,['message'],['message']
Integrability,"This PR is just an excuse to test latest SofaPython3 PR https://github.com/sofa-framework/SofaPython3/pull/252. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/252]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2905:116,depend,depends-on,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2905,1,['depend'],['depends-on']
Integrability,"This PR is linked to the issue #308 .; Since the modification of MechanicalObject reinit method in PR #270 ([this commit](https://github.com/sofa-framework/sofa/pull/270/commits/b6750f06ea0c5082f8c88d5aaea6bc65d8840429) ). The mechanicalObject doesn't change the value of P0. Thus, it is not necessary anymore to shift the OglModel and the Surf mechanicalObj. Several scenes were impacted but without ground truth it is hard to say if the scene is totally fixed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/324:562,message,message,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/324,1,['message'],['message']
Integrability,This PR is not supposed to be breaking but one day we will totally remove the sofa::defaulttype::RGBAColor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1463:209,message,message,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1463,1,['message'],['message']
Integrability,"This PR is the following work on Geomagic started in PR #1366 (which is included in this one). This PR:; - Totally rewrite the GeomagicDriver init. Now, the tool is directly well placed before simulation start and doesn't need 2 or 3 simulation step to be well init.; => fix #996 . - HD (openHaptics) scheduler communication has been cleaned and fired msg_error with HD error code and description in case of problems.; => fix the possibility to handle several devices. - Clean a lot of old code not anymore used. Like the denavit matrix computation as OpenHaptics is doing it internally. ; => As a consequence, 5 or 6 Data have been removed: dh_XX; - Others changes like variable names replaced to use ""device"" or ""haptic"" instead of ""omni"". And add Doxygen documentation. - Add a component GeomagicEmulator to be able to virtually recreate device motion and interaction. See #1371; => This is almost working.. just need to do some inverse kinematics to compute the good tools transform matrix from the set of arm angles. ... I beg for help here. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1378:1148,message,message,1148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1378,1,['message'],['message']
Integrability,"This PR isolates OpenGL-specific code (pickhandler, viewers, etc) of SofaGuiQt to a new library (called SofaGuiQtOpenGL), thus allowing us to implement a viewer which cannot/dont want to use OpenGL (e,g to deal with macOS in the future). . This PR prepares the ground for a SofaQt3D viewer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1121:390,message,message,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1121,1,['message'],['message']
Integrability,"This PR kind of fixes #316 ; Concerning Multithreading plugin, it still would be better to get rid of Boost dependency as stated by @fjourdes in #316. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/359:108,depend,dependency,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/359,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"This PR links PythonLibs 2.7 to SofaPython ""the proper way"":. Until now, a target was created within SofaPython, in order to expose PythonLibs' leaders & libraries to linked projects. This led to issues when trying to link an external project to SofaPython, since the targets were not properly installed (see #888). Since there's not reason to create a separated target for PythonLibs anyway, I removed it, and simply linked PythonLibs as you would do for any other lib. It should not cause any issue to plugins using SofaPython, since PythonLibs' headers / lib are exposed publicly through the SofaPython target anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/891:720,message,message,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/891,1,['message'],['message']
Integrability,"This PR mainly changes SofaMacros.cmake to permit external (on another repository) projects/plugins to be automatically fetched, updated and added to SOFA. Important: this work will permit to include SofaQtQuick GUI as an external project :wink: . This is a modified version of @fredroy branch [setup_external_plugin](https://github.com/fredroy/sofa/tree/setup_external_plugin). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/649:478,message,message,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/649,1,['message'],['message']
Integrability,"This PR makes so that the user can activate an option to look for and use CCACHE for compilation.; If the option is activated, then CMake looks for ccache. If ccache is found, it is used for compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/692:303,message,message,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/692,1,['message'],['message']
Integrability,This PR moves required Data check from BaseObject::init() to a new SceneCheck loaded by default.; The starting problem for this work was that having the check in BaseObject::init() forces every Component that overrides init() to call the parent init(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754:352,message,message,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754,1,['message'],['message']
Integrability,"This PR proposes an alternative representation of the root path's name. If we consider a node named ""root"", with a child node named ""child"", a component named ""object"" and a data field named ""data"", here were the previous values returned by their `getPathName` method:. ```; root.getPathName(): """"; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): "".data""; ```. I find this naming convention misleading, as an empty string for the root path does not seem right to me, and "".data"" for the path of root.data also look wierd:. - When working with link paths, like we do all the time in Sofa, making a link between a component's data and root.value would look like this:; ```; root.createObject('MyComponent', value=""@.value""); ```. - The same way, if a component for some reason would need a take a node as an input field, passing root would look like:. ```; node.createObject(""MyComponent"", nodePath=""@"") # passing root to nodePath would lead to syntax errors during parsing.; ```. Thus I suggest that, as it is done in FTP clients for instance, or filesystem browsers in general, the root node, regardless of its name be represented as a forward slash `/`:. ```; root.getPathName(): ""/""; root.child.getPathName(): ""/child""; root.object.getPathName(): ""/object""; root.data.getLinkPath(): ""@/.data"" # this cas still looks a bit funny, but makes more sense IMHO. root.createObject('MyComponent', value=""@/.value""); root.createObject('MyComponent', nodePath=""@/""); ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1146:1614,message,message,1614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1146,1,['message'],['message']
Integrability,"This PR re-adds the previously removed Regression project. This time, we use our CMake ""external project"" feature to auto-fetch Regression from https://github.com/sofa-framework/regression. We are now able to build Regression_test within SOFA and to specify what version (commit) of the project shall be fetched.; To change the version that will be fetched, edit `applications/projects/Regression/ExternalProjectConfig.cmake.in`. I also removed the deprecated ci scripts from `scripts/ci`. You can find latest CI scripts in https://github.com/sofa-framework/ci. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1052:661,message,message,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1052,1,['message'],['message']
Integrability,This PR removes all occurrences and related codes for SOFA_GUI_INTERACTION. Fixes #623 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/643:188,message,message,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/643,1,['message'],['message']
Integrability,This PR removes the COMPONENTSET mechanism from our CMakeLists.; Deprecated components are now identified by the option SOFA_WITH_DEPRECATED_COMPONENTS. I also couldn't resist to reformat a bit. Tell me if I did something wrong!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/586:329,message,message,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/586,1,['message'],['message']
Integrability,"This PR removes the dependency from SofaTest to the framework_test executable.; The reason for this is that SofaTest depends on a **lot** (if not all...) of librarires which do not reside ; in SofaKernel. So having a dependency to SofaTest somewhat defeats the whole puropose of writing; self contained fast to compile unit tests.; As a general rule, it should be a requirement that SofaKernel can compile without any dependency to ; libraries that do not reside in SofaKernel.; This PR address the problem only for framework_test, but the problem persists in SofaSimulation_test. # CHANGELOG; - Moved AdvancedTimer_test and DefaultAnimationLoop to SofaSimulation_test since they require to be able to instantiate a concrete instance of a Node; - Moved _TrackedData_test to SofaSimulation_test since it requires to be able to instantiate an AnimateBeginEvent object; - Removed dependency to SofaTest from framework_test, which implied the following; - removing calls to EXPECT_MSG_NOEMIT ( which is defined in SofaTest ); - copy pasting EXPECT_MAT_NEAR and EXPECT_MAT_DOUBLE_EQ macros from SofaTest in MatTypes_test.cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455:20,depend,dependency,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455,6,"['depend', 'message']","['dependency', 'depends', 'message']"
Integrability,"This PR removes warnings caused by inconsistent use of the override keyword. While it might not remove all of them (not all plugins have been checked), it allows developers to actually fix the remaining ones rather than ignoring them because it will only generate more warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423:378,message,message,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423,1,['message'],['message']
Integrability,This PR replaces #510 with a simple fix suggested by @vmagno (thank you). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/515:173,message,message,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/515,1,['message'],['message']
Integrability,This PR should fix #401 bug. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/403:128,message,message,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/403,1,['message'],['message']
Integrability,"This PR should fix the issue raised in #1650 by cleaning CImgPlugin to properly use targets for dependencies and thus propagate their include directories. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1651:96,depend,dependencies,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1651,1,['depend'],['dependencies']
Integrability,This PR simply add a default class named NoArgument in Factory.h.; NoArgument is usefull when you try to instantiate BaseCreator or Factory without passing arguments. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/385:266,message,message,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/385,1,['message'],['message']
Integrability,"This PR simply introduces the template alias:. ```c++ ; sofa::core::sptr<T> = boost::intrusive_ptr<T>;; ```; in `<sofa/core/sptr.h>` and reflects the needed changes in the codebase. # Motivation. Most (all?) component types in SOFA come with a member typename `T::SPtr` referring to `boost::intrusive_ptr<T>`, which makes it impossible to declare a member shared pointer to another component without including the component header file. In an effort to decrease compilation times by removing unneeded include files, this PR introduces a template alias to solve this problem. It is now possible to declare member shared pointers using a forward declaration of their types only, as shown in 48f1447. # Changelog. - added `sofa::core::sptr<T>` template alias; - reflected changes in BaseClass macros, Base and Aspects; - replaced many constructors in `New` with variadic templates; - added an example include fix in `Compliant`. # Note. This PR is *not* intended to be a place for fixing every member SPtr + includes, otherwise it will never get merged. . If we can agree on the PR's philosophy and get it merged, please make separate PRs for include simplifications. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436:1264,message,message,1264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436,1,['message'],['message']
Integrability,"This PR slightly improves the doc around the DataTypeInfo API according to our findings while digging in to implement the Data type binding in SofaPython3.; It also adds a specialization of the `DataTypeInfo<helper::vector<T> >` with `T=std::string`, which proves that it is possible to iterate over containers with `SimpleLayout() == true` and `BaseType()->FixedSize() == false`, which is important for SofaPython3 bindings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1113:525,message,message,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1113,1,['message'],['message']
Integrability,This PR suggested by @alxbilger fixes build on Windows with VS2017. Error was `C2057: expected constant expression`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/630:216,message,message,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/630,1,['message'],['message']
Integrability,This PR unify the API for DataTrackerEngine and DataCallback; so they match. The difference between the two is that in DataTrackerEngine; the callback is called when the data is needed (so the output is accessed); while in a DataCallback the update is done each time the data is changed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1073:387,message,message,387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1073,1,['message'],['message']
Integrability,"This PR will be further discussed during STC#3. ## issofa_bugfix. ### Cleans; - BaseObject: Output message in serr for required datas. Error word should be reserved for messages that will make the application fail.; - RayTriangleVisitor and SceneLoaderFactory: clean warnings; - ParticlesRepulsionForceField: Add empty implementation of addKToMatrix to get rid of console warnings. ### Bugfixes; - AttachConstraint: fix crash when indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stif",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:99,message,message,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,2,['message'],"['message', 'messages']"
Integrability,"This PR will be merged in the topologyChanges_POC branch. this method was never called and is not useful.; Add Disabled message. This need to be merged before #2114. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2171:120,message,message,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2171,1,['message'],['message']
Integrability,This PR will fix our last failing unit test on Unix! :tada: . CImgPlugin defines for CImg build needed to also be defined by every project using CImg.; ~~They are now exported in `CImgPlugin_CFLAGS`.~~; They are now defined PUBLIC by CImgPlugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/595:345,message,message,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/595,1,['message'],['message']
Integrability,This PR will remove various warnings generated when compiling with gcc 6.3.0. Warnings coming from extlibs are not fixed.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/454:222,message,message,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/454,1,['message'],['message']
Integrability,"This PR:; - adds the new component MechanicalMatrixMapper (formerly called MappedMatrixForceField); - suppress the Cmake option SOFA_WITH_EXPERIMENTAL_FEATURES (Was used for development and is useless now) added in https://github.com/sofa-framework/sofa/pull/276. The component MechanicalMatrixMapper allows to compute the mapped matrices computed by ForceFields under mappings, which are ignored by the SOFA animation loops.; Typical usage would be:; **Node**; MechanicalObject (MO) **q**; MechanicalMatrixMapper (NodeParsed = **MappedNode**) --> computes **J**^T.**K**.**J** and **J**^T.**M**.**J**; .....**MappedNode**; .....MappedMechanicalObject (MMO) **q_m**; .....Mapping (input = ../MO, output = MMO) -> Computes **J**.**q_m**; .....ForceField -> Computes stiffness matrix **K**; .....Mass -> Computes Mass Matrix **M**. Any comments welcome!; (Work with @VannesteFelix @ChristianDuriez ); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/721:997,message,message,997,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/721,1,['message'],['message']
Integrability,This PR:; - updates the sceneCheckerAPI by setting the default leve at 19.06 and removing the warning for BoxStiffSpringFF; - set as deprecated MatrixMass for developers; - warns users about the deprecation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1107:307,message,message,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1107,1,['message'],['message']
Integrability,This PRs regroups 2 works:. **1. Changes for v19.12 packaging**; - Qt deployment using windeployqt/macdeployqt and post-install scripts; - Improvement of post-install scripts (Linux and MacOS); - MacOS packaging with latest CMake; - Better param names for macros sofa_install_libraries and sofa_copy_libraries. **2. Integration of DocBrowser by Defrost**; - New Qt dependencies (required): WebEngine + WebEngineWidgets; WARNING: this will definitely break VS2015 compatibility. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1275:316,Integrat,Integration,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1275,3,"['Integrat', 'depend', 'message']","['Integration', 'dependencies', 'message']"
Integrability,This STC#5 sprint pull-request cleans the whole Scene Checking API.; It also adds a new SceneCheck that warns for alias uses: `SceneCheckUsingAlias`. It's a first step concerning #677 :+1: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/702:290,message,message,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/702,1,['message'],['message']
Integrability,"This aims to tackle one point of #4221 . Required for the conda-forge package (https://github.com/conda-forge/staged-recipes/pull/23085).; This PR propose to replace tinyxml embedded library, which is unmaintained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:717,depend,dependency,717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,2,['depend'],['dependency']
Integrability,"This assert is annoying:; In a better world, a singleton should never return null in the first place, so getSimulation() should create the simulation if it doesn't exist. but then in a better world, the Simulation class would not be a singleton in the first place..; Meanwhile, this assert prevents us from coding things like this:. ```cpp; if(!sofa::simulation::getSimulation()); sofa::simulation::setSimulation(new DAGSimulation());; ```; And that's a problem to initialize the Simulation singleton, because without the test, it would be recreated all the time.; So I vote for removing it entirely. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1082:700,message,message,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1082,1,['message'],['message']
Integrability,"This branch contains the coding-sprint results & associated fixing commits. . There is the commit for the base branch, the coding sprint commit, post-sprint compilation fixes et test fixing. . CHANGELOG:; - deprecating several components (see the list in deprecatingcomponents.cpp); - the SceneCreator is base on a totally new implementation. The most notable difference is that the ; SceneCreator is no more relying on component from sofa core but use the factory to create the objects. ; The API does not change but if the factory is empty (because no plugin is loaded) then the ; components cannot be not created. So If you used SceneCreator in your test you may need to pre-load the plugin or module as done in ""sofa/SofaKernel/modules/SofaImplicitOdeSolver/SofaImplicitOdeSolver_test/loadPlugins.cpp""; - Fix FileMonitor_test that were randomly failing one MacOS; - Fix DataEngine_test that was failing on Vertex2Frame. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457:1023,message,message,1023,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457,1,['message'],['message']
Integrability,"This branch is to prepare the coding sprint. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and 425 . Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429:307,depend,dependencies,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429,3,"['depend', 'message']","['dependencies', 'message']"
Integrability,"This bug just pop up again in #967 and was referenced in issue #631 ; Several Gmsh file have non coherent topology information, for example Triangulation with edges on the border only. This mess up information feeding the topology container. If this behavior is wanted, use ``` <MeshGmshLoader createSubelements=""0"" />``` and be sure to link the different topology buffer data to the appropriate components.; For example:; ``` ; <MeshGmshLoader name=""loader"" createSubelements=""0"" />. <Node name=""triangulation"" >; <TriangleSetTopologyContainer name=""tri_topo"" triangles=""@../loader.triangles"" />; </Node>. <Node name=""border"" >; <TriangleSetTopologyContainer name=""edge_topo"" edges=""@../loader.edges"" />; </Node>; ```. fixes #631. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/986:831,message,message,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/986,1,['message'],['message']
Integrability,This change has been performed to make the usage of the script and the documentary clearer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/570:191,message,message,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/570,1,['message'],['message']
Integrability,This change is needed before using the new dependency pack (libjpeg + libtiff) on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/566:43,depend,dependency,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/566,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"This commit adds a directive to instruct CMake to find/use XCode's framework lastly.; E.g if you have installed libpng with homebrew/macport, CMake will use those first instead of the Apple's (old) ones. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/720:303,message,message,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/720,1,['message'],['message']
Integrability,"This commit rewrites the static ODE solver, implements two additional convergence criteria, improves the documentation of every step found in the ""solve"" method, and adds useful doxygen documentation of the Newton algorithms executed by the component. Up until this commit, the only convergence criteria of the static ODE solver were absolute force residual norms, and absolute (displacement) increment norm. Using absolute values for convergence criteria means that the value set by the user is dependent on the simulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:496,depend,dependent,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,1,['depend'],['dependent']
Integrability,"This commit sets the d_totalMass as read and write in DiagonalMass.; Before set as read-only, without reason.; The commit also updates the coding rules in the Data. Tests are added to check for both hexa and tetra topologies,; the coherency between totalMass and massDensity. It also checks that; if both totalMass and massDensity are defined, totalMass predomines. WARNING: the test showed issue of casting in the EXPECT_EQ(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] breaks existing scenes.; - [x] breaks API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/230:527,message,message,527,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/230,1,['message'],['message']
Integrability,This data holds the force applied to satisfy the SlidingConstraint. Rename some data with more explicit names following Sofa conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/780:237,message,message,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/780,1,['message'],['message']
Integrability,This file is needed even if SOFA_INSTALL_RESOURCES_FILES == false; Fixes #114. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/285:178,message,message,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/285,1,['message'],['message']
Integrability,"This fix allows to select and copy parameters names in Sofa GUI interface, which is very useful when setting default values for elements in scene files. Instead of setting parameters names as titles of widgets I created QLabel objects and set them as the first row of the GridLayout manager. I know that current sofa GUI will be replaced with Qt quick GUI soon, but I guess this modification will still be useful for those who use this version of GUI. I also would to make this change for Qt quick GUI, but all parameters names in QML are covered with ""Mouse Area"" objects, which don't allow to handle mouse events for text objects under them. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369:64,interface,interface,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369,2,"['interface', 'message']","['interface', 'message']"
Integrability,This fix allows to set the default filename for the Monitor class. The default name assignment is removed in 'init()' function since in constructor it doesn't work. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/500:266,message,message,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/500,1,['message'],['message']
Integrability,"This fix was already applied to examples/Components/forcefield/TriangularForceFieldComparison.scn; See 28c8b68f9d6ed4be725baf305a0957097581fb13. Sorry but I can't explain why this fix was needed in the first place. ; If someone could, that would be great :+1: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/626:361,message,message,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/626,1,['message'],['message']
Integrability,"This fixes a segmentation fault I had with the SofaPython3 where the valid gui name was a python string variable. Since the GUI manager was storing a raw pointer to it, and since the python variable was later destroyed, the GUI manager was seg faulting when accessing the pointer. This PR simply creates a copy of the string instead of storing a raw pointer to it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1108:464,message,message,464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1108,1,['message'],['message']
Integrability,This fixes the GuiRepository path for Windows VS compiling related to issue #577 and then a subsequent issue with QTextBrowser opening the runsofa.html file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/578:257,message,message,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/578,1,['message'],['message']
Integrability,This fixes the problem of closing runSofa while window like pluginManager or VisitorWindow being open and not killed when main application stop. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1030:244,message,message,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1030,1,['message'],['message']
Integrability,"This gives more choices for the ordering method. It mimics the choices we have in Eigen-based linear system (e.g. EigenSimplicialLDLT). The data applyPermutation is deprecated. Notes:; - It means we have an alternative to Metis for all solvers. However, it may not be as efficient as Metis.; - The new implementation may be less efficient (or not, I haven't tested) than calling directly the Metis function. But this call is made only once, or every time the matrix pattern changes (topological changes etc).; - Since we have multiple choices, we can put all of them in a factory. That way, Metis could be moved away from this module. Another module can be created, which depends on Metis and would populate the factory with Metis methods. This could also be the case with Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4370:672,depend,depends,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4370,1,['depend'],['depends']
Integrability,This include #1283.... so please let the first one merge first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1330:163,message,message,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1330,1,['message'],['message']
Integrability,This include PR #1251 to make it compile in the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1253:151,message,message,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1253,1,['message'],['message']
Integrability,"This is a (big) attempt to clean the dependencies management in SOFA. ## Better understand SOFA dependencies; Here is a summary: https://docs.google.com/spreadsheets/d/1dxP7Rsyl1oCr0lfTwQESeeZQTt315CIFih5QpJp5OZY/edit?usp=sharing. ## Clean dependency management in CMakeLists; - SofaFramework; - Moved to SofaHelper: Boost, OpenGL, GLEW, GTest, Eigen, JSON, FFMPEG_exec ; - Removed (not needed by any SofaFramework module): TinyXML, ZLIB ; - SofaMisc; - Added to SofaMiscTopology: ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:37,depend,dependencies,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,3,['depend'],"['dependencies', 'dependency']"
Integrability,"This is a WIP PR but need review flag for CI-driven investigation. [ci-depends-on https://github.com/sofa-framework/Regression/pull/25]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2800:71,depend,depends-on,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2800,1,['depend'],['depends-on']
Integrability,This is a WIP to support discussion about issue #362 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/371:154,message,message,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/371,1,['message'],['message']
Integrability,This is a basic fix when compiling sofa with Visual Studio 2015 and using the QWT plugin; last() is replaced by back() for deque. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/935:229,message,message,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/935,1,['message'],['message']
Integrability,"This is a fix for a very specific situation. Here is what happens:. 1. A `msg_warning` is called in a component from a thread different from the main thread. It could be also `msg_error` or `msg_info`, as long as the message count of the element changes. It could be a change of name as well.; 2. The `ObjectStateListener` associated to the component updates the associated `QTreeWidgetItem` (this class is not a `QObject`).; 3. The icon is updated, so it warns the `QTreeWidget` (this class is a QObject) through a signal.; 4. Since the call happens in a thread different from the main thread, the queued connection is used. For that, all signals/slots parameters must be known to Qt's meta-object system. This PR registers the class `QVector<int>`, so it can be used in the queued connection. It partially fixes https://github.com/sofa-framework/sofa/issues/3610. The warning is no longer triggered by Qt. Therefore, the mutex is locked only once in one thread. I say it solves partially, because any other Qt error would trigger the same crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3749:217,message,message,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3749,1,['message'],['message']
Integrability,This is a fix to update a bound box for a hyperelastic force field. Without updating the rotation and translation of a virtual camera works incorrectly. This method is a copy of a bound box computation from TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1401:332,message,message,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1401,1,['message'],['message']
Integrability,"This is a follow-up to #326, now with green tests. TL;DR: There should be no unprotected python code in sofa except in extension code. . Any code like this:. ```c++; void my_function(...) {; // ...; PySomething_Something(...);; }; ```. Should be GIL-protected as follows:; ```c++; void my_function(...) {; // ...; // the lock runs until the end of scope; sofa::simulation::PythonEnvironment::gil lock;; PySomething_Something(...);; }; ```. Or even better yet: don't use naked python calls and use the `PythonEnvironment` API instead. You may also temporarily release the GIL while doing a costly/blocking c++ operation as follows:. ```c++; void my_function_that_already_owns_the_gil(...) {; // ...; // unlocks the GIL until the end of scope; sofa::simulation::PythonEnvironment::no_gil unlock;; // ...; }; ``` . I tried looking for all python calls in the codebase, but I may have missed some. . # Changelog. - added `PythonEnvironment::gil` RAII for scoped acquisition of the GIL; - added `PythonEnvironment::no_gil` RAII for scoped release of the GIL; - GIL-protected most (all?) python calls with the above (except in extension code); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/347:1237,message,message,1237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/347,1,['message'],['message']
Integrability,"This is a long standing issue in Sofa about not being able to save 'usable' scene in runSofa. . This is the result of multiple problems combined together among which:; - there is keywords that are not Data field but parsing hook (eg: src, compatbility hook) and they needs to be converted into Data.; - the Data have a persistant field. But it is let to the component to specify which are or not depending on some object property but depend on their context of ""use"".; Eg:; *) a data changed in the GUI should be saved; *) a data filled with a script shouldn't; etc... To allow to control fine grain the state of a data is now set to non persitant; by default and should only be activated specifically (by the GUI, or the script); if it is needed to save it. This is what this PR do, and despiste this is a behavior change...it is on a totally broken feature. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1191:396,depend,depending,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1191,3,"['depend', 'message']","['depend', 'depending', 'message']"
Integrability,This is a proposal PR following discussion on gitter to use a macro to define the extern template in the header and remove the non extern version from the cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/777:259,message,message,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/777,1,['message'],['message']
Integrability,"This is a proposal for a clean and consistent SofaKernel. ; The idea is to make SofaFramework modules consistent with the rest of SOFA by moving them into `SofaKernel/modules` and reorganizing their tests. Main changes:; - `SofaKernel/framework/sofa/*` goes to `SofaKernel/modules` with consistent naming; - `SofaKernel/framework_test/*` becomes XXX_test (where XXX is a SofaFramework module); - `SofaKernel/modules/sofa/*` becomes XXX_simutest (where XXX is a SofaFramework module); - `<sofa_root>/modules/tests` goes to `<sofa_root>/tests` for better readability. This PR is heavy but non-breaking. Package, module and library names stay the same. Include directories stay the same. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1200:784,message,message,784,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1200,1,['message'],['message']
Integrability,This is a quick redo of #1437 ; I did not see that SOFASPARSESOLVER_HAVE_METIS and SOFASPARSESOLVER_HAVE_CSPARSE are actually used in SofaSparseSolver sources :fearful: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1440:270,message,message,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1440,1,['message'],['message']
Integrability,This is a redo and fix #919 based on current master. To be tested by @Younesssss :wink: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1396:189,message,message,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1396,1,['message'],['message']
Integrability,This is a remake of #1007 . Upgrading Eigen from 3.2.7 to ~~3.3.7~~ 3.2.10; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1101:175,message,message,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1101,1,['message'],['message']
Integrability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in Compliant plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1557:245,message,message,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1557,1,['message'],['message']
Integrability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in SofaBoundaryCondition. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1558:250,message,message,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1558,1,['message'],['message']
Integrability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in collision components. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1559:249,message,message,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1559,1,['message'],['message']
Integrability,"This is a task for the conda-forge packaging. . This pr removes the folder containing the libQGLViewer source files and instead fetch our forked version (required to add a CMakeList to the project) when the dependency is not found. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4840:207,depend,dependency,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4840,1,['depend'],['dependency']
Integrability,"This is a tentative to refactor `TetrahedronFEMForceField` for better readability. All the FEM methods have been dispatched into dedicated files. The methods are now classes sharing the same interface (polymorphism), called by the component. Advantages:; - `TetrahedronFEMForceField` is smaller; - `TetrahedronFEMForceField` had many similar codes (often identical). This is now avoided as all common code are in the base classes.; - It is easier to read the differences between the different FEM methods.; - We could imagine having a factory of FEM methods for `TetrahedronFEMForceField`. Then, the component could be extended in plugins by adding more methods into the factory. To do:. - [ ] Clean; - [ ] Move some class members from `TetrahedronFEMForceField` to `TetrahedronFEMForceFieldImpl`; - [ ] Restore initial performances; - [ ] Fix broken features such as drawing rotations; - [ ] If everyone agrees, remove the assembled methods. It adds complexity while the resulted matrix is not used.; - [ ] Adapt (if necessary) the derived classes (multithreading, CUDA etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:191,interface,interface,191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,1,['interface'],['interface']
Integrability,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2036:348,depend,depending,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036,1,['depend'],['depending']
Integrability,"This is a variation of the proposal done by @fjourdes in #455 where I allow me a bit more refactoring. . Here is what the PR does:; - implement basic test class in sofa/helper/testing/ BaseTest & NumericTest so that all framework tests can use them. ; - in SofaSimulationGraph/testing add a BaseSimulationTest class that implement facilities for tests that needs scene manipulation & loading. ; - udpates SofaTest to use the previously defined classes but still behaving as they used to in the past. ; - updates the framework_test to use BaseTest or NumericTest in place of Sofa_test or ::testing; - moves the tests in framework to framework_extra when they are manipulating a simulation (thus requires BaseSimulationTest instead of BaseTest); - updates the tests in simulation_test so that they don't use SofaTest anymore. ; - moves SimpleApi from SceneCreator to SofaSimulationGraph & fix a bug.; - creates a plugin in a the application/package directory so that in our tests we can load all the common sofa component with a single RequirePlugin(""SofaAllCommonComponents""). The consequences are:; - SofaTest is no more needed in framework & simulation ; - we can now progressively make the other tests to rely on BaseTest, BaseSimulation and SimpleAPI that are dependency free instead of SofaTest/SceneCreator. . Feel free to provide feedback/comment. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:1263,depend,dependency,1263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"This is an attempt to fix FileMonitor-fileChangeTwice_test, failing on windows on other PRs since merge of PR #258 . CHANGELOG:; - Fix FileMonitor_test about file that was not correctly recreated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/267:296,message,message,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/267,1,['message'],['message']
Integrability,This is an attempt to refactor from PR #332 to make it non breaking. . No need for review now this is in WIP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/596:211,message,message,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/596,1,['message'],['message']
Integrability,"This is an old work that has already been merged into ng branch (see #620) but since the NG task is paused for now I think it would be appreciable to have this in master. The idea is to remove SofaComponent* from modules (because they are not modules) and put them next to SofaAllCommonComponents. Concretely, this PR does:; - Move SofaComponent* next to SofaAllCommonComponents; - Rename SofaAllCommonComponents into SofaComponentAll; - Rename ""packages"" into ""collections"" to avoid confusion with CMake packages like SofaGeneral, SofaFramework, ...; - Somes fixes in SofaPreconditioner and SofaSparseSolver completing #1137 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1155:727,message,message,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1155,1,['message'],['message']
Integrability,"This is just a small test to see if an automated replacement is working ""good"" enough. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/836:188,message,message,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/836,1,['message'],['message']
Integrability,"This is mainly to differentiate two identical error messages, but with different causes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3985:52,message,messages,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3985,1,['message'],['messages']
Integrability,This is related to the issue at: https://github.com/sofa-framework/sofa/issues/816; Fixes #816 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/901:196,message,message,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/901,1,['message'],['message']
Integrability,This is reopening one PR that was issued from SofaDefrost/master instead of a dedicated branch. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/691:197,message,message,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/691,1,['message'],['message']
Integrability,"This is small feature addition. Currently, LinearMovementConstraint only takes trajectories relative to the rest position of the MechanicalState. Sometimes though, the trajectory is specified in world frame coordinates, and especially with Rigid3D (i.e. orientations), conversion is not trivial for the user . This patch introduces a switch ""relativeMovements"" (default true).; When disabled, trajectories can be specified in world frame coordinates. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/394:550,message,message,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/394,1,['message'],['message']
Integrability,"This is still WIP be I would be happy to have some feedback. As discuss in #744 . The idea at the end is to remove all GetMeshTopology. ; 1. Add SingleLink in all component accessing GetMeshTopology from context; 2. Update all scenes but keep backward compability:; ```; if (linkTopology.empty()){; msg_warning() <<""set the link"";; linkTopology.set((this->getContext()->getMeshTopology());; }; ```; 3. Flag all getXXXMeshTopology to Depreciate 20.06 ?; 4. after 20.06 Remove all getMeshTopology(). Component upgraded: ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1183:1168,message,message,1168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1183,1,['message'],['message']
Integrability,This is the Defrost cleaning week29 with...as usual a lot of std:cout and dead code removal. ; Shouldn't break anything. ; In case some component are too verbose please tell us. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/370:279,message,message,279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/370,1,['message'],['message']
Integrability,"This is the Defrost week contribution in cleaning & testing. CHANGE for Hugo:; - [FileMonitor] fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue https://github.com/sofa-framework/sofa/issues/146; - [ConstantForceField] clean to follow sofa guideline & fix the ""visible dependencies"", ; - [ConstantForceField] replace the ""points"" attribute by ""indices"" (with backward compatibility & deprecation message); - [ConstantForceField] add test in ConstantForceField_test, some of them are OpenIssue demonstrating existing problem (as crashing sofa when using negative (or too large) values in indices). ; - [Light] clean and strenghening the interface; - [Light] add tests ; - [DefaultAnimationLoop] add tests; - [LocalMinDistance] add tests; - [RequiredPlugin] add tests; - [ClipPlane] add tests; - [DistanceGrid] add tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/258:333,depend,dependencies,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/258,4,"['depend', 'interface', 'message']","['dependencies', 'interface', 'message']"
Integrability,"This is the callback system we use in our dev branch for runSofa2.; It lets you add a callback function so that outputs can be updated upon changes on their input data.; The callback function returns a component state (Valid / invalid / ...) which guarantees that the component's state is properly maintained. I kept this PR simple (only tests to show the working principle), but will make another one later on with a few components that we've updated to use this callback mechanism (AddResourceRepository, MeshLoaders (OBJ / VTK / STL ...) . This mechanism is also used in the ""nodephysics"" Links POC (https://github.com/SofaDefrost/ComponentData_POC/pull/2). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1406:760,message,message,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1406,1,['message'],['message']
Integrability,"This is the first PR of a long series concerning ISSofa (InSimo) commits merge.; This branch has to be merged first because it is the base branch of all further integrations.; It contains mostly SofaPython commits and also some CI and environment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit te",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:161,integrat,integrations,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,2,"['integrat', 'interface']","['integrations', 'interface']"
Integrability,"This is the return of PR https://github.com/sofa-framework/sofa/pull/106 taking into account all the feedback and discussion in https://github.com/sofa-framework/sofa/issues/179. This PR contains: ; - a PerComponentLoggingMessageHandler to stores the messages in components in a much cleaner way compared to the existing code in Sofa.; - the old history code is removed but a compatibility layer on top of the new one is provided to ; provide backward compatibility (eg in third party code like qtSofaQuick). ; - the runSofa GUI is slighly updated and improved to make use of the new component. ; - the msg_api is extended to facilitate its use and coherency; - I fixed all around in the code base the mis-usages of printLog eg: if(f_printLog) cout << .... ; - I didn't replaced the f_printLog data field because it would have broken the API too much ; (maybe one day if someone care). Now a bried summary of the new functions in the msg_* API; ```cpp; msg_info() << ""This is a message sended by the this component"" ;; msg_info(other) << ""This is a message sended by the 'other' component"" ;; msg_info(""A String"") << ""This message is not sended by a component"";; ```; Each version also exist in a conditional form eg:; ```cpp ; msg_info_when(!file.valid()) << ""File is not valid"" ; ```. In the previous examples you can also replace 'info' with the type of message you want to emit among:; 'info', 'advice', 'deprecated', 'warning', 'error', 'fatal'. ; ; 'warning', 'error' and 'fatal' and 'deprecated' message cannot be muted with the printLog parameter while 'info','advice',' can. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190:251,message,messages,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190,1,['message'],['messages']
Integrability,"This is the the third step of my LockOut refactoring effort for Sofa. In PR#1283 we have refactored the reflection system. We can now clean the DDGNode to cut the un-needed dependencies. ; DDGNode needed to be part of reflection system because it was storing its inputs and ouputs with Links. It is unclear what the link data structure was needed for and storing the input and output with a more classical data structure (a stable_vector) remove the needs to have DDNode be part of the reflection system...so remove a lot of un-needed code. . Exemple of needed but in face un-needed code that are now removed:; ```cpp; /// This method is needed by DDGNode; const std::string& getName() const override; {; static const std::string emptyName ="""";; return emptyName;; }; /// This method is needed by DDGNode; objectmodel::Base* getOwner() const override { return nullptr; }; /// This method is needed by DDGNode; objectmodel::BaseData* getData() const override { return nullptr; }; ```; ; Some code was added in BaseData. This is because these code was in-herited from DDGNode and are now not provided anymore. The code cannot be removed because BaseData is still used in Links and thus, still required to implement the reflection system...removing that is for an incoming PR. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372:173,depend,dependencies,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"This is the work on which was based the STC#4 coding sprint.; It has to be merged to clearly differentiate deprecation and pluginization works afterwards. It is a reopening of #429 (sort of).; I started from https://github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:687,depend,dependencies,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,1,['depend'],['dependencies']
Integrability,This is very useful to implement any kind of 3D interaction in the python controllers. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/731:188,message,message,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/731,1,['message'],['message']
Integrability,"This issue is connected to the discussion: ; https://github.com/sofa-framework/sofa/commit/aee0d912432d043a792f3b43160417e724b11704. This discussion was continued between I, Mathieu and Guillaume, during our weekly meeting. . Our conclusion were that: ; - in sofa::core the defaultmessagehandler should be the simplest so that people making third party applications out of Sofa are not disturbed by the new formatter. . - runSofa & Test may use the RichStyleFormater . - it would be nice to add more capability of routing the messages (explaination and details in the following). **New features:** ; Currently the _msg_* API has two class of message (Dev and Runtime). Message of class Runtime are supposed to be for ""the users"". Message of class Dev are supposed to be for developers. ; You can send message of class Runtime with _msg_info()_...and message of class Dev with _dmsg info()_. The use of macro was to allows us to totally remove the _dmsg*_ from the sofa official releases (they are totally removed from the binary and thus have a zero cost). ; ; In addition to the classes of message is the 'type' which is among: Advice, Info, Warning, Error, Deprecated, Fatal. To select the type you can use the macro _msg info_, _msg advice, _msg error_, ... or their dmsg_ equivalent. . It was suggested:; - to add one extra class of message for ""Log""; - to add a new MessageHandler that can route precisely the messages depending on the developper's need. ; (eg:; - route all the message to a FileMessageHandler but not the one of type advice); - route all the messages of class Log to a FileMessageHandler as well as the class Runtime&Error). DM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/56:514,rout,routing,514,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/56,17,"['Message', 'depend', 'message', 'rout']","['Message', 'MessageHandler', 'depending', 'message', 'messages', 'route', 'routing']"
Integrability,This issue is the general discussion about the project Continuous Integration.; Please feel free to share any remark or ongoing work about it.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/186:66,Integrat,Integration,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/186,1,['Integrat'],['Integration']
Integrability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. The image plugin supports the python plugin, but does not require it. However, when linking the image plugin into an external project by using the install path of sofa, the image plugin lists the python plugin as a required dependency. CMake will then return the following error:. ```; CMake Error at CMakeLists.txt:50 (find_package):; Found package configuration file:. /.../sofa/build/install/lib/cmake/image/imageConfig.cmake. but it set image_FOUND to FALSE so package ""image"" is considered to be NOT; FOUND. Reason given by package:. The following imported targets are referenced, but are missing: SofaPython. -- Configuring incomplete, errors occurred!; ```. To reproduce the bug; 1. Compile SOFA with the image plugin activated, but without python plugin; 2. Lauch cmake on an external project and add the image plugin as a dependency; `find_package(image REQUIRED)`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/135:129,depend,dependancy-to-skeleton-h-does-not-compile,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/135,3,['depend'],"['dependancy-to-skeleton-h-does-not-compile', 'dependency']"
Integrability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. When installing SOFA's image plugin (ex.: make install), the image plugin installation does not preserve the file's hierarchy which will failed the compilation of any external project that includes the SOFACImg.h file. `/.../sofa/build/install/include/CImg/CImg.h:9341:21: fatal error: plugins/skeleton.h: No such file or directory`. If we look in the installation folder (sofa/build/install), all the required headers are in include/CImg instead of include/CImg/plugins which will then failed the compilation. To reproduce the bug. 1. Compile and install SOFA with the image plugin activated; 2. Create an external project with the image plugin as a requirement, and add the following line in any of the source file: `#include <CImg/SOFACImg.h>`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:129,depend,dependancy-to-skeleton-h-does-not-compile,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,1,['depend'],['dependancy-to-skeleton-h-does-not-compile']
Integrability,This line has been removed accidentally in PR #1428 . need to be backported?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1438:177,message,message,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1438,1,['message'],['message']
Integrability,"This line is the origin of our problem: https://github.com/sofa-framework/sofa/blob/9c85b17b55f4cd1a14927090754004aaba51b802/SofaKernel/framework/sofa/helper/system/PluginManager.cpp#L103; This line was creating entries in m_pluginMap because pluginPath is not always a path.; It is not a path when we are reading ""plugin_list.conf.default"" file to auto-load plugins at startup. This PR adds getPlugin method to avoid future operator[] mishandlings. It gets a loaded plugin by paths OR names (even if the map is based on paths). Conclusion: **`operator[]` on maps should be globally avoided for read access**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:709,message,message,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,1,['message'],['message']
Integrability,This member was an error prone copy of `PluginRepository::vpath`.; PluginManager is now always in sync with PluginRepository. AddPluginRepository component has no effect without this change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/947:290,message,message,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/947,1,['message'],['message']
Integrability,"This part of the code is dependent from Sofa.GUI and when `Sofa.GUI.Qt` was no found, `Sofa.GUI` was never linked, causing compilation error. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4227:25,depend,dependent,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227,1,['depend'],['dependent']
Integrability,"This plugin allows us to load images using CImg API. For now this plugin is located in applications/plugins of Sofa, and does not supersede ImageQt/ImagePNG/ImageBMP. Tests and a simple scene to test all the supported formats are provided. An other pull-request will be done to remove ImageQt/ImagePNG/ImageBMP and their posssible dependencies in SofaKernel (e.g libpng), following further discussions. Linked to issue #51 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:331,depend,dependencies,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"This pr clean most of warnings; The code has never been changed in terms of runtime, but sometimes one may thing that warning were here to detect potential error (passthrough in a case for instance).; The main remaining warning is the alreadydefine class but i will do that in a separate pr since I'm scared it changes behavior on other platforms. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1549:447,message,message,447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1549,1,['message'],['message']
Integrability,"This pr only goal is to test the Regression [PR #68](https://github.com/sofa-framework/Regression/pull/68). [ci-depends-on https://github.com/sofa-framework/Regression/pull/68]. PR hijacking!; [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/138]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4942:112,depend,depends-on,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4942,2,['depend'],['depends-on']
Integrability,"This prevents creation of nodes / components with empty `names`, when instantiated in a ""non-conventional"" way:. ```py; py:; node.createChild(''); node.createObject('MyComponent', name=''); ```. ```xml; xml:; <Node name=""""></Node>; ```. By default, if `name` is not provided, unnamed is set in `name`. but if `name` is forcefully set to `""""`, there's currently no safeguards. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1009:475,message,message,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1009,1,['message'],['message']
Integrability,"This pull request aims at add a new extension file (.tmg) supported by DistanceGrid. This extension file is used to represent a shape : it's a list of values corresponding to the function evaluated at each point. All the data are placed one after the other in a single column. ; It's a minor add which does not disturb anything in SOFA, so it shouldn't raise any problems. (edit - 08/08/17) The file is now able to provide the size of the grid : these 3 values (nx, ny, nz) are placed at the top of the .tmg file and are used at the DistanceGrid instaciation.; Example : . **Shape.tmg**; *Header with the grid size*; >150; 150; 150. *Values of the grid*; > 0.015; 1; 1; ... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/353:773,message,message,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/353,1,['message'],['message']
Integrability,"This pull request aims at making the gravity clearly appearing in object nodes as a GravityForceField.; Old way to define gravity still works and is not deprecated. Main changes:; - By implementing this, the Mass is not inheriting from ForceField anymore.; - The optional mechanism of a separate gravity and the **Gravity** class are also deprecated.; - Default gravity is now 0 (therefore some scenes might fail and need an update). The GravityForceField can:; - either be manually added by the user in the node; - or the gravity can still be globally defined in the root node which will create the automatic creation of a GravityForceField for each mass in the graph. Fix: #2683. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/305]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/56]; [ci-depends-on https://github.com/sofa-framework/ci/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988:686,depend,depends-on,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988,3,['depend'],['depends-on']
Integrability,"This pull request allows the usage of the advanced timer ; 1. In the standard way; `runSofa -c 1`; 2. Only for the init functions:; `runSofa -c 0`; 3. For the init function and for every second step:; `runSofa -c -2`. Moreover, the usage of the advanced timer in batch mode works again:; `runSofa -c -2 -g batch -n 10`. Fixes #357 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/468:432,message,message,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/468,1,['message'],['message']
Integrability,This pull request contains few cleaning cout/print/comments. @ChristianDuriez also added the dot poduct for SofaPython Quaternion; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/404:230,message,message,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/404,1,['message'],['message']
Integrability,"This pull request does not change anything to the compilation, it only affects the install phase. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/383:197,message,message,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/383,1,['message'],['message']
Integrability,"This pull request enhances the Operation::createPerformer function to provide more detailed error messages when it fails to create an InteractionPerformer. The function now includes precise diagnostic messages that indicates where the failure occurred, improving the ease of debugging and maintaining the code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880:98,message,messages,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880,2,['message'],['messages']
Integrability,This pull request fix the problem proposed in issue #1390 . **1. BoxROI.inl**; Move the code piece; ```; if(!d_doUpdate.getValue()){; return ;; }; ```; in front of indices clear operations. **2. RestShapeSpringsForceField.inl**; Add warning message in function recomputeIndices(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1391:241,message,message,241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1391,2,['message'],['message']
Integrability,This pull request removes classes implementing High Order simplicial elements from SOFA.; Those classes have been moved to plugin sofaFramework/ plugin.HighOrder; Updates include . - removing topological classes for High order triangulation and tetrahedral meshes; - removing tests associated with topological classes; - removing topological and mechanical mapping between regular and highorder meshes; - update of MeshMassMatrix by removing code to compute mass of high order elements. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222:586,message,message,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222,1,['message'],['message']
Integrability,This pull-request adds the following features ; - add numerical integration on tetrahedra and triangles; - add a mechanical tag on a PointSetGeometry object in order to find its associated MechanicalObject; - add the orthogonal of a 2d vector; - add support of high order elements in VTK and Gmesh mesh loaders. It also fixes some bugs ; -Quand2Triangle Topologivcal mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:64,integrat,integration,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,2,"['integrat', 'message']","['integration', 'message']"
Integrability,"This pull-request is related to the issue ; https://github.com/sofa-framework/sofa/issues/64 . It appears that in 2/3 of the cases only 1,0,0 syntax is allowed while the others also; allows ""red"" ""blue"" etc..for color definition.; ; This is an UI consistency issue. Because of UI consistencies our users think that sofa is:; - hard to understand & master; - not well done; ; So we should unify that (if we want to smooth our user&own experience with sofa).; So I add a TODO where this should be done and maybe in the future I will fix some of them :). This Pull-request depends on the following pull-request:; - https://github.com/sofa-framework/sofa/pull/58",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/65:570,depend,depends,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/65,1,['depend'],['depends']
Integrability,This removes some override warnings that were (re)introduced recently. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/520:170,message,message,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/520,1,['message'],['message']
Integrability,This removes warnings that appear when running runSofa from a directory where it was installed from source. This should not affect compilation in any way (but not sure how it would affect packaging Sofa). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/687:304,message,message,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/687,1,['message'],['message']
Integrability,This scene makes no sense since no ShapeMatchingForcefield is existing; in SOFA public. Another scene already shows ShapeMatching example; using the ShapeMatching engine:; ICPRegistration_ShapeMatching_Engine.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/331:313,message,message,313,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/331,1,['message'],['message']
Integrability,This shoud fix #1243 and several issues pointed out on the forum. Return was preventing from recomputing topology internally. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245:225,message,message,225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245,1,['message'],['message']
Integrability,This should avoid confusion in constraint resolution when mixing integration factors.; Let's see how this affect the CI. This affects the UncoupledConstraintCorrection : the flag _useOdeSolverIntegrationFactors_ is now true by default. This enforces to respect values returned by the ODESolver. See this [forum topic](https://www.sofa-framework.org/community/forum/topic/bilateralinteractionconstraint-reduces-gravity-by-100x/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:65,integrat,integration,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,2,"['integrat', 'message']","['integration', 'message']"
Integrability,This should avoid issue #768. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/778:129,message,message,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/778,1,['message'],['message']
Integrability,This should avoid us to scroll through the entire build output searching for a crashed unit test (often due to a segfault).; It is just re-printing the output that was already printed. Some dump is still needed to debug the crash (see PR #191). This PR fixes issue #149. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/195:370,message,message,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/195,1,['message'],['message']
Integrability,"This should fix ""a few"" failing scene tests due to ColladaSceneLoader on Windows. See the Details tab of https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64_pr1/526/warnings2Result/category.96784904/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/504:311,message,message,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/504,1,['message'],['message']
Integrability,This should fix CMake errors like `file cannot create directory: C:/softwares/sofa-soft-build/$C:/softwares/sofa-soft-install/plugins/SofaMiscCollision/lib` on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154:268,message,message,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154,1,['message'],['message']
Integrability,This should fix all the scene crashing when performing topological change with some mechanicalMapping in the scene. Like for example identityMapping between the mechanicalObject and the OglModel. This is a temporary fix. Those 2 visitors will be removed as soon as all the component listed in #810 will be updated to use TopologicalData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/880:437,message,message,437,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/880,1,['message'],['message']
Integrability,This should fix failing scene tests due to issofa_plugin merge ; Failures were due to wrong `plugin_list.conf` path implying no plugin loading. Added some output to understand better were this list is loaded from (especially in case of failure). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502:345,message,message,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502,1,['message'],['message']
Integrability,"This should fix the CUDA issue on CI. Issue was due to SofaCUDA having a version number (instead of NO_VERSION) and thus not being deactivated for scene tests by CI scripts (main.sh). We chose to deactivate SofaCUDA for scene tests because VMs can't run CUDA (or can they?).; In CI, SofaCUDA is only compiled, never executed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1123:425,message,message,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1123,1,['message'],['message']
Integrability,This should fix the failing ImagePng test failure. . The problem is the consequence of the use of the ExpectMessage RAII without adding a CountingMessageHandler to the MessageDispatcher. This is quick fix but more fundamentally we need an API improvement to make; that automatical/hidden. But how to do that in an efficient way is yet unclear.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/92:168,Message,MessageDispatcher,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/92,1,['Message'],['MessageDispatcher']
Integrability,This shouldn't break anything and is a first step toward the slighgly more ambitious pr #601 . CHANGELOG:; - update gtest from their master (version 1.9: sha1 447d58b4ee8ea96b4757a5bb5f0b3be75af6c2a1); - update the CMakeLists so that they correctly export the needed -D to be used as a shared library; - Fix the problem of missing GTEST_API_ operator<< gtest by implementing the function in TestMessageHandler_test instead of gtest. NB: A better FIX for the GTEST_API_ operator<< could be to make submit PR to gtest but I have no more time left. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604:647,message,message,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604,1,['message'],['message']
Integrability,"This solves the issue : [runsofa] -a -n conflict for batch #552; In case to run infinite iterations, the command to be run in command line is: ; bin/runSofa -g batch -n -1. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/610:272,message,message,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/610,1,['message'],['message']
Integrability,"This version is a following the effort started in #1605 and #1611 to clean TypeInfo. . In #1611 I tried to remove the hard dependency to all typeinfo and ODR violation by using the TypeInfoRegistry to get ; the typeinfo. The missing types were detected at runtime... In this version I found what is actually a much easier solution that removes the ODR violation and removes the need to typeinforegistry. . There is also two positive sides effects I see:; - in #1611 the missing types (one not having a datatype) were detected at runtime while in this one they are detected at link time with a single message like the one:; ""; undefined reference to 'sofa::core::objectmodel::Data<sofa::helper::vector<sofa::core::topology::Topology::Pyramid>::getValueTypeInfo() ; ""; - the mechanism is combined with the systematic use of declaring extern class Data<MyType>. The TypeInfo registration/generation is done where the Data<MyType> is not declared as extern. Comments welcome,; D. ; PS: I was also playing with Data/TData but this is for another PR so you can skip that part. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1632:123,depend,dependency,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1632,2,"['depend', 'message']","['dependency', 'message']"
Integrability,This was only needed so that Data can be used with Link. As this is now a; deprecated feature we can remove this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1541:213,message,message,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1541,1,['message'],['message']
Integrability,"This was preliminary introduced in SofaGLFW/SofaImgui, where a new GUI is loaded at run-time; Contrary to the batch/qt/headlessrecorder GUIs which are forcefully linked at compile-time through SofaGui, which could depend (or not) on Qt, etc according to the CMake config,. SOFANG works already made all the different GUIs as independent libraries but ultimately the SofaGui was still present because of the fact that runSofa was still relying on this mechanism. Now :; - Qt/Batch/HeadLessRecorder are loadable plugins and register themselves in the GUIManager, if loaded .; - Batch is still forcefully loaded by runSofa ; otherwise it could be possible to run SOFA without any GUI (I am not against having this possibility tho); - SofaGui is officially deprecated 🎇. Remarks: ; - after this PR, I would really like to move HeadlessRecorder in applications/plugins (either that in the ""official"" SOFA trunk) as it is only supported on Linux, needs X libs dev and I dont even know if people really uses it.; - showing help will only show the help for the runSofa options not the ones introduced by the eventual plugins....; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3550:214,depend,depend,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550,1,['depend'],['depend']
Integrability,"This will avoid updating each year the header, thus polluting the history of the code.; Update list of authors of SOFA. Perl code used for additional cleaning:; ```batch; perl -0777 -i -pe ""s/((\*){78}\/\n)((\/)(.*?)(\n)|\n|(\s*?)\*(.*?)(\n))/\1/s""; ```. Following files could also be discussed:; - SofaKernel/modules/SofaBaseCollision/IntrCapsuleOBB.inl; - SofaKernel/modules/SofaHelper/src/sofa/helper/RandomGenerator.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/gl/Trackball.cpp // h ; - SofaKernel/modules/SofaHelper/src/sofa/helper/polygon_cube_intersection/fast_polygon_cube_intersection.cpp // h; - applications/projects/meshconv/meshconv.cpp; - SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1375:821,message,message,821,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1375,1,['message'],['message']
Integrability,"This will enable creating SOFA packages on Linux when Qt is installed from the package manager instead of the Qt installer. It also fixes some missing dependencies on Linux distros other than ubuntu 18.04. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728:151,depend,dependencies,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728,1,['depend'],['dependencies']
Integrability,This will fix the crashing DistanceGridForceField-liver.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/591:160,message,message,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/591,1,['message'],['message']
Integrability,"This work aims at having a complete Doxygen documentation of SOFA components, especially concerning their Datas. I used the shell script doxygenDataComments.sh to; 1. Force each Data to be defined on one line; 2. Add an inlined and Doxygen-formatted comment on each Data (if no comment found) copying the description used in `initData`. Obviously this has not a 100% coverage (it ""only"" affects Data<.*> written members) but it's still a very good start. PS: our nightly-generated Doxygen is ready to receive these changes: https://www.sofa-framework.org/newapi. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/546:662,message,message,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/546,1,['message'],['message']
Integrability,Title says all (at least on Windows/MSVC). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1425:142,message,message,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1425,1,['message'],['message']
Integrability,Title says all :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] has been reviewed and agreed to be transitional.; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/240:118,message,message,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/240,1,['message'],['message']
Integrability,"Title says all. Should fix project using SofaGUI as dependencies. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2279:52,depend,dependencies,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279,1,['depend'],['dependencies']
Integrability,Title says it all. SofaMacros.cmake was becoming more and more messy. Nothing changes in the macros/functions (I promise :angel:). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1477:230,message,message,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1477,1,['message'],['message']
Integrability,Title says it all. Sorry for the messy quick fixing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/619:152,message,message,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/619,1,['message'],['message']
Integrability,Title speaks for itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/981:124,message,message,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/981,1,['message'],['message']
Integrability,To complete the new doc page on [ShewchukPCG](https://www.sofa-framework.org/community/doc/components/linearsolver/preconditioned-cg/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1420:235,message,message,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1420,1,['message'],['message']
Integrability,"To experiment a new handling of sparse matrices under mappings in our plugin, a few changes are needed in the core of SOFA.; Main changes:; - Add a new function in MechanicalObject (commit 6a6fd98).; - Refactoring of MatrixDerivId: warning holonomicC() is deprecated --> replaced by constraintMatrix (commit 966f9af).; - Change allocation in createMatrix from a fullMatrix to a sparseMatrix.; Linked to #26 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276:508,message,message,508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276,1,['message'],['message']
Integrability,"To move forward in order to be ready for c++20 modules we need to clean the dependency graph of SOFA. This PR is going in this direction by removing most of the dependency to BaseVector.h, BaseMatrix.h and StringUtils.h. . In SOFA we often use this pattern; ```cpp; class MyClass; {; public:; typedef int Index; ; };; ``` . Which impose a dependency to the full MyClass definition to manipulate indices. ; I design pattern avoiding this problem is used in the PR. This PR work as the following: ; ```cpp; /// Forward declaration; class MyClass;; typedef int MyClassIndex;. /// Definition ; class MyClass; {; public:; typedef MyClassIndex Index; ; };; ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1509:76,depend,dependency,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1509,4,"['depend', 'message']","['dependency', 'message']"
Integrability,To move rmath.h from the header I had to moved the code that rely on rmath into Vec.inl so that the include is not spread all around the codebase. Now if you want to instanciate special version of the Vec templates you need to include Vec.inl either. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1543:352,message,message,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1543,1,['message'],['message']
Integrability,To prepare for runSofa2 i feel the need to refactor some aspects. . CHANGELOG:; - ADD a Camera object inheriting from BaseCamera so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement your own 'application specific behavior' by using an external Controller (eg: PythonScriptController).; - ADD a link in BaseCamera to a BackgroundSetting so different camera can have different background. ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object; - Update the caduceus example.; - Light object now have a drawSource so that it is possible to draw the source from without having to change the d_drawSource data field.; ; This PR replace #674 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:880,message,message,880,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,1,['message'],['message']
Integrability,"To register the data type info into the TypeInfoRegistry I used partial specialization of the Data class. ; The default implementation of AbstractTypeInfoRegistration is using the old code system (which imply a dependency to all the TypeInfo_xxxx.h). . For progressive migration to new typeinfo system, the selected typeinfo are specializating their custom AbstractTypeInfoRegistration. This custom registration is using the new system. To make sure that the partial specialization is used, the migrated types are declared as extern so we are sure there is a single registration. . An additional advantage of explicit extern declaration of Data is that this avoid bloating the compiler with all the data type to instanciate in every compilation unit. . Done:; - Data[bool]; - Data[RGBAColor] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3289:211,depend,dependency,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3289,1,['depend'],['dependency']
Integrability,To relax after discussions on DataEngines i clean that;. This one is based on stc5 branch (not master). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/818:203,message,message,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/818,1,['message'],['message']
Integrability,"To reproduce the bug, simply add a `msg_error()` at the first line of `static std::string computeSofaPathPrefix()` (sofa/helper/Utils.cpp) on a mac OSX system. I believe this bug was due to an order mixup of global static initializer since this bug wasn't affecting Linux (not sure about Windows). I would need more time to prove this though. I moved the faulty global static intializer to local static initializer and that fixed the crashes. It may be a good idea in the future to minimize the uses of static objects (singletons, static global variables, etc) since they are pretty hard to debug and can cause behaviors dependent of the compiler used. @guparan could you test this in your PR #635 (by reinserting the msg_error) and make sure that the seg fault is gone?. Fixes #636 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642:621,depend,dependent,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"To use a LinearForceField, we need to specify a series of key times associated with forces. However, when simulation time goes beyond the last key time, the force becomes zero instantly. This PR changes it so that it stays at the last specified force instead.; There are a few more small changes to remove some warnings and to use SOFA coding conventions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/525:455,message,message,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/525,1,['message'],['message']
Integrability,"Today we have many different way to compile plugins (all ways : through SOFA in files, through SOFA with EXTERNAL_DIRECTORIES, out-of-SOFA).; It is misleading for users, we have still plugins in the core (making SOFA heavy). A proposal: why not going towards a full **out-of-tree compilation for SOFA plugins** (located in _applications/plugins_) ?. It would enforce us to:; - sort used and supported plugins vs. others; - clean dependencies in CMakeLists; - then we would actually have to change the CI so that these plugins are built with a SOFA docker image. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1285:429,depend,dependencies,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1285,1,['depend'],['dependencies']
Integrability,"TopologySubsetIndices can be initialized before their corresponding TopologyContainer is total init depending on the component graph order.; Therefor the member `m_lastElementIndex` used to store the size of the TopologyBuffer could be set to 0. Override the method `getLastElementIndex() ` in `TopologySubsetIndices` (and put it in const) to get the number of points as a TopologySubsetIndices is always used on the Point topology. This method is called before removing elements to make sure we use and up to date value of m_lastElementIndex before doing any process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3331:100,depend,depending,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3331,1,['depend'],['depending']
Integrability,"Towards a green dashboard. Scene was broken since the change on StaticSolver; But I am not convinced it was even working before, the simulation seems very unstable. A python script handling the incremental loading is added. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1064:323,message,message,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1064,1,['message'],['message']
Integrability,Triangle numerical integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:19,integrat,integration,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,1,['integrat'],['integration']
Integrability,"TriangleOctree is used in some case where people wants to do ray tracing on an octree structure (filled with triangles); It makes more sense to move it in helper, as it is not a component but a shared utility class potentially used by something else than ""GeneralCollisionMesh"" things (whatever that means). Based on; - #2763 ; ; Breaking 'cause I removed dependency on VisualTool (Sofa.Core) to use directly Drawtool. Still, it has a compat file to redirect deprecated usages.; Removed more useless headers...; This class would need a quite heavy facelift BTW. PS: There was a weird include of defaulttype/fwd.h in DrawTool which was undetected until now, 🤥 ??. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2805:356,depend,dependency,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2805,1,['depend'],['dependency']
Integrability,"Triangles `or `TrianglesAroundEdges `as well as `d_triangles `array inside a `TetrahedronToplogy `where empty at start and created only the first time a getter is called.; For example: `getEdgesInTriangleArray()` was calling: `if(m_edgesInTriangleArray.empty()) createEdgesInTriangleArray()` . This works but means at start component are not fully init (potential unstable behavior) and there is no warranty at which timestep buffer will be created. ; Furthermore means that getter are not const and could change the content of the container which is a bad design (in my opinion). **This PR force the computation of all buffers at component init** using a dedicated method `initTopology()` which is called in cascade -> `Tetrahedron::initTopology()` will call `Triangle::initTopology()` -> `Edge::initTopology()`; **and remove all buffer creation call from the getter.**. - Additional changes: ; - Add more check in the buffer creation methods. Potentially exit if creation is not possible (will return bool in future changes).; - Always check buffer size access in the getter. If out of bound acces, returns Invalid element and only emit a warning if CHECK_TOPOLOGY is ON, as this call could be logical and the caller should check the invalid return. ; - Update all topologicalMapping to init the target topology at end of mapping init. ; - **Add some static invalid buffers in sofa::core::topology::Topology.h -> Im not fully happy about those add. Any better suggestion is welcomed.**. fixes #746; fixes #955; fixes #956 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/967:1772,message,message,1772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/967,1,['message'],['message']
Integrability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in Sofa modules see #1237 for changes in SofaKernel. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1236:379,message,message,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1236,1,['message'],['message']
Integrability,Tried not to go too quickly....; - Replaced serr by msg_error/msg_warning and msg_info regarding the case.; - Remove all commented serr.; - Use stringstream to accumulate errors when inside a loop. This PR only trigger classes in SofaKernel. See #1236 for changes in Sofa Modules. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1237:380,message,message,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1237,1,['message'],['message']
Integrability,Try to fix additional warnings !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1210:133,message,message,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1210,1,['message'],['message']
Integrability,"Trying to include the SofaExporter module in an external project (out-of-tree build of a plugin || test) was not functional since include directories were not exposed properly. I took inspiration from CImgPlugin for this PR, which uses CMAKE_CURRENT_SOURCE_DIR to expose the target's include directory.. but I believe this is actually wrong as this corresponds to the path to the sources (`/home/bruno/dev/sofa/modules/SofaExporter/src/` in my case for instance) and not to the installed include directory, (which should be `/home/bruno/dev/sofa/build/install/include/SofaExporter/src/SofaExporter` on my machine). I took a look at other plugins & pluginized modules & they all seem to do this, so Idk if it's a mistake or done on purpose..?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/975:842,message,message,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/975,1,['message'],['message']
Integrability,Turn ForceField init method as final and internally call a delegate fonction doInit which can be overide. This is to avoid adding a call super in each forcefield as ForceField::init has to be called in the current api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506:318,message,message,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506,1,['message'],['message']
Integrability,"Two change needed by the SofaPython3 plugin. . - In BaseData Some method have two version, one without arguments the other with an ExecParm. In pybind11 we need to differentiate explicitely the two version making the code more complex. As I see no good reason why to keep the two version in Sofa I merged these two into one by using a default param = nullptr. . - I have added a join/split function in the StringUtils class. . - In SimpleAPI I found allowing BaseObjectDescription useful to create object and node. So I added new functions.; _____________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/860:640,message,message,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/860,1,['message'],['message']
Integrability,Two interface for both static and dynamic topologies but they are identitical !. 1. Looking for removing all getMeshTopologyLink with getMeshTopology; 2. Then remove getMeshTopologyLink safely. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1297:4,interface,interface,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1297,1,['interface'],['interface']
Integrability,Two minor changes:; - Remove FixedConstraint redundant with LinearMovementConstraint (on same DOFs); - Improve warning comment in MeshMMass when using explicit resolution (accFromF) with non-lumped sparse matrix. NOTE: I realized no sparse MassMatrix can therefore be used in explicit formulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/983:397,message,message,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/983,1,['message'],['message']
Integrability,"Two new menu entry are added in the SceneGraph view to jump to the source file location corresponding to the selected object. This PR is based on #1012 to get the file location. ; By default qtcreator will be used to open the file. ; But this can be changed by editting the config file saved by the QSetting mecanism. . NB: The ""Go To implementation"" really make sense when using STLIB as it allows ; to jump where a prefab is implemented. It would be nice if we could do the same for c++ ; but this is of lesser interest ...because we need to compile sofa to see a change :) . EDIT: small video show how it works ; [![video](http://img.youtube.com/vi/zzOY-Lt0vgM/0.jpg)](http://www.youtube.com/watch?v=zzOY-Lt0vgM); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1013:816,message,message,816,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1013,1,['message'],['message']
Integrability,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996:559,message,messages,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996,2,['message'],"['message', 'messages']"
Integrability,"Two pendulum links by their extremities. ![image](https://user-images.githubusercontent.com/10572752/226943766-038894a0-5298-4a7e-a6c1-bd5a29d2d0a8.png). [ci-depends-on https://github.com/sofa-framework/Regression/pull/40]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3742:158,depend,depends-on,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3742,1,['depend'],['depends-on']
Integrability,Two thing:; - @epernod some of your code includes changes not merged yet on component**S**tate; - ```Sleep()``` on Linux is not working. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1393:236,message,message,236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1393,1,['message'],['message']
Integrability,"UPDATE: SofaHelper compilation with msvc. libpng should not be forced; to be linked using pragma directive. The name of the library may vary,; and it the debug version may well not be available, and its; unavailability should not break the debug build. I fell in the same problem as the one mentionned in issue #443 while compiling; with msvc in debug, without having on my system a version of the libpng ; library called ""libpngd.lib"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/446:536,message,message,536,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/446,1,['message'],['message']
Integrability,"Unfortunately Gaurab seems to be unreachable those days. As I want to use his good work, here is a quick cherry pick of his PR #639. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/669:232,message,message,232,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/669,1,['message'],['message']
Integrability,"Uniform size type to be same type as index_type; + move index_type to sofa namespace (in sofa/config.h); (was located in defaulttype before, does not really make sense). So now : ; - index_type is defined as sofa::index_type; - size_type is defined as sofa::size_type ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1515:369,message,message,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1515,1,['message'],['message']
Integrability,Uniforming FEM interface methods,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/134:15,interface,interface,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/134,1,['interface'],['interface']
Integrability,"Unix timeout command is now accessible in Windows VMs (using ""Git for Windows"" Bash). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/379:185,message,message,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/379,1,['message'],['message']
Integrability,"Update CONTRIBUTING.md further to 20170503 SOFA meeting. - Track the status of each pull request using labels.; - If an issue reports a bug or any abnormal behavior in SOFA, a test highlighting the issue must be written. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260:320,message,message,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260,1,['message'],['message']
Integrability,Update ChangeLog to better guide users when facing issues with recent breaking PRs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1562:183,message,message,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1562,1,['message'],['message']
Integrability,Update SofaMacros.cmake by setting the policy CMP0057 NEW for supporting the IN_LIST operator of if(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1454:202,message,message,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1454,1,['message'],['message']
Integrability,Update a Eigen wrapper for SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2474:15,wrap,wrapper,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2474,1,['wrap'],['wrapper']
Integrability,Update further to work on the upcoming Optimus plugin:; thanks @guparan for solving the issue !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1498:196,message,message,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1498,1,['message'],['message']
Integrability,"Update the guidelines so that they take into account the latest discussions and conclusion regarding the policy for:; - auto,; - epsilon,; - messaging,; - getContext(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1135:268,message,message,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1135,1,['message'],['message']
Integrability,Updating the dependency graph of component & data/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597:13,depend,dependency,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597,1,['depend'],['dependency']
Integrability,Use of embedded external dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:25,depend,dependencies,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,1,['depend'],['dependencies']
Integrability,Using #ifdef all around is really bad and ugly. If you need the feature to be back; please make a PR with a non invasive design. If you don't understand why it is so bad to have #ifdef ; used that way please ask I will explain with more details. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1075:347,message,message,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1075,1,['message'],['message']
Integrability,"Using the newly released CMake 3.15, the configuring stage fails with:. CMake Error at SofaKernel/SofaFramework/SofaMacros.cmake:686 (message):; Missing parameter TARGETS.; Call Stack (most recent call first):; applications/plugins/SofaMiscCollision/CMakeLists.txt:82 (sofa_generate_package). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105:134,message,message,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105,1,['message'],['message']
Integrability,"Various cleanup and better checks at the init stage to make sure the topological mappings have everything they need. Only Hexa2Quad, Quad2Triangle and Tetra2Triangle for now. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1126:274,message,message,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1126,1,['message'],['message']
Integrability,Various fix from my working branch:; - FIX: wrong msg_error instead of msg_info in PrecomputedConstraintCorrection; - FIX: warnings when drawing collision interaction using UnilateralInteractionConstraint; - FIX: OglAttribute handleTopologyChange method by using a PointData for value array.; - CLEAN: some logs in PointModel; - FIX: NearestPointROI to use rest_position instead of position. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1159:491,message,message,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1159,1,['message'],['message']
Integrability,"Very basic PR just to let you know that the CGAL plugin is not compatible with latest CGAL.; As is, it compiles with CGAL <= 4.9.1. CI build is unnecessary for this PR.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/510:269,message,message,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/510,1,['message'],['message']
Integrability,Very simple PR to allow Windows loading MultiThreading plugin.; Will fix these errors: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64/550/warnings2Result/category.96784904/. [ci-build][with-scene-tests]; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/507:319,message,message,319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/507,1,['message'],['message']
Integrability,"Very useful collection of header-only utilities : https://github.com/nothings/stb. This PR uses **stb_image** and **stb_image_write** to read/write jpeg,png,etc. images directly without any reliance on libpng or libjpeg.; Practically, This PR almost depracates the use of CImgPlugin (at least as an image loader). ; The only thing stb (compared to cimg) is that it cannot load is the TIFF format... It allows us to :; - not depend on any external library anymore (libpng, libjpeg); - not need anymore to load the CimgPlugin to get images in a scene (which was a bit weird...). **stb** licence is either MIT or even public domain (!). Some questions about this PR:; - should we fetch stb at cmake configure time ? IMO no because it would mean we really need an Internet connection to compile the core of SOFA; - should we put all the files from the stb repo ? IMO no, the other files wont be used for sure. That's why the stb dir contains only the two files we want for this PR. <img src=""https://user-images.githubusercontent.com/11028016/146752568-e4f392d5-5ecd-4f32-be92-32f48b53f5ab.PNG"" width=""400"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551:424,depend,depend,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551,1,['depend'],['depend']
Integrability,VisualTransform moved from SofaBaseVisual to SofaGeneralVisual. ChangeLog:; - FIX: compilation LeapMotion plugin (issue since v16.12). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296:234,message,message,234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296,1,['message'],['message']
Integrability,WAIT for #1283 (priority). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1339:126,message,message,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1339,1,['message'],['message']
Integrability,WIP branch fixing test failures caused by warning/error/deprecated messages issued from #213. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] #213 has been merged. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/237:67,message,messages,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/237,2,['message'],"['message', 'messages']"
Integrability,"WIP project: Add window to display Data graph using [NodeEditor](https://github.com/paceholder/nodeeditor) library. To use it, install NodeEditor.; check option in CMake: SOFA_BUILD_NODEGRAPH; and until better setup, manually set: ; - NODEEDITOR_INCLUDE_PATH to NodeEditor-install/include; - NODEEDITOR_LIBRARY_RELEASE to NodeEditor-install/lib/nodes.lib. DataGraph can be displayed in top menu: Edit->Data Graph... ![graphData_04](https://user-images.githubusercontent.com/21199245/66931696-c2e1f800-f036-11e9-91da-3f6cebcb6880.jpg); ![graphData_03](https://user-images.githubusercontent.com/21199245/66757188-e45aac80-ee9b-11e9-8065-6f379be060b4.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1187:753,message,message,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1187,1,['message'],['message']
Integrability,"Wait for #4058 to be merged to solve the failure. [ci-depends-on https://github.com/sofa-framework/ManifoldTopologies/pull/7]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4065:54,depend,depends-on,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4065,1,['depend'],['depends-on']
Integrability,Warning EXTERMINATOR .. or almost !; I also created a dedicated issue ( #1166 ) on deprecated to remove at v19.12 release ! Get ready for the coding sprint !. Log of important changes:; - ImageTypes: update use of constant indice; - BarycentricMapper : use of new templates on friend class; - AttachConstraint : Add delegate function instead of using twice the same name. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1167:471,message,message,471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1167,1,['message'],['message']
Integrability,"Warning specific to windows fixed for function specialization (class templated, set the specialization in cpp), fix some headers (Mapping & MultiMapping). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/738:254,message,message,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/738,1,['message'],['message']
Integrability,Warnings flags were declared in add_definitions (instead of cxx_flags). It is messing with projects using the new CUDA language feat. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1368:233,message,message,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1368,1,['message'],['message']
Integrability,Warnings were due to unused function and overwriting function (clang). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/229:170,message,message,170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/229,1,['message'],['message']
Integrability,"Warns the user when a non-symmetric matrix is produced by a non-linear mapping while a symmetric linear solver is used. The message looks like:; ```; [ERROR] [RigidMapping(RigidMapping1)] The geometric stiffness of this mapping is a non-symmetric matrix. It means a linear solver supporting non-symmetric matrices must be used, but it is not the case here. To fix your scene, you have two options: 1) Use a linear solver supporting non-symmetric matrices, 2) stabilize the geometric stiffness with the Data 'geometricStiffness' set to 'Stabilized'; ```. Note that the detection was already considered in the past through a `bool` in the `MechanicalParams`, but not used at all. Note that even if a linear system supporting non-symmetric matrices is used, the exact geometric stiffness computed in `RigidMapping` leads to large stability issues in `examples/Component/LinearSystem/MatrixLinearSystem.scn`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3838:124,message,message,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3838,1,['message'],['message']
Integrability,We definitely need to get timing and position regression feedback from (at least a few) scene tests. Already existing tools for position regressions:; - applications/plugins/SofaTest/SofaTest_test/Regression_test; - applications/projects/sofaVerification. TODO:; - [x] Choose one tool to update and reactivate; - [ ] Add execution time measure; - [x] Integrate it in CI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/801:351,Integrat,Integrate,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/801,1,['Integrat'],['Integrate']
Integrability,We had some errors while compiling sofa 17.06 on macos with Apple LLVM 9.0.; This was caused by two oddly inlined functions. So here's a PR removing the inline declaration.; We hope it'll be useful. Cheers.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/444:307,message,message,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/444,1,['message'],['message']
Integrability,"We need to define a better design to handle cross-dependency in the internal update of components (now using the callback mechanism introduced in #1406).; Cross-dependency between data (such as massDensity vs totalMass) is not currently well handled. Then, we could proceed to the deprecation of the doUpdateInternal see #3900",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2173:50,depend,dependency,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2173,2,['depend'],['dependency']
Integrability,We need to:; - first locating csparse and newmat in SOFA; - move the dependency back into the appropriate plugins. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1309:69,depend,dependency,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1309,1,['depend'],['dependency']
Integrability,We ran into some more compile errors on windows using MSVC 2015. libQGLViewer wouldn't compile without those missing headers. Here's a quick fix but you might want to update libQGLViewer to the latest version (2.7.0). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/461:317,message,message,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/461,1,['message'],['message']
Integrability,We would like to get an Eigen sparse matrix wrapper (e.g. the one from Caribou plugin).; SOFA already contains such wrappers: EigenMatrix and EigenVector. Existing Eigen wrapper are also available in Caribou: it could be copied in SOFA (sofa.linearalgebra) to have this unique wrapper. Would you mind @jnbrunet ?. **TODO**; - What does the existing wrapper today? and What are the differences? → issue ??,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2474:44,wrap,wrapper,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2474,5,['wrap'],"['wrapper', 'wrappers']"
Integrability,"When I configure the source sofa/src in cmake, the error is as:; ![Cmake_error](https://user-images.githubusercontent.com/22396672/93750818-b135a700-fc2e-11ea-996d-ac6cf1acb4df.png). CMake Error at CMakeLists.txt:121 (message):; Boost (1.54.0 or higher) is mandatory. Note that Boost autodetection on Windows was removed. Please follow CMake documentation to find Boost on your system. Hint: set BOOST_ROOT to your Boost location. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1494:218,message,message,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1494,1,['message'],['message']
Integrability,When I have free time but cannot be concentrated I do trivial 'cleaning' changes resulting in this kind of PR where I replaced the std::cout by msg_info. CHANGELOG for @hugtalbot :; Trivial replacement of std::cout by msg_info; - [SofaUserInteraction] ; - [SofaValidation]; - [SofaVolumetricData]; - [SofaOpenGl]; - [SofaNonUniformFem]; - [SofaPython]; - [SofaSparseSolver]; - [SofaSphFluid]; - [SofaTopology]; - [SofaUserInteraction]. I also replaced this code pattern:; ```cpp; #ifndef NDEBUG; std::cout << blahblah; #endif; ```. into this pattern:; ```cpp; dmsg_info() << ; ....; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/255:687,message,message,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/255,1,['message'],['message']
Integrability,When a message does not have an 'suggestion' text then sofa will; crash. Because of Index out of bound.; This PR fix that.; Fixes #491 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/479:7,message,message,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/479,2,['message'],['message']
Integrability,"When a texture cannot be loaded the OglModel will crash. This PR fix that. ; As the image loader are now ""optional"" through CImgPlugin. . NB: I cannot prevent myself to clean a bit the commented code because I; cannot do bug tracking in the middle of the mess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/474:360,message,message,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/474,1,['message'],['message']
Integrability,"When addChild, removeChild, addObject, removeObject etc. are public. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1470:168,message,message,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1470,1,['message'],['message']
Integrability,"When an imported module is modified, the sofa app needs to be closed and launched again so the sofa-python interpreter integrates the modifications.; How to force reloading imported modules so any modification can be integrated when reloading the scene?; (right now, the reload works for modified main scene file, but is always using the original module code)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/193:119,integrat,integrates,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/193,2,['integrat'],"['integrated', 'integrates']"
Integrability,"When compiling a project/plugin with c++17, it fails due to std::binder used in Sofa and Eigen. This functionality was depreciated in c++11 and was removed in c++17 (lambda expressions are now the cool way to do this). This PR removes the use of std::binder and, as a side effect, brings us closer to be able to compile Sofa with c++ > 11 if we wish to do some modern c++ someday :-) . Small note: The version of Eigen used in Sofa is a little bit old (2015)... Might be a good idea to add this in the Sofa's to do list. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908:620,message,message,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908,1,['message'],['message']
Integrability,"When compiling image, you might now have an issue when updating since DiffusionSolver has been made a separate plugin. This PR provides a warning for the users. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1067:260,message,message,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1067,1,['message'],['message']
Integrability,"When doing `make install`, the RPATH of the libraries is set to ""../lib:$ORIGIN/../lib:$$ORIGIN/../lib"", and does not include the path to its relocated dependencies:. ```; $ ./bin/runSofa; ./runSofa: error while loading shared libraries: libSofaValidation.so.1.0: cannot open shared object file: No such file or directory; ```. ```; $ find . -name libSofaValidation.so.1.0; ./plugins/SofaValidation/lib/libSofaValidation.so.1.0; ```. Same thing happen if we link our project to some of SOFA's core library:; ```; $ lddtree my_plugin.so; my_plugin.so; libSofaMisc.so.20.06.99 => /sofa/build/install/lib/../lib/libSofaMisc.so.20.06.99; libSofaMiscEngine.so.20.06.99 => /sofa/build/install/lib/../lib/../lib/libSofaMiscEngine.so.20.06.99; libSofaNonUniformFem.so.1.0 => not found; ```; and again.; ```; $ find . -name libSofaNonUniformFem.so.1.0; ./plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so.1.0; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:152,depend,dependencies,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,1,['depend'],['dependencies']
Integrability,"When making a PR, the message for developers would then be:. Thank you for your pull request!; Someone will soon check it and start the builds. Note that by submitting a contribution to SOFA and signing-off your commits (*git commit -S*), you hereby adhere to the [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco). Discussion with @dmargery",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/514:22,message,message,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/514,1,['message'],['message']
Integrability,"When new messages are received or the message log is clear the componentState is changed. ; This allows the GUI (or other component) to detect that the object has changed (because its message log grew up). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397:9,message,messages,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397,3,['message'],"['message', 'messages']"
Integrability,"When sofa is compiled in debug mode, if the positions are initialized manually in the _position data attribute_ of the MechanicalObject, the later will always output an error stating that the position state vector contains a bad size. This message is called because the `MechanicalObject::init()` method calls `MechanicalObject::write(VecCoordId::position())` before setting the `vsize` member (with .`MechanicalObject::resize()`). One solution would be to first set the size accordingly to the _position data attribute_ of the MechanicalObject in the `MechanicalObject::init()` method before the `MechanicalObject::write()` is called. To reproduce the error, first compile Sofa in debug mode, and try with the following scene:; ```; <Node>; <MechanicalObject position=""0 0 -2.5 0 0 7.5 10 0 -2.5 10 0 7.5"" />; </Node>; ```; It should output something like:; `[WARNING] [MechanicalObject(mObject1)] Writing to State vector position(V_COORD) with incorrect size : 4 != 1`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/344:240,message,message,240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/344,1,['message'],['message']
Integrability,When solving constraints using a BaseConstraintCorrection component the function ; addComplianceInConstraintSpace compute the compliance matrix and add the contribution of the compliance matrix to the constraint solver matrix. . the goal is to split the computation of the compliance matrix (local for each deformable object) and the sum of the compliance matrix to the constraint solver (global) matrix in two different functions. - BaseConstraintCorrection::computeComplianceInConstraintSpace:; should be used to compute the compliance. This computation is independent and can be easily parallelized. - BaseConstraintCorrection::addComplianceInConstraintSpace:; should be used only to add the contribution of the compliance matrix to the constraint solver matrix. . This change is propagated to the LinearSolver class hierarchy because a ConstraintCorrection component might delegate the computation of the compliance matrix to the the LinearSolver. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/869:1051,message,message,1051,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/869,1,['message'],['message']
Integrability,When the Data texcoord is not set using a Mesh file or using a Data link from another component no mechanism is present in VisualModel to compute default UV texcoord leading to incompatible buffer size between vertices and texcoords. This PR add a method to compute default texcoords using a sphere projection. Not perfect but at least create texcoords for volumique mesh with surface mapping. Here are some results examples:. ![liver-tetra2triangle_00000001](https://user-images.githubusercontent.com/21199245/52704903-ed4c5480-2f81-11e9-894d-e6d2f74291eb.png); ![liver-tetra2triangle_00000002](https://user-images.githubusercontent.com/21199245/52704905-ef161800-2f81-11e9-9c5f-4eccabe53085.png). Mesh sphere projection used:; ![liver-tetra2triangle_00000003](https://user-images.githubusercontent.com/21199245/52707910-1f14e980-2f89-11e9-9de5-23d0f899f1d7.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/933:964,message,message,964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/933,1,['message'],['message']
Integrability,When the parent folder of the output file of an OBJExporter does not exist : ; - a message is output like this one: [INFO] [OBJExporter(ObjExporter)] Exporting OBJ as: /path/to/my/mesh.obj; - no obj file is written. I think the user either expect : . 1. either to have an error/warning message instead of a success message; 2. or to have the parent folder(s) created properly (and silently or not) and the mesh file written as expected. I am in favor of 2. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/355:83,message,message,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/355,3,['message'],['message']
Integrability,When the source path is from the root the path is empty.; This results in returning @ instead of @/; This fix it. This fix issue #375 ; This is a reviewer friendly version of #376 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/377:281,message,message,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/377,1,['message'],['message']
Integrability,"When trying to serialize / desserialize custom binary data structures (non-native / non-scalar Sofa types) as byte arrays from C++ to Python, PyString_FromStirng is called, which stops the input stream at the first \0 it encounters.; PyString_FromStringAndSize retrieves the full stream instead, which is more likely to be what we want here.; @damienmarchal could you tell me what you think of this?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/416:500,message,message,500,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/416,1,['message'],['message']
Integrability,"When you create a type in python, you may or may not have the properties wrapped around sofa::Data<>. In my particular case, for example, I have several types coded in C++ and exposed to python. I try to avoid using sofa::Data and just expose the properties as python properties. . When you do it this way, in SofaGUI those properties are (obviosuly) not shown. Would be nice to add a way of showing them, maybe using a callback that is added to the component or something like that.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1796:73,wrap,wrapped,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1796,1,['wrap'],['wrapped']
Integrability,"When you launch ""make install"", CMake will install external dependency binaries (such as boost and glew) into the sofa libraries directory (e.g. the build/install directory). This in turn will be hiding the system binaries when we try to link our project to Sofa, generating the following CMake warnings for every targets that depends on Sofa:. ```; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. Any good reason why we are doing this? Maybe @guparan has an idea?. I understand the use of copying dependencies when **packaging** Sofa, but not for the install command which already has the dependency installed on the system. This is polluting my projects compilation output :-). _____________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1153:60,depend,dependency,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1153,2,['depend'],"['dependency', 'depends']"
Integrability,"When your SOFA PR fails on CI somewhere in an external project, it may be because your change is breaking for that external project.; In that case, the best (and preferred) solution is that you push a fix in the external project so that when your PR is merged in SOFA, it does not fail on CI.; Here is the typical workflow for that use case. 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961:760,depend,depends-on,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961,1,['depend'],['depends-on']
Integrability,"While implementing a binding factory for Data types in SofaPython3, I realised there's no DataTypeName for the BoundingBox data type in Sofa... So here we have it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1086:263,message,message,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1086,1,['message'],['message']
Integrability,"While trying to understand how forcefields work... I initially noticed that there was a bad handling of cases where `stiffness.size() != indices.size()` in the RestShapeSpringsForceField and tried to improve the overall error management on this component. I ended up doing the following changes:. - Call reinit() in bwdInit; - Using componentState to set the state to invalid when necessary (no stiffness set, out of bounds indices etc & check for component state in addForce / addDForce / addKToMatrix ..); - Improvement of warning messages (IMHO); - refactor code duplication; - remove warnings by changing int -> size_t for BaseMatrix::Index (got carried away here, sorry about that). **### BREAKING because:**. - Change in behavior in specific cases:. 1. empty stiffness vector: **Before:** setting arbitrary stiffness at 100.0 for all indices ; **Now:** msg_error & invalid state. ; 2. stiffness.size() != indices.size(): **Before:** applying stiffness[0] to all indices ; **Now:** ; ```py; if len(stiffness) > len(indices): ; crop(stiffness); else if len(stiffness) == 1:; stiffness.resize(len(indices), stiffness[0]); else if len(stiffness < len(indices):; ```; Generalized to angularStiffness on Rigids. - size_t in methods signature break API compatibility. I wouldn't call this component ""clean"" after those changes though, but it's a start. As stuff still to do to improve, I see:. - Using DataTrackers to call reinit() when necessary; - get rid of bwdInit by using componentState + datatrackers to reinit component; - remove those ugly getContext to retrieve the external mstate used for rest shape, by replacing them with a data or a link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1103:533,message,messages,533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1103,1,['message'],['messages']
Integrability,While working in interactive mode the scenechecker is executed each time the file is reloaded. This is ; not really convenient.. Thus this fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/547:243,message,message,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/547,1,['message'],['message']
Integrability,"With Boost 1.64, at least on Mac, Multithreading build fails with the following message:; ```FAILED: applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o ; /usr/local/bin/ccache clang++ -Qunused-arguments -Wno-deprecated-declarations -DMultiThreading_EXPORTS -Iinclude -I../applications/plugins/MultiThreading/.. -isystem /usr/local/include -I../SofaKernel/SofaBase/../modules -I../SofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:80,message,message,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,1,['message'],['message']
Integrability,With the purpose to override it in a child class in a plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1444:161,message,message,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1444,1,['message'],['message']
Integrability,With this PR you can `find_package(CImgPlugin)` in an other cmake project. Quite useful since this plugin is indeed part of the *core*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/544:235,message,message,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/544,1,['message'],['message']
Integrability,"With:; - guidelines,; - symbols export (for Windows); - example of mandatory dep and optional dep in Cmake; - cleaning (pragma/nested namespace); - updated init (with data from CMake); - installable (and usable as dep); - add test mechanism (with BaseTest); - Readme as markdown. Remove useless python files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1356:408,message,message,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1356,1,['message'],['message']
Integrability,Work done further to a doc update:; - example scene of Newmark solver is improved; - example scene for the PointsFromIndices engine is added; - clean Newmark c++ code. FYI doc is [here](https://www.sofa-framework.org/community/doc/components/integrationscheme/newmarkimplicitsolver/); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1398:242,integrat,integrationscheme,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1398,2,"['integrat', 'message']","['integrationscheme', 'message']"
Integrability,Work of clean further to PR #625 on WriteState and also done for ReadState with:; - check on all data at init and remove unused data; - export with msg; - add tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/714:265,message,message,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/714,1,['message'],['message']
Integrability,"Write access (copy-less), the data counter is updated after the 'with' block; with c.position.writeable() as w:; o = numpy.ones((len(c.position), 3))) ; w += o ; w *= 2.0; ```. Wrap around types (copy-less) to typify the data fields on demand; ```python; # syntax 1; c = o.showColor.as(RGBAColor); # syntax 2; c = RGBAColor(o.showColor); c.setFromHSC(1,2,3); c.setFromHSV(1,2,3); ```. Implement your own ForceField in python:; ```python; class MyForceField(Sofa.Core.BaseForceField):; def __init__(self, *args, **kwargs):; Sofa.Core.BaseForceField.__init__(self, *args, **kwargs); ; def init(self):; self.refx = self.position.toarray().copy(). def addForce(self, m, f, x, v):; n = numpy.ones((len(self.position),1)); f = (self.refx-x) * 2 + n; ```; ; To test the binding you need to de-activate SofaPython and activate SofaPython3. ; Then; - runSimu.py to launch a sofa simulation from the command line eg: ; python3 runSimu.py mySimulation.py; - or runSofa. . General guidelines:; - Fix existing API consistency issues; - Improve the performance of the binding by supporting supporting the different python protocols (sequence, buffer+memoryview, copy-less mechanism).; - unified data access and API.; - implementation is currently done with pybind11 and cython.; - modular design. About the tools we use: ; - pybind because it is very consistent with our code base ; - cython becaues it is much more powerful and general and so we can accelerate python code by un-warping the warped object in other part of the code base. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771:1831,protocol,protocols,1831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771,2,"['message', 'protocol']","['message', 'protocols']"
Integrability,Wrong prebuilt dependencies version for VS2015,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/295:15,depend,dependencies,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/295,1,['depend'],['dependencies']
Integrability,"[All] CLEAN tests, use CMake weak dependencies",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1886:34,depend,dependencies,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886,1,['depend'],['dependencies']
Integrability,[All] Changed message for scene check,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4324:14,message,message,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4324,1,['message'],['message']
Integrability,[All] FIX build without SofaPython soft dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1829:40,depend,dependencies,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829,1,['depend'],['dependencies']
Integrability,[All] Improve extlibs integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:22,integrat,integration,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,1,['integrat'],['integration']
Integrability,[All] Overridden 'canCreate' methods should always log an error message when they fail,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1294:64,message,message,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1294,1,['message'],['message']
Integrability,[All] Remove some trivial dependencies on SofaBaseTopology,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2449:26,depend,dependencies,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2449,1,['depend'],['dependencies']
Integrability,[All] uniformize epsilons in Sofa framework fix issues 799 #STC7 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1049:166,message,message,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1049,1,['message'],['message']
Integrability,[Backport] Small fix: removed debug message for Transform *= operator (#1732),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1741:36,message,message,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741,1,['message'],['message']
Integrability,[CImgPlugin] Add Threads dependency in Cmake,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2302:25,depend,dependency,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302,1,['depend'],['dependency']
Integrability,[CImgPlugin] CLEAN dependencies in CMakeLists,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1651:19,depend,dependencies,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1651,1,['depend'],['dependencies']
Integrability,[CImgPlugin] Minimize plugin dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2318:29,depend,dependencies,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318,1,['depend'],['dependencies']
Integrability,[CMake] Add SofaNonUniformFem to the dependencies of SofaMisc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1384:37,depend,dependencies,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1384,1,['depend'],['dependencies']
Integrability,[CMake] FIX Threads dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2511:20,depend,dependency,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2511,1,['depend'],['dependency']
Integrability,[Cmake] Update warning replacement message for deprecated macro sofa_add_XX,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3611:35,message,message,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3611,1,['message'],['message']
Integrability,[Collision] Optimization: it prevents the normals of the triangles to be recomputed everytime a topological change happens.; The normals of the triangles are computed only once after all the topology changes occur (on the topology::ENDING_EVENT). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/839:346,message,message,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/839,1,['message'],['message']
Integrability,[Collision] Refactor the DetectionOutputVector interface and its impementation TDetectionOutputVector,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:47,interface,interface,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,1,['interface'],['interface']
Integrability,[Common] Add message to make the fetch mechanism less hidden,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4310:13,message,message,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4310,1,['message'],['message']
Integrability,[Config] CMake: support interface-type target for install macro,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4356:24,interface,interface-type,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356,1,['interface'],['interface-type']
Integrability,[Config] Change type of CMake message when adding a module,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3381:30,message,message,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3381,1,['message'],['message']
Integrability,[Config] Integrate Tracy profiler,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182:9,Integrat,Integrate,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182,1,['Integrat'],['Integrate']
Integrability,[Constraint.Lagrangian] Add messages when no compliance is given,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3858:28,message,messages,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3858,1,['message'],['messages']
Integrability,"[Core, LinearSolver.Direct] Introduce PartialLinearSolver Interface",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241:58,Interface,Interface,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241,1,['Interface'],['Interface']
Integrability,[Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3142:25,message,message,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3142,1,['message'],['message']
Integrability,[Core] Replace non-utf8 chars by special char with error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4900:57,message,message,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4900,1,['message'],['message']
Integrability,[Core] VecId: set correct message for the deleted function holonomicC,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4120:26,message,message,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4120,1,['message'],['message']
Integrability,[FEM.Elastic] Fix typo in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4062:32,message,message,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4062,1,['message'],['message']
Integrability,[GUI.Common] Cmake: Fix message when searching for Sofa.GL,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3549:24,message,message,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3549,1,['message'],['message']
Integrability,[GUI.Qt] Redirect Qt messages to the SOFA output stream,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3101:21,message,messages,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3101,1,['message'],['messages']
Integrability,[GitHub] Fix PR messages not properly sent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4475:16,message,messages,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4475,1,['message'],['messages']
Integrability,[GitHub] Fix python dependencies in Actions,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5061:20,depend,dependencies,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5061,1,['depend'],['dependencies']
Integrability,[Gui][HeadlessRecorder]Remove avcodec dependency in HeadlessRecorder.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/752:38,depend,dependency,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/752,1,['depend'],['dependency']
Integrability,[Helper] Improve text message for users in ComponentChange,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3913:22,message,message,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3913,1,['message'],['message']
Integrability,[Helper] PluginManager: testing loading a plugin with a dependency on an other plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4464:56,depend,dependency,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464,1,['depend'],['dependency']
Integrability,[IO.Mesh] More debug info in the error message in MeshSTLLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3949:39,message,message,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3949,1,['message'],['message']
Integrability,[LinearSolver.Direct] Fix metis dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450:32,depend,dependency,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450,1,['depend'],['dependency']
Integrability,[LinearSolver.Direct] More details in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4060:44,message,message,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4060,1,['message'],['message']
Integrability,[LinearSolver.Direct] Move advice message into parse method,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3029:34,message,message,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3029,1,['message'],['message']
Integrability,[LinearSolver] SparseLDLSolver: template warning to info message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2969:57,message,message,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2969,1,['message'],['message']
Integrability,[LinearSystem.Direct] More details in the error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3985:48,message,message,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3985,1,['message'],['message']
Integrability,[LinearSystem.Direct] Remove metis dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588:35,depend,dependency,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588,1,['depend'],['dependency']
Integrability,[Mapping/tests] Remove dependency on SceneCreator,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3955:23,depend,dependency,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3955,1,['depend'],['dependency']
Integrability,[MechanicalLoad] Break data cross-dependency in CFF,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3936:34,depend,dependency,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3936,1,['depend'],['dependency']
Integrability,[MechanicalLoad] Remove the data force in ConstantFF and solves circular dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4019:73,depend,dependency,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019,1,['depend'],['dependency']
Integrability,[Modeler] Make private the tinyxml dependence,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1272:35,depend,dependence,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1272,1,['depend'],['dependence']
Integrability,[MultiThreading] Add a virtual function in TaskScheduler interface,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/934:57,interface,interface,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/934,1,['interface'],['interface']
Integrability,[MultiThreading] TaskAllocator Interface,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/906:31,Interface,Interface,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/906,1,['Interface'],['Interface']
Integrability,[MultiThreading] TaskScheduler Interface,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/775:31,Interface,Interface,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/775,1,['Interface'],['Interface']
Integrability,[MultiThreading] TaskScheduler Interface. Decompose the TaskScheduler in an abstract class and a default implementation.; DefaultTaskScheduler provides a default implementation of the TaskScheduler interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/774:31,Interface,Interface,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/774,3,"['Interface', 'interface', 'message']","['Interface', 'interface', 'message']"
Integrability,[MultiThreading] TaskScheduler Interface. Decompose the TaskScheduler in an abstract class and a default implementation.; TaskSchedulerDefault class provides a default implementation of the TaskScheduler interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/775:31,Interface,Interface,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/775,3,"['Interface', 'interface', 'message']","['Interface', 'interface', 'message']"
Integrability,[MultiThreading] removed the boost thread dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/701:42,depend,dependency,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/701,1,['depend'],['dependency']
Integrability,[Plugins] Cyclic dependency between SofaDistanceGrid and SofaMiscCollision,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1897:17,depend,dependency,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1897,1,['depend'],['dependency']
Integrability,[SceneChecking] MissingRequiredPlugins: Adapts messages for xml and python users,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033:47,message,messages,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033,1,['message'],['messages']
Integrability,[Simulation.Core] Special message if extension is Python,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2998:26,message,message,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2998,1,['message'],['message']
Integrability,[Sofa.LinearAlgebra] Compressed property in CRS matrix depends on tmp vector,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2894:55,depend,depends,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2894,1,['depend'],['depends']
Integrability,[Sofa.LinearAlgebra] Introduce Eigen wrapper for sparse matrices,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:37,wrap,wrapper,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['wrap'],['wrapper']
Integrability,[SofaBaseCollision] Fix simulation dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1768:35,depend,dependency,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768,1,['depend'],['dependency']
Integrability,[SofaBaseCollision] Remove dependencies on BaseIntTool,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2081:27,depend,dependencies,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2081,1,['depend'],['dependencies']
Integrability,[SofaBaseLinearSolver] Fix message in MatrixLinearSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2781:27,message,message,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2781,1,['message'],['message']
Integrability,[SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2403:75,depend,dependencies,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2403,1,['depend'],['dependencies']
Integrability,[SofaBaseTopology] Clearer error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2638:33,message,message,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2638,1,['message'],['message']
Integrability,[SofaBaseTopology] Improve TopologyDataHandler message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2152:47,message,message,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152,1,['message'],['message']
Integrability,[SofaBaseTopology] Pr change api numerical integration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936:43,integrat,integration,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936,1,['integrat'],['integration']
Integrability,[SofaBoundaryCondition][SofaConstraint] FIX dependency and export symbols,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2255:44,depend,dependency,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2255,1,['depend'],['dependency']
Integrability,[SofaCUDA] Generalize the use of MessageDispatcher in SofaCUDA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430:33,Message,MessageDispatcher,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430,1,['Message'],['MessageDispatcher']
Integrability,[SofaCUDA] Move cuda GUI dependent code,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4227:25,depend,dependent,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4227,1,['depend'],['dependent']
Integrability,[SofaComponentAll] FIX build with disabled dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1940:43,depend,dependencies,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1940,1,['depend'],['dependencies']
Integrability,[SofaConstraint] Remove dependency on TetrahedronFEMForcefield,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2250:24,depend,dependency,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250,1,['depend'],['dependency']
Integrability,[SofaConstraint] Set the use of integration factor true by default,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1369:32,integrat,integration,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1369,1,['integrat'],['integration']
Integrability,[SofaCore] Clean dependencies to SimulationCore,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1928:17,depend,dependencies,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1928,1,['depend'],['dependencies']
Integrability,[SofaCore] Clearer message when template parameter is not compatible with current context,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2262:19,message,message,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2262,1,['message'],['message']
Integrability,"[SofaCore] Remove ""depend"" from Node",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1763:19,depend,depend,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1763,1,['depend'],['depend']
Integrability,[SofaCore] Required data msg now depends on existing default value,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2527:33,depend,depends,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2527,1,['depend'],['depends']
Integrability,[SofaDefaultType] Introduce test interface for BaseMatrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2280:33,interface,interface,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280,1,['interface'],['interface']
Integrability,[SofaEigen2Solver] Limit display of deprecation message in CMake,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2386:48,message,message,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2386,1,['message'],['message']
Integrability,[SofaExporter] FIX message in VTKExporter with new API and activate printLog,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/553:19,message,message,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/553,1,['message'],['message']
Integrability,[SofaExporter] Modularize (+minor dependency cleaning),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/915:34,depend,dependency,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/915,1,['depend'],['dependency']
Integrability,[SofaExporter] Remove SofaBaseVisual dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2039:37,depend,dependency,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2039,1,['depend'],['dependency']
Integrability,[SofaGUI] Split OpenGL and Qt dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1121:30,depend,dependency,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1121,1,['depend'],['dependency']
Integrability,[SofaGeneralObjectInteraction] Fix dependencies in cmake,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2659:35,depend,dependencies,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2659,1,['depend'],['dependencies']
Integrability,[SofaGraphComponent] Clean format of RequiredPlugin message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:52,message,message,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,1,['message'],['message']
Integrability,[SofaGraphComponent] Fix message for RequiredPlugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2093:25,message,message,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093,1,['message'],['message']
Integrability,[SofaHelper] Clean dependencies to defaulttype,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1915:19,depend,dependencies,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915,1,['depend'],['dependencies']
Integrability,[SofaHelper] Fix CMake config with SOFA_NO_OPENGL and dependency package (Windows),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1650:54,depend,dependency,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1650,1,['depend'],['dependency']
Integrability,[SofaHelper] Quater does not depend on Vec and Mat from defaulttype anymore,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1518:29,depend,depend,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1518,1,['depend'],['depend']
Integrability,[SofaHelper] Remove Datatypeinfo dependency in vector(_device).h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1797:33,depend,dependency,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1797,1,['depend'],['dependency']
Integrability,[SofaHelper] Remove OpenGL dependency in vector_device,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1646:27,depend,dependency,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1646,1,['depend'],['dependency']
Integrability,[SofaHelper] Remove SofaSimulationCore dependency from AdvancedTimer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1770:39,depend,dependency,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770,1,['depend'],['dependency']
Integrability,[SofaHelper] Remove boost::thread dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2264:34,depend,dependency,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264,1,['depend'],['dependency']
Integrability,[SofaHelper] Remove some SofaCore dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1810:34,depend,dependencies,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810,1,['depend'],['dependencies']
Integrability,[SofaKernel] Activates thread-safetiness on MessageDispatcher.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/257:44,Message,MessageDispatcher,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/257,1,['Message'],['MessageDispatcher']
Integrability,[SofaKernel] Add PerComponentLoggingMessageHandler to keep and history of messages.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106:74,message,messages,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106,1,['message'],['messages']
Integrability,[SofaKernel] Change d_componentState when a message is received.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397:44,message,message,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397,1,['message'],['message']
Integrability,[SofaKernel] Clean API message for Image loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503:23,message,message,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503,1,['message'],['message']
Integrability,[SofaKernel] FIX deprecation message related to template types.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939:29,message,message,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939,1,['message'],['message']
Integrability,[SofaKernel] Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1391:53,message,message,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1391,1,['message'],['message']
Integrability,[SofaKernel] Fix the integration scheme for Quaternion,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/172:21,integrat,integration,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/172,1,['integrat'],['integration']
Integrability,[SofaKernel] Improve File:line info in error message (for python and xml error reporting),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:45,message,message,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,1,['message'],['message']
Integrability,[SofaKernel] Improve error message when a component cannot be created.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1332:27,message,message,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1332,1,['message'],['message']
Integrability,[SofaKernel] Improve the object factory message for duplicated entries,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:40,message,message,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,1,['message'],['message']
Integrability,[SofaKernel] Remove SofaTest dependency from framework_test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455:29,depend,dependency,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455,1,['depend'],['dependency']
Integrability,[SofaKernel] Remove X11 dependency when SOFA_NO_OPENGL is enabled.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1370:24,depend,dependency,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1370,1,['depend'],['dependency']
Integrability,[SofaKernel] Remove boost::locale dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1033:34,depend,dependency,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1033,1,['depend'],['dependency']
Integrability,[SofaKernel] Remove some dependencies from SofaHelper to SofaCore,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1686:25,depend,dependencies,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1686,1,['depend'],['dependencies']
Integrability,[SofaKernel] Write template list in error message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2207:42,message,message,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2207,1,['message'],['message']
Integrability,[SofaKernel] re-open PR #330 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/332:130,message,message,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/332,1,['message'],['message']
Integrability,[SofaKernel][SofaGui] Move Boost::program_option and remove Boost::system dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1848:74,depend,dependencies,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848,1,['depend'],['dependencies']
Integrability,[SofaLoader] FIX Circular dependency in the update of MeshObjLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:26,depend,dependency,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,1,['depend'],['dependency']
Integrability,[SofaMatrix] Reduce dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2768:20,depend,dependency,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2768,1,['depend'],['dependency']
Integrability,[SofaMatrix] Remove CImgPlugin dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4112:31,depend,dependency,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4112,1,['depend'],['dependency']
Integrability,[SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:54,depend,dependency,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,1,['depend'],['dependency']
Integrability,"[SofaMiscFem, SofaSimulationGraph] FIX dependencies",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/588:39,depend,dependencies,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/588,1,['depend'],['dependencies']
Integrability,[SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:64,depend,depending,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,1,['depend'],['depending']
Integrability,"[SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:79,message,messageHandler,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,1,['message'],['messageHandler']
Integrability,[SofaPython] CLEAN PythonEnvironment info messages,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1835:42,message,messages,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1835,1,['message'],['messages']
Integrability,[SofaPython] Regroup dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1875:21,depend,dependencies,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875,1,['depend'],['dependencies']
Integrability,[SofaPython] Restrict the plugin and its dependers to C++11,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284:41,depend,dependers,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284,1,['depend'],['dependers']
Integrability,[SofaSimulationCore] Clearer message when a linear solver is missing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2221:29,message,message,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2221,1,['message'],['message']
Integrability,[SofaSparseSolver] Clean useless dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2012:33,depend,dependencies,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012,1,['depend'],['dependencies']
Integrability,[SofaTest] Init MessageDispatcher to prevent side effects,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/94:16,Message,MessageDispatcher,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/94,1,['Message'],['MessageDispatcher']
Integrability,[SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2908:54,message,message,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2908,1,['message'],['message']
Integrability,[Spring] Remove unused dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3848:23,depend,dependencies,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3848,1,['depend'],['dependencies']
Integrability,[UX] Handle dependencies between data field.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/235:12,depend,dependencies,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/235,2,['depend'],['dependencies']
Integrability,[VisualModel] Improve the messages when loading mesh inside VisualModel,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/778:26,message,messages,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/778,1,['message'],['messages']
Integrability,[WIP]; - I try to figure out how to fix the issue : https://github.com/sofa-framework/sofa/issues/561. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/564:202,message,message,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/564,1,['message'],['message']
Integrability,[all] Cleaning the way we handle message in Sofa.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/179:33,message,message,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/179,1,['message'],['message']
Integrability,[all] Externalize nlohmann_json dependency with find or fetch mechanism,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4257:32,depend,dependency,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4257,1,['depend'],['dependency']
Integrability,[all] FIX scenegraph message's icons updates,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027:21,message,message,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027,1,['message'],['message']
Integrability,[all] Fix tinyxml2 dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4574:19,depend,dependency,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574,1,['depend'],['dependency']
Integrability,[all] Improve msg_api and logging of message,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190:37,message,message,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190,1,['message'],['message']
Integrability,[all] Message cleaning week23,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/339:6,Message,Message,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/339,1,['Message'],['Message']
Integrability,[all] Refactor SofaTest to cut dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:31,depend,dependencies,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,1,['depend'],['dependencies']
Integrability,[all] Remove non needed includes in Node.h and propagate all the missing dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1460:73,depend,dependencies,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1460,1,['depend'],['dependencies']
Integrability,[all] Various small changes in error messages & bugfix from defrost branches,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/660:37,message,messages,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/660,1,['message'],['messages']
Integrability,[all] promote deprecation messages as error,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1643:26,message,messages,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1643,1,['message'],['messages']
Integrability,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/106]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4651:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4651,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/145]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5070:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5070,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/22]. - One existing scene is added to the list of regression tests (`Components/forcefield/TetrahedronFEMForceField_plasticity.scn`); - One scene is introduced (`Components/forcefield/TetrahedronFEMForceField_assemble.scn`) so it is also added to the regression tests. The scene is the same than `Components/forcefield/TetrahedronFEMForceField.scn` except that the data `computeGlobalMatrix` from `TetrahedronFEMForceField` is set to `true`. Only methods `large` and `small` are introduced. The others don't support `computeGlobalMatrix=true`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2540:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2540,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/26]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3035:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3035,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/35]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3326:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3326,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/37]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3367:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3367,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/41]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3757:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3757,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/43]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3756:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3756,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4420:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420,2,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/ShapeMatchingPlugin/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106,1,['depend'],['depends-on']
Integrability,"[ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/309]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3402:4,depend,depends-on,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3402,1,['depend'],['depends-on']
Integrability,[image] Fix Sofa.GUI dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3591:21,depend,dependency,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3591,1,['depend'],['dependency']
Integrability,[image] Message API is needed even if no python,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1068:8,Message,Message,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1068,1,['Message'],['Message']
Integrability,[image] Remove useless DiffusionSolver dependency,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2308:39,depend,dependency,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308,1,['depend'],['dependency']
Integrability,[plugins] Add SimpleApi as a dependency in SofaCarving_test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4572:29,depend,dependency,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572,1,['depend'],['dependency']
Integrability,[plugins] Externalize haptic/interface plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575:29,interface,interface,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575,1,['interface'],['interface']
Integrability,[runSofa] FIX UI problem related to messages.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398:36,message,messages,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398,1,['message'],['messages']
Integrability,[tools] Add new dependency to fix in MacOS post-install-fixup,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4749:16,depend,dependency,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4749,1,['depend'],['dependency']
Integrability,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:1512,Depend,Depends,1512,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,1,['Depend'],['Depends']
Integrability,"_I suggest we use this issue card to track ongoing work (aka as dashboard/ChangeLog)_; Observation: Link implementation is invasive too complex, thus making SOFA respectively long to compile and hard to maintain / support. An ongoing work led by @damienmarchal aims at: ; - simplifying the Link implementation:; - avoiding the use of Traits; - split SingleLink into several cases: links between Data (DataLink), links between multiple Data (DataMultiLink?) links between BaseObject (?); - reducing massively used / included of SingleLinks. DONE:; - introduce Data Link (#1491 ); - remove duplicated SingleLink<> parentData in BaseData to ease further refactoring (#1491 ); - replace the use of the SingleLink<Data> by a DataLink class in BaseData.h (#1491 ); - remove traits code from Link.h and BaseLink.h. (#1503 ); - remove reflection code in BaseData (#1541). Also done:; - use forward declaration to reduce dependency (due to headers included in header) between modules --> cleaning code dependency graph and reducing compilation time (#1509 ); - DataContentValue : was there as DataValue, extracted from Data and renamed as DataContentValue; - PathResolver : mechanism to generalize for resolving path (parsing string, search in graph, convert in to an object), extracted from Link in order isolate it (for now reoriente towards existing SOFA functions). ______________________________________________________. **Next step** :; - refactoring the whole Link to separate SingleLink & MultiLink; - rename AbstractDataLink as BaseDataLink ?; - remove reflection mechanism inn BaseData (due to removal of SingleLink for Data). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1526:912,depend,dependency,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1526,2,['depend'],['dependency']
Integrability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/340:99,message,message,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/340,43,['message'],['message']
Integrability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] do generate LESS warnings.; - [x] do generate LESS unit test failures.; - [x] do generate LESS scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548:99,message,message,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548,1,['message'],['message']
Integrability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/207:99,message,message,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/207,1,['message'],['message']
Integrability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/826:99,message,message,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/826,1,['message'],['message']
Integrability,______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399:99,message,message,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399,6,['message'],['message']
Integrability,"__set_python_directory__ was writing a ""hard-coded"" _CMAKE_CURRENT_SOURCE_DIR/python_ path in _etc/sofa/python.d/_ instead of the provided path. ; So if your python code was located in, say, _<plugin_dir>/src/python_ instead of _<plugin_dir>/python_ the macro would write an invalid path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/763:388,message,message,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/763,1,['message'],['message']
Integrability,"_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Otherwise, if you want to disable this message, add template=""CompressedRowSparseMatrixd"" .; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Animation Manager Loop will be used. Add DefaultAnimationLoop to the root node of scene file to remove this warning; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::si",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:35120,message,message,35120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['message'],['message']
Integrability,`${CMAKE_BINARY_DIR}/bin/$<CONFIG>/` does not exist if using MSVC without Visual Studio IDE. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/451:192,message,message,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/451,1,['message'],['message']
Integrability,"`BaseOrderingMethod` is introduced as an abstract component in `Sofa.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS de",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:595,depend,dependency,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,1,['depend'],['dependency']
Integrability,"`CGLinearSolver::init()` did not call `init()` of its base class. The result is that the check of the required Data, which is in `BaseObject::init()`, is never called. `CGLinearSolver` has required Data, therefore the error never triggered when one of the required Data was not set. [ci-depends-on https://github.com/sofa-framework/Compliant/pull/4]; [ci-depends-on https://github.com/sofa-framework/Flexible/pull/3]; [ci-depends-on https://github.com/sofa-framework/SofaPython/pull/2]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/211]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419:287,depend,depends-on,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419,4,['depend'],['depends-on']
Integrability,`CentralDifferenceSolver::solve` has two ways of solving depending on the definition of `SOFA_NO_VMULTIOP`.; The benchmark could be used to decide if one of the way could be removed.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2149:57,depend,depending,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2149,1,['depend'],['depending']
Integrability,"`EdgeTopologyFrom2PointSets` is an edge topology built from 2 point sets. It computes pairs of points based on the nearest distance from one point to the other point set. It is very useful to be used in combination with springs and SubsetMultiMapping. This component may change depending on the work in #2554 . ![image](https://user-images.githubusercontent.com/10572752/147271052-fa2f162e-72f2-4cc9-816f-6f64a0307f87.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2562:278,depend,depending,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2562,1,['depend'],['depending']
Integrability,"`FindEigen3.cmake` is defining the cmake variable **EIGEN3_VERSION**, whereas `SofaEigen2Solver` was using **Eigen3_VERSION** to get the version of Eigen (which was; empty). Hence, **SOFAEIGEN2SOLVER_HAVE_OPENMP** was always true (given **SOFA_OPENMP**=ON), which was making the compilation fail when using Eigen > 3.2.9. Fixes #1412 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1416:435,message,message,435,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1416,1,['message'],['message']
Integrability,`MessageDispatcher::clearHandlers()` can have side effects on other tests in same suite.; See #83 for error case. SofaTest API should ensure that each test starts with a clean MessageDispatcher containing always the same set of MessageHandlers.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/94:1,Message,MessageDispatcher,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/94,3,['Message'],"['MessageDispatcher', 'MessageHandlers']"
Integrability,"`SofaNonUniformFem` is required by `SofaMiscEngine`. This needed to be; propagated back to the `SofaMiscConfig.cmake` in order to let external; projects find the target. Also, since `SofaGui` calls `find_package(SofaMisc)`, `SofaNonUniformFemConfig.cmake.in`; needs to be configure before `SofaGui`. The problem was raised [here](https://www.sofa-framework.org/community/forum/topic/setting-up-out-of-tree-build-sofapython-3-plugin/#post-16198) by Sander. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1384:555,message,message,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1384,1,['message'],['message']
Integrability,"```cmake; find_package(Qt5 COMPONENTS Core QUIET); if (NOT Qt5Core_FOUND); if(CMAKE_VERSION VERSION_GREATER_EQUAL ""3.16""); find_package(Qt6 COMPONENTS Core CoreTools REQUIRED QUIET); if (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); message(FATAL_ERROR ""Image_gui is not compatible with Qt6 yet."") # to remove once image_gui has been updated; endif(); # else() should never happened as it would already break in Sofa.GUI.Qt; endif(); else(); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4321:248,message,message,248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4321,1,['message'],['message']
Integrability,"```cpp; /// Method to check if points stored inside the Tetrahedron, given by the tetrahedron id, are in the right order (by checking the cross products between edges).; bool checkNodeSequence(const TetraID tetraId) const;. /// Method to check if the dihedral angles of the tetrahedron have correct values (between 20 and 160 degrees).; bool checkTetrahedronDihedralAngles(const TetraID tetraId) const;. /// Method to check if Tetrahedron is elongated, meaning the longest edge > 10x min edge; bool isTetrahedronElongated(const TetraID tetraId) const;. /// Return false if one of the test method: @sa isTetrahedronElongated, @sa checkTetrahedronDihedralAngles and @sa checkNodeSequence return false for the given Tetrahedron Id.; bool checkTetrahedronValidity(const TetraID tetraId) const;. /// Will call @sa checkTetrahedronValidity for each Tetrahedron of the mesh and store the bad tetrahedron ID in @sa m_badTetraIds; const sofa::helper::vector <TetraID>& computeBadTetrahedron();; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1160:1090,message,message,1090,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1160,1,['message'],['message']
Integrability,"`canCreate` can be called several times by the object factory. It makes more sense to detect if the template parameter is empty in the `parse` method, i.e. once the object is instantiated. Header of the message depends whether the component name is empty or not. Remove hard coded string of the component class, as it does not apply to derived types. Remove hard coded template strings. ![image](https://user-images.githubusercontent.com/10572752/172868099-18fb7a50-ecb2-40e4-b8b4-11fdac2be70d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3029:203,message,message,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3029,2,"['depend', 'message']","['depends', 'message']"
Integrability,"`lcp_gaussseidel_unbuilt` is called even if there is no constraints, so a test is added.; And the initial guess was writing a 0.0 outside bounds (but I dont know why this line was here). :warning: WARNING :warning:; one needs to set the responseParams to mu=0.0 also. This is really confusing and would need to refactor somewhere.; If the LCP defines mu to 0.0 but not responseParams, funny things happen (one component expects 1contact = 1 constraint and the other 1contact = 3 constraints). Moreover:; - remove (deprecate) usage of the member `_mu` which was confusing with the data `mu`; - adds two scenes to demonstrate with and without friction, and their regression tests. [ci-depends-on https://github.com/sofa-framework/Regression/pull/47]. ![lcp_friction](https://github.com/sofa-framework/sofa/assets/11028016/eba86b90-3cfc-40f6-850f-6aba720d291d); ![lcp_nofriction](https://github.com/sofa-framework/sofa/assets/11028016/fb015cd7-54c6-4347-a07e-e5c960dc609c). Benchmarks:; As friction adds two additional constraints in the matrix, then frictionless scenes are faster:; ```; caduceus:; w/: 5000 iterations done in 52.071 s ( 96.0227 FPS); w/o: 5000 iterations done in 44.6895 s ( 111.883 FPS); ```; ```; 3instruments_collis:; w: 5000 iterations done in 69.8352 s ( 71.5971 FPS); w/o: 5000 iterations done in 43.0997 s ( 116.01 FPS); ```; Obviously, this change the behavior of the scene...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failur",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905:683,depend,depends-on,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905,1,['depend'],['depends-on']
Integrability,"actions/github-script@v4 is output errors due to deprecation in actions/core:; ```; (node:1614) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.; (Use `node --trace-deprecation ...` to show where the warning was created); RequestError [HttpError]: Resource not accessible by integration; at /home/runner/work/_actions/actions/github-script/v4/dist/index.js:4662:21; at processTicksAndRejections (node:internal/process/task_queues:96:5) {; status: 403,; response: {; url: 'https://api.github.com/repos/sofa-framework/sofa/issues/4496/comments',; Error: Unhandled error: HttpError: Resource not accessible by integration; status: 403,; ```. This PR also :; - updates list of GHD reviewers with @rmolazem and @samuelmyoussef ; - updates with stargazer's name . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4522:404,integrat,integration,404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4522,2,['integrat'],['integration']
Integrability,add SphereActiver class in SphereModel so that some controller inheriting from this class can compute sphere(s) de/activation during execution. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1259:243,message,message,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1259,1,['message'],['message']
Integrability,add bounding box to hexaFemForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/289:138,message,message,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/289,1,['message'],['message']
Integrability,added deprecation message where needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1197:18,message,message,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1197,2,['message'],['message']
Integrability,and I also propose to update the APIChange file .. ; I did two in one (but separate commits) since it's super minor!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1414:217,message,message,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1414,1,['message'],['message']
Integrability,"and MappingGeometricStiffnessForceField. The message goes from:; ```; Object type MechanicalMatrixMapper<Vec3d,Vec3d> was not created; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been MOVED from SofaGeneralAnimationLoop to Sofa.Component.Mapping.MappedMatrix since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Mapping.MappedMatrix'/>; ```. to:. ```; The object 'MechanicalMatrixMapper' is not in the factory.; This component has been REMOVED since SOFA v23.06 (deprecated since v23.12).; Please consider updating your scene. If this component is crucial to you please report in a GitHub issue in order to reconsider this component for future re-integration.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4235:45,message,message,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4235,2,"['integrat', 'message']","['integration', 'message']"
Integrability,"arameter. . This is actually an interesting design gears provided fast/efficient API and an abstract one with lower performance. Nevertheless there is actually one problem with the existing implementation, the problem is that by default access to the static version (so the one that need the full inclusion of involved data types) to generate the dynamic one in the VirtualTypeInfo::get() method. As this function is needed to implement Data<T>::getAbstractTypeInfo it means that the complete static version is needed everytime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to implement an opt-in solution ... by default and for most of our code base, dynamic typeinfo (aka the one following the AbstractTypeInfo interface) are available because they only requires opaque data types. And it is only on purpose that developper can include (most of the time in a .cpp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:1892,depend,dependency,1892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['depend'],['dependency']
Integrability,"are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on Ma",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:1836,message,message,1836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['message'],['message']
Integrability,"ary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:1075,depend,dependent,1075,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['depend'],['dependent']
Integrability,as discussed in meeting. So it is done. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1179:139,message,message,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1179,1,['message'],['message']
Integrability,as promised since long time ago... There is still a lot of work to do but here is a first set of tests on the topology containers.; - Do not test yet the topological changes.; - Neither more complex algo like incision.; - Nor TopologicalData... it is just the beginning !. FIX #43 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/708:382,message,message,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/708,1,['message'],['message']
Integrability,"as said by Damien the wise in PR #407 . ""Module are systematically compiled which have a sensible impact to Sofa.; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they; don't need."". This PR is about putting SofaMiscForceField in a plugin.; It implied conditional activation of some unit tests to build properly when the plugin is switched off. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/408:488,message,message,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/408,1,['message'],['message']
Integrability,as the consortium is hosted by Inria since 2019. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1451:148,message,message,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1451,1,['message'],['message']
Integrability,"atic to users. . In this PR we addressed these two issues through a major cleaning set of changes:; - [SofaPython]: ; * refactor the way to get get Sofa object from their PyObject equivalent (hundred of changes). ; * add dedicated easing function (unwrap, get, get_baseobject) ; * replace wherever possible copy-pasted code with these function. ; * refactor the way we report error from binding (hundred of changes) (API BREAK). ; * returning NULL with a correctly set exception type as it is the way of handling error in python. ; * when returning NULL it is mandatory to preceed the return with an exception type & message specification. This can be done either with PyExc_SetString() or Py_BaddArgument(), ; * when returning after a failing Py_ParseTuple is an exception, as the function sets itself a very ; descriptive and standardized error message.; * add macros (SP_PYERR_SETSTRING_INVALIDTYPE and SP_PYERR_SETSTRING_OUTOFBOUND) to report consistant message with PyErr_SetString ; * add SP_CLASS_METHOD_DOC() and SP_CLASS_METHOD_KW_DOC() to declare method with their docstring (if you don't know what are docstring read: http://sametmax.com/les-docstrings/); * add new bindings:; * BaseState::getSize ; * BaseMapping::applyJT; * BaseMapping::applyDJT; * Data::getCounter ; * Data::isDirty; * Node::getMass; * Node::getForceField; * STLExporter; * Sofa.unload; * Sofa.path; * Sofa.getAvailableComponents; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a string with the ; python file/line info to add report them in msg_* ; * adds 'override' keyword when needed (more info => http://en.cppreference.com/w/cpp/language/override); * adds tests on PythonScriptController; * adds tests on SofaModule; * adds a exception handler in python so that the un-catched exceptions are sended as msg_error instead of being printed on the console. ; * cosmetic changes like replacing 'using namespace a;' with the ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:1400,message,message,1400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,1,['message'],['message']
Integrability,"based on #2339 . Description: Matrix\Vector has been moved to Sofa.LinearAlgebra in #2339, the only remaining component is SVDLinearSolver.; This linear solver is a (very slow) dense matrix solver so it would be more logical for this component to be in SofaDenseSolver.; Moreover the sole existence of SofaEigen2Solver was the Eigen dependency. ; Now Eigen is a proven dependency in the SofaFramework so at the end SofaEigen2Solver is not useful anymore. This PR:; - moves SVDLinearSolver in SofaDenseSolver; - remove the SofaEigen2Solver dependencies from various modules; - add some deprecations warning here and there; ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2368:333,depend,dependency,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2368,3,['depend'],"['dependencies', 'dependency']"
Integrability,"based on:; - #2813 (which is itself based on #2790 ). All OBB/Capsule code-related into its own plugin.; Has kind of the same file structure as Sofa.Component.Collision. Tests were adapted as well. [ci-depends-on https://github.com/sofa-framework/THMPGSpatialHashing/pull/1]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820:202,depend,depends-on,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820,1,['depend'],['depends-on']
Integrability,"boost::filesystem is the last dependency on a (compiled) boost library.; However, SOFA is still dependent on header-only boost libraries (for graph, stable_vector and intrusive_ptr especially); (config of the target Boost::boost is in Sofa.Type). The change is really easy. just replace boost::filesystem with std::filesystem.; The only non trivial 1-1 replacement was for managing unicode path (not sure on the change actually). This is finally possible because minimum requirement is ubuntu 20.04 (with an updated version of gcc supporting std::filesystem instead of std::experimental::filesystem) and macOS 10.15 (same with its clang version/mac SDK). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/177]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342:30,depend,dependency,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342,3,['depend'],"['dependency', 'dependent', 'depends-on']"
Integrability,"boost::locale was only once in FileRepository ; and since we can use std::locale from the STL, this library seems not useful anymore. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1033:233,message,message,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1033,1,['message'],['message']
Integrability,"boost::program_option was introduced in SofaHelper because of the utility class ArgumentParser. ; This class is only used from application/gui-related modules, so this file and the boost::program_option dependency are moved into SofaGuiCommon. And boost::system seems not used at all so lets remove this unused thing. SofaFramework needs now only:; - thread (for the not-so-used TimeoutWatcher) and could be replaced with the future [std::jthread](https://en.cppreference.com/w/cpp/thread/jthread) from C++20; - filesystem, which could be removed if std::filesystem could be used everywhere 😥; The other boost dependencies (stable_vector, intrusive_ptr, graph?) seems to be usable with a header-only version.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1848:203,depend,dependency,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1848,2,['depend'],"['dependencies', 'dependency']"
Integrability,"by filtering duplicates warnings/errors/crashes. This should fix JVM heap problems on small VMs when parsing scene-testing/warnings.txt, scene-testing/errors.txt and scene-testing/crashes.txt. Please don't forget the real problem is that we have 60k+ scene-test warnings... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/555:373,message,message,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/555,1,['message'],['message']
Integrability,check for package dependencies (windows) at cmake,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/807:18,depend,dependencies,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/807,1,['depend'],['dependencies']
Integrability,cherry-pick only the fix in TopologicalChangeProcessor submitted by @fangzhouzisb in PR #1217 ; The other fix needs further discussion. Fix #1213. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1247:246,message,message,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1247,1,['message'],['message']
Integrability,"ck wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions when you want to test some important concepts of a component, like what SofaTest wanted to do, but without the dependency bloat. A potential non exhaustive list of abstactions such a library could provide ; - Mapping ; - linearisation, ; - applyJ applyJT equivalence ; - ForceField; - linearisation; - addDForce addKToMatrix equivalence ; - addKToMatrix must give a SPD matrix (well actually in Sofa convention I think internal forcefields actually give a SND matrix but the idea remains... Nothing of this testing API would require the initialisation of a simulation / node. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:2623,depend,depends,2623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,['depend'],"['dependency', 'depends']"
Integrability,"coefficient is always zero (since for no strain we have no stress). For examples the coefficients for polynomials [3,2,4] will be put as [a1,a2,a3,b1,b2,c1,c2,c3,c4].; The dedication of jacobian matrix for PolynomialSpringForceField is given below; ![Pol1](https://user-images.githubusercontent.com/28653498/79741283-45f34c00-8301-11ea-8472-778b8b4c4dc4.JPG); ![Pol2](https://user-images.githubusercontent.com/28653498/79741289-4855a600-8301-11ea-86fc-b1a2aa29b92c.JPG); ![Pol3](https://user-images.githubusercontent.com/28653498/79741294-4ab80000-8301-11ea-8ef9-ff2a29603218.JPG); ![Pol4](https://user-images.githubusercontent.com/28653498/79741295-4be92d00-8301-11ea-9ef8-a444c6d23f44.JPG); I guess the dedication has to be added as documentation, but I do not know how to add it. For RestShapeSpring I added an exponetial addition to the denominator to avoid Nan problems for cases when spring has a zero length. As a result, the stress simulation is shifted compared with polynomial values, but it keeps its nonlinearity. Here is the dedication of a derivative; ![RestPol1](https://user-images.githubusercontent.com/28653498/79741632-de89cc00-8301-11ea-95a5-72803bb1d259.JPG); ![RestPol2](https://user-images.githubusercontent.com/28653498/79741636-e0ec2600-8301-11ea-87f6-fd7ce1e8c3d1.JPG); ![RestPol3](https://user-images.githubusercontent.com/28653498/79741643-e34e8000-8301-11ea-8ce7-5e44658d802d.JPG); ![RestPol4](https://user-images.githubusercontent.com/28653498/79741646-e3e71680-8301-11ea-9d20-5c1327fb4080.JPG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342:2320,message,message,2320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342,1,['message'],['message']
Integrability,"concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:1200,interface,interface,1200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,3,"['interface', 'message']","['interface', 'message']"
Integrability,cs.framework/Versions/A/CoreGraphics; 0x7fff25874000 - 0x7fff2596afff com.apple.ColorSync (4.13.0 - 3473.3.1) <A67D9B0A-E9FB-325A-873B-032DAF45C112> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync; 0x7fff2596b000 - 0x7fff259c6fff com.apple.HIServices (1.22 - 714) <780B2B09-80A6-32C8-B9E5-024988196E00> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices; 0x7fff25ab9000 - 0x7fff25c7dfff com.apple.Montreal (1.0 - 142) <A5670332-A468-35DB-9333-A53B30926E46> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal; 0x7fff25d72000 - 0x7fff26190fff com.apple.CoreData (120 - 1044.3) <7BE9684B-4439-3008-A2A7-4093BBCA180A> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData; 0x7fff26191000 - 0x7fff261a7fff com.apple.ProtocolBuffer (1 - 285.23.11.29.1) <58CD91DC-64A9-3A97-AE41-6EA30308D617> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer; 0x7fff261a8000 - 0x7fff26367fff libsqlite3.dylib (321.1) <ACCC6A4C-3257-38A4-8AFB-BA73D906205B> /usr/lib/libsqlite3.dylib; 0x7fff26368000 - 0x7fff263e4fff com.apple.Accounts (113 - 113) <BCB8494A-A340-30A1-928C-9B53E953328D> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts; 0x7fff263e5000 - 0x7fff263fdfff com.apple.commonutilities (8.0 - 900) <8C96D016-2B40-39C0-A51C-9CF687AE7218> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities; 0x7fff263fe000 - 0x7fff2647ffff com.apple.BaseBoard (526 - 526) <3A964BB6-7AB8-3B5D-BAF6-40F56D2BA393> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard; 0x7fff26480000 - 0x7fff264cbfff com.apple.RunningBoardServices (1.0 - 505.80.1) <4B9FFFB3-310F-350A-BEBB-AB779BD3F405> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices; 0x7fff264cc000 - 0x7fff26541fff com.apple.AE (918.0.1 - 918.0.1) <9B6B42DB-8768-343B-B10E-A9A5710280CD> /System/Librar,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:25498,Protocol,ProtocolBuffer,25498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Protocol'],['ProtocolBuffer']
Integrability,"ctions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1893:2042,message,message,2042,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893,1,['message'],['message']
Integrability,"ctory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.so; ```. Which doesn't give us a lot of information, on the contrary... This PR improve the diagnostic message from the object factory. This is the resulted output:. ```; [WARNING] [ObjectFactory] Class already registered: BilateralInteractionConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: BilateralInteractionConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ConstraintAnimationLoop; [WARNING] [ObjectFactory] Class already registered: FreeMotionAnimationLoop; [WARNING] [ObjectFactory] Class already registered: GenericConstraintCorrection; [WARNING] [ObjectFactory] Class already registered: GenericConstraintSolver; [WARNING] [ObjectFactory] Class already registered: LCPConstraintSolver; [WARNING] [ObjectFactory] Class already registered: LMDNewProximityIntersection; [WARNING] [ObjectFactory] Class already registered: LinearSolverConstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: LinearSolverConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: LinearSolverConstraintCorrection<Vec2d>; [",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:2751,message,message,2751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,1,['message'],['message']
Integrability,"d objects, ; 3. A `SubsetMultiMapping` that will make the link between the two provided objects and the new mechanical state; 4. The spring force field. Since `SubsetMultiMapping` was initially in SofaMiscMapping, it has been moved into SofaBaseMechanics. A compatibility layer is available. Other components using `StiffSpringForceField` had to be adapted to create also the extra components. An example is `AttachBodyPerformer` which creates the spring between an object and the mouse (shift + clic). WARNING:; Since `StiffSpringForceField` is now necessarily located in a mapped node, its stiffness matrix is not mapped in case of a built linear system. The forces are then computed explicitly only. This issue will be addressed in the new design of the matrix assembly. TODO:. - [x] A description for this PR; - [ ] Handle topological changes in `SpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2653 and https://github.com/sofa-framework/sofa/pull/2729; - [x] Deal with `BoxStiffSpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2621; - [x] Compilation and tests issues on CI (CUDA); - [x] In `AttachBodyPerformer`, a Node remains in the scene when `AttachBodyPerformer` is destroyed. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/224]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554:2458,depend,depends-on,2458,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554,1,['depend'],['depends-on']
Integrability,"d paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1301,message,message,1301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['message'],['message']
Integrability,"dMapping_test.cpp.o (3280 ms); SquareMapping_test.cpp.o (3239 ms); RigidMapping_test.cpp.o (3089 ms); SquareDistanceMapping_test.cpp.o (2976 ms); ... 19187 ms: sofa/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/MechanicalVisitor.h (included 100 times, avg 191 ms), included via:; initSofaDenseSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (440 ms); StaticSolver.cpp.o StaticSolver.h MechanicalMatrixVisitor.h (427 ms); NewMatCGLinearSolver.cpp.o CGLinearSolver.inl CGLinearSolver.h MatrixLinearSolver.h (404 ms); DefaultMultiMatrixAccessor.cpp.o DefaultMultiMatrixAccessor.h (388 ms); PrecomputedLinearSolver.cpp.o PrecomputedLinearSolver.inl PrecomputedLinearSolver.h MatrixLinearSolver.h (367 ms); MatrixLinearSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (350 ms); ... 18437 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/basic_string.h (included 167 times, avg 110 ms), included via:; cmake_pch.hxx Messaging.h MessageDispatcher.h Message.h iostream ostream ios ios_base.h locale_classes.h string (203 ms); cmake_pch.hxx Base.h StringUtils.h string (198 ms); cmake_pch.hxx Base.h StringUtils.h string (196 ms); cmake_pch.hxx Base.h StringUtils.h string (195 ms); cmake_pch.hxx Base.h StringUtils.h string (194 ms); cmake_pch.hxx Base.h StringUtils.h string (182 ms); ... 18298 ms: sofa/modules/SofaGuiQt/src/sofa/gui/qt/ModifyObject.h (included 19 times, avg 963 ms), included via:; MaterialDataWidget.cpp.o MaterialDataWidget.h DataWidget.h (1881 ms); StructDataWidget.cpp.o StructDataWidget.h SimpleDataWidget.h DataWidget.h (1645 ms); QDisplayDataWidget.cpp.o QDisplayDataWidget.h DataWidget.h (1580 ms); DisplayFlagsDataWidget.cpp.o DisplayFlagsDataWidget.h DataWidget.h (1567 ms); QRGBAColorPicker.cpp.o QRGBAColorPicker.h DataWidget.h (1555 ms); moc_QDisplayPropertyWidget.cpp.o QDisplayPropertyWidget.h (1496 ms); ... 17890 ms: sofa/modules/SofaGuiCommon/src/sofa/gui/BaseGUI.h (included 15 times, avg 1192 ms), ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:37737,Message,MessageDispatcher,37737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['Message'],['MessageDispatcher']
Integrability,"dding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin SofaGeneralDeformable; Adding plugin SofaGeneralEngine; Adding plugin SofaGeneralExplicitOdeSolver; Adding plugin SofaGeneralImplicitOdeSolver; Adding plugin SofaGeneralLinearSolver; Adding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL depend",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:2920,message,message,2920,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['message'],['message']
Integrability,"defaulttype::MatSym becomes sofa::type::MatSym. ## Breaking; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. ## Talking. - An other contribution I would like to spread to the sofa code base: ; Instead of throwing a text information if the function cannot do (like matrix non invertible, etc), ; this should always return a boolean value and apply the [[nodiscard]] flag to oblige the user to use the return value.; This makes the compiler generates a warning; I would even push to make it a compilation error; More generally, it would be cool to use the [[nodiscard]] flag much more for critical code.; ~~I tried to even use the [[nodiscard ""MESSAGE""]] but this feature seems only included with c++20 so I may change this PR to run successfully on the CI.~~; As expected, this is not supported by the CI 🙁. - the compatibility layer still holds the dependency on helper for the messaging, so we should discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1775:1289,MESSAGE,MESSAGE,1289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1775,2,"['MESSAGE', 'depend']","['MESSAGE', 'dependency']"
Integrability,"dent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; Python:; Version: 3.9.7; Executable: D:/11631/miniconda3/python.exe; Headers: D:/11631/miniconda3/include; Libraries: D:/11631/miniconda3/libs/python39.lib; User site: C:\Users\11631\AppData\Roaming\Python\Python39\site-packages; pybind11:; Version: 2.8.1; Config: E:/GitHub/vcpkg/installed/x64-windows/share/pybind11/pybind11Config.cmake; Adding plugin LMConstraint; SofaDistanceGrid not found: DistanceLM codes will not be compiled; Adding application runSofa; Write Plugin list at J:/GitHub/sofa/build/bin/plugin_list.conf.default; Configuring incomplete, errors occurred!; See also ""J:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:3957,depend,dependent,3957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['depend'],['dependent']
Integrability,"diff, ""name"", ""desc"")); , c_diff(d_diff) // listen to d_diff data. The constructor of the DataCallback takes a data as reference; ```. Then anywhere (usually in the constructor body); ```; c_diff.addCallback(this,&MyComponent::myfunction1); ; c_diff.addCallback(this,&MyComponent::myfunction2); ; ```. The main difference with an existing type in sofa if the possibility to attach several functions and more importantly to specify the component on which the callback will be called. This allows to define callbacks as member functions of the component, which simplify access to parameters. Additional test are added allowing to modify the data while the callback is called (in order to avoid cyclic calls). This is usefull for linked data i.e. The callback receives a modification from the parent, the callback is then called and it is allowed to modify the data in the callback which will automatically call update of childs of the data. . The second type introduced in this PR is a wrapper allowing to easily associate a widget with a specific types of data. It can be used as follows: . in a cpp file; `sofa::helper::Creator<sofa::gui::qt::DataWidgetFactory, GenericDataWidget< Data<bool>, QtDataBoxEdit > >	DWClass_bool(""bool"",true);`. QtDataBoxEdit is a Qwidget class defined by the user that needs to define usual functions needed in sofa widgets : ; ```; void readFromData(const Data<bool>& data);; void writeToData(Data<bool>& data);; ```. And constructor must take as parameter the parent and the data as follows :; `QtDataBoxEdit(sofa::gui::qt::DataWidget* parent,const sofa::core::objectmodel::Data<bool> & data) : QCheckBox(parent);`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911:1342,wrap,wrapper,1342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911,1,['wrap'],['wrapper']
Integrability,"ding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PU",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3099,message,message,3099,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,1,['message'],['message']
Integrability,"e anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:1477,depend,depends-on,1477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,1,['depend'],['depends-on']
Integrability,"e https://github.com/sofa-framework/sofa/issues/160 or PR https://github.com/sofa-framework/sofa/pull/106 and others.... . The general goal of this Issue is to finally have only one system all around sofa to increase both code consistency and user interface behavior. ; ; Things to do to make that happen: ; - [x] implementing a per component logging system on top of the msg_api to prove we can replace the existing error logging system. (Done in PR https://github.com/sofa-framework/sofa/pull/106). - [x] replace the existing logging of error it should contains:; - removing the filling of the messages in sout.; - removing the old string based buffer (API BREAK).; - removing all the uses of the old message buffers and replace them with the new one (API BREAK).; - updating the gui to use the new msghandler buffers. - [ ] update sofaQtQuick (but there is no API break). - [x] update runSofa to the buffer API break, at least make it compile/run. - [x] clean the way we handle the printLog (see Issue https://github.com/sofa-framework/sofa/issues/160); - remove/rename the printLog data and implement backward compatibility ; - a replacement solution has to be implement to control the printing.; - a replacement solution has to be implement to control the messages based on a per-component selection of the printed messages. - [ ] extending/unifying the sout/serr with more sdebug/swarning. This must be discussed seriously during a meeting because I currently made a lot of attempts to this but didn't managed to implement a working solution without the sever flawn sout/serr have. If you have ideas on that please make a branch with working proposal so that we have sounded discussion (see Issue https://github.com/sofa-framework/sofa/issues/160). - [x] implementing the improvement of the msg_* API discussed in #160. . If like me you think this should be fixed...please join this discussion and share the workload. ; I'm working in https://github.com/SofaDefrost/sofa/tree/improve-messageapi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/179:1466,message,messages,1466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/179,3,['message'],"['messageapi', 'messages']"
Integrability,"e the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1893:2181,message,message,2181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893,2,['message'],['message']
Integrability,"e. This assumption was problematic as it favor the testing of code paths that does not generate warning or errors instead of testing all the possible paths. To favor both valid and invalid paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1139,message,message,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['message'],['message']
Integrability,e.g. Eigen among others. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/397:124,message,message,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/397,1,['message'],['message']
Integrability,"eMotionAnimationLoop so that it is more faithful to the actual equations, most notably by ; allowing only one linearisation of the mappings within the time step. ; - Update the API in order to compute a linearised version of the constraint forces, in a similar fashion to ; what is done in the Compliant plugin. . # Requirements ; The following PR are required in order to build this ; - #484 ✔️; - #450 ✔️ ; - #452 ✔️ ; - #456 ✔️ . For testing: ; - `SOFA_USE_MASK` **must** be deactivated, otherwise derivatives quantities ( velocity at contact points for example) are not propagated at all since all dofs are ""masked"" by default. After having a rather quick look, apparently the `SOFA_USE_MASK` impose some strict (undocumented) requirements (on top of other limitations like the fact that it does not support changes in the topology) about where in the time step the ""apply"" method of mappings is called. - There is a branch on my local fork that integrates all the requirements for testing that can be found at the following location [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration). # Changelog; API Breaking. [SofaCore]; - `ConstraintSolver` can now define the VecId where the constraint lambdas and constraint correction are stored. Previously, these were fixed locations, usually VecId::externalForce() and VecId::dx(), but it could vary depending on the implementation of both the ConstraintSolver and the ConstraintCorrection API. Components can retrieve these locations when inspecting their ConstraintParams object which is usually a parameter of the API methods for constraint solving.; - `ConstraintParams` contains the `MultiMatrixDerivId` that can be used by components related to the `ConstraintSolver` to retrieve the location of the constraint jacobian.; - `ConstraintResolution` API constructor needs to be passed the number of lines that are involved in the solving of this constraint equation. The previous implementat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:1087,integrat,integrates,1087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['integrat'],['integrates']
Integrability,"ected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions when you want to test some important concepts of a component, like what SofaTest wanted to do, but without the dependency bloat. A potential non exhaustive list of abstactions such a library could provide ; - Mapping ; - linearisation, ; - applyJ applyJT equivalence ; - ForceField; - linearisation; - addDForce addKToMatrix equivalence ; - addKToMatrix must give a SPD matrix (well actually in Sofa convention I think internal forcefields actually give a SND matrix but the idea remains... Nothing of this testing API would require the initialisation of a simulation / node. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:3475,message,message,3475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['message'],['message']
Integrability,"ed is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology""; warning is appearing. however, without crashing it get configured and generates the files. I have build the system on Visual Studio 2019 and it complies without any errors. However, when loading the RunSofa ""SofaPython"" and ""SofaExporter"" modules are not loading. I tried using the plugin manager and it reports erros that .dll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:1206,message,messages,1206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['message'],['messages']
Integrability,"el='17.06'/>; ```; If the scene does not have this component the level is automatically set to 17.06 so existing scene will just work as they should. Now what happens if a scene with a given level is loaded in a sofa that have a different level (eg: '17.12'). In this case dedicated messages are printed to warn user things may go wrong. . Here is an example of what happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""TheComponentWeWantToRemove"" ); msg_warning(o) << ""TheComponentWewantToRemove is deprecated since sofa 17.06. It have been replaced by TheSuperComponent. #See PR318"" ;; }) ;; }; ```. Everything is in SceneChecker.cpp/SceneChecker.h and APIVersion.* ...the other files in the changes are ; in fact the content of PR #314; ______________________________________________________; <!--- Please leave this at the end of your message --",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/322:1506,message,messages,1506,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/322,2,['message'],['messages']
Integrability,everything is in the title.; This PR: ; - clean some code commented.; - remove the HAVE_NEW_HEXA macro which was hardcoded to true since 2009; - change the NDEBUG topology test into a c++if condition so the code is compiled. work duplicated with STC#5 branch. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/693:359,message,message,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/693,1,['message'],['message']
Integrability,eworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore; 0x7fff2c05a000 - 0x7fff2c126fff com.apple.TextureIO (3.10.9 - 3.10.9) <50BA07A4-02E8-38EE-B0B9-B12C277B563B> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO; 0x7fff2c127000 - 0x7fff2c12ffff com.apple.InternationalSupport (1.0 - 60) <DE997943-6AD5-32DA-B48E-78170C1EAA7B> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport; 0x7fff2c130000 - 0x7fff2c1abfff com.apple.datadetectorscore (8.0 - 674) <A4EBFF22-F861-321A-AF28-1DB8ECB9A4FF> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore; 0x7fff2c1ac000 - 0x7fff2c20afff com.apple.UserActivity (435 - 435) <12250395-D660-3CC1-81DB-565340F2651B> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity; 0x7fff2c20b000 - 0x7fff2c976fff com.apple.MediaToolbox (1.0 - 2765.6.4.2) <C8645EA0-643D-38CF-AA88-3253339192B1> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox; 0x7fff2ce30000 - 0x7fff2ce58fff com.apple.locationsupport (2420.12.16 - 2420.12.16) <63AB1284-8E33-3E9D-A857-9370F492B343> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport; 0x7fff2ce59000 - 0x7fff2ce8afff libSessionUtility.dylib (76.7) <6AAD02A0-9590-3CED-9568-36E05C59AA2B> /System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib; 0x7fff2ce8b000 - 0x7fff2cfbbfff com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <8E53C25F-9FE2-372E-8374-6A598D72C4C1> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox; 0x7fff2cfbc000 - 0x7fff2d023fff com.apple.audio.AudioSession (1.0 - 76.7) <F696F4EC-9344-3C85-941E-6E5EF5CEF585> /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession; 0x7fff2d024000 - 0x7fff2d036fff libAudioStatistics.dylib (25.4) <303533DD-D001-3CE8-A5A4-EC29F464FC3A> /usr/lib/libAudioStatistics.dylib;,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:56089,MediaT,MediaToolbox,56089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['MediaT'],['MediaToolbox']
Integrability,failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scene,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2534,message,messages,2534,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['message'],['messages']
Integrability,"ference; ```. Then anywhere (usually in the constructor body); ```; c_diff.addCallback(this,&MyComponent::myfunction1); ; c_diff.addCallback(this,&MyComponent::myfunction2); ; ```. The main difference with an existing type in sofa if the possibility to attach several functions and more importantly to specify the component on which the callback will be called. This allows to define callbacks as member functions of the component, which simplify access to parameters. Additional test are added allowing to modify the data while the callback is called (in order to avoid cyclic calls). This is usefull for linked data i.e. The callback receives a modification from the parent, the callback is then called and it is allowed to modify the data in the callback which will automatically call update of childs of the data. . The second type introduced in this PR is a wrapper allowing to easily associate a widget with a specific types of data. It can be used as follows: . in a cpp file; `sofa::helper::Creator<sofa::gui::qt::DataWidgetFactory, GenericDataWidget< Data<bool>, QtDataBoxEdit > >	DWClass_bool(""bool"",true);`. QtDataBoxEdit is a Qwidget class defined by the user that needs to define usual functions needed in sofa widgets : ; ```; void readFromData(const Data<bool>& data);; void writeToData(Data<bool>& data);; ```. And constructor must take as parameter the parent and the data as follows :; `QtDataBoxEdit(sofa::gui::qt::DataWidget* parent,const sofa::core::objectmodel::Data<bool> & data) : QCheckBox(parent);`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/911:2104,message,message,2104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/911,1,['message'],['message']
Integrability,find_package(SofaGui) was failing because of SofaGuiCommon's dependency on SofaComponentAll. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1198:61,depend,dependency,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1198,2,"['depend', 'message']","['dependency', 'message']"
Integrability,fix #551 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1058:110,message,message,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1058,1,['message'],['message']
Integrability,fix #988 . tada!; ![barycentric_00000001](https://user-images.githubusercontent.com/21199245/58172989-64d50280-7c9a-11e9-87e6-472d08feb97e.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1057:244,message,message,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1057,1,['message'],['message']
Integrability,fixed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/214:106,message,message,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/214,1,['message'],['message']
Integrability,fixes #435 RigidMapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/441:124,message,message,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/441,1,['message'],['message']
Integrability,fixes #723 . - removes copy-paste comments; - fixes horrible typos in the scene's name; - restores the scene's desired behavior . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/765:229,message,message,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/765,1,['message'],['message']
Integrability,"fixing #238 ; This fix solves the segfault at startup that intel-powered linux machines experience.; It should be a linux-specific bugfix to my understanding.; If anyone knows a clean way of probing whether or not a ""Core profile"" context would be created (something better than parsing lspci to see if we're runing an intel GPU...), I'll update this PR accordingly. Anyone to review?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/526:485,message,message,485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/526,1,['message'],['message']
Integrability,fixing Polynomial #434 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/442:124,message,message,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/442,1,['message'],['message']
Integrability,"from [CompressedRowSparseMatrix](https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h) so we need to bring their version of CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:1290,integrat,integrated,1290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,1,['integrat'],['integrated']
Integrability,from comment:; `The Data constraintForces is used to expose the intensities of constraint forces in the simulation. We use the constraint forces as the approximation of real contact forces. We use this Data to provide contact information for the catheter insertion. The user can easily check the constraint forces from the GenericConstraint component interface.; `. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/840:351,interface,interface,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/840,2,"['interface', 'message']","['interface', 'message']"
Integrability,"g-500/sofa/build/v21.12/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:80 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). Using legacy headers is enabled.; Headers from v21.06 are usable, but it is advised to change your code to use the new headers introduced in v21.12.; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin SofaGeneralDeformable; CMake Warning at /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaEigen2SolverConfig.cmake:36 (message):; SofaEigen2Solver has been removed. The package still exists for; compatibility but is empty. Eigen classes were moved to Sofa.LinearAlgebra; and SVDLinearSolver to SofaDenseSolver.; Call Stack (most recent call first):; /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaBaseConfig.cmake:35 (find_package); /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaGeneralDeformableConfig.cmake:34 (find_package); modules/SofaGeneralDeformable/SofaGeneralDeformable_test/CMakeLists.txt:12 (find_package). Adding plugin SofaGeneralEngine; Adding plugin SofaGeneralExplicitOdeSolver; Adding plugin SofaGeneralImplicitOdeSolver; Adding plugin SofaGeneralLinearSolver; Adding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaS",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:1481,message,message,1481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,1,['message'],['message']
Integrability,gcc 10 is showing a lot of warning for the use of visibility specifier on already defined types saying it is not needed. So I remove them...let's see if the behavior is the same on windows or if the declspec has a more general scope or if everything is fine. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1456:360,message,message,360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1456,1,['message'],['message']
Integrability,"getHeaderFileLocation() won't probably ever be overridden, so the virtual keyword is removed from the macro (and remove literally thousands lines of warnings in logs). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1062:267,message,message,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1062,1,['message'],['message']
Integrability,"gin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:1024,depend,dependency,1024,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,1,['depend'],['dependency']
Integrability,hasChanged methods were not const. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1488:134,message,message,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1488,1,['message'],['message']
Integrability,"he Datas and the Links. Example with:; ```py; print(dir(myMechanicalObject)); ```; Will prints:; ```; ['__class__', '__delattr__', '__dir__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'addData', 'addNewData', 'applyRotation', 'applyScale', 'applyTranslation', 'bbox', 'bwdInit', 'cleanup', 'computeBBox', 'constraint', 'context', 'derivX', 'downCast', 'drawMode', 'externalForce', 'findData', 'findLink', 'force', 'free_position', 'free_velocity', 'getAsACreateObjectParameter', 'getCategories', 'getClassName', 'getContext', 'getData', 'getDataFields', 'getLink', 'getLinkPath', 'getListOfDataFields', 'getListOfLinks', 'getMaster', 'getName', 'getPathName', 'getSize', 'getSlaves', 'getTarget', 'getTemplateName', 'init', 'isToPrint', 'listening', 'mappingJacobian', 'master', 'name', 'position', 'printLog', 'reinit', 'reserve', 'reset', 'reset_position', 'reset_velocity', 'resize', 'restScale', 'rest_position', 'rotation', 'rotation2', 'scale3d', 'setSrc', 'showColor', 'showIndices', 'showIndicesScale', 'showObject', 'showObjectScale', 'showVectors', 'showVectorsScale', 'size', 'slaves', 'storeResetState', 'tags', 'topology', 'translation', 'translation2', 'useTopology', 'velocity']; ```. NB: There is minimal test to be sure this work.; NB2: I'm not found of this big list but didn't want to change the semantics to visually separate the links, the data and the methods. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/762:1795,message,message,1795,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/762,1,['message'],['message']
Integrability,"he Sofa 'DataEngine' in a scripted way. In the second example provided it is shown how a versatile ROI functionality can be implemented with the help of the PSDE. Two examples with some documentation are provided in: ; applications/plugins/SofaPython/examples/PSDEExamples/. Example of use (01-basic/PSDEBasic.pyscn):; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; import Sofa; import os. path = os.path.dirname(os.path.abspath(__file__))+'/../../../../../../share/mesh/'; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename=path+'liver.vtk'); rootNode.createObject('PythonScriptDataEngine', name='PSDE', filename=""DataEngine.py"", classname=""MyDataEngine"")	 . ```; Example for DataEngine class in Python (01-basic/DataEngine.py):. ```python; class MyDataEngine(Sofa.PythonScriptDataEngine): ; ; def parse(self): ; # this is the correct place to define inputs and outputs! (linking will not work in init() for instance); self.addNewInput('Positions',datatype='p',value='@loader.position') ; self.addNewOutput('NumPoints',datatype='d', value='0') . def init(self):; 	pass. def update(self): ; self.NumPoints = len(self.Positions); ```. What it does NOT provide: A new form of parsing from Python data to Sofa data. It uses the available mechanism that uses string conversion and parsing. Also, the type of the Data has to be declared/selected with a parameter in Python, because there is no logic to automatically derive the type desired by the user (could be future work). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/583:2523,message,message,2523,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/583,1,['message'],['message']
Integrability,"helper::system::atomic<int> was introduced long time ago (before std::atomic I guess).; This code is compiling only for i386 and x86_64 code with gcc/clang (and msvc); Now that std::atomic is here (and we are using c+>11), I guess it is time to use std::atomic where we can. Those modifications mostly appeared in multithreading-related code, so it would be good that @fspadoni could take a look :octocat: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1035:507,message,message,507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1035,1,['message'],['message']
Integrability,"her licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compiler path the parent of a plugin directory, currently because it is the same parent as plugins with different licences it is difficult to be sure unwanted code is not included); 4. it fits with the way of organizing all codes around collections of libraries, which was the original intent behind Helper/Core/DefaultType within SofaFramework, Simulation* within SofaSimulation, Base* within SofaBase, ..., but which unfortunately was not agreed to with everyone so stuck in years-long discussions and is now broken by adding a ""SofaKernel"" level. As a reminder of the key points of this way of organizing codes, the idea was to make it consistent where the code/targets are found (always within a sub-subdirectory) while allowing to share common scripts/docs/packaging/... at the ""collection"" level instead of copy/pasted within each plugin/library. 2 disadvantages that I see:; 1. it would be useful to also move the other plugins to this new hierarchy (so more files would need to be moved in the end), but this can be done later, plugin-by-plugin, depending on the main maintainers of each; 2. we might get stuck in an endless debate/discussion again...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:4396,depend,depending,4396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['depend'],['depending']
Integrability,"his PR includes all changes and adds of the incoming [PSL] branch that can be merged directly. It includes some Python bindings, additional tests, and various cleanings.; Hopefully, it should not break anything. in BaseContext add variants of getObjects() which ease the syntax (eg: for(auto& i : getNodeObjects()){...} + corresponding tests. . - in Node add variants of getNodeObjects() and getTreeObjects that does not force to ease the syntax+ corresponding tests. . - in BaseLink add a setFlag method and a setPersistant...this makes things more consistent with BaseData. - in Binding_Base add the methods: addNewData, addData, getData, getLink, getListOfDataFields, getListOfLinks. The function are documented with docstring and tested in test_BindingBase.py. - in Binding_Data add methods: isSet, isPersistant, setPersistant, hasParent, getParentPath, setValueString. The function are documented with docstring and tested in test_BindingData.py; ; - in Binding_Link add methods: setValueString, isPersistant, setPersistant. The function are documented with docstring and tested in test_BindingLink.py. . - in Binding_SofaModule add methods: getAliasesFor. The function are documented with docstrings & tested in test_BindingSofa.py. - in SofaPython add functions: sendMessageFromException, getSofaFormattedStringFromException. - in SofaTest/_init_.py add ASSERT_* functions that generates real gtest failure. . - in runSofa in QDataSimpleEdit & QLinkSimpleEdit correctly prevent writing when the data field is readOnly; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410:1691,message,message,1691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410,1,['message'],['message']
Integrability,ht; 0x7fff251e0000 - 0x7fff25873fff com.apple.CoreGraphics (2.0 - 1463.3.2) <29845645-F6F2-34E0-AC0D-C659773C78ED> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics; 0x7fff25874000 - 0x7fff2596afff com.apple.ColorSync (4.13.0 - 3473.3.1) <A67D9B0A-E9FB-325A-873B-032DAF45C112> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync; 0x7fff2596b000 - 0x7fff259c6fff com.apple.HIServices (1.22 - 714) <780B2B09-80A6-32C8-B9E5-024988196E00> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices; 0x7fff25ab9000 - 0x7fff25c7dfff com.apple.Montreal (1.0 - 142) <A5670332-A468-35DB-9333-A53B30926E46> /System/Library/PrivateFrameworks/Montreal.framework/Versions/A/Montreal; 0x7fff25d72000 - 0x7fff26190fff com.apple.CoreData (120 - 1044.3) <7BE9684B-4439-3008-A2A7-4093BBCA180A> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData; 0x7fff26191000 - 0x7fff261a7fff com.apple.ProtocolBuffer (1 - 285.23.11.29.1) <58CD91DC-64A9-3A97-AE41-6EA30308D617> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer; 0x7fff261a8000 - 0x7fff26367fff libsqlite3.dylib (321.1) <ACCC6A4C-3257-38A4-8AFB-BA73D906205B> /usr/lib/libsqlite3.dylib; 0x7fff26368000 - 0x7fff263e4fff com.apple.Accounts (113 - 113) <BCB8494A-A340-30A1-928C-9B53E953328D> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts; 0x7fff263e5000 - 0x7fff263fdfff com.apple.commonutilities (8.0 - 900) <8C96D016-2B40-39C0-A51C-9CF687AE7218> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities; 0x7fff263fe000 - 0x7fff2647ffff com.apple.BaseBoard (526 - 526) <3A964BB6-7AB8-3B5D-BAF6-40F56D2BA393> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard; 0x7fff26480000 - 0x7fff264cbfff com.apple.RunningBoardServices (1.0 - 505.80.1) <4B9FFFB3-310F-350A-BEBB-AB779BD3F405> /System/Library/PrivateFrameworks/RunningBoardServices.framework,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:25353,Protocol,ProtocolBuffer,25353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Protocol'],['ProtocolBuffer']
Integrability,"https://github.com/fredroy/SofaGLFW. Why?; - Bothersome to need Qt to have a 3D rendering of a scene; - The existing ""simple"" GUI SofaGLUT is not supported anymore and is based on a deprecated library (glut). This PR brings a simple GUI based on GLFW (a spiritual heir of Glut).; It only needs SofaGUICommon, SofaBaseVisual and Sofa.GL as dependencies.; Integration of GLFW is automatic (automatic fetching and integration with cmake), and linked statically (does not need a glfw.dll to be shipped with). This GUI is launchable with the standard runSofa (with the parameter ""-g glfw""), or can be used with a (provided) stand-alone executable (which needs much less dependencies than runSofa). Lastly, this GUI was designed to support multiple windows in the same time and multiple simulations. So when multiple simulations is possible is the future, it should be easy to modify the code to support this feature.; And multiple windows could be based on the fact having multiple Camera in the scene (feature not implemented yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2062:339,depend,dependencies,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062,4,"['Integrat', 'depend', 'integrat']","['Integration', 'dependencies', 'integration']"
Integrability,https://github.com/jnbrunet/caribou. TODOs:; - Ensure in-tree and out-of-tree builds and tests are passing; - Use SOFA macros in the plugin part (SofaCaribou); - Ensure proper relocatable installation for integration in future SOFA binaries (see SofaPython3 as example),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2129:205,integrat,integration,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129,1,['integrat'],['integration']
Integrability,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316:229,depend,depends-on,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316,2,['depend'],['depends-on']
Integrability,i.e. to easily define bracket x[] and len(x) operators to a python type defined in c++. (a concrete usage is coming in another PR). <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/165:175,message,message,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/165,1,['message'],['message']
Integrability,ield; - TrianglePressureForceField; - [SofaConstraint]; - DistanceLMConstraint; - DOFBlockerLMConstraint; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaDeformable] ; - MeshSpringForceField; - [SofaExporter] ; - WriteTopology; - [SofaGeneralDeformable]; - FastTriangularBendingSprings; - QuadBendingSprings; - QuadularBendingSprings; - TriangleBendingSprings; - TriangularBendingSprings; - TriangularBiquadraticSpringsForceField; - TriangularQuadraticSpringsForceField; - TriangularTensorMassForceField; - VectorSpringForceField; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaGeneralLoader] ; - ReadTopology; - [SofaGeneralSimpleFem]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaMeshCollision]; - LineModel; - PointModel; - TriangleModel; - TriangleLocalMinDistanceFilter; - [SofaMiscCollision] ; - TetrahedronModel; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - TriangleFEMForceField; - TriangularAnisotropicFEMForceField; - TriangularFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaMiscMapping]; - DistanceMapping; - DistanceMapping; - [SofaMiscTopology] ; - TopologicalChangeProcessor; - [SofaNonUniformFem] ; - NonUniformHexahedronFEMForceFieldAndMass; - [SofaOpenglVisual] ; - DataDisplay; - [SofaSimpleFem]; - HexahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1223:3482,message,message,3482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1223,1,['message'],['message']
Integrability,ighten the plugin a little bit. New structure:. ```; SofaPython; ├── Binding.cpp; ├── Binding.h; ├── Bindings; │   ├── BaseContext.cpp; │   ├── BaseContext.h; │   ├── Base.cpp; │   ├── Base.cpp.orig; │   ├── Base.h; │   ├── Base.h.orig; │   ├── BaseLoader.cpp; │   ├── BaseLoader.h; │   ├── BaseMapping.cpp; │   ├── BaseMapping.h; │   ├── BaseMechanicalState.cpp; │   ├── BaseMechanicalState.h; │   ├── BaseMeshTopology.cpp; │   ├── BaseMeshTopology.h; │ └── ...; ├── CMakeLists.txt; ├── initSofaPython.cpp; ├── PythonCommon.h; ├── PythonEnvironment.cpp; ├── PythonEnvironment.h; ├── PythonFactory.cpp; ├── PythonFactory.h; ├── PythonMacros.cpp; ├── PythonMacros.h; ├── PythonToSofa.inl; ├── PythonVisitor.cpp; ├── PythonVisitor.h; ├── SceneLoaderPY.cpp; ├── SceneLoaderPY.h; ├── scn2python.py; ├── ScriptController; │   ├── PythonMainScriptController.cpp; │   ├── PythonMainScriptController.h; │   ├── PythonScriptController.cpp; │   ├── PythonScriptController.h; │   ├── PythonScriptControllerHelper.cpp; │   ├── PythonScriptControllerHelper.h; │   ├── PythonScriptDataEngine.cpp; │   ├── PythonScriptDataEngine.h; │   ├── PythonScriptEvent.cpp; │   ├── PythonScriptEvent.h; │   ├── PythonScriptFunction.cpp; │   ├── PythonScriptFunction.h; │   ├── ScriptController.cpp; │   ├── ScriptController.h; │   ├── ScriptDataEngine.cpp; │   ├── ScriptDataEngine.h; │   ├── ScriptEvent.cpp; │   ├── ScriptEvent.h; │   ├── ScriptFunction.cpp; │   └── ScriptFunction.h; ├── SofaPythonConfig.cmake.in; ├── SofaPython.txt; └── ...; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/616:1700,message,message,1700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/616,1,['message'],['message']
Integrability,"ignored scene: DistanceGridForceField-liver.scn. This way, the scene has to remain ignored to build the plugin in default mode (we need it for SofaImplicitField, which is needed for a bunch of examples). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/594:303,message,message,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/594,1,['message'],['message']
Integrability,"ime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to implement an opt-in solution ... by default and for most of our code base, dynamic typeinfo (aka the one following the AbstractTypeInfo interface) are available because they only requires opaque data types. And it is only on purpose that developper can include (most of the time in a .cpp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works the following way... when a Data<Type> is used this automatically trigs the setting of the typeinfo in the repository. If no DataTypeInfo<> is available this fallback to the default one but the data info cannot be used... if in a subsequent compilation unit (.cpp) the same Data<Type> is used with the complete type, the r",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:2432,depend,dependencies,2432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['depend'],['dependencies']
Integrability,"in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This loo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:1378,depend,dependency,1378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,2,['depend'],['dependency']
Integrability,"in DataExchange component, add exchanges of image data types (ImageUC, ImageUS, ImageF), requiring a depedency with the image plugin; + add a simple example passing an image from an ImageContainer (Thread 1) to an ImageViewer (Thread 2); + fix OpenGL issues in the draw() function in the Kinect component in the image plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/769:425,message,message,425,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/769,1,['message'],['message']
Integrability,"in ForceField_test, {Multi,Multi2}Mapping_test.; (+ minor cleaning). EDIT: I also added a missing automatic test for MultiMapping::getK. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/209:236,message,message,236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/209,1,['message'],['message']
Integrability,"in TetrahedronHyperelasticityFEMForceField.inl , gl.h was included before anything, so the macros defined in build_option_opengl.h were ignored.; The inclusion of gl.h was useless anyway so it was removed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1193:305,message,message,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1193,1,['message'],['message']
Integrability,"in having code that rely on these to stop compiling. To update the non-compiling code you need to addi explicitely the includes the code is actually used. . If you only need type declaration (an not definition), please use the foward declaration .h file; eg: sofa/core/fwd.h . The following one may be the one you need:; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/simulation/Node.h>; #include <sofa/core/visual/VisualParams.h>; #include <SofaEigen2Solver/EigenSparseMatrix.h>; #include <sofa/defaulttype/TopologyTypes.h>	; #include <cstddef>; #include <string>	; #include <sofa/core/objectmodel/BaseObject.h>; #include <SofaBaseMechanics/MechanicalObject.h>; #include <sofa/core/behavior/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1764:1021,depend,dependency,1021,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764,1,['depend'],['dependency']
Integrability,"in loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:6196,wrap,wraps,6196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,"['message', 'wrap']","['message', 'wraps']"
Integrability,"in order to be informed when a scene is loaded. WARNING: each SceneLoader's loading function must call ""notifyLoadingScene"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/204:224,message,message,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/204,1,['message'],['message']
Integrability,"in sofa_install_libraries:. cyclic recursions when globbing for external libraries due to symlinks resolution.; I have done this fix for about a month and a half now, without noticing any side effects, but I can't tell if there are any. ______________________________________________________ ; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/766:337,message,message,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/766,1,['message'],['message']
Integrability,"ing CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information... Done; **libboost-dev is already the newest version (1.71.0.0ubuntu2).**; The following packages were automatically installed and are no longer required:; libdrm2:i386 libexpat1:i386 libglapi-mesa:i386 libglvnd0:i386 libx11-xcb1:i386 libxcb-dri2-0:i386 libxcb-dri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:1663,message,message,1663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['message'],['message']
Integrability,"ing and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SU",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2293,message,message,2293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['message'],['message']
Integrability,"ing for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information... Done; **libboost-dev is already the newest version (1.71.0.0ubuntu2).**; The following packages were automatically installed and are no longer required:; libdrm2:i386 libexpat1:i386 libglapi-mesa:i386 libglvnd0:i386 libx11-xcb1:i386 libxcb-dri2-0:i386 libxcb-dri3-0:i386 libxcb-glx0:i386 libxcb-present0:i386 libxcb-sync1:i386 libxdamage1:i386 libxfixes3:i386; libxshmfence1:i386 libxxf86vm1:i386; Use 'sudo apt autoremove' to remove them.; 0 upgraded, 0 newly installed, 0 to remove and 107 not upgraded. Alban. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:2397,depend,dependency,2397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['depend'],['dependency']
Integrability,"ipal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:3429,Depend,Dependencies,3429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['Depend'],['Dependencies']
Integrability,"issue sofa-framework/sofa#2 Fix compilation when option SOFA_FLOATING_POINT_TYPE in CMake selected as float. The problem arising when trying to compile with float was due to missing declaration from newmat external library.; The library has been modified for sofa to use a #define SOFA_FLOAT in include.h; However the SOFA_FLOAT was never defined for the extlib since the current procedure is to set CMake variable SOFA_FLOAT and SOFA_DOUBLE to 1. This was done anyway AFTER processing the cmake of the extlibs. Therefore, this pr moves the option for floating point type in sofa in the root CMakeLists and adds the #define for the newmat library to actually create the float type functions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262:791,message,message,791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262,1,['message'],['message']
Integrability,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4505:301,depend,depend,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505,1,['depend'],['depend']
Integrability,"lDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module SofaDenseSolver; Adding module SofaNonUniformFem; Adding module SofaOpenglVisual; Adding module SofaMiscTopology; Adding module SofaMiscExtra; Adding module SofaMiscForceField; Adding module SofaMiscEngine; Adding module SofaMiscSolver; Adding module SofaMiscFem; Adding module SofaMiscMapping; Adding plugin SofaPython; Adding module SofaExporter; CMake Deprecation Warning at SofaAdvanced/CMakeLists.txt:15 (message):; SofaAdvanced is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology. Adding collection SofaComponentAll; SofaTest: optional dependency SofaPython found, Python_test will be built; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format disabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; SofaMiscCollision: optional dependency SofaSphFluid not found de-activing: <SpatialGridPointModel>; Adding application getDeprecatedComponents; Adding application runSofa; Write Plugin list at C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:2615,message,message,2615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['message'],['message']
Integrability,link to issue #1538 . to be discussed.. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1546:139,message,message,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1546,1,['message'],['message']
Integrability,"member `Data` in a component is to do something like:. ``` c++; MyComponent() ; : my_data( initData(&my_data, init_value, ""friendly name"", ""help message"") ) { ; // ...; }; ```. At this point one can remark that most information provided to `initData` depends on the component _class_, and not on the component _instance_ being constructed, save for the initial value and the pointer to the current instance (used by the data as its 'owner'). . Now what happens when the data is constructed using `initData`?; 1. some `BaseInitData` objet is created, mostly holding pointers to character strings and owner,; 2. `BaseData` is constructed from `BaseInitData` (`BaseData.cpp:70`) where the following happens:; 1. data links for `inputs` and `outputs` are setup, 2x `std::vector::push_back`; 2. data are added back to their owner (from which they come anyway) 1x `std::vector::push_back` + 1x `std::map::insert` for aliases. There is also the `DDGNode` base class initialization, which also incurs at least `initLink` for members `inputs` and `outputs` (cf `DDGNode.cpp:43`), each again causing `addLink` back to the owner and an extra `std::vector::push_back`. Phheew. Now you probably see where I am heading at: do we really need to pay a worst case 6x heap allocation for every single data in every single component created? Or at least, can this cost be alleviated somehow?. **Are there component examples that manage `Data` which are not known at compile-time ?**. If most/all the use-cases are in fact per-class, it is relatively easy to imagine a system that maps names to instance members constructed statically, so that component instances don't have to hold and allocate a vector of pointers to their own datas (!). Data links are more tricky since they depend on the graph, but my opinion is that there should be at least a way to disable automatic link management when they are not needed. . Now thanks for reading this far, I look forward to hearing the community's opinion on the subject :-)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44:2284,depend,depend,2284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44,1,['depend'],['depend']
Integrability,meshconv needs miniflowVR in order to compile.; But the oblivious user is not supposed to know that.... So this fix:; - avoids building meshconv if SOFA_BUILD_MINIFLOWVR is not activated.; - warns the user he needs to activate the previous cmake option. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/358:353,message,message,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/358,1,['message'],['message']
Integrability,"miniFlowVR, an extlib of Sofa, is used for ; - managing a file format for DistanceGrid (component of plugin SofaDistanceGrid); - as a dependency for meshconv, a commandline utility for meshes and used mainly to create the previous file format for DistanceGrid. So as it seems all was related to DistanceGrid:; - miniFlowVR was moved into SofaDistanceGrid (and thus depolluting the main tree of Sofa with the extlib thing); - as a small consequence, move meshconv into SofaDistanceGrid. It is deemed OK as:; - it seems not a lof of people uses meshconv as it is (I remember fixing the compilation ages ago and nobody said anything). Moreover, even its CMakefile was quite ill-formed. ; - meshconv was originally a part of FlowVR itself apparently, so it makes sense to regroup of all of these codes. Additionnally, SofaDistanceGrid was cleanup (reorganizing files like the template, cleaner CMake etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1616:134,depend,dependency,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1616,1,['depend'],['dependency']
Integrability,"missing libs in target_link_libraries for SofaBase, SofaCommon and SofaGeneral after ""modularization"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1381:202,message,message,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1381,1,['message'],['message']
Integrability,"mple, people include sofa/helper/system/gl.h (or any gl-related header), even without needing OpenGL actually. ; And in this header, **SOFA_NO_OPENGL** does include (or not) the good gl.h header according to your OS. So if you enable this header, you still include gl.h, which does nothing.; This is quite nonsensical.; Moreover, if the macro is not well handled in CMake, you may have some weird things happening. # Solution; This PR regroups all OpenGL related code in the core in a single package, needing only SofaHelper and SofaDefaulttype.; If you wish to be able to call OpenGL things, just find_package() it and link it to your library; ```; find_package(Sofa.GL REQUIRED); ...; target_add_library(${Target} PUBLIC .... Sofa.GL); ```. You can even conditionnally test if OpenGL is present or not with ; ```; if(Sofa.GL_FOUND); ...; endif(); ```; if needed (to compile specific components in your module for example). And even more, if you want to compile specific parts of your code with OpenGL (not a good idea but still), you can use this like an external dependency.; Example with **ColourPickingVisitor** in **SofaGuiCommon**.; CMakeLists.txt:; ```; sofa_find_package(Sofa.GL) # create the cmake var SOFAGUICOMMON.GL_HAVE_SOFA.GL; ```; config.h.in; ```; #define SOFAGUICOMMON_HAVE_SOFA_GL @SOFAGUICOMMON_HAVE_SOFA.GL@; ```; ColourPickingVisitor.cpp; ```; void ColourPickingVisitor::processTriangleModel(simulation::Node * node, sofa::component::collision::TriangleCollisionModel<sofa::defaulttype::Vec3Types> * tmodel); {; #ifdef SOFAGUICOMMON_HAVE_SOFA_GL; using namespace sofa::core::collision;; using namespace sofa::defaulttype;; glDisable(GL_LIGHTING);; ....; #endif // SOFAGUICOMMON_HAVE_SOFA_GL; ```; # Compatibility with actual code and breaking things; This new module follows the new targeted architecture for Sofa(NG), hence the Sofa.GL syntax.; All classes/functions are now in the namespace sofa::gl and in the folder sofa/gl; e.g Texture, ; **sofa/gl/Texture.h**; ```; namesp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649:1552,depend,dependency,1552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649,1,['depend'],['dependency']
Integrability,"n, the problem is that by default access to the static version (so the one that need the full inclusion of involved data types) to generate the dynamic one in the VirtualTypeInfo::get() method. As this function is needed to implement Data<T>::getAbstractTypeInfo it means that the complete static version is needed everytime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to implement an opt-in solution ... by default and for most of our code base, dynamic typeinfo (aka the one following the AbstractTypeInfo interface) are available because they only requires opaque data types. And it is only on purpose that developper can include (most of the time in a .cpp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:2136,interface,interface,2136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['interface'],['interface']
Integrability,"nique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works the following way... when a Data<Type> is used this automatically trigs the setting of the typeinfo in the repository. If no DataTypeInfo<> is available this fallback to the default one but the data info cannot be used... if in a subsequent compilation unit (.cpp) the same Data<Type> is used with the complete type, the registring is done again...and if the type is more complete...then the old (partial) type is replaced with the new one. ; - the common data type info are now in their own file in sofa/defaulttype/typeinfo/TypeInfo_XXXX.h/cpp; - the templated code shared between multiple data type info are now in the sofa/defaulttype/typeinfo/models/XXXXX.h; - there is no more dependency to some specific contained data type (eg: RGBAcolor, Vec, Matrice, Set,) in AbstractDataTypeInfo or DataTypeInfo.; - there is a mechanism to get the list of registered typeinfo and wheter the are fully defined or only partially. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:3801,depend,dependency,3801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"nk inherits DDGNode.; A DDGLink thus benefits from the whole dirty flag propagation thingy, and implements the update() function to clean its dirty flag, and update from its inputs.; Just like Datas, a DDGLink also possesses a counter, that is incremented when the link value changes. Just like BaseLinks, and SPtrs, to retrieve the object linked with a DDGLink, you need to call the get() method. The set() method will set the link. When a link is set within a DDGLink, the componentState of the linked object is set as input to that DDGLink. It's up to you to connect your DDGLink to some datas to connect your dependency graph. Contrary to the current link implementation in SOFA, these links, can be very easily manipulated as their base class (BaseDDGLink), or as DDGNodes even. DDGLinks are parsed in Base::parseField just like BaseLinks and BaseDatas, which makes them usable with the BaseObjectDescriptions. (they really mirror the behavior of all other field types.). A very simple test case is present in this PR to show you how it's used. You can reference your links with their pathnames, just like normal datas or links, by calling the getPathName() method. There's not bi-directionality implemented in this PR, (because I didn't have time in the end...) but it's not rocket science:; - all there is to do is add a vector of Base* in Base with helper methods to add, remove retrieve the list of link owners. Then in DDGLink::set(), call the add() method of your link to register`this`. (maybe in another PR...) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226:1801,message,message,1801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226,1,['message'],['message']
Integrability,"nment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:1873,message,message,1873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,1,['message'],['message']
Integrability,non-ASCII chars caused problems in some platform when compiling; Discussed in [Issue323](https://github.com/sofa-framework/sofa/issues/323). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/327:240,message,message,240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/327,1,['message'],['message']
Integrability,normals and vectors to Legacy vtk import. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/536:141,message,message,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/536,1,['message'],['message']
Integrability,"nt code which impact maintainability of our code base. The second problem is the lack of consistency in the way warning and errors are reported. In sofa some component rise en exception while others prints a message and return None which is very problematic to users. . In this PR we addressed these two issues through a major cleaning set of changes:; - [SofaPython]: ; * refactor the way to get get Sofa object from their PyObject equivalent (hundred of changes). ; * add dedicated easing function (unwrap, get, get_baseobject) ; * replace wherever possible copy-pasted code with these function. ; * refactor the way we report error from binding (hundred of changes) (API BREAK). ; * returning NULL with a correctly set exception type as it is the way of handling error in python. ; * when returning NULL it is mandatory to preceed the return with an exception type & message specification. This can be done either with PyExc_SetString() or Py_BaddArgument(), ; * when returning after a failing Py_ParseTuple is an exception, as the function sets itself a very ; descriptive and standardized error message.; * add macros (SP_PYERR_SETSTRING_INVALIDTYPE and SP_PYERR_SETSTRING_OUTOFBOUND) to report consistant message with PyErr_SetString ; * add SP_CLASS_METHOD_DOC() and SP_CLASS_METHOD_KW_DOC() to declare method with their docstring (if you don't know what are docstring read: http://sametmax.com/les-docstrings/); * add new bindings:; * BaseState::getSize ; * BaseMapping::applyJT; * BaseMapping::applyDJT; * Data::getCounter ; * Data::isDirty; * Node::getMass; * Node::getForceField; * STLExporter; * Sofa.unload; * Sofa.path; * Sofa.getAvailableComponents; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a string with the ; python file/line info to add report them in msg_* ; * adds 'override' keyword when needed (more info => http://en.cppreference.com/w/cpp/language/override); * adds tests on P",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:1289,message,message,1289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,1,['message'],['message']
Integrability,"o that the un-catched exceptions are sended as msg_error instead of being printed on the console. ; * cosmetic changes like replacing 'using namespace a;' with the precise 'using a:TheClass', removing in-consistant line spacing. ; * replace ""extern C"" with static. - [Flexible/python] Fix the examples & the tests to take into account the changes in SofaPython; - [Compliant/python] Fix the examples & the tests to take into account the changes in SofaPython. To simplify the submitter's life (and don't waste their time) some extras (read not really relevant) changes are also added to the PR:; - remove a virtual in-heritance on BaseController and plugin/optitracknet. ; - adds a << operator to Message.h to handle file:line information (now in PR: #314 ) ; - made some changes in STLExporter to stay consistant with Sofa guidelines. . There is still some work todo (if you have free time to offer):; Eg: ; in Compliant there is still patterns like:; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: wrong arguments"" );; return NULL;; ```; The SP_MESSAGE_ERROR is probably not needed as it duplicate the one provided by the python exception. . While in ; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: first argument is not a BaseNode"" );; PyErr_BadArgument();; return NULL;; ```; PyExc_SetString() should replace the message error & the bad argument. . More generally there is still a lot of SP_MESSAGE_*() instead of msg_* and there is a lot of method that haven't their docstring. ; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:3634,message,message,3634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,2,['message'],['message']
Integrability,"oduces a new API for targets and packages management, following this scheme:. ```cmake; sofa_create_package_with_targets() # replacing sofa_generate_package. sofa_create_package() # replacing sofa_write_package_config_files. sofa_add_targets_to_package() # replacing sofa_install_targets; if(AUTO_SET_TARGET_PROPERTIES); sofa_auto_set_target_properties() # from a part of sofa_install_targets; endif(); sofa_install_targets_in_package() # from a part of sofa_install_targets; ; if(RELOCATABLE); sofa_set_target_install_relocatable() # replacing sofa_set_install_relocatable; endif(); ```. You can now use only what you need. ; The mega-master-calling-all-the-others macro is sofa_create_package_with_targets (replacing sofa_generate_package). ## Usual examples. To create a ""plugin"" package like SofaExporter:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaExporter; PACKAGE_VERSION ${SofaExporter_VERSION}; TARGETS SofaExporter AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaExporter""; RELOCATABLE ""plugins""; ); ```. To create a ""legacy meta-module"" package like SofaGeneral:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaGui; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaGui AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaGui""; ); ```. To register a ""legacy module"" target like SofaGeneralEngine:; ```cmake; sofa_add_targets_to_package(; PACKAGE_NAME SofaGeneral; TARGETS SofaGeneralEngine AUTO_SET_TARGET_PROPERTIES; ); ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1433:1933,message,message,1933,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1433,1,['message'],['message']
Integrability,"ofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1655:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) volatile = delete;; ^; 1 error generated.; ```. This plugin should either be updated with the new boost API, or get rid of boost dependency.; I don't know this plugin enough... ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:2244,depend,dependency,2244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,1,['depend'],['dependency']
Integrability,"olver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module SofaDenseSolver; Adding module SofaNonUniformFem; Adding module SofaOpenglVisual; Adding module SofaMiscTopology; Adding module SofaMiscExtra; Adding module SofaMiscForceField; Adding module SofaMiscEngine; Adding module SofaMiscSolver; Adding module SofaMiscFem; Adding module SofaMiscMapping; Adding plugin SofaPython; Adding module SofaExporter; CMake Deprecation Warning at SofaAdvanced/CMakeLists.txt:15 (message):; SofaAdvanced is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology. Adding collection SofaComponentAll; SofaTest: optional dependency SofaPython found, Python_test will be built; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format disabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; SofaMiscCollision: optional dependency SofaSphFluid not found de-activing: <SpatialGridPointModel>; Adding application getDeprecatedComponents; Adding application runSofa; Write Plugin list at C:/SOFA/build/master/bin/plugin_list.conf.default; Configuring done; Generating done",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:2840,message,message,2840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,3,"['depend', 'message']","['dependency', 'message']"
Integrability,"om what I know of). ## Breaking; ### Code; Same as #1734:; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions like invert, etc. when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace.; - vector_device now needs a new template parameter, implementing ZeroConstructor and SimpleCopy (already done in SofaCUDA and SofaOpenCL). ### Functionality:; - vector does not use the Messaging mechanism anymore; it was used in the `int` and `unsigned int` specialized version of read(). Instead, I replaced it with std::cerr AND setting a failbit to the resulting stream (which should have been done before actually).; Furthermore, I also changed Data to catch any cerr message (if any) and transpose it into the Messaging mechanism (if the stream as a failbit flag enabled) ; - vector can check bounds with the operator[], in debug mode. ; Before, it was displaying a message (with the Messaging mechanism), tried to dump the stack and quit on an assertion error.; Now it throws an exception (with the same message) which : ; - makes it crash if it is not caught (like before actually); - displays the message and carry on if caught somewhere (and can further debug with stack trace or whatever); which is a not so-bad solution in my opinion. ## Talking; - the cerr thingy; - template parameters; - access bound thing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1893:1843,message,message,1843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1893,1,['message'],['message']
Integrability,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:1999,depend,dependency,1999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,1,['depend'],['dependency']
Integrability,"ontext manager is provided to commit modifications back, should the sparsity pattern change, as shown in the example below. The binding is somewhat unconventional as it uses `ctypes` for simplicity. Perhaps a cleaner version could be made using regular bindings + passing Eigen matrix pointers through python capsules if someone is motivated. # Example; ```python; from SofaPython import sparse; import numpy as np. import Sofa; Sofa.loadPlugin('Flexible'). def createScene(node):; template = 'Affine'. dofs = node.createObject('MechanicalObject', template = template, size = 1); dofs.init(); ; mass = node.createObject('AffineMass', template = template); mass.init(); mass.bwdInit(). ref = np.identity(12); ; with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(). m[10, 10] = 14; ref[10, 10] = 14. # assert our in-place modifications are reflected; with sparse.data_view(mass, 'massMatrix') as mm:; assert (mm == ref).all(). m[0, 10] = 14; ref[0, 10] = 14. # sparsity change: scipy matrix reallocates, no longer aliases ; with sparse.data_view(mass, 'massMatrix') as mm:; assert not (mm == ref).all(); ; # modification commit happens here. with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(); ```. # Changelog. - Added `DataTypeInfo` for `EigenBaseSparseMatrix` derived classes; - Added a bunch of C functions in `SofaPython/ctypes.cpp` for aliasing logic; - Added a ctypes binding for aliasing + contexts in `SofaPython.sparse`; - Added an example in `SofaPython/examples/sparse.py`; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411:1934,message,message,1934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411,1,['message'],['message']
Integrability,"ood as it is misleading on the purpose of the function.; In the following example ; ```cpp; MyObject* ptr;; Base::className(ptr); ; ```; You don't see this is a templated method and you have no idea what 'ptr' is for, and you don't even know if putting a nullptr will work or not. ; Using the templated only syntax is more clear on the role of the function; ```cpp; Base::className<MyObject>(); ; ```; Or if you have an object instance; ```cpp; Base::className<declspec(obj)>(); ; ```. Most common code update pattern; ============================; The most common compilation problem you will encounter with non updated external plugin is related to the overriding of getTemplateName or templateName() method. This method is now now considered as final and thus it is not possible to override it anymore. ; To update old code like this: ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return templateName(); } ; static std::string templateName(const CapsuleCollisionModel<DataTypes>* = nullptr); {; return DataTypes::Name();; }; ```; You can remove the code as the default name generation mecanisme can handle that for you automatically using the ""Name"" . . In the case if your DataTypes does not have a Name() function or if some of the class template parameters should not be exposed as runtime template then you need to implement your custom naming scheem by implementing the following function; ```cpp; static const std::string CustomTemplateName(); { ; return ""CustomName"";; }; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:4341,message,message,4341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,1,['message'],['message']
Integrability,"pological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/217:1663,depend,depending,1663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/217,2,"['depend', 'message']","['depending', 'message']"
Integrability,"ported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to us",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1956,message,messages,1956,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['message'],['messages']
Integrability,"pp.o (3280 ms); SquareMapping_test.cpp.o (3239 ms); RigidMapping_test.cpp.o (3089 ms); SquareDistanceMapping_test.cpp.o (2976 ms); ... 19187 ms: sofa/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/MechanicalVisitor.h (included 100 times, avg 191 ms), included via:; initSofaDenseSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (440 ms); StaticSolver.cpp.o StaticSolver.h MechanicalMatrixVisitor.h (427 ms); NewMatCGLinearSolver.cpp.o CGLinearSolver.inl CGLinearSolver.h MatrixLinearSolver.h (404 ms); DefaultMultiMatrixAccessor.cpp.o DefaultMultiMatrixAccessor.h (388 ms); PrecomputedLinearSolver.cpp.o PrecomputedLinearSolver.inl PrecomputedLinearSolver.h MatrixLinearSolver.h (367 ms); MatrixLinearSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (350 ms); ... 18437 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/basic_string.h (included 167 times, avg 110 ms), included via:; cmake_pch.hxx Messaging.h MessageDispatcher.h Message.h iostream ostream ios ios_base.h locale_classes.h string (203 ms); cmake_pch.hxx Base.h StringUtils.h string (198 ms); cmake_pch.hxx Base.h StringUtils.h string (196 ms); cmake_pch.hxx Base.h StringUtils.h string (195 ms); cmake_pch.hxx Base.h StringUtils.h string (194 ms); cmake_pch.hxx Base.h StringUtils.h string (182 ms); ... 18298 ms: sofa/modules/SofaGuiQt/src/sofa/gui/qt/ModifyObject.h (included 19 times, avg 963 ms), included via:; MaterialDataWidget.cpp.o MaterialDataWidget.h DataWidget.h (1881 ms); StructDataWidget.cpp.o StructDataWidget.h SimpleDataWidget.h DataWidget.h (1645 ms); QDisplayDataWidget.cpp.o QDisplayDataWidget.h DataWidget.h (1580 ms); DisplayFlagsDataWidget.cpp.o DisplayFlagsDataWidget.h DataWidget.h (1567 ms); QRGBAColorPicker.cpp.o QRGBAColorPicker.h DataWidget.h (1555 ms); moc_QDisplayPropertyWidget.cpp.o QDisplayPropertyWidget.h (1496 ms); ... 17890 ms: sofa/modules/SofaGuiCommon/src/sofa/gui/BaseGUI.h (included 15 times, avg 1192 ms), included via:; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:37757,Message,Message,37757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['Message'],['Message']
Integrability,rapid fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/343:110,message,message,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/343,1,['message'],['message']
Integrability,raries were hiding the system's ones. Example of CMake warnings from the out-of-tree plugins:. ```cmake; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. See https://github.com/sofa-framework/sofa/issues/1153 for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387:1841,message,message,1841,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387,1,['message'],['message']
Integrability,remove all unnecessary warnings in CUDA files; The extern declaration o template was necessary for old gcc but it raise warnings with newer version.; I don't know the behavior on windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1548:287,message,message,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1548,1,['message'],['message']
Integrability,remove deprecated macro:; - SOFA_TRANGLEFEM; - SOFA_TRANGLEFEM_MSG. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1233:167,message,message,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1233,1,['message'],['message']
Integrability,rk/Versions/A/PrintCore; 0x7fff2c05a000 - 0x7fff2c126fff com.apple.TextureIO (3.10.9 - 3.10.9) <50BA07A4-02E8-38EE-B0B9-B12C277B563B> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO; 0x7fff2c127000 - 0x7fff2c12ffff com.apple.InternationalSupport (1.0 - 60) <DE997943-6AD5-32DA-B48E-78170C1EAA7B> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport; 0x7fff2c130000 - 0x7fff2c1abfff com.apple.datadetectorscore (8.0 - 674) <A4EBFF22-F861-321A-AF28-1DB8ECB9A4FF> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore; 0x7fff2c1ac000 - 0x7fff2c20afff com.apple.UserActivity (435 - 435) <12250395-D660-3CC1-81DB-565340F2651B> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity; 0x7fff2c20b000 - 0x7fff2c976fff com.apple.MediaToolbox (1.0 - 2765.6.4.2) <C8645EA0-643D-38CF-AA88-3253339192B1> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox; 0x7fff2ce30000 - 0x7fff2ce58fff com.apple.locationsupport (2420.12.16 - 2420.12.16) <63AB1284-8E33-3E9D-A857-9370F492B343> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport; 0x7fff2ce59000 - 0x7fff2ce8afff libSessionUtility.dylib (76.7) <6AAD02A0-9590-3CED-9568-36E05C59AA2B> /System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib; 0x7fff2ce8b000 - 0x7fff2cfbbfff com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <8E53C25F-9FE2-372E-8374-6A598D72C4C1> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox; 0x7fff2cfbc000 - 0x7fff2d023fff com.apple.audio.AudioSession (1.0 - 76.7) <F696F4EC-9344-3C85-941E-6E5EF5CEF585> /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession; 0x7fff2d024000 - 0x7fff2d036fff libAudioStatistics.dylib (25.4) <303533DD-D001-3CE8-A5A4-EC29F464FC3A> /usr/lib/libAudioStatistics.dylib; 0x7fff2d037000 - 0x7fff2d046fff com.apple.speech.synthesis.framework (9.0.51,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:56123,MediaT,MediaToolbox,56123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['MediaT'],['MediaToolbox']
Integrability,"rk/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:3163,message,message,3163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['message'],['message']
Integrability,rojectToPointConstraint; - QuadPressureForceField ; - SurfacePressureForceField; - TaitSurfacePressureForceField ; - TrianglePressureForceField; - ParabolicConstraint; - ConstantForceField ; - LinearForceField; - EdgePressureForceField ; - OscillatingTorsionPressureForceField; - HermiteSplineConstraint ; - LinearVelocityConstraint; - [SofaConstraint] ; - DOFBlockerLMConstraint ; - FixedLMConstraint; - UncoupledConstraintCorrection; - [SofaMiscFem] ; - TriangleFEMForceField; - TriangularAnisotropicFENForceField; - TriangularFEMForceField; - [SofaMiscFem]; - FastTetrahedralCorotationalForceField; - StandardTetrahedralFEMForceField; - TetrahedralTensorMassForceField; - TetrahedronHyperelasticityFEMForceField; - [SofaMiscForceField] ; - MeshMatrixMass; - [SofaExporter] ; - WriteTopology; - [SofaMiscTopology] ; - TopologyChangeProcessor; - [SofaGeneralEngine] ; - SmoothMeshEngine; - [SofaDeformable] ; - MeshSpringForceField. Component previously upgraded in #1183 : ; - DiagonalMass; - [SofaGeneralSimpleFEM]; - BeamFEMForceField; - TetrahedralCorotationalFEMForceField; - TriangularFEMForceFieldOptim; - [SofaSimpleFEM]; - HexahedronFEMForceField; - TetrahedronFEMForceField; - TetrahedronDiffusionFEMForceField; - NonUniformHexahedronFEMForceField; - [SofaGeneralDeformable] ; - QuadBendingSpring; - QuadularBendingSprings; - VectorSpringFF; - FastTriangularBendingSpring; - TriangleBendingSpring; - TriangularBendingSpring; - TriangularBiquadraticSpringFF; - TriangularQuadraticSpringFF; - TriangularTensorMassFF; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199:1999,message,message,1999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199,1,['message'],['message']
Integrability,"rty**: The component is ready to be used, but requires a call to reinit() to update some of its datafields.; - **invalid**:; 1. An error happened during init, reinit or any of the methods called during the simulation step. A call to reinit might fix it; 2. A call to reinit has been made, but the method is improperly implemented, such as one or more Data field has not been updated (call to getValue / updateIfDirty etc...). Because I don't trust programmes to implement the mechanism in their own components, and because it would require all already-implemented component to perform checks in order to get a consistent idea of what's happening, I decided to (try to) embed the state setting mechanisms inside the simulation:. - **setDirtyValue()** on a data sets the dirty state on its owner; - **cleanDirty()** on a data looks at all its owner's data fields and if they're all clean, sets the Valid state on it; - **initVisitor() / init / bwdInit python binding** uses the MessageHandler API to verify that no msg_error has been triggered, and sets either the Valid or Invalid state on the component; - **reinit pythonBinding / the Qt GUI's ModifyObject** calls reinit, and that call is wrapped the same MessageHandling mechanism to set or unset the Valid / Invalid flag. _**LIMITATIONS**_; There is a weak link in this approach:; reinit() will NOT unset the Invalid flag from a component if it is called from elsewhere than the GUI's ModifyObject api. This can happen often: when calling reinit from a c++ program that doesn't use runSofa's GUI for instance.; In order to guarantee that the state is set properly on reinit(), reinit should be a delegate method nested in a method performing the check on the msg_error, and setting the Valid / Invalid flag appropriately. This would be a **VERY** breaking, and time consuming task. calling the state updating mechanisms from the python bindings, visitors & GUI is kind of QuickNDirty but should reveal all components that aren't implementing proper",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823:1460,Message,MessageHandler,1460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823,3,"['Message', 'wrap']","['MessageHandler', 'MessageHandling', 'wrapped']"
Integrability,"runSofa's QtViewer and the new SofaQtQuick interface create a ""Core Profile"" OpenGL context on Linux, with Intel GPUs, with the following error messages:. > QtViewer: OpenGL 4.5 (Core Profile) Mesa 17.0.2 context created.; > Error: GL_ARB_multitexture not supported; > ########## SIG 11 - SIGSEGV: segfault ##########. A core profile context isn't likely to support the ARB_multitexture extension because that extension is specific to the fixed-function pipeline. (For more information: [Check this thread on OpenGL's forum](https://www.opengl.org/discussion_boards/showthread.php/199472-GL_ARB_multitexture-not-supported?p=1286582). Bug reproduced on 3 laptops with intel graphics, with Intel's drivers installed, on Ubuntu 16.04 and Arch linux.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/238:43,interface,interface,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/238,2,"['interface', 'message']","['interface', 'messages']"
Integrability,"s [VisualStyle] ; ; MainHeader(rootNode,; plugins=['SofaPython3', 'SoftRobots'],; gravity=[0.0, -9810, 0.0]). ContactHeader(rootNode,; alarmDistance=5,; contactDistance=1,; frictionCoef=0.6). rootNode.VisualStyle.displayFlags = ""showBehaviors showCollisionModels"". Floor(rootNode, **floorParam). cube = Cube(rootNode, **cubeParam); cube.addObject('UncoupledConstraintCorrection'). for i in range(len(fingersParameters)):; finger = ElasticMaterialObject(attachedTo=rootNode,; volumeMeshFileName=fingersVolumeMesh,; name=fingersParameters[i]['name'],; rotation=fingersParameters[i]['rotation'],; translation=fingersParameters[i]['translation'],; surfaceMeshFileName=fingersSurfaceAndCollisionMesh,; collisionMesh=fingersSurfaceAndCollisionMesh,; withConstrain=True,; surfaceColor=fingersColor,; poissonRatio=poissonRatioFingers,; youngModulus=youngModulusFingers,; totalMass=fingersMass). finger.dofs.name = 'tetras'; rootNode.addChild(finger). finger.integration.rayleighStiffness = 0.1; finger.integration.rayleighMass = 0.1. finger.addObject('BoxROI', name='boxROI', box=fingersParameters[i]['ROIBox'], drawBoxes=True, doUpdate=False); finger.addObject('RestShapeSpringsForceField', points='@../Finger1/boxROI.indices', stiffness=1e12,; angularStiffness=1e12). PneumaticCavity(surfaceMeshFileName=fingersCavitySurfaceMesh,; attachedAsAChildOf=finger,; name='Cavity',; rotation=fingersParameters[i]['rotation'],; translation=fingersParameters[i]['translation'],; initialValue=cavitiesInitialValue,; valueType='pressure'). rootNode.addObject(WholeGripperController(node=rootNode)); `; `# -*- coding: utf-8 -*-; import math. # User parameters; cubeParam = {'name': ""Cube"",; 'totalMass': 0.002,; 'translation': [15.0, 20.0, 0.0],; 'uniformScale': 21}. floorParam = {'name': ""Plane"",; 'color': [1.0, 0.0, 1.0],; 'isAStaticObject': True,; 'uniformScale': 3}. # Fingers Mesh & Shared Parameters; fingersVolumeMesh = 'data/mesh/pneunetCutCoarse.vtk'; fingersSurfaceAndCollisionMesh = 'data/mesh/pneunetCut.s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:4916,integrat,integration,4916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['integrat'],['integration']
Integrability,"s afterwards. It is a reopening of #429 (sort of).; I started from https://github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1169,depend,dependencies,1169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,1,['depend'],['dependencies']
Integrability,serialisation work on color datatype. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/472:137,message,message,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/472,1,['message'],['message']
Integrability,"setParent is called on Datas when parsing BaseObjectDescriptions on BaseObjects.; The default behavior is incompatible with the Data-based API we want to substitute to the current Link system between components. I thus want to be able to override the default setParent() behavior in my ObjectLink POC (see [here](https://github.com/SofaDefrost/ComponentData_POC/pull/1) for draft implementation). Please, don't hesitate to comment on the PR on the POC repository's pull request mentioned above. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1224:594,message,message,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1224,1,['message'],['message']
Integrability,"size() != indices.size()` in the RestShapeSpringsForceField and tried to improve the overall error management on this component. I ended up doing the following changes:. - Call reinit() in bwdInit; - Using componentState to set the state to invalid when necessary (no stiffness set, out of bounds indices etc & check for component state in addForce / addDForce / addKToMatrix ..); - Improvement of warning messages (IMHO); - refactor code duplication; - remove warnings by changing int -> size_t for BaseMatrix::Index (got carried away here, sorry about that). **### BREAKING because:**. - Change in behavior in specific cases:. 1. empty stiffness vector: **Before:** setting arbitrary stiffness at 100.0 for all indices ; **Now:** msg_error & invalid state. ; 2. stiffness.size() != indices.size(): **Before:** applying stiffness[0] to all indices ; **Now:** ; ```py; if len(stiffness) > len(indices): ; crop(stiffness); else if len(stiffness) == 1:; stiffness.resize(len(indices), stiffness[0]); else if len(stiffness < len(indices):; ```; Generalized to angularStiffness on Rigids. - size_t in methods signature break API compatibility. I wouldn't call this component ""clean"" after those changes though, but it's a start. As stuff still to do to improve, I see:. - Using DataTrackers to call reinit() when necessary; - get rid of bwdInit by using componentState + datatrackers to reinit component; - remove those ugly getContext to retrieve the external mstate used for rest shape, by replacing them with a data or a link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1103:1752,message,message,1752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1103,1,['message'],['message']
Integrability,"small PR to remove function handleTopologyChange() from BaseMaterial component, where it is implemented but empty.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/817:215,message,message,215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/817,1,['message'],['message']
Integrability,"sofa::helper::afficheResult definition no longer exists, resulting in unresolved external link error with msvc during debug compilation. I stumbled upon an unresolved external which apparently was introduced by a42dcec ; I guess the initial intent was to replace this method by a new method called `resultToString`, but its declaration did not make it through the header file. I suspect the unresolved external should have been caught by other compilers, but am I the only one; to compile in debug mode sometimes ?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/473:615,message,message,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/473,1,['message'],['message']
Integrability,sofa\applications\plugins\SofaHAPI\CMakeList.txt; Line 81: endif(); Error: ; endif An ENDIF command was found outside of a proper IF ENDIF structure.; Or its arguments did not match the opening IF command. I believe we should remore this line. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1074:343,message,message,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1074,1,['message'],['message']
Integrability,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2292:27,wrap,wrappers,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292,1,['wrap'],['wrappers']
Integrability,speaks for itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1511:118,message,message,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1511,1,['message'],['message']
Integrability,"steps of the project.; Tasks NG1 and NG2 can be done in parallel if we work ""bottom->top"" in NG1 and ""top->bottom"" in NG2.; Task NG3 can also be started in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not mean** moving files (it did in the past). The module stays in place, only the CMake files change. The Components within the module stay in place too. Done module pluginizations: https://github.com/sofa-framework/sofa/issues?q=is%3Amerged+label%3A%22NG2%3A+pluginization%22. Quick schematics on the current state and what will be achieved:. <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_overview_v20.06.png"" width=""40%"" height=""auto"" /> &nbsp; <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_modularization_plan.png"" width=""40%"" height=""auto"" />. [SOFA Modules' plan](https://drive.google.com/file/d/14H2YRu0z8usiqTpGQuxc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:1747,depend,dependency,1747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['depend'],['dependency']
Integrability,"steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Similar to what was done in the `FreeMotionAnimationLoop`. ## Benchmark. Measured on `examples/Component/SolidMechanics/FEM/TetrahedronFEMForceField.scn`. Without parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 14.7031 s ( 68.0128 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 10.57 27.32 11.94 2.11 11.94 82.14 ..solve; ```. With parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 7.13825 s ( 140.09 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 3.53 6.85 4.45 0.81 4.45 63.60 ..solve; ```. The simulation is 2x faster. But there are 4 different objects, so we expected a speed-up of 4x. However, the speed-up is only about the `solve` function. Another time consuming function is the `end event` when computing the von Misses stresses. Still, the solve function only shows a speedup of 2.68x, instead of 4x. I cannot explain it for now... [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/362]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:2903,depend,depends-on,2903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,1,['depend'],['depends-on']
Integrability,"t otherwise Controllers now act as any other python object. The old behavior still works, should you need it. ```python; ; import Sofa ; class Script(Sofa.PythonScriptController):. def __init__(self, node, *args, **kwargs):; self.bacon = kwargs.pop('egg', 'spam'). def onBeginAnimationStep(self, dt):; print(self.bacon). ; def createScene(node):; script = Script(node, egg = 'spam'); . ```. Creating instances directly no longer calls `onLoaded` nor `createGraph`:. - nothing is actually loaded; - code in `createGraph` really belongs to `__init__` anyways. This behavior can be changed of course, maybe a warning can/should be emitted if the instance creation detects a derived implementation. Comments welcome :). The PR also removes heavy copypasta in some files, removes unneeded `extern ""C""` linkage and a few other cosmetic changes. # Changelog. - `PythonScriptController` and derived classes are now instantiable directly in python. The constructor requires a `Node` as first parameter.; - `onLoaded` and `createGraph` entry points are no longer called when classes are instantiated directly from python. Corresponding code belongs to the derived class constructor.; - creating instances ""the old way"" through `node.createGraph` has unchanged behavior; - the workaround module `SofaPython.script` now features a deprecation message, together with a derived class easing transition (calls `createGraph` on construction, warns if `onLoaded` is defined); - updated `ControllerVariable.py` example ; - some minor cleanups; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283:3198,message,message,3198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283,2,['message'],['message']
Integrability,"t possible this module have a python binding which allows to write interesting editing interaction in python:; ```python; from SofaEditor import SofaEditor. def onDraw():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & simpler to use) despite he is more limited. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test fa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:1757,integrat,integrate,1757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,1,['integrat'],['integrate']
Integrability,"tView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:1970,message,message,1970,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,1,['message'],['message']
Integrability,"ted with each of the mapping parent dofs. - ContactMappers : It is (very) questionable to let contact mappers propagate the unconstrained dynamics solution vector towards contact dofs by calling `updateXfree()` since it will induce inconsistencies in mapping linearisation if the contact mappers are non linear, since contact mappings will therefore be linearised around the free motion configuration, and the rest being linearised around the configuration at the beginning of the time step. This PR does not address this problem which is left for future work. It arises only with non linear contact mappers (like the `RigidContactMapper` for instance), but this should be kept in mind. - LinearSolver API : As a general note, I believe the LinearSolver API is a bloated with virtual methods which are difficult to understand since they are not directly related to the computation / factorisation of a positive definite matrix, and are mostly optional especially for non assembled solver like CG. Most of the methods should reside in the ConstraintCorrection API, and concrete instance of ConstraintCorrection should be templated on the type of LinearSolver in my opinion, since it is the only objects that actually make use of these methods, and really what you want is to have access to the concrete type of Matrix and Vector used by the solver. Also from my understanding only `LinearSolver` instances that derive from `MatrixLinearSolver` implement these kind of methods, so maybe a first step would be to move them here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:8657,message,message,8657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['message'],['message']
Integrability,"test concurrent access to LCPForceFeedback computeforce from another thread. This PR depends on #1576 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1581:85,depend,depends,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1581,1,['depend'],['depends']
Integrability,"the SofaPython plugin is in a very poor shapes with two serious problems. The first one is a problem for developper with a lot of duplicated or invalid or in-elegant code which impact maintainability of our code base. The second problem is the lack of consistency in the way warning and errors are reported. In sofa some component rise en exception while others prints a message and return None which is very problematic to users. . In this PR we addressed these two issues through a major cleaning set of changes:; - [SofaPython]: ; * refactor the way to get get Sofa object from their PyObject equivalent (hundred of changes). ; * add dedicated easing function (unwrap, get, get_baseobject) ; * replace wherever possible copy-pasted code with these function. ; * refactor the way we report error from binding (hundred of changes) (API BREAK). ; * returning NULL with a correctly set exception type as it is the way of handling error in python. ; * when returning NULL it is mandatory to preceed the return with an exception type & message specification. This can be done either with PyExc_SetString() or Py_BaddArgument(), ; * when returning after a failing Py_ParseTuple is an exception, as the function sets itself a very ; descriptive and standardized error message.; * add macros (SP_PYERR_SETSTRING_INVALIDTYPE and SP_PYERR_SETSTRING_OUTOFBOUND) to report consistant message with PyErr_SetString ; * add SP_CLASS_METHOD_DOC() and SP_CLASS_METHOD_KW_DOC() to declare method with their docstring (if you don't know what are docstring read: http://sametmax.com/les-docstrings/); * add new bindings:; * BaseState::getSize ; * BaseMapping::applyJT; * BaseMapping::applyDJT; * Data::getCounter ; * Data::isDirty; * Node::getMass; * Node::getForceField; * STLExporter; * Sofa.unload; * Sofa.path; * Sofa.getAvailableComponents; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a string with the ; python file",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:1059,message,message,1059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,1,['message'],['message']
Integrability,"then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sofa-framework/sofa/blob/1e0df59953a085785a45bf97e182e01efea0c354/Sofa/framework/Helper/src/sofa/helper/system/DynamicLibrary.cpp#L78; would fix the bug, but it is still showing the same behavior 😓",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:1522,depend,dependency,1522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,2,['depend'],['dependency']
Integrability,this PR depends on #1351 where Data d_checkTopology has been introduced. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1353:8,depend,depends,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1353,2,"['depend', 'message']","['depends', 'message']"
Integrability,"to access the data without abstraction cost, ie. accessing the object with its true type (eg: Data<T>) instead of its parent type (BaseData) and at the same time having an abstraction to manipulate BaseData. . Duplicating the same obect/point is in general a code smell indicating that something is wrong in the implementation. In general duplication complexify the implementation and error prone (because you have to garantee that the different copies are kept synchronized and interact together in a seamlessness way. . So, in this PR I addresse this duplication problem by removing the lowest type and relying on a dynamic_cast when it is needed. There is an abstraction cost...but it is on a on a very rarerly used method (actually only used for fast copy of data field...and in that context...the cost of the dynamic cast against one of copying millions of Dofs is totally neglectible). . A different pattern was initially used with a child-delegation to expose the abstraction to its parent but it appears it would have made the PR breaking. The difference is that the selected pattern allows one data to be parented to a data of different type while the pattern with child-delegation restrict the parenting to be of exactly the same time. . I personally prefer to have parent only on same type (so that data conversion must be added manually and becomes explicit) but this was not done previously in Sofa and thus breaks some scenes (somes of them are actually really funny....and probably work only by side effect). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1490:1876,message,message,1876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1490,1,['message'],['message']
Integrability,to avoid breaking external plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/870:135,message,message,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/870,1,['message'],['message']
Integrability,"tory) and allows the user to choose the type of ImplicitShape he wants to mesh, and to change the values relating to the mesh (**facet_size**, **approximation** and **cell_size**). - Fill the scene with a shape :. `<DistanceGridComponent` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""grid_cmp""`; > .tmg is our extention file which is actually a simple list of values corresponding to the function evaluated at each point : see PR #353 ; `filename=""/path/file.tmg""` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nx=""243""` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ny=""243"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nz=""243""` ; `/>` . or ; `<ImplicitSphere name=""sphere"" />`. or any class inhereting from ImplicitShape. - Modify the mesh component value's and use the correct component in the link. ` <MeshGenerationFromDG` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""mesh"" `; > The 3 following parameters can change the execution time (from a few seconds to much more) ; `facet_size=""0.7"" ` ; `approximation=""0.5""` ; `cell_size=""0.4"" ` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`drawTetras=""false""` . > Then the link ; `function=""@sphere""` which is actually a torus ; or	 ; `grid=""@grid_cmp""`; ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`zmin_box=""-5.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`zmax_box=""5.0"" ` ; `/>`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354:2131,message,message,2131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354,1,['message'],['message']
Integrability,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:1733,depend,depends-on,1733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,1,['depend'],['depends-on']
Integrability,"uldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:1318,message,message,1318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,2,['message'],['message']
Integrability,"unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer) ; This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274:365,message,message,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274,1,['message'],['message']
Integrability,update Regression_test repository sha and add 2 more scenes to test collisionGroup. - [References] Update references of collisionMultiple scene due to fix modification in sofa master inside collisionGroup.; - [References] Add more scene references to check collision with and without collisionGroup. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1102:399,message,message,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1102,1,['message'],['message']
Integrability,update glew in windows dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/466:23,depend,dependencies,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/466,1,['depend'],['dependencies']
Integrability,"w():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & simpler to use) despite he is more limited. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:2121,message,messages,2121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,2,['message'],"['message', 'messages']"
Integrability,ways better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [ ] #237 should fix most of the newly failing tes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2657,message,message,2657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['message'],['message']
Integrability,"when passing ""this"" as argument, forcing object copy to avoid unexpected results; Fixes #280 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317:194,message,message,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317,1,['message'],['message']
Integrability,whispered to me by @fredroy :+1: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1042:134,message,message,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1042,1,['message'],['message']
Integrability,"xml header, solver iterations, etc... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/310:137,message,message,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/310,1,['message'],['message']
Integrability,"zeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . This is the re-opening of [previous issofa_topology pull-request](https://github.com/sofa-framework/sofa/pull/217). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243:1595,depend,depending,1595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243,2,"['depend', 'message']","['depending', 'message']"
Integrability,"zlib library, provided on site as part of Windows dependencies archive is built with VS2013 instead of VS2015, which may result in Sofa applications crashes.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/295:50,depend,dependencies,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/295,1,['depend'],['dependencies']
Integrability,~~The PR is based on #1003 (merged)~~ . CHANGELOG:; - [SofaPython] Add vector<Rigid3> to the addNewData in Binding_Base.cpp; - [SofaPython] Base.addNewData returns the created data or set an exception in case of failure. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1004:320,message,message,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1004,1,['message'],['message']
Integrability,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1740:142,message,messages,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740,1,['message'],['messages']
Integrability,"⚠-For MSVC only; ⚠-in Release mode only; ⚠-with CMake flag SOFA_ENABLE_LINK_TIME_OPTIMIZATION. Enable Link-time optimization to whole SOFA project.; (with caduceus.scn : w/o: 170fps, w/: 190fps). WARNING: typical SOFA compilation takes 20GB!🥴. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1468:343,message,message,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1468,1,['message'],['message']
Modifiability,"	<BTDLinearSolver subpartSolve='0' verification='0' verbose='0'/>; 		<RegularGridTopology name='meshLinesCombined'; nx='180' ny='1' nz='1'; xmin='0.0' xmax='1.0'; ymin='0' ymax='0'; zmin='1' zmax='1'; 		/>; 		<MechanicalObject template='Rigid3d' name='DOFs' showIndices='0' ry='-90'/> . 		<WireBeamInterpolation name='InterpolCatheter' WireRestShape='@../topoLines_cath/catheterRestShape' radius='1' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='CatheterForceField' interpolation='@InterpolCatheter' massDensity='0.00000155'/> <!--stiff silicone E = 10000 MPa // 1550 Kg/m3-->	. 		<WireBeamInterpolation name='InterpolGuide' WireRestShape='@../topoLines_guide/GuideRestShape' radius='0.9' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='GuideForceField' interpolation='@InterpolGuide' massDensity='0.00000155'/> 	. 		<WireBeamInterpolation name='InterpolCoils' WireRestShape='@../topoLines_coils/CoilRestShape' radius='0.1' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='CoilsForceField' interpolation='@InterpolCoils' massDensity='0.000021'/> <!-- platine E = 168000 MPa // 21000 Kg/m3-->	. <BeamAdapterActionController name=""AController"" interventionController=""@IRController"" writeMode=""0""; timeSteps=""9.1 17.1 17.55 18.05 18.6 19.05 19.55 20.05 20.5 21 21.45 21.9 22.65 23.1 23.55 24.05 24.55 25 25.45 25.95 26.4 27.1 27.55 28.05 28.55 29 29.5 29.95 30.4 30.9 31.4 31.85 32.35 33.05 33.5 34 34.45 34.9 35.4 35.85 36.35 36.8 37.25 37.7 38.2 38.65 39.4 39.85 40.3 40.7 41.2 41.65 42.1 42.55 43 43.4 44.1 44.55 45 45.45 45.9 46.3 46.75 47.2 47.65 48.1 48.55 49 49.65 50.1 50.5 50.9 51.35 51.75 52.2 52.6 53.05 53.5 53.95 54.4 54.85 55.5 55.9 59.1 66.15 66.6 67.05 67.45 67.9 68.35 68.8 69.25 69.65 70.1 70.55 71.2 71.6 72.05 72.5 72.95 73.4 77.6 81.9 87.4 87.75 88.1 88.45 88.75 89.1 89.45 89.75 90.1 90.6 90.9 91.25 91.6 91.95 92.3 92.6 92.95 93.25 93.6 93.95 94.25 94.6 94.95 95.4 95.75 96.1 96.4 96.75 97.05 97.35 97.7 98.05 98.4 98.7 99.15 99.5 99.8 100.15 100.45 100.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4833:6153,Adapt,AdaptiveBeamForceFieldAndMass,6153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4833,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability," # Changelog; API Breaking. [SofaCore]; - `ConstraintSolver` can now define the VecId where the constraint lambdas and constraint correction are stored. Previously, these were fixed locations, usually VecId::externalForce() and VecId::dx(), but it could vary depending on the implementation of both the ConstraintSolver and the ConstraintCorrection API. Components can retrieve these locations when inspecting their ConstraintParams object which is usually a parameter of the API methods for constraint solving.; - `ConstraintParams` contains the `MultiMatrixDerivId` that can be used by components related to the `ConstraintSolver` to retrieve the location of the constraint jacobian.; - `ConstraintResolution` API constructor needs to be passed the number of lines that are involved in the solving of this constraint equation. The previous implementation was silently initializing this value to one. If that property has to modified because it depends on some other state variables of a concrete implementation of the `ConstraintResolution`, the `setNbLines` method has to be called to reflect it. Also added some getters/setters method.; - `BaseConstraintCorrection` API separates the methods which computes the constraint displacement in motion space from the methods which apply it. ; - As result, factorized quite significantly the methods related to the `ConstraintCorrection` API ; - `BaseConstraint` API defines a `storeLambda` method which is used to store the result of the constraint force computation (stored in a `BaseVector` form) inside a dedicated state vector of a `MechanicalState`. Requires PR #456. This value can be used later on to discover the stiffness coming from the non linear mapping that result from it.; - `BaseMechanicalState` `resetConstraint` and `getConstraintJacobian` methods need to be given a `ConstraintParams` to be able to retrieve the `MatrixDerivId` containing the constraint jacobian. ; - `LinearSolver` API ; - rename `applyContactForce` API method into ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:2259,variab,variables,2259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['variab'],['variables']
Modifiability," (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:1363,config,configure,1363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,1,['config'],['configure']
Modifiability," ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the cop",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2777,variab,variable,2777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['variab'],['variable']
Modifiability," - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2601,Adapt,Adapted,2601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,2,"['Adapt', 'plugin']","['Adapted', 'plugin']"
Modifiability," ....ComputeForce; 4 0.91 1 0.70 1.38 0.74 0.05 0.74 3.51 ....ComputeRHTerm; 4 1.66 1 0 0.03 0 0 0 0.02 ....MBKBuild; 5 1.66 1 0 0.02 0 0 0 0.01 .....CG-setSystemMBKMatrix; 4 1.66 1 17.79 26.51 18.56 0.78 18.56 87.62 ....MBKSolve; 5 1.68 1 17.76 26.48 18.53 0.77 18.53 87.49 .....CG-Solve; 4 20.22 1 0.01 0.04 0.01 0 0.01 0.05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers wil",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:1405,plugin,plugin,1405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,1,['plugin'],['plugin']
Modifiability," /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is em",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33712,Plugin,PluginManager,33712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability, 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:3902,plugin,plugins,3902,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability," 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1"" ; />. 		<InterventionalRadiologyController template='Rigid3d' name='IRController' printLog='0' xtip='1 0 0' step='3' rotationInstrument='0 0 0' ; controlledInstrument='0' startingPos='0 0 0 0 -0.7071068 0 0.7071068' speed='2' instruments='InterpolCatheter InterpolGuide InterpolCoils' />. 		<FixedConstraint name='FixedConstraint' indices='0' />; <RestShapeSpringsForceField points='@IRController.indexFirstNode' stiffness='1e8' angularStiffness='1e8' />. 		<Node name='VisuCatheter' activated='true'>; 			<MechanicalObject name='Quads' />; 			<QuadSetTopologyContainer name='ContainerCath' />; 			<QuadSetTopologyModifier name='Modifier' />; 			<QuadSetGeometryAlgorithms name='GeomAlgo' template='Vec3d' />; 			<Edge2QuadTopologicalMapping nbPointsOnEachCircle='10' radius='2' input='@../../topoLines_cath/meshLinesCath' output='@ContainerCath' flipNormals='true'/>. 			<AdaptiveBeamMapping name='VisuMapCath' useCurvAbs='1' printLog='0' interpolation='@../InterpolCatheter' input='@../DOFs' output='@Quads' isMechanical='false' />. 			<Node name='VisuOgl' activated='true'>; 				<OglModel name='Visual' color='0.7 0.7 0.7' quads='@../ContainerCath.quads' material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'/>; 				<IdentityMapping input='@../Quads' output='@Visual'/>; 			</Node>	; 		</Node>; 	; 		<Node name='VisuGuide' activated='true'>; 			<MechanicalObject name='Quads' />; 			<QuadSetTopologyContainer name='ContainerGuide' />; 			<QuadSetTopologyModifier name='Modifier' />; 			<QuadSetGeometryAlgorithms name='GeomAlgo' template='Vec3d' />; 			<Edge2QuadTopologicalMapping nbPointsOnEachCircle='10' radius='1' input='@../../topoLines_guide/meshLinesGuide' output='@ContainerGuide' flipNormals='true' listening='true'/> ; 			<AdaptiveBeamMapping name='visuMapGuide' useCurvAbs='1' printLog='0' interpolation='@../",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4833:10496,Adapt,AdaptiveBeamMapping,10496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4833,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability," 2, instead of moving everything in `applications/plugins` that is only there because of a bad decision 10 years ago (it was simpler as we had to release the main directories as separate archives for licensing reason so we packed the couple of plugins we had together with the executables), I would propose to use the following:; - _Sofa root directory_; - SofaPlugins; - SofaMiscForceField; _..._; - SofaPluginsDeprecated; - SofaVRPNClient _any plugin we no longer support but still keep around if someone else want to pick it up_; - SofaPluginsGPL; - SceneCreator; - SofaPML; ... _any plugins with a GPL licence_; - SofaPlugins(.*) _any other licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compiler path the parent of a plugin directory, currently because it is the same parent as plugins with different licences it is difficult to be sure unwanted code is not included); 4. it fits with the way of organizing all codes around collections of libraries, which was the original intent behind Helper/Core/DefaultType within SofaFramework, Simulation* within SofaSimulation, Base* within SofaBase, ..., but which unfortunately was not agreed to with everyone so stuck in years-long discussions and is now broken ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:2884,plugin,plugins,2884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugins']
Modifiability," Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Otherwise, if you want to disable this message, add template=""CompressedRowSparseMatrixd"" .; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [Scene",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34176,Plugin,PluginManager,34176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability, Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class al,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24753,Plugin,PluginManager,24753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability," GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6006,Plugin,PluginManager,6006,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability, HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Contai,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1428,Plugin,PluginManager,1428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability," I am wrong and explain me your solution. My first work around was to load from the same file (I call it outputJson, see the function definition below). However, this becomes cumbersome, when the code is parallelized, since several threads would like to load from that same file. My approach for the parallelization is to write the filename (which is now adapted to every scene) first into the .scn using PHP and then to load it from the python scene. ; That means, in the .scn file we have:; `<?php echo '<PythonScriptController classname=""convergenceBeam_Template"" filename=""convergenceBeam_TemplatePython.py"" listening=""1"" name=""convergenceBeam_Template"" variables=""'.$argv[1].'"" />'; ?>`; which called from the convergence python script and deleted later; ```; os.system(""php convergenceBeam_TemplatePython.scn ""+sofaOutput+"".pyscndata > ""+curTime+"".scn""); ... call the scene; os.system(""rm ""+curTime+"".scn""); ```; In the .py file we load the data using; `self.defineDataFromJson(self.findData(""variables"").value[0][0])`; where; ```; def defineDataFromJson(self,jsonFilename=""outputJson"") :; f = open(jsonFilename,'r'); self.data = json.load(f); f.close(); def getValueOfData(self,keyOfData) :; if keyOfData in self.data.keys():; return self.data[keyOfData]; printStack(); sys.exit(""\nERROR\n the key ""+keyOfData+"" is not defined!\nERROR\n""); ```. Both of the solutions I consider as hacks, the first as it can not run in parallel and the second as the scene does not work without running php on the side, thus it does not work with one command line. Potential (final?) solutions would be:; - a command line argument or command line argument**s** for python scenes; - a command line argument that can be used in all scenes, such as -d for data, which could be followed by strings; - php scenes (file ending .pscn) that work and could prevent calling php on the side (i.e. my second solution works without a script on the side). I am grateful for any ideas/other propositions of solutions!. Label ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356:1329,variab,variables,1329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356,1,['variab'],['variables']
Modifiability," INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); >>> . ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:1845,plugin,plugins,1845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability," It is a manipulation of the scene graph which depends on the collision detection.; 2. Create the contact response. # Cleaning; - Split large functions into smaller to make them more readable; - More null pointer checks; - Add lots of comments; - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simula",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:1751,plugin,plugins,1751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['plugin'],['plugins']
Modifiability," PR should wait #1990, #2000 and he is more a ""preview"" PR for showing the ALIAS system._~~. Ref: #1521, #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test fa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2001:955,variab,variables,955,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001,2,"['plugin', 'variab']","['plugins', 'variables']"
Modifiability," Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1139,Plugin,PluginManager,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability," VisuCatheter.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide',; name='visuMapGuide', output='@Quads', isMechanical=False,; input='@../DOFs', useCurvAbs=True, printLog=False). # Ogl model; VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], quads='@../ContainerCatheter.quads',; material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',; name='Visual'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). CathterCollis = CathterMechanics.addChild('CollisionModel'); CathterCollis.activated = True; CathterCollis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); CathterCollis.addObject('EdgeSetTopologyModifier', name='colliseEdgeModifier'); CathterCollis.addObject('MechanicalObject', name='CollisionDOFs'); CathterCollis.addObject('MultiAdaptiveBeamMapping',controller='../DeployController', useCurvAbs=True, printLog=False, name='collisMap'); CathterCollis.addObject('LineCollisionModel', proximity=0.0); CathterCollis.addObject('PointCollisionModel', proximity=0.0). Carotids = rootNode.addChild('Carotids'); Carotids.addObject('MeshSTLLoader', filename='../mesh/carotids.stl', flipNormals=False, triangulate=True,; name='meshLoader', rotation=[10.0, 0.0, -90.0]); Carotids.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); Carotids.addObject('MechanicalObject', position=[0, 0, 400], scale=3, name='DOFs1', ry=90); Carotids.addObject('TriangleCollisionModel', moving=False, simulated=False); Carotids.addObject('LineCollisionModel', moving=False, simulated=False). return rootNode; I used python to edit a simulation similar to a catheter in the carotid artery. I'm imitating the example provided in the sofa file. But I don't know why the error occurred, and I don't know how to solve it. I hope you can give me some help. This is the sofa BeamAdapter plug-in used.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:5701,plug-in,plug-in,5701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,1,['plug-in'],['plug-in']
Modifiability," ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGuiQt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:1590,variab,variables,1590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,1,['variab'],['variables']
Modifiability, [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4487,Plugin,PluginManager,4487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability," [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9142,Plugin,PluginManager,9142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugins']"
Modifiability," [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1954,Plugin,PluginManager,1954,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability," [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1722,Plugin,Plugin,1722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability," [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4021,plugin,plugins,4021,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,2,"['Config', 'plugin']","['Config', 'plugins']"
Modifiability," [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SubsetTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Tetra2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Triangle2EdgeTopologicalMapping; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RayCollisionModel; [WARNING] [ObjectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:28245,Plugin,PluginManager,28245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability," `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any action on these two, do the SofaDistanceGrid and SofaNewmat plugins are still used and planned to be maintained in future releases ?. Regarding other static libs (TinyXML, csparse and metis), could we consider to switch to an external dependency instead ? For TinyXML, the current behavior is to first look for an external package, and fallback to embedded version if unavailable. This looks reasonable at first, but shouldn't we switch to fully externalized versions for maintainability ?. Last point, we were also advised to use external dependency for some header-only libraries, especially when they are already packaged in conda-forge. Could we consider also to use externalized versions for some of these (the ones easily available as external packages), such as json nlohmann and cxxopts ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:2063,plugin,plugins,2063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,3,"['maintainab', 'plugin']","['maintainability', 'plugins']"
Modifiability," a mix of a broad phase and narrow phase. In this component, the broad phase is actually a brute force broad phase. The broad phase in `RayTraceDetection` did exactly the same thing than the broad phase in `BruteForceDetection`. It means duplicated code. With `BruteForceBroadPhase` we have an opportunity to factorize the broad phase by inheriting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; __________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2010:1568,inherit,inherit,1568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010,1,['inherit'],['inherit']
Modifiability," a more ""contained"" way the components implemented in different plugins to avoid having everything mixed into the ObjectFactory. . The PR is composed of two aspects. 1) **Registering components by ""plugin.classname"" instead of ""classname"" in the ObjectFactory**. The factory currently access component by their classname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge thi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:1037,plugin,plugin,1037,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,1,['plugin'],['plugin']
Modifiability," already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32213,Plugin,PluginManager,32213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability," an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2635,Plugin,PluginManager,2635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['Plugin'],['PluginManager']
Modifiability," by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions when you want to test some important concepts of a component, like what SofaTest wanted to do, but without the dependency bloat. A potential non exhaustive list of abstactions such a library could provide ; - Mapping ; - linearisation, ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:2046,extend,extend,2046,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,"['extend', 'plugin']","['extend', 'plugin']"
Modifiability," calling sofa_generate_package or sofa_install_targets; - include_directories:; - BUILD_INTERFACE: the directory given in INCLUDE_SOURCE_DIR or ""${CMAKE_CURRENT_SOURCE_DIR}/.."" (bad but necessary for old modules); - BUILD_INTERFACE: ""${CMAKE_BINARY_DIR}/include/${PROJECT_NAME}""; - INSTALL_INTERFACE: ""install"" (if relocatable plugin) or ""install/${PROJECT_NAME}""; - DEBUG_POSTFIX: ""_d""; - VERSION: Sofa_VERSION. ------------------------. Cleaning of config.h mechanism (consistency with all other SOFA modules); - deprecate headers not following the ""config.h"" naming convention; - sofa/core/core.h -> sofa/core/config.h; - sofa/defaulttype/defaulttype.h -> sofa/defaulttype/config.h; - sofa/helper/helper.h -> sofa/helper/config.h; - sofa/simulation/simulationcore.h -> sofa/simulation/config.h; - SofaSimulationCommon/common.h -> SofaSimulationCommon/config.h; - SofaSimulationGraph/graph.h -> SofaSimulationGraph/config.h; - SofaSimulationTree/tree.h -> SofaSimulationTree/config.h; - sofa/gui/SofaGUI.h -> sofa/gui/config.h; - sofa/gui/qt/SofaGuiQt.h -> sofa/gui/qt/config.h; - centralize config.h call chain on sofa/config.h; - sofa/helper/system/config.h is now useless; -> WARNING: maybe not a good idea, review needed here; - dispatch all SOFA_BUILD_* macros from packages' config.h towards modules' config.h (good for future modularizations). ------------------------. Moving SofaGui modules into ""modules"" directory + cleaning their source trees. ------------------------. Every package is now also a library. Work started by @fredroy in #1314, 3 packages remained; - SofaFramework; - SofaGui; - SofaSimulation. ------------------------. Cleaning source trees to eliminate some "".."" include directories; (files move but includes stay the same); - SofaExporter; - SofaGuiCommon; - SofaGuiQt; - SofaHeadlessRecorder; - SofaMiscCollision. ------------------------. Fix #1395 by removing ""relocatable"" attribute from SofaNonUniformFem, SofaValidation, SofaDenseSolver. ------------------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397:1168,config,config,1168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397,7,['config'],['config']
Modifiability," details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; Python:; Version: 3.9.7; Executable: D:/11631/miniconda3/python.exe; Headers: D:/11631/miniconda3/include; Libraries: D:/11631/miniconda3/libs/python39.lib; User site: C:\Users\11631\AppData\Roaming\Python\Python39\site-packages; pybind11:; Version: 2.8.1; Config: E:/GitHub/vcpkg/installed/x64-windows/share/pybind11/pybind11Config.cmake; Adding plugin LMConstraint; SofaDistanceGrid not found: DistanceLM codes will not be compiled; Adding application runSofa; Write Plugin list at J:/GitHub/sofa/build/bin/plugin_list.conf.default; Configuring incomplete, errors occurred!; See also ""J:/GitHub/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""J:/GitHub/sofa/build/CMakeFiles/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:4079,plugin,plugins,4079,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['plugin'],['plugins']
Modifiability," features:. - All components inherit from `StateAccessor`, which contains a dynamic list of `BaseMechanicalState`; - Components having access to only one mechanical state inherit from `SingleStateAccessor`. It is templated on `DataTypes`, with a link to a `MechanicalState<DataTypes>`.; - Components having access to 2 mechanical states inherit from `PairStateAccessor`. It is templated on `DataTypes1` and `DataTypes2`, with a link to a `MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` has a link to the mechanical state instead of a raw pointer.; - Some constructors marked `explicit`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:1293,inherit,inherits,1293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,1,['inherit'],['inherits']
Modifiability," files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not mean** moving files (it did in the past). The module stays in place, only the CMake files change. The Components within the module stay in place too. Done module pluginizations: https://github.com/sofa-framework/sofa/issues?q=is%3Amerged+label%3A%22NG2%3A+pluginization%22. Quick schematics on the current state and what will be achieved:. <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_overview_v20.06.png"" width=""40%"" height=""auto"" /> &nbsp; <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_modularization_plan.png"" width=""40%"" height=""auto"" />. [SOFA Modules' plan](https://drive.google.com/file/d/14H2YRu0z8usiqTpGQuxcnel1uf1Hna1I/view?usp=sharing). ### NG3: Reorganize SOFA modules towards new architecture; ~~Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v7~~; Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v8. *Continue using recipes with https://github.com/guparan/sofa2ng ?*. ### NG4: Cleaning the applications/plugins repository; Following the [planning](https://docs.google.com/spreadsheets/d/1FVQN4rghI1SSYuhT1Y3L5fUZdL7XXPETgQ1GQ28KlD8/edit#gid=0) we built at our previous STC, we should start moving out these plugins in new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:2347,plugin,pluginization,2347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['plugin'],['pluginization']
Modifiability," function is provided. To maintain the backward compatibility and to facilitate the design of a simulation scene, `StiffSpringForceField` continues to accept two Data attributes ('object1' and 'object2') corresponding to two different objects. However, they don't correspond to any Data or Link in the component. Actually, during its creation, the component will instantiate other components in order to link both objects into one. In the end, the component is able to work on a single mechanical state while keeping the same physical behavior. The component now instantiates:. 1. A new Node; 2. A new mechanical state which will be the fusion of the provided objects, ; 3. A `SubsetMultiMapping` that will make the link between the two provided objects and the new mechanical state; 4. The spring force field. Since `SubsetMultiMapping` was initially in SofaMiscMapping, it has been moved into SofaBaseMechanics. A compatibility layer is available. Other components using `StiffSpringForceField` had to be adapted to create also the extra components. An example is `AttachBodyPerformer` which creates the spring between an object and the mouse (shift + clic). WARNING:; Since `StiffSpringForceField` is now necessarily located in a mapped node, its stiffness matrix is not mapped in case of a built linear system. The forces are then computed explicitly only. This issue will be addressed in the new design of the matrix assembly. TODO:. - [x] A description for this PR; - [ ] Handle topological changes in `SpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2653 and https://github.com/sofa-framework/sofa/pull/2729; - [x] Deal with `BoxStiffSpringForceField` -> see https://github.com/sofa-framework/sofa/pull/2621; - [x] Compilation and tests issues on CI (CUDA); - [x] In `AttachBodyPerformer`, a Node remains in the scene when `AttachBodyPerformer` is destroyed. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/224]. _________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2554:1574,adapt,adapted,1574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2554,1,['adapt'],['adapted']
Modifiability," indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:1663,inherit,inherited,1663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['inherit'],['inherited']
Modifiability," is composed of two aspects. 1) **Registering components by ""plugin.classname"" instead of ""classname"" in the ObjectFactory**. The factory currently access component by their classname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not gene",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:1142,plugin,plugin,1142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,1,['plugin'],['plugin']
Modifiability," it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value warning; - VisualModelImpl: fix wrong object (triangles) called when adding quads in handleTopologyChange(); - VoxelGridLoader: `std::unique` result was not used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:2007,variab,variables,2007,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['variab'],['variables']
Modifiability," load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.NONE). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.ONE_MODEL). for i in range(5000):; si",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:1207,plugin,pluginName,1207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,3,['plugin'],"['plugin', 'pluginName']"
Modifiability," on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4455,Plugin,Plugin,4455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,4,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugins']"
Modifiability," plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7754,Plugin,PluginManager,7754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability," plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/R",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6663,Plugin,PluginManager,6663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability," print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.8.10 (default, May 26 2023, 14:05:08) ; [GCC 9.4.0]; --- PATH ---; /opt/Qt/Tools/QtInstallerFramework/4.5/bin:/opt/Qt/5.12.8/gcc_64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; [INFO] [runSofa] PluginRepository paths = /builds/sofa/build/plugins:/builds/sofa/build/collections:/builds/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /builds/sofa/src/share:/builds/sofa/src/examples:/builds/sofa/build:/builds/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /builds/sofa/src/applications/projects/runSofa/resources:/builds/sofa/build; [INFO] [BaseGUI] Created directory: /builds/sofa/build/config; [INFO] [BaseGUI] Created directory: /builds/sofa/build/screenshots. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); std::vector<std::filesystem::__cxx11::path::_Cmpt, std::allocator<std::filesystem::__cxx11::path::_Cmpt> >::~vector(); std::vector<std::filesystem::__cxx11::path::_Cmpt, std::allocator<std::filesystem::__cxx11::path::_Cmpt> >::~vector(); sofa::helper::system::FileRepository::findFileIn(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); sofa::helper::system::FileRepository::findFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3943:2579,Plugin,PluginRepository,2579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943,3,"['Plugin', 'config', 'plugin']","['PluginRepository', 'config', 'plugins']"
Modifiability," read). ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the modules we want; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users; - cleaning the applications/plugins repository. ## Tasks. Here are the main steps of the project.; Tasks NG1 and NG2 can be done in parallel if we work ""bottom->top"" in NG1 and ""top->bottom"" in NG2.; Task NG3 can also be started in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not mean** moving files (it did in the past). The module stays in place, only the CMake files change. The Components within the module stay in place too. Done module pluginizations: https:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:1239,rewrite,rewrite,1239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['rewrite'],['rewrite']
Modifiability," reasons other the past years, namely; - SOFA_LIBSUFFIX which should be set as ""_d"" during a debug build is broken under msvc since c89da68 which as the commit name says is indeed monstruous. It was ""fixed"" later by adding directly inside the PluginManager code a condition to add the ""_d"" suffix by checking the compiler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1281,plugin,plugin,1281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['plugin'],['plugin']
Modifiability," sofa::core::MechanicalParams*);; SOFA_CORE_API SReal kFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal mFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::visual::VisualParams*);. SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DisplayFlags& getDisplayFlags(VisualParams* params);; SOFA_CORE_API sofa::core::visual::DrawTool* getDrawTool(const VisualParams* params);; SOFA_CORE_API const sofa::core::visual::DisplayFlags& getDisplayFlags(const VisualParams* params);; }; ```. The PR didn't changed existing simulation behavior or API and thus:; - shouldn't have any impact on sofa simulations; - shouldn't requires code refactoring. Because of the cleaning of the header dependency graph, third party code to include explicity the header files they are using.; The following ones are less visible:; ```cpp; #include<sofa/core/ExecParams.h>; #include<sofa/core/ConstraintParams.h>; #include<sofa/core/MechanicalParams.h> ; #include<sofa/core/visual/VisualParams.h>; #include<sofa/core/visual/DisplayFlags.h>; #include<sofa/core/visual/DrawTool.h>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1794:2542,refactor,refactoring,2542,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794,1,['refactor'],['refactoring']
Modifiability," the old symbol, which is strange and certainly made the compat layer break is used because often the two types where completely unrelated but `setParent` isn't templated so.... ; 2. This compat layer only works for `Data<T>` every types that inherits from it, will only see the original `Data<T>` methods taken into account in the compact layer. This was the case here for `DataFileName` and all `TopologicalData`. . I've decided to adopt two different strategy : ; 1. For `DataFileName` I didn't put my component and still usef the 'setParent' strategy. This is because, a priori, we won't chage a filename data during execution, this is often a given parameter, but we often use methods specific to `DataFileName`. ; 2. For the topological one, usually topological mechanisms are used in very specific classes to handle topological changes. But in a user perspective, it is often used as a classical `Data<vector<Index>>`. So What I did is use `RenamedData` on those, allowing the compat on the `Data<T>` level, but not for the topological methods which are not working anymore on the old symbol (and will create a compilation error if used)... ; ; To make it cleaner we might need to create new `RenamedData` class for all classes inheriting from `Data<T>`. Which is not the purpose of this PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4927:1556,inherit,inheriting,1556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4927,1,['inherit'],['inheriting']
Modifiability," the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternal",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4725,Plugin,Plugin,4725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability," timing of GenericConstraintSolver. ### Improvements; - Constraint problem locking extended to be safer (but not yet completely safe) when using multiple forcefeedback devices.; - GenericConstraintCorrection: automatically search LinearSolver from context when solverName is not specified (same behavior as LinearSolverConstraintCorrection).; - Factorize the computation of the compliance matrix and virtualize the computation of dx.; - Improve UncoupledConstraintCorrection compliance computation. Use the same factors for the compliance matrix computation and the correction computation as the one used in LinearSolverConstraintCorrection. ### Cleans; - Clean and Optimize UncoupledConstraintCorrection, factorize code between rigids and vecs, optimize addComplianceInConstraintSpace significantly for large number of constraints.; - Move new constraint accumulation visitors from GenericConstraintSolver.h to MechanicalVisitor.h so that they can be used by other solvers.; - Code refactoring in GenericConstraintCorrection. ### Bugfixes; - Fix FreeMotionAnimationLoop allocates the freeposition / freevelocity as first thing in the time step.; - Fix Haptic mode with haptic influence from constraints applied on all frames. It was not working well on the simulation side.; - Add a correction velocity factor and correction position factor as data in UncoupledConstraintCorrection.; - Fix, the GenericConstraintSolver was not providing the correct number of interations for profiler stats.; - GenericConstraintCorrection's ODESolver is now searched locally.; - Fix the Local Jacobian Matrix. It was not resized when no more constraints were applied on a MechanicalState.; - UncoupledConstraintCorrection for rigid is now in a 7 value vector. When using the default initialization of the compliance using the mass matrix of the rigid the linear part of the compliance was added twice. ### Moved files; - Move contact identifier code in a separate file to avoid inelegant FrictionContact.h inclusion ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/484:1313,refactor,refactoring,1313,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/484,1,['refactor'],['refactoring']
Modifiability," to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:1088,adapt,adapted,1088,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,1,['adapt'],['adapted']
Modifiability," to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:2329,plugin,plugins,2329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['plugin'],['plugins']
Modifiability," { ; return ""CustomName;; }; ```. Removal of nullptr in className, templateName, typeName; ----------------------------------------------------------------------------; In Base.h the className, templateName, typeName are static templated function with the templated type also provided as a parameter (and nullptr if not provided). If think that having the parameter duplicating the template one is not good as it is misleading on the purpose of the function.; In the following example ; ```cpp; MyObject* ptr;; Base::className(ptr); ; ```; You don't see this is a templated method and you have no idea what 'ptr' is for, and you don't even know if putting a nullptr will work or not. ; Using the templated only syntax is more clear on the role of the function; ```cpp; Base::className<MyObject>(); ; ```; Or if you have an object instance; ```cpp; Base::className<declspec(obj)>(); ; ```. Most common code update pattern; ============================; The most common compilation problem you will encounter with non updated external plugin is related to the overriding of getTemplateName or templateName() method. This method is now now considered as final and thus it is not possible to override it anymore. ; To update old code like this: ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return templateName(); } ; static std::string templateName(const CapsuleCollisionModel<DataTypes>* = nullptr); {; return DataTypes::Name();; }; ```; You can remove the code as the default name generation mecanisme can handle that for you automatically using the ""Name"" . . In the case if your DataTypes does not have a Name() function or if some of the class template parameters should not be exposed as runtime template then you need to implement your custom naming scheem by implementing the following function; ```cpp; static const std::string CustomTemplateName(); { ; return ""CustomName"";; }; ```. ______________________________________________________; <!--- Please lea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:3346,plugin,plugin,3346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,1,['plugin'],['plugin']
Modifiability,"# Problem; After updating Sofa source code, you got; `; error: variable has incomplete type 'void'; void SOFA_SOFAEIGEN2SOLVER_API initSofaEigen2Solver();""; `; (or something similar e.g with SOFA_SOFASIMULATIONCOMMON_API , etc). # Why?; While processing the pluginization, macro and config.h files are being rewritten/cleaned to follow the guidelines on Sofa's packaging. So old generated files from cmake's configuration step can mess up with the new ones (compiler does not know which config.h to include and so on). # Solution; Delete the include directory located at the root of your build directory, and configure cmake again. Deletion will clean up everything, and cmake will generate the new config.h.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1670:63,variab,variable,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1670,7,"['config', 'plugin', 'variab']","['config', 'configuration', 'configure', 'pluginization', 'variable']"
Modifiability,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:15,config,configure,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,1,['config'],['configure']
Modifiability,"# This pull request. I introduce a new component: `BruteForceBroadPhase`. This component should not be confused with `BruteForceDetection`. `BruteForceDetection` is two components at once: a broad phase and a narrow phase. I extracted the broad phase code from `BruteForceDetection` and put it in `BruteForceBroadPhase`. `BruteForceBroadPhase` is only a broad phase. There is no narrow phase code inside. The broad phase code extracted from `BruteForceDetection` is taken in #1999. Looking at `RayTraceDetection`, it is also a mix of a broad phase and narrow phase. In this component, the broad phase is actually a brute force broad phase. The broad phase in `RayTraceDetection` did exactly the same thing than the broad phase in `BruteForceDetection`. It means duplicated code. With `BruteForceBroadPhase` we have an opportunity to factorize the broad phase by inheriting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2010:862,inherit,inheriting,862,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010,1,['inherit'],['inheriting']
Modifiability,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4552:2190,enhance,enhancement,2190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552,1,['enhance'],['enhancement']
Modifiability,"## Main discussions. Stéphane: building matrices, vectors, to work with SciPy; Matthieu: Numpy is able to access the memory directly (there are examples). There are some Python modules in Compliant with examples to assemble matrices, etc. Components in Python (Stéphane); ""Trash"" code, not clean, way to go to C++. Forcefield. Need to put breakpoints to interact with the scene from Python console. Our Python needs:; - Create scene easily; - Prototype components; - Matlab aspect. Matthieu: 90% of Datas are binded in Python, special cases need a binding. To sum up, we already have what we need, we just don't know how to work with everything. Besides technical aspects, what we need is a step to step tutorial and more examples. . --> Update online documentation to add Numpy; --> Add a doc for newcomers: right now it is very hard to enter in SOFA with Python (no doc). Start with step by step tutorials and create a Python version of each step. ## Other discussions: performances. ### Pypy. x100 perf but big big cost (recode everything: plugin, bindings, ...). ### Cython. ability to code in Python and get C++ code generation; we can keep the current plugin but we wont gain perf; optimizes some small algos; ability to manually release the GIL (lock); ability to connect to the current VM; adds a step of compilation using ""CIMPORT"" but it must have compilo + headers and libs Sofa. ### Problem of version 2.7 vs 3. Current plugin renamed SofaPython27; SofaPython passes python 3.0. ### How do you get to use Python?. Stéphane: Making XML optional?; Matthieu: python is not just a loader, there is a binding too; As said before, we have to use more Python in the tutorials (doc, website ...). ____________________________________. Referee:; @bcarrez . Interested people:; @matthieu-nesme ; @damienmarchal ; @etienneschmitt ; @bruno-marques ; @chpaulus . If you are interested please tell it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/23:1043,plugin,plugin,1043,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/23,3,['plugin'],['plugin']
Modifiability,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2263:897,variab,variables,897,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263,1,['variab'],['variables']
Modifiability,"### ALL THIS CHANGES MAINLY AFFECT SOFA INSTALL; (basically nothing changes for you if you never do `make install`). Nothing is breaking BUT dependency problems may arise.; Using package subdirs and relocatable plugins will force us to define dependencies correctly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:211,plugin,plugins,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['plugin'],['plugins']
Modifiability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/2657. <div type='discussions-op-text'>. <sup>Originally posted by **longhathuc** February 2, 2022</sup>; Hi, I'm Long from mimesis. I have tried to build the plugins with recent commit of sofa at https://github.com/mimesis-inria/sofa/ But failed. Sofa build successfully, but for the plugins, this is the error when doing cmake. ```; CMake Error at /home/long/work/install/sofaInstall/lib/cmake/SofaGeneral/SofaGeneralConfig.cmake:40 (find_package):; Found package configuration file:. 1 /home/long/work/install/sofaInstall/plugins/SofaGeneralObjectInteraction/lib/cmake/SofaGeneralObjectInteraction/SofaGeneralObjectInteractionConfig.cmake. but it set SofaGeneralObjectInteraction_FOUND to FALSE so package; ""SofaGeneralObjectInteraction"" is considered to be NOT FOUND. Reason given; by package:. The following imported targets are referenced, but are missing: SofaEngine. Call Stack (most recent call first):; /home/long/work/sperry/CMakeLists.txt:56 (find_package); ```. Do you have any clue which might cause the error?. Thanks </div>. #2621 adds two new dependencies on SofaGeneralEngine and SofaEngine for SofaGeneralObjectInteraction, but its associated cmake.in did not reflect the change.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2658:226,plugin,plugins,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2658,4,"['config', 'plugin']","['configuration', 'plugins']"
Modifiability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3179. <div type='discussions-op-text'>. <sup>Originally posted by **alxbilger** July 27, 2022</sup>; NameDecoder has functions to get the name, template name, namespace etc as a string based on a type. Currently, functions are runtime.; Since types are known at compile-time, it would make sense that NameDecoder could be `constexpr`.; The problem is that C++ does not offer compile-time and portable features to do such a thing. I found a solution on the web, but it is not portable:. - https://stackoverflow.com/a/59522794; - https://bitwizeshift.github.io/posts/2021/03/09/getting-an-unmangled-type-name-at-compile-time/. It uses `__PRETTY_FUNCTION__` (for clang and msvc) and `__FUNCSIG__` for msvc. . Some problems with this solution:. - Other compilers are not supported.; - `__FUNCSIG__` might not be defined depending on the compilation options. ; - `__PRETTY_FUNCTION__` is not defined with old gcc. Open-source libraries I found (such as https://github.com/Manu343726/ctti or https://github.com/adambadura/type_name) also use the `__PRETTY_FUNCTION__` solution. I think it would not affect any of us if we start using this non-portable C++ since the modern compilers that we use support it. But, to be safe, I start the discussion if we go to this direction.</div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4514:460,portab,portable,460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4514,3,['portab'],['portable']
Modifiability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/3438. <div type='discussions-op-text'>. <sup>Originally posted by **younes1010** October 28, 2022</sup>; I want to use this plug-in that integrates OpenCV with SOFA : https://github.com/rouge1616/SofaOpenCVPlugin; When I define the plug-in's directory in EXTERNAL_DIRECTORIES and configure it, it works. But when I tick the name of the plug-in (figure 1) as the second step, and configure it again, Cmake returns this error : (figure 2). Figure (1):. ![Capture2](https://user-images.githubusercontent.com/116725962/198552700-460b7ae4-61d8-45d7-bca9-b2435f11092c.PNG). Figure (2):; ![Capture1](https://user-images.githubusercontent.com/116725962/198552722-81ccbb03-f8c1-43dc-a11f-aecac5035786.PNG). </div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3440:192,plug-in,plug-in,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440,5,"['config', 'plug-in']","['configure', 'plug-in']"
Modifiability,"### Discussed in https://github.com/sofa-framework/sofa/discussions/5069. <div type='discussions-op-text'>. <sup>Originally posted by **rickysaettone** October 17, 2024</sup>; # The issue:; I can't visualize two of the .stl objects at the same time but I can see them separately.; Not only does the plane disappear while trying to show both, but also the position of the actuator seems transformed and a two vertices appear in a weird position too.; Can anyone help me please? I am starting to learn SOFA and python in general. Location of the objects: [STL.zip](https://github.com/user-attachments/files/17420653/STL.zip). - actuator located in STL/actuador.stl; - plane located in STL/plane.stl. # Version:; - OS: Windows 11 version: 10.0.22631; - SOFA v23.06.00 via the installer; - Python 3.8.10. # The code:; ```python; #-*- coding: utf-8 -*-; import Sofa; #import contoller.py. def createScene(rootNode):; ; # Required plugins; rootNode.addObject('RequiredPlugin', name='Sofa.Component.IO.Mesh') # Needed to use components [MeshSTLLoader]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mapping.Linear') # Needed to use components [IdentityMapping]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mass') # Needed to use components [UniformMass]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.StateContainer') # Needed to use components [MechanicalObject]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Visual') # Needed to use components [VisualStyle]; rootNode.addObject('RequiredPlugin', name='Sofa.GL.Component.Rendering3D') # Needed to use components [OglModel]; rootNode.addObject('VisualStyle', displayFlags='showForceFields showBehaviorModels'); ; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). # Setting the timestep in seconds; rootNode.dt = 0.01; rootNode.addObject('RequiredPlugin',; pluginName='SoftRobots SofaPython3'); ; # Load the mesh file of the actuator and the plane.; rootNode.addObje",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5084:925,plugin,plugins,925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5084,1,['plugin'],['plugins']
Modifiability,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:17,plugin,plugin,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,12,"['Plugin', 'plugin']","['PluginManger', 'plugin']"
Modifiability,"### Problem. **Description**; < Hi everyone, I followed the instructions to install SOFA software and when Im Generating a VS project (.sln) or a Makefile with CMake I have some troubles because there are some errors just like metis_DIR-NOTFOUND and also GLEW_DIR-NOTFOUND>. **Steps to reproduce**; < 1. I add where my source code is going to be.; 2. I add where my binaries are going to be.; 3. I use Visual Studio; 4. I push configurate and first I have a problem with Eigen, but fortunately I could solve it.; 5. I push configurate again and there are two errors, one says: metis_DIR-NOTFOUND and second: GLEW_DIR-NOTFOUND>. **Expected behavior**; < I search for Metis and I found something called metis 5.10.0 but nothing happens, the error can not be solved, in the other hand I don't know nothing about GLEW. Hope you can help me, I attached some pictures, Thanks. >. --------------; ![metis](https://user-images.githubusercontent.com/111095273/184257908-0df394b7-5c8e-4d3a-acf1-bd1ecce53c3a.png); -------------------------------. ### Environment; ![metis1](https://user-images.githubusercontent.com/111095273/184257942-11b4e619-c723-4ab2-b53d-ccdb737e674c.png). **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nex",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3213:427,config,configurate,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3213,2,['config'],['configurate']
Modifiability,"### Problem. **Description**; After building Sofa from source and running ```cmake --install build/``` there are headers missing for QGLViewer.; The installation also adds some redundant QGLViewer directories to the install path. **Steps to reproduce**; - clone the current Sofa repo; - cd into the cloned folder; - run ```cmake -B build/``` ; - run ```cmake --build build/```; - run ```cmake --install build/```. The last line installs everything into $sofa_dir/build/install/.; For QGLViewer this results in ; 1. an overly long install path:; - ```$sofa_dir/build/install/include/extlibs/QGLViewer/QGLViewer/QGLViewer```; 2. missing headers from libQGLViewer, only the following ones are available, most notably qglviewer.h is missing here:; - ```config.h constraint.h domUtils.h mouseGrabber.h quaternion.h ui_ImageInterface.h ui_VRenderInterface.h vec.h```; ; **Expected behavior**; - All headers for libQGLViewer should be copied to the install directory; - The path for the headers should be something like ```$sofa_dir/build/install/include/extlibs/QGLViewer/include/QGLViewer/*.h``` or ```$sofa_dir/build/install/include/extlibs/QGLViewer/*.h```. ---------------------------------------------. ### Environment. **Context**; This happens on both Linux and Windows but only became critical on Windows when I had tried to use the Sofa provided libQGLViewer in my own project. This could temporarily be fixed by changing my own CMake include path to ```{SOFA_INSTALL_DIR}/../../Sofa/GUI/Qt/libQGLViewer```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4196:749,config,config,749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4196,1,['config'],['config']
Modifiability,"### Problem. **Description**; Hello, thank you for your work. I want to compile Sofa. **Steps to reproduce**; I did all installation steps https://www.sofa-framework.org/community/doc/getting-started/build/linux/ make the same structure as described & clone `git clone -b v21.12 https://github.com/sofa-framework/sofa.git sofa/src`.; After configure cmake gui I got error:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /media/maxim/big-500/sofa/build/v21.12/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:80 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). Using legacy headers is enabled.; Headers from v21.06 are usable, but it is advised to change your code to use the new headers introduced in v21.12.; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin SofaGeneralDeformable; CMake Warning at /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaEigen2SolverConfig.cmake:36 (message):; SofaEigen2Solver has been removed. The package still exists for; compatibility but is empty. Eigen classes were moved to Sofa.LinearAlgebra; and SVDLinearSolver to SofaDenseSolver.; Call Stack (most recent call first):; /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaBaseConfig.cmake:35 (find_package); /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaGeneralDeformableConfig.cmake:34 (find_package); modules/SofaGeneralDeformable/SofaGeneralDeformable_test/CMakeLists.txt:12 (find_package). Adding ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:340,config,configure,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,3,"['Config', 'config', 'variab']","['Config', 'configure', 'variable']"
Modifiability,"### Problem. **Description**; I configure the sofa-cuda successfully, but when I generating it I get the error like this. ""CUDA_STANDARD is set to invalid value '17'"". **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < ""Ubuntu 20.04"">; - CUDA 12.0; - Version of SOFA: stable branch; - State: < Build>. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808:32,config,configure,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808,1,['config'],['configure']
Modifiability,"### Problem. **Description**; I get difficulties to compile SOFA, due to some incompatibilities. **Steps to reproduce**; Compile SOFA with CMake GUI, and run compilation with ninja. ---------------------------------------------. ### Environment. I tried to compile SOFA again , and I get some trouble that was'nt trivial for me. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: SOFA v23.12.99. ###. I get two different troubles :. - First of all, by mistake, I once checked the SOFA_FETCH_SOFAPYTHON3 value in the cmake-gui (I was thinking it was necessary to link SofaPython3 in the good way), and it download the plugin directly in the source code. But, as I already download the SofaPython3 source myself as an external plugins, it create a conflict between the two versions at configuration. . - Also, I get an error during the compilation, because I did'nt disable the SOFA_GUI_QT_ENABLE_QDOCBROWSER value in cmake-gui. What is this feature for ? Maybe it could be better to disable it by default ?. Now everything is working well on my side. Thanks a lot.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4343:615,plugin,plugin,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4343,3,"['config', 'plugin']","['configuration', 'plugin', 'plugins']"
Modifiability,"### Problem. **Description**; I have compiled sofa successfully with `make`; and I run ./runSofa, I will get the error occurs. **Steps to reproduce**; `./runSofa`. **Expected behavior**; I get the correct GUI with Ubuntu. ---------------------------------------------. ### Environment; MAC with M1 Process; **Context**. - System: MAC OS Celledar; - Version of SOFA: mast branch; - State: Build Directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:503,Plugin,PluginRepository,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,3,"['Plugin', 'plugin']","['PluginRepository', 'plugin', 'plugins']"
Modifiability,### Problem. **Description**; I've just tried to install last SOFA version with binaries. **Steps to reproduce**; Install SOFA with the .run files and add SofaPython3 plugin. **Expected behavior**; There is an error when I tried to add the plugin. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: 23.06.00. ### Logs. ```txt. Plugin loading failed (/home/pchaillo/SOFA/v23.06.00/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.8.so.1.0: cannot open shared object file: No such file or directory. ```; **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159:167,plugin,plugin,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159,4,"['Plugin', 'plugin']","['Plugin', 'plugin', 'plugins']"
Modifiability,"### Problem. **Description**; In the archive downloaded from https://www.sofa-framework.org/download/, the file metis.h cannot be found. Therefore, it is not possible to include it in a plugin compiled based on the SOFA binaries.; Note that metis.h is found in the latest nightly builds. The difference may come from the move in https://github.com/sofa-framework/sofa/pull/2717. **Expected behavior**; metis.h can be included based on a SOFA v21.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows (but probably all systems); - Version of SOFA: v21.12.00 binaries; - State: ""Install directory""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2866:186,plugin,plugin,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2866,1,['plugin'],['plugin']
Modifiability,"### Problem. **Description**; Problem with the compile version of Sofa using gcc-8 or any version of the ""GNU"" compiler less than 9.1. This is require due to the version of my CUDA (v10.2) from the Sofa docker. Programs containing CUDA libraries of this version require **gcc-8** or less. Sofa compiles with no error, but there is no link to the library _std::filesystem_, as it does not exist for versions lower than **gcc-9.1**. This is a common discussed bug for Ubuntu and gcc and it is widely discussed in other pages like [here](https://askubuntu.com/questions/1256440/how-to-get-libstdc-with-c17-filesystem-headers-on-ubuntu-18-bionic), [here](https://stackoverflow.com/questions/45417707/glibcxx-use-cxx11-abi-gcc-4-8-and-abi-compatibility) or [here](https://stackoverflow.com/questions/33394934/converting-std-cxx11string-to-stdstring). **Steps to reproduce**; To reproduce this problem select gcc-8 as your compiler to compile Sofa. Configure and build Sofa as usual. Then, run the command runSofa and it should return a Segmentation Fault regarding the FileRepository.cpp file. . **Expected behavior**; We should see the cauduceus.scn simulation as usual. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04 (Official docker container [sofa-builder](https://hub.docker.com/r/sofaframework/sofabuilder_ubuntu)); - Version of SOFA: v22.12 branch; - State: ""Build directory"". **Command called**. runSofa. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #####",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3943:943,Config,Configure,943,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943,1,['Config'],['Configure']
Modifiability,### Problem. **Description**; Since Glew has been set to mandatory by PR: https://github.com/sofa-framework/sofa/pull/2358 ; some external plugin are not compiling anymore on the CI because Glew is not find. **Steps to reproduce**; Just check this link: https://github.com/sofa-framework/SofaHapticAvatar/runs/7087373200?check_suite_focus=true. **Expected behavior**; Either something is missing in Sofa.Gl install step to package glew or should each pacakge linking to Sofa.Gl also find Glew ?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3079:139,plugin,plugin,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3079,1,['plugin'],['plugin']
Modifiability,"### Problem. **Description**; We have a Sofa Scene with an integrated python script controller. In this python controller we alter the rest position of a mechanical object with template 'CudaVec3f'. In the online documentation of SofaCUDA [https://www.sofa-framework.org/community/doc/plugins/usual-plugins/using-cuda/](url) there is an example C++ code to access and change parameters of a mechanical object when using SofaCUDA, but there is no corresponding python code snippet. When retrieving the rest position value, the python type is a numpy array in contrast to c++, which has no deviceRead and deviceWrite properties. As there is no direct access to cuda in the SofaPython3 wrapper, our question is how reading/writing can be done in SofaPython3. . When using SofaCUDA without the deviceRead and deviceWrite functions, the object in question randomly diverges, when a translation to `rest_position` is applied. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: 23.06 binary version; - State: binary version",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4285:285,plugin,plugins,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4285,2,['plugin'],['plugins']
Modifiability,"### Problem. **Description**; When i build sofa 22.12 in window10, i faced a issue in sofa.helper; (cmake configure and generate success, default settings, no change option after download). 4>FileSystem.cpp; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2588,74): error C2061: syntax error : identifier “byte”; 4>D:\Windows Kits\10\Include\10.0.22621.0\um\objidl.h(2602,62): error C2143: syntax error : missing ',' before '*'. What happened? it's seems that a contain error.; Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4329:106,config,configure,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4329,1,['config'],['configure']
Modifiability,"### Problem. **Description**; When trying to compile the SOFA-CUDA plugin, I receive a linker error for CudaHexahedronFEMForceField.cpp.o. **Steps to reproduce**; Clone the repo for version v22.12; Configure cmake to compile SOFA_CUDA plugin. **Expected behavior**; It should link properly against the CudaHexahedronFEMForceField.cpp.o file. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 22.04 >; - Version of SOFA: < git tag v22.12 >; - State: < ""Build directory"" >. **Command called**. ```txt. make -j20. ```. **Env vars**. ```txt. #################; --- sys.version ---; 3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]; --- PATH ---; /home/create/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/create/.local/lib/python3.10/site-packages', '/usr/local/lib/python3.10/dist-packages', '/usr/lib/python3/dist-packages']; #################; create@create-AMX-X57. ```. ---------------------------------------------. ### Logs. **Output from make**. ```; ...; [ 89%] Linking CXX shared library ../../../lib/libSofaCUDA.so; /usr/bin/ld: CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/CudaHexahedronFEMForceField.cpp.o: in function `sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::HexahedronFEMForceField()':; CudaHexahedronFEMForceField.cpp:(.text._ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev[_ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev]+0x269): undefined reference to `sofa::core::behavior::ForceField<sofa::gpu::cuda::CudaVectorTypes<s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726:67,plugin,plugin,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726,3,"['Config', 'plugin']","['Configure', 'plugin']"
Modifiability,"### Problem. **Description**; hello, I wanted to use Sofa 23.06.00 in M1 Mac Book Pro ; But I can not use Sofa. This error message indicates:; (have 'x86_64', need 'arm64e' or 'arm64')); I'd like to know the solution.; I want to use Sofa 23.06.00. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >; 1. install anaconda and make virtual environment ; 2. install sofa framework ; 3. define the environment variables ; 4. import Sofa in python. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. Success importing Sofa in python without any error. ---------------------------------------------. ### Environment. **Context**. - System: Mac OS X 14.4.1 (23E224) ; - Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SO",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:428,variab,variables,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['variab'],['variables']
Modifiability,"### Problem. Hi all,; First of all i want to thank you for your work, and yours great framework!; Thanks!. **Description**; I want to try run latest version of Sofa-framework, but I got problem with different gcc verions. **Steps to reproduce**; First of all I had installed SOFA by using your precompiled binary file:; `./SOFA_v21.12.00_Linux.run`; after that I run:; `./runSofa-21.12.00`; And I got the errors; ```; ./runSofa-21.12.00 ; ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.Helper.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.SimulationCore.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../plugins/SofaValidation/lib/../../../lib/libSofa.Type.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../lib/libSofaBaseMechanics.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaDeformable/lib/libSofaDeformable.so.21.12.00); ```; **Expected behavior**; I think It should work, at least. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 18.04""; - Version of SOFA: SOFA_v21.12.00. **Command called**. ```; gcc --version; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3169:906,plugin,plugins,906,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3169,1,['plugin'],['plugins']
Modifiability,"### Problem. PR #3665 seems to break the initialization of some links. . **Description**; I have an home made mapping which inherits from `Multi2Mapping`. With the changes of #3665, the initialization of `input2` fails, `Multi2Mapping::getFromModels2()` returns an empty list. Reverting the PR fixes the issue.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3705:124,inherit,inherits,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705,1,['inherit'],['inherits']
Modifiability,"### Problem. Running `runSofa` in `RelWithDebInfo` configuration in VS 2022 loads the scene properly but leads to nullptr access in `HexahedronFEMForceField::getIndexedElements`. Running `.\runSofa -a` in powershell gives the same crash. ![image](https://user-images.githubusercontent.com/43549821/177644004-c4a691f5-c890-4f66-bf17-5881922af648.png). The scene loads fine and only crashes when one of these 2 buttons are pressed. ![image](https://user-images.githubusercontent.com/43549821/177643932-820290b2-8caa-4b64-b171-8bf1fdeff4ef.png). **Steps to reproduce**; Running the command below.; Everything is configured exactly as shown in the windows building tutorial, except I'm using msvc2019 libraries for qt 5.15.2as msvc2022 libraries are not available. **Expected behavior**; Should not crash. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 build 21390.2025; - Version of SOFA: commit d300cc9af550afbd5c2167470676a5a7d47381a1 (HEAD -> v21.12, tag: v21.12.00, origin/v21.12_beta, origin/v21.12); - State: Build directory. **Command called**. ```txt. PS D:\github-clones\sofa\build\bin\RelWithDebInfo> .\runSofa.exe -a. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.10.0 (tags/v3.10.0:b494f59, Oct 4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]; --- PATH ---; D:\Program Files\OpenSSH;C:\ProgramData\Oracle\Java\javapath;C:\Python310\Scripts\;C:\Python310\;D:\Python27\;D:\Python27\Scripts;D:\Program Files\Oc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:51,config,configuration,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,['config'],"['configuration', 'configured']"
Modifiability,"### Problem. https://user-images.githubusercontent.com/64316740/228077758-c6f1ff42-0527-48da-aeb5-2447d0598259.mp4. **Description**; I can't run **Configure**. **Steps to reproduce**; Follow this tutorial https://www.sofa-framework.org/community/doc/getting-started/build/linux/. **Expected behavior**; Like in this video https://youtu.be/5pbT49t9M_k?t=586. ---------------------------------------------. ### Environment. **Context**. - System: < ""Ubuntu 20.04"" >; - Version of SOFA: < ""master branch at commit 2cd4575cbbe13562b906925f81c4e565cec3bcc5"" >. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.8.10 (default, Mar 13 2023, 10:26:41) ; [GCC 9.4.0]; --- PATH ---; /home/giang/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/USD/bin:/opt/gurobi1000/linux64/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; :/usr/local/lib/python3.8/dist-packages:/usr/lib/python3/dist-packages:/usr/local/USD/lib/python:/media/giang/Storage/ecoSIM/PythonAPI/carla/dist/carla-0.9.13-py3.8-linux-x86_64.egg:/media/giang/Storage/ecoSIM/PythonAPI/carla:/home/giang/bullet3/build_cmake/better_python:/home/giang/bullet3/examples/pybullet; --- sys.path ---; ['', '/home/giang', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages', '/usr/local/USD/lib/python', '/media/giang/Storage/ecoSIM/PythonAPI/carla/dist/carla-0.9.13-py3.8-linux-x86_64.egg', '/media/giang/Storage/ecoSIM/PythonAPI/carla', '/h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752:147,Config,Configure,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752,1,['Config'],['Configure']
Modifiability,"### Problem; Hi,; this is related to https://github.com/sofa-framework/sofa/issues/3201. Same as before, I want to cut a deformable object. I wanted to check, if it is easier in total to replace the Hexahedra with Tetraeder for cutting.; Sadly, I sometimes (not always, not really reproducible) get segfaults when deleting elements.; This occurs both through mouse interaction, as well as the `SofaCarving` plugin.; So I guess there is some form of missing lock / set dirty on one of the components.; In other scenes, I also had that problem for `TriangleSetTopologyContainer`. The minimal scene for reproducing the behavior is:. <details>; <summary>Click to expand!</summary>. ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.Engine.Select"", # [BoxROI]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.MechanicalLoad"", # [PlaneForceField]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [FastTetrahedralCorotationalForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier, TetraheopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping, Quad2TriangleTopologicalMapping]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.GL.Component.Rendering3D"", # [OglModel]; ]. plugin_node = root_node",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:407,plugin,plugin,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['plugin'],['plugin']
Modifiability,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems: /ERROR] H� Win32 �(nager] Plugin loading failed (D:/SOFA/v23.06.00/bin/SofaPython3.dll): %1; I can't load the .ddl via PluginManager (in the GUI). Please help me...; **Description**; < DESCRIBE YOUR PROBLEM HERE >; ![image](https://github.com/user-attachments/assets/2e24c376-cd2e-4c64-b3f1-a83b2709132e); The system path is shown below:; ![image](https://github.com/user-attachments/assets/54a24f35-3752-47cd-8ae1-8c7c4b5f9997). ---------------------------------------------. ### Environment. **Context**. - System: ""Windows 11""; - CPU: 13th Gen Intel(R) Core(TM) i7-13700; - Version of SOFA: ""v23.06.00 binaries""; - Pybind11 2.9.1; - Python 3.8.19. **Command called**. ```; runSofa -l SofaPython3 . ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4914:209,Plugin,Plugin,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4914,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"### Problem; running failing due to loading of plugins ; **Description**; Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Can also track the conversation in original repo : https://github.com/ScheiklP/sofa_env/issues/31; **Steps to reproduce**; Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:47,plugin,plugins,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,5,"['Config', 'plugin']","['ConfigurationSetting', 'plugin', 'plugins']"
Modifiability,"### runSofa crash . **Description**; runSofa crash when a texture file is not found by OglModel. **Steps to reproduce**; put a wrong filename or path into a textureName:; `<OglModel name=""VisualBody"" src=""@loader"" texturename=""../Material/textures/colorTest.jpg"" />`. **Expected behavior**; Error message and do not use the texture but normal default material rendering. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: master; - State: build version. ### Logs. ```; [ERROR] [OglModel(VisualBody)] Texture ""C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg"" not found; [ERROR] [Image] File C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg not found. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; seh_filter_exe; seh_filter_exe; _C_specific_handler; _chkstk; RtlRaiseException; KiUserExceptionDispatcher; sofa::gl::Texture::update; sofa::gl::Texture::init; sofa::gl::component::rendering3d::OglModel::initVisual; sofa::component::visual::VisualModelImpl::drawVisual; sofa::simulation::VisualDrawVisitor::processVisualModel; sofa::simulation::VisualVisitor::processNodeTopDown; sofa::simulation::VisualDrawVisitor::processNodeTopDown; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::doExecuteVisitor; sofa::simulation::DefaultVisualManagerLoop::drawStep; sofa::simulation::Simulation::draw; sofa::gui::qt::viewer::qgl::QtGLViewer::DisplayOBJs; sofa::gui::qt::viewer::qgl::QtGLViewer::drawScene; sofa::gui::qt::viewer::qgl::QtGLViewer::draw. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3567:612,Plugin,Plugins,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3567,2,['Plugin'],['Plugins']
Modifiability,"################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); >>> . ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:5746,plugin,plugins,5746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,4,['plugin'],['plugins']
Modifiability,"#1300 . (+Cleaning, +Fix in SofaGuiQt); Add header config file to runSofa. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1302:51,config,config,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1302,1,['config'],['config']
Modifiability,"#1453 ; #1514; #1515 . We are trying to define a same type for index and size in all SOFA (like e.g Eigen::Index); It will allow us to a have more consistent, less confusing and potentially less error-prone code.; It has been decided that the common underlying type will be unsigned int.; Those core types are located in the sofa namespace (defined in sofa/config.h ); In the future all the typedefs concerning indices will be removed. a depreciation message for sofa::defaulttype::index_type has been done (as well as BaseMeshTopology::index_type typedef). BREAKING: ; - sofa::defaulttype::index_type moved and renamed to sofa::Index. sofa_index is deprecated but I suppose it can be breaking anyway, if index type used before was signed,; - newly introduced type for Size is sofa::Size; - all templates based on int/size_t/ etc will break.; - test with ""incorrect"" indices using -1 ; now that indices are unsigned, test for ""incorrect"" indices should be tested against InvalidID (already introduced some time ago), InvalidID is now sofa::InvalidID instead of sofa::defaulttype::InvalidID",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1539:357,config,config,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1539,1,['config'],['config']
Modifiability,"#1527. based on ; - #2612 . Deprecates SofaGeneralVisual; Partially deprecates SofaBaseVisual. Nothing special in that module, except that it contains all visual stuff not related to OpenGL.; OpenGL related code will have its own plugin.; EDIT: #2709 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2679:230,plugin,plugin,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2679,1,['plugin'],['plugin']
Modifiability,"#1527; Based on ; - #2571 . Creating the module **Sofa.Component.IO**, where all the components linked to loading or exporting a mesh(.Mesh)~~/stuff(.Misc)~~ are contained.; Read/Writing stuff to repeat identical simulations (ReadState/Topology,etc) has been moved to a new category, namely **Sofa.Component.Playback**; Deprecates **SofaLoader**, **SofaGeneralLoader** and **SofaExporter**. Good module to test the compatibility of installation process, as the plugin Python3 has a dependency on the former SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2582:461,plugin,plugin,461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2582,1,['plugin'],['plugin']
Modifiability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - fix some dependencies; - use only RGBAColor; - remove warnings; - use sofa::Size/sofa::Index (including missed functions, which makes this PR breaking for those inheriting for these components). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1676:247,inherit,inheriting,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1676,1,['inherit'],['inheriting']
Modifiability,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2188:66,plugin,plugins,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188,1,['plugin'],['plugins']
Modifiability,#2812 showed that a lot of engines are undocumented/unclear/duplicated.; Some serious refactoring/cleanup should be considered. List of all engines: . <html><body>; <!--StartFragment--><google-sheets-html-origin><!--td {border: 1px solid #ccc;}br {mso-data-placement:same-cell;}-->. Component | SubCategory; -- | --; AverageCoord.h | Analyze; ClusteringEngine.h | Analyze; Distances.h | Analyze; HausdorffDistance.h | Analyze; ShapeMatching.h | Analyze; SumEngine.h | Analyze; ExtrudeEdgesAndGenerateQuads.h | Generate; ExtrudeQuadsAndGenerateHexas.h | Generate; ExtrudeSurface.h | Generate; GenerateCylinder.h | Generate; GenerateGrid.h | Generate; GenerateRigidMass.h | Generate; GenerateSphere.h | Generate; GroupFilterYoungModulus.h | Generate; JoinPoints.h | Generate; MergeMeshes.h | Generate; MergePoints.h | Generate; MergeSets.h | Generate; MergeVectors.h | Generate; MeshBarycentricMapperEngine.h | Generate; MeshClosingEngine.h | Generate; NormalsFromPoints.h | Generate; NormEngine.h | Generate; RandomPointDistributionInSurface.h | Generate; Spiral.h | Generate; BoxROI.h | Select; ComplementaryROI.h | Select; IndicesFromValues.h | Select; MergeROIs.h | Select; MeshBoundaryROI.h | Select; MeshROI.h | Select; MeshSampler.h | Select; MeshSplittingEngine.h | Select; MeshSubsetEngine.h | Select; NearestPointROI.h | Select; PlaneROI.h | Select; PointsFromIndices.h | Select; ProximityROI.h | Select; SelectConnectedLabelsROI.h | Select; SelectLabelROI.h | Select; SphereROI.h | Select; SubsetTopology.h | Select; ValuesFromIndices.h | Select; ValuesFromPositions.h | Select; DifferenceEngine.h | Transform; DilateEngine.h | Transform; DisplacementMatrixEngine.h | Transform; IndexValueMapper.h | Transform; Indices2ValuesMapper.h | Transform; MapIndices.h | Transform; MathOp.h | Transform; ProjectiveTransformEngine.h | Transform; QuatToRigidEngine.h | Transform; RigidToQuatEngine.h | Transform; ROIValueMapper.h | Transform; SmoothMeshEngine.h | Transform; TransformEngine.h | Transfor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2906:86,refactor,refactoring,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2906,1,['refactor'],['refactoring']
Modifiability,"')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 2.7.18 (v2.7.18:8d21aa21f2, Apr 20 2020, 13:25:05) [MSC v.1500 64 bit (AMD64)]; --- PATH ---; C:\Program Files\Eclipse Foundation\jdk-8.0.302.8-hotspot\bin;C:\Python27;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\Scripts;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39;C:\SIMULIA\Commands;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Crucial\Crucial Storage Executive;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\CMake\bin;C:\Qt\5.15.2\msvc2019_64\bin;C:\Qt\5.15.2\msvc2019_64\lib;C:\local\boost_1_75_0\lib64-msvc-14.2;C:\local\boost_1_75_0;C:\Program Files\Git\cmd;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\;C:\Users\Ruiliang\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ruiliang\.dotnet\tools; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', 'C:\\WINDOWS\\SYSTEM32\\python27.zip', 'C:\\Python27\\DLLs', 'C:\\Python27\\lib', 'C:\\Python27\\lib\\plat-win', 'C:\\Python27\\lib\\lib-tk', 'C:\\Python27', 'C:\\Python27\\lib\\site-packages']",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486:3017,config,config,3017,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486,1,['config'],['config']
Modifiability,"', name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'); topoLines_cath.addObject('MechanicalObject', template='Rigid3d', name='dofTopo'). CatheterMechanics = rootNode.addChild('CatheterModel'); CatheterMechanics.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); CatheterMechanics.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); CatheterMechanics.addObject('RegularGridTopology',name='meshLines',nx=60,ny=1,nz=1,xmin=0.0,xmax=1.0,ymin=0, ymax=0,zmin=1,zmax=1); CatheterMechanics.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices=0,ry=-90); CatheterMechanics.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); CatheterMechanics.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField', interpolation='@InterpolCatheter', massDensity=0.00000155); CatheterMechanics.addObject('InterventionalRadiologyController',template='Rigid3d',name='m_ircontroller',printLog='0',xtip=[1, 0 ,0], step=3,rotationInstrument=[0, 0 ,0],controlledInstrument='0',startingPos=[0 ,0 ,0 ,0, -0.7071068, 0, 0.7071068],speed=2,instruments='InterpolCatheter'); CatheterMechanics.addObject('FixedConstraint',name='FixedConstraint',indices=0); CatheterMechanics.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e8). VisuCatheter = CatheterModel.addChild('VisuCatheter'); VisuCatheter.activated = True; VisuCatheter.addObject('MechanicalObject',name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer',name='ContainerCath'); VisuCatheter.addObject('QuadSetTopologyModifier',name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping',nbPoi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483:1843,Adapt,AdaptiveBeamForceFieldAndMass,1843,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,"'--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - MeshOBJLoader: 6 created with alias ""MeshObjLoader""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. Installed with the binary, so CMake wasn't used. ---------------------------------------------. PS: Please do inform me if any other information is required.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:2061,Plugin,PluginManager,2061,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,4,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membran",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:6297,plugin,plugins,6297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['plugin'],['plugins']
Modifiability,"'/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have '",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:5529,plugin,plugins,5529,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,"'EdgeSetTopologyModifier', name='colliseEdgeModifier'); Collis.addObject('MechanicalObject', name='CollisionDOFs'); Collis.addObject('MultiAdaptiveBeamMapping', controller='../m_ircontroller', ; useCurvAbs=True, printLog=False, name='collisMap'); Collis.addObject('LineCollisionModel', proximity=0.0, group=1); Collis.addObject('PointCollisionModel', proximity=0.0, group=1); # Visualization Guide; VisuGuide = InstrumentCombined.addChild('VisuGuide'); #VisuGuide.activated = 'true'; VisuGuide.addObject('MechanicalObject', name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier', name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping', radius='1', listening=True, ; input='@../../topoLines_guide/meshLinesGuide', ; nbPointsOnEachCircle='10', flipNormals='true', output='@ContainerGuide'); VisuGuide.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide', ; name='visuMapGuide', output='@Quads', isMechanical=False, ; input='@../DOFs', useCurvAbs=True, printLog=True); TriangleTopology = VisuGuide.addChild('TriangleTopology'); TriangleTopology.addObject('TriangleSetTopologyContainer', name='TriangleContainer'); TriangleTopology.addObject('TriangleSetTopologyModifier', name='Modifier'); TriangleTopology.addObject('TriangleSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); TriangleTopology.addObject('Quad2TriangleTopologicalMapping', input='@../ContainerGuide', output='@TriangleContainer'); # Ogl model; VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], triangles='@../TriangleTopology/TriangleContainer.triangles', ; material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', name='Visual'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'); ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:16813,Adapt,AdaptiveBeamMapping,16813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,"(Only MSVC). - SOFA_VECTORIZE is supposed to enable SSE2 but x64 config in MSVC is already enabling ss2 by default. And supposedly now people only use x64. Therefore, if SOFA_VECTORIZE is enabled, msvc is warning (for each cpp) that the sse2 flag is useless.; - SOFA_VECTORIZE also enables fast_math in the same time (maybe you would not want); - the name itself is not really informative (vectorize what ?). This PR:; - add 2 new options: SOFA_ENABLE_FAST_MATH (and enable fast_math); and SOFA_ENABLE_SIMD, which will enable either AVX2 or AVX or nothing if the CPU supports respectively either AVX2 or AVX or nothing (SSE2 is the fallback in msvc/x64); - deprecates SOFA_VECTORIZE , which enables the 2 previous options if checked. More lecture for the curious: https://devblogs.microsoft.com/cppblog/do-you-prefer-fast-or-precise/; fpfast enables auto-vectorisation (among other stuff), thats why they are usually enabled together. On my setup, with SOFA_ENABLE_FAST_MATH + SOFA_ENABLE_SIMD, I can get around 0 to 10% of speedup. Nothing revolutionary anyway. ; TorusFall.scn (1000steps):; - fastfp+avx2: `7.90001 s ( 126.582 FPS)`; - fastfp `8.3388 s ( 119.921 FPS)`; - avx2 `8.49847 s ( 117.668 FPS)`; - ss2 `8.56825 s ( 116.71 FPS)`; We can see that it should be either both of them enabled, or not. That's why it will not be enabled by default, except if we want fp:fast by default. SIde note, seems Eigen3 is quite optimized with SIMD (w/o vs w/):; - `BM_Matrix_eigenmat33_invert/512` : 4.45 us vs 3.40 us; - `BM_Matrix_eigenmat33_determinant/512` : 1.09 us vs 0.882 us ; - `BM_Matrix_eigenmatf_vecmult<24>/512` : 98.0 us vs 76.0 us. In a separate PR, we could do the same for gcc/clang (with `march=native` and fast_math as well). EDIT: `SOFA_ENABLE_SIMD` was originally `DSOFA_ENABLE_AVX` but change the name for the future PR for gcc/clang; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652:65,config,config,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652,1,['config'],['config']
Modifiability,"(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Ba",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4125,Plugin,Plugin,4125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,(applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp) (line 35): . Code:; #include <Geomagic/GeomagicVisualModel.h>; #include thread; #include chrono . #include chrono // <- twice; #include thread // <- twice,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2070:14,plugin,plugins,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2070,1,['plugin'],['plugins']
Modifiability,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2308:161,plugin,plugin,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308,1,['plugin'],['plugin']
Modifiability,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2099:421,plugin,plugins,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099,1,['plugin'],['plugins']
Modifiability,"(without the tests....). Main problem is the linear solvers using CSPARSE, which only handles double.; Actually, SparseCholesky was using buffers of float with pointers of double (which obviously causes a crash).; SparseLU is more convenient, it tried to use SReal, and make the compilation failing directly. There were at least two way to solve this problem:; - disable in the CMakeLists directly (if floating_point is float); - do not compile the instance templated on float (effectivement does not compile the two solvers). I chose the latter to keep them visible in the base code, but I totally agree with the former solution (but requires to access to the Cmake variable SOFA_FLOATING_POINT from Sofa.Config in the CMakefile of S.C.LS.Direct). An other thing is that preconditionner wants to use SparseCholesky as well so there is a conditional compilation happening here unfortunately. I dont know if it is possible to just use an other direct solver (probably). This was needed to test the performance tests for ; - #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2907:667,variab,variable,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2907,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,")] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3651,Plugin,Plugin,3651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"* Added getter for ContactsVector. Added a buffer variable that is overwritten before ContactsVector is cleared. Added functions to retrieve the number of contacts and their respective distance values in the buffer. * added a check before trying to access contact information. Added a function to also retrieve a list of collision point pairs. * Simplified code a bit, by moving the check up in the hierarchy. * Added a getter function to retrieve the element ids of the collision models. This can be used to lookup the ids in a MechanicalObject that are affected by a contact from a topology (get elements -> lookup MO ids in topology -> lookup points in MO). Also added some Docstrings. * Exchanged push_back with emplace_back and sped up code by reserving memory for vectors. * Replaced Vector3 from helper with Vector3 from defaulttypes. * Changed unsigned int to sofa::Size and placed curly brackets on new line. #1678 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1683:50,variab,variable,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1683,1,['variab'],['variable']
Modifiability,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1872:500,inherit,inheritence,500,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872,1,['inherit'],['inheritence']
Modifiability,"+ Added the submodules that enable the ROS Connector Plugin; - This includes the submodules for SoftRobot, STLLIB and SofaROSConnector from Fabian Aichele. + Added a bash script that automates the build with `CMakeLists.txt`. + Added a Dockerfile for automated debian builds. + Appended the path to the `FindROS` and `Log4CXX` modules to the root `CMakeLists.txt` file. + I will be leaving a customized docker build on my [docker repo](https://hub.docker.com/u/lakehanne/sofa). + Enough said :100: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122:53,Plugin,Plugin,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122,1,['Plugin'],['Plugin']
Modifiability,", they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternativ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:1485,variab,variables,1485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['variab'],['variables']
Modifiability,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4596:116,config,configure,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596,1,['config'],['configure']
Modifiability,- ADD function run-single-test-subtests executed if a test crashes to run each subtest and avoid results loss.; - EDIT function print-summary to count crashes as errors.; - EDIT XML report on crashed tests. Set duration to 1s to differentiate errors and failures. This should be done by Jenkins JUnit plugin... See https://issues.jenkins-ci.org/browse/JENKINS-4951; - FIX function print-summary on Windows (MinGW bash). See issue #149 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/200:301,plugin,plugin,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/200,1,['plugin'],['plugin']
Modifiability,- Add: script event listener; - Add: scene coupling Geomagic and SofaCarving ; - Update carving detection collision to use the existing pipeline instead of relaunching a narrowphase intersection computation. - Add method to remove topological element from PointModel collision.; - Fix sofaCarving tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/787:43,coupling,coupling,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/787,1,['coupling'],['coupling']
Modifiability,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2043:51,inherit,inherit,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043,1,['inherit'],['inherit']
Modifiability,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:208,plugin,plugins,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,3,['plugin'],['plugins']
Modifiability,- BeamAdapter has objects that inherit from ConstraintResolution. ; The constructor now impose to have at least one parameter. You can update your code easily by using the new constructor. ; - The example scene in SofaPython keyboardController does not seems to work anymore. ; - ... Please share what you have seen with others so we can fix everything quickly; . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/683:31,inherit,inherit,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/683,1,['inherit'],['inherit']
Modifiability,- Fix Attachconstraint for use with FreeMotionAnimationLoop - credit to @hugtalbot #940; - refactor of parameters to use `SOFA_UNUSED`; - fix dynamicConstraintFactor. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/949:91,refactor,refactor,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/949,1,['refactor'],['refactor']
Modifiability,"- Fix cmake when building on a system with Qt6 and Qt5 are detected in the same time (qt5 is prioritized); - Fix cmake var for QGLViewer (not supported with Qt6); - Fix for Qt6 where its windeployqt utility does not support the parameter ""--no-angle"" anymore (leads to a build error); - Fix for Qt6.2 while doing the cmake configuration (I suppose the latest Qt6.2 did some changes for its cmake packages), ; tested on Windows 11 and Qt6.2 (and VS2022). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2490:323,config,configuration,323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2490,1,['config'],['configuration']
Modifiability,"- Fix compilation and CMakeLists of the plugin before moving it out from SOFA repository. OpenCTM seems not to be supported anymore but some project are still using it. ; I will move that plugin into my github repo embedding directly OpenCTM lib. ; Unless you think it is of any use on sofa-framework repository. FYI: OpenCTM — the Open Compressed Triangle Mesh file format — is a file format, a software library and a tool set for compression of 3D triangle meshes. The geometry is compressed to a fraction of comparable file formats (3DS, STL, VRML, COLLADA...), and the format is easily accessible through a simple, portable API. http://openctm.sourceforge.net/. I was using it for WebGL as this format is slim and quick to load.; See for example here:; https://alteredqualia.com/three/examples/webgl_loader_ctm_materials.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359:40,plugin,plugin,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359,3,"['plugin', 'portab']","['plugin', 'portable']"
Modifiability,"- Fix link issues because of missing *_API; - Follow naming guidelines + depreciation of old variables; - OglGrid uses a cached list of vertices; - Use of `saveLastState` and `restoreLastState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115:93,variab,variables,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115,1,['variab'],['variables']
Modifiability,"- Fix warnings in code due to pluginization; - Clean required plugins warnings + required Data warnings; - Add 2 new scenes to test geomagic against a rigid and a deformable sphere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2846:30,plugin,pluginization,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2846,2,['plugin'],"['pluginization', 'plugins']"
Modifiability,"- Fixed the module name; - config.h is now config.h.in. A lot more work to do if we want to clean this plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4719:27,config,config,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4719,3,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"- Hiding local declaration ; - Parameter names do not match ; - Uninitialized class members ; - Lambda capture is never used ; - Local variable can be made const ; - Result of a postfix operator is discarded ; - add explicit specifier to make constructor non-converting ; - Member function can be made const ; - Variable can be moved to if-statement ; - Declaration and assignment can be joined ; - Return by const value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2559:135,variab,variable,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2559,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:199,config,config,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,1,['config'],['config']
Modifiability,- Mass conponent in the scenes using ParticleSink or ParticleSource need to handleTopologyChange as the number of dof change. - Also fix warning in scenes due to use of alias. - Add non regression test for 4 scene in this plugin. . Is this plugin build on CI... will see... Fix #1276. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1278:222,plugin,plugin,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1278,2,['plugin'],['plugin']
Modifiability,"- Match variable names in declaration and definition; - Make some variable const; - Indentation consistency; - Namespace concatenation and pragma once. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3283:8,variab,variable,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3283,2,['variab'],['variable']
Modifiability,"- Move both scenes as they are using several components from the plugin to illustrate SPH behavior and rendering.; - Add a simple rendering version of PointSplatModel scene in examples:. ![PointSplatModel_00000001](https://user-images.githubusercontent.com/21199245/162045768-58ee77d5-6127-4e6d-996f-8f4ffc5aba4c.png). ![PointSplatModel_00000002](https://user-images.githubusercontent.com/21199245/162045788-965a7e35-a306-4b52-82c8-e4ceeeb5a124.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2847:65,plugin,plugin,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2847,1,['plugin'],['plugin']
Modifiability,- Not sure this is the good way to do it with cmake findCGal but otherwise the dll are not linked (if not on env_path). - Add a quick scene test for cgal without image plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958:168,plugin,plugin,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958,1,['plugin'],['plugin']
Modifiability,"- Rename variable ```lastElementIndex``` into ```m_lastElementIndex```; - Add accessor; - Update this counter during add/remove operation. This counter is mandatory when multiple remove events are queued. ; - Init the counter during topologyData connection with its topology buffer. api is converging but this PR might have some side effects... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359:9,variab,variable,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359,1,['variab'],['variable']
Modifiability,"- Replace all VisualModel by OglModel; - Add `<RequiredPlugin name=""SofaOpenglVisual""/>` in all scene with an OglModel. To be merged after #1080 pluginisation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1081:145,plugin,pluginisation,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1081,1,['plugin'],['pluginisation']
Modifiability,- Some macro DLL missing and one not to be set in subsetContactMapper.; - Fix build of plugin SofadistanceGrid_test also: only build if SOFA_BUILD_TESTS and SofaTest_FOUND. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/966:87,plugin,plugin,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/966,1,['plugin'],['plugin']
Modifiability,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4429:154,plugin,plugins,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429,6,"['Plugin', 'plugin', 'refactor']","['PluginManager', 'plugin', 'plugins', 'refactored']"
Modifiability,"- The variables `SOFAGUI_HAVE_SOFAGUIQT` and `SOFAGUI_HAVE_SOFAHEADLESSRECORDER` were not defined whereas they are used in `SofaGui/SofaGuiConfig.cmake.in`.; - Modules in `SofaGui/SofaGuiConfig.cmake.in` have been updated. . I expect it will also fix the SofaPython3 GitHub actions (see for example https://github.com/sofa-framework/SofaPython3/runs/6592539251?check_suite_focus=true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3011:6,variab,variables,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3011,1,['variab'],['variables']
Modifiability,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1831:46,plugin,plugin,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831,1,['plugin'],['plugin']
Modifiability,- Using Sofa (maybe it is only runSofa) in release with some plugins.; - Switching to Debug; - launch runSofa_d. ```; [INFO] [runSofa] Loading automatically plugin list in C:/projects/sofa-build/bin/Debug/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaMiscCollision_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaCarving_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/Geomagic_d.dll; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/Geomagic.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaCarving.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaMiscCollision.dll): Le module sp▒cifi▒ est introuvable.; ```. But this doesn't seems to be blocking.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/713:61,plugin,plugins,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/713,14,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin', 'plugins']"
Modifiability,"- Various cleaning to remove SceneChecker warnings; - Fix some examples which should use `vertexMass ` and not `totalMass ` in `uniformMass ` as the number of particles evolve. ; - Fix SpatialGridPointModel scene which was timing out on CI. There was a problem of init with too many particles created compare to the collision and sphFF distances. ; - Update SPHParticleSink_obstacle.scn to wash the dragon; . **SpatialGridPointModel new behavior** ; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/305fd2a4-c15b-4315-8278-509c3fef6204"" width=""75%"">. And working collisions:; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/8a117063-4714-4e0c-8156-401dcba3fde0"" width=""75%"">. **New version of SPHParticleSink_obstacle**; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/184dad41-bb91-45f1-9d38-b913610aec78"" width=""75%"">. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4149:169,evolve,evolve,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4149,1,['evolve'],['evolve']
Modifiability,"- `BaseLinearElasticityFEMForceField::d_poissonRatio` is now a `VecReal` instead of a `Real`. ; - Introduction of 2 functions to compute Lamé coefficients; - Callbacks on the elasticity parameters to check their validity; - `BeamFEMForceField`, `TriangleFEMForceField`, `TriangularFEMForceField` and `TriangularFEMForceFieldOptim` now inherits from `BaseLinearElasticityFEMForceField`. They now support a vector of Young's modulus, compared to a single scalar. TODO: check that the default value changed in some force fields. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/141]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852:335,inherit,inherits,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852,1,['inherit'],['inherits']
Modifiability,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2178:213,variab,variables,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178,1,['variab'],['variables']
Modifiability,"- `TVecId` can be `constexpr`; - Enumerations are scoped (global variables are declared to keep compatibility with previous unscoped enumeration); - Indices are based on enumerations (no more hard coded indices); - Main states are defined as a global variable; - When main states are called, the global variable is read instead of the call of a static function (each time the static function is called, it instantiates a new variable instead of re-use the same). Main changes are in `VecId.h`. The rest is trivial changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5082:65,variab,variables,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5082,4,['variab'],"['variable', 'variables']"
Modifiability,"- `loadPlugin` and `loadPluginByPath` return an enum: more detailed than a boolean; - `readFromIniFile` returns the list of plugins that have been loaded; - The plugin manager GUI highlights which plugins have been loaded in the GUI initialization (not the autoload file). Black text is for plugins that have been loaded prior the GUI initialization, or after. Blue for plugins loaded during init. See screenshot; - More log messages. ![image](https://user-images.githubusercontent.com/10572752/177587029-83209468-2213-4601-8e30-5b39bd331a2e.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3109:124,plugin,plugins,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"- based on #4270 . Part of the task #4217 . This PR removes the inheritance on type::fixed_array and use std::array to store the elements. No performance change noticed on few scenes (caduceus, TorusFall, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new wa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4296:64,inherit,inheritance,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296,1,['inherit'],['inheritance']
Modifiability,"- factorize loops over elements; - add unit tests; - rename Data; - extend to tetrahedra and hexahedra. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4958:68,extend,extend,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4958,1,['extend'],['extend']
Modifiability,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1915:312,config,config,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915,1,['config'],['config']
Modifiability,"- redundant accessibility specifier; - constexpr variables; - make functions const; - type traits simplification; - explicit deleted functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2461:49,variab,variables,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2461,1,['variab'],['variables']
Modifiability,- use const & and better variable names ; - Test the edge's vertices as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1545:25,variab,variable,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1545,1,['variab'],['variable']
Modifiability,"-----------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membran",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:4786,plugin,plugins,4786,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['plugin'],['plugins']
Modifiability,"-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node """,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1544,Plugin,PluginManager,1544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE362EE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.dylib; 0x107a7e000 - 0x107bf1fff +libSofaGuiQt.20.12.01.dylib (0) <FDAD8B23-63EB-36B8-8FA5-4A4BE5727F8F> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiQt.20.12.01.dylib; 0x107ead000 - 0x107eccfff +libSofaGuiCommon.20.12.01.dylib (0) <79318879-EFF8-36D2-8F09-F3AB9C184736> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:2836,plugin,plugins,2836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"-isystem /usr/local/include -I../SofaKernel/SofaBase/../modules -I../SofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1655:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) volatile = delete;; ^; 1 error generated.; ```. This plugin should either be updated with the new boost API, or get rid of boost dependency.; I don't know this plugin enough... ______________________________________________________. Suggeste",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:1340,plugin,plugins,1340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,1,['plugin'],['plugins']
Modifiability,". Default properties for targets calling sofa_generate_package or sofa_install_targets; - include_directories:; - BUILD_INTERFACE: the directory given in INCLUDE_SOURCE_DIR or ""${CMAKE_CURRENT_SOURCE_DIR}/.."" (bad but necessary for old modules); - BUILD_INTERFACE: ""${CMAKE_BINARY_DIR}/include/${PROJECT_NAME}""; - INSTALL_INTERFACE: ""install"" (if relocatable plugin) or ""install/${PROJECT_NAME}""; - DEBUG_POSTFIX: ""_d""; - VERSION: Sofa_VERSION. ------------------------. Cleaning of config.h mechanism (consistency with all other SOFA modules); - deprecate headers not following the ""config.h"" naming convention; - sofa/core/core.h -> sofa/core/config.h; - sofa/defaulttype/defaulttype.h -> sofa/defaulttype/config.h; - sofa/helper/helper.h -> sofa/helper/config.h; - sofa/simulation/simulationcore.h -> sofa/simulation/config.h; - SofaSimulationCommon/common.h -> SofaSimulationCommon/config.h; - SofaSimulationGraph/graph.h -> SofaSimulationGraph/config.h; - SofaSimulationTree/tree.h -> SofaSimulationTree/config.h; - sofa/gui/SofaGUI.h -> sofa/gui/config.h; - sofa/gui/qt/SofaGuiQt.h -> sofa/gui/qt/config.h; - centralize config.h call chain on sofa/config.h; - sofa/helper/system/config.h is now useless; -> WARNING: maybe not a good idea, review needed here; - dispatch all SOFA_BUILD_* macros from packages' config.h towards modules' config.h (good for future modularizations). ------------------------. Moving SofaGui modules into ""modules"" directory + cleaning their source trees. ------------------------. Every package is now also a library. Work started by @fredroy in #1314, 3 packages remained; - SofaFramework; - SofaGui; - SofaSimulation. ------------------------. Cleaning source trees to eliminate some "".."" include directories; (files move but includes stay the same); - SofaExporter; - SofaGuiCommon; - SofaGuiQt; - SofaHeadlessRecorder; - SofaMiscCollision. ------------------------. Fix #1395 by removing ""relocatable"" attribute from SofaNonUniformFem, SofaValidation, SofaDenseS",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397:1125,config,config,1125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397,1,['config'],['config']
Modifiability,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1790:583,Flexible,Flexible,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790,2,['Flexible'],['Flexible']
Modifiability,"... before putting it out on an external repo. - Update file structure; - Refresh cmake; - fix dependencies; - fix bullet dep; - compilation; - full xml examples (seems) to work. I did not really clean the code itself, I dont know if this plugin is viable or not. Some files depends on removed plugins (LMConstraints and Compliant) so it has not been tested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3800:239,plugin,plugin,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3800,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"... by making optional SofaValidation (as its remaining components are deprecated). The ifdef is a bit ugly but some refactoring are needed to add futures features like this (instead of adding getXXX and getNbXXX for each type of component in the API). Some cleanups for the cmake file itself (more up-to-date Sofa cmake syntax) and the dependencies. small user experience question:; - Should Sofa.component be forcefully linked with it? so the user knows that all components are available from the start; - or should the actual dependencies be managed by the user afterwards in its application?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3091:117,refactor,refactoring,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3091,1,['refactor'],['refactoring']
Modifiability,"... with the current standard set of modules/plugins.; ## About; Since MSVC2019, VS proposes the choice to use the clang-cl toolchain (clang with msvc tools). Not possible to enable it with the latest(?) cmake-gui but possible to generate a solution with the commandline version: `cmake -G""Visual Studio 2019"" -T ClangCL ..`; ## This PR; - add necessary cmake config to allow compilation (and avoid 1e999 warnings); - fix few problems detected with clang (rightly so); - change the FixParticlePerformerFactory shenanigan to be cleaner. ## Results; It appears that clang is somewhat more clever than cl.exe and seems to produces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:45,plugin,plugins,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,.... with Qt and Win system's dlls. (for each config); Obviously those dlls should in the bin/ directory directly (OR find a way to manage different config for installation but not the point for now). A picture is worth a thousand words:; ![issue1](https://user-images.githubusercontent.com/11028016/134341229-d0223102-7493-475d-bfa6-3977170d7f0f.png). Then in RelWithDebInfo for example:; ![issue2](https://user-images.githubusercontent.com/11028016/134341269-6d662b30-9468-4dbc-8351-1b711276be3d.PNG),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2355:46,config,config,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2355,2,['config'],['config']
Modifiability,"..`; ## This PR; - add necessary cmake config to allow compilation (and avoid 1e999 warnings); - fix few problems detected with clang (rightly so); - change the FixParticlePerformerFactory shenanigan to be cleaner. ## Results; It appears that clang is somewhat more clever than cl.exe and seems to produces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:1307,plugin,plugins,1307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,1,['plugin'],['plugins']
Modifiability,".06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:1903,Plugin,Plugin,1903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Plugin'],['Plugin']
Modifiability,".06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2491,Plugin,Plugin,2491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Plugin'],['Plugin']
Modifiability,.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7640,Plugin,PluginManager,7640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,".Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceba",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4896,Plugin,Plugin,4896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,".Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img width=""686"" alt=""截屏2022-10-25 下午11 56 58"" src=""https://user-images.githubusercontent.com/56861752/197808646-732fe9ee-f7db-",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9453,Plugin,PluginManager,9453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,3,"['Plugin', 'config', 'plugin']","['PluginManager', 'config', 'plugins']"
Modifiability,".com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4372,plugin,plugins,4372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,4,"['config', 'plugin']","['configuration', 'plugins']"
Modifiability,.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:4728,plugin,plugins,4728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"//github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1417,plugin,plugin,1417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,3,"['Plugin', 'plugin', 'refactor']","['Pluginizing', 'plugin', 'refactoring']"
Modifiability,/ERROR] H� Win32 �(nager] Plugin loading failed (D:/SOFA/v23.06.00/bin/SofaPython3.dll): %1 �,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4913:26,Plugin,Plugin,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4913,2,['Plugin'],['Plugin']
Modifiability,/LMConstraintDirectSolver.cpp.o; 6259 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/PickHandlerCallBacks.cpp.o; 6060 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/TableDataWidget.cpp.o; 5918 ms: clangbuild//SofaGui/SofaGuiMain/CMakeFiles/SofaGuiMain.dir/src/sofa/gui/Main.cpp.o; 5803 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/moc_RealGUI.cpp.o; 5767 ms: clangbuild//applications/plugins/SofaTest/CMakeFiles/SofaTest.dir/Elasticity_test_deprecated.cpp.o; 5757 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/viewer/qgl/QtGLViewer.cpp.o; 5735 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/viewer/SofaViewer.cpp.o; 5640 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/panels/QDocBrowser.cpp.o; 5611 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/QSofaListView.cpp.o; 5585 ms: clangbuild//applications/plugins/SofaTest/CMakeFiles/SofaTest.dir/Elasticity_test.cpp.o; 5398 ms: clangbuild//SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/MechanicalObject.cpp.o; 5301 ms: clangbuild//SofaKernel/SofaCommon/SofaRigid/SofaRigid_test/CMakeFiles/SofaRigid_test.dir/RigidMapping_test.cpp.o; 5242 ms: clangbuild//SofaKernel/SofaBase/SofaEigen2Solver/CMakeFiles/SofaEigen2Solver.dir/SVDLinearSolver.cpp.o; 5236 ms: clangbuild//SofaKernel/SofaCommon/SofaRigid/SofaRigid_test/CMakeFiles/SofaRigid_test.dir/RigidRigidMapping_test.cpp.o; 5225 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/AddObject.cpp.o; 5214 ms: clangbuild//SofaMisc/SofaMiscMapping/SofaMiscMapping_test/CMakeFiles/SofaMiscMapping_test.dir/DistanceMapping_test.cpp.o; 5191 ms: clangbuild//SofaKernel/SofaFramework/SofaSimulationCore/CMakeFiles/SofaSimulationCore.dir/src/sofa/simulation/Node.cpp.o; 5162 ms: clangbuild//SofaMisc/SofaMiscMapping/CMakeFiles/SofaMiscMapping.dir/DistanceMapping.cpp.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:1644,plugin,plugins,1644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,"/SofaKernel/modules/SofaHelper/src/sofa/helper/system/PipeProcess.cpp line 202; Code:; for(int i=0;; ++i); {; GetExitCodeProcess(piProcInfo.hProcess,&exit); //while the process is running; if (exit != STILL_ACTIVE); break;. bool busy = false;; for (int i=0; i<2; ++i) // <- shadow variable; {",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2431:281,variab,variable,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2431,1,['variab'],['variable']
Modifiability,/Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5226,Plugin,PluginManager,5226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"/applications/plugins/Xitact/ITPDriver.h: line 109 vs ITPDriver.cpp: line 89. code:. , operation(true) // should be below; , contactReached(false)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2023:14,plugin,plugins,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2023,1,['plugin'],['plugins']
Modifiability,"/applications/plugins/image/ImageTypes.h: line 303 ; Uninitialized variable: ind . code :. unsigned int ind; // seems uninit; for(unsigned int i=0; i<tposition.size(); i++); {; tposition[i]=transform->toImage(Coord((Real)verts[ind][0],(Real)verts[ind] [1],(Real)verts[ind][2]));; }. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1133:14,plugin,plugins,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1133,2,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,"/applications/plugins/image/imagetoolbox/depth/depthimagetoolbox.h line 81; Code:; Layer():layer1(-1),layer2(-1),base(-1),typeOffset1(Distance),typeOffset2(Distance),offset1(0),offset2(0){} // <- nbslice not initialized",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2496:14,plugin,plugins,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2496,1,['plugin'],['plugins']
Modifiability,"/envs/sofarl/bin:/opt/anaconda3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/share/dotnet:~/.dotnet/tools; --- SOFA_ROOT ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; --- PYTHONPATH ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:4318,plugin,plugins,4318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,"/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8297,Plugin,PluginManager,8297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/bui,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5360,Plugin,PluginManager,5360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/l,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1862,Plugin,PluginManager,1862,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,/modules/SofaNonUniformFem/src/SofaNonUniformFem/SparseGridMultipleTopology.cpp line 260; shadow variable nameg also line 241,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1855:97,variab,variable,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1855,1,['variab'],['variable']
Modifiability,"/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: endlocal & call :cmErrorLevel %errorlevel% & ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2193,plugin,plugins,2193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['plugin'],['plugins']
Modifiability,"/sofa-master/applications/plugins/image/imagetoolbox/labelpointsbysection/labelpointsbysectionimagetoolbox.h line 111; Code:; std::ostringstream values;. values << d_axis.getValue();; file << values.str() << ""\n"";. for(int i=0;i<size;i++); {. std::ostringstream values; // <-- shadow variable",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2432:26,plugin,plugins,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2432,2,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,"/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8189,Plugin,PluginManager,8189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://gith,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:4541,Plugin,PluginManager,4541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['Plugin'],['PluginManager']
Modifiability,/usr/local/Cellar/qt/6.0.2/lib/QtXml.framework/Versions/A/QtXml; 0x111ac8000 - 0x111ed3fff +org.qt-project.QtCore (6.0 - 6.0.2) <626D1C7B-2DDB-300D-B5DD-5FB170D3C5A0> /usr/local/Cellar/qt/6.0.2/lib/QtCore.framework/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolve,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:9159,plugin,plugins,9159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"0 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); >>> . ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:2031,plugin,plugins,2031,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,"0); topoLines_cath.addObject('EdgeSetTopologyContainer', name='meshLinesCath'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'); topoLines_cath.addObject('MechanicalObject', template='Rigid3d', name='dofTopo'). CatheterMechanics = rootNode.addChild('CatheterModel'); CatheterMechanics.addObject('EulerImplicitSolver', rayleighStiffness=0.2, rayleighMass=0.1, printLog='false'); CatheterMechanics.addObject('BTDLinearSolver',verification=False, subpartSolve=False, verbose=False); CatheterMechanics.addObject('RegularGridTopology', name='MeshLines',nx=60, ny=1, nz=1,; xmax=1.0, xmin=0.0, ymin=0, ymax=0, zmax=1, zmin=1,; p0=[0,0,0]); CatheterMechanics.addObject('MechanicalObject', showIndices=False, name='DOFs', template='Rigid3d', ry=-90); CatheterMechanics.addObject('WireBeamInterpolation', name='InterpolCatheter', WireRestShape='@../EdgeTopology/catheterRestShape',radius='1',printLog='0'); CatheterMechanics.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',massDensity=0.00000102, interpolation='@InterpolCatheter'); CatheterMechanics.addObject('InterventionalRadiologyController', name='DeployController', template='Rigid3d', instruments='InterpolCatheter',; startingPos=[0, 0, 0, 0, 0, 0, 1], xtip=[0, 0, 0], printLog=True,; rotationInstrument=[0, 0, 0], step=5., speed=5.,; listening=True, controlledInstrument=0); CatheterMechanics.addObject('LinearSolverConstraintCorrection',wire_optimization='true', printLog=False); CatheterMechanics.addObject('FixedConstraint', indices=0, name='FixedConstraint'); CatheterMechanics.addObject('RestShapeSpringsForceField', points='@DeployController.indexFirstNode', angularStiffness=1e8, stiffness=1e8). VisuCatheter = rootNode.addChild('VisuCatheter'); VisuCatheter.activated = True; VisuCatheter.addObject('MechanicalObject', name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuCatheter.addObject('QuadSetTopologyModifier', name='Modifier'); Vi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:2392,Adapt,AdaptiveBeamForceFieldAndMass,2392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,0862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB15DC68F1> /Applications/runSofa.app/Contents/Frameworks/QtWebEngine.framework/Versions/5/QtWebEngine; 0x1093ba000 - 0x1093d9fff +org.qt-project.QtWebEngineWidgets (5.12 - 5.12.6) <C415A86C-6293-326D-AE05-0FD9087D5FD9> /Applications/runSofa.app/Contents/Frameworks/QtWebEngineWidgets.framework/Versions/5/QtWebEngineWidgets; 0x109404000 - 0x10f696fff +org.qt-project.Qt.QtWebEngineCore (5.12 - 5.12.6) <0745D0B0-9652-3158-9C7F-3147F394BCF5> /Applications/runSofa.app/Contents/Frameworks/QtWebEngineCore.framework/Versions/5/QtWebEngineCore; 0x10fcbe000 - 0x10fcd3fff +org.qt-project.QtWebChannel (5.12 - 5.12.6) <199AE934-6E1A-3584-BA64-FA578128D36C> /Appli,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:5383,plugin,plugins,5383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"1-Defaulttype is supposed to depend on Helper, and Helper on nobody (except eventual third-party library like Eigen); But things in Helper includes stuff in Defaulttype (typically Vec, Mat and Quat, this one even worse with Quat/Quater brainf*ck). 2- The contents of those two Kernel modules are confusing.; It seems that Defaulttype was supposed to only contain type for templated element in the subsequent Sofa modules; e.g for MechanicalObject. Those types are (not extensive): VecXTypes (and their float/double template), RigidTypes, SolidTypes.; One could theoretically not use Defauttype and creates its own ""types"". Actually this is what Flexible does. So the goal would be to:; - leave the VecTypes, etc into Defaulttype,; - put the other ""things"" into Helper; - Reorganize Helper to be less messy as well. The issue/question is how to re-organize Helper (which is a mess by itself). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1521:645,Flexible,Flexible,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1521,1,['Flexible'],['Flexible']
Modifiability,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:507,config,configuration,507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,2,['config'],['configuration']
Modifiability,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1913:147,variab,variable,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,10b8d000 - 0x110bf4fff +org.qt-project.QtOpenGL (6.0 - 6.0.2) <6841ACBD-A2D6-3D63-9C25-8E656776A088> /usr/local/Cellar/qt/6.0.2/lib/QtOpenGL.framework/Versions/A/QtOpenGL; 0x110c32000 - 0x1110d1fff +org.qt-project.QtWidgets (6.0 - 6.0.2) <3D939EAB-26B6-36B6-AB17-F4D0BF952EC0> /usr/local/Cellar/qt/6.0.2/lib/QtWidgets.framework/Versions/A/QtWidgets; 0x11130c000 - 0x1118a7fff +org.qt-project.QtGui (6.0 - 6.0.2) <E8A9B9CD-A135-383A-B29E-51DD6C04AB18> /usr/local/Cellar/qt/6.0.2/lib/QtGui.framework/Versions/A/QtGui; 0x111a91000 - 0x111aacfff +org.qt-project.QtXml (6.0 - 6.0.2) <626DB273-B152-3E4E-B317-A513D81BD92E> /usr/local/Cellar/qt/6.0.2/lib/QtXml.framework/Versions/A/QtXml; 0x111ac8000 - 0x111ed3fff +org.qt-project.QtCore (6.0 - 6.0.2) <626D1C7B-2DDB-300D-B5DD-5FB170D3C5A0> /usr/local/Cellar/qt/6.0.2/lib/QtCore.framework/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:8553,plugin,plugins,8553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,17 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLForm,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1446,Plugin,PluginManager,1446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,2 small fixes to allow usage of SofaPython by a third-party software. ; 1. Tests all known data path from SOFA to look for /etc/sofa/python.d (not only SOFA_ROOT or current exec dir); 2. Give a more specific name to the static bool at plugin init. It was messing up with another variable. . + Clean some example scenes warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1466:235,plugin,plugin,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1466,2,"['plugin', 'variab']","['plugin', 'variable']"
Modifiability,"2); - [x] TetrahedronFEMForceField (#2777); - [x] TetrahedronHyperelasticityFEMForceField (#2777); - [x] TorsionForceField (#4115); - [x] TriangleFEMForceField (#2777); - [x] TriangularFEMForceField (#3991); - [x] TriangularFEMForceFieldOptim (#4105); - [ ] ParticlesRepulsionForceField; - [ ] TrianglePressureForceField; - [ ] SPHFluidForceField; - [ ] QuadularBendingSprings; - [ ] TriangularAnisotropicFEMForceField; - [ ] TriangularBendingSprings; - [ ] TriangularBiquadraticSpringsForceField; - [ ] TriangularQuadraticSpringsForceField; - [ ] TriangularTensorMassForceField; - [ ] UniformVelocityDampingForceField. # Interaction Force Fields. - [x] MechanicalMatrixMapper (#2777); - [x] MeshSpringForceField (nothing to do as it inherits from StiffSpringForceField); - [x] PenalityContactForceField (#3974); - [x] QuadBendingSprings (nothing to do as it inherits from StiffSpringForceField); - [x] SpringForceField (#3970); - [x] StiffSpringForceField (#2777); - [x] TriangleBendingSprings (nothing to do as it inherits from StiffSpringForceField); - [ ] PolynomialSpringsForceField (#4301); - [ ] FrameSpringForceField \*\*; - [ ] GearSpringForceField \*\*; - [ ] InteractionEllipsoidForceField \*\*; - [ ] JointSpringForceField \*\*; - [ ] RegularGridSpringForceField \*\*; - [ ] RepulsiveSpringForceField \*\*; - [ ] VectorSpringForceField \*\*. # Masses. The new function is `buildMassMatrix` (replaces `addMToMatrix`). But since masses are also force fields, they must also implement `buildStiffnessMatrix` and `buildDampingMatrix`. - [x] DiagonalMass (#2777); - [x] MeshMatrixMass (#2777); - [x] UniformMass (#2777); - [ ] HexahedralFEMForceFieldAndMass; - [ ] HexahedronCompositeFEMForceFieldAndMass; - [ ] HexahedronFEMForceFieldAndMass; - [ ] NonUniformHexahedralFEMForceFieldAndMass; - [ ] NonUniformHexahedronFEMForceFieldAndMass. # Projective constraints. The new function is `applyConstraint(ZeroDirichletCondition*)`; - [x] FixedConstraint (#2777); - [x] FixedPlaneConstraint (#392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3967:2131,inherit,inherits,2131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3967,3,['inherit'],['inherits']
Modifiability,"2- ADD tests; 3- CLEAN member variables name (BREAKING); 4- ADD an example of orientedBox dataField use; 5- Changed a bit the implementation from PlaneROI, for computation optimization purpose. Question:; I would like to reimplement PlaneROI so that it does what we expect from its name, and also print a ""deprecated message"" for those who still use PlaneROI as an OrientedBoxROI. Those users will be detected if they use a deprecated data field. What do you think?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108:30,variab,variables,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108,1,['variab'],['variables']
Modifiability,2.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB15DC68F1> /Applications/runSofa.app/Contents/Frameworks/QtWebEngine.framework/Versions/5/QtWebEngine; 0x1093ba000 - 0x1093d9fff +org.qt-project.QtWebEngineWidgets (5.12 - 5.12.6) <C415A86C-6293-326D-AE05-0FD9087D5FD9> /Applications/runSofa.app/Contents/Frameworks/QtWebEngineWidgets.framework/Versions/5/QtWebEngineWidgets; 0x109404000 - 0x10f696fff +org.qt-project.Qt.QtWebEngineCore (5.12 - 5.12.6) <0745D0B0-9652-3158-9C7F-3147F394BCF5>,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:5169,plugin,plugins,5169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"2nd big guy. #1527; based on ; - ~~#2612 ~~; - #2717 (for a moved file in core). Deprecates **SofaMiscMapping**; Partially deprecates **SofaBaseMechanics**, **SofaRigid**, **SofaGeneralRigid**. This module gathers all ""mechanical"" mappings (inhering BaseMapping) and __not__ topological mapping.; ~~I am a bit concerned by the size of this module but I cannot really find any good sub-modules to sort these components into ?~~. Following a discussion with @ChristianDuriez @Younesssss @alxbilger , Mappings are organized between:; - NonLinear: mappings implementing getK() and applyDJT(); - Linear: the rest of mappings; - MappedMatrix: components which are not mapping? but helps to map matrices (stiffness and stuff) ; -> Ad-hoc module which is only used to patch up matrices in SOFA, will disappear once matrix assembly will be pushed. ~~TODO (in an other PR), set Articulated-related things into a dedicated plugin.~~ Done in #2684 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2635:912,plugin,plugin,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2635,1,['plugin'],['plugin']
Modifiability,"3 different components for linear elasticity on tetrahedra:. - `FastTetrahedralCorotationalForceField`; - `TetrahedralCorotationalFEMForceField`; - `TetrahedronFEMForceField`. The 3 components have similarities (even duplicated code), but don't share anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all plat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:275,refactor,refactoring,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,4,"['inherit', 'refactor']","['inherit', 'refactored', 'refactoring']"
Modifiability,"3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9373,Plugin,PluginManager,9373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it bui",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1289,Plugin,PluginManager,1289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,3,"['Plugin', 'config']","['Plugin', 'PluginManager', 'configuration']"
Modifiability,"463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h gtest-port.h algorithm (299 ms); mouseGrabber.h config.h qglobal.h algorithm (299 ms); VRender.h config.h qglobal.h algorithm (296 ms); cmake_pch.hxx Base.h BoundingBox.h Vec.h fixed_array.h algorithm (271 ms); ... 19494 ms: sofa/applications/plugins/SofaTest/../SofaTest/Mapping_test.h (included 6 times, avg 3249 ms), included via:; DistanceMapping_test.cpp.o (3500 ms); QuaternionIntegration_test.cpp.o (3407 ms); RigidRigidMapping_test.cpp.o (3280 ms); SquareMapping_test.cpp.o (3239 ms); RigidMapping_test.cpp.o (3089 ms); SquareDistanceMapping_test.cpp.o (2976 ms); ... 19187 ms: sofa/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/MechanicalVisitor.h (included 100 times, avg 191 ms), included via:; initSofaDenseSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (440 ms); StaticSolver.cpp.o StaticSolver.h MechanicalMatrixVisitor.h (427 ms); NewMatCGLinearSolver.cpp.o CGLinearSolver.inl CGLinearSolver.h MatrixLinearSolver.h (404 ms); DefaultMultiMatrixAccessor.cpp.o DefaultMultiMatrixAccessor.h (388 ms); PrecomputedLinearSolver.cpp.o PrecomputedLinearSolve",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:36416,config,config,36416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['config'],['config']
Modifiability,6-8CCE-4C2D7C35D80A> /usr/lib/libChineseTokenizer.dylib; 0x7fff2afe3000 - 0x7fff2b0a1fff libvMisc.dylib (760.40.6) <9D11FCFC-6C30-32B6-864B-9CC3ED7D1143> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib; 0x7fff2b0a2000 - 0x7fff2b13afff libate.dylib (3.0.4) <42707DFB-86A4-3F56-A5AF-E6DAA7E49DC7> /usr/lib/libate.dylib; 0x7fff2b13b000 - 0x7fff2b142fff libIOReport.dylib (64) <8DEEA01D-B715-340A-900E-B448AB22720E> /usr/lib/libIOReport.dylib; 0x7fff2b143000 - 0x7fff2b171fff com.apple.CrashReporterSupport (10.13 - 15047.1) <EA306EDB-2A02-3FB6-8812-F5EAA337AEE6> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport; 0x7fff2b189000 - 0x7fff2b209fff com.apple.CVNLP (1.0 - 119) <01312979-649E-3869-801B-C4CF70DA1236> /System/Library/PrivateFrameworks/CVNLP.framework/Versions/A/CVNLP; 0x7fff2b228000 - 0x7fff2b25dfff com.apple.pluginkit.framework (1.0 - 1) <343BA2F7-C204-3C30-BAC1-C85CC0A8DCFF> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit; 0x7fff2b25e000 - 0x7fff2b265fff libMatch.1.dylib (38) <DE8B7844-BFB2-3E3E-9FD0-1C9AD1DC1736> /usr/lib/libMatch.1.dylib; 0x7fff2b266000 - 0x7fff2b2f1fff libCoreStorage.dylib (554) <044E6815-6340-31D5-BEE9-760C354E92A3> /usr/lib/libCoreStorage.dylib; 0x7fff2b2f2000 - 0x7fff2b345fff com.apple.AppleVAFramework (6.1.3 - 6.1.3) <E3BE877B-1C78-3ABF-8C41-66FE9B6971C7> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA; 0x7fff2b346000 - 0x7fff2b35ffff libexpat.1.dylib (26) <1D978F91-674E-3A44-8A93-773C7E3E513C> /usr/lib/libexpat.1.dylib; 0x7fff2b360000 - 0x7fff2b369fff libheimdal-asn1.dylib (597.80.1) <8F6CD867-FB45-375D-82C1-E0AE79558C8C> /usr/lib/libheimdal-asn1.dylib; 0x7fff2b36a000 - 0x7fff2b37efff com.apple.IconFoundation (479.3 - 479.3) <3563C4B4-ABF6-3DE0-8381-D3667DFE2B80> /System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation; 0x7fff2b37f000 - 0x7fff2b3ecfff co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:48506,PlugIn,PlugInKit,48506,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['PlugIn'],['PlugInKit']
Modifiability,80f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:4123,plugin,plugins,4123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"99% of the modules/plugins implements getModuleComponentList() with; ```; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = core::ObjectFactory::getInstance()->listClassesFromTarget(MODULE_NAME);; return classes.c_str();; }; ```; And the rest either omitted to implement it, or just forgot to update the list. (e.g MultiThreading). IMO getModuleComponentList() does not have really a meaning anymore and one should just use `ObjectFactory::listClassesFromTarget()` directly.; AFAIK, the only piece of code in the SOFA codebase using this entrypoint is Gui.Qt widget, displaying the component list for each loaded plugin. This PR:; - removes all the entrypoints from Sofa.Component.* (+MultiThreading); - deprecates getModuleComponentList() calls; - Sofa.Gui.Qt: calls directly listClassesFromTarget(), but still tests if getModuleComponentList() needs to be called; - warns at runtime if one plugin do implement getModuleComponentList(); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795:19,plugin,plugins,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795,4,['plugin'],"['plugin', 'plugins']"
Modifiability,: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/so,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5736,Plugin,PluginManager,5736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,": D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWith",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6890,Plugin,PluginManager,6890,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,": [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 230, in _init_sim; self.scene_creation_result = getattr(self._scene_description_module, ""createScene"")(self._sofa_root_node, **self.create_scene_kwargs); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/scene_description.py"", line 98, in createScene; add_scene_header(; File ""/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5778,Config,ConfigurationSetting,5778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Config'],['ConfigurationSetting']
Modifiability,:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topolo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1539,Plugin,PluginManager,1539,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/b,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5905,Plugin,PluginManager,5905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,":; def __init__(self, MO):; super().__init__(); self.MO = MO. def onAnimateBeginEvent(self, _):; print(""\n\nonAnimateBeginEvent""); random_disp = np.random.normal(0, 1e-2, self.MO.position.value.shape); self.MO.position.value = self.MO.rest_position.value + random_disp; print(f""{random_disp[0]=}""); print(f""{self.MO.position.value[0]=}""). def onAnimateEndEvent(self, _):; print(""onAnimateEndEvent""); print(f""{self.MO.position.value[0]=}""). def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BugPosition']); root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); root.addObject(Controller(root.MO)); ```. **Steps to reproduce**; I've put everything needed to reproduce the issue here https://github.com/jnbrunet/BugPosition. Hence, the following steps can be taken (the SOFA installation path must be changed, and SofaPython3 plugin must be installed alongside SOFA):; ```bash; export SOFA_ROOT=/opt/sofa; export PYTHONPATH=$PYTHONPATH:$SOFA_ROOT/plugins/SofaPython3/lib/python3/site-packages; ```; Then, compile and launch the scene; ```bash; git clone git@github.com:jnbrunet/BugPosition.git; cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake -S BugPosition -B BugPosition/build -DCMAKE_BUILD_TYPE=Release; cmake --build BugPosition/build; python3 BugPosition/scene.py; ```; which should produce the erroneous results (random displacement isn't taken into account).; ```; (...); onAnimateBeginEvent; random_disp[0]=array([-0.01092411, -0.00742505, -0.01442109]); self.MO.position.value[0]=array([1., 0., 0.]); onAnimateEndEvent; self.MO.position.value[0]=array([1., 0., 0.]); ```. **Expected behavior**; The correct behaviour can be obtained using the GUI. In the previous example, simply adding the `gui` parameter to the scene will do the trick:. ```commandline; python3 BugPosition/scene.py gui; (...); onAnimateBeginEvent; random_disp[0]=array([-0.00746889, -0.01065234, 0.00446683]); self.MO",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:2661,plugin,plugin,2661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,2,['plugin'],"['plugin', 'plugins']"
Modifiability,":warning: depends on #1488. This refactoring guarantees size consistency between `position / forces / velocity / external_forces` buffers when resized. Since those fields are coupled, changing the size of one should change the size of the others. except it's not the case.; plus, there's a ""size"" datafield that is supposed to determine the size of the buffers. Thus it is now impossible to edit the size of those buffers directly. any insertion / removal of a line in the buffers must be preceded with a change of size, which in turn will redimension the buffers. Also: When creating the scene (before executing the simulation) init_size and init_position should be used.; The idea behind that last change is that we should have separate datafields for inputs and outputs, instead of mixing both concepts together. :warning: **THIS IS BREAKING** because there are probably tons of codes out there that resize position manually and then call` init / reinit / bwdInit` on MOs, hoping for them to update the component (I should know I've been doing it for 6years :D). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489:33,refactor,refactoring,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489,1,['refactor'],['refactoring']
Modifiability,"; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:2777,Plugin,PluginManager,2777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['Plugin'],['PluginManager']
Modifiability,"; }; ```. To avoid breaking (a lot of) code, a compatibility layer has been implemented, so the existing code still works:; ```; #include <sofa/helper/gl/Texture.h; ...; sofa::helper::gl::Texture = ....;; ```; and will either:; - **create an error** if you did not link against Sofa.GL; - **generate a deprecation warning** if you did link but still using old paths.; So for 99.999% of code, all you have to do is to link against Sofa.GL (or even nothing if you code is already linking against modules linking now against Sofa.GL like SofaOpenGlVisual); ; ## Real breaking code; ONE function has been removed from core::visual::VisualParam :; helper::gl::Framebuffer getFramebuffer(); which was used to get the current bound framebuffer in OpenGL (getting a Sofa utility class Framebuffer).; Two reasons why it has been removed:; - nobody uses it in all the repository; - one can just use a real OpenGL function to get the bound framebuffer, with ; ```; glGetIntegerv(GL_FRAMEBUFFER_BINDING, &result);; ```; for example. # Notes; The compilation of Sofa.GL is itself enabled with the CMake variable SOFA_NO_OPENGL (weird name but I wanted to keep the same ""reasoning"" for now); Use of SOFA_NO_OPENGL macro in the code has been removed from the Sofa codebase only, not the plugins (in a future PR). 😅. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649:3614,variab,variable,3614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649,2,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,"<!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:1560,plugin,plugins,1560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,1,['plugin'],['plugins']
Modifiability,"<$> (29976 times, avg 0 ms); 19938 ms: sofa::core::objectmodel::TData<$>::read (5854 times, avg 3 ms); 19900 ms: std::__cxx11::basic_string<$>::basic_string (5840 times, avg 3 ms); 19611 ms: std::is_nothrow_copy_constructible<$> (18814 times, avg 1 ms). **** Functions that took longest to compile:; 2701 ms: __cxx_global_var_init.8 (sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/ComponentChange.cpp); 2442 ms: sofa::component::topology::SubsetTopologicalMapping::updateTopologicalMappingTopDown() (sofa/modules/SofaTopologyMapping/SubsetTopologicalMapping.cpp); 2423 ms: sofa::component::topology::TriangleSetTopologyAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul,... (sofa/SofaKernel/modules/SofaBaseTopology/TriangleSetTopologyAlgorithms.cpp); 1839 ms: _GLOBAL__sub_I_TransformEngine_test.cpp (sofa/modules/SofaGeneralEngine/SofaGeneralEngine_test/TransformEngine_test.cpp); 1813 ms: cimg_library::CImg<unsigned char>::get_resize(int, int, int, int, int, unsigned int, float, float, float, float) const (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1797 ms: _GLOBAL__sub_I_PlaneForceField_test.cpp (sofa/modules/SofaBoundaryCondition/SofaBoundaryCondition_test/PlaneForceField_test.cpp); 1679 ms: sofa::component::engine::GenerateSphere<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa::d... (sofa/modules/SofaGeneralEngine/GenerateSphere.cpp); 1584 ms: sofa::component::engine::GenerateCylinder<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa:... (sofa/modules/SofaGeneralEngine/GenerateCylinder.cpp); 1373 ms: sofa::component::misc::MeshTetraStuffing::init() (sofa/modules/SofaMiscExtra/MeshTetraStuffing.cpp); 1282 ms: cimg_library::CImgList<unsigned char>::_load_cimg(_IO_FILE*, char const*) (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1222 ms: cimg_library::CImg<unsigned char>::_load_pandore(_IO_FILE*, char const*) (sofa/applications/plugins/CImgPlugin/src/C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:15880,plugin,plugins,15880,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,"=5., speed=5.,; listening=True, controlledInstrument=0); CatheterMechanics.addObject('LinearSolverConstraintCorrection',wire_optimization='true', printLog=False); CatheterMechanics.addObject('FixedConstraint', indices=0, name='FixedConstraint'); CatheterMechanics.addObject('RestShapeSpringsForceField', points='@DeployController.indexFirstNode', angularStiffness=1e8, stiffness=1e8). VisuCatheter = rootNode.addChild('VisuCatheter'); VisuCatheter.activated = True; VisuCatheter.addObject('MechanicalObject', name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer', name='ContainerGuide'); VisuCatheter.addObject('QuadSetTopologyModifier', name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping', radius='1', listening='true',; input='@../../topoLines_guide/meshLinesGuide',; nbPointsOnEachCircle='10', flipNormals='true', output='@ContainerGuide'); VisuCatheter.addObject('AdaptiveBeamMapping', interpolation='@../InterpolGuide',; name='visuMapGuide', output='@Quads', isMechanical=False,; input='@../DOFs', useCurvAbs=True, printLog=False). # Ogl model; VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.addObject('OglModel', color=[0.2, 0.2, 0.8], quads='@../ContainerCatheter.quads',; material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',; name='Visual'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). CathterCollis = CathterMechanics.addChild('CollisionModel'); CathterCollis.activated = True; CathterCollis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); CathterCollis.addObject('EdgeSetTopologyModifier', name='colliseEdgeModifier'); CathterCollis.addObject('MechanicalObject', name='CollisionDOFs'); CathterCollis.addObject('MultiAdaptiveBeamMapping',controller='../DeployController', useCurvAbs=True, printLog=False, name='collisMap'); CathterCo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:3739,Adapt,AdaptiveBeamMapping,3739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,">; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:31893,Plugin,PluginManager,31893,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"A continuation of ; - #4812 . but much bigger and less trivial. This PR removes SOFA_ENABLE_LEGACY_HEADERS, implying:; - no more collections/deprecated projects which was to ensure the continuity of Sofa.NG; - some renaming in MultiThreading and SofaCUDA. The deletion of the layer compat between old and new modules was acted for 23.06 so not a big deal by itself (only 1.5 year late🤷‍♂️ ).; But some olden modules still have some code/components:; - SofaGraphComponent: with a `Gravity` component; - SofaMiscCollision: with `DefaultCollisionGroupManager, SolverMerger` components and `RayTriangleVisitor` visitor; - SleepController: with a `SleepController`component; - SofaValidation: with various measuring stuff components.; There is also SofaExporter which had some forgotten(?) examples of components which were moved. So the examples have been just moved as well. So what should be done for these components?; IMO (not done yet); - `Gravity` seems useless/not usable.; - `SleepController` might maybe probably be interesting; - `DefaultCollisionGroupManager, SolverMerger` were bogus and RayTriangleVisitor not used at all; - SofaValidation may be totally transformed as a plugin (as in `applications/plugins`). To be discussed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4813:1181,plugin,plugin,1181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4813,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"A doxygen comment referred a variable name that does not exist. It was probably renamed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2467:29,variab,variable,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2467,1,['variab'],['variable']
Modifiability,"A few Config.cmake.in need more find_package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2891:6,Config,Config,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2891,1,['Config'],['Config']
Modifiability,"A first round of renaming from 'bloc' to 'block'. Issue https://github.com/sofa-framework/sofa/issues/2329. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/2]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404:157,Flexible,Flexible,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404,1,['Flexible'],['Flexible']
Modifiability,"A long PR but it is actually divided in 3 parts. A link is provided for each part pointing to a comparison with the previous part. # 1. Introduction of the plugin. A new plugin is introduced to welcome new components. It is enabled by default.; https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofamatrix?expand=1. The plugin may deserve a better name. # 2. Move CImgPlugin features on matrices. I introduced features related to matrices in CImgPlugin in a previous PR. It did not make sense. It is preferable to have them in a higher-level plugin, so I moved them in SofaMatrix.; https://github.com/alxbilger/sofa/compare/sofamatrix...sofamatrix_cimg. # 3. Introduction of a component to visualize the matrix. A component is introduced. It gets the matrix from the linear system and convert it to an bitmap to visualize it directly in the GUI.; https://github.com/alxbilger/sofa/compare/sofamatrix_cimg...sofamatrix_gui. ![image](https://user-images.githubusercontent.com/10572752/144421772-5676f6e8-12af-4468-8bec-24ea7856b00f.png). # To do:. - [x] Expand the bitmap in height; - [ ] Update the bitmap when the image changes during the simulation; - [ ] Do we move `GlobalSystemMatrixExporter` into SofaMatrix?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2517:156,plugin,plugin,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2517,4,['plugin'],['plugin']
Modifiability,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2280:469,adapt,adapted,469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280,1,['adapt'],['adapted']
Modifiability,"A parallel equivalent of `CGLinearSolver` on assembled matrices. Benchmark on the introduced example `applications/plugins/MultiThreading/examples/ParallelCGLinearSolver.scn`:. - CG is not multithreaded. ```; [INFO] [BatchGUI] 1000 iterations done in 43.1158 s ( 23.1933 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 7.28 1 30.20 67.39 35.64 5.53 35.64 82.80 ....MBKSolve; ```. - CG is multithreaded. ```; [INFO] [BatchGUI] 1000 iterations done in 32.1941 s ( 31.0615 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 19.30 1 10.88 138.69 12.71 6.27 12.71 39.57 ....MBKSolve; ```. The counter of interest is `MBKSolve`. We notice that it is about 2.8x faster on average. ![peek](https://github.com/sofa-framework/sofa/assets/10572752/6dd55e76-16b8-4961-a9aa-77111793048d). [ci-depends-on https://github.com/sofa-framework/Regression/pull/50]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138:115,plugin,plugins,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138,1,['plugin'],['plugins']
Modifiability,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2112:39,plugin,plugin,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112,1,['plugin'],['plugin']
Modifiability,"A user can chose in the scene to update the bounding box or not. It is no longer a compile-time selection. In InextensiblePendulum.scn, the second pendulum explodes. An update of the bbox would adapt to the exploded object. The bbox is so large that the first pendulum is no longer visible. It may lead the user to think that the scene is not working properly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3080:194,adapt,adapt,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3080,1,['adapt'],['adapt']
Modifiability,"ADD : use a string instead of an enum to specify an integration method as it easier for user to add new ones. This slightly changes the API of numerical integration.; ADD : add the possibility to add a function to create on the fly the required integration points (when an analytical formula is available).; UPDATE : modified the name of the integration methods for edges, triangles, tetrahedra and hexahedra.; UPDATE : use of numerical integration in Flexible; FIX : bug corrected when using of BezierShapeFunction with plugin HighOrderMeshes . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936:452,Flexible,Flexible,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936,2,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,"ADD Hadrien's collisionAlgorithm and ContraintGeometry to external plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3890:67,plugin,plugins,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3890,1,['plugin'],['plugins']
Modifiability,"API used only by the [Compliant plugin](https://github.com/sofa-framework/Compliant/), which is deprecated and archived. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4776:32,plugin,plugin,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4776,1,['plugin'],['plugin']
Modifiability,"ATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. --- sys.version ---; 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ]; --- PATH ---; /usr/local/opt/python@3.8/bin/:/opt/anaconda3/envs/sofarl/bin:/opt/anaconda3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/share/dotnet:~/.dotnet/tools; --- SOFA_ROOT ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; --- PYTHONPATH ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:3975,plugin,plugins,3975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,Add Caribou as an external fetchable plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2484:37,plugin,plugin,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2484,1,['plugin'],['plugin']
Modifiability,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4601:43,config,configuration,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601,1,['config'],['configuration']
Modifiability,"Add a SOFAPYTHON_PYTHON3 cmake option to SofaPython plugin, to use Python 3 C-API",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/210:52,plugin,plugin,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/210,1,['plugin'],['plugin']
Modifiability,"Add a `FixedWeakConstraint`. It is really a simplified version of `RestShapeSpringForcefield` that only fixes points with respect to their rest_shape given one single value of stiffness. I didn't use an inheritance because `RestShapeSpringForcefield` does too much and the two set of features aren't really compatible. Keep it simple... . This completes the holy trinity of fixed constraints, now we will have Weak, Projective and Langrangian fixed constraints. It unifies the mechanism. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4750:203,inherit,inheritance,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4750,1,['inherit'],['inheritance']
Modifiability,"Add a new update mechanism for components which need to update / recompute internal variables when one or several data are modified. A visitor has been created for this, called at each begin of time step to refresh if necessary the internal variables. All feedback welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131:84,variab,variables,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131,2,['variab'],['variables']
Modifiability,Add a variable to count the number of primitve tests performed during the narrow phase of the collision detection.; This variable is only for statistics purpose. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/930:6,variab,variable,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/930,2,['variab'],['variable']
Modifiability,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4638:349,inherit,inheritance,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638,2,"['inherit', 'refactor']","['inheritance', 'refactoring']"
Modifiability,"Added fix to add ""_d"" to plugin library name on MSVC on debug mode",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/15:25,plugin,plugin,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/15,1,['plugin'],['plugin']
Modifiability,Additional parameters of the DefaultContactManager can be added as a string in the responseParams attribute. This can be refactored so that dynamic Data are created for those additional parameters.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3883:121,refactor,refactored,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3883,1,['refactor'],['refactored']
Modifiability,"Adds an example to the plugin ArticulatedSystemPlugin. . ![image](https://user-images.githubusercontent.com/12150715/159580224-bb724ee4-f469-4697-b373-e6e22c0b4a86.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804:23,plugin,plugin,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804,1,['plugin'],['plugin']
Modifiability,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2124:735,variab,variables,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124,1,['variab'],['variables']
Modifiability,"After #475 merge, we should decide when we want the old behavior (all options in `config.h`) to stop working.; The work to adapt all config.h includes in SOFA is easy (searching for macros and including the right config/*.h file) but we have to find the best solution to permit translation for everybody around. What do you think?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/494:82,config,config,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/494,4,"['adapt', 'config']","['adapt', 'config']"
Modifiability,"After building SOFA master (up to date) with success. Building INSTALL project in Visual 2017 failed:. ```; 1>------ Build started: Project: INSTALL, Configuration: Release x64 ------; 1>-- Install configuration: ""Release""; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:150,Config,Configuration,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,2,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"All pluginized modules were ignored in binaries due to postinstall-fixup scripts. :warning: **Do not hesitate to suggest other plugins/modules that should be DISABLED by default.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1725:4,plugin,pluginized,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1725,2,['plugin'],"['pluginized', 'plugins']"
Modifiability,All tests scenes are now failing because we cannot load the SofaSphFluid plugin. ; This fix should helps ;) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/467:73,plugin,plugin,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/467,1,['plugin'],['plugin']
Modifiability,"Allow a 3-level organization: Package > Component > Target. ### Example with SofaPython3 (PR to come in SofaPython3 repo); You want to do:; ```cmake; find_package(SofaPython3 COMPONENTS Bindings); ```; To do that, you must use these macros in your project:; ```cmake; # In SofaPython3/CMakeLists.txt; # Create a Package without Target to contain the Components; sofa_create_package(; PACKAGE_NAME SofaPython3; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ```; ```cmake; # In SofaPython3/Bindings/CMakeLists.txt; # Create a Component with Targets into that Package; sofa_create_component_in_package_with_targets(; COMPONENT_NAME Bindings; COMPONENT_VERSION ${SofaPython3_VERSION}; PACKAGE_NAME SofaPython3; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR "".""; RELOCATABLE ""..""; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671:459,plugin,plugins,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671,1,['plugin'],['plugins']
Modifiability,"Almost all collision detection components in SOFA were a fusion of the broad phase and the narrow phase in a single component. This prevents some combination and confuses about what the component really does.; Following the work in #2010 and #2043, some components such as `BruteForceDetection` and `DirectSAP` can be removed in favour of a broad phase and a narrow phase. In this PR:. - `BruteForceDetection` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `BVHNarrowPhase` component, and warn the user.; - `DirectSAP` is no longer a collision detection object. Instead, it's an empty object which creates a `BruteForceBroadPhase` and a `DirectSAPNarrowPhase` component, and warn the user.; - `BruteForceDetection` has been replaced with `BruteForceBroadPhase` and `BVHNarrowPhase` in all scenes (xml, python etc); - `CudaCollisionDetection` no longer inherits from `BruteForceDetection`. Instead, it inherits from `BruteForceBroadPhase` and `NarrowPhaseDetection`. In a future PR, this component can be transformed to a narrow phase only.; - Fix code where `BruteForceDetection` is used. If `BruteForceDetection` is found in the scene, the warning to the user looks like:; ```; [DEPRECATED] [BruteForceDetection(bruteForceDetection1)] BruteForceDetection component is deprecated. ; As a replacement, use a BroadPhase component, such as [BruteForceBroadPhase, IncrSAP, ParallelBruteForceBroadPhase, RayTraceDetection], ; AND a NarrowPhase component, such as [BVHNarrowPhase, DirectSAPNarrowPhase, IncrSAP, ParallelBVHNarrowPhase, RayTraceDetection]. ; BruteForceBroadPhase and BVHNarrowPhase have been automatically added to your scene for backward compatibility. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2118:923,inherit,inherits,923,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2118,2,['inherit'],['inherits']
Modifiability,An issue in the [script for doxygen](https://github.com/sofa-framework/ci/tree/master/doxygen) for the SOFA plugins should be investigated.; @guparan do not hesitate to edit this comment ;),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3014:108,plugin,plugins,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3014,1,['plugin'],['plugins']
Modifiability,"An other round of fixes to compile base SOFA with float (framework+GUI, no tests nor plugins). The CI itself will only check if nothing changed with double. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3435:85,plugin,plugins,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3435,1,['plugin'],['plugins']
Modifiability,"An other session of warnings removal. it *should* be harmless 🤫. Most important change: replace usage of enum {xxx = yyy} with constexpr keyword for compile-time constant expressions. This is clearer, was made for this, and you can specify the type, contrary to enum https://en.cppreference.com/w/cpp/language/enum :; ```; Values of unscoped enumeration type are [implicitly-convertible](https://en.cppreference.com/w/cpp/language/implicit_conversion#Integral_promotion) to integral types. ; If the underlying type is not fixed, the value is convertible to the first type from the following list able to hold their entire value range: int, unsigned int, long, unsigned long, long long, or unsigned long long, extended integer types with higher conversion rank (in rank order, signed given preference over unsigned) (since C++11).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3118:709,extend,extended,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3118,1,['extend'],['extended']
Modifiability,"And remove dependency. If you need to link a background (image/pix) to a camera (for a gui), I dont think the camera itself should be aware of it, but the GUI itself. (and it should then bear the dependency with BackgroundSetting). (Could not find any use of it in the SOFA code base, or even in the plugins). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2637:300,plugin,plugins,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2637,1,['plugin'],['plugins']
Modifiability,And use them in the Simulation.cpp component. Follow the discussion in this PR: ; https://github.com/SofaDefrost/plugin.SofaPython3/pull/110. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1173:113,plugin,plugin,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1173,1,['plugin'],['plugin']
Modifiability,AnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25295,Plugin,PluginManager,25295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ArticulatedSystem is a complex and not really maintained code, designed to create articulated things like articulated bodies, etc.; It was accepted that it should be isolated somewhere and maybe refactored/redesigned later (if someone is motivated). I took the liberty to retrieve the ArticulatedControllers (which were deprecated/removed some years ago) and put it back into it. Especially because I retrieved the ""man-walking"" example which is quite cool in my opinion.; But the code was created by DigitalTrainers, I dont know if it could be bothersome license-wise. <img src=""https://user-images.githubusercontent.com/11028016/153249327-37e2b9f2-8961-474f-b2cd-d3d8ce52d9fa.gif"" width=""400"" />. **EDIT: Let's vote between**; - ArticulatedSystem as an external repository which would be referenced in _applications/plugin_ (react with 🚀 ); - ArticulatedSystem in Sofa.Component because this is really important ( react with ❤️ ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684:195,refactor,refactored,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684,1,['refactor'],['refactored']
Modifiability,"As decided at the last STC, a serie of plugins will be moved out from the SOFA repository and saved into their own repository.; List of related plugins [available here](https://docs.google.com/spreadsheets/d/1FVQN4rghI1SSYuhT1Y3L5fUZdL7XXPETgQ1GQ28KlD8/edit#gid=0). This will help in the process of deprecation and pluginization in SOFA. - Extraction process is clearly explained in this [documentation](https://docs.github.com/en/github/using-git/splitting-a-subfolder-out-into-a-new-repository); - Remaining: making a pull-request in SOFA to; - remove all plugin files; - add a plugin folder containing one file `ExternalProjectConfig.cmake.in`; - edit _applications/plugin/CMakeLists.txt_ to replace `sofa_add_plugin` by `sofa_add_plugin_external`; - Finalize the GitHub repository:; - add a description; - add reviewers (sofa-framework/reviewers, sofa-framework/consortium-staff and appropriate watcher); - add the ""plugin"" topic (flag). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1442:39,plugin,plugins,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1442,7,['plugin'],"['plugin', 'pluginization', 'plugins']"
Modifiability,"As in SofaNG we are calling the activable/deactivable 'plugins' modules; I added a macro that have the right ""name"" instead of hijacking the; sofa_add_plugin's one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/732:55,plugin,plugins,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/732,1,['plugin'],['plugins']
Modifiability,"As in the title, once I try to launch the tripod-tuto.py I get the following message:. ```; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'C:\Users*******\Desktop\aaasofa\tripod-tuto.py'.; Python exception:; ModuleNotFoundError: No module named 'stlib3'. At:; C:\Users******\Desktop\aaasofa\tripod-tuto.py(1):; (219): _call_with_frames_removed; (848): exec_module; (6):. ```; What should I do? I checked and the stlib3 folder is where it should be (/plugins/STLIB/lib/python3/site-packages/)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3880:485,plugin,plugins,485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3880,1,['plugin'],['plugins']
Modifiability,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2022:58,config,configuration,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022,1,['config'],['configuration']
Modifiability,"As it can be retrieved from the other parameters; Fix a bug when restoring the camera before everything is initialized. I guess this class would like a good refactoring in the future 🥸. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4888:157,refactor,refactoring,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4888,1,['refactor'],['refactoring']
Modifiability,"As mentioned and discussed several months ago, the migration of the [SOFA Forum](https://www.sofa-framework.org/community/forum/) to the [GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) (GHD) feature is now official. This issue aims at presenting the migration process:. | **Timing** | **Step** |; |---------------------|-----------------------------------------------------------------------------|; | January (01->15) | ~~Validation of the GHD format organization~~<br>~~Open GHD on the repositories~~: [SOFA](https://github.com/sofa-framework/sofa/discussions/categories), [SofaPython3](https://github.com/sofa-framework/SofaPython3/discussions/categories), [SoftRobots](https://github.com/SofaDefrost/SoftRobots/discussions/categories)<br>~~Uploading the migration process (cf this issue)~~<br>~~Forum [annoucement](https://www.sofa-framework.org/community/forum/topic/moving-to-github-discussions-lets-vote/#post-21397) of the Forum migration: replies possible until end of February~~ |; | January (15->31) | ~~Preventing any new registration on the Forum~~<br>~~[Redirection](https://github.com/sofa-framework/sofa/discussions/2593) towards GHD~~<br>~~Preventing the creation of new topics~~<br>~~All Forum replies must include a reminder about the migration~~ <br>~~Change link on SOFA website~~ |; | February | ~~Export of Forum data~~|; | March | ~~Complete export~~ <br>~~Changing Forum roles of all users preventing posting~~ <br>~~Evaluate best option: copy as static pages / import all topics in GHD~~<br>~~Removal of web-plugins~~ |; | May | Dereferencing from the SOFA website menu |",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2591:1559,plugin,plugins,1559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2591,1,['plugin'],['plugins']
Modifiability,"As pointed by @thomas-lemaire in #355 & #13 there are several issue on ObjExporter. ; In this PR I suggest to fix & unify the exporter (if you want to contribute...feel free to commit). . Currently it:; - factor & unify shared code between OBJExporter, STLExporter and MeshExporter by inheriting from ; BaseSimulationExporter; - adds a set of tests for OBJExporter, STLExporter and MeshExporter, the test coverage is not bad; - change of the API so that the ::write() function returns a boolean indicate the success or the failure; - add new possibility on the provided filename (to automatically create the missing path element)...; - report error & messages when the files cannot be created. ; - deprecation of the 'hard coded' interaction behavior... (I can explain if needed).; - fix crashes when missing topology. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372:285,inherit,inheriting,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372,1,['inherit'],['inheriting']
Modifiability,"As said in the title this PR puts SofaSparseSolver and SofaPreconditioner in plugins. . There was #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE in config.h instead of using ; find_package to detect and activate conditional building depending on dependencies. I replaced this mechanisme by using find_package(Metis) which I found more clear. . NB: the PR is in wip as I want to check it is going in the same direction as SofaNG ; NB2: it may also be a good idea to add some unittest as SparseLDLSolver seems to be used (So @olivier-goury, @IPeterlik , @marques-bruno, @EulalieCoevoet if you have 1 hour to give feel free ;)); ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/663:77,plugin,plugins,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/663,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"As soon as the 1st SOFA NG version is ready, the github repository including the CMakeList configuration of NG should be released.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/245:91,config,configuration,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/245,1,['config'],['configuration']
Modifiability,"As the title says. and Refactor as a majority of tests had the same scene structure. More dependencies could be removed (MechanicalObject in particular) but rewriting was very time-consuming and I was lazy 🤥. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2733:23,Refactor,Refactor,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2733,1,['Refactor'],['Refactor']
Modifiability,"At STC4 (3 years ago then) was decided to remove SMP code as it was not maintained anymore #457 ; (starting from [a69e632](https://github.com/sofa-framework/sofa/pull/457/commits/a69e63286838c8bb1c4bd1bf286367ebf2ced67d) ); This PR is removing the rest of SMP-related code in; - in the core; - in Flexible; - in SofaMiscCollision. Remove preprocessor flags and SMP related examples as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1613:297,Flexible,Flexible,297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1613,1,['Flexible'],['Flexible']
Modifiability,"At https://defrobotics2022.sciencesconf.org/ we noticed that a lot of sofa users are manually setting SOFA_ROOT and PYTHONPATH. ; The problem is that when they are using a new version, they often forgot to update these path in their system configuration resulting in very hard to understand problems including random crashes (because runSofastarts, then try to load or use a plugin from a different sofa version which can only lead to ). We should think about some mecanisme to detect and guide users when this happens. The mecanism does not need to be bullet proof, guiding 80% of users would be already great. . Drafted suggestion on how we can do that is welcome.; On my side i think that we may have in SOFA_ROOT a file storing an unique ""token/md5 checksum"" telling which version of runSofa the plugin was compiled for and the same for every plugins. ; In case the runSofa version is different to the one stored into this file...and detect a ""wrong SOFA_ROOT"" prints a warning and use an empty SOFA_ROOT. ; Same in the plugin loader, if the runSofa unique token is not the one the plugin is expecting then prints a warning and refuse to load it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3099:240,config,configuration,240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3099,6,"['config', 'plugin']","['configuration', 'plugin', 'plugins']"
Modifiability,Automatic doc generation for SofaPython3 plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3764:41,plugin,plugin,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3764,1,['plugin'],['plugin']
Modifiability,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2053:792,plugin,plugins,792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053,1,['plugin'],['plugins']
Modifiability,"Based on #2813 . and sofang-ize paths/plugins/etc.; and creation of some *Testing framework (solidmechanics, topology, mapping...). and a loooots of clean as well. (not enough). Some tests were disabled, they are back again. ~~Will be updated when Collision/engine/etc will be merged.~~ done. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2873:38,plugin,plugins,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2873,1,['plugin'],['plugins']
Modifiability,"Based on #3548 . Similar to ParallelHexahedronFEMForceField. `addDForce` and `addKToMatrix` are the parallelized functions.; `addForce` is not parallelized. It would require to duplicate code from the base class. Hence a refactoring is needed for a proper implementation (in another PR). Note that `addForce` is usually not the bottleneck. Quick benchmarks show performances improvement on the provided example. I think there is still room for improvement in `addDForce`. But it would require a few changes in the base class. Instead of having a force vector for each task, I suggest to store only the force on the DoFs that have been visited during the task. I am not sure if it will bring more perfs improvements. In this PR, `addKToMatrix` is parallelized. It is not in `ParallelHexahedronFEMForceField`, but the same principle can be applied (in another PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3552:221,refactor,refactoring,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3552,1,['refactor'],['refactoring']
Modifiability,"Based on #3634. Mostly focusing on updating the compat :; - [x] SofaBaseCollision; - [x] SofaBaseLinearSolver; - [x] SofaBaseMechanics; - [x] SofaBaseTopology; - [x] SofaBaseUtils; - [x] SofaBaseVisual; - [x] SofaBoundaryCondition; - [x] SofaConstraint; - [x] SofaDeformable. The rest for a next one. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/3]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3649:350,Plugin,PluginExample,350,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649,1,['Plugin'],['PluginExample']
Modifiability,"Based on #4034 Pursuing the cleaning for the SOFA lifecycle ahead of the v23.12. - start removing DEPRECATED codes, getting disabled in v23.12; - lifecycle Multithreading plugin; - lifecycle SofaCUDA plugin; - lifecycle SceneCheck plugin; - remove SofaGeneralObjectInteraction and SofaMeshCollision; - remove all v21.06, v21.12 and v22.06 deprecation references EXCEPT : Compat and Topology :japanese_ogre: @epernod :wink: . [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040:171,plugin,plugin,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040,3,['plugin'],['plugin']
Modifiability,"Based on ; - #2958 . Contains:; - #2960 . Allow compilation of the Sofa codebase without the cmake option SOFA_ENABLE_LEGACY_HEADERS, i.e the compatibility mode. (Sofa codebase = default cmake options, i.e framework, Component, tests and the few plugins ON by default). [NOTci-depends-on https://github.com/sofa-framework/Registration/pull/2]; [NOTci-depends-on https://github.com/sofa-framework/SofaPython3/pull/268]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975:246,plugin,plugins,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975,1,['plugin'],['plugins']
Modifiability,"Based on ; - #3102. The autoloading libraries (plugin/module/whatever) feature was not including the ""new"" libraries (i.e Sofa.Component* ) since the fact that are neither plugin nor module (but still loadable); This PR fixes it.; Autoloading is not really recommended but a lot of scenes outside this repo relies on it implicitely. TODO: decide if autoloading should off by default (and force the users to explicitly load their own necessary libs in their scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3103:47,plugin,plugin,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3103,2,['plugin'],['plugin']
Modifiability,"Based on ; - #4925 . This PR sets the `ConfigDirectoryPath` with the value of getSofaLocalUserDir (see https://github.com/sofa-framework/sofa/pull/4875) instead of the current directory (could be the binary dir, install dir, etc). This PR also adds the option to change this directory path to a custom path, set with a new cmd line option. ---; Note (not the object of the PR 🙂‍↕️); A bit weird that the config directory path getter is from the GUI, which means one needs a dep on Sofa.GUI to get the config dir path 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4926:39,Config,ConfigDirectoryPath,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4926,3,"['Config', 'config']","['ConfigDirectoryPath', 'config']"
Modifiability,"Based on https://github.com/sofa-framework/sofa/pull/3594. Introduce `ParallelStiffSpringForceField` and `ParallelMeshSpringForceField`. The base classes `SpringForceField` and `StiffSpringForceField` were also refactored to be able to reuse common code with their parallel implementations. Only the `addForce` method is implemented. The provided example has an explicit integration scheme where the force derivative is not required. `addDForce` and `addKToMatrix` may come later. Benchmark:. ```; Sequential; 1000 iterations done in 9.11327 s ( 109.73 FPS). Parallel; 1000 iterations done in 5.04016 s ( 198.406 FPS); ```. The implementation is naïve. We could probably do better. Note there are 11264 points and 62668 edges (springs) in the provided example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3596:211,refactor,refactored,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596,1,['refactor'],['refactored']
Modifiability,"Based on previous PR #3539 . Add methods and binding for:; - loading sofa.ini file to set resources/example path; - loading SOFA plugin given the file path; - activate/deactivate SOFA messageHandler, get the number of queued message and get the message with its priority. edit:; - Avoid using string as it can produce memory bad access from other software integration. ; - Also remove use of config.h inside SofaPhysicsAPI .h to be able to easily include it in third library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:129,plugin,plugin,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"Based on this thread: https://www.sofa-framework.org/community/forum/topic/collision-callback-function-in-python/. I wanted to create a SofaPython3 binding, that reads the number of contacts and their associated distances.; The variable in ContactListener that stores this information is private and cleared at every CollisionBeginEvent.; -> Added a getter function for ContactsVector.; -> Added a buffer variable that is over written before ContactsVector is cleared (storing a copy over different events).; -> Added functions to retrieve the number of contacts and their respective distance values and point pairs in the buffer. I will also create a pull request on SofaPython3 with the respective bindings, once this pull request is merged. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1678:228,variab,variable,228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1678,2,['variab'],['variable']
Modifiability,"Based on; - #2996 . Remove last usages of SofaTest in plugins.; Now SofaTest needs to be enabled in cmake to be compiled (and not forcefully added). Fix #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3000:54,plugin,plugins,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3000,1,['plugin'],['plugins']
Modifiability,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466:137,plugin,plugin,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466,1,['plugin'],['plugin']
Modifiability,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1902:136,refactor,refactoring,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902,1,['refactor'],['refactoring']
Modifiability,"Because it's better when your plugin build does not fail because of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2453:30,plugin,plugin,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2453,1,['plugin'],['plugin']
Modifiability,Because no-one should be forced to compile opengl 1.x code...it is now a real plugin. . CHANGELOG:; - make plugin CMake package ; - move code to src/SofaOpenglVisual for better encapsulation; - rename all data field that are not conformant to sofa guidelines (so use the d_ prefix); - remove commented code all around; - move defintion from .h to .cpp; - remove the GLEW specific code all around. This PR is based on #1070 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071:78,plugin,plugin,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071,2,['plugin'],['plugin']
Modifiability,"Because of the tricky mecanisme to inject SOFA_TARGET in the ObjectFactory, the config.h file must always be included before the ObjectFactory.h . Not doing that results in broken target. ; The PR fix the faulty components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2693:80,config,config,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2693,1,['config'],['config']
Modifiability,"Been looking into github actions, trying to get it to do what I want... not yet really successfully, but I've got a proof of concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatib",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:369,plugin,plugins,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,2,"['PLUGIN', 'plugin']","['PLUGINS', 'plugins']"
Modifiability,"Before 20.12 there was a lot of ""stowaway passenger"" includes. We are in the process of removing them which has the consequence that a lot of plugins relying on these ""stowaway passenger"" are not compiling anymore. ; Fixing that is relatively easy in most of the case, you need to find which type is missing and include the corresponding file in the most appropriate file of your project. It can in a .cpp, an .inl or a .h.; Most common missing includes ares:; ```cpp; sofa::simulation::Node => #include <sofa/simulation/Node.h>; msg_xxxx function => #include <sofa/helper/logging/Messaging.h>; system::thread ctime => #include <sofa/helper/system/thread/CTime.h>; fixed_array => #include <sofa/helper/fixed_array.h>; ```. In PR:; ```cpp; sofa::helper::AdvancedTimer => #include<sofa/helper/AdvancedTimer.h>; sofa::helper::ScopedAdvancedTimer => #include<sofa/helper/ScopedAdvancedTimer.h>; sofa::type::Mat => #include<sofa/type/Mat.h>; ```. In PR: #1794 ; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/MultiMatrixAccessor.h>; #include <sofa/defaulttype/typeinfo/TypeInfo_Mat.h>; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1757:142,plugin,plugins,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757,1,['plugin'],['plugins']
Modifiability,BilateralLangrangianConstraint API need to be refactored,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4834:46,refactor,refactored,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4834,1,['refactor'],['refactored']
Modifiability,"Bitwise comparison between different unnamed enum seems to be be deprecated (at least for gcc12) and it was spamming a lot of warnings in a private plugin. ; ```; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:302: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:302:37: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; 302 | #define ACTIVEFLAG(f) ((ActiveFlags & (f)) != 0); | ~~~~~~~~~~~~~^~~~~~; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:305:81: note: in expansion of macro ‘ACTIVEFLAG’; 305 | typedef LinkTraitsValueType<DestType, DestPtr, ACTIVEFLAG(FLAG_STRONGLINK), ACTIVEFLAG(FLAG_STOREPATH)> TraitsValueType;; | ^~~~~~~~~~; ```; (I dont know why it was only appearing only for the plugin compilation, maybe some warnings flags are added by an external cmake target); Anyway the macro to enable flags was quite dirty to me so I have changed it a little bit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not gener",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3714:148,plugin,plugin,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3714,1,['plugin'],['plugin']
Modifiability,"Bonjour,; I am trying to model cutting on a deformable object, but I would like to use a Sparse Grid Topology to avoid meshing etc.; I found the component `DynamicSparseGridTopologyContainer` which seems to be the right thing, but sadly I get index errors, when I try to remove elements (through shift-right-click interaction in the GUI).; But something seems to happen, as the visual model deforms and also finally crashes, when no points are left. Error:; ```bash; [ERROR] [DynamicSparseGridTopologyModifier(DynamicSparseGridTopologyModifier)] Unable to remove the hexahedra: 130 its index is out of bound.; ```. Video:; <video src=""https://github.com/sofa-framework/sofa/assets/29635054/1c5129b9-9336-4968-910f-107a57800ebe"" width=""200"" height=""auto"">. Example Scene:; ```python; import Sofa; import Sofa.Core; import Sofa.Simulation. PLUGINS = [; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase,BruteForceBroadPhase,CollisionPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [MinProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [TriangleCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [CollisionResponse]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.IO.Mesh"", # [MeshOBJLoader]; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.Mapping.Linear"", # [BarycentricMapping]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.StateContainer"", # [MechanicalObject]; ""Sofa.Component.Topology.Container.Constant"", # [MeshTopology]; ""Sofa.Component.Topology.Container.Dynamic"", # [DynamicSparseGridGeometryAlgorithms,Dy",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4796:838,PLUGIN,PLUGINS,838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4796,1,['PLUGIN'],['PLUGINS']
Modifiability,"Boost libs were not copied correctly in MinSizeRel and RelWithDebInfo configurations on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1711:70,config,configurations,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1711,1,['config'],['configurations']
Modifiability,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4565:5,plugin,plugins,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565,1,['plugin'],['plugins']
Modifiability,Bug in external plugin to link with Sofa.GL and Glew,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3079:16,plugin,plugin,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3079,1,['plugin'],['plugin']
Modifiability,"Build process:. ```; cd ~/Apps/git-apps; git clone https://github.com/sofa-framework/sofa.git; cd sofa/src; git checkout master; mkdir build-master; cd build-master; cmake [options] ..; make; ```. To be clear, build directory is: `/home/emdash00/Apps/git-apps/sofa/src/build-master`. Edit: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:338,config,configuration,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,3,['config'],"['config', 'configuration']"
Modifiability,"Building in Debug on Windows copy dll like boost_program_options-vc141-mt-x64-1_72.dll instead of boost_program_options-vc141-mt-gd-x64-1_72.dll ; into the /bin/Debug/ folder. Config: New build from scratch, master version ~15th August. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1501:176,Config,Config,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1501,1,['Config'],['Config']
Modifiability,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398:142,plugin,plugin,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398,3,['plugin'],['plugin']
Modifiability,"By default, runSofa loads a bunch of plugins automatically, based on a list found in a file.; If runSofa is run with the option `noautoload`, a lot of scenes cannot be loaded correctly because of missing plugins.; Right now, runSofaGLFW does not have the automatic load of plugins based on the file, like runSofa. So it's very annoying to work with runSofaGLFW.; I would like a discussion on the following points:. 1. Correction of all scenes, in Sofa and in the maintained plugins, with the correct RequiredPlugin list. Can it be automatic, or at least a part of the process?; 2. Must runSofaGLFW load plugins automatically?; 3. Must the CI execute the scene with the option `noautoload`?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2818:37,plugin,plugins,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2818,5,['plugin'],['plugins']
Modifiability,CGAL Plugin can not be found,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1290:5,Plugin,Plugin,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1290,1,['Plugin'],['Plugin']
Modifiability,CGAL Plugin error when compiling SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2075:5,Plugin,Plugin,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075,1,['Plugin'],['Plugin']
Modifiability,"CGAL plugin has some build issues in some circumstances, this PR aims to fix it:. - build error if ""image"" plugin is deactivated; - BOOST_PARAMETER_MAX_ARITY too low by default (5 by default, where CGAL needs 12 at least). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/351:5,plugin,plugin,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/351,2,['plugin'],['plugin']
Modifiability,CGAL plugin won't build with image plugin activated,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:5,plugin,plugin,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,2,['plugin'],['plugin']
Modifiability,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2307:65,plugin,plugin,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307,4,['plugin'],['plugin']
Modifiability,CMake >= 3.15 fails at configuring stage of sofa 19.06.00,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105:23,config,configuring,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105,1,['config'],['configuring']
Modifiability,CMake Deprecation Warning when configuring,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:31,config,configuring,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['config'],['configuring']
Modifiability,"CMake configuration of out-of-tree plugins using Sofa.Testing is broken after; - #3655 . The compat/ dir has been removed but not its reference for the target config. Error log: (from beamadapter CI):. ```; CMake Error in BeamAdapter_test/CMakeLists.txt:; Imported target ""Sofa.Testing"" includes non-existent path. ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/Sofa.Testing/Sofa.Testing/compat"". in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:. * The path was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and references files it does not; provide.; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3694:6,config,configuration,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3694,3,"['config', 'plugin']","['config', 'configuration', 'plugins']"
Modifiability,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4338:94,plugin,plugin,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338,1,['plugin'],['plugin']
Modifiability,"CMake style : ""_d"" debug prefix is removed from all plugins binaries if you don't the use sofa_add_plugin macro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/490:52,plugin,plugins,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/490,1,['plugin'],['plugins']
Modifiability,"Call me weightwatcher!. Following the STC9, decision to remove the following plugins (unused/unknown):; - ARTrack: you confirm for you @omarboukhris ?; - SofaPML; - SofaStereo; - SofaVolumetricData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1439:77,plugin,plugins,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1439,1,['plugin'],['plugins']
Modifiability,Can someone help me? I am stuck in the following error when compiling SOFA with CGAL plugin:. FAILED: applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o ; /usr/bin/g++ -DCGALPlugin_EXPORTS -DCGAL_MESH_3_VERBOSE=0 -DNDEBUG -DSOFA_BUILD_CGALPLUGIN -I../applications/plugins/CGALPlugin/src -Iinclude/CGALPlugin -I../SofaKernel/modules/SofaCore/src -Iinclude/Sofa.Core -I../SofaKernel/modules/SofaHelper/src -Iinclude/Sofa.Helper -I../SofaKernel/modules/Sofa.Config/src -Iinclude/Sofa.Config -I../SofaKernel/modules/Sofa.Type/src -Iinclude/Sofa.Type -I../SofaKernel/modules/Sofa.Compat/src -Iinclude/Sofa.Compat -I../SofaKernel/modules/Sofa.Topology/src -Iinclude/Sofa.Topology -I../SofaKernel/modules/Sofa.Geometry/src -Iinclude/Sofa.Geometry -I../SofaKernel/modules/SofaDefaultType/src -Iinclude/Sofa.DefaultType -I../SofaKernel/modules/SofaSimulationCommon/src -Iinclude/SofaSimulationCommon -I../SofaKernel/modules/SofaSimulationCore/src -Iinclude/Sofa.SimulationCore -isystem ../SofaKernel/extlibs/json -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wno-attributes -fstack-protector --param=ssp-buffer-size=4 -D_FORTIFY_SOURCE=2 -Wall -W -Wno-padded -pthread -frounding-math -std=gnu++17 -MD -MT applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -MF applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o.d -o applications/plugins/CGALPlugin/CMakeFiles/CGALPlugin.dir/src/CGALPlugin/CylinderMesh.cpp.o -c ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp; In file included from ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.cpp:25:; ../applications/plugins/CGALPlugin/src/CGALPlugin/CylinderMesh.inl:25:10: fatal error: sofa/gl/template.h: Arquivo ou diretório inexistente; 25 | #include <sofa/gl/template.h>; | ^~~~~~~~~~~~~~~~~~~~; compilation terminated.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2075:85,plugin,plugin,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2075,11,"['Config', 'plugin']","['Config', 'plugin', 'plugins']"
Modifiability,Cath' output='@ContainerCath' flipNormals='true'/>. 			<AdaptiveBeamMapping name='VisuMapCath' useCurvAbs='1' printLog='0' interpolation='@../InterpolCatheter' input='@../DOFs' output='@Quads' isMechanical='false' />. 			<Node name='VisuOgl' activated='true'>; 				<OglModel name='Visual' color='0.7 0.7 0.7' quads='@../ContainerCath.quads' material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'/>; 				<IdentityMapping input='@../Quads' output='@Visual'/>; 			</Node>	; 		</Node>; 	; 		<Node name='VisuGuide' activated='true'>; 			<MechanicalObject name='Quads' />; 			<QuadSetTopologyContainer name='ContainerGuide' />; 			<QuadSetTopologyModifier name='Modifier' />; 			<QuadSetGeometryAlgorithms name='GeomAlgo' template='Vec3d' />; 			<Edge2QuadTopologicalMapping nbPointsOnEachCircle='10' radius='1' input='@../../topoLines_guide/meshLinesGuide' output='@ContainerGuide' flipNormals='true' listening='true'/> ; 			<AdaptiveBeamMapping name='visuMapGuide' useCurvAbs='1' printLog='0' interpolation='@../InterpolGuide' input='@../DOFs' output='@Quads' isMechanical='false' />; 			<Node name='VisuOgl'>; 				<OglModel name='Visual' color='0.2 0.2 0.8' material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20' quads='@../ContainerGuide.quads'/>; 				<IdentityMapping input='@../Quads' output='@Visual'/>; 			</Node>		; 		</Node> ; 	 ; 		<Node name='VisuCoils' activated='true'>; 			<MechanicalObject name='Quads'/>; 			<QuadSetTopologyContainer name='ContainerCoils' />; 			<QuadSetTopologyModifier name='Modifier' />; 			<QuadSetGeometryAlgorithms name='GeomAlgo' template='Vec3d' />; 			<Edge2QuadTopologicalMapping nbPointsOnEachCircle='10' radius='0.3' input='@../../topoLines_coils/meshLinesCoils' output='@ContainerCoils' flipNormals='true' listening='true' /> ; 			<AdaptiveBeamMapping name='visuMapCoils' useCurvAbs=',MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4833:11449,Adapt,AdaptiveBeamMapping,11449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4833,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,CentralDifferenceSolver must be adapted to work with any type of mass matrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1922:32,adapt,adapted,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1922,1,['adapt'],['adapted']
Modifiability,"Change access specifier for the method set. A public access is needed in SofaCUDASolver plugin. . Moreover, regardless of the reasons of this modification, the fact that this method is at the beginning of the class declaration without any access specifier before is not wanted. Even if it is a class which makes its access private by default, it lacks of readability. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3834:88,plugin,plugin,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3834,1,['plugin'],['plugin']
Modifiability,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322:19,plugin,plugins,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322,1,['plugin'],['plugins']
Modifiability,"Changed input variable name ""InputMeshName"" of MeshbarycentricMapperEngine to ""topology"" for added clarity; Modified label descriptions of MeshbarycentricMapperEngine variables for added clarity; Added a parse function to warn about the name change of InputMeshName; Added an example scene for this component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1487:14,variab,variable,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1487,2,['variab'],"['variable', 'variables']"
Modifiability,Changelog:; - Remove the plugins in deprecated directory ; - Remove DETECTIONOUTPUT_BARYCENTRICINFO (https://github.com/sofa-framework/sofa/pull/1046); - Remove remaining SOFA_WITH_FLOAT (https://github.com/sofa-framework/sofa/pull/1047); - Replace 3.14 with M_PI (https://github.com/sofa-framework/sofa/pull/1045) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1048:25,plugin,plugins,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1048,1,['plugin'],['plugins']
Modifiability,Changes:. - Removing deprecated datafields; - Use Accessors instead of beginEdits; - Remove aliases; - move addInputs / addOutputs from init() to ctor(); - Add alignedBoxes & orientedBoxes as inputs of the BoxROI engine; - Refactor init / reinit / doUpdate to guarantee full component update on data change. *BREAKING because of the removal of aliases & deprecated datafields*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1482:223,Refactor,Refactor,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1482,1,['Refactor'],['Refactor']
Modifiability,"Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Install prefix: /home/thebigone/projects/sofa/build/install; -- Found PythonInterp: /usr/bin/python3.8 (found version ""3.8.2"") ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information..",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:1479,variab,variable,1479,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['variab'],['variable']
Modifiability,Clang compiler gives a suspicious warning (for a long time now):; `sofa/SofaKernel/modules/SofaBaseLinearSolver/DefaultMultiMatrixAccessor.cpp:485: warning: variable 'it' is incremented both in the loop header and in the loop body [-Wfor-loop-analysis]`. It is just an information to people that may use DefaultMultiMatrixAccessor massively.; (Hadrien and François J could also be interested),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/145:157,variab,variable,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/145,1,['variab'],['variable']
Modifiability,Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/ser,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24421,Plugin,PluginManager,24421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12237,Plugin,PluginManager,12237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,Clean Manifold Topologies plugin:; - Replace serr/sout by msg_; - Move all code inside cpp files; - Clean header inclusions; - Fix template declaration; - Clean warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1156:26,plugin,plugin,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1156,1,['plugin'],['plugin']
Modifiability,"Clean all cmake var/options/names to follow the new guidelines and the new SOFA-NG module names; (fulfill some TODO written long ago as well). + Fix #2972. Remark/question: should we keep compatibility with all the cmake variables/options and preproc defines?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974:221,variab,variables,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974,1,['variab'],['variables']
Modifiability,"Clean the inclusion graph using the combination of three technique. 1) do not rely on properties within class as this imply to have the full class definition to compile the code. ; Eg: `Node::SPtr` is strictly equivalent to `sofa::core::sptr<Node>` but the latter does not always requires the full class definition. ; 2) replacement of `dynamiac_cast<>()` with an opaque function that does not need the complete inheritance graph to be visible. ; 3) move definition of fonction from the .h to the .cpp . By applygin these refactoring step there is more opportunity to use forward declaration. . To handle the forward declaration it was decided during the reviewing of PR #1688 to use a dedicated file for that: ; Eg:; ```console; - sofa/core/fwd.h; - sofa/defaulttype/fwd.h; - sofa/helper/fwd.h ; ```; I also put in these files dynamic_cast replacement eg:; ```cpp; Node* getNodeFromBase(Base*);; ```. And there is also there is the definition of NodeSPtr as context free replacement for Node::SPtr. . The PR also contains: #1727 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1730:412,inherit,inheritance,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1730,2,"['inherit', 'refactor']","['inheritance', 'refactoring']"
Modifiability,"Cleaning PR for the v21.06 release. 1. remove warnings about unused variables/parameters; 2. transformRotation of Mat enforces if the given Mat is 3x3 or 4x4 (does not make sense otherwise, or could even crash); 3. add a function toHomogeneousMatrix() for Mat4x4 for RigidTypes (which will use the toHomogenous of Quat); 4. remove uses of operator= with MultiMatrix in ODESolvers; 5. HeadlessRecorder was using a deprecated feature of VisualParameters (sceneTransform); 6. Use PathResolver in MultiMapping; 7. Rename Deprecation Macro in BaseData.h, correct the fix message and remove use of setOwnerClass. Note for 7.: the GUI was displaying either ""Base"" for owner (when hovering on the Data name) or ""no owner found"". I dont really know what was supposed to be displayed.; Now with the correction, all the Data will display their owner's name, which seems a bit useless to me. Before:; ![prclean_2106_beforename](https://user-images.githubusercontent.com/11028016/123656430-35593280-d830-11eb-8f3a-bfd4283ac64f.png) ![prclean_2106_beforeflags](https://user-images.githubusercontent.com/11028016/123656436-368a5f80-d830-11eb-8a41-d772aa2f679a.png). After:; ![prclean_2106_aftername](https://user-images.githubusercontent.com/11028016/123656520-4ace5c80-d830-11eb-86ba-9a761911530b.png) ![prclean_2106_afterflags](https://user-images.githubusercontent.com/11028016/123656532-4d30b680-d830-11eb-8a6a-af7ec55843f4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2210:68,variab,variables,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2210,1,['variab'],['variables']
Modifiability,"Cleaning and refactoring in BarycentricMapping (only for topology container). _description from comment below:_. Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797:13,refactor,refactoring,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797,5,"['refactor', 'variab']","['refactor', 'refactored', 'refactoring', 'variables']"
Modifiability,Cmake 3.13 does not seem to allow the inclusion of `CPackNSIS` anymore.; This add a simple check on cmake version to prevent cmake configure failure.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/897:131,config,configure,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/897,1,['config'],['configure']
Modifiability,Code is duplicated in:. - SofaKernel/modules/SofaBaseCollision/SofaBaseCollision_test/BroadPhase_test.h; - applications/plugins/SofaTest/BroadPhase_test.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2117:120,plugin,plugins,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2117,1,['plugin'],['plugins']
Modifiability,Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Comp,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2105,Plugin,PluginManager,2105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"Coming from [Mei remark on the forum](https://www.sofa-framework.org/community/forum/topic/image-viewer-in-image-plugin/). - Add the automatic loading of the image_gui library when the plugin image is loaded (if the library is well there); - Add formating in associated CMakeLists. With the correct loading of image_gui, now the ImagePlaneWidget will work fine when opening a ImageViewer component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1015:113,plugin,plugin,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1015,2,['plugin'],['plugin']
Modifiability,"Compilation error fix. When CMake variables PLUGIN_SOFACUDA and SOFACUDA_DOUBLE are enabled, CudaStandardTetrahedralFEMForceField.cu try to be compiled through NVCC (Nvidia compiler). It was leading to a compile error because of 2 missing function prototypes in the .cu file. This commit fixes the issue. Compilation was tested on my side on Fedora 29 with CUDA Toolkit v10.1. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991:34,variab,variables,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991,1,['variab'],['variables']
Modifiability,"Compiling sofa with SOFA_FLOATING_POINT_TYPE=double (no float) leads to a series of compile errors in Mapping and MultiMapping. I believe the bug has been introduced in PR #738. The reason for this crash is that some Mappings double->float are necessary for some applications (usually for visual models, CUDA, etc.).; Thus ExtVecXfTypes are always compiled, even when #ifndef SOFA_FLOAT. This PR fixes the bug, but also raises an important underlying point:; Having ifndefs everywhere in the code is very intrusive, source of errors, and most importantly, prevents having a full code coverage in the CI in a single build. Floats are slower, and much less precise than Doubles. We do not support XBox / PS3 code, thus we have one less reason to keep this code smell in the core of sofa.; If the only reason we still need floats is for Cuda compatibility and other visual rendering stuff, shouldn't the conversions be done in those components / plugins, instead of having this FLOAT things affecting the whole codebase of SOFA?. I dream of a sofa without all these ifdefs lying around polluting the code.; @courtecuisse @fredroy , you worked the most on CUDA stuff and visual rendering respectively, do you have an opinion on the subject?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/827:943,plugin,plugins,943,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/827,1,['plugin'],['plugins']
Modifiability,"Complete https://github.com/sofa-framework/sofa/pull/3093 .; It parallelize the assembly of the compliance matrix in the same way of the previous PR.; I changed some misleading variable name and added comment for future maintenance. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3154:177,variab,variable,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3154,1,['variab'],['variable']
Modifiability,Compliant plugin: unintuitive behavior of friction coefficients,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/81:10,plugin,plugin,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/81,1,['plugin'],['plugin']
Modifiability,Compliant/Flexible-dependent API,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1636:10,Flexible,Flexible-dependent,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1636,1,['Flexible'],['Flexible-dependent']
Modifiability,Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7758,Plugin,PluginManager,7758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"Component.LinearSolver.Direct"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.SolidMechanics.FEM.Elastic"",; ""Sofa.Component.SolidMechanics.Spring"",; ""Sofa.Component.StateContainer"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='20",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1646,plugin,pluginName,1646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,2,['plugin'],"['pluginName', 'pluginNameList']"
Modifiability,"Components; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a string with the ; python file/line info to add report them in msg_* ; * adds 'override' keyword when needed (more info => http://en.cppreference.com/w/cpp/language/override); * adds tests on PythonScriptController; * adds tests on SofaModule; * adds a exception handler in python so that the un-catched exceptions are sended as msg_error instead of being printed on the console. ; * cosmetic changes like replacing 'using namespace a;' with the precise 'using a:TheClass', removing in-consistant line spacing. ; * replace ""extern C"" with static. - [Flexible/python] Fix the examples & the tests to take into account the changes in SofaPython; - [Compliant/python] Fix the examples & the tests to take into account the changes in SofaPython. To simplify the submitter's life (and don't waste their time) some extras (read not really relevant) changes are also added to the PR:; - remove a virtual in-heritance on BaseController and plugin/optitracknet. ; - adds a << operator to Message.h to handle file:line information (now in PR: #314 ) ; - made some changes in STLExporter to stay consistant with Sofa guidelines. . There is still some work todo (if you have free time to offer):; Eg: ; in Compliant there is still patterns like:; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: wrong arguments"" );; return NULL;; ```; The SP_MESSAGE_ERROR is probably not needed as it duplicate the one provided by the python exception. . While in ; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: first argument is not a BaseNode"" );; PyErr_BadArgument();; return NULL;; ```; PyExc_SetString() should replace the message error & the bad argument. . More generally there is still a lot of SP_MESSAGE_*() instead of msg_* and there is a lot of method that haven't their docstring. ; ; _______________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:2928,plugin,plugin,2928,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,1,['plugin'],['plugin']
Modifiability,Confirm choices of selected plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4556:28,plugin,plugins,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4556,1,['plugin'],['plugins']
Modifiability,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:714,plugin,plugins,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,1,['plugin'],['plugins']
Modifiability,"Continuing #2150. Implementation of BaseMatrix and BaseVector using Eigen library was contained in SofaEigen2Solver. Those EigenVector/EigenMatrix are almost only used for ad-hoc code in FEMs (getJs, geometricStiffness) related to Flexible or Compliant. I tried to make it as compatible as possible, so it should not be breaking. I have deleted also an accessor on a special ""Eigen-""MultiMatrixAccessor:; - it is not used; - it would have introduced a dependency on Sofa.Core... (not possible). Finally, I think this classes wont really be useful in the future, especially that BaseVector/BaseMatrix using Eigen are present in SofaCaribou (https://github.com/jnbrunet/caribou/blob/master/src/SofaCaribou/Algebra/EigenVector.h for example) and seems better overall. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2339:231,Flexible,Flexible,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2339,1,['Flexible'],['Flexible']
Modifiability,"Continuing task #2402 . ""Simple"" PR moving all code related to TopologyData/Handler from SofaBaseTopology to Sofa.Core, along the other core topology structure. A lot of modules wont need SofaBaseTopology anymore because it was including TopologyData.inl from it.... As usual, there is a compatibility layer which surprisingly works very well in this case (i did not touch any other file in other plugins/modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2423:397,plugin,plugins,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2423,1,['plugin'],['plugins']
Modifiability,Convert Python2 bindings to Python3 in image plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3862:45,plugin,plugin,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3862,1,['plugin'],['plugin']
Modifiability,Copy legacy SofaPython plugin to SofaPython27 (for backward-compatibility),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/189:23,plugin,plugin,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/189,1,['plugin'],['plugin']
Modifiability,Create a Camera component so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement; your own 'application specific behavior' by using an external Controller (eg: PythonScriptController). Changes:; - the BaseCamera now has a link to a BackgroundSetting so multiple camera can have multiple background. ; - the BaseCamera now implement a draw() method. If you don't want to see what is drawn...then; restrict the rendering of your scene graph to only call drawVisuals() which is what it is supposed to do :) ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object. Update the caduceus example. NB: I know there is much more to refactor but I have not time for that. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/674:762,refactor,refactor,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/674,1,['refactor'],['refactor']
Modifiability,Create a Sofa.Config package,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1667:14,Config,Config,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1667,1,['Config'],['Config']
Modifiability,Create github-test-action for scene testing in the plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4265:51,plugin,plugins,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265,1,['plugin'],['plugins']
Modifiability,"Create videos showing:; - how to compile SOFA; - how to compile SofaPython3; - how to use SOFA, add collision models, compile plugins out of tree etc etc.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2370:126,plugin,plugins,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2370,1,['plugin'],['plugins']
Modifiability,"Currently CentralDifferenceSolver assumes the provided mass is diagonal. If the user decides to work with a non-diagonal mass, the simulation will be wrong, without notifying the user. The CentralDifferenceSolver component must be adapted to work with any type of mass matrix. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1922:231,adapt,adapted,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1922,1,['adapt'],['adapted']
Modifiability,"Currently config.h is a all-in-one configuration file that is generated by CMakeLists and included nearly everywhere. The problem is that it contains also very specific options that very few files are using. But, each time any of these specific option is changed sofa needs to be recompiled entirely. This PR is a implementing a more modular approach in which each .cpp that specifically requires a given define include a dedicated file.; Eg:; #include<config/build_option_opengl.h> // to do #if(SOFA_WITH_OPENGL==1); or; #include<config/build_option_experimental.h> // to do #if(SOFA_WITH_EXPERIMENTALFATURE==1); or; #include<config/sharedlibrary_defines.h>. It is still possible to use the old file but by being more specific we will reduce the amount of file to recompile when we will changed something. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/475:10,config,config,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/475,5,['config'],"['config', 'configuration']"
Modifiability,"Currently in Sofa the Link implementation is very hard to maintain because; in a single implementation based on type-traits we are trying to handle to object; of different nature that are BaseData and Base. Link between Base is used everywhere in Sofa but a Link between two data; is only to hold the parent of a Data. It is questionable if such complex; implementation for Link is needed for just this single use case ?. Not doing that have a lot of consequence:; - Data implementation is simpler (because it is no needed to have Class ); - Link implementation is much simpler (and Link is used everywhere); - The instanciation of Link is time consuming in the compilation process and; requieres a lot of #include<> making the dependency graph more dense and thus; slow to compile. So in this PR I introduce a new DataLink & AbstractDataLink that aims at replacing; SingleLink<BaseData*, BaseData*>. In this PR I also add PathResolver, as path link resolution is important an currently it is spread everywhere in the sofa codebase. The underlying idea; is to have all path related things in a single location so we can check there is no duplicated code. The implementation are provided with unittest. The PR does not touch other files.; A second PR will be in charge of refactoring Data.h. But to minimize deltas I prefer to have; this one merged first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1485:1271,refactor,refactoring,1271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1485,1,['refactor'],['refactoring']
Modifiability,"Currently in Sofa we aren't catching any exceptions. . The consequence is that every exception propagates to the top level exception handler halting the application. ; Un-handled exception are useful to detect bugs but this is a non-sense to use such top level handler to process possible application errors like failure to load a plugin or a scene. . A good approach should be that any exception that can be fixed without editting the source code (ie. but by editting the scene or changing some system configuration and so on) should ends with a gracefull error message indicating to the user how to fix the error cause. To implement this I suggest to:; - add a close to top-level try/catch block around simulations/plugin actions; - add a SofaSimulationException that has an error message, the component that emitted it and can have a backtrace as well as a top level reactions to do (eg: set componentstate to invalid and stop simulation). We should also use this SofaSimulationException at any place we are using msg_error(). ; (Actually it could even make sense to replace the msg_error macro by throwing the exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344:331,plugin,plugin,331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344,3,"['config', 'plugin']","['configuration', 'plugin']"
Modifiability,Currently there is the SOFA_EXTERNAL_DIRECTORY to add out-of-tree; directory in the compilation process. But when this directory contains; plugins those one are not handled the same way as are the one in; application/plugin. To unify that I added a SOFA_EXTERNAL_PLUGIN option and; did minimal change to the 'sofa_add_generic' macro to detect and; handle out of tree directory. So if you want to add external plugin you can use SOFA_EXTERNAL_PLUGIN; instead of SOFA_EXTERNAL_DIRECTORY. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/530:139,plugin,plugins,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/530,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Currently we have a very strict reviewing process to validate a PR for merging in master. This is very good because we now have a very stable master. But after one year I think our approach also tend to favor trivial ""micro changes"" against complex things. . Because they are hard to read, or review, or because they may eventually break something, big PRs are often rejected. This is a drama and I think that we should make en effort to facilitate much more these one because they contains real work (ie...an engineer spends several days or week that he (and is employer) is willing to offer to the community). Loosing those contributions is just a raw loss for the community. . So I think we should relax a bit our rules to allow this kind of PR to be merged.; I see several aspects:; - reviewers should adapt their ""quality level"" to the size of the PR. There is no need to be super pinchy on two or three micro-details of a 50h PR. (reviewers should instead contribute to the PR by fixing that details); - reviewers should be willing and adapt their reviewing time to the size of the PR. A 50h PR really deserve 1H of reviewing from the community. ; - we should also have a way to relax the ""stability"" constraint of our API/software to allow breaking changes. On that aspect I would like to propose to have one release a year dedicated to BREAKING changes and ship it with tools to help users to fix their scenes. Any opinion ?; @bcarrez @hugtalbot @guparan @fredroy @matthieu-nesme @JeremieA, @ChristianDuriez, @olivier-goury",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/318:806,adapt,adapt,806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/318,2,['adapt'],['adapt']
Modifiability,Cython is a de-facto standard to make ease binding between C++ and python. I use it to make 'per plugin' binding and will probably submit some in future PR. ; To ease the writing of cmake of these binding it is nice to detect if cython is installed what this file is doing. . The file is taken from (all credit should go to them):; https://github.com/thewtex/cython-cmake-example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/734:97,plugin,plugin,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/734,1,['plugin'],['plugin']
Modifiability,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2192:1169,inherit,inherite,1169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192,1,['inherit'],['inherite']
Modifiability,"Dear SOFA community and @sofa-framework/reviewers,. As you know, one of our main objectives is currently to propose a major evolution of SOFA: this is the project ""SOFA-NG"", standing for Next Gen. ; Let us give you some insight about the final plan and the steps to reach these objectives. Any feedback is welcome. ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the necessary modules; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users. ## Steps of implementation. Our concerns; - Focus on non-core components only; - Make the transition as smooth as possible; - Keep the history. Steps to follow; - Propose an architecture and a folder structure; - Decide a place for each component (incrementally); - Create the folder structure in SOFA plugins directory; - Pluginize one by one the components towards their new place. Note that this project; - will be documented, scripts will be provided to help the transition in plugins; - is compatible (can be run in parallel) with the deprecation task. ## Proposed structure. ~~https://annuel2.framapad.org/p/sofang-v0~~; EDIT: latest proposal: https://annuel2.framapad.org/p/sofang-v3. As you can see the structure is quite similar to the old namespace structure of SOFA. ; Feel free to edit/comment this pad or to propose your own version.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543:367,refactor,refactorize,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543,5,"['Plugin', 'plugin', 'refactor']","['Pluginize', 'plugins', 'refactorize']"
Modifiability,"Dear all,. Just a quick PR to change the license for a file in the Compliant plugin. The file in question is `Compliant/utils/se3.h`, which I originally licensed under LGPL 2.1 only. . All of its contributors (@matthieu-nesme, @RomainTestylier and myself) are currently working at Anatoscope, and we would like to change the license to match that of Sofa's core. . Of course, all the contributors agree with this change. The license would change from ""LGPL 2.1"" to ""LGPL 2.1-or-later"". Best regards,",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/793:77,plugin,plugin,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/793,1,['plugin'],['plugin']
Modifiability,Delete reposoitories created too early in the process of externalizing plugins. . See :; https://github.com/sofa-framework/sofa/pull/4575; https://github.com/sofa-framework/sofa/pull/4589; https://github.com/sofa-framework/sofa/pull/4573,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4669:71,plugin,plugins,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4669,1,['plugin'],['plugins']
Modifiability,Deprecate PSL plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3873:14,plugin,plugin,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3873,1,['plugin'],['plugin']
Modifiability,Deprecating option macros defined in config.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/494:37,config,config,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/494,1,['config'],['config']
Modifiability,"Deprecation warnings were displayed at every `#include <sofa/defaulttype/VecTypes.h>`; They are now emitted only when using the deprecated types ExtVec*. @fredroy Is there a reason you did not use inherited structs in the first place?. Also, could someone explain why putting the `[[deprecated]]` attribute on a `using` alias does not emit a warning only when the alias is used?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1139:197,inherit,inherited,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1139,1,['inherit'],['inherited']
Modifiability,Disabling a plugin and reconfiguring does not remove the plugin from plugin_list.conf. When writing plugin_list.conf (see runSofa CMakeLists) we use `__GlobalTargetList__` and `__GlobalTargetNameList__` global variables but these variables are based on CMake cache.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/632:12,plugin,plugin,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/632,4,"['plugin', 'variab']","['plugin', 'variables']"
Modifiability,"Do you know how to use PyCharm to run programs on Sofa compiled by yourself in Ubuntu/Windows system(sofa V21.12）? Because previously I used already compiled versions of Sofa, now I need to use a plugin Optimus (the official website only has self compiled methods).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4948:196,plugin,plugin,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4948,1,['plugin'],['plugin']
Modifiability,Double mechanism to load plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3147:25,plugin,plugins,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3147,1,['plugin'],['plugins']
Modifiability,Doxygen does not include plugins anymore,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3014:25,plugin,plugins,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3014,1,['plugin'],['plugins']
Modifiability,"Doxygen shows too much information, we should simplify it to have the important stuff first:; - inheritance diagram; - Data members; - Methods. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/995:96,inherit,inheritance,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/995,1,['inherit'],['inheritance']
Modifiability,"Due to multiple final definition error, the plugin was not compiling anymore. Virtual inheriting was necessary.; Fix warnings and templating due to last VecTypes change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1019:44,plugin,plugin,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1019,2,"['inherit', 'plugin']","['inheriting', 'plugin']"
Modifiability,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4245:109,plugin,plugin,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245,2,['plugin'],['plugin']
Modifiability,"During my Way of the Cross of fusing StiffSpring and its parent, I saw that the topological change of removing points didn't work as planned for topologySubsetIndices when there is multiple occurrence of the same element in the data. . I've fixed that and added tests. . One question is remaining though : here I kept the original mechanism using a swap of the deleted element and the last one. This is efficient in term of memory but it has the side effect of changing the indices order in the data. ; --> My question is, *is that what we want ?* Do we prefer memory/time efficiency over order coherency for this data ? Is it logical to get a random order of the vector out of a simple topological change ? This answer will change a bit the way I'll finish the refactoring in https://github.com/sofa-framework/sofa/pull/4649 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738:762,refactor,refactoring,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738,1,['refactor'],['refactoring']
Modifiability,"EDITED: Damien. Currently the SofaPython plugin is in a very poor shapes with two serious problems. The first one is a problem for developper with a lot of duplicated or invalid or in-elegant code which impact maintainability of our code base. The second problem is the lack of consistency in the way warning and errors are reported. In sofa some component rise en exception while others prints a message and return None which is very problematic to users. . In this PR we addressed these two issues through a major cleaning set of changes:; - [SofaPython]: ; * refactor the way to get get Sofa object from their PyObject equivalent (hundred of changes). ; * add dedicated easing function (unwrap, get, get_baseobject) ; * replace wherever possible copy-pasted code with these function. ; * refactor the way we report error from binding (hundred of changes) (API BREAK). ; * returning NULL with a correctly set exception type as it is the way of handling error in python. ; * when returning NULL it is mandatory to preceed the return with an exception type & message specification. This can be done either with PyExc_SetString() or Py_BaddArgument(), ; * when returning after a failing Py_ParseTuple is an exception, as the function sets itself a very ; descriptive and standardized error message.; * add macros (SP_PYERR_SETSTRING_INVALIDTYPE and SP_PYERR_SETSTRING_OUTOFBOUND) to report consistant message with PyErr_SetString ; * add SP_CLASS_METHOD_DOC() and SP_CLASS_METHOD_KW_DOC() to declare method with their docstring (if you don't know what are docstring read: http://sametmax.com/les-docstrings/); * add new bindings:; * BaseState::getSize ; * BaseMapping::applyJT; * BaseMapping::applyDJT; * Data::getCounter ; * Data::isDirty; * Node::getMass; * Node::getForceField; * STLExporter; * Sofa.unload; * Sofa.path; * Sofa.getAvailableComponents; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a stri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:41,plugin,plugin,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,4,"['maintainab', 'plugin', 'refactor']","['maintainability', 'plugin', 'refactor']"
Modifiability,"EdgesCollis=""30"" nbEdgesVisu=""40"" length=""60.0"" spireDiameter=""7"" spireHeight=""5.0""/> ; 		; <WireRestShape template=""Rigid3d"" name=""CoilRestShape"" wireMaterials=""@StraightSection @SpireSection""/>; ; <EdgeSetTopologyContainer name='meshLinesCoils' />; 		<EdgeSetTopologyModifier name='Modifier' />; 		<EdgeSetGeometryAlgorithms name='GeomAlgo' template='Rigid3d' />; 		<MechanicalObject template='Rigid3d' name='dofTopo3' />; 	</Node>; 	. 	<Node name='InstrumentCombined'>; 		<EulerImplicitSolver rayleighStiffness='0.2' rayleighMass='0.1' printLog='false' />; 		<BTDLinearSolver subpartSolve='0' verification='0' verbose='0'/>; 		<RegularGridTopology name='meshLinesCombined'; nx='180' ny='1' nz='1'; xmin='0.0' xmax='1.0'; ymin='0' ymax='0'; zmin='1' zmax='1'; 		/>; 		<MechanicalObject template='Rigid3d' name='DOFs' showIndices='0' ry='-90'/> . 		<WireBeamInterpolation name='InterpolCatheter' WireRestShape='@../topoLines_cath/catheterRestShape' radius='1' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='CatheterForceField' interpolation='@InterpolCatheter' massDensity='0.00000155'/> <!--stiff silicone E = 10000 MPa // 1550 Kg/m3-->	. 		<WireBeamInterpolation name='InterpolGuide' WireRestShape='@../topoLines_guide/GuideRestShape' radius='0.9' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='GuideForceField' interpolation='@InterpolGuide' massDensity='0.00000155'/> 	. 		<WireBeamInterpolation name='InterpolCoils' WireRestShape='@../topoLines_coils/CoilRestShape' radius='0.1' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='CoilsForceField' interpolation='@InterpolCoils' massDensity='0.000021'/> <!-- platine E = 168000 MPa // 21000 Kg/m3-->	. <BeamAdapterActionController name=""AController"" interventionController=""@IRController"" writeMode=""0""; timeSteps=""9.1 17.1 17.55 18.05 18.6 19.05 19.55 20.05 20.5 21 21.45 21.9 22.65 23.1 23.55 24.05 24.55 25 25.45 25.95 26.4 27.1 27.55 28.05 28.55 29 29.5 29.95 30.4 30.9 31.4 31.85 32.35 33.05 33.5 34 34.45 34.9 35.4 35",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4833:5611,Adapt,AdaptiveBeamForceFieldAndMass,5611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4833,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,"Embedded external libs (DiffLib, Json and STB) rely on cmake variables (resp. DIFFLIB_ROOT, JSON_ROOT and STB_ROOT) as HINTS / PATHS for find_path() in their respectives cmake find modules (FindDiffLib.cmake, FindJson.cmake and FindSTB.cmake). ; If CMAKE_FIND_ROOT_PATH is set (typically the case when cross-compiling and for my concerns when building a Conda package for Sofa), default behavior is to prepend all contained paths to the search performed by the find_path() calls. But as the *_ROOT variables are set with absolute paths, the search for these embedded libs will typically fail. ; This PR disables the use of CMAKE_FIND_ROOT_PATH for these libs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3870:61,variab,variables,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3870,2,['variab'],['variables']
Modifiability,Errors when installing the CGAL plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1389:32,plugin,plugin,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1389,1,['plugin'],['plugin']
Modifiability,Every plugin/module in SOFA should handle its dependencies and errors itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/608:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/608,1,['plugin'],['plugin']
Modifiability,"Example scenario [scene.txt](https://github.com/sofa-framework/sofa/files/2894540/scene.txt). Result is not physically plausible. Points of junction seem to be “heavier” than the others. They then gain speed, and the whole thing turn into a windmill. No crash.; You can compare the results using the commented section in the scenario of the initial post (section # This does not work / # Works). Log does not provide any useful information other than INFO messages (loaded plugins, etc). Problem exist both on master and 0057a0cfd3d3fb6b9b3cdb00ca22eae4c17ae384 (So before latest refactor of AttachConstraint).; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/940:473,plugin,plugins,473,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/940,2,"['plugin', 'refactor']","['plugins', 'refactor']"
Modifiability,"Example:. ```; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamInterpolation<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamSlidingConstraint<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering DeprecatedComponent<> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamAdapterActionController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering InterventionalRadiologyController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering SutureController<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamForceFieldAndMass<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveInflatableBeamForceField<Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Vec3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering AdaptiveBeamMapping<Rigid3d,Rigid3d> into the object factory; [WARNING] [ObjectFactory] Module name cannot be found when registering BeamLengtthMapping<Rigid3d,Vec1d> into the object factory. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4725:209,Adapt,AdaptiveBeamSlidingConstraint,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4725,6,['Adapt'],"['AdaptiveBeamController', 'AdaptiveBeamForceFieldAndMass', 'AdaptiveBeamMapping', 'AdaptiveBeamSlidingConstraint', 'AdaptiveInflatableBeamForceField']"
Modifiability,"ExecParams, ConstraintParams, MechanicalParams and VisualParams are used in a lot of different place of our code base which thus requires to #include their corresponding header causing code coupling. . This PR contains:; - the implementation of a set of ""opaque/c-api"" function to be used in header when a ExecParams (or other Params) is needed. ; the advantage of using these ""opaque"" function is that there is not includes other than the ""fwd.h"".; - the removale of all the #include<XXXXXXParams.h> everywhere is was possible, ; - the adding of the missing #include<XXXXXXParams.h> (or other include) in translation units (.cpp) or (.inl) when it was needed. . Following our guidlines, the declaration for the ""opaque functions"" are in ```sofa/core/fwd.h``` and contains:; ```cpp; namespace sofa::core; {; namespace execparams; {; SOFA_CORE_API ExecParams* defaultInstance();; }. namespace constraintparams; {; SOFA_CORE_API const ConstraintParams* defaultInstance();; SOFA_CORE_API ExecParams* asExecParams(sofa::core::ConstraintParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::ConstraintParams*);; }. namespace mechanicalparams; {; SOFA_CORE_API const MechanicalParams* defaultInstance();; SOFA_CORE_API ExecParams* asExecParams(sofa::core::MechanicalParams*);; SOFA_CORE_API const ExecParams* asExecParams(const sofa::core::MechanicalParams*);. SOFA_CORE_API SReal kFactor(const sofa::core::MechanicalParams*);; SOFA_CORE_API SReal bFactor(const sofa::core::MechanicalParams*);; SOFA_CORE_API SReal kFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal mFactorIncludingRayleighDamping(const sofa::core::MechanicalParams*, SReal d);; SOFA_CORE_API SReal dt(const sofa::core::MechanicalParams*);; }; }. namespace sofa::core::visual::visualparams; {; SOFA_CORE_API VisualParams* defaultInstance();. SOFA_CORE_API ExecParams* asExecParams(sofa::core::visual::VisualParams*);; SOFA_CORE_API const ExecParams* asExecParams(const so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1794:190,coupling,coupling,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1794,1,['coupling'],['coupling']
Modifiability,"Explicit instantiations of common `Mat` sizes led to compilation errors. For example, `z()` throws a `static_assert` for `Mat<2,2,>` because there is only 2 elements. Now, `x`, `y`, `z` and `w` are compiled conditionally. Other methods, such as `Identity`, `transpose` etc, are also concerned for squared matrices. The `static_assert` are therefore no longer useful. . `Identity` has been changed so it is `static constexpr` and it returns a reference. So there is no need to compute the identity matrix each time it is called. `s_identity` is now deprecated. The static variable is now included in the `Identity` method. It is better for static initialization fiasco and required for a `constexpr` context. Also, `s_identity` does not make sense for rectangular matrices. Since it is not possible to conditionally add a class member, it is hidden in the conditionally compiled method `Identity`. In `fixed_array`, the `operator<` is moved out of the class. This allows to compile this operator only when used, and not in explicit instantiations. This is necessary because the operator on `fixed_array<Vec3>` is not implemented (and does not make sense). The 3x3 matrix product and the `multTranspose` operation are specialized for a speedup. https://github.com/alxbilger/SofaBenchmark was used. Results show that this implementation is closer to the Eigen implementation. Unit tests are added. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/302]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280:571,variab,variable,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280,1,['variab'],['variable']
Modifiability,"ExternalBehaviorModel depends on SofaGraphComponent (https://github.com/sofa-framework/sofa/tree/master/applications/collections/deprecated/modules/SofaGraphComponent) which is deprecated.; ExternalBehaviorModel is not deprecated, so we have a non-deprecated plugin depending on a deprecated plugin.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3319:259,plugin,plugin,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3319,2,['plugin'],['plugin']
Modifiability,ExternalBehaviorModel plugin depends on a deprecated plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3319:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3319,2,['plugin'],['plugin']
Modifiability,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526:16,plugin,plugin,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526,3,"['config', 'plugin']","['configurations', 'plugin']"
Modifiability,"Extract the LMConstraint-related codes from SOFA and store it into a plugin. Fix #976. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659:69,plugin,plugin,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659,1,['plugin'],['plugin']
Modifiability,FFMPEG executable path should be part of the SofaVideoRecorderManager (GUI) and a ffmpeg.ini should be used in `config/` to remember latest path used. See https://github.com/sofa-framework/sofa/pull/1177#issuecomment-547846519,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1205:112,config,config,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1205,1,['config'],['config']
Modifiability,FIX : for compilation on Visual Studio 2015 with QWT plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/935:53,plugin,plugin,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/935,1,['plugin'],['plugin']
Modifiability,FIX allows to extend VTKExporter in a plugin (for quadratic meshes for example). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/309:14,extend,extend,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/309,2,"['extend', 'plugin']","['extend', 'plugin']"
Modifiability,FIX compilation for LeapMotion plugin due to moved files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296:31,plugin,plugin,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296,1,['plugin'],['plugin']
Modifiability,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4354:41,variab,variable,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354,1,['variab'],['variable']
Modifiability,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1881:80,Parameteriz,Parameterized,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881,1,['Parameteriz'],['Parameterized']
Modifiability,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2259:294,inherit,inherits,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259,2,['inherit'],['inherits']
Modifiability,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1944:120,maintainab,maintainability,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944,2,"['config', 'maintainab']","['configuration', 'maintainability']"
Modifiability,"Factorize default plugin list filtering and review which plugin are removed from the default list. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4748:18,plugin,plugin,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4748,2,['plugin'],['plugin']
Modifiability,"File:; /sofa-master/applications/plugins/SofaOpenCL/OpenCLProgram.cpp line 156; Code:; void OpenCLProgram::createProgram(std::string *source,std::map<std::string,std::string> *types); {; std::string s;; std::map<std::string,std::string>::iterator it; // <-- unused; s = createTypes(types);; s += *source;; createProgram(&s);; }",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4956:33,plugin,plugins,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4956,1,['plugin'],['plugins']
Modifiability,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4320:203,config,config,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320,1,['config'],['config']
Modifiability,"First effort to evaluate the relevance and amount of effort necessary to remove / replace the DataTypeInfo API in SOFA's core. So far, the blocking points I see are the following:. - DataTypeInfo<T>::name() -> Not substituable. we need some form of RTTI, at least for the type name. decoding the typeid() is not an option, as it won't translate well for complex template types (simple example with std::string -> basic_string<char,char_traits<char>,allocator<char>>); - ValidInfo: -> set to false if no template specialization exists for DataTypeInfo<T> (guarantees that data from the structure have been filled and aren't the defaults from AbstractTypeInfo. Non-substituable, works by pair with name(). - DataTypeInfo<T>::size() / DataTypeInfo<T>::Size -> can be replaced in some cases, but not all:; - In most cases in Sofa, we don't know what type we are manipulating, but we are almost always manipulating structures that inherit fixed_array. That makes it possible to substitute DataTypeInfo<T>::Size with T::total_size inherited from fixed_array. Would require an enable_if_t<is_fixed_array> to make sure...; - Sometimes, T is a scalar value for instance, in which case there isn't any total_size to query. It's the case in Vec.h for single scalar value vector operations (multScalar, divScalar, etc.), where the size is used in static_asserts to guarantee we are manipulating a single scalar quantity. I used SFINAE as substitution, but this makes code hard to read for most non-robot people. - in BaseData, it is used in updateFromParentValue(), along with FixedSize(), Integer / Scalar / Text / get/setTextValue, get/setScalarValue, get/setIntegerValue to resize and copy data from the parent value. BaseData, of course, can be templated on any kind of data (Scalars, text, Containers, complex structures...); ; - CopyOnWrite: Used in Data.h to generate the getters / setters for Data fields (beginEdit, operator= etc.). - ZeroConstructor, SimpleCopy: In SOFA's core, used exclusively in vect",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1385:926,inherit,inherit,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1385,2,['inherit'],"['inherit', 'inherited']"
Modifiability,"First plugin to be moved out, as detailed in issue #1442 ; Plugin is now located here: https://github.com/sofa-framework/InvertibleFVM. All feedback are more than welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1443:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1443,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"First step for the change of ConstraintMatrix (and deprecate MapMapSparseMatrix); [CompressedRowSparseMatrixConstraintMatrix](https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrixConstraint.h) in [ISSofa](https://github.com/InSimo/ISSofa) derived from [CompressedRowSparseMatrix](https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h) so we need to bring their version of CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/mas",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:800,inherit,inheriting,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,1,['inherit'],['inheriting']
Modifiability,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2073:330,refactor,refactor,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073,2,['refactor'],['refactor']
Modifiability,"First steps for a consistent, uniformed and centralized configuration storage. This PR adds the ability to retrieve the current local config folder for the user. . These return respectively (local account is `fred`):; - Linux:; ```; getUserLocalDirectory(): /home/fred/.config; getSofaUserLocalDirectory(): /home/fred/.config/SOFA; ```. - macOS:; ```; getUserLocalDirectory(): /Users/fred/Library/Application Support; getSofaUserLocalDirectory(): /Users/fred/Library/Application Support/SOFA; ```; - Windows:; ```; getUserLocalDirectory(): C:/Users/Fred/AppData/Local; getSofaUserLocalDirectory(): C:/Users/Fred/AppData/Local/SOFA; ```. `getSofaUserLocalDirectory()` creates also the directory if it is not created yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875:56,config,configuration,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875,4,['config'],"['config', 'configuration']"
Modifiability,"Fix #1597; Final PR for the modularization of SofaCommon. . SofaCommon is going to be a collection (set of plugins).; So for now, it wont be breaking to do; find_package(SofaCommon); and; target_link_library(blabla PUBLIC SofaCommon). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1609:107,plugin,plugins,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1609,1,['plugin'],['plugins']
Modifiability,"Fix #1667 , #1661 and much more... # TL;DR; Sofa.Config is a new module containing all the configuration necessary for compiling the SofaFramework and the subsequent modules.; It allows to spread efficiently all the flags/config/whatever to the cmake modules using it. # Description; A lot of CMake configuration/flags are spread everywhere in the code base: root CMakefile, Soframework CMakefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; _____",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:49,Config,Config,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,7,"['Config', 'config', 'plugin']","['Config', 'config', 'configuration', 'plugin']"
Modifiability,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1888:493,plugin,plugins,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888,2,"['Config', 'plugin']","['Config', 'plugins']"
Modifiability,"Fix #632 . The plugin list was never updated if we removed a plugin in the cmake configuration.; Plus, it was possible to append several identical targets. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/645:15,plugin,plugin,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/645,3,"['config', 'plugin']","['configuration', 'plugin']"
Modifiability,"Fix 2 missing deps in Flexible due to pluginization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1590:22,Flexible,Flexible,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1590,2,"['Flexible', 'plugin']","['Flexible', 'pluginization']"
Modifiability,Fix 4 crashing (timeout) scenes on Windows CI:; - GenerateCylinder; - GenerateGrid; - Flexible: linearAffine_flex331.scn; - Compliant: FEM-donuts.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/641:86,Flexible,Flexible,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/641,1,['Flexible'],['Flexible']
Modifiability,"Fix Zlib find errors by adding `<plugin>/lib `and `<plugin>/bin` in `CMAKE_LIBRARY_PATH` for each relocatable plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708:33,plugin,plugin,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708,3,['plugin'],['plugin']
Modifiability,"Fix a peculiar bug where:; - one wants to compile a project out-of-tree,; - on WIndows,; - this project needs Sofa.GL; - Sofa.GL is find_package()'d first. As GLEW config on windows is special (windeppack stuff), its configuration is set-up in Sofa.Helper.; But the cmake config file for out-of-tree (Sofa.GLConfig.cmake.in) was trying to find GLEW before Sofa.Helper, hence cmake could not configure the projet and was yelling about not finding GLEW.; (got the case with registration plugin). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3098:164,config,config,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3098,5,"['config', 'plugin']","['config', 'configuration', 'configure', 'plugin']"
Modifiability,Fix for SofaImplicitField and SofaVolumetricData plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/422:49,plugin,plugin,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/422,1,['plugin'],['plugin']
Modifiability,"Fix issue #7 . Summary: drawQuad needed a call to glBegin(GL_QUADS) to draw a quad, defeating the purpose to avoid to use explicitly OpenGL API. Same problem with drawTriangle and drawPoint,; I suppose that these functions, at the beginning, was just needed to factorize OpenGL code (but still you needed to use OpenGL with it). ; Now that we remove the explicit calls, those functions should not be accessible outside.; But a few code in Sofa (and maybe plugins?) are using those calls to draw one primitive. Finally, what have been done:; - remove public visibility to those functions and rename it to internalDrawXXXX (where XXXX is point, triangle, quad); - keep the old calls to keep compatibility; - add addLine to keep consistency with the other primitives. I am wondering if in the future (or just right now), the drawXXX (drawing ONE primitive) should be removed and force users to use the drawXXXXs with a vector (and oblige user to build a std::vector with ONE primitive. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/293:455,plugin,plugins,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/293,1,['plugin'],['plugins']
Modifiability,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2261:36,config,config,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261,1,['config'],['config']
Modifiability,"Fix mess in *Config.cmake.in and some dependencies from modularization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1570:13,Config,Config,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1570,1,['Config'],['Config']
Modifiability,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1830:4,plugin,plugin,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830,1,['plugin'],['plugin']
Modifiability,"Fix regression (appeared when boost was supposed to be removed from Sofa).; -> Plugins _not able to find Boost automatically_ failed to compile (because it needs boost to compile obviously); ; The problem was coming on Windows mainly, as boost are often installed in the system directories on Unix system. And few changes were added to make boost's CMake part more consistent. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/421:79,Plugin,Plugins,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/421,1,['Plugin'],['Plugins']
Modifiability,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4570:69,config,config,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570,4,"['config', 'variab']","['config', 'variables']"
Modifiability,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2246:25,variab,variables,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246,1,['variab'],['variables']
Modifiability,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4326:37,variab,variable,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326,1,['variab'],['variable']
Modifiability,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2196:77,variab,variable,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196,1,['variab'],['variable']
Modifiability,Fix: ; - Dll export + Add config file; - Stop scheduler only if thread has successfully started. Enhancements:; - Add: specific method to handle tool buttons; - Add: send script event when button are used.; - Add: option to not automatically start tool at init but manually start it through a method call. (start at init by default); - Update: m_errorDevice is not anymore a bool but store the HD_DEVICE_ERROR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/786:26,config,config,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/786,2,"['Enhance', 'config']","['Enhancements', 'config']"
Modifiability,"Fixed this error while trying to configure a out-of-tree compilation of a plugin depending on SofaGuiQt. `CMake Error at sofa/install/lib/cmake/SofaGuiQt/SofaGuiQtConfig.cmake:49 (find_package):; Found package configuration file:. sofa/install/plugins/SofaMiscForceField/lib/cmake/SofaMiscForceField/SofaMiscForceFieldConfig.cmake. but it set SofaMiscForceField_FOUND to FALSE so package; ""SofaMiscForceField"" is considered to be NOT FOUND. Reason given by; package:. The following imported targets are referenced, but are missing:; SofaBaseMechanics`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:33,config,configure,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,4,"['config', 'plugin']","['configuration', 'configure', 'plugin', 'plugins']"
Modifiability,"Fixed two things : ; - Compilation error in CudaTriangular[..]; - Undefined symbol while loading the plugin in CudaConstant[..] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2634:101,plugin,plugin,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2634,1,['plugin'],['plugin']
Modifiability,"FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value warning; - VisualModelImpl: fix wrong object (triangles) called when adding quads in handleTopologyChange(); - VoxelGridLoader: `std::unique` result was not used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:1929,variab,variables,1929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['variab'],['variables']
Modifiability,Fixes #561 . This PR does the same work as #564 but using the existing `Utils::getSofaPathPrefix()` function and avoiding heavy macro creation in root CMakelists.; I also removed all the PluginRepository and DataRepository re-inits. Sorry @ErwanDouaille I did not know this function before :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/568:187,Plugin,PluginRepository,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/568,1,['Plugin'],['PluginRepository']
Modifiability,Fixing some components linkage on Windows; Needed for ModelOrderReduction plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/910:74,plugin,plugin,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/910,1,['plugin'],['plugin']
Modifiability,Flexible smoothing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/76:0,Flexible,Flexible,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/76,1,['Flexible'],['Flexible']
Modifiability,Flexible strain smoothing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/75:0,Flexible,Flexible,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/75,1,['Flexible'],['Flexible']
Modifiability,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1799:112,coupling,coupling,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799,1,['coupling'],['coupling']
Modifiability,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2264:814,plugin,plugin,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264,1,['plugin'],['plugin']
Modifiability,"Following #2368 . Some projects (mainly tests) are using find_package(SofaBase) which still uses the project SofaEigen2Solver for compatibility purpose. This leads to a few prints in the cmake output about the SofaEigen2Solver being deprecated.; Of course this is a bit slightly annoying to read the cmake output. This PR limits the deprecation display to once a cmake configuration pass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2386:369,config,configuration,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2386,1,['config'],['configuration']
Modifiability,"Following #2777, `buildStiffnessMatrix` and `buildDampingMatrix` are implemented for `FastTetrahedralCorotationalForceField`. I took the opportunity to simplify the code and clean it compared to `addKToMatrix`. I also changed the example scene, as it was not really functional. Now, the scene is the same than `TetrahedronFEMForceField`. I also added the possibility to define the method as `small`, for consistency with `TetrahedronFEMForceField`. At some point, this should be refactored with an OptionGroup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3929:479,refactor,refactored,479,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3929,1,['refactor'],['refactored']
Modifiability,"Following #4876 (but not depending on it) this PR proposes to define a gravity-inheritance from the parent node when the data gravity is not set. A test is added but does not work due to SimpleAPI not taking into account data set in nodes.; Currently under investigation (this is why I draft this PR). ---. Suggestion : **TODO after this PR**; - Remove the class Gravity and use one single way to play with gravity : the associated data in the nodes; - Apply the change in all scenes using the Gravity component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4910:79,inherit,inheritance,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4910,1,['inherit'],['inheritance']
Modifiability,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2042:894,plugin,plugin,894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042,1,['plugin'],['plugin']
Modifiability,Following https://github.com/sofa-framework/sofa/pull/4420. A good idea would be to centralize the regression-tests files in Regression plugin. . This would require multiple changes like being able to find the path of all compiled plugins to find the scenes and the regression references when they are inside of the plugin instead of Regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4424:136,plugin,plugin,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4542:254,config,configuration,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542,2,"['Config', 'config']","['Configuring', 'configuration']"
Modifiability,"Following recent changes, when compiled externally (out-of-tree), plugin libraries are not generated in the `plugin/` folder of SOFA build repository anymore, but in a dedicated `external_directories` folder. However this folder was not included in the reference folders (defined in `FileRepository.cpp`) in which the RequiredPlugin component searches for plugins at run time. This is not necessarily an issue when loading manually the plugins using the GUI's plugin manager, but it doesn't work when launching a scene which requires an external plugin in batch mode. The issue was pointed out recently by @VannesteFelix . This commit simply add `external_directories/` in the reference folders to search for plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2927:66,plugin,plugin,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2927,7,['plugin'],"['plugin', 'plugins']"
Modifiability,"Following the remarks we got from the SOFA conda package PR on conda-forge (https://github.com/conda-forge/staged-recipes/pull/23085), we have some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:756,plugin,plugins,756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Following the rise of discussions about further using Eigen inside SOFA, this PR aims at standardizing its inclusion in the framework. Right now, SOFA automatically pulls a fixed version of Eigen (3.2). It also install it along with SOFA, which is a big problem when an external program or library tries to compile with both SOFA and another version of Eigen. . This PR removes the automatic pull of Eigen, and instead rely on the standard find_package(Eigen3) which is available in almost all distributions via the system package manager (apt, dnf, pacman, etc), for instance:. <table>; <tr><td>Debian 9</td><td>Eigen 3.3.2</td></tr>; <tr><td>Debian 10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Ubuntu 18.04</td><td>Eigen 3.3.4</td></tr>; <tr><td>Ubuntu 19.10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Fedora 29</td><td>Eigen 3.3.5</td></tr>; <tr><td>Fedora 30-31</td><td>Eigen 3.3.7</td></tr>; </table>; ; Right now, this PR compiles with all of the previous distributions (I've tested it with Docker by simply installing eigen3-devel and compiling Sofa). ~~However, there is a faulty test with Eigen > 3.2: the **compliant_test** from the Compliant plugin. It seems to come from the Assembly visitor of the plugin, which relies a lot on Eigen to build the system matrices. I'll have a look at it in the next days, but if someone have an idea...~~ ; Found the nasty bug at 53dd4f5 - memcopy is _dangerous_ !. Everything ~~else~~ seems to be fine with recent versions of Eigen. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281:1146,plugin,plugin,1146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281,2,['plugin'],['plugin']
Modifiability,"Following work with @ChristianDuriez at STC6, here is a way to fix the geomagic plugin scenes and recover behavior from before the PR on freeAnimationLoop and lambda function. . Also add:. - a second RigidSkull.scn example to show another way to map the haptic tool.; - A small bool to know if the haptic tool is in contact with an object. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/858:80,plugin,plugin,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/858,1,['plugin'],['plugin']
Modifiability,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2084:354,plugin,plugin,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084,1,['plugin'],['plugin']
Modifiability,"For Regression-Test to be able to test scenes with name like: EulerExplicitSolver-diagonal.scn . Solves error:; ```; [ FATAL ] /data/Softwares/sofa/src/master/extlibs/gtest/include/gtest/internal/gtest-param-util.h:569:: Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid, in /data/Softwares/sofa/src/master/applications/projects/Regression/Regression_test/Regression_test.cpp line 224; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1265:268,Parameteriz,Parameterized,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1265,1,['Parameteriz'],['Parameterized']
Modifiability,"For now, the LCPConstraintSolver only allows to use one _mu_ friction coefficient common for all object interactions.; It would be nice to adapt the API to allow for one _mu_ for each object.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2014:139,adapt,adapt,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2014,1,['adapt'],['adapt']
Modifiability,"For the CI:; - ignore scene using SofaCUDA plugin; - reduce the number of iterations for CPU version as they are all heavy simulations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2616:43,plugin,plugin,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2616,1,['plugin'],['plugin']
Modifiability,"For the moment we cannot use the component MechanicalMatrixMapper if the force field and mass are in the same component (for example AdaptiveBeamForceFieldAndMass from the plugin BeamAdapter). This PR just adds the option. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3173:133,Adapt,AdaptiveBeamForceFieldAndMass,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3173,2,"['Adapt', 'plugin']","['AdaptiveBeamForceFieldAndMass', 'plugin']"
Modifiability,"FromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ld: symbol(s) not found for architecture x86_64; ```. This file is only included if the image plugin is activated, thus making this error appear only in specific cases. Moreover, since CGAL seems not tested on CI, this error might be quite old, as it has passed under the radar so far. It has been observed on OS X, and Linux. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:2242,plugin,plugin,2242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,1,['plugin'],['plugin']
Modifiability,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1885:92,Plugin,Plugin,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885,3,"['Plugin', 'plugin']","['Plugin', 'PluginExample', 'plugins']"
Modifiability,Further to PR #1269 warnings were added in the core of SOFA.; This PR fixes these warnings due to deprecated formats and unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1329:128,variab,variables,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1329,1,['variab'],['variables']
Modifiability,"Further to https://github.com/sofa-framework/sofa/pull/4814, the use of RenamedData should be extended to all RENAMED data. Along this change, the `setParent()` function should be replaced with `setOriginalData()`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4845:94,extend,extended,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4845,1,['extend'],['extended']
Modifiability,"GKRAND support allows the portability of random number generation across different architectures, hence a portable matrix factorization. It is supposed to fix the tests in https://github.com/sofa-framework/sofa/pull/3050. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3072:26,portab,portability,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3072,2,['portab'],"['portability', 'portable']"
Modifiability,Global compilation flags are not passed to subsequent plugins (e.g SofaPython3),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1661:54,plugin,plugins,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1661,1,['plugin'],['plugins']
Modifiability,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2302:50,config,configuration,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302,2,['config'],"['config', 'configuration']"
Modifiability,"Greetings,. 	I am experiencing a problem with Geomagic plugin. Actually it does work fine on its own, but the problem begins when I add the SofaPython3 plugin. After that, the first 3 angle values (first 3 joints from the base) of the simulation model of geomagic haptic device does not work. However, last 3 passive joints works fine. And in neither case I get an error message.; 	I was wondering if anyone else experience the same problem? Or is there a solution?. 	Also is there any way to use the haptic device with a python code for Sofa. Because our aim is to use geomagic haptic devices as the masters for a soft robot that is simulated via SoftRobots plugin.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3185:55,plugin,plugin,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185,3,['plugin'],['plugin']
Modifiability,"Greetings,. I have built SOFA v21.12 without any error massages, on Ubuntu 18.04. And it works fine without plugins. However when I try to run examples for SoftRobots, I encounter the same problems as previously described is following topics, also tried the solutions that is described there. (Also tried to build on Ubuntu 20.04 but the result is the same). https://www.sofa-framework.org/community/forum/topic/error-couldnt-import-objects-from-stlib3-physics-rigid/. https://www.sofa-framework.org/community/forum/topic/issues-with-running-examples-on-sofa_v20-12-02_defrost_linux/. Has this problem been solved?. Moreover, my colleague also built SOFA and the plugins on Ubuntu 20.04, then sent me the built version of his. I have re-installed Ubuntu 20.04 with his user name, and surprisingly the plugins worked without any errors. Therefore, I am assuming there might be a mistake while I use Cmake. However, as me and my colleague discussed, we have followed exactly the same method but the results were different. I get the following error massage when I try to run SOFA with my build:. `[ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file '....path/to/file.../SoftRobots/docs/tutorials/FirstSteps/details/sofapython3/step4.py3scn'. ; Python exception: ; ImportError: cannot import name 'Floor' from 'stlib3.physics.rigid' (/....path/to/file...../sofa/build/lib/python3/site-packages/stlib3/physics/rigid/__init__.py). At:; step4.py3scn(2): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(843): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /usr/lib/python3.8/imp.py(171): load_source; /usr/lib/python3.8/imp.py(234): load_module; <string>(3): <module>; `",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2754:108,plugin,plugins,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2754,3,['plugin'],['plugins']
Modifiability,HI guys. several users are giving us feedback about the RequiredPlugin which is not working.; The plugin (dll) is not loaded and the associated components obviously can't be created. Any hints ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/558:98,plugin,plugin,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/558,1,['plugin'],['plugin']
Modifiability,"Hard to do some cleaning in CMakeLists without touching all SOFA files!. This PR contains:. ------------------------. Default properties for targets calling sofa_generate_package or sofa_install_targets; - include_directories:; - BUILD_INTERFACE: the directory given in INCLUDE_SOURCE_DIR or ""${CMAKE_CURRENT_SOURCE_DIR}/.."" (bad but necessary for old modules); - BUILD_INTERFACE: ""${CMAKE_BINARY_DIR}/include/${PROJECT_NAME}""; - INSTALL_INTERFACE: ""install"" (if relocatable plugin) or ""install/${PROJECT_NAME}""; - DEBUG_POSTFIX: ""_d""; - VERSION: Sofa_VERSION. ------------------------. Cleaning of config.h mechanism (consistency with all other SOFA modules); - deprecate headers not following the ""config.h"" naming convention; - sofa/core/core.h -> sofa/core/config.h; - sofa/defaulttype/defaulttype.h -> sofa/defaulttype/config.h; - sofa/helper/helper.h -> sofa/helper/config.h; - sofa/simulation/simulationcore.h -> sofa/simulation/config.h; - SofaSimulationCommon/common.h -> SofaSimulationCommon/config.h; - SofaSimulationGraph/graph.h -> SofaSimulationGraph/config.h; - SofaSimulationTree/tree.h -> SofaSimulationTree/config.h; - sofa/gui/SofaGUI.h -> sofa/gui/config.h; - sofa/gui/qt/SofaGuiQt.h -> sofa/gui/qt/config.h; - centralize config.h call chain on sofa/config.h; - sofa/helper/system/config.h is now useless; -> WARNING: maybe not a good idea, review needed here; - dispatch all SOFA_BUILD_* macros from packages' config.h towards modules' config.h (good for future modularizations). ------------------------. Moving SofaGui modules into ""modules"" directory + cleaning their source trees. ------------------------. Every package is now also a library. Work started by @fredroy in #1314, 3 packages remained; - SofaFramework; - SofaGui; - SofaSimulation. ------------------------. Cleaning source trees to eliminate some "".."" include directories; (files move but includes stay the same); - SofaExporter; - SofaGuiCommon; - SofaGuiQt; - SofaHeadlessRecorder; - SofaMiscCollision. ------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397:475,plugin,plugin,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397,8,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"HeadlessRecorder is, as its name suggest, a new gui plugin who allow users to records sofa visualisation without any windows (batch only). ⚠ Linux only ⚠. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/537:52,plugin,plugin,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/537,1,['plugin'],['plugin']
Modifiability,"HeadlessRecorder is, as its name suggest, a new gui plugin who allow users to records sofa visualisation without any windows (batch only). ⚠ Linux only ⚠. https://github.com/sofa-framework/sofa/issues/537. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538:52,plugin,plugin,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538,1,['plugin'],['plugin']
Modifiability,"Hello @sofa-framework/reviewers . Yes, we are taking SOFA-NG project up again :tada: ; Thanks to @fredroy we now have at least 1 engineer working on this project every day :+1:; This issue is meant to be the main follow-up of the project, complementary to #543 (still a good read). ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the modules we want; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users; - cleaning the applications/plugins repository. ## Tasks. Here are the main steps of the project.; Tasks NG1 and NG2 can be done in parallel if we work ""bottom->top"" in NG1 and ""top->bottom"" in NG2.; Task NG3 can also be started in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-pac",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:334,refactor,refactorize,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,3,"['plugin', 'refactor']","['plugins', 'refactorize']"
Modifiability,"Hello all,. This PR somewhat simplifies the creation and handling of `PythonScriptControllers` from python scenes. Here's the TL;DR version:. ```python; import Sofa ; class Script(Sofa.PythonScriptController): pass. def createScene(node):; # now you can do; script = Script(node, 'bar', egg = 'spam'). # the old behavior still works:; old = node.createObject('PythonScriptController', filename = '', classname = 'Script'); ```. Now for the details:. ## Existing approach; The current approach is to use ; ```python; node.createObject('PythonScriptController', filename = '', classname = 'Script'); ```; which has several drawbacks:; - The returned object does not point to the control object, but to the component wrapper. This makes it complicated to pass data around at scene creation (people generally resort to `global` variables for this purpose).; - If `filename` is non-empty, the corresponding file is (re)loaded, causing all sorts of *interesting* side-effects. If you ever had to struggle with these, you know what I mean.; - If `filename` is empty, the control class has to lie in the `__main__` namespace; - It is quite verbose; - It just feels plain wrong *not* to create python objects directly when called from python. It does have a few advantages though:; - It does not require any `PythonScriptController`-specific code for object creation,; - It enables the creation of `PythonScriptController` instances from XML scenes . ## Current workaround; There is a workaround class `SofaPython.script.Controller` that somewhat fixes some of the issues by implementing `__new__` in a derived Python class, intercepting and returning the control instance and optional initialization arguments, but overall it feels more like a hack. ## This PR. This PR simply provides a clean binding for instance creation. You need to provide a node as a first argument, but otherwise Controllers now act as any other python object. The old behavior still works, should you need it. ```python; ; import Sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283:824,variab,variables,824,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283,1,['variab'],['variables']
Modifiability,"Hello all,. While trying to disable some unused components/plugins from my setup in order to reduce compilation times, I discovered that SceneCreator depends on many base plugins, and that most test plugins depend on SceneCreator. This design makes it *really* hard to disable any plugin if somebody wants to compile tests for the remaining enabled plugins. I guess the ""correct"" way would be to split the SceneCreator features in each plugin so that you never pay for what you don't use (we're doing c++ after all :-). Any idea/feedback?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417:59,plugin,plugins,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417,6,['plugin'],"['plugin', 'plugins']"
Modifiability,"Hello developers of the Sofa framework, I found a tearing example that I need on this forum, but it is based on Sofa v21.06. Could you advise me on how to rewrite it for Sofa v23.06? Is there an API comparison chart or something similar that could assist me? Thank you so much for assisting me. https://github.com/alireza-montazeri/SofaTearing",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4461:155,rewrite,rewrite,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4461,1,['rewrite'],['rewrite']
Modifiability,"Hello everyone, . i'm new to SOFA. I built succesfully SOFA from source on windows 11. Using cmake-gui, i selected plugin_sofapython3 to be added. the configuration and compilation went good, without any errors, but when i check the plugins list sofapython3 is not there and, after running runSofa, i cannot open a python scene in sofa. . Does someone have any ideas why this happens?. thank you very much!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252:151,config,configuration,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252,2,"['config', 'plugin']","['configuration', 'plugins']"
Modifiability,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2021:196,config,configure,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021,4,"['Config', 'config', 'plugin']","['Config', 'config', 'configure', 'plugin']"
Modifiability,"Hello, ; I'am having troubles compiling the SofaCUDA plugin; -Ubuntu 22.04; -SOFA 22.12; -gcc 11; -nvcc version: ; ```; nvcc: NVIDIA (R) Cuda compiler driver; Copyright (c) 2005-2023 NVIDIA Corporation; Built on Fri_Jan__6_16:45:21_PST_2023; Cuda compilation tools, release 12.0, V12.0.140; Build cuda_12.0.r12.0/compiler.32267302_0; ```. ; I get this error:; ` error: identifier ""umul24"" is undefined`; from:; `.../applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaContactMapper.cu(88)`. I tried to solve replacing this line:; `map[curTestEntry.newIndex + threadIdx.x] = umul24(curTestEntry.elem1,nbPointsPerElem) + c.p1;`; with this line:; `map[curTestEntry.newIndex + threadIdx.x] = curTestEntry.elem1*nbPointsPerElem + c.p1;`. but I get even more errors now, so I thought the plugin was written for a specific cuda version. Is that correct? Should I change my cuda toolkit version together with the gcc version?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579:53,plugin,plugin,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Hello, After following the tutorial compilation successfully, when I run ./runSofa, I get an error：; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs ./runSofa.; I tried to add this plugin to SOFAv20.12, I tried force dimension omega.6 and sigma.7 respectively, but when starting the scene, the device only moved slightly at the beginning of the animation, no matter how I manipulated it afterwards , cannot use omega.6/sigma.7 devices.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497:110,Plugin,PluginManager,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497,3,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin']"
Modifiability,"Hello, After following the tutorial compilation successfully, when I run ./runSofa, I get an error：; `[ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory`.; When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs ./runSofa.; I tried to add this plugin to SOFAv20.12, I tried force dimension omega.6 and sigma.7 respectively, but when starting the scene, the device only moved slightly at the beginning of the animation, no matter how I manipulated it afterwards , cannot use omega.6/sigma.7 devices.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3496:111,Plugin,PluginManager,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3496,3,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin']"
Modifiability,"Hello,. I have been trying to run the CGAL Plugin with sofa, my aim is to create a tetrahedral mesh from a surface mesh, and then experiment that for Haptic Rendering within Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:43,Plugin,Plugin,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,6,"['Plugin', 'plugin']","['Plugin', 'PluginRepository', 'plugin', 'plugins']"
Modifiability,"Hello,. I saw that several PRs are in work that move potentially lots of source files into plugins (#396, #407, #408, #477).; These types of changes can be very painful for everyone looking at file histories and/or not working exclusively on master:; - all existing branches / PRs are very likely to cause conflict. Yes git does its best to try to match files in different paths but this is not reliable at all. Example issues: it won't move files that are created in the same directories in other branches/PRs, you have to be expert in all the rename match heuristics within git in order to be able to use merge with 10s of commits with mismatching file hierarchies (and there is none that I know of that will work well enough to be always used); - the history of all affected files will be polluted by this move. Example: it is tricky to know the history of all the SofaKernel files before May 2016 [(example)](https://github.com/sofa-framework/sofa/commits/master/SofaKernel/framework/sofa/core/BaseState.h) (can someone remind me what we gained by this massive move? I would like to know because that's the number-one time-waster on our end for merges/history tracking). So I would like to know if those considerations were understood before doing this once again ?. And as a counter-proposal, for discussion, that you are free to ignore, I would suggest a 3 steps approach :. 1. First only change the CMake scripts / per-lib main header/cpp to convert them to plugins WITHOUT moving the actual source files; 2. Document the proposed new directory hierarchy, propose it and wait for feedback from enough community members; 3. Once there is an agreement on the hierarchy, apply it via a commit that does not change anything else (changes in cmake scripts should be done as a separate commit, to ease solving later merge/conflict issues). And regarding point 2, instead of moving everything in `applications/plugins` that is only there because of a bad decision 10 years ago (it was simpler as we ha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:91,plugin,plugins,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugins']
Modifiability,"Hello,. I think it would be great (if not mandatory) to have in this release of Sofa new features and not only bug fixes. . To make that possible I suggest to use the SOFA_WITH_EXPERIMENTAL_FEATURES options to conditionally activate plugins or component that are in their way for integration but are not considered as stable enough or that may be subject to API change in 18.06. Those should print a warning message in their init function if used. . If agreed on the principle of allowing EXPERIMENTAL new components in 17.12 I have the following features/component to propose (all are located in plugins):; - In plugin/PSL:; - the PSL scene file format; - In plugin/SofaImplicitField: ; - CustomField (to implement implicit field in python and/or cython); - SurfaceMeshFromImplicitField (to generate a surface mesh from an implicit field using a marching cube); - ImplicitFieldViewer (to visualize the implicit surface); - python/difigeom (a complete library to make complex procedural geometry using ; distance field and python+cython) ; - In plugin/CGAL: ; - SurfaceMeshFromImplicitField (generate a surface mesh from an implicit field using CGAL); - VolumeMeshFromImplicitField (generates a tetrahedral mesh from implicit field using CGAL) . And you ? Do you have things that you would like to have integrated ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/517:233,plugin,plugins,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/517,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"Hello,. I try to use SofaPython3 with sofa (master branch) on windows. I use MSVC compiler. I did the following :. 1. Installed pybind11 via pip3.9.; 2. set CMake variable `pybind11_DIR` = `C:/Program Files/Python39/Lib/site-packages/pybind11/share/cmake/pybind11`.; 3. set CMake variable`SOFA_FETCH_PYTHON3` to true.; 4. set CMake variables `PLUGIN_SOFAPYTHON3`, `PLUGIN_SOFAPYTHON3_BINDINGS`, `PLUGIN_SOFAPYTHON3_DOCS` and `PLUGIN_SOFAPYTHON3_EXAMPLES` to true.; 4. 'Configure' then 'Generate' using CMake's GUI.; 5. Build with MSVC -> success (release mode). I encounter a segfault error when loading SofaPython3.dll via the Sofa GUI : Edit>Plugin Manager...>Add...>SofaPython3.dll.; --> **exception Microsoft C++ : pybind11::error_already_set**. Do you have any idea what is causing this error ?. Thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672:163,variab,variable,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672,5,"['Config', 'Plugin', 'variab']","['Configure', 'Plugin', 'variable', 'variables']"
Modifiability,"Hello,. I would like to discuss a design to represent mesh loaded from a file that contains several child meshes. For example FBX or COLLADA can now be loaded in Sofa using the SofaAssimp plugin but for the moment all child meshes are merged in one big mesh.; We loose the information of Bones etc.. . The API from sofa::core::loader::MeshLoader doesn't support several mesh for the moment. . ```; // Point coordinates in 3D in double.; Data< helper::vector<sofa::defaulttype::Vec<3,SReal> > > d_positions; ///< Vertices of the mesh loaded. //Tab of 1D elements; Data< helper::vector< Polyline > > d_polylines; ///< Polylines of the mesh loaded. // Tab of 2D elements composition; Data< helper::vector< Edge > > d_edges; ///< Edges of the mesh loaded; Data< helper::vector< Triangle > > d_triangles; ///< Triangles of the mesh loaded; Data< helper::vector< Quad > > d_quads; ///< Quads of the mesh loaded. ```; Any suggestion?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/602:188,plugin,plugin,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/602,1,['plugin'],['plugin']
Modifiability,"Helper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not mean** moving files (it did in the past). The module stays in place, only the CMake files change. The Components within the module stay in place too. Done module pluginizations: https://github.com/sofa-framework/sofa/issues?q=is%3Amerged+label%3A%22NG2%3A+pluginization%22. Quick schematics on the current state and what will be achieved:. <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_overview_v20.06.png"" width=""40%"" height=""auto"" /> &nbsp; <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_modularization_plan.png"" width=""40%"" height=""auto"" />. [SOFA Modules' plan](https://drive.google.com/file/d/14H2YRu0z8usiqTpGQuxcnel1uf1Hna1I/view?usp=sharing). ### NG3: Reorganize SOFA modules towards new architecture; ~~Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v7~~; Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v8. *Continue using recipes with https://github.com/guparan/sofa2ng ?*. ### NG4: Cleaning the applications/plugins repository; Following the [planning](https://docs.google.com/spreadsheets/d/1FVQN4rghI1SSYuhT1Y3L5fUZdL7XXPETgQ1GQ28KlD8/edit#gid=0) we built at our ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:2253,plugin,pluginizations,2253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['plugin'],['pluginizations']
Modifiability,"Here are the latest changes done directly in v20.06 branch to finalize the release. Main changes:; - [CMake] ADD SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON option (default is ON); When OFF, SofaPython will be added later during CMake generate so that all soft dependencies to SofaPython will be unsatisfied.; This is useful to generate binaries with at least SofaPython dependencies as possible.; - [CMake] FIX postinstall-fixup scripts call order; postinstall-fixup scripts are now in tools/postinstall-fixup and are included after all other parts of SOFA (even external directories); - [SofaMacros] FIX install dir for plugins with no INCLUDE_SOURCE_DIR; There was an issue with installed include directories introduced by #1397 ; - Backport #1428 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1432:614,plugin,plugins,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1432,1,['plugin'],['plugins']
Modifiability,"Here is a new plugin which implements a beam force field component with plastic behaviour (to model nonlinear and permanent deformation). The general structure is inspired from the BeamFEMForceField component. At the moment, I kept the new component in a dedicated plugin (BeamPlastic), but I guess it could be moved to where the BeamFEMFF component already is (providing the PR is mergeable). Two pull-requested files (in applications/plugins/BeamPlastic/quadrature) were implemented by someone else and published under the open source Boost Software License 1.0 (BSL-1.0). I mentioned this in both files headers, but I don't know if the BSL-1.0 is compatible with the SOFA license. If not, these files can be removed and I can re-implement the corresponding methods (for reduced gaussian integration). The code compiles on my side, and the two provided example files work fine, but there are quiet a few things that could/should be improved (including unit tests). I have already noted some of them, but as this is my first PR I'm not familiar with how or where these should be discussed.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1618:14,plugin,plugin,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1618,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Here is a plugin communication ; The purpose of this plugin is to add ability to the users to simply send/receive data´s from sofa. Instead of creating many plugins for each implementation/hardware, we propose to regroup all of them in one communication plugin. . Actually there is two network protocol implemented : ; - OSC (has packet size limiations ...); - ZMQ. Improvements : ; - better thread safe implementation; - more types; - add others library implementation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534:10,plugin,plugin,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534,4,['plugin'],"['plugin', 'plugins']"
Modifiability,Here is an update of PluginExample to clarify how to create a deploy-and-share friendly plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1053:21,Plugin,PluginExample,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1053,2,"['Plugin', 'plugin']","['PluginExample', 'plugin']"
Modifiability,"Here is the PR with the PSL plugin to simplify the writing of scene with SOFA. Video with examples:; https://www.youtube.com/watch?v=_lU6hJIXz1g&feature=youtu.be. The ""in-progress"" documentation: https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/README.md. If you have idea of extension we have a ""pep"" directory with open-suggestion there:; https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/pep. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541:28,plugin,plugin,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Here we go as promised:. This PR stores within a SOFA Object (inheriting Base) links to the owners that given object in a vector, that can be accessed by calling getDDGLinkOwners(). Currently, pointers are stored within a vector of const Base*, but we could imagine using a map, that would store the link owners according to a CATEGORY, (ForceField, Mass, MO, Topo...), or having a multimap with the component names..? I don't know, I guess it depends on the use case.; @jnbrunet @epernod that PR is specifically for you, so you probably have a better idea of how you'd like to manipulate that list. let me know what you think!. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1228:62,inherit,inheriting,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1228,1,['inherit'],['inheriting']
Modifiability,"Here's a bunch of fixes for the HAPI plugin:. * `config.h` was not generated --> added automatic generation to the cmake and fix the template to use cmake variable replacement. * there is some broken code in CMakeLists, not sure what was used for but it's not even a valid cmake code (broken if clause). For the moment I just commented out, I'm open to advices... * updated the code with recent member renaming in main sofa code (`indice` --> `d_indice`). * fix for `findH3D.cmake` to find the module without relying on non-default installation path (i.e. if you install H3D into a given directory, that is the root path from which `include` and `lib` can be easily found ). * fixes for `findHAPI.cmake` --> using `hapi_ROOT` to easily find the module (instead of relying on the mutual position of HAPI and H3DUtils). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1189:37,plugin,plugin,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1189,3,"['config', 'plugin', 'variab']","['config', 'plugin', 'variable']"
Modifiability,"Hey I hope I got this one right...:. To me the APIVersion component is used to specify the latest version of SOFA we can guarantee compatibility with. Thus when it is already present in an existing scene, the tag is set explicitely in the scene file.; When creating and saving a scene from a modeler for instance though, an APIVersion should be created, and the level should be the level of the version of SOFA the user is running. By default, an APIVersion without a version number was automatically setting the level to 17.12, which to me makes no sense, because we can't guarantee compatibility with 17.12 on a scene that doesn't have an APIVersion set.; Also, somewhere in SceneCheckAPIChange, a 20.06 was hardcoded in a variable `m_selectedApiLevel`. This PR takes the SOFA_VERSION_STR, set by CMake in <sofa/version.h>, and uses this value to replace the default level value in APIVersion, and the selectedAPILevel in SceneCheckAPIChange. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1473:725,variab,variable,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1473,1,['variab'],['variable']
Modifiability,"Hey guys,. Sorry for the delay. This is a draft PR so that people can start reviewing/testing this feature if they want. There is still some things missing before merging. ### Needs to be addressed before merging. - MacOS and Windows compatibility: python import command only tries to load .so extension, so the cmake of the plugin should generate both SofaPython.dylib (.dll) and SofaPython.so for it to work.; - Handling the case of python script loading a python scene (the current GIL handling implementation will prevent the main python script to get back the interpreter after a python scene runs). ### What this PR brings. Right now, in order to use the SofaPython plugin, you need to create a python scene and run it through a C++ executable (such as runSofa). What I'm proposing here is to simply load the Sofa plugin inside a python script, that's it. A python script could then look like : . ```#!/usr/bin/python2.7; from libSofaPython import Sofa; import argparse. # Parse the arguments; parser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:325,plugin,plugin,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,['plugin'],['plugin']
Modifiability,"Hey guys,. apparently, 30 tests out of 32 crash with exit code 53. (And bring some bad red color to the beautiful dashboard). This code is ""The network path was not found"". Is every binary/file where it's supposed to be ?. NB : Is this config worth the trouble ? Or should it be removed as VS2015 is freely available ? (I heard something about people **needing** it but...)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/155:236,config,config,236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/155,1,['config'],['config']
Modifiability,"Hey!. First PR with a POC of Object links that aren't based on SingleLinks. Here, a new template class (with its base class) is introduced: DDGLink.; Just like BaseDatas, DDGLink inherits DDGNode.; A DDGLink thus benefits from the whole dirty flag propagation thingy, and implements the update() function to clean its dirty flag, and update from its inputs.; Just like Datas, a DDGLink also possesses a counter, that is incremented when the link value changes. Just like BaseLinks, and SPtrs, to retrieve the object linked with a DDGLink, you need to call the get() method. The set() method will set the link. When a link is set within a DDGLink, the componentState of the linked object is set as input to that DDGLink. It's up to you to connect your DDGLink to some datas to connect your dependency graph. Contrary to the current link implementation in SOFA, these links, can be very easily manipulated as their base class (BaseDDGLink), or as DDGNodes even. DDGLinks are parsed in Base::parseField just like BaseLinks and BaseDatas, which makes them usable with the BaseObjectDescriptions. (they really mirror the behavior of all other field types.). A very simple test case is present in this PR to show you how it's used. You can reference your links with their pathnames, just like normal datas or links, by calling the getPathName() method. There's not bi-directionality implemented in this PR, (because I didn't have time in the end...) but it's not rocket science:; - all there is to do is add a vector of Base* in Base with helper methods to add, remove retrieve the list of link owners. Then in DDGLink::set(), call the add() method of your link to register`this`. (maybe in another PR...) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scen",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1226:179,inherit,inherits,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1226,1,['inherit'],['inherits']
Modifiability,"Hey,. I am very new in sofa, and I am looking for a simple solution for the following :) :; I would like to simulate the cutting through of a 2-d mesh (surface) with a sharp tool.; My goal is to use this simulation to test the cutting of a soft tissue with a robot. For two reasons, I would not to use the cutting Plugin: I need it for a research project for which I do not have financial budget to buy the plugin (maybe in the future, I will). The second reason that I would like to keep the simulation very simple and operate with a low number of parameters. My question is: which examples should I take a look at? Is there anybody, how implemented such a scenario (maybe also with SofaPython3)?. Thank you very much in advance!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4071:314,Plugin,Plugin,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4071,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"Heyy guys,. I am doing a project targeting to simulate a needle is inserted into the eyeball and also then retinal. The target would be that in a simulation environment, the needle is controlled by haptic devices to approach the eyeballs. (This part is already finished [here](https://github.com/sofa-framework/sofa/issues/2786)) And then the needle would **penetrate the outer surface** of the eyeball and then continue approaching the retinal. Eventually, the needle is **inserted into a blood vessel** in the retina. And the eyeball and blood vessel should be deformable during the collision and insertion process. I have learned some tutorials on SOFA, the dentist-surgery simulation included. And I guess the difficult point may be the insertion process right? From one [post](https://www.sofa-framework.org/community/forum/topic/needle-insertion-into-soft-tissue/) in forum, I found the plugin [Cosserat plugin](https://github.com/SofaDefrost/plugin.Cosserat) is mentioned. But after reading its description I think it is designed to handle with deformation of needles. While in my scenario the needle does not need to be deformable. So I am a bit confused. **What could be done** to achieve such a scenario? Or in which sequence? Maybe is there any other tutorial that I could learn from?. Thanks for all your guys helping me out. Jingsong",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2806:893,plugin,plugin,893,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2806,3,['plugin'],['plugin']
Modifiability,"Hi ! . Many existing component (FixedPlaneConstraint, FixedRotationConstraint, PointConstraint...) are particular implementation of PartialFixedConstraint. We have put them in a separate plugin named; ""Specific Boundary Conditions"". To finalize this work, it could be useful to have an implementation of FixedConstraint, on which you can define a subset of direction that you want to block. It would allow to have a unique implementation for fixed constraint in general. What do you think ?. Christian. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/440:187,plugin,plugin,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/440,1,['plugin'],['plugin']
Modifiability,"Hi ; When I compiling CGALPLUGIN in VS2017,it showed some errors like these:; ```. C2988	unrecognizable template declaration/definition (compiling source file D:\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\DecimateMesh.cpp)	CGALPlugin	C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory	18	. C2143	syntax error: missing ';' before '<' (compiling source file D:\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\DecimateMesh.cpp)	CGALPlugin	C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\include\xmemory	18	; ```. I don't know how to solve it.Please help me.Thanks. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1350:184,plugin,plugins,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1350,2,['plugin'],['plugins']
Modifiability,"Hi @sofa-framework/reviewers,. As you may know, we participate to Google Summer of Code this year. We proposed [3 projects](https://www.sofa-framework.org/community/google-summer-of-code/):; - **SOFA + Pulse**, mentored by @hugtalbot and Kitware: bringing Pulse into SOFA (as a plugin).; - **Emscriptening SOFA**, mentored by @damienmarchal: adapt the core of the SOFA so that it can be compiled with Emscripten allowing SOFA to run in a web browser.; - **Communication plugin**, mentored by @ErwanDouaille: improve the communication plugin (implement new protocols). Google granted us **2 slots** so we have to choose. We have promising candidates for every project so **we need your opinion**. Please **vote for the 2 projects** that you think would fit best. ; - For **SOFA + Pulse**, react with :+1: ; - For **Emscriptening SOFA**, react with :tada: ; - For **Communication plugin**, react with :heart: . Arguments in favor of a project can be ""I need it"", ""It would be very helpful for the community"", ""I think it fits well GSoC type of projects"", ... Do not hesitate to comment/discuss. ; Mentors (@hugtalbot, @damienmarchal, @ErwanDouaille) are also welcome to add a comment to detail a bit more the projects. **We have until Tuesday, April 17th at 16:00 UTC to decide.**. Thanks.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/633:278,plugin,plugin,278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/633,5,"['adapt', 'plugin']","['adapt', 'plugin']"
Modifiability,"Hi Hugo,. I'm currently trying to control the movement of a 3D model in the Sofa Framework through Unity. I've extended the SofaPhysicsAPI and implemented movement using the applyTranslation method from SofaOutputMesh. So far, I've managed to successfully move the 3D model within Unity. However, when two objects collide, there's no physical response. Could you offer any advice or suggestions for this task?. Jack Yu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4621:111,extend,extended,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4621,1,['extend'],['extended']
Modifiability,"Hi all, . I wanted to discuss the default behavior of the friction coefficients in the contact models of the Compliant plugin (FrictionCompliantContact.h and CompliantContact.h). The current behavior seems kind of strange:. 1) the global mu coefficient set in the DefaultContactManager component always overrules friction coefficients defined locally for each collision model. 2) when the global mu is set to exactly 0.0, the local coefficients get activated. negative global mu does funny but not really useful stuff in simulations. 3) When having two mu defined by the two colliding models, currently they just get multiplied. So If both models have mu=0.5, they end up having a contact's mu=0.25! Same with large mu: mu=2.0 (i.e. rubber) -> 4.0. . I believe that especially the latter behavior would catch many users on the wrong foot. So here are some changes I propose:. ad 1) locally defined mu should take precedence over globally defined mu's. Of course, this means breaking the existing behavior and probably triggers many regressions, so this should be considered carefully. ad 2) replace `mu.getValue()?` with `(mu.getValue()>0.) ? ` or `(mu.getValue()>=0.) ?` -> a negative value simply means disabling the global override. . ad 3) use the geometric mean of the friction coefficients: replace ; `this->model1->getContactFriction(0)*this->model2->getContactFriction(0)`; with ; `sqrt(this->model1->getContactFriction(0)*this->model2->getContactFriction(0));`. An alternative could be to use the smaller of the two coefficients, but I'm not sure what's the more sensible behavior.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/81:119,plugin,plugin,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/81,1,['plugin'],['plugin']
Modifiability,"Hi all, . There has been quite a lot of discussion recently about how the to implement update mecanisms. ; There is of course the DataTracker, but we are quite a lot to implement complementary mecanism in our respectives plugins so it may be a good idea to see what can be factorized into SofaCore. To do that it would be nice to have examples / snippets / draft of the different approaches we have tested or in mind so that we can evaluate the code impact and interoperability. @bruno-marques, @hugtalbot, @epernod, @jnbrunet feel free to add your ideas. ______________________________________________________; Dedicated Gitter room : https://gitter.im/sofa-framework/data-update?utm_source=share-link&utm_medium=link&utm_campaign=share-link",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597:221,plugin,plugins,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597,1,['plugin'],['plugins']
Modifiability,"Hi all, ; I installed Sofa (v=17.06, with the Sofapython, Compliant, Image and Flexible pluggins) in a conda environment (conda 4.3.30 with python 2.7.11, numpy 1.13.3) on my computer (macOs 10.13.1). The installation apparently worked fine but when I run a python file it crashes while importing numpy.; More specifically, the crash happens as the framework tries to import the first C++-based module of numpy (=multiarray) see joined file below. I checked the dependency paths and they all point toward the /lib repository of the specific conda env in used.; I also tried to recompile numpy locally and the same problem happened... Does anyone has a clue on what's happening with my setup ?; Thx. PS: numpy works fine in the same conda env in ipython; PPS: I did not use cmake-gui for the compilation but the regular cmake. I used the following compilation flags but I might have missed something : . -DSOFAGUI_QGLVIEWER:BOOL=ON ; -DPLUGIN_FLEXIBLE:BOOL=ON ; -DPLUGIN_COMPLIANT:BOOL=ON ; -DPLUGIN_IMAGE:BOOL=ON ; -DPLUGIN_SOFAPYTHON:BOOL=ON ; -DBoost_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DGLEW_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DGLEW_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libGLEW.dylib ; -DJPEG_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DJPEG_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libjpeg.dylib ; -DPNG_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libpng.dylib ; -DPNG_PNG_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include ; -DTIFF_LIBRARY=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/lib/libtiff.dylib ; -DTIFF_INCLUDE_DIR=/Users/oali/Documents/Work/Research/Devlp/miniconda2/envs/tissuemeca/include . ![screen shot 2017-11-27 at 14 58 33](https://us",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531:79,Flexible,Flexible,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531,1,['Flexible'],['Flexible']
Modifiability,"Hi all,. As there was big changes in the Sofa code base (see https://github.com/sofa-framework/sofa/pull/853).; Making these changes were not possible without breaking the API and changing some computation results. Nevertheless we did our best to have the changes done in an as smooth as possible. . Among possible problems:; - your plugin is not compiling anymore with recent version of Sofa (or fail to link). ; - some scenes are not working as they used to. ; - there is a lot of warning/depercation messages when running a scene. . In case you encounter an issue please report it so we can fix that quickly. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/893:333,plugin,plugin,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/893,1,['plugin'],['plugin']
Modifiability,"Hi all,. At DEFROST we are working on adding new features to SofaVolumetricData & CGAL. . But currently SofaVolumetricData is not a plugin and is poorly organized so we are considering that it may be a good opportunity to clean it and tranform it into several plugins. If you are using it...please join the effort so that the end result match yours need & expectation. . Currently we have done the following:; - move SofaVolumetricData into a plugin named SofaVolumetricData ; - copy DistanceGrid specific elements from SofaVolumetricData into a new plugin named SofaDistanceGrid; - copy ImplicitField specific elements from SofaVolumetricData into a new plugin name SofaImplicitField; - remove *.cpp from SofaVolumetricData and forward the old *.h to the corresponding .h in SofaDistanceGrid & SofaImplicitField. (So that #include <SofaVolumetricData/> still work for a transitional period) ; - refactor & rename some classes but use 'using OldName = NewName' to provide API compatibility ; and use the Factory to continue exposing the same component names to the sofa users or warning message to indicate the something have changed. After a transitional period this should be removed. . The current WIP is in the following branch:; https://github.com/sofa-framework/sofa/compare/master...SofaDefrost:splitSofaVolumetricDataSquashed. The result is to have:; ```; plugins/SofaDistanceGrid/; - components/collision/BarycentricPenalty, DistanceGridCollision, FFDDistanceGrid, RigidDistanceGird; - components/forcefield/DistanceGridForceFIeld. plugins/SofaImplicitField/ ; - components/geometry/ScalarField (base class); - components/geometry/DiscreteGridField (inherit from ScalarField); - components/geometry/SphericalField (inherit from ScalarField); - components/geometry/otherToComeFromDefrost; - components/mapping/ImplictSurfaceMapping; - deprecated/ImplicitSurfaceContainer (override) components/geometry/DiscreteGridField ; - deprecated/InterpolatedImplicitSurface (override) components/geometry",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:132,plugin,plugin,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,6,"['plugin', 'refactor']","['plugin', 'plugins', 'refactor']"
Modifiability,"Hi all,. For the next STC we are planning active coding sprint sessions to boost small tasks and have the pleasure to be working togther. . Feel free to propose any task in the comments!. Current task list (last update 2017-09-29):; - Deprecation: https://github.com/sofa-framework/sofa/issues/426; - Pluginization + SceneCreator dependencies (must be done AFTER deprecation): https://github.com/sofa-framework/sofa/issues/427; - `issofa_*` merges: https://github.com/sofa-framework/sofa/issues/428; - Code cleaning; - Doc. TODO List before the sprint:; - [x] finish to add the set management into the CMakeLists.txt (Damien & Bruno Carrez); - [x] make the list of component to deprecate (Fred, Stéphane, Guillaume); - [x] create a simple example of deprecation with the WashingMachineForceField (Damien); - [x] if needed make a list of ""advices"" we could add to the SceneChecker to warn user on how they can improve their scene (the StaticSolver thing) (Stéphane ?); - ~~add an attribute to BaseObjects to attach component quality info ?~~. Feel free to add whatever I mis-understood or forgot. ; ________________________________________; ping @sofa-framework/reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/413:301,Plugin,Pluginization,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/413,1,['Plugin'],['Pluginization']
Modifiability,"Hi all,. This PR is implementing what was discussed in in #362 . CHANGELOG:; - refactor the SceneChecker object for more modularity. Adding new checks should be easier. ; - add a SceneCheckDuplicateName that warns user if the scene contains duplicated names. ; - add the corresponding tests. ; - use the new version in runSofa. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/392:79,refactor,refactor,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/392,1,['refactor'],['refactor']
Modifiability,"Hi all,. We are on our way to make a PR with our PSL plugin to simplify the writing of scene with SOFA.; If you never heard about it you can ; - read the ""in-progress"" documentation: https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/README.md; - have a look at this video introduction:; https://www.youtube.com/watch?v=_lU6hJIXz1g&feature=youtu.be. If you have idea of extension we have a ""pep"" directory with open-suggestion there:; https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/pep. This is a WIP so feedback or contribution is more than welcome. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/390:53,plugin,plugin,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/390,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Hi all,. for the PR # https://github.com/sofa-framework/sofa/pull/119; implementing a basic RGBAColor i'm inheriting from Vec4f. This seems to fail on VS compiler. The resulting error on VS2015 is the following (the static_asserts):; https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_default_amd64/1002/console. This seems to suggest that the templated code is 'generated' while it shouldn't. . Any help is welcome.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/130:106,inherit,inheriting,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/130,1,['inherit'],['inheriting']
Modifiability,"Hi everybody, ; a couple of days ago I had this error : **TypeError: bad argument type for built-in operation**, referring to this line of code:; _tool.createObject('LinearMotionStateController', indices='0 1 2 3 4 5 6 7 8', keyTimes='0.0 200.0', keyDisplacements='0 0 0 0.0 0.04 0')_. Eventually, I found out that the plugin with the _LinearMotionStateController_ component was missing.; I think that a different error message would have been more helpful. Thank you everybody. Have a nice day.; Raffa. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/333:319,plugin,plugin,319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/333,1,['plugin'],['plugin']
Modifiability,"Hi everyone, . **My issue**; In the plugin SoftRobots we have a lot of components with optional datas. For example CableActuator (which can simulate a cable pulled by a servomotor), has *optional* limits for the force and displacement of the cable. ; Our problem is that, even though the data field is optional; i.e. no default value is given in initData(), and we only process it if data.isSet() is true, the GUI displays a default value, which is very confusing for the user. . **My wish**; I would like the GUI to display an empty field when no default value has been set in initData(). The very existence of isSet() makes me think that it's reasonnable and makes sense.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675:36,plugin,plugin,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675,1,['plugin'],['plugin']
Modifiability,"Hi everyone, . i am trying to build sofa from source. I used cmake-gui and when i configure it gives me no errors, but i open Sofa.sln in VS 2022 it skips 3 compilations and so i can't find sofaRun to run the software. The 3 compilations are Examples, Documentations and INSTALL. . I watched the video tutorial on sofa website and i noticed QGLViewer_DIR variable is not found in cmake-gui, i don't know if this could be a reason why. . thak you for your help!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4246:82,config,configure,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,"Hi everyone, . i'm trying to install sofa_env for sofa. i already downloaded it from git hub but when i try to install it (i tried dirrent location: in the same environment as sofa, in the sofa folder, in the bin folder, etc), it tells me that it doesn't find the sofa module with sofapython3. Actually sofapython3 is in sofa (i can see it in the plugin manager). it looks like a path problem, like it can't find sofa for some reason, maybe i'm trying to install it in the wrong place. Can someone help me please?? maybe @ScheiklP . thank you very much!!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223:347,plugin,plugin,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223,1,['plugin'],['plugin']
Modifiability,"Hi everyone,. I'm working right now on a small improvement that will allow people to directly import SofaPython plugin library (libSofaPython.so) inside their python script without the need for an external application (exemple runSofa). A python script could than looks something like:. ```; # scene.py; from libSofaPython import Sofa. root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(); for i in range(0,2):; ...; root.simulationStep(0.01); # Some data and timing analysis in python here...; ...; Sofa.cleanup(); ```; and could be called simply with; `python scene.py`. You can follow the development on the branch; https://github.com/jnbrunet/sofa/tree/sofa_python_without_executable. For now, the primary use for us is to create a batch application directly in python for our experiments (mainly time and precision benchmarks), but maybe some day we could also use this for a complete GUI experience. If you got any suggestion, please do not hesitate to write them here. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492:112,plugin,plugin,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492,1,['plugin'],['plugin']
Modifiability,"Hi!. When building plugins as standalone projects, the SofaFramework package doesn't expose the cmake config options used to build SOFA.; In the SoftRobots plugin (among others), tests are performed to know if SOFA has been built using the required options (such as SOFA_BUILD_METIS, MODULE_SOFASPARSESOLVER, PLUGIN_SOFAPYTHON, SOFA_BUILD_TESTS etc.) and out-of-tree configurations require to re-specify those options, even though they are only defined in the SOFA build. I've modified the SofaFrameworkConfig.cmake.in to expose those options to whoever does a find_package(SofaFramework), although that might not be the smartest way to do it (the list is non exhausive and it would be best if options were added in a smarter way.; I think that modules such as SOFASPARSESOLVER should export the MODULE_SOFASPARSESOLVER themselves for instance, and so should the plugins.; But then there's also a long list of options that would be worth exposing, such as:; - SOFA_BUILD_TESTS; - SOFA_BUILD_METIS; - SOFA_BUILD_TUTORIALS; - SOFA_WITH_DEPRECATED_COMPONENTS; - SOFA_WITH_THREADING; - SOFA_WITH_DEVTOOLS; - SOFA_USE_MASK; - .... And I don't know where those should be exposed.. So I'm looking fwd to your opinion on the question!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927:19,plugin,plugins,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927,5,"['config', 'plugin']","['config', 'configurations', 'plugin', 'plugins']"
Modifiability,"Hi, ; I installed the CGAL plugin (Window 10) in the following steps:; Step 1: Installing the software CGAL5.0.2; Step 2: Compiling CGAL Libraries; Step 3: Compiling CGalPlugin. In step3, I successfully compiled the CGalPlugin in Cmake.; When I compiling CGALPLUGIN in VS2017,it showed some errors like these:; `Error C2660: CGAL::Constrained_triangulation_plus_2<CDT1>::vertices_in_constraint_begin': function does not take 2 arguments； Project: CGALPlugin；; File: D:\SOFA\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\Refine2DMesh.inl；; CODE: Line 300,; Error C2660: 'CGAL::Constrained_triangulation_plus_2<CDT1>::vertices_in_constraint_end': function does not take 2 arguments； Project: CGALPlugin；; File: D:\SOFA\sofa\src\applications\plugins\CGALPlugin\src\CGALPlugin\Refine2DMesh.inl; CODE: Line 301.`. I don’t know how to solve it.Please help me.Thanks.; I used Sofa v19.12. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1389:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1389,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Hi, ; I'm implementing a code to simulate the needle insertion inside of a solf tissue. I am still at a rough version of the model.; My problem is that when I animate the simulation I get the following warning message form the command window:. > [WARNING] [CGLinearSolver(CGLinearSolver)] den = 0.0, break the iterations. And then the simulation doesn't move anymore.; My code is reported below. `; from turtle import position; from splib3.objectmodel import SofaPrefab; from splib3.numerics import getOrientedBoxFromTransform; import Sofa. def createScene(rootNode):. pluginNameList = [""Sofa.Component.Engine.Select"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.SolidMechanics.FEM.Elastic"",; ""Sofa.Component.SolidMechanics.Spring"",; ""Sofa.Component.StateContainer"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = root",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:569,plugin,pluginNameList,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['plugin'],['pluginNameList']
Modifiability,"Hi, I am an university student trying to use sofa for my simulation work. When I try to configure SOFA master with Cmake a ""CMake Deprecation Warning at SofaAdvanced/CMakeLists.txt:15 (message):; SofaAdvanced is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology""; warning is appearing. however, without crashing it get configured and generates the files. I have build the system on Visual Studio 2019 and it complies without any errors. However, when loading the RunSofa ""SofaPython"" and ""SofaExporter"" modules are not loading. I tried using the plugin manager and it reports erros that .dll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:88,config,configure,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,3,"['config', 'plugin']","['configure', 'configured', 'plugin']"
Modifiability,"Hi, I tried to build SOFA from source following the instructions on the website and the youtube video (Linux compilation), ; however, it crashes at the end with the following error:. > [100%] Built target SceneChecking_test; >[100%] Linking CXX executable ../../../bin/runSofa; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Core.so.5.15.2: undefined reference to ''std::__exception_ptr::exception_ptr::_M_release()@CXXABI_1.3.13'; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Widgets.so.5.15.2: undefined reference to 'std::__throw_bad_array_new_length()@GLIBCXX_3.4.29'; /usr/bin/ld: /home/hri/anaconda3/lib/libQt5Core.so.5.15.2: undefined reference to `std::__exception_ptr::exception_ptr::_M_addref()@CXXABI_1.3.13'; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [applications/projects/runSofa/CMakeFiles/runSofa.dir/build.make:159: bin/runSofa-22.12.00] Error 1; make[1]: *** [CMakeFiles/Makefile2:18991: applications/projects/runSofa/CMakeFiles/runSofa.dir/all] Error 2; make: *** [Makefile:152: all] Error 2. ![Selection_003](https://user-images.githubusercontent.com/9308405/235440349-dfdb7d21-c788-429f-8aa1-4fc125d6e676.png). I added the CMAKE_PREFIX_PATH as suggested in the Troubleshooting CMake errors section, and the CMAKE configuration looks like the image attached. Does anyone know how to solve this problem? Thank you in advance!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3829:1280,config,configuration,1280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3829,1,['config'],['configuration']
Modifiability,"Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:104,Config,ConfigurationSetting,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,7,"['Config', 'Plugin', 'plugin']","['ConfigurationSetting', 'Plugin', 'plugin', 'plugins']"
Modifiability,"Hi,. As discussed at Journées HPC INRIA in Lille, here is an initial nix package for sofa. It also include a flake (and its lock), which is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:251,sandbox,sandbox,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['sandbox'],['sandbox']
Modifiability,"Hi,. I found the usage of data alias more annoying than helpful. ; Currently data alias are used to provide backward compatibility with old scenes. The problem is that by doing so it does not indicate to the user that the data field name has changed and that it should change to fix his scenes. The consequence is that we have a lot of old scene that are still using differents name for the same data field. . I would advocate for a more helpful (to the user point of view) approach. This approach consists in saying that the field it is using is now deprecated and provide suggestions to fix his scene. In the following I provide a template of code (taken from the soft-robot plugin) to implement this kind of behavior. . ``` cpp; CableModel<DataTypes>::CableModel(MechanicalState* object); : InverseProblemConstraint<DataTypes>(object); , d_indexDeprecated(initData(&d_indexDeprecated, ""index"",; ""Deprecated, must be replaced by the field name 'indices'"")); , d_indices(initData(&d_indices, ""indices"",; ""List of points connected by the cable (from extremity to actuated point). \n""; ""If no indices are given, default value is 0. \n""; ""In case of multiple indices, one point will be actuated \n""; ""and the others will represent sliding points for the cable."")); {; d_indexDeprecated.setDisplayed(false);; }. template<class DataTypes>; void CableModel<DataTypes>::init(); if(d_indexDeprecated.isSet()) {; msg_warning(this) << ""The field of the Cable component named 'index' is now deprecated. ""; ""To remove this error message, the field 'index' should be replaced by the field 'indices'."" ;; .... depending on whether you want to force the user to fix his scene (so quitting the init with an error) or if you want a transition phase accepting the two field you just have to duplicate the content of d_indexDeprecated into d_indices. ; }; ```. If anyone has an opinion or other approach to the problem it is more than welcome. . D.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/35:677,plugin,plugin,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/35,1,['plugin'],['plugin']
Modifiability,"Hi,. I have been trying to compile Leap Motion plugin, I already downloaded the Leap SDK and placed all files in the corresponding folders for CMake to build the solution. When compiling, I've got these errors I haven't been able to solve. ```; sofa/src/applications/plugins/LeapMotion/src/MyListener.h:88:5: error: ; unknown type name 'InteractionBox'; InteractionBox getInteractionBox() { return interactionBox; }; ^; sofa/src/applications/plugins/LeapMotion/src/MyListener.h:95:5: error: ; unknown type name 'InteractionBox'; InteractionBox interactionBox;; ^; sofa/src/applications/plugins/LeapMotion/src/MyListener.cpp:66:25: error: ; no member named 'interactionBox' in 'Leap::Frame'; interactionBox = frame.interactionBox();. /sofa/src/applications/plugins/LeapMotion/src/LeapMotionDriver.h:80:5: error: ; no matching member function for call to 'initData0'; SOFA_CLASS(LeapMotionDriver, sofa::component::controller::Controller);. sofa/src/SofaKernel/framework/sofa/helper/../../sofa/core/ObjectFactory.h:208:16: error: ; no viable conversion from returned value of type; 'sptr<sofa::component::controller::LeapMotionDriver::MyType>' to function; return type 'sptr<sofa::core::objectmodel::BaseObject::MyType>'; return RealObject::create(instance, context, arg);. sofa/src/SofaKernel/framework/sofa/helper/../../sofa/core/objectmodel/BaseObject.h:99:18: error: ; cannot initialize object parameter of type; 'sofa::core::objectmodel::BaseObject' with an expression of type; 'sofa::component::controller::LeapMotionDriver'; if (arg) obj->parse(arg);. In file included from /usr/include/boost/intrusive_ptr.hpp:16:; /usr/include/boost/smart_ptr/intrusive_ptr.hpp:69:34: error: no matching function; for call to 'intrusive_ptr_add_ref'; if( px != 0 && add_ref ) intrusive_ptr_add_ref( px );; ```. I hope someone can help with these strange errors. Thanks in advance. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1120:47,plugin,plugin,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1120,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"Hi,. In order to reduce compile time of sofa plugins, I decided to compile my plugins outside of Sofa (a build folder for each plugin, CMAKE_PREFIX_PATH and CMAKE_INSTALL_PREFIX to tell cmake where to find sofa); Compiling tests then doesn't work since the gtest headers, that are bundled in sofa, are not deployed on sofa's install dir. This PR rectifies that. @sofa-framework/consortium, I also believe that there should be clear guidelines in SOFA to determine what the ""normal"" way of compiling plugins should be.; I believe that outsourced builds should be the way to go, instead of adding plugins through ; `applications/plugins/CMakeLists.txt`; or cmake's; `EXTERNAL_DIRECTORIES`; since it allows people to isolate SOFA a bit more from their work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/395:45,plugin,plugins,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/395,6,['plugin'],"['plugin', 'plugins']"
Modifiability,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4402:1379,polymorphi,polymorphic,1379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402,1,['polymorphi'],['polymorphic']
Modifiability,"Hi,. several tests were already done for topological modifier, they are tested through scenes in examples/Components/Topology/TopologicalModifiers. They test: add/remove of topological elements; - Is sofaVerification still used? ; - I can easily rewrite those tests in c++ using the ::Sofa_test api. Is it better? what is the politic between doing tests through scene or Sofa_test.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43:246,rewrite,rewrite,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43,1,['rewrite'],['rewrite']
Modifiability,"Homogeneize the API for update.; A layer is added to avoid a direct access to the DataTracjer which is now private:; - in DataTrackerDDGNode: trackInputData, hasInputDataChanged, haveInputsDataChanged, cleanInputTracker; - in BaseObject: trackData, hasDataChanged. The name of the update function is:; - `doUpdate()` for Engines; - `doInternalUpdate()` for components inheriting from BaseObject. Update engines, and tests accordingly. Rename UpdateInternal(DataVisitor) into InternalUpdate(DataVisitor). Remove the DataTrackerFunctor and its test. TODO: update constantFF with new API. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1163:368,inherit,inheriting,368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1163,1,['inherit'],['inheriting']
Modifiability,How to add new plugin in windows？,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4632:15,plugin,plugin,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4632,1,['plugin'],['plugin']
Modifiability,How to update your code in plugin to match the post 20.12 version of sofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1757:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757,1,['plugin'],['plugin']
Modifiability,"I am creating a plugin and compiling it out of tree. One of the components in my plugin uses the MeshTopology component so I have added ; ```; #include <SofaBase/SofaBaseTopology/MeshTopology.h>; ```. The problem is that MeshTopology.h has some other includes, and of them being <SofaBase/config.h> which can't found. . Most probably this is an issue with CMake targets. The compilation line is the following:. ```; /usr/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_PROGRAM_OPTIONS_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_THREAD_DYN_LINK -DCPFSofaPlugin_EXPORTS -I../../src/CPFSofaPlugin/.. -isystem /home/jjcasmar/D/usr/local/include/SofaFramework -isystem /home/jjcasmar/D/usr/local/include/extlibs/Eigen -isystem /home/jjcasmar/D/usr/local/include/extlibs/json -isystem /home/jjcasmar/D/usr/local/include -g -fPIC -frounding-math -std=gnu++14 -MD -MT src/CPFSofaPlugin/CMakeFiles/CPFSofaPlugin.dir/CPFInit.cpp.o -MF src/CPFSofaPlugin/CMakeFiles/CPFSofaPlugin.dir/CPFInit.cpp.o.d -o src/CPFSofaPlugin/CMakeFiles/CPFSofaPlugin.dir/CPFInit.cpp.o -c ../../src/CPFSofaPlugin/CPFInit.cpp; In file included from /mnt/D/jjcasmar/usr/local/include/SofaBase/SofaBaseTopology/MeshTopology.h:24,; from ../../src/CPFSofaPlugin/CPFInit.h:8,; from ../../src/CPFSofaPlugin/CPFInit.cpp:1:; /mnt/D/jjcasmar/usr/local/include/SofaBase/SofaBaseTopology/config.h:25:10: fatal error: SofaBase/config.h: No such file or directory; ```. I have checked and the file is there, but under `.../include/SofaBase/SofaBase/config.h`. The include directories added by SofaFramework target are `.../include/SofaFramework` and `.../include`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1288:16,plugin,plugin,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1288,6,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"I am currently running a convergence analysis using python scenes. Since the convergence analysis loads several settings from a .json file, it would be good to have a possibility to forward the filename of the file to the python scene via the command line. To my knowledge, this is not possible at the moment, please correct me if I am wrong and explain me your solution. My first work around was to load from the same file (I call it outputJson, see the function definition below). However, this becomes cumbersome, when the code is parallelized, since several threads would like to load from that same file. My approach for the parallelization is to write the filename (which is now adapted to every scene) first into the .scn using PHP and then to load it from the python scene. ; That means, in the .scn file we have:; `<?php echo '<PythonScriptController classname=""convergenceBeam_Template"" filename=""convergenceBeam_TemplatePython.py"" listening=""1"" name=""convergenceBeam_Template"" variables=""'.$argv[1].'"" />'; ?>`; which called from the convergence python script and deleted later; ```; os.system(""php convergenceBeam_TemplatePython.scn ""+sofaOutput+"".pyscndata > ""+curTime+"".scn""); ... call the scene; os.system(""rm ""+curTime+"".scn""); ```; In the .py file we load the data using; `self.defineDataFromJson(self.findData(""variables"").value[0][0])`; where; ```; def defineDataFromJson(self,jsonFilename=""outputJson"") :; f = open(jsonFilename,'r'); self.data = json.load(f); f.close(); def getValueOfData(self,keyOfData) :; if keyOfData in self.data.keys():; return self.data[keyOfData]; printStack(); sys.exit(""\nERROR\n the key ""+keyOfData+"" is not defined!\nERROR\n""); ```. Both of the solutions I consider as hacks, the first as it can not run in parallel and the second as the scene does not work without running php on the side, thus it does not work with one command line. Potential (final?) solutions would be:; - a command line argument or command line argument**s** for python scenes; -",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356:685,adapt,adapted,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356,2,"['adapt', 'variab']","['adapted', 'variables']"
Modifiability,"I am trying to add sofapython3 plugin using GUI, but the following error is showing up ; ![Capture_1](https://github.com/sofa-framework/sofa/assets/65168029/237e63a7-f0df-48f9-9935-e1985e084687); I have tried all other fixes (fixing sofa root, sofa python root, python home and so on), but no avail. I have even checked if its issue with .dll file, hence ran REGSVR32 using the .dll file, and Im getting the exact same error saying ""the specified module could not be found"". Kindly help me fix this. My OS is windows 10, and I have both python 3.8 and 3.9 on my system, and I have routed all sofapython related paths to python 3.8 only.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4493:31,plugin,plugin,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4493,1,['plugin'],['plugin']
Modifiability,"I am trying to compile SofaPython3/master with SOFA v20.06 and it doesnt compiles. This is one of the errors I have. The full log is 2k lines, I wont share if not needed. . ```FAILED: bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o; /usr/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_PROGRAM_OPTIONS_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_THREAD_DYN_LINK -DBindings_SofaRuntime_EXPORTS -DNDEBUG -DSOFA_HAVE_SOFAPYTHON3 -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/Plugin/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/Sofa/src -isystem /usr/include/python3.8 -isystem /usr/local/include/SofaSimulation -isystem /usr/local/include/SofaFramework -isystem /usr/local/include/extlibs/json -isystem /usr/local/include/eigen3 -isystem /usr/local/include/SofaBase -fPIC -fvisibility=hidden -std=c++17 -flto -fno-fat-lto-objects -Dregister= -fvisibility=hidden -std=c++17 -MD -MT bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -MF bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o.d -o bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -c /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp; In file included from /usr/local/include/SofaFramework/sofa/simulation/Node.h:59,; from /usr/local/include/SofaFramework/sofa/simulation/Simulation.h:25,; from /usr/local/include/SofaFramework/sofa/helper/AdvancedTimer.h:25,; from /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp:28:; /usr/local/include/SofaFramework/sofa/simulation/MutationListener.h:37:32: error: variable ‘sofa::simulation::SOFA_SIMULATION_CORE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429:531,plugin,plugin,531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429,4,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"I am unsure this PR is correct, so it really needs a green light from others before merge. When trying to call `std::exit` in some plugin, I had a segfault in cleanup code similar to this one:. ```c++; // Detect missing cleanup() call.; static const struct CleanupCheck; {; CleanupCheck() {; }; ; ~CleanupCheck() {; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()""); // segfault; }; } check;; ```. In fact, most `init.cpp` files in SOFA have code similar to this one. In my case, `MessageDispatcher::LoggerStream::~LoggerStream` caused a call to `MessageDispatcher::process` which would then cause a segfault. What I don't understand is *why* the above code snipped does not simply `cleanup()` the library in the destructor, since the latter is being called while the library unloads and this is the last chance to actually clean things up, instead of (trying to) emit a warning while the whole program is being terminated. So unless there is a compelling reason to leave it this way (and I would really like to know it), I suggest the above to be changed to:. ```c++; static const struct CleanupCheck; {; CleanupCheck() {; init();; }; ; ~CleanupCheck() {; cleanup();; // leaving the warning if for some reason cleanup failed; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()"");; }; } check;; ```. so that the library automatically `init()` and `cleanup()` upon `dlopen`/`exit`. <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168:131,plugin,plugin,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168,1,['plugin'],['plugin']
Modifiability,"I build sofa21.12 on Windows10, ; the complete cmake output is as follows. Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19043.; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; CMakeLists.txt:45 (cmake_dependent_option); This warning is for project developers. Use -Wno-dev to suppress it. -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: J:/GitHub/sofa/build/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:74 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). CMake Error at extlibs/CMakeLists.txt:28 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. CMake Error at extlibs/CMakeLists.txt:29 (set_target_properties):; set_target_properties Can not find target to add properties to: tinyxml. Using legacy headers is enabled.; Headers from v20.12 are usable, but it is advised to change your code to use the new headers introduced in v21.06.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") ; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: filesystem thread chrono atomic ; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:815,Config,Config,815,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,I built Sofa with the registration plugin successfully. When I had a test with ICPRegistration_ShapeMatching.scn in .\applications\plugins\Registration\examples. It reminded these errors:. [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/image/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/Registration/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/SofaPython/python’ to sys.path; [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/SofaPython.dll. [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/Registration.dll; [ERROR] [RequiredPlugin] Plugin not found: “SofaMiscForceFieldDev”; [ERROR] [DAGNode “source”] Object type “RotationFinder” creation Failed; [ERROR] [DAGNode “source”] Object type “ShapeMatchingForceField” creation Failed; [ERROR] [SceneLoaderXML] Node initialization failed. I didn’t find any information about this SofaMiscForceFieldDev plugin. Can anyone give me some tips about that?. Thanks in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:35,plugin,plugin,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,11,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin', 'plugins']"
Modifiability,"I copied/pasted a path with backslashes in the env variable SOFA_ROOT, and a bad thing happened. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2970:51,variab,variable,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2970,1,['variab'],['variable']
Modifiability,I could not open a SOFA scene using the following command line as per the documentation guidelines: . ls applications/plugins/SofaPython/examples/fontain.scn; applications/plugins/SofaPython/examples/fontain.scn. runSofa applications/plugins/SofaPython/examples/fontain.scn; [ERROR] [XMLParser] Failed to open applications/plugins/SofaPython/examples/fontain.scn; Failed to open file at line 0 row 0. The issue was encountered on both - Mac OS and Linux. ; Please help to solve this. Thank you!. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/569:118,plugin,plugins,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/569,4,['plugin'],['plugins']
Modifiability,"I did not bother to test/compile/configure, as it is based on Compliant which was deprecated (and abandoned I suppose) for quite a long time. for those who are curious -> https://github.com/sofa-framework/PreassembledMass. https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3802:33,config,configure,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3802,1,['config'],['configure']
Modifiability,"I don't believe there was a pull request already attached to issofa_plugins branch ? My apologies if that ; was the case. . # Purpose; Some basic plugin functionalities were silently changed for no good reasons other the past years, namely; - SOFA_LIBSUFFIX which should be set as ""_d"" during a debug build is broken under msvc since c89da68 which as the commit name says is indeed monstruous. It was ""fixed"" later by adding directly inside the PluginManager code a condition to add the ""_d"" suffix by checking the compiler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:146,plugin,plugin,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,4,"['Plugin', 'plugin']","['PluginManager', 'PluginRepository', 'plugin']"
Modifiability,"I encountered a little issue during the compilation of SOFA using Visual Studio 2017. The configuration of SofaHelper's project, generated by CMake, seems incorrect. Indeed, during the linkage step, instead of looking for **libpng16.lib** (or libpng16d.lib) in **src/lib/win64/** (or /src/lib/win32), it searches **libpng.lib** (or libpngd.lib) in **build/SofaKernel/SofaFramework/SofaHelper**. At the moment, the workaround is to copy-paste and rename the concerned libraries, or manually edit the SofaHelper's project configuration inside Visual Studio to fix the path.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/443:90,config,configuration,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/443,2,['config'],['configuration']
Modifiability,"I have a class method which calls a python function so I can easily script the functionality of that method. The implementation itself is something like this:. ```; VNCS::Real VNCS::PythonBlendingField::blending(const VNCS::Point_3 &p) const; {; // py::scoped_interpreter interpreter{};; std::array<double, 3> pyP{p[0], p[1], p[2]};; std::string modulePath = m_module.getRelativePath();; py::object blendingFieldModule = py::module::import(modulePath.c_str());; py::object blendingFieldAttr = blendingFieldModule.attr(""blendingField"");; double result = blendingFieldAttr(pyP).cast<double>();; return 0;; }; ```. However, this fails. Its not able to import the module. I have also tried with other modules like numpy or sys, but I have the same issue, a segfault. I ahve also tried to add an interpreter, but pybind11 complains about already having one interpreter, which I guess is related with the SofaPython3 one and therefore I believe this whole problem is because is trying to use from a plugin, the interpreter in another plugin. . Any idea of what I could do to fix this issue?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1544:993,plugin,plugin,993,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1544,2,['plugin'],['plugin']
Modifiability,"I have a debug compilation of SOFA with SofaPython3 plugin and when I try to assign in python to the rest position of a mechanical object, I get a crash due to the MO having size = 0. I am not sure how I should resize it from python or how to fix this. . ``` ; xN_mo = xNObject.addObject(""MechanicalObject"", template=""Vec1"", name=""xN_MO""); # xN_mo.resize(3) // Doesnt work; # xN_mo.size = 3 // Doesnt work; xN_mo.rest_position = np.array([[0,0.25,0.75]]).T; ```. This is the actual code, but no idea how to actually make it work... is this a known bug? How should I make it work?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1517:52,plugin,plugin,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1517,1,['plugin'],['plugin']
Modifiability,"I have a multimap in a plugin and I am unable to create it. ; The header file looks like this; ```; template <typename TIn>; class CPFMapping : public sofa::core::MultiMapping<TIn, TIn>; public:; SOFA_CLASS(SOFA_TEMPLATE(CPFMapping, TIn), //; SOFA_TEMPLATE2(sofa::core::MultiMapping, TIn, TIn));; CPFMapping(); : Inherit(); , m_C(initData(&m_C, ""C"", ""Cluster Matrix"")); {; }; ...; };; ```. and I register in the factory like this:; ```; static int register_testComponent =; sofa::core::RegisterObject(""CPFMapping"").add<CPFMapping<sofa::defaulttype::Vec3Types>>();; ```. When trying to create the component with python; ```; final.addObject(""CPFMapping"",; template=""Vec3"",; ```. I get the following error; ```; The object is in the factory but cannot be created. ; Requested template: Vec3d,Vec3d(Vec3d,Vec3d) ; Available templates: Vec3d,Vec3d, ; ```; I have tried `Vec3`, `Vec3d`, `Vec3,Vec3` and `Vec3d,Vec3d` without success. ; Not sure if this is a bug in SOFA or if I am doing something wrong with my component.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1293:23,plugin,plugin,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1293,2,"['Inherit', 'plugin']","['Inherit', 'plugin']"
Modifiability,"I have a plugin with custom components which I try to use in a python3 scene, but SOFA segfaults when trying to add them to the scene. . My component code is pretty simple, is a basic example. ```; namespace VNCS; {; template <typename DataType>; class Clustering : public sofa::core::objectmodel::BaseObject; {; using Inherit = typename sofa::core::objectmodel::BaseObject;; using Real = typename DataType::Real;. public:; SOFA_CLASS(SOFA_TEMPLATE(VNCS::Clustering, DataType), sofa::core::objectmodel::BaseObject);. Clustering(); : Inherit(); {; }. private:; };; } // namespace VNCS; ```. but a scene contain a component like this fails to load. ```; ...; fineObject = simulationNode.addChild(""Fine""); dObject = fineObject.addChild(""dObject""); dObject.addObject(""MechanicalObject"", template=""Vec1"", name=""d_MO""); dObject.addObject(""Clustering"", template=""Vec1"", name=""Clustering""); ```. with the following backtrace. ```; ########## SIG 11 - SIGSEGV: segfault ##########; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::dump()+0x23) [0x7fa97395db13]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::sig(int)+0x1df) [0x7fa97395deaf]; -> /usr/lib/libc.so.6(+0x3d6a0) [0x7fa9731316a0]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaCore.so.20.06.99(sofa::core::objectmodel::Base::findDataLinkDest(sofa::core::objectmodel::BaseData*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, sofa::core::objectmodel::BaseLink const*)+0x7c) [0x7fa97464790c]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaCore.so.20.06.99(sofa::core::objectmodel::BaseNode::setObjectContext(boost::intrusive_ptr<sofa::core::objectmodel::BaseObject>)+0x61) [0x7fa974664f11]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaSimulationCore.so.20.06.99(sofa::simulation::Node::doAddObject(boost::intrusive_ptr<sofa::core::objectmodel::BaseObject>)+0x40) [0x7fa974a57ef0]; -> /home/jjcasmar/D/libs/builds",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1476:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1476,3,"['Inherit', 'plugin']","['Inherit', 'plugin']"
Modifiability,"I have compiled and installed SOFA master branch with the CGAL plugin. In the compilation folder, under lib, I have libCGALPlugin.so, and if I do ldd libCGALPlugin.so, it founds all the dependencies. However, if I install SOFA, (`cmake --build . --target install`), libCGALPlugin.so is moved to a plugins folders, under `<install>/plugins/CGALPlugin/lib`, and ldd now shows that libCGALPlugin.so can't find all the dependencies. . Ive search a bit and apparently, the rpath is set to `$ORIGIN/../lib`, which is okay when the library is directly in the `<builddir>/lib` folder, but fails if the library is in `<installdir>/plugins/CGALPlugin/lib/`. . Due to this, its not possible to load the plugin. . This happens not only with with plugins, but for example also with `libSofaComponentAll.so`. It tries to load `libSofaOpenglVisual.so`. In the <builddir> works fine because both are under `<builddir>/lib`, but when installed, `libSofaOpenglVisual.so` is moved to `<installdir>/lib/SofaOpenglVisual/lib`, where `libSofaComponentAll.so` is not searching.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560:63,plugin,plugin,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560,6,['plugin'],"['plugin', 'plugins']"
Modifiability,"I need the unstable veision for the softrobot plugin, but it always come to an error when I try to download. Thanks; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1362:46,plugin,plugin,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1362,1,['plugin'],['plugin']
Modifiability,"I once noticed that the Geomagic examples had been changed since 18.06, where the position data link had been removed to follow change in the constraint resolution API.; However, it would cause a delay, as we can see at my [post](https://www.sofa-framework.org/community/forum/topic/problem-about-geomagic-plugin-in-v18-12/); I think this issue stems from the update of handling linearised constraints in v18.06.; Now, sofa has been updated to v19.06 but this problem still has not been solved yet.; Can anyone notice about this problem?; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1148:306,plugin,plugin-in-,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1148,1,['plugin'],['plugin-in-']
Modifiability,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1999:296,variab,variables,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999,1,['variab'],['variables']
Modifiability,"I recently had a small problem when a plugin was implicitly loading SofaConstraint from the SOFA's installation because its compilation was depending on it, but runSofa was launched from the build directory, hence loading SofaConstraint two times (one from the build directory, and one from the installation directory). This resulted in these output from the object manager:. ```; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:38,plugin,plugin,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,1,['plugin'],['plugin']
Modifiability,I suppose it is an old macro. Was not accesible from cmake config and always equal to true if compiled in debug mode. only a few code was using it and were already checking NDebug as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1232:59,config,config,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1232,1,['config'],['config']
Modifiability,"I switched to the dark side, running emacs as my IDE :smiling_imp:, and I was testing it on SOFA's codebase. (If you like coding & navigating through SOFA's codebase without having QtCreator transforming your laptop into an airplane, you should try it, it's great!) ; Anyway, I'd like to suggest adding some stuff to the .gitignore file:. * emacs auto-generates autosave files that have the following formats: `#*` and `~*` ; * When running emacs as an IDE, an emacs package called `projectile` creates a file called `.dir-locals.el`, containing project configuration, compilation, and running instructions for emacs in the project's root folder.; * Finally, Emacs uses `clangd` or `ccls` as its language servers. these programs store their index (LSP data for the project's codebase) in `.cache/` and `.ccls-cache/` respectively. clangd & ccls both require cmake to generate a `compile_commands.json` file, which we also don't want to be committed in the git repository. I also noticed that SOFA doesn't have a `.clang-format` file. A clang-format file gives great hints to contributors, regarding the formating guidelines for SOFA. This .clang-format file respects the [coding guidelines described here](https://www.sofa-framework.org/community/doc/programming-with-sofa/guidelines/); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884:554,config,configuration,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884,1,['config'],['configuration']
Modifiability,"I used the given CMakeList code in ""Create your scene in C++"" page to test the given source code in the same page. But when I run cmake to build, the error occured. I know where the SofaFrameworkConfig.cmake is and i had tied to change ""find_package(SofaFramework REQUIRED)"" to ""find_package(/home/user_name/sofa/src/sofabuild/install/lib/cmake/SofaFramework/SofaFramework REQUIRED)"", then other errors occured, which is still about some Config.cmake files not found. CMake Error at CMakeLists.txt:7 (find_package):; By not providing ""FindSofaFramework.cmake"" in CMAKE_MODULE_PATH this; project has asked CMake to find a package configuration file provided by; ""SofaFramework"", but CMake did not find one. Could not find a package configuration file provided by ""SofaFramework""; with any of the following names:. SofaFrameworkConfig.cmake; sofaframework-config.cmake. Add the installation prefix of ""SofaFramework"" to CMAKE_PREFIX_PATH or set; ""SofaFramework_DIR"" to a directory containing one of the above files. If; ""SofaFramework"" provides a separate development package or SDK, be sure it; has been installed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2784:438,Config,Config,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2784,4,"['Config', 'config']","['Config', 'config', 'configuration']"
Modifiability,"I was searching for a marching cube to render an implicit field (a real one, given from any analytic formulation not just metaball or blobs union). . I didn't find one, is there any ? ; While I was searching I found a least 4 different variations ...and thus wonder if there is no opportunity to refactor a bit. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/496:296,refactor,refactor,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/496,1,['refactor'],['refactor']
Modifiability,"I'm trying to install Sofa from the master branch with the Geomagic plugin. I'm getting the following error:. ```; /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp: In member function ‘void sofa::component::controller::GeomagicDriver::initDevice()’:; /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp:361:86: error: no matching function for call to ‘sofa::component::mapping::RigidMapping<sofa::defaulttype::StdRigidTypes<3, double>, sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float> >::setModels(sofa::component::container::MechanicalObject<sofa::defaulttype::StdRigidTypes<3, double> >*, sofa::component::visualmodel::OglModel*)’; visualNode[i].mapping->setModels(rigidDOF.get(), visualNode[i].visu.get());; ^; In file included from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Node.h:51:0,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Simulation.h:25,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/helper/AdvancedTimer.h:25,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyEngine.inl:29,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyData.inl:26,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseVisual/VisualModelImpl.h:34,; from /home/franc/sofa/src/SofaGeneral/../modules/SofaOpenglVisual/OglModel.h:34,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.h:33,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp:23:. /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/core/Mapping.h:88:18: note: candidate: void sofa::core::Mapping<TIn, TOut>::setModels(sofa::core::State<DataTypes>*, sofa::core::State<TOut>*) [with TIn = sofa::defaulttype::StdRigidTypes<3, double>; TOut = sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/892:68,plugin,plugin,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/892,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"I,. I'm factoring the code that is in double/float template specialization using the design pattern used in the Image plugin (an external class Specialization which is friend to the class to specialize). . The code in:. ``` cpp; BilateralInteractionConstraint<Rigid3fTypes>::getConstraintResolution(...); BilateralInteractionConstraint<Rigid3dTypes>::getConstraintResolution(...); ```. is different. ; Float is using . ``` cpp; temp->tolerance = 0.0001;; ```. Double is using:. ``` cpp; temp->tolerance = 0.01;; ```. Can someone check if this is expected or if this a kind of ""someone change the value in one place and forgot the other"". . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/45:118,plugin,plugin,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/45,1,['plugin'],['plugin']
Modifiability,ING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [Obje,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29831,Plugin,PluginManager,29831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"IPO state wont change anyway so it is useless to do the test every time. On Windows, this test takes 2sec (for a total of 7sec for a minimal SOFA configuration), so it is quite appreciable without it.; On linux (Ubuntu) it takes 200ms on my setup so barely perceptible... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4191:146,config,configuration,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4191,1,['config'],['configuration']
Modifiability,"If a class inherits from `Base` it already has 2 `initData` overloads available. So why redefining them in the `SOFA_CLASS` macro?; The third overload is not defined in `Base`, so I did it and remove the one in `SOFA_CLASS`.; In summary, the 3 `initData` overloads are only defined in `Base` and nowhere else. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3190:11,inherit,inherits,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3190,1,['inherit'],['inherits']
Modifiability,"If it is in a plugin, you need to load this plugin to load an other plugin :yo_dawg:. <img src=""https://user-images.githubusercontent.com/11028016/162191671-72defde9-badc-4f99-b0a3-9ec70a40531e.jpg"" width=""300"" />. so `RequiredPlugin` should always be available, even if no plugin is loaded.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2849:14,plugin,plugin,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2849,4,['plugin'],['plugin']
Modifiability,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2135:144,plugin,plugins,144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135,1,['plugin'],['plugins']
Modifiability,"If testing is enabled, the list of projects(i.e targets) gets very long at the root of the SOFA project. This PR lists all targets which is suffixed with __test_ or __simutest_ and put them into the ""Testing"" folder (where gtest, Sofa.Testing are located as well). ![Capture](https://user-images.githubusercontent.com/11028016/122558586-8bfb8b00-d03e-11eb-9043-49d204482cd0.PNG). This is done with a new custom macro called _sofa_get_all_targets_ which gives all the targets enabled in the project. Here in this PR, it is located at the end of the global CMakeLists, so it will also get tests related to external plugins, etc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2190:613,plugin,plugins,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2190,1,['plugin'],['plugins']
Modifiability,"If the flag SOFA_NO_OPENGL is active, the plugin VolumetricRendering; cannot be compiled. Add the proper CMake warning and error message.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/110:42,plugin,plugin,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/110,1,['plugin'],['plugin']
Modifiability,Image plugin add python plugin as a dependency even if we do not compile the plugin with python support,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/135:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/135,3,['plugin'],['plugin']
Modifiability,Image plugin installation does not preserve the file's hierarchy,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,1,['plugin'],['plugin']
Modifiability,Implementation of new API since refactoring of matrix assembly,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3967:32,refactor,refactoring,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3967,1,['refactor'],['refactoring']
Modifiability,"Implementation of the (2nd part of) proposal #281 . Quick Reminder:; - CMake generates the list of compiled plugins in a file (`plugin_list.conf.default`) at the configuration stage.; - runSofa loads this list at startup; - if the user creates a custom `plugin_list.conf`, it will load this list instead.; - add an option to bypass the file (thus disable automatic loading) in runSofa. Everything is done in the runSofa application (+small patch in the macro sofa_add_generic() in SofaFramework CMake modules ; that allows us to have a list of all added targets which is not possible in CMake 3.1) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301:108,plugin,plugins,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301,2,"['config', 'plugin']","['configuration', 'plugins']"
Modifiability,Implementations are sometimes in plugins and sometimes use a `d_multithreading` data.; We should find a way to make this homogeneous. Maybe as CUDA : a MTDataType ?,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2049:33,plugin,plugins,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2049,1,['plugin'],['plugins']
Modifiability,"Implicit solvers can be optimized to compute faster if the mass matrix is diagonal. Currently this information is not used, whereas it is known by the mass component. Implicit solvers must be adapted and have a special branch for diagonal matrix for faster computation. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923:192,adapt,adapted,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923,1,['adapt'],['adapted']
Modifiability,"In #2777, a new API to assemble matrices was introduced. I used this new API to avoid the need to implement `addDForce` if `buildStiffnessMatrix` is already implemented. In other terms, it unifies the `addDForce` and `buildStiffnessMatrix` (previously it was `addKToMatrix`. Indeed, those two functions are very similar as they are related to the derivative of the force. This PR is a proof of concept that is not ready to be merged. Indeed, I noticed losses of performances. And I also would like to make sure with the CI that everything works perfectly. The concept is implemented only on force fields (not interactions), and only for stiffness (no damping), but I can be easily extended to damping and masses. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4010:681,extend,extended,681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010,1,['extend'],['extended']
Modifiability,"In #3838 we agreed on the misleading variable `symmetricMatrix` in the MechanicalParams.; I propose here a simple change using `m_supportOnlySymmetricMatrix` et associated read/write access function updates. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3861:37,variab,variable,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3861,1,['variab'],['variable']
Modifiability,"In ImplicitSurfaceContainer:; Class name didn't match and also the namespace of DiscreteGridField. In applications/plugin/CMakeLists.txt:; SofaVolumetricData depends on SofaDistanceGrid and SofaImplicitField, so should be added first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/422:115,plugin,plugin,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/422,1,['plugin'],['plugin']
Modifiability,In PR #1485 we introduce DataLink & AbstractDataLink; In PR #1490 we remove the duplicated SingleLink<> parentData in BaseData to ease further refactoring; In this PR we can now cleanly replace the use of the SingleLink<Data<T>> by a DataLink class in Data.h. Once that done:; - we will be able to finally remove from BaseData & Data the code that lay there just because of the use of SingleLink.; - then remove in Link & BaseLink all the code that lay there to support SingleLink<BaseData>. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1491:143,refactor,refactoring,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1491,1,['refactor'],['refactoring']
Modifiability,"In advanced mode, would it be possible to have a link per line to abort all the compilations (every configs/platforms)?. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/203:100,config,configs,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/203,1,['config'],['configs']
Modifiability,"In both `LCPConstraintSolver` and `GenericConstraintSolver`, there is a list of constraint corrections as a class member. Both class inherits from the same base class and the lists are used equivalently. Therefore, I move them into the base class. I changed them from a `vector<BaseConstraintCorrection*>` to a `MultiLink`. These changes allows to unify `init`, `cleanup` and `removeConstraintCorrection` methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4117:133,inherit,inherits,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4117,1,['inherit'],['inherits']
Modifiability,"In collisionModel createPrevious method, propagate value from parent; ```cpp; pmodel->f_listening.setValue(f_listening.getValue());; pmodel->f_printLog.setValue(f_printLog.getValue());; ```. Fix bad resize method in ```CubeModel::ddCube```. Buffers where resized using the member ```size``` instead of a fix variable, previous code behavior:; ```cpp; int i = size; // size == 0; this->core::CollisionModel::resize(size+1);	// resize(0+1) -> size == 1 ; elems.resize(size+1); // elems.resize (1+1) instead of 0+1; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1202:308,variab,variable,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1202,1,['variab'],['variable']
Modifiability,In component FixeConstraint in function projectVelocity use Data flag instead of #define Flag to set velocity and free velocity to zero. ; @digitaltrainers and @matthieu-nesme . Suggested label enhance. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288:194,enhance,enhance,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288,1,['enhance'],['enhance']
Modifiability,"In https://github.com/sofa-framework/sofa/pull/1605, https://github.com/sofa-framework/sofa/pull/1611 and https://github.com/sofa-framework/sofa/pull/1632 were layed-out typeInfo subsystem refactoring. The general objective was to remove the ""magic"" and ODR violation of existing code.; The migration to the new system was postpone while NG refactoring & cleaning was progressing. ; Now it is done, let's go to deploy it. So in this step we are starting to use the new subsystem for ""selected"" type while printing a deprecation message for type that have not been migrated; . The PR shoul'nt break anything. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3288:189,refactor,refactoring,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3288,2,['refactor'],['refactoring']
Modifiability,"In https://github.com/sofa-framework/sofa/pull/3986, I introduced the computation of `H A^-1 H^T` in SparseLDLSolver. In this PR, I do the same but in the base class of all linear solvers. All linear solvers inheriting from `MatrixLinearSolver` can now benefit from this parallelization (except the matrix-free conjugate gradient). I benchmarked `examples/Demos/fallingBeamLagrangianCollision.scn`:. ```; <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4255:208,inherit,inheriting,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255,1,['inherit'],['inheriting']
Modifiability,"In my plugin I have derived a new type from `BaseObject`. ```class BlendingField : public sofa::core::objectmodel::BaseObject; {; virtual double blending(const Eigen::Vector3d &p) const = 0;; }; ```. In order to implemente this, I tried to add python bindings. ```; class BlendingField : public VNCS::BlendingField; {; public:; SOFA_CLASS(VNCS::py::BlendingField, VNCS::BlendingField);; BlendingField();; ~BlendingField() override;. VNCS::Real blending(const VNCS::Point_3 &p) const final;; };; ...; VNCS::Real VNCS::py::BlendingField::blending(const VNCS::Point_3 &p) const; {; const std::array<double, 3> pyP{p[0], p[1], p[2]};; PYBIND11_OVERLOAD_PURE(VNCS::Real, /* Return type */; VNCS::BlendingField, /* Parent class */; blending, /* Name of function in C++ (must match Python name) */; pyP /* Argument(s) */; );; }. void VNCS::py::module::blendingField(pybind11::module &m); {; pybind11::class_<VNCS::BlendingField, VNCS::py::BlendingField>(m, ""BlendingField""); .def(pybind11::init([](pybind11::args &args, pybind11::kwargs &kwargs) {; return new VNCS::py::BlendingField();; })); .def(""blending"", &VNCS::BlendingField::blending);; }; ```. This works fine in the sense that I can derive from BlendingField in SOFA, but I can't add it to a SOFA node, with the following error:. ```; [ERROR] [SofaPython3::SceneLoader] TypeError: addObject(): incompatible function arguments. The following argument types are supported:; 1. (self: Sofa.Core.Node, arg0: str, **kwargs) -> object; 2. (self: Sofa.Core.Node, arg0: Sofa.Core.Object) -> object. Invoked with: <Sofa.Core.Node object at 0x7fffac34bef0>, <prepare_scene.TestBlendingField object at 0x7fffac34bea0>; ```. Somehow, it looks that SOFA can't see the my class derives from sofa::core::objectmodel::BaseObject. I have tried to find any example of any other plugin creating its own bindings but couldn't find any. ; Any help with this would be amazing.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1547:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1547,2,['plugin'],['plugin']
Modifiability,"In order for SofaGuiQt to find NodeEditor a custom FindNodeEditorConfig.cmake was created in cmake/Modules but this file was obfuscating the real NodeEditorConfig.cmake that is packaged with the NodeEditor library when trying to find_package it in external plugins. I modified the CMakeLists.txt in sofa/gui/qt/ to use the proper find_package and link correctly to the NodeEditor::nodes target. This PR also fixes some unintentional renamings that were causing compile issue when SOFAGUIQT_ENABLE_NODEGRAPH is set to ON (it would be nice to be able to test this on the CI, or at least to build with SOFAGUIQT_ENABLE_NODEGRAPH=ON so that this doesn't happen again. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1424:257,plugin,plugins,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1424,1,['plugin'],['plugins']
Modifiability,In past PR we have removed the use of a Link to store link between two data and we use DataLink instead. ; As Link cannot store anymore a link between Data the type traits code can be removed from Link.h and BaseLink.h. . This is what this PR does (removing the un-needed). . The next step will consist in refactoring the whole Link to separate SingleLink & MultiLink. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1503:306,refactor,refactoring,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1503,1,['refactor'],['refactoring']
Modifiability,"In some cases (which ones?), gcc does not link against pthread which is necessary for the recently added AsyncSparseLDLSolver.; I got the case on the latest gcc on Manjaro (`gcc version 11.1.0`), and at least one other user is reported the same error #2736 . Same configuration with clang worked fine without so I suppose the added library comes from somewhere (but I dont where/what). ; This PR adds the necessary library in any case. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2739:264,config,configuration,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2739,1,['config'],['configuration']
Modifiability,"In the continuity of #1442 . Now plugin is here: https://github.com/sofa-framework/PSL. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4047:33,plugin,plugin,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4047,1,['plugin'],['plugin']
Modifiability,"Initially I wanted to fix issue #673 that prevents compilation with gcc > 8.1. But I was not able to prevent myself to refactore the class in the process. . CHANGELOG:; - Move the implementation from .h to .inl; - Move the definition of the inner class FCPHandler from the .h to .inl; - Group the class member according their visibility (public, protected, private) to avoid interleaving.; - Uniformize the source code comments; - Rename the class members (attributes) to make them consistent with the sofa coding style.; - Factorize the code that was ""duplicated"" in the .cpp between rigid3dtype, rigid3ftype, vec3d, vec3f (I welcome an alternative implementation). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/803:119,refactor,refactore,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/803,1,['refactor'],['refactore']
Modifiability,"Instead of suggesting to add the required plugins in the XML syntax, the goal is to use the scene loader to adapt the syntax to the type of file. For example, in Python, the message will be:. ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene: ; root.addObject('RequiredPlugin', name='Sofa.Component.AnimationLoop') # Needed to use components [FreeMotionAnimationLoop] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Algorithm') # Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Intersection') # Needed to use components [LocalMinDistance] ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3799:42,plugin,plugins,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799,5,"['adapt', 'plugin']","['adapt', 'plugins']"
Modifiability,"Instead, I use raw gpu pointers. I measured the performances on the scene `applications\plugins\SofaCUDA\scenes\benchmarks\CudaTetrahedronTLEDForceField_beam10x10x40_gpu.scn` on 50k time steps:. ```; before; [INFO] [BatchGUI] 50000 iterations done in 11.9961 s ( 4168.04 FPS). after; [INFO] [BatchGUI] 50000 iterations done in 10.3888 s ( 4812.87 FPS).; ```. Note that I did not change anything in the algorithm, except the following check:. ```cpp; if (FCrds.y < 0 || FCrds.y >= nbElements); {; FCrds.y = 0;; }; ```. I had to add this check because `FCrds.y` was often equal to `-1`, which then leads to out-of-bounds vector access. This check was not required before, because out-of-bounds texture returns 0.; I don't know if this behavior is intended or not. TODO:. - [x] Test that `CudaTetrahedronTLEDForceField` now compiles with CUDA 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3650:88,plugin,plugins,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3650,1,['plugin'],['plugins']
Modifiability,"Intersector, IntrUtility3, IntrTriangleOBB, IntrSphereOBB, IntrOBBOBB, IntrCapsuleOBB, RigidCapsule... (not exhaustive) come from a library called GeometricTools .; It would be great to move those classes into a independent plugin.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1624:224,plugin,plugin,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1624,1,['plugin'],['plugin']
Modifiability,"Introduce a new component:; It exports the global system matrix of the current context into a file. The exporter allows to write the file under several formats. The class is designed so more file format can be supported. For example, image export is added in the CImg plugin. An example is provided. Example:. ![image](https://user-images.githubusercontent.com/10572752/130434673-82d50165-2cc6-49f5-9298-241be36490ad.png). ![image](https://user-images.githubusercontent.com/10572752/130598924-8a805845-bb95-407a-972f-d68e56c18fb2.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2303:268,plugin,plugin,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2303,1,['plugin'],['plugin']
Modifiability,"Introduce the solvers from https://github.com/alxbilger/EigenLinearSolvers. Their description can be found in the readme. The readme mentions only speed ups, but I just found that `examples/Benchmark/Performance/TorusFall.scn` is slower with `EigenSimplicialLDLT` than `SparseLDLSolver`. Need more investigation. Questions for the review:. - Those components must be in Sofa or in a plugin?; - Do you like having Eigen as a prefix of the component? [I don't]. If no prefix, there is a conflict with the legacy solvers.; - What do we do with the csparse-based legacy solvers?; - If decided to remove them, how to deprecate? Do we rename EigenSimplicialLDLT to SparseLDLSolver?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2926:383,plugin,plugin,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2926,1,['plugin'],['plugin']
Modifiability,"Introduction (by Damien); Erwan is a new member of Defrost. He will work on sofa, cleaning the haptic plugins & finally make user interfaces. Here is his first PR (to practice writing tests and our workflow :)). This PR contains tests to validate the behavior of the IndexValueMapper engine which was not tested before. ; The component was selected as it is listed into the SofaNGExt list. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/319:102,plugin,plugins,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/319,1,['plugin'],['plugins']
Modifiability,"Introduction of a new component in the MultiThreading plugin: `ParallelBruteForceBroadPhase`. As the name suggests, it is a parallel implementation of the algorithm in the component `BruteForceBroadPhase`.; An example scene is also added to illustrate the use of this component. This is a comment I wrote in the example scene:. > ParallelBruteForceBroadPhase is interesting when there are many objects potentially in collision.; This scene has 72 cubes and a floor.; Each cube has a TriangleCollisionModel, a LineCollisionModel and a PointCollisionModel.; The floor has only a TriangleCollisionModel.; It results in n = 72 * 3 + 1 = 217 collision models.; It makes n*(n-1)/2 = 23436 pairs of collision models to test.; On a CPU with 6 cores, each core tests 3906 pairs of collision models. I tested this scene with 6 threads:; - Broad phase runs in 4.09 ms with the sequential implementation: `BruteForceBroadPhase`; - Broad phase runs in 1.56 ms with the parallel implementation: `ParallelBruteForceBroadPhase`. ![cubes](https://user-images.githubusercontent.com/10572752/115710959-3fb00980-a373-11eb-92ee-d16df0c190d4.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2038:54,plugin,plugin,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2038,1,['plugin'],['plugin']
Modifiability,"Introduction of wrappers, derived from `BaseMatrix` and `BaseVector`, to Eigen matrices. The wrappers are courtesy of @jnbrunet, from https://github.com/jnbrunet/caribou, and have been adapted to SOFA + missing functions for CGLinearSolver. `eigen::EigenMatrix` has the interface of `BaseMatrix`, so it can be used as a matrix storing the linear system, in a linear solver.; An example is provided in `CGLinearSolver`. Performances:. Tested on a cantilever beam from `examples/Components/linearsolver/FEMBAR-CGLinearSolver.scn`. **CompressedRowSparseMatrixMat3x3d**; [INFO] [BatchGUI] 1000 iterations done in 2.62389 s ( 381.113 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 2.23 5.32 2.59 0.21 2587.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:185,adapt,adapted,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['adapt'],['adapted']
Modifiability,"Introduction; =========; This PR refactor the class reflection feature. . In this PR didn't removed functionalities but i reorganized, rename and refactor them. . To ease the transition, I have let the old function available with a deprecated message trying at best to preserve feature. When the transitional layer will be removed (in a few month so) you may encounter compilation failure because of function removing, so it is highly suggested to quickly update your code. A dedicated section at the end of this document gives you hints on how to update you code. . Changes:. Move name decoding apsect in a separated file called NameDecoder.h; -------------------------------------------------------------------------------------------; Currently name processing is done in Base. This is generating an not needed noise ; for developper. So I moved all that name's related code into a separated file NameDecoder.h. ; So to get typeName, className, shortName, etc...you can now do:; ```cpp; NameDecoder::getTemplateName<MyObject>();; ``` ; The mecanism to implement custom name or template was too complex than what it should requiring to implement several function (the virtual one and the static one). So I propose here a different implementation where, to customize the template or className you just needs to implement the CustomClassName()/CustomTemplateName() static function in your class ...and everthing will work out of the box. For curious people have look at the SFINAE used to implement that in NameDecoder. The NameDecoder class is now used by the BaseClass to decode names. Remove duplicated custom template name; -------------------------------------------------------; A complete mecanisme is now implemented in the NameDecoder & BaseClass to provide default templateName for sofa object. The underlying idea was to remove the needs to those kind of code ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return ""CustomName""; } ; static std::string t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:33,refactor,refactor,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,2,['refactor'],['refactor']
Modifiability,"Issue #1521. ## Description:; This PR introduces two new modules in the framework:; - Sofa.Geometry: related to geometrical operations such as : area of a triangle, volume of a tetrahedra... Introduces to regroup all these operations instead of having *GeometricAlgorithms etc. **Not linked to any topology**. It is mostly empty for the moment.; - Sofa.Topology: defining how is define an Element (triangle, etc). ; Historically in SOFA, elements are defined as a vector of Indices. So this module regroups mainly what was in core/Topology.h and set each Element its own files (h/cpp). I suppose this is where *TopologyAlgorithms will lie in the future. ## Breaking; Nope, or nothing that I am aware of. ## Discussion; - Naming: both of those module (and namespace) has a Triangle/Edge/etc: e.g sofa::geometry::Triangle and sofa::topology::Triangle.; This may be confusing, especially without the namespace.; - See in the future how to link these modules with the much awaited [Caribou ](https://github.com/jnbrunet/caribou) plugin. ## Thanks; - @epernod ; - @jnbrunet ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1912:1025,plugin,plugin,1025,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1912,1,['plugin'],['plugin']
Modifiability,"Issue detected by @quentinfrancois0. This comes from a change in the Python configuration since the last High Sierra.; The line #include <Python/Python.h> involved a link ""Python"" to the python include, but this is no longer valid in High Sierra. This was causing a fail in the compilation (include not found). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/614:76,config,configuration,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/614,1,['config'],['configuration']
Modifiability,"Issue introduced in https://github.com/sofa-framework/sofa/pull/1167. The static variables were no longer initialized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3962:81,variab,variables,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3962,1,['variab'],['variables']
Modifiability,Issues with Sofa.Component.UserInterface.ConfigurationSetting,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:41,Config,ConfigurationSetting,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Config'],['ConfigurationSetting']
Modifiability,"It has somehow been forgotten during a refactoring. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3775:39,refactor,refactoring,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3775,1,['refactor'],['refactoring']
Modifiability,"It is required in case of multiple inheritance of BaseObject in a BaseLinearSolver . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2799:35,inherit,inheritance,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2799,1,['inherit'],['inheritance']
Modifiability,"It was agreed that runSofa is on its dying...but I see so much people that still use it so here is a set of patches to may make their live easier. I tried to spend as few time as possible so it is not super clean. . This PR contains: ; 1) Extend the live coding support. Before this PR only python script controller where concerned. Now any xml, pyscn and other is concerned when runSofa is started with the -i option. This is very usefull to make live demonstration, explaining scenes to an audiance or practice on small scene. It has no impact on user that don't start runSofa without -i. . 2) Currently Object that have messages in their logs exhibits small signs (green/yellow/red). This PR extends this behavior to the Node so it is more consistant and easy to locate the messages. . 3) Adds an openInEditor function in the pop menu in the scene graph to open the current scene in an external editor (It is nothing but I use that all the time in qtcreator and I wanted the same in sofa). Enjoy/. CHANGELOG for @hugtalbot & @guparan :; - [runSofa] ; - when using runSofa with the -i option adds live coding support for xml & pyscn scenes.; - adds icons (green, red, yellow) on nodes when their is message (before only the object have the icons). ; - in the scene graph pop-up menu adds an entry that open the current scene into an external editor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/337:239,Extend,Extend,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/337,2,"['Extend', 'extend']","['Extend', 'extends']"
Modifiability,"It was first signalled [here](https://www.sofa-framework.org/community/forum/topic/error-configure-sofa-in-cmake-gui-about-lpthreads/#post-11140). The compilation of the master branch fails with GCC v8.1, which is the default version in fedora 28. The compilation passed with GCC v.7.3 (default in fedora 27). I did not checked at which GCC version between those two this starts to happen. ```; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp: In instantiation of ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponseT(const sofa::core::MechanicalParams*, DataDeriv&) [with DataDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >; DataTypes = sofa::defaulttype::StdRigidTypes<3, double>]’:; /home/vm-fedora-28/sofa/SofaGeneral/../modules/SofaBoundaryCondition/FixedPlaneConstraint.inl:173:31: required from ‘void sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::projectResponse(const sofa::core::MechanicalParams*, sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv&) [with DataTypes = sofa::defaulttype::StdRigidTypes<3, double>; sofa::component::projectiveconstraintset::FixedPlaneConstraint<DataTypes>::DataVecDeriv = sofa::core::objectmodel::Data<sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > > >; typename DataTypes::VecDeriv = sofa::helper::vector<sofa::defaulttype::RigidDeriv<3, double>, sofa::helper::CPUMemoryManager<sofa::defaulttype::RigidDeriv<3, double> > >]’; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:58:44: required from here; /home/vm-fedora-28/sofa/modules/SofaBoundaryCondition/FixedPlaneConstraint.cpp:74:100: internal compiler error: in type_dependent_expression_p, at cp/pt.c:25100; ed int > ::const_iterator it = this",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/673:89,config,configure-sofa-in-cmake-gui-about-lpthreads,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/673,1,['config'],['configure-sofa-in-cmake-gui-about-lpthreads']
Modifiability,"It was pointed by @EulalieCoevoet that the callbacks update are only called when the modified data is accessed for reading. This has a consequence in the UX, when a data field value is changed in the inspector, the callback is only executed when data is accessed... but not when we click on the ""update"" or ""ok"" button. . It was thus suggested to trigger the callback by accessing the component state.; All other change are just cleaning and refactoring of the function. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3713:442,refactor,refactoring,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3713,1,['refactor'],['refactoring']
Modifiability,"It was reported that include_guard(GLOBAL) is problematic with third-party plugins so let's go back to the ""normal"" version. Signed-off-by: Damien Marchal <damien.marchal@univ-lille1.fr>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1467:75,plugin,plugins,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1467,1,['plugin'],['plugins']
Modifiability,"Just a little fix in SparseLDLImplInvertData, r of sparse is missing. ; Fix needed for Cuda plugins update in sofa-dev.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/74:92,plugin,plugins,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/74,1,['plugin'],['plugins']
Modifiability,"Just curious to see any difference with this macro defined. FYI, I get the same perf for few scenes : caduceus, RungeKutta4 and EMBAR_CGLinearSolver.scn.; (SOFA_NO_VMULTIOP is also used for CGLinearSolver<GraphScattered>). Note: the CI is useless on this PR, as this macro as to be defined manually in CXX_FLAGS or added in sofa/config.h header); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4325:329,config,config,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4325,1,['config'],['config']
Modifiability,Just removing unnecessary headers include inside header in sofa::core; No forward class or intelligent refactoring. any suggestion/remark is welcomed. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/638:103,refactor,refactoring,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/638,1,['refactor'],['refactoring']
Modifiability,"KE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4093,plugin,plugins,4093,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['plugin'],['plugins']
Modifiability,"Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2499,Plugin,Plugin,2499,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,Last but not least PR on SPH plugin to restore ParticleSink component.; - Move all code inside inl file; - Fix the extern template; - Add prefix d_ to data; - Fix global behavior; - Update the existing basic example scene ; - Add 2 others scenes using Topology changes and OglFluid rendering done in previous PR. ![ezgif com-crop](https://user-images.githubusercontent.com/21199245/67562701-8b063f00-f71f-11e9-9e0b-d72e2a0f347a.gif). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1195:29,plugin,plugin,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1195,1,['plugin'],['plugin']
Modifiability,"Last step to complete the task to unify the image importing process. Now that CImgPlugin is integrated, ImageBMP/ImagePNG and ImageQt can be removed from the trunk of Sofa. ; It lets all the responsibility of reading images to CImgPlugin (or any user custom plugin). (closes finally #9 and #51 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424:258,plugin,plugin,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424,1,['plugin'],['plugin']
Modifiability,Last uses of variable manually defined 3.14... ( for #799 ); Now uniformly using M_PI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1264:13,variab,variable,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1264,1,['variab'],['variable']
Modifiability,LeapMotion Plugin compilation errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1120:11,Plugin,Plugin,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1120,1,['Plugin'],['Plugin']
Modifiability,"Let's move modules to plugins!. As pluginizing is a big hard for a coding sprint, we will mainly do preparatory work for future pluginization.; This means:; - [x] Solve SceneCreator dependencies problem; - [x] Identify at least one module to pluginize; - [x] If we have time, pluginize a module",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/427:22,plugin,plugins,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/427,5,['plugin'],"['pluginization', 'pluginize', 'pluginizing', 'plugins']"
Modifiability,"Let's not pollute the `plugins` directory of SOFA install with all the old modules like SofaBaseMechanics that are now collections.; I created a new `collections` directory for them, working the same way as `plugins`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3196:23,plugin,plugins,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3196,2,['plugin'],['plugins']
Modifiability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:20,config,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,2,['config'],"['configuration', 'configurations']"
Modifiability,"Libraries for debug configuration have suffix ""d"". For that reason release and; debug configurations must have different pragmas for linking libpng and zlib; under MSVS. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/298:20,config,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/298,2,['config'],"['configuration', 'configurations']"
Modifiability,"Lines 97, 100 and 101 not compiling: https://github.com/sofa-framework/sofa/blob/cfda6846a2b3135ac88d6f7a0f363641a556cbf0/applications/plugins/Geomagic/src/Geomagic/GeomagicDriver.cpp#L97-L101. Errors not detected on the CI because inside #if GEOMAGIC_HAVE_OPENHAPTICS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2229:135,plugin,plugins,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2229,1,['plugin'],['plugins']
Modifiability,"Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8739,Plugin,PluginManager,8739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Us,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4738,Plugin,PluginManager,4738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,Management of the inclusion pipeline for config.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/904:41,config,config,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/904,1,['config'],['config']
Modifiability,Manager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6712,Plugin,PluginManager,6712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"Manager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Please suggest. Thanks; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2156,Plugin,PluginManager,2156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"Manager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9584,Plugin,PluginManager,9584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"May I ask, when compiling Sofa v21.12 and previous versions, there was an issue where plugins could not be used, but after Sofa v22 version, this problem no longer exists. Currently, I need to use the Optimus plugin (compatible with Sofa v21.12), so how can I solve this problem for all the experts?. cmake_minimum_required(VERSION 2.8.12); find_package(SofaFramework); sofa_add_subdirectory(plugin STLIB/ STLIB VERSION 3.0). CMake Error at //path/to/SOFA/ext_plugin_repo/CMakeLists.txt:5 (sofa_add_subdirectory):; sofa_add_subdirectory Macro invoked with incorrect arguments for macro named: sofa_add_subdirectory. Before Sofa v21.12, it seems that Sofa_add_Subdirectory cannot be recognized. Could you please modify it to something that can recognize it??. Thank you all!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4941:86,plugin,plugins,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4941,3,['plugin'],"['plugin', 'plugins']"
Modifiability,MeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFac,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29679,Plugin,PluginManager,29679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"Message before:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro. Use 'sofa_add_subdirectory(plugin ...)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. Message after:; ```; CMake Warning at C:/projects/sofa-src/Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:454 (message):; Deprecated macro 'sofa_add_plugin'. Use 'sofa_add_subdirectory(plugin caribou caribou)' instead.; Call Stack (most recent call first):; C:/projects/sofa_plugins/CMakeLists.txt:19 (sofa_add_plugin); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3611:75,Config,Config,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3611,4,"['Config', 'plugin']","['Config', 'plugin']"
Modifiability,"Metis is installed only in the folder of the first plugin fetching it. Making the other one fail to find it. Moving it into the main folder with CMake is not really meaningful. The plugin should not fix something that is at higher level in the CMake hierarchy as itself (aka, fix install issue when another target depends on one of its dependency)... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767:51,plugin,plugin,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767,2,['plugin'],['plugin']
Modifiability,"Minor cleaning. No change of behavior is expected. - Static member is accessed through an instance; - Unused using; - Duplicated branch content; - Rename local variable; - const; - comments; - No need to deal with a pointer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1899:160,variab,variable,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1899,1,['variab'],['variable']
Modifiability,"Minor cleaning:. - Remove includes and prefer forward declaration; - Name scope timers to avoid immediate destruction (however, I had a runtime error with this one: https://github.com/sofa-framework/sofa/blob/2072f967ae73a21c4fb95839ee15aedd0535d90a/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/UpdateBoundingBoxVisitor.cpp#L52); - Condition is evaluated at compile-time instead of run-time (although I guess the compiler is smart enough).; - A private Data is removed; - A local variable was shadowed by another local variable (dx). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1926:493,variab,variable,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1926,4,['variab'],['variable']
Modifiability,"Minor refactoring to simplify the reading (it avoids the call to many `for` loops), and to match https://github.com/sofa-framework/sofa/pull/3981. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3983:6,refactor,refactoring,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3983,1,['refactor'],['refactoring']
Modifiability,Modularizing & Refactoring SofaVolumetricData,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:15,Refactor,Refactoring,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,1,['Refactor'],['Refactoring']
Modifiability,Modularizing config.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/475:13,config,config,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/475,1,['config'],['config']
Modifiability,Module are systematically compiled which have a sensible impact to Sofa. ; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they ; don't need. In this PR I'm moving SofaMiscCollision & SofaSphFluid. ; I made the two because there is a dependency between them. ; There should be no big problem with this PR. ; But in the main CMakeList.txt I change the order of subdirectories so that plugins are before scenecreator. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/407:96,plugin,plugin,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/407,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Modules for pluginization contain a dot (Sofa.GL, Sofa.Types, etc),; and custom macro (sofa_create_package_with_targets) generates preprocessor definitions according to the name.; So with the new modules name, the macro creates a preprocessor definition with a dot '.' , but this is not permitted by the C preprocessor. So this PR replaces a '.' with a '_' for the generated definitions.; Fix #1695 (and seems to remove a warning generated by clang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1701:12,plugin,pluginization,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1701,1,['plugin'],['pluginization']
Modifiability,Modules: Update variable name,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1986:16,variab,variable,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986,1,['variab'],['variable']
Modifiability,Modules: shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1968:16,variab,variable,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1968,1,['variab'],['variable']
Modifiability,"More or less trial-and-error works to make the SofaPython3 plugin compilable out-of-tree (and obviously others one too). Various stuff:; - out-of-date cmake vars; - need to reference old modules in the cmake.in (i dont really understand this issue); - remove completely SofaSimulationCore (was supposed to be deleted for v21.12) and add an error if used. I dont know if it is useful though. There were some f*ckey with the project/module called Sofa.SimulationCore but the folder SofaSimulationCore in any case. I put fast-merge because this is quite urging but some cmake-specialized eyes are needed 👀 . By the way, with this branch, I can compile SofaPython3 out-of-tree on Windows/MSCV2022. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3031:59,plugin,plugin,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3031,1,['plugin'],['plugin']
Modifiability,"Most of the components in `Sofa.Core/behavior` work by accessing one or more mechanical states, in order to access state variables, such as position, force etc. They all manage their own way to store, find and manage their link to one or more mechanical states. Instead, I suggest to factorize this access using intermediate classes. It comes with the following features:. - All components inherit from `StateAccessor`, which contains a dynamic list of `BaseMechanicalState`; - Components having access to only one mechanical state inherit from `SingleStateAccessor`. It is templated on `DataTypes`, with a link to a `MechanicalState<DataTypes>`.; - Components having access to 2 mechanical states inherit from `PairStateAccessor`. It is templated on `DataTypes1` and `DataTypes2`, with a link to a `MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` ha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:121,variab,variables,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,5,"['inherit', 'variab']","['inherit', 'inheriting', 'variables']"
Modifiability,"Mostly in MeshSTEP plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4067:19,plugin,plugin,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4067,1,['plugin'],['plugin']
Modifiability,"Move Flexible code (and its history) to its own repository : https://github.com/sofa-framework/Flexible; And the same with Compliant: https://github.com/sofa-framework/Compliant. CI has been updated so it should fetch and enable those two plugins. EDIT: adding one more repo, RigidScale, as it is 100% depending on those two plugins. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1873:5,Flexible,Flexible,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873,4,"['Flexible', 'plugin']","['Flexible', 'plugins']"
Modifiability,"Move ManifoldTopologies and its history to its own repository : https://github.com/sofa-framework/ManifoldTopologies . the configure script on the CI has already been updated. It has its own CI too (and releases). (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2623:123,config,configure,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2623,1,['config'],['configure']
Modifiability,"Move OpenCTMPlugin and its history to its own repository : https://github.com/sofa-framework/OpenCTMPlugin . Not compiled by the CI, and was even not present in the CMakelists of the plugins directory by the way. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2564:183,plugin,plugins,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2564,1,['plugin'],['plugins']
Modifiability,"Move OptitrackNatNet and its history to its own repository : https://github.com/sofa-framework/OptitrackNatNet. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2548:116,config,configure,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2548,1,['config'],['configure']
Modifiability,"Move PluginExample and its history to its own repository : https://github.com/sofa-framework/PluginExample (with brand-new github actions 😎). the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2519:5,Plugin,PluginExample,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2519,3,"['Plugin', 'config']","['PluginExample', 'configure']"
Modifiability,"Move Registration and its history to its own repository : https://github.com/sofa-framework/Registration. the configure script on the CI has already been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2552:110,config,configure,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2552,1,['config'],['configure']
Modifiability,"Move SofaCUDA and its history to its own repository : https://github.com/sofa-framework/SofaCUDA. CI is building SofaCUDA on Windows so the configure script has been updated. (#1527 , #1442). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2502:140,config,configure,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2502,1,['config'],['configure']
Modifiability,"Move THMPGSpatialHashing and its history to its own repository : https://github.com/sofa-framework/THMPGSpatialHashing . the configure script on the CI has already been updated. It has its own CI too (and releaases). (#1527 , #1442). It just introduces one new component, THMPGSpatialHashing which is a colllision pipeline (i.e implements broad and narrow phases detection). ; After some tests it is slower than the standard bvh one, so it does not seem really important to maintain IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:125,config,configure,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,1,['config'],['configure']
Modifiability,Move TaskScheduler files from Multithreading plugin to Sofa Kernel. This change allows any plugins to use the TaskScheduler without adding the dependency on the MultiThreading plugin. The MultiThreading plugin will be a collection of components using the TaskScheduler to parallelize some computation. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/805:45,plugin,plugin,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/805,4,['plugin'],"['plugin', 'plugins']"
Modifiability,"Move of CImgData was not done in CGAL plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2345:38,plugin,plugin,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2345,1,['plugin'],['plugin']
Modifiability,Move the bindings files and script controllers files to subdirectories to lighten the plugin a little bit. New structure:. ```; SofaPython; ├── Binding.cpp; ├── Binding.h; ├── Bindings; │   ├── BaseContext.cpp; │   ├── BaseContext.h; │   ├── Base.cpp; │   ├── Base.cpp.orig; │   ├── Base.h; │   ├── Base.h.orig; │   ├── BaseLoader.cpp; │   ├── BaseLoader.h; │   ├── BaseMapping.cpp; │   ├── BaseMapping.h; │   ├── BaseMechanicalState.cpp; │   ├── BaseMechanicalState.h; │   ├── BaseMeshTopology.cpp; │   ├── BaseMeshTopology.h; │ └── ...; ├── CMakeLists.txt; ├── initSofaPython.cpp; ├── PythonCommon.h; ├── PythonEnvironment.cpp; ├── PythonEnvironment.h; ├── PythonFactory.cpp; ├── PythonFactory.h; ├── PythonMacros.cpp; ├── PythonMacros.h; ├── PythonToSofa.inl; ├── PythonVisitor.cpp; ├── PythonVisitor.h; ├── SceneLoaderPY.cpp; ├── SceneLoaderPY.h; ├── scn2python.py; ├── ScriptController; │   ├── PythonMainScriptController.cpp; │   ├── PythonMainScriptController.h; │   ├── PythonScriptController.cpp; │   ├── PythonScriptController.h; │   ├── PythonScriptControllerHelper.cpp; │   ├── PythonScriptControllerHelper.h; │   ├── PythonScriptDataEngine.cpp; │   ├── PythonScriptDataEngine.h; │   ├── PythonScriptEvent.cpp; │   ├── PythonScriptEvent.h; │   ├── PythonScriptFunction.cpp; │   ├── PythonScriptFunction.h; │   ├── ScriptController.cpp; │   ├── ScriptController.h; │   ├── ScriptDataEngine.cpp; │   ├── ScriptDataEngine.h; │   ├── ScriptEvent.cpp; │   ├── ScriptEvent.h; │   ├── ScriptFunction.cpp; │   └── ScriptFunction.h; ├── SofaPythonConfig.cmake.in; ├── SofaPython.txt; └── ...; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/616:86,plugin,plugin,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/616,1,['plugin'],['plugin']
Modifiability,Moving SOFA modules to plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/128:23,plugin,plugins,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/128,1,['plugin'],['plugins']
Modifiability,Moving plugins out in external sofa-framework repositories (STC#9),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1442:7,plugin,plugins,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1442,1,['plugin'],['plugins']
Modifiability,Multi-Mesh loader design (Assimp plugin integration),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/602:33,plugin,plugin,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/602,1,['plugin'],['plugin']
Modifiability,"Multiple errors with the out-of-tree process for SOFA, especially after the Sofa.Config merge.; This PR should fix this, plus some issues with Sofa.GL being a relocatable ""plugin"" 🤔. Tested with SofaPython3 out-of-tree. (no CI test for that yet). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1863:81,Config,Config,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1863,2,"['Config', 'plugin']","['Config', 'plugin']"
Modifiability,"Multithread/image: *Config.cmake.in were still using deprecated packages; Sofacuda: add dep (missing from a deprecated package). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3209:20,Config,Config,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3209,1,['Config'],['Config']
Modifiability,"My IDE found that some variables could be made `constexpr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2472:23,variab,variables,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2472,1,['variab'],['variables']
Modifiability,Name / link change : ; - from https://github.com/sofa-framework/plugin.HighOrder; - to https://github.com/sofa-framework/SofaHighOrder. More info: https://github.com/sofa-framework/plugin.HighOrder/issues/5. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1430:64,plugin,plugin,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1430,2,['plugin'],['plugin']
Modifiability,"Namely BoxROI, SphereROI and MeshROI, sharing a common codebase (BaseROI). Massive refactoring. Lots of similar data, features, code across these components, lots of inconsistencies as well; - some filters quads, hexas, some not;; - some are doing the inverse selection, some not,; - some implements strict mode (aka the whole element is inside in the ROI, contrary to the normal mode where it is the center which is tested). Draw functions were copy-pasted ; lots of copy instead of reference as well.; The init procedure was very similar as well (if no one gives me X, I will search for mechanicalOjbect or a meshloader); Some classes use singular (quadIndices) some plural (quadsIndices)... ---; So this PR does gather everything with a common base with all the features (draw, strict mode, all the element types) and try to be quite generic.; Code could be even more generic and it could be very easy to add a new element type but it is not done for the moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4839:83,refactor,refactoring,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4839,1,['refactor'],['refactoring']
Modifiability,Need to implement a use-case of the constraint labeling introduced in #3888.; Ideas would be :; - Filter automatically non unilateral constraints in the LCPConstraintSolver; - Change behavior of 'ActuatorConstraints' in Soft robot plugin when needed . As discussed with @hugtalbot and @alxbilger,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3926:231,plugin,plugin,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3926,1,['plugin'],['plugin']
Modifiability,"Needed by #459 ; @fjourdes I let you add informations in the comments 😉 . ## issofa_constraintsolving. ### New features; - Add correctionVelocityFactor and correctionPositionFactor Data in UncoupledConstraintCorrection to experiment with modulating the constraint response influence on visual tool positions.; - Add more detail in timing of GenericConstraintSolver. ### Improvements; - Constraint problem locking extended to be safer (but not yet completely safe) when using multiple forcefeedback devices.; - GenericConstraintCorrection: automatically search LinearSolver from context when solverName is not specified (same behavior as LinearSolverConstraintCorrection).; - Factorize the computation of the compliance matrix and virtualize the computation of dx.; - Improve UncoupledConstraintCorrection compliance computation. Use the same factors for the compliance matrix computation and the correction computation as the one used in LinearSolverConstraintCorrection. ### Cleans; - Clean and Optimize UncoupledConstraintCorrection, factorize code between rigids and vecs, optimize addComplianceInConstraintSpace significantly for large number of constraints.; - Move new constraint accumulation visitors from GenericConstraintSolver.h to MechanicalVisitor.h so that they can be used by other solvers.; - Code refactoring in GenericConstraintCorrection. ### Bugfixes; - Fix FreeMotionAnimationLoop allocates the freeposition / freevelocity as first thing in the time step.; - Fix Haptic mode with haptic influence from constraints applied on all frames. It was not working well on the simulation side.; - Add a correction velocity factor and correction position factor as data in UncoupledConstraintCorrection.; - Fix, the GenericConstraintSolver was not providing the correct number of interations for profiler stats.; - GenericConstraintCorrection's ODESolver is now searched locally.; - Fix the Local Jacobian Matrix. It was not resized when no more constraints were applied on a MechanicalState",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/484:413,extend,extended,413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/484,1,['extend'],['extended']
Modifiability,"Needed to build Flexible out-of-tree (yes, I tried to do that).; Surely needed to build other plugins too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2444:16,Flexible,Flexible,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2444,2,"['Flexible', 'plugin']","['Flexible', 'plugins']"
Modifiability,"New plugins are / should soon be released, and it could be nice to get them fetchable from SOFA:; - Caribou; - BeamAdapter",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2484:4,plugin,plugins,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2484,1,['plugin'],['plugins']
Modifiability,"No information is given when the initExternalModule entry point is called.; For 99.999% of the plugins, there is nothing special in it but some (SofaPython3, I am looking at you) is doing a lot of ""failable"" things when it is called.; This PR is a potential solution to this problem, by adding a (optional) entry point to check if the plugin reports by itself that it was loaded successfully. This allows SOFA to not crash if a problem arises in SofaPython3 when calling PythonEnvironment::Init() . It is not really necessary for the ""ci depends on"" as the two PR can compile without needing the other one; but it makes sense to merge them in the same time I think. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/210]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425:95,plugin,plugins,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:133,Plugin,PluginManager,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,14,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"Now we have a tool to list the deprecated components, we can build with `SOFA_WITH_DEPRECATED_COMPONENTS=OFF` + `APPLICATION_GETDEPRECATEDCOMPONENTS=ON` and ignore scenes using deprecated components during scene tests. I also added a function to ignore scenes using non-existent (because disabled) plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/611:298,plugin,plugins,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/611,1,['plugin'],['plugins']
Modifiability,"Now, this action checks and make sure that sufficiently descriptive labels are set.; Among the 8 possible labels:; - enhancement; - deprecated; - refactoring; - pr: breaking; - pr: clean; - pr: fix; - pr: new feature; - pr: test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4079:117,enhance,enhancement,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4079,2,"['enhance', 'refactor']","['enhancement', 'refactoring']"
Modifiability,"NumericalIntegration_test.cpp.o Sofa_test.h (734 ms); ... 62158 ms: sofa/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h (included 143 times, avg 434 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (936 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (850 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (831 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (825 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (806 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (792 ms); ... 54486 ms: /opt/Qt/5.15.0/gcc_64/include/QtWidgets/qwidget.h (included 94 times, avg 579 ms), included via:; QSofaStatWidget.h QLabel qlabel.h qframe.h (1332 ms); QTabulationModifyObject.h QWidget (1308 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1240 ms); QSofaStatWidget.h QLabel qlabel.h qframe.h (1237 ms); mouseGrabber.h config.h QOpenGLWidget qopenglwidget.h QWidget (1159 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1153 ms); ... 50534 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/logging/Messaging.h (included 122 times, avg 414 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx (1185 ms); cmake_pch.hxx.json cmake_pch.hxx (1155 ms); cmake_pch.hxx.json cmake_pch.hxx (1143 ms); cmake_pch.hxx.json cmake_pch.hxx (1029 ms); cmake_pch.hxx.json cmake_pch.hxx (1017 ms); cmake_pch.hxx.json cmake_pch.hxx (995 ms); ... 48975 ms: sofa/applications/plugins/SofaTest/../SofaTest/Sofa_test.h (included 83 times, avg 590 ms), included via:; VariationalSymplecticImplicitSolverNonLinearForceDynamic_test.cpp.o Elasticity_test_deprecated.h Elasticity_test.h (913 ms); TransformEngine_test.cpp.o (891 ms); SparseGridTopology_test.cpp.o (805 ms); TetrahedronNumericalIntegration_test.cpp.o (779 ms); AffineMovementConstraint_test.cpp.o Elasticity_test.h (767 ms); MeshROI_test.cpp.o (755 ms); ... 38428 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:31894,config,config,31894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['config'],['config']
Modifiability,O.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2596,Plugin,PluginManager,2596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"OR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4738,Plugin,Plugin,4738,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"O] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWith",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6331,Plugin,PluginManager,6331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11825,Plugin,PluginManager,11825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"On MacOS, I experienced a big problem since my OS upgrade to Big Sur. ; runSofa viewport remaining blank, either with QGL viewer or OpenGL viewer, with the following error message in the terminal:; ```; qt.qpa.openglcontext: Could not create NSOpenGLContext with shared context, falling back to unshared context.; ```; I finally figured it out: My Qt version was 5.15.x (installed with brew or the Unified Installer) and there seems to be a problem here, at least with my configuration : Intel Mac, with ATI GPU, MacOS 11.2.3.; **Downgrading Qt to 5.12.5 is a workaround.** It's a dirty fix that works, where a complete reinstall of Xcode and dependencies did not. At least I have a working build of runSofa now :-). I really have no idea of the exact cause of the problem, maybe related to my Mac configuration, GPU drivers or use of deprecated API by SOFA, but I hope this could help someone with the same problem.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2028:472,config,configuration,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2028,2,['config'],['configuration']
Modifiability,"On Windows, when doing INSTALL, relocatable dlls have to be copied to install_dir/bin (because there is no RPATH on Windows).; This is done by `windows-postinstall-fixup.sh` but this script is executed only if the CMake option `SOFA_BUILD_RELEASE_PACKAGE` is ON. To do: rewrite `windows-postinstall-fixup.sh` in CMake and make sure it's always executed after install.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2353:270,rewrite,rewrite,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2353,1,['rewrite'],['rewrite']
Modifiability,On my way to fix this issue https://github.com/sofa-framework/sofa/issues/895; I found that the Xsp code was duplicated with a C and a C++ version. . So I refactored the two and I added some tests to the files. ; On of the added test in ReadState_loadFailure is currently failing...wich is expected as it shows an existing problem for which fixing is outside the scope of the PR. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918:155,refactor,refactored,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918,1,['refactor'],['refactored']
Modifiability,One more plugin in Sofa. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/477:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/477,1,['plugin'],['plugin']
Modifiability,One more plugin in Sofa. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/486:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/486,1,['plugin'],['plugin']
Modifiability,"One package was missing in the SofaMeshCollisionConfig.cmake.in, so out-of-tree projects using sofameshcollision are throwing error while doing the cmake config. (allows to compile the plugin beamadapter out-of-tree). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2400:154,config,config,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2400,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"One type to rule them all... ©. Bigger than expected PR; made to harmonize index type for templated Vector/Mat type.; (some had int as index type, other unsigned int, or std::size_t, etc); ~Surprisingly not very breaking with MSVC, but GCC (and clang?) does break when templates declared as int.; (flexible/compliant was a PIA to fix)~ After a fuckton of commits, I regret this sentence 🙃. MAIN BREAKING POINT: VisualModelImpl needs indices to be int and not long (like std::size_t) so it cannot take directly the topology types (Triangle, Quad, etc) for its buffers. Thats why there are now VisualEdge, VisualTriangle, VisualQuad which still takes index as int.; (main reason is that graphical systems (OpenGL, etc) only can manage integers). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1453:298,flexible,flexible,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1453,1,['flexible'],['flexible']
Modifiability,Only some cleaning in:; - Class define macro; - Data and member prefix; - Move code from header to inl or cpp files. Update several plugin demo scenes. ![SpatialGridContainer_00000001](https://user-images.githubusercontent.com/21199245/66745709-13632500-ee80-11e9-9cfe-94e1a9e4d27c.png); ![SPHFluidForceField_benchmarks_00000001](https://user-images.githubusercontent.com/21199245/66745711-13632500-ee80-11e9-8382-738a86b68c3c.png); ![SPHFluidSurfaceMapping_00000001](https://user-images.githubusercontent.com/21199245/66745713-13fbbb80-ee80-11e9-98a1-ea1386f91c19.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186:132,plugin,plugin,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186,1,['plugin'],['plugin']
Modifiability,"Originally, the goal was not really to go for ; - #4221. But more to upgrade the gtest version, as the one in SOFA is really old (1.7.0 , *Sep 19, 2013* :exclamation: ) and was throwing warnings for newer cmake.; So instead of simply update the source in extlibs, I took the liberty to go into the find/fetch mechanism. A bit difficult as the CMakefile in the embedded version was heavily customized, so I am not 100% sure the install/package process is working well. But it should 😅. Last note: it is adding a target `gtest_main` which is always activated in the gtest cmake file. It is not used by SOFA as we have our own main for gtest. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/5]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471:689,Plugin,PluginExample,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471,1,['Plugin'],['PluginExample']
Modifiability,PR #139 moved licence.txt into license.LGPL.txt. This changed has not been propagated in the cpack config. I didn't create a branch as only one line is modified. Hope it doesn't break the CI... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194:99,config,config,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194,1,['config'],['config']
Modifiability,"PR #1788 from @courtecuisse should address branch sofa/v20.12 instead of master. This PR is potentially breaking, since it replaces `getSizeX()` and `getSizeY()` which might be used in external CUDA plugins. I'll transform the other PR into a backport to master so we can discuss it on the next meeting. Original PR message:. > @courtecuisse:; > Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa.; > This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1805:199,plugin,plugins,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1805,1,['plugin'],['plugins']
Modifiability,"PR #2036 rebased and to be merge inside topologyChanges PoC branch. Add mechanism of callbacks inside ```TopologyHandler``` instead of inheriting from it and override methods. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ![image](https://user-images.githubusercontent.com/21199245/121326580-fa3f9f80-c912-11eb-9d89-0966330bbded.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2087:135,inherit,inheriting,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2087,2,['inherit'],['inheriting']
Modifiability,"PR #351 should be merged before. ## Description. This PR aims at meshing an implicit shape with CGAL ; ImplicitShape is a concept of class (inheriting from BaseObject) defining any implicit shape by a common method `eval(Point p)` which returns the value of the function at this point.; Basically, it's possible to create a component inheriting from ImplicitShape, to describe a shape (torus, sphere etc.) by its literal equation. ## User Guide. A Sofa scene file is featured (in the CGALPlugin scene repertory) and allows the user to choose the type of ImplicitShape he wants to mesh, and to change the values relating to the mesh (**facet_size**, **approximation** and **cell_size**). - Fill the scene with a shape :. `<DistanceGridComponent` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""grid_cmp""`; > .tmg is our extention file which is actually a simple list of values corresponding to the function evaluated at each point : see PR #353 ; `filename=""/path/file.tmg""` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nx=""243""` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ny=""243"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`nz=""243""` ; `/>` . or ; `<ImplicitSphere name=""sphere"" />`. or any class inhereting from ImplicitShape. - Modify the mesh component value's and use the correct component in the link. ` <MeshGenerationFromDG` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`name=""mesh"" `; > The 3 following parameters can change the execution time (from a few seconds to much more) ; `facet_size=""0.7"" ` ; `approximation=""0.5""` ; `cell_size=""0.4"" ` . &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`drawTetras=""false""` . > Then the link ; `function=""@sphere""` which is actually a torus ; or	 ; `grid=""@grid_cmp""`; ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymin_box=""0.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`zmin_box=""-5.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`xmax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;`ymax_box=""27.0"" ` ; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354:140,inherit,inheriting,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354,2,['inherit'],['inheriting']
Modifiability,"PR could refactor Ray : not a ray, change name, including iterator in the name (eg RayCollisionIterator ..). In the code, there should be refactoring with the defaulttype::Ray). See #1251 . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1255:9,refactor,refactor,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1255,2,['refactor'],"['refactor', 'refactoring']"
Modifiability,"Pack/GL/glew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glut.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/glxew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/GL/wglew.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/extlibs/WinDepPack/iconv.h; ....; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SofaOpenglVisual/SofaOpenglVisualConfig.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1482,config,config,1482,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['config'],['config']
Modifiability,"Parent modules must always interface the same libraries.; e.g. Sofa.Component.dll must always be the same. Thus, if some of its child modules are disabled, parent module will not generate a library. This PR creates and uses a new macro `sofa_add_subdirectory_modules`.; This macro is meant for parent modules to easily add their child modules and sets a variable with all added targets.; If a child module is missing or disabled, a message will be shown (not an error) and the library will not be created. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3225:354,variab,variable,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3225,1,['variab'],['variable']
Modifiability,"Playing with [SofaBenchmarks](https://github.com/alxbilger/SofaBenchmark), stumbled on the constructor of sofa::type::vec:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.6 us 13.2 us 74667; BM_FixedArray_construct<sofatypefixedarray3f>/8192 13.0 us 14.2 us 112000; BM_FixedArray_construct<sofa::type::Vec3f>/8192 26.7 us 24.2 us 21333; ```; (trying to construct 8192 std::array<float, 3> vs sofa::fixed_array<float,3> vs sofa::type::vec3f); Unexpectedly, the vec3f is almost twice slower that the other, which is weird as type::vec3f inherits fixed_array<float,3>; By using the constructor of fixed_array (instead of calling set()), we can achieve closer results:. ```; BM_FixedArray_construct<stdarray3f>/8192 14.9 us 12.2 us 64000; BM_FixedArray_construct<sofatypefixedarray3f>/8192 12.7 us 10.6 us 89600; BM_FixedArray_construct<sofa::type::Vec3f>/8192 15.0 us 17.4 us 42165; ```. I did my tests on Windows/MSVC2019 so maybe results are different with different compilers/systems though... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2439:537,inherit,inherits,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2439,1,['inherit'],['inherits']
Modifiability,Please carefully consider impact before moving files around (i.e. discussion on the current plugin / NG PRs),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:92,plugin,plugin,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugin']
Modifiability,"Please gently welcome this first NG pull-request :blush: . The base idea was to remove the SofaComponent* packages from modules and to put them in their own place instead.; Doing this, I realized that SofaComponentBase contains actual components (it's not only a basic package as it should be).; Thus, it permitted me to introduce the first NG module Sofa.Component.Utils and fill it with SofaComponentBase intruders (MakeAliasComponent, MakeDataAliasComponent, MessageHandlerComponent, InfoComponent). NG architecture is based on the discussions in #543.; Transition headers are also provided (in deprecated_layout folder) to ensure old includes. I am also working with @damienmarchal on a way to cleanly automatize this kind of NG refactoring with python: see https://github.com/guparan/sofa2ng. Feedback is more than welcome!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/620:733,refactor,refactoring,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/620,1,['refactor'],['refactoring']
Modifiability,Plugin = to be loaded by PluginManager (via `<RequiredPlugin/>` or plugin_list.conf).; Classic library = does not contain any Component. sofa2ng has been modified accordingly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/872:0,Plugin,Plugin,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/872,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,Plugin Manager: Fix segfault when removing a plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/6:0,Plugin,Plugin,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/6,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"Plugin `image` fails (`Error C2672 : 'std::max': no matching overloaded function found`) when compiling `ImageFilter` with the first template parameter being `long` or `unsigned long`. This happens when `PLUGIN_IMAGE_COMPILE_SET` is set to `full`. The compilation fails only with MSVC. The fix is not tested and may change the accuracy because of an additional conversion to `float`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4484:0,Plugin,Plugin,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4484,1,['Plugin'],['Plugin']
Modifiability,Plugin compilation: 100% out-of-tree,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1285:0,Plugin,Plugin,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1285,1,['Plugin'],['Plugin']
Modifiability,"Plugin loading failing when running with normal python, but working with ./runSofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:0,Plugin,Plugin,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Plugin'],['Plugin']
Modifiability,Plugin need a fuill pluginization anyway... and cleaning... ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1219:0,Plugin,Plugin,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1219,2,"['Plugin', 'plugin']","['Plugin', 'pluginization']"
Modifiability,Plugin not compiling with recent (post 20/12/2018) version of master,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/893:0,Plugin,Plugin,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/893,1,['Plugin'],['Plugin']
Modifiability,"PluginFinder : https://github.com/alxbilger/PluginFinder. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2860:0,Plugin,PluginFinder,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2860,2,['Plugin'],['PluginFinder']
Modifiability,"PluginManager, dynamic libraries and entry points flaw",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:0,Plugin,PluginManager,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,1,['Plugin'],['PluginManager']
Modifiability,"PluginManager.cpp:403 `if (!FileSystem::isFile(plugin))` can mean 2 things:; - plugin is a path but is invalid (file does not exist or path is badly formed); - plugin is not a path (it's a name). The problem was that we assumed that `!FileSystem::isFile(plugin)` implied that plugin was a name. PluginManager::pluginIsLoaded should now correctly handle paths and names. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1823:0,Plugin,PluginManager,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823,8,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'pluginIsLoaded']"
Modifiability,PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/l,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6330,Plugin,PluginManager,6330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8935,Plugin,PluginManager,8935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PolynomialRestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11583,Plugin,PluginManager,11583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-cl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7184,Plugin,PluginManager,7184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6439,Plugin,PluginManager,6439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/Rel,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5685,Plugin,PluginManager,5685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,Pluginize SofaSparseSolver & SofaPreconditoner,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/663:0,Plugin,Pluginize,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/663,1,['Plugin'],['Pluginize']
Modifiability,Plugins: loading & components introspection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281:0,Plugin,Plugins,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281,1,['Plugin'],['Plugins']
Modifiability,"Preliminary step before removing fixed_array inheritance from Vec. Functions are using fixed_array but a Vec is given.; This works because vec inherits fixed_array. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4269:45,inherit,inheritance,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4269,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"Preparation for sofang. ComponentChange does not handle the case where a component is still creatable/invokable from a (deprecated) plugin but the ""real"" component has been moved into an other plugin (typically from a current Sofa Module to a planned new SofaNG module); This PR add this case into ComponentChange. The current ""Moved"" class handles the case where a component has been *really* moved from two plugins (i.e not creatable anymore if the original plugin is still used. + some cleanups coming from suggestions from SonarLint. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2565:132,plugin,plugin,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2565,4,['plugin'],"['plugin', 'plugins']"
Modifiability,"Prepare outsourcing of the LMConstraint plugin; New plugin is now available at :arrow_right: https://github.com/sofa-framework/LMConstraint. (#1527 , #1442); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2508:40,plugin,plugin,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2508,2,['plugin'],['plugin']
Modifiability,"Pro:; - type and signature consistancy at compile time.; - ease the refactoring as the signal/slots are noww real method; - make explicit the type conversion between different signature. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2943:68,refactor,refactoring,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2943,1,['refactor'],['refactoring']
Modifiability,Problem including SofaCUDA plugin - compilation errors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4579:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4579,1,['plugin'],['plugin']
Modifiability,Problem of configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1486:11,config,configuration,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1486,1,['config'],['configuration']
Modifiability,Problem using SOFA with `SoftRobots` & `STLIB` & `SofaPython3` plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2754:63,plugin,plugins,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2754,1,['plugin'],['plugins']
Modifiability,Problem with Geomagic & SofaPython3 plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3185:36,plugin,plugin,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185,1,['plugin'],['plugin']
Modifiability,"Problem:; It is common that people write scene in which they used components from specific plugins but forgot the corresponding ; ```xml ; <RequiredPlugin name=''>; ```; because they, in a way or an other, preload the plugin. . This is problematic because, when the environment change (you compile sofa in a different way, your preload different plugin, it is a different person on a different computer,... ) and the preload is not done anymore it makes the component/plugin tracking very hard if it is not a trivial component in a trivial plugin. . To solve this problem, I implemented a SceneCheckerVistitor that scans the scene and detects which components are from a plugin and warn the user if there is no RequiredPlugin in there scene with this component and explaine how his scene should be fixed for the good of all. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/306:91,plugin,plugins,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/306,6,['plugin'],"['plugin', 'plugins']"
Modifiability,Quick PR to fix the SofaPhysicsApi project; - Remove deprecated code regarding OpenGL tetrahedron. ; - FIX some bad path in cpack installation; - Change some class declaration to allow inheritance. . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/167:185,inherit,inheritance,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/167,1,['inherit'],['inheritance']
Modifiability,"Quick compilation fix for drawing variables and function calls of RGBAColor types. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2206:34,variab,variables,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2206,1,['variab'],['variables']
Modifiability,"Quick test on what could be a direction to fix issue: https://github.com/sofa-framework/SofaPython3/issues/346. I'm now wonder:; - how to generalize that find more comprehensible names for all that. ; - is there room for small refactoring in TypeInfo related to the exisitng containers. . If some of you have suggestion, it is more than welcome. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3851:227,refactor,refactoring,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851,1,['refactor'],['refactoring']
Modifiability,"RROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1870,Plugin,Plugin,1870,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"R] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Compon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3284,Plugin,Plugin,3284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"RayTriangleIntersection is a weird class, used to only compute the intersection of a ray and a triangle (with even a version with TriangleCollisionModel?).; So ;; - I moved the useful function directly in Sofa.Geometry::Triangle (+a version w/o barycoeff ); - replace the usage where RayTriangleIntersection was used; - inline it (no compilation unit anymore for it); - and deprecate it for people still using it ; - write a small unittest as well. I took the liberty to generalize the normal() function in geometry::Triangle, as it would provoke a compilation error if used with something else than Vec3 (and extend the unittest with array type as well). Diff: https://github.com/fredroy/sofa/compare/remove_triplane_intersection_file...move_triangleoctree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2763:610,extend,extend,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2763,1,['extend'],['extend']
Modifiability,"Reading a JPEG file is implemented by ImageQt, which obviously depends on Qt.; It means that Qt is needed to load any JPEG image (actually, also gif, and other exotic formats). 1) I think we should be able to read JPEG files without Qt ; perhaps using libjpeg ?; 2) Moreover, we need to have a Qt Gui to activate ImageQt ; then it could be an idea to move this class to a plugin ? Which will be able to read all image formats the Qt library can read ?; 3) (BUG) JPEG files read by ImageQt seem to be upside-down, if we compare it with the same image converted in the PNG format (I will write a test to confirm that)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51:372,plugin,plugin,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51,1,['plugin'],['plugin']
Modifiability,"Recently pluginized modules do not have the relocatable property set.; Here is the fix 🤫. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1604:9,plugin,pluginized,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1604,1,['plugin'],['pluginized']
Modifiability,Recover a commit in is_sofa_multithreading branch (3da9e50752d6aead487f0b5f8897bfc4249f9404) to allow OdeSolver concurrent execution:. A new data<bool> is added (d_threadsafevisitor) to disable allocation and writing in the mechanical object component used by the OdeSolver ; The same change is applied to all the OdeSolver derived class and it doesn't affect the default behavior and the scenes.; EulerSolver; EulerImplicitSolver; StaticSolver; CentralDifferenceSolver; VariationalSymplecticSolver; NewmarkImplicitSolver. Task Scheduler refactoring;; - improve task stealing between worker threads.; - add worker thread name to make the debugging and profiling easier.; - group and move the initialization tasks in a dedicated file. New component and scene to show off the performance improvement of multithreading execution.; - MeanComputation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/745:538,refactor,refactoring,538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/745,1,['refactor'],['refactoring']
Modifiability,"Ref: #1521, #1527. ### Description; All the previous PR/commits (#1521 should list all the main ones) allow now the fact that each module of SofaFramework can be its own cmake package/configuration.; - No more dependency checks in the SofaFrameworkConfig.cmake.in, etc; they are now in their own *Config.cmake.in; - No more weird cross-dependencies between headers (no more add_include_dir in SofaHelper!): a change in SofaCore will not trigger a new compilation of SofaHelper for example...; - clearer and more logical use of packages: if you want SofaHelper you do:; ```cmake; find_package(SofaHelper); ....; target_link_libraries(${target} SofaHelper); ```. - SofaFramework is now a ""meta-package"" or collection like SofaBase. Obviously it will stay like that for compatibility reason. ### Note; - The removal of the cross-includes paths in SofaHelper pointed to an error I made in the Sofa.Topo/Sofa.Geo PR #1912 , which is a good demonstration of the cross-include path madness 🤡.; - I successfully compiled SofaPython3 out-of-tree with an install of SOFA so the *Config.cmake.in should be okay. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1990:184,config,configuration,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1990,3,"['Config', 'config']","['Config', 'configuration']"
Modifiability,"Refactor CImg & CImgPlugin and fix the code that depend on it. . The general problem is that CImg is header only library thus the; multiple inclusion of the code in multiple dll seems to cause trouble; on the mutexes initialization causing the crash & failure when two plugins compile; with CImg & CImgPlugin are loaded (eg image, flexible). To avoid this scenario, CImg is moved into the CImgPlugin that; hold the mutex and other code needs to include #include<CImgPlugin/SOFACImg.h>; instead of the raw CImg. This PR is resulting from the split of #548 (for clearity and to ease reviewing). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/562:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/562,3,"['Refactor', 'flexible', 'plugin']","['Refactor', 'flexible', 'plugins']"
Modifiability,Refactor init() to replace the call super pattern by the delegation one,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317,1,['Refactor'],['Refactor']
Modifiability,Refactor of DetectionOutputVector interface and its implementation TDetectionOutputVector. . The goal is to force all components to use the only functions provided by the DetectionOutputVector interface to interact with the DetectionOutput data that stores the contacts. One advantage of accessing the DetectonOutput data through an interface is to make a concurrent modification of contacts easier. The current implementation allows direct access to the DetectionOutput vector by casting the TDetectionOutputVector class to the helper::vector<DetectionOutput> Vector due to a double inheritance. ; This makes the DetectionOutputVector interface useless because easy to bypass. Current implementation of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector : public helper::vector<DetectionOutput>; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. }; ```. New implementation of of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. private:; 	helper::vector<DetectionOutput>; }. ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,2,"['Refactor', 'inherit']","['Refactor', 'inheritance']"
Modifiability,Refactor opengl rendering code,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/678:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/678,1,['Refactor'],['Refactor']
Modifiability,Refactor performer API,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4670:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4670,1,['Refactor'],['Refactor']
Modifiability,Refactor regression test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4424:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424,1,['Refactor'],['Refactor']
Modifiability,Refactor responseParams attribute in CollisionResponse,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3883:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3883,1,['Refactor'],['Refactor']
Modifiability,Refactor the DataTypeInfo system (step2),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1611:0,Refactor,Refactor,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1611,1,['Refactor'],['Refactor']
Modifiability,"Refactoring ObjectFactory without breaking to much SOFA is rather complex. ; To ease in the process I split the ObjectFactory class in three entity.; ; sofa::core::future::ObjectFactory and sofa::core::future::ObjectFactoryInstance are the new versions while sofa::core::ObjectFactory is a compatibility layer exposing the old API for transitionning. . For the moment, 100% of the old API is reproduced and emits deprecation warning. ; As the code change are rather important it is easier to read the source code instead of the diff. . sofa::core::future::ObjectFactory is implementing the factory mecanisme without any static in it. ; sofa::core::future::ObjectFactoryInstance is a single-instance factory accessible through static method. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712:0,Refactor,Refactoring,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712,1,['Refactor'],['Refactoring']
Modifiability,"Referee: @IPeterlik . Members: @IPeterlik @remibessard @hdeling @damienmarchal @fredroy @epernod Jeremie . Main objective: provide a continuous support for validation of SOFA. Subtasks and estimated duration; - using python, based on Method for Manufactured Solutions (MMS), static linear elasticity with linear FEM in (compression and torsion with < 5% deformation); ex: TensorMassFEMForceField; - TensorMassFEMForceField : addKToMatrix, vector of E; - extend it to beams (BeamAdapter); - implement engine : plugged to compute stress data in all FEM in SOFA. Future; - write article; - contact Stefan Suwelack for integration into CAEML.org. ---. Validation solution:; - analytical; - software comparison (Abaqus); - tests; - experimental setup. cases:; - dynamic vs static; - linear elasticity with linear FEM; - metrics : displacement, stress+strain tensors",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/25:454,extend,extend,454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/25,1,['extend'],['extend']
Modifiability,"Referee: @faichele. Members: @faichele , @fjourdes , @ChristianDuriez , @thomas-lemaire , @IPeterlik , @courtecuisse , @hdeling . Main objective: bring TaskScheduler within SofaKernel. Subtasks and estimated duration:; - merge the branch _issofa_multithreading_ involving the MultiThreading plugin into master (fixes); - remove dependencies to boost (might face issue in the lock implementation); - create trivial examples describing the API; - add documentation, and examples of Intel; - migration into SofaKernel. Non-requisite:; - no maintenance guarantees for the plugin Multithreading. Future; - nice feature : experiment the definition of a pointer to the Scheduler into ExecParams; - anyone interested can join!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24:291,plugin,plugin,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24,2,['plugin'],['plugin']
Modifiability,"Referee: @matthieu-nesme @ChristianDuriez. Members: @JeremieA @francoisfaure @courtecuisse, Eulalie Coevoet, Igor Peterlik. Main objective: build or compute the mechanical system when forcefields, constraints etc... are under mapping. 1 implementations available using Compliance plugin (and EigenMatrix) and masks; 1 implementation todo using sparseMatrix of SOFA without masks. For that, the fact that we remove the particular case of InteractionForceField could greatly simplify the solution. There are many different cases depending on the number of dofs that are concerned by the mapped values... Difficult to have the ideal implementation for all the case, but we need to allow several strategies. Maybe possible to avoid the ""explicit"" use of masks given the knowledge of the sparsity of the matrices... . Subtasks:; - Make option ""use Mask"" to false by default; - Tag ""InteractionForceField"" as deprecated; - First implementation for the sparseMatrix of SOFA using applyJt(SparseMatrixDeriv => not ideal for all the case; - see if we could define a common strategy without the use of masks.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26:280,plugin,plugin,280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26,1,['plugin'],['plugin']
Modifiability,"References removed:; - THMPGSpatialHashing, ; - Flexible, ; - Compliant, ; - OptiTrackNatNet, ; - OpenCTMPlugin. In ref to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3960:48,Flexible,Flexible,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3960,1,['Flexible'],['Flexible']
Modifiability,Regarding the Optimus plugin issue: Advanced methods for state estimation and parameter identification in SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4934:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4934,1,['plugin'],['plugin']
Modifiability,Relocated plugins path is not included in installation RPATH,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:10,plugin,plugins,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,1,['plugin'],['plugins']
Modifiability,Removal of Bezier tetrahedron elements and Bezier triangle elements : move to a new plugin SofaHighOrderTopology,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16:84,plugin,plugin,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16,1,['plugin'],['plugin']
Modifiability,"Remove ColladaSceneLoader plugin and its embedded old version of assimp. ; - Move class, doc and examples inside SofaAssimp plugin.; - Merge the CMakeLists and update the findAssimp with a the version provided by Assimp 5.0.; - Ensure scenes of both plugins are working with up to date version of assimp. SofaAssimp plugin still need the pluginization refresh. To be done in another PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1360:26,plugin,plugin,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1360,5,['plugin'],"['plugin', 'pluginization', 'plugins']"
Modifiability,"Remove a really annoying ""unused variable"" warning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1325:33,variab,variable,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1325,1,['variab'],['variable']
Modifiability,"Remove all CUDA plugins from default plugin list for the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5044:16,plugin,plugins,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5044,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"Remove logs/warnings in SceneCreator_test by:; - inheriting from BaseSimulationTest instead of old api: sofa_test; - Remove sceneDump in AddCube method. Also update SofaCarving_test to use the correct header path. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2406:49,inherit,inheriting,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2406,1,['inherit'],['inheriting']
Modifiability,"Remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4785:14,variab,variable,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4785,1,['variab'],['variable']
Modifiability,"Remove some warning:; - by updating the code ; - by configure in CMakeLists.txt the library (gtest, libQGlViewer, csparse, CImg) as system library. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1343:52,config,configure,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1343,1,['config'],['configure']
Modifiability,Remove the disgusting #pragma GCC in config.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1363:37,config,config,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1363,1,['config'],['config']
Modifiability,"Remove thread specific declaration for ExecParams class. accessing thread local variables is slow and if the thread-local variable is accessed very frequently, the cost may become an issue. ; https://software.intel.com/en-us/blogs/2011/05/02/the-hidden-performance-cost-of-accessing-thread-local-variables. The ExecParams global pointer is declared thread specific but it is often passed in a function call as argument.; A function executed in a second thread can receive as argument the thread local variable of the first thread and it is allowed to use it.; In this situation there is no need of use the thread local variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1129:80,variab,variables,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1129,5,['variab'],"['variable', 'variables']"
Modifiability,"Remove tinyXML find package in the common config file because the linkage is private and thus it is not required to find it for links against Sofa.Simulation.Common. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4506:42,config,config,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4506,1,['config'],['config']
Modifiability,"Removed unused variables; Removed MechanicalGetDimensionVisitor which was no longer used; Renamed variables (groupData is not clear). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2195:15,variab,variables,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2195,2,['variab'],['variables']
Modifiability,Removing all highorder classes from the base topological classes of SOFA.; Created a new open repository for those classes at sofa-framework/plugin.HighOrder 👍 ( https://github.com/sofa-framework/plugin.HighOrder.git ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; - [ ] updated Flexible plugin to use the new plugin. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220:141,plugin,plugin,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220,5,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,"Reopening of #1274. > unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer); > This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1287:43,Plugin,PluginManager,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1287,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"Replace SOFACUDA_ARCH containing arbitrary value with (CMake's) auto arch detection.; If needed, you can disable auto-detection with the desired arch value.; It should (not tested) also generate cuda code for multiple arch as well. Remove also warning when configuring with CMake. (about deprecated macro sofa_create_package). I guess it could break CMake CUDA config for people using the SOFACUDA_ARCH variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1336:257,config,configuring,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1336,3,"['config', 'variab']","['config', 'configuring', 'variable']"
Modifiability,"Reported in #3490 ; In the plugin SofaDistanceGrid, in the example ```/applications/plugins/SofaDistanceGrid/examples/DistanceGridCollisionModel.scn```. https://github.com/sofa-framework/sofa/blob/f4627f4edbe10d8f72d02263b736d233306ac7be/applications/plugins/SofaDistanceGrid/examples/DistanceGridCollisionModel.scn#L23. When changing the ```DefaultContactManager``` from ```response=""PenalityContactForceField""``` to ```response=""FrictionContactConstraint""``` the following segfault is happening. ```; ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::constraint::lagrangian::model::UnilateralInteractionConstraint<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::addContact(double, sofa::type::Vec<3u, double>, double, int, int, long, long long); sofa::component::collision::response::contact::FrictionContact<sofa::component::collision::RigidDistanceGridCollisionModel, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::createResponse(sofa::core::objectmodel::BaseContext*); sofa::component::collision::detection::algorithm::DefaultPipeline::doCollisionResponse(); sofa::simulation::PipelineImpl::computeCollisionResponse(); sofa::simulation::CollisionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::grap",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3533:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3533,3,['plugin'],"['plugin', 'plugins']"
Modifiability,Reproduce work similar to what has been done for OmniEmulator. This could be used to test the plugin on the CI. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1371:94,plugin,plugin,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1371,1,['plugin'],['plugin']
Modifiability,"Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4068:26,refactor,refactoring,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4068,1,['refactor'],['refactoring']
Modifiability,"Revert ""[SofaHelper] Fix unloading with PluginManager""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1286:40,Plugin,PluginManager,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1286,1,['Plugin'],['PluginManager']
Modifiability,Review and udpate doc : https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins. - InvertibleFVM (TO DEPRECATE); - ManifoldTopologies; - MeshSTEPLoader; - ExternalBehaviorModel; - ManualMapping. Remove SOFA from plugin names:; - SofaCarving; - SofaDistanceGrid; - SofaEulerianFluid; - SofaImplicitField. Rename:; - SofaMatrix; - Caribou,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4556:83,plugin,plugins,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4556,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"Revival of #1553 ; could not re-opened it because of force push🕵️‍♀️. Based on #1555 . ## Description:; Move fixed_array types (helper::fixed_array and defaulttype::Vec) and their satellites file (algo...) to the new Sofa.Type module.; No dependency on anything, except the (future) Sofa.Config to avoid weird cyclic deps.; As a compatibility layer for transition, so it should be as least breaking as possible. - sofa::defaulttype::Vec becomes sofa::type::Vec; - sofa::helper::fixed_array becomes sofa::type::stdtype::fixed_array. ## Breaking; - if inclusion of _defaulttype_ and _type_ namespace, the compiler cannot chose which one to chose for the free functions cross and dot() when the code did not called them from their respective namespace.It was not a problem because the compiler could find them previously thanks to [ADL](https://en.wikipedia.org/wiki/Argument-dependent_name_lookup).; Fixing is easy by just adding the respective namespace. More info with #1521 . Another PR will remove all defaulttype::Vec (and helper::fixed_array); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1734:288,Config,Config,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1734,1,['Config'],['Config']
Modifiability,"Rewrite draw function in HexahedralFEMForceFieldAndMass so it is not ""ugly""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3445:0,Rewrite,Rewrite,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3445,1,['Rewrite'],['Rewrite']
Modifiability,Rewrite draw functions (often duplicated from CPU version). Rename CudaVisualModel into CudaOpenGLModel since it uses OpenGL buffers and would not be suited for non-OpenGL contexts. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1246:0,Rewrite,Rewrite,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1246,1,['Rewrite'],['Rewrite']
Modifiability,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:660,inherit,inherits,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,1,['inherit'],['inherits']
Modifiability,"SOFA has two different ways to load plugins:; - via runSofa; - via the PluginManager through the GUI. Using different GUI, the list of loaded plugins may differ! Topic brought back in #3109 ; This should be centralized and homogenized ; @alxbilger @damienmarchal",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3147:36,plugin,plugins,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3147,3,"['Plugin', 'plugin']","['PluginManager', 'plugins']"
Modifiability,SOFA_CUDA plugin: CudaHexahedronFEMForceField.cpp: undefined reference to sofa::core::behavior::ForceField<>,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726:10,plugin,plugin,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726,1,['plugin'],['plugin']
Modifiability,STC#4 Coding Sprint: Pluginization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/427:21,Plugin,Pluginization,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/427,1,['Plugin'],['Pluginization']
Modifiability,"Scene checkers were located in the SofaGraphComponent (even if they were not components themselves....); So they needed to be moved out of it.; The first idea was to move them to Sofa.Simulation as they related to the simulation itself (or rather its initialization).; But scene checking could need dependencies on components themselves (in this case, it needs the contact manager from Sofa.Component.Collision.Response.Contact, and APIVersion from Sofa.Component.SceneUtility); So finally a library was created into ~~applications/plugins, even if it is not really a plugin in the sofa-way of thinking (aka a set of components)~~ Sofa/plugins because it is not in Component or framework, but it could be placed in Sofa/ directly (where GUI is as well). As usual, a compat layer has been added to warn devs of the move. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2960:532,plugin,plugins,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2960,3,['plugin'],"['plugin', 'plugins']"
Modifiability,Scene loader should warn when loading py/pyscn without SP plugin loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2366:58,plugin,plugin,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2366,1,['plugin'],['plugin']
Modifiability,"SceneChecks were isolated in a project. But we may want that plugins add their own SceneCheck. An example with MultiThreading is provided here. The class `SceneCheck` is now available in Sofa.Simulation.Core. Tools to register a SceneCheck are also available in the module. The newly introduced SceneCheck checks if there are opportunities to use a multi-threaded component. It advices the user with a message looking like:. ```; [SUGGESTION] [SceneCheckMultithreading] This scene is using components implemented sequentially while a parallel implementation is available. Using the parallel implementation may improve the performances. Here is the list of sequen; tial components in your scene and their parallel equivalent:; BVHNarrowPhase -> ParallelBVHNarrowPhase; BruteForceBroadPhase -> ParallelBruteForceBroadPhase; HexahedronFEMForceField[Vec3d] -> ParallelHexahedronFEMForceField[Vec3d]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3597:61,plugin,plugins,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597,1,['plugin'],['plugins']
Modifiability,"Second and last task about https://github.com/sofa-framework/sofa/issues/2483. Contains #2531. Create a new plugin SofaNewmat with ; - newmat lib itself; - NewmatMatrix and NewmatVector (and their tests); - LULinearSolver (only compatible with NewmatMatrix); ; Add a ""compatibility"" layer (tricky because SofaNewmat is optional; Update ComponentChange; Remove newmat usage in image plugin. Fix #2483 . Change the template of CGLinearSolver in the BeamLinearForceField because I dont see why we would need to run it with newmat matrices. It results with a very slight difference on the DOF positions. [ci-depends-on https://github.com/sofa-framework/Regression/pull/21]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532:108,plugin,plugin,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532,2,['plugin'],['plugin']
Modifiability,"See #1950. ; Two variables exist to define quads in a hexahedron, but the order is not the same:; ```; const unsigned int quadsInHexahedronArray[6][4] = {{0,1,2,3}, {4,7,6,5}, {1,0,4,5}, {1,5,6,2}, {2,6,7,3}, {0,3,7,4}};; const unsigned int quadsOrientationInHexahedronArray[6][4] = {{0,3,2,1}, {4,5,6,7}, {0,1,5,4}, {1,2,6,5}, {2,3,7,6}, {3,0,4,7}};; ```; We don't know if there are some consequences to it. Perhaps only one variable could be used. Removing the other would avoid confusion.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2003:17,variab,variables,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2003,2,['variab'],"['variable', 'variables']"
Modifiability,"See #4532 to review readable changes.; In addition, this PR removes the entire `Sofa/Component/Compat` layer.; This PR depends on : . [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/265]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/139]; [ci-depends-on https://github.com/sofa-framework/CGALPlugin/pull/14]; [ci-depends-on https://github.com/sofa-framework/Registration/pull/12]; [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/6]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533:465,Plugin,PluginExample,465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533,1,['Plugin'],['PluginExample']
Modifiability,"See doc https://cmake.org/cmake/help/latest/manual/cmake-presets.7.html. It gives 3 different presets similarly to what we are used to on the CI. The idea is the same (3 different config) but it cannot mimic it perfectly. For example, the CI checks if dependencies are available before setting a variable. It is not possible with presets. An example of CMakeUserPresets.json I use: https://gist.github.com/alxbilger/bee1135fbe222943906d0f595699c1a3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3305:180,config,config,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3305,2,"['config', 'variab']","['config', 'variable']"
Modifiability,See issue #784 : Quadractic complexity in BarycentricMapping ; This PR depends on PR #797: Cleaning and refactoring of BarycentricMapping. In this PR the initialization of BarycentricMapping (for topology container only) is optimized using spatial hashing. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798:104,refactor,refactoring,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798,1,['refactor'],['refactoring']
Modifiability,"See: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2382/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/2/artifact/parent_dir/build/scene-tests/archive/applications/plugins/MultiThreading/examples/ParallelHexahedronFEMForceField.scn/output.txt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2409:186,plugin,plugins,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2409,1,['plugin'],['plugins']
Modifiability,Several changes in PluginManager:; - Add check to avoid registering the same plugin from different paths; - Change method getPlugin to look in the map of registered plugin using the plugin name instead of using a reconstructed path. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:19,Plugin,PluginManager,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,4,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"Several plugins out-sourced:; - [SixenseHydra](https://github.com/sofa-framework/SixenseHydra); - [Xitact](https://github.com/sofa-framework/Xitact); - [Haption](https://github.com/sofa-framework/Haption) ; - [Sensable](https://github.com/sofa-framework/Sensable); - [SensableEmulation](https://github.com/sofa-framework/SensableEmulation); - [LeapMotion](https://github.com/sofa-framework/LeapMotion); - [Geomagic](https://github.com/sofa-framework/Geomagic). Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575:8,plugin,plugins,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575,1,['plugin'],['plugins']
Modifiability,Several warning types:; - uint/int conversion; - bad init order; - missing break; - unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/873:91,variab,variables,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/873,1,['variab'],['variables']
Modifiability,Shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2431:7,variab,variable,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2431,1,['variab'],['variable']
Modifiability,"Simply add an example scene for the THMPGSpatialHashing plugin. No scene were available. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2148:56,plugin,plugin,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148,1,['plugin'],['plugin']
Modifiability,"Since C++11, it is possible to declare a variable with one copy per thread with the keyword `thread_local`. The consequence is that the code in `thread_specific_ptr.h` could be deprecated as it is not used anywhere else (not in this PR). Bonus: remove a memory leak. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3422:41,variab,variable,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422,1,['variab'],['variable']
Modifiability,"Since SofaNG, cmake was again slow to configure (especially on Windows); After investigation, the previous sofa_find_package() was nulliified in #3120 , and I dont really see why. And the associated commit message is not informative https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054. Bringing it back bring the config time from ~18s to 4.5s on Windows/MSVC generator on a minimal preset (all framework + comonents+ GL + GUI); (Manjaro/ninja generator go from 4 to 2.5s); So it is quite nice all in all 🥸. Trace: (orange part is time for `find_package()`); Before: ![cmake1](https://user-images.githubusercontent.com/11028016/195506545-32c3d4db-b6b2-4500-a3fb-dce59da50c53.png); After: ![cmake2](https://user-images.githubusercontent.com/11028016/195506607-e6ede1f9-c5fd-497d-bd4f-dd4832da918a.png). Install procedure should not be impacted, as the cmake.in files are not touched. \+ this PR fixes some missing sofa_find_package() here and there. Lets see if the CI confirms if https://github.com/sofa-framework/sofa/pull/3120/commits/8a3ae2dacc1bdff9be83aee15744a37e21eb0054 was only a mistake; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382:38,config,configure,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382,2,['config'],"['config', 'configure']"
Modifiability,"Since state accessors work closely with a mstate, it seems logical that they inherit the same bbox.; Note that the mstate must be visited before the accessor in `UpdateBoundingBoxVisitor`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2780:77,inherit,inherit,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2780,1,['inherit'],['inherit']
Modifiability,"Since the big refactoring from Sofa NG (https://github.com/sofa-framework/sofa/wiki/SOFA-NG:-documentation-on-transition), unit tests fail when the compatibility layer is not compiled, because they rely on the old modules. An example of failure:. ```; Sofa\Component\IO\Mesh\tests\STLExporter_test.cpp(79): error: Failed; A message of type 'Error' was not expected but it was received. ; ====================== Messages =======================; [RequiredPlugin]: ; Message type : Error; Message content: Plugin not found: ""SofaLoader""; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3389:14,refactor,refactoring,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3389,2,"['Plugin', 'refactor']","['Plugin', 'refactoring']"
Modifiability,"Small (and first) Pullrequest to add several methods in plugin SceneCreator:. - to add basic 3D object: Cube, Cylinder, Plane. In rigid or deformable.; - also add an executable sceneCreatorExamples to run simple examples using those methods.; - Minor changes in TriangularFEM and CylindricalGrid to use those components. This PR: ; - [x] succeed on each compilation setup on the CI; - [x] does not generates new warnings or test failure; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] clean stuff; - [x] is now 1 week old and no one send a 'no go' comment. ; - [x] have tests on the introduced features.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133:56,plugin,plugin,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133,1,['plugin'],['plugin']
Modifiability,"Small PR to allow compilation of SofaCUDA plugin with SOFA_NO_OPENGL flag (i.e disabling OpenGL); Remarks:; - The components' draw() functions in SofaCUDA should share their code with their ""normal"" version.; For example, CudaUniformMass with cudarigid3f should call the draw() of UniformMass<Rigid3>; Some work has to be done further in Sofa itself, that's why I just add preprocessor tests (#ifdef SOFA_NO_OPENGL) and did not use the drawtool functions 👅 ; - Obviously, if you compile without OpenGL, you wont be able to share OpenGL buffer in CUDA. In other words it is useless to use CudaVisualModel without SOFA_NO_OPENGL.; (Actually CudaVisualModel should be renamed CudaOglModel). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1242:42,plugin,plugin,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1242,1,['plugin'],['plugin']
Modifiability,"So I wanted to open a python file in SOFA but the terminal shows this error-; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'filepath'; Python exception:; ModuleNotFoundError: No module named 'splib3'. I am not able to fix this error. I have SofaPython3 and STLIB plugins already added. Can't figure out how to solve. Please help!. Also, I am using windows10 , python v3.7",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2959:299,plugin,plugins,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2959,1,['plugin'],['plugins']
Modifiability,Sofa is a drama in term of #include coupling which make:; - compilation time to be larger than what it should; - cost a lot in term of code maintenance. . In the future we should try to progressively improve the situation. ; This PR is a minor step toward this target. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/419:36,coupling,coupling,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/419,1,['coupling'],['coupling']
Modifiability,"Sofa's default CMake settings activates SofaTest, which depends on PLUGIN_SOFAPYTHON, which is not activated by default. This result in an unsuccessful generation of the project. Either SofaPython should be a default SOFA dependency, or Sofa tests using SofaPython should be separated and only activated when SofaPython plugin is too. @bcarrez @matthieu-nesme might be interested; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/239:320,plugin,plugin,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/239,1,['plugin'],['plugin']
Modifiability,Sofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3637,Plugin,PluginManager,3637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"Sofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img widt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9370,plugin,plugin,9370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5270,Plugin,Plugin,5270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,SofaBase/config not found,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1288:9,config,config,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1288,1,['config'],['config']
Modifiability,SofaExporter was missing SofaBase in its exported cmake config.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1614:56,config,config,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1614,1,['config'],['config']
Modifiability,"SofaFramework is storing resources for some tests (especially for test on files).; The path to the folder is set through a define preprocessor macro **FRAMEWORK_TEST_RESOURCES_DIR** on all its modules,; if testing was enabled...; Therefore to _ALL the modules in SOFA (+plugins!)_ 😵 , as everybody needs SofaFramework.; It is does not even make sense as this macro should only be used for the *_test projects anyway.; And the last and not the least, because of that, if you switch **SOFA_BUILD_TESTS** on/off, you have to recompile _all SOFA_ **every time** 🤪. Finally, this PR:; - removes the macro from SofaFramework; - moves all the resources files into Sofa.Testing; - sets the path into a new compile-test constant (defined in Sofa.Testing/config.h) named SOFA_TESTING_RESOURCES_DIR; - add a compatibility constant with the same name as the macro to avoid breaking for people using this macro; not sure if it is really necessary though. ( and I dont know how to deprecated a macro nicely). The license text was missing in some tests as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2000:270,plugin,plugins,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2000,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeError.log"".; ```. As I understand there is problem with cxxopts:; ```; if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts); ```. ---------------------------------------------. ### Environment; ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic; ```. ```; gcc-11 --version; gcc-11 (Ubuntu 11.1.0-1ubuntu1~18.04.1) 11.1.0; Copyright (C) 2021 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```. Thanks!; What I'm doing wrong?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:3358,Config,Configuring,3358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,1,['Config'],['Configuring']
Modifiability,"SofaMiscCollisionConfig.cmake.in was ill-formed, so projects using it in out-of-tree builds are stuck in the cmake configuration process. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2052:115,config,configuration,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052,1,['config'],['configuration']
Modifiability,"SofaPython could not compile without having SofaExporter.; To solve that, bindings included in SofaPython are moved into SofaExporter. Bindings should be included into their respective modules/plugins anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1095:193,plugin,plugins,193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1095,1,['plugin'],['plugins']
Modifiability,SofaPython found by SofaTest at configure time,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/20:32,config,configure,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/20,1,['config'],['configure']
Modifiability,SofaPython is a dependency of `image` plugin (see https://github.com/sofa-framework/sofa/blob/e47f070596028142cadd7bbbf8f45bac4f9d3215/applications/plugins/image/CMakeLists.txt#L13). The bindings can be found in https://github.com/sofa-framework/sofa/tree/master/applications/plugins/image/python. SofaPython is deprecated and must no longer be used. Instead SofaPython3 must be used. The mentioned code must be updated accordingly.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3862:38,plugin,plugin,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3862,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"SofaPython was needed into SofaTest (to enable python test) and SofaExporter for bindings. 1- then CMake had to enable SofaPython then SofaTest then SofaPython/SofaPython_test, which is quite ""bothersome"",and made the main SOFA Cmakefile cluttered.; Now if SofaTest is enabled, SofaPython will enable the use of Python_test (and not the other way around); (NB SofaPython contains a redirection for project including `SofaTest/Python_test.h`). 2- SofaExporter is a Sofa module and so, it is quite weird to have a dependency to a plugin in a module.; Now SofaPython will enable SofaExporter bindings if SofaExporter has been enabled before (and not the other way around). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1875:528,plugin,plugin,528,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1875,1,['plugin'],['plugin']
Modifiability,SofaPython3 plugins bug with Linux Binaries,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159:12,plugin,plugins,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159,1,['plugin'],['plugins']
Modifiability,"SofaValidation seems to be a true plugin and not a collection.; This PR does not move it from the `collection` folder. Question:; - Should the module decide by itself what type of module (plugin, collection etc) it is?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3296:34,plugin,plugin,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3296,2,['plugin'],['plugin']
Modifiability,"Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Cl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:8952,variab,variable,8952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin', 'variab']","['PluginManager', 'plugin', 'variable']"
Modifiability,"Solve #1331 . For multi configuration projects (e.g Visual Studio), the macro was not checking if the directory was existing, and was copying the lib as the configuration name (which is obviously wrong 🐇 ); The fix creates the directory before copying (no need to check as CMake does not do anything if it already exists). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1347:24,config,configuration,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1347,2,['config'],['configuration']
Modifiability,"Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDeb",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5580,Plugin,PluginManager,5580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,Solver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemings,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3994,Plugin,PluginManager,3994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,Solver.dir/MatrixLinearSolver.cpp.o; 23593 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/TableDataWidget.cpp.o; 22632 ms: clangbuild//SofaKernel/SofaBase/SofaBaseLinearSolver/SofaBaseLinearSolver_test/CMakeFiles/SofaBaseLinearSolver_test.dir/Matrix_test.cpp.o; 21033 ms: clangbuild//SofaKernel/SofaCommon/SofaLoader/CMakeFiles/SofaLoader.dir/BaseVTKReader.cpp.o; 19516 ms: clangbuild//SofaMisc/SofaMiscMapping/CMakeFiles/SofaMiscMapping.dir/DistanceMapping.cpp.o; 16971 ms: clangbuild//SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/DiagonalMass.cpp.o; 16645 ms: clangbuild//modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglAttribute.cpp.o; 15727 ms: clangbuild//SofaKernel/SofaCommon/SofaMeshCollision/CMakeFiles/SofaMeshCollision.dir/BarycentricPenalityContact.cpp.o; 15389 ms: clangbuild//SofaMisc/SofaMiscMapping/CMakeFiles/SofaMiscMapping.dir/BarycentricMappingRigid.cpp.o; 14767 ms: clangbuild//applications/plugins/CImgPlugin/CMakeFiles/CImgPlugin.dir/src/CImgPlugin/ImageCImg.cpp.o; 14552 ms: clangbuild//SofaKernel/SofaFramework/SofaCore/CMakeFiles/SofaCore.dir/src/sofa/core/Mapping.cpp.o; 14068 ms: clangbuild//SofaGeneral/SofaBoundaryCondition/CMakeFiles/SofaBoundaryCondition.dir/ConstantForceField.cpp.o; 13775 ms: clangbuild//SofaKernel/SofaCommon/SofaEngine/CMakeFiles/SofaEngine.dir/BoxROI.cpp.o; 13658 ms: clangbuild//SofaMisc/SofaMiscMapping/CMakeFiles/SofaMiscMapping.dir/SquareDistanceMapping.cpp.o; 13326 ms: clangbuild//SofaMisc/SofaMiscMapping/CMakeFiles/SofaMiscMapping.dir/SubsetMultiMapping.cpp.o; 13272 ms: clangbuild//SofaGeneral/SofaConstraint/CMakeFiles/SofaConstraint.dir/BarycentricDistanceLMConstraintContact.cpp.o; 12651 ms: clangbuild//SofaKernel/SofaFramework/SofaCore/CMakeFiles/SofaCore.dir/src/sofa/core/Multi2Mapping.cpp.o. **** Templates that took longest to instantiate:; 52138 ms: sofa::core::objectmodel::Data<std::__cxx11::list<const sofa::core::topology::TopologyChange,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:4166,plugin,plugins,4166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,"Some cmake instructions became irrelevant as new requirement versions for cmake, gcc ,and clang have been defined.; So this PR merely remove the now-dead code. \+ Sofa.compat deletion from #4760 was not totally finished (add a warning at cmake configure time). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4812:244,config,configure,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4812,1,['config'],['configure']
Modifiability,"Some components want to compute volume in 2 (or even 1) dimensions.; Identified components:; - DiagonalMass; - MeshMatrixMass; - TetrahedronSetGeometryAlgorithms (should even not be templated in 2d...); - HexahedronSetGeometryAlgorithms (should even not be templated in 2d...). For the topology-related ones, this is easy and the template in 2D should logically be removed.; As for the mass, it would require some refactoring. A mass in 1D should not be able to compute a mass on a hexahedron.... More components could be included in this list.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2457:414,refactor,refactoring,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2457,1,['refactor'],['refactoring']
Modifiability,"Some flags in SOFA are not inherited with SofaPython3 (eg. [#71](https://github.com/sofa-framework/SofaPython3/pull/71) ) because these flags are not linked to a target. Solution: link those compilation flags to a target in SOFA itself (for example SofaHelper, or a global SOFA target ?)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1661:27,inherit,inherited,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1661,1,['inherit'],['inherited']
Modifiability,"Some global variables with internal linkage were defined multiple times with the same symbol, and the same values. Instead, I propose to merge them into a global variable with external linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1950:12,variab,variables,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950,2,['variab'],"['variable', 'variables']"
Modifiability,"Some scenes crash:; - [testOmniDriverEmu.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=centos_clang-5,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/applications/plugins/SensableEmulation/examples/testOmniDriverEmu.scn/output.txt); - [HexahedronForceFieldTopologyChangeHandling.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1449/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/5/artifact/parent_dir/build/scene-tests/archive/examples/Components/topology/TopologicalModifiers/HexahedronForceFieldTopologyChangeHandling.scn/output.txt). The Quater_test is also failing on CentOS but we think it could be related to the rand() bringing the angle too close to in the gimbal lock ToEulerVector in SOFA. If that's the issue, the fix is described here: http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/ and should be applied to Quater::toEulerVector (l. 573 in Quater.inl). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1461:230,plugin,plugins,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1461,1,['plugin'],['plugins']
Modifiability,"Some scenes in LMConstraint were crashing on the CI due to the facts that those scenes were expecting the plugin to be compiled with SofaDistanceGrid (necessary for the response defined as ""distanceLMConstraint"").; As the CI is not compiling the SofaDistanceGrid plugin and the scenes were not telling that they needed it, the scenes are crashing once there is a contact. This PR adds the required plugins lines where it should be needed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1817:106,plugin,plugin,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Some work on cleaning the components SparseGridTopology and SparseGridRamicficationTopology: . - Remove commented code; - Replace sout/serr by msg macro; - Remove duplicated Data in SparseGridRamicficationTopology which inherite from SparseGridTopology ; - Fix warnings (size_t, unsued variables, ...); - Fix SparseGridTopology.scn and SparseGridRamicficationTopology.scn behavior; - Add regression_test references for both scenes and add them to the list of scene to be tested. This PR replace an old one #706 instead of merging master. This PR is only a aesthetic clean before a more complex PR to clean and factorize methods inside the components as well as removing the fileMesh loaded inside the component and use topology Data buffers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/855:220,inherit,inherite,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/855,2,"['inherit', 'variab']","['inherite', 'variables']"
Modifiability,"Some work on dynamic topology changes:; - rewrite the TRIANGLESREMOVED case of Tetra2TriangleTopologyMapping, should bring a speedup of xN where N is the number of triangles to remove. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/788:42,rewrite,rewrite,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/788,1,['rewrite'],['rewrite']
Modifiability,"Split the default parameters of the FileRepository constructor into; multiple constructors to avoid ambiguous calls. Add a new constructor that allows the creation of the repository using; multiple paths. The plugin file repository is now initialized using both $SOFA_ROOT/lib; and $SOFA_ROOT/plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610:209,plugin,plugin,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"Static variable was not defined with double precision Cuda types. The CI probably does not compile SofaCUDA with double precision (off by default). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440:7,variab,variable,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440,1,['variab'],['variable']
Modifiability,"Status of prefabs could be discussed further:; - should they be located in the SofaPython3 plugin?; - should we create many level of abstractions/prefabs?; - definition of current prefabs, e.g. `ElasticObject` using a `UniformMass`?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4206:91,plugin,plugin,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4206,1,['plugin'],['plugin']
Modifiability,Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE362EE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.dylib; 0x107a7e000 - 0x107bf1fff +libSofaGuiQt.20.12.01.dylib (0) <FDAD8B23-63EB-36B8-8FA5-4A4BE5727F8F> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiQt.20.12.01.dylib; 0x107ead000 - 0x107eccfff +libSofaGuiCommon.20.12.01.dylib (0) <79318879-EFF8-36D2-8F09-F3AB9C184736> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:2104,plugin,plugins,2104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"THIS PR HAS BEEN SPLITTED IN SEVERAL PART... THE FIRST ONE IS: #1605 . In this PR I'm try to avoid the tight coupling that is currently in DataTypeInfo.h. . Let's me explain,; Every Data that we manipulate in sofa can return type informations. ; This can be done in two ways:; - the first solution rely on type_traits with the specialization of the DataTypeInfo class. A DefaultDataTypeInfo is provided as a fallback scenario while fully defined information can be provided by providing a specialization for DataTypeInfo<>. ; - the second solution is a runtime approach were the typeinfo is inherited from AbstractTypeInfo. ; To *ease* the implementation the runtime solution is generated by ""reusing"" the static one. This is done with VirtualTypeInfo<StaticDataTypeInfo>. This VirtualTypeInfo inherits from AbstractTypeInfo but wrap and forward all the method call to the StaticDataTypeInfo passed in the template parameter. . This is actually an interesting design gears provided fast/efficient API and an abstract one with lower performance. Nevertheless there is actually one problem with the existing implementation, the problem is that by default access to the static version (so the one that need the full inclusion of involved data types) to generate the dynamic one in the VirtualTypeInfo::get() method. As this function is needed to implement Data<T>::getAbstractTypeInfo it means that the complete static version is needed everytime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:109,coupling,coupling,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,3,"['coupling', 'inherit']","['coupling', 'inherited', 'inherits']"
Modifiability,"TL;DR (dev): Remove direct dependency in SofaConstraint&SofaPrecond on SofaSimpleFEM by implementing a function in TetraFEM.; TL;DR (user): Using PrecomputedConstraintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it doe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2250:586,inherit,inherits,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250,2,"['inherit', 'plugin']","['inherits', 'plugin']"
Modifiability,TODO (to be discussed):. - [ ] Add a CI to https://github.com/sofa-framework/CSparseSolvers; - [ ] Add CSparseSolvers to the list of shipped plugins with the release (https://www.sofa-framework.org/download/),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4994:141,plugin,plugins,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4994,1,['plugin'],['plugins']
Modifiability,Targets are built with debug version of runtime library in debug configuration; under MS Visual Studio. This is enabled with /MDd compiler flag. Missing this; flag for NVCC generated object files results in linker fails due to different; versions of runtime libraries. The problem is resolved by explicitly setting compiler options for debug build; under Windows. The solution is given only for Windows and only for MSVS because; it's the only officially supported by NVidia compiler on this platform. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/300:65,config,configuration,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/300,1,['config'],['configuration']
Modifiability,"TaskScheduler was doing several things:; - A base class for task schedulers; - A factory to register and create task schedulers. The factory code is extracted from the TaskScheduler class and moved into its dedicated class and file. I refactored a bit how the factory works:; Before, it was like there could be only one TaskScheduler at a time. Everytime a new TaskScheduler was created, the previous one is destroyed. It prevents the use of multiple TaskScheduler with different type (derived class). Instead, the task schedulers are now stored in a map. ; The only issue is related to the task allocator. The task allocator is used every time a task is created. The task allocator is supposed to depend on the TaskScheduler where the task will be added. But in practice, a Task is created independently from the TaskScheduler. So I kept the old system that calls a static function setting the allocator when the task scheduler is created. Some unit tests are introduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3480:235,refactor,refactored,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3480,1,['refactor'],['refactored']
Modifiability,Tests inheriting from SofaTest create by default several tests which have no meaning. It was the case for example for SofaMiscTopology_test:. SofaMiscTopology_test/AffinePatch_sofa_test ; SofaMiscTopology_test/LinearElasticity_test ; SofaMiscTopology_test/TopologicalChangeProcessor_test. This is not really an issue... but this means we have a bunch of fake tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1935:6,inherit,inheriting,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935,1,['inherit'],['inheriting']
Modifiability,"Thank you very much for your development. Recently, I had the opportunity to use the plugin you developed, but I found that the latest version of the plugin corresponds to SOFA v21.12, while the latest version of SOFA is v24. So, may I ask if you can update this plugin. Also, since SOFA has developed a compiled version, may I ask how to use this plugin when using the already compiled version of SOFA? We look forward to your prompt reply!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4934:85,plugin,plugin,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4934,4,['plugin'],['plugin']
Modifiability,"The Config.cmake.in was not consistent with the actual CMakeList.txt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3576:4,Config,Config,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3576,1,['Config'],['Config']
Modifiability,"The LateSpecialization pattern, introduced in https://github.com/sofa-framework/sofa/commit/1b92a802eb69693af65f2094f02f9a734d333804, was used to avoid code duplication between float and double specialization of Rigids. However, now that there is only one specialization, it makes the code more difficult to read. Therefore, I suggest to go for a standard specialization. Note that the diff may be difficult to read, but this PR only moves code (with adaptation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126:451,adapt,adaptation,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126,1,['adapt'],['adaptation']
Modifiability,"The MutationListener in Sofa is used to notify (A GUI for instance) of the SceneGraph's edition (addition / deletion / move of nodes, objects, or slaves); The MutationListener itself does not perform anything, but once inherited, its methods can be overloaded to perform operations on a ListView widget for instance, as does the GrapListenerQListView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] b",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:219,inherit,inherited,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,1,['inherit'],['inherited']
Modifiability,"The PLUGIN_SOFASPHFLUID option was not taken into account by the CUDA plugin, so it would try to link against that plugin even if it was not compiled with SOFA. There was also a file that was included twice in CMakeLists.txt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/523:70,plugin,plugin,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/523,2,['plugin'],['plugin']
Modifiability,The PR #1790 highlighted that the DualQuat is only used in Flexible.; MatSym seems as well not really used. It is an open discussion.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1828:59,Flexible,Flexible,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1828,1,['Flexible'],['Flexible']
Modifiability,The PSL plugin relies on SofaPython which is deprecated. The PSL plugin must also be deprecated.; It includes moving the sources of the plugin into an external repository.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3873:8,plugin,plugin,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3873,3,['plugin'],['plugin']
Modifiability,"The SceneCreator is now based on the plugin manager to load its dependency. ; It seems that when compiling in debug the plugin names are changed. In this PR I added to the PluginManager a way to search for ""debugging"" names when Sofa is compiled in debug. . This should fix the failling tests on options_debug on master reported in #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:37,plugin,plugin,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,3,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,The SofaEulerianFluid plugin does not contains documentation.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/833:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/833,1,['plugin'],['plugin']
Modifiability,"The SofaPython plugin is now outdated and based on python2. . As python3 already breaks the API, updating the SofaPython plugin for python3 is an opportunity to also refactor the whole binding code. . Stuff I would like to have.; Pythonic way to manipulate data; ```python; c = object1.addObject(""MechanicalObject"", position=[0,0,0]*1000); len(c.position); for i in c.position:; print i; c.position += [1,0,0]; c.position[2] += [1,0,0]; c.position[2,0] += 2; c.position[1:10] = [1,0,0] ; ...; ```. Numpy exposure of data; ```python; c = object1.addObject(""MechanicalObject"", position=[0,0,0]*1000). ## Read access (copy-less) using toarray(); p = c.position.toarray(); o = numpy.ones((len(c.position), 3))) ; j = p + o. ## Write access (copy-less), the data counter is updated after the 'with' block; with c.position.writeable() as w:; o = numpy.ones((len(c.position), 3))) ; w += o ; w *= 2.0; ```. Wrap around types (copy-less) to typify the data fields on demand; ```python; # syntax 1; c = o.showColor.as(RGBAColor); # syntax 2; c = RGBAColor(o.showColor); c.setFromHSC(1,2,3); c.setFromHSV(1,2,3); ```. Implement your own ForceField in python:; ```python; class MyForceField(Sofa.Core.BaseForceField):; def __init__(self, *args, **kwargs):; Sofa.Core.BaseForceField.__init__(self, *args, **kwargs); ; def init(self):; self.refx = self.position.toarray().copy(). def addForce(self, m, f, x, v):; n = numpy.ones((len(self.position),1)); f = (self.refx-x) * 2 + n; ```; ; To test the binding you need to de-activate SofaPython and activate SofaPython3. ; Then; - runSimu.py to launch a sofa simulation from the command line eg: ; python3 runSimu.py mySimulation.py; - or runSofa. . General guidelines:; - Fix existing API consistency issues; - Improve the performance of the binding by supporting supporting the different python protocols (sequence, buffer+memoryview, copy-less mechanism).; - unified data access and API.; - implementation is currently done with pybind11 and cython.; - modular des",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771:15,plugin,plugin,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771,3,"['plugin', 'refactor']","['plugin', 'refactor']"
Modifiability,"The `sofa::type::vector<T>` class has three ambiguous constructors:. ```c++; vector(Size n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; ```; effectively making the constructor taking a `sofa::Size` useless: using it will result in an ambiguous call since it can be implicitly converted to both `int` and `long`. This PR remove two of them and keep only the `vector(Size n, const T& value)` one. Steps to reproduce; 1. **main.cpp**; ```c++; #include <sofa/type/vector.h>; #include <iostream>. int main() {; using namespace sofa::type;; vector<double> d_v (sofa::Size(5), 0);; std::cout << d_v << std::endl;; return 0;; }; ```; 2. **Compile**; ```sh; $ gcc -isystem $SOFA_ROOT/include/Sofa.Type -isystem $SOFA_ROOT/include/Sofa.Config -o main.o -c main.cpp; ```; ```sh; main.cpp: In function ‘int main()’:; main.cpp:6:41: error: call of overloaded ‘vector(sofa::Size, int)’ is ambiguous; 6 | vector<double> d_v (sofa::Size(5), 0);; | ^; In file included from /sofa/include/Sofa.Type/sofa/type/vector.h:24,; from main.cpp:1:; /sofa/include/Sofa.Type/sofa/type/vector_T.h:78:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(long int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 78 | vector(long n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:76:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(int, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>]’; 76 | vector(int n, const T& value): std::vector<T,Alloc>(n,value) {}; | ^~~~~~; /sofa/include/Sofa.Type/sofa/type/vector_T.h:74:5: note: candidate: ‘sofa::type::vector<T, MemoryManager>::vector(sofa::type::vector<T, MemoryManager>::Size, const T&) [with T = double; MemoryManager = sofa::type::CPUMemoryManager<double>; sofa::type::vector<T, Memory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2270:864,Config,Config,864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2270,1,['Config'],['Config']
Modifiability,"The abstract class `BaseNonLinearMapping` is introduced. All mappings from the folder, except `RigidMapping`, inherit from `BaseNonLinearMapping`. The class relies on the delegate pattern to simplify the implementation of non-linear mappings. All the affected mappings relied on the same design, so it made sense to factorize common code in a base class. Breaking because I removed some aliases, made some methods final etc. What I would like for a next work is to factorize the 3 methods `buildGeometricStiffnessMatrix`, `applyDJT` and `updateK` (if possible). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5006:110,inherit,inherit,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5006,1,['inherit'],['inherit']
Modifiability,"The case arises mostly because of running runSofa from a build directory but you set SOFA_ROOT. It will then tried to load plugins from the install afterwards, etc..., leading to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:123,plugin,plugins,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,6,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin', 'plugins']"
Modifiability,"The case where plugin is smaller than dotExt is not handled by std::equal. See how it works: http://en.cppreference.com/w/cpp/algorithm/equal. An assert is called.; I had the case when dotExt = "".dll"" and plugin = ""PSL"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617:15,plugin,plugin,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617,2,['plugin'],['plugin']
Modifiability,"The class `Simulation` has been refactored:. - It no longer inherits from `BaseObject`; - All the non-pure virtual methods have been deprecated. Instead, their equivalent are available as free functions. Indeed, the content did not need to be in a class and `DAGSimulation` did not override them.; - `sofa::simulation::setSimulation` is deprecated. The global variable `Simulation` is set once and for all in the initialization of the `Sofa.Simulation.Graph` module. ⚠️ If `new` is used to provide a new `Simulation`, it results in a memory leak, because `setSimulation` now does nothing. In summary, the type `Simulation` is now only useful to create `Node` instantiations. This feature can be done out of the Simulation class thanks to a refactoring of modules. It will be done later in another PR. Once it is done, the type could be deprecated. In this Pull Request, it is assumed that it is not possible to create another type of Simulation than `DAGSimulation`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/350]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3889:32,refactor,refactored,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3889,4,"['inherit', 'refactor', 'variab']","['inherits', 'refactored', 'refactoring', 'variable']"
Modifiability,"The classes were used in a plugin which is no longer maintained. See https://www.sofa-framework.org/community/forum/topic/how-to-use-parallelvisitorscheduler/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3957:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3957,1,['plugin'],['plugin']
Modifiability,"The cmake part of our build process is very slow and is getting slower and slower the more we add plugins/modules and packages.; ; I noticed that commands like include or find_package(XXXXX) imply the search, the loading and the execution of the requested package XXXX each time. . This is very problematic as this scale in an horrible (non linear) way. . So I tried a quick and dirty fix based on inclusion gard, 'à la #ifdef MYFILE_H'. I first checked if the file are really loaded multiple times (and this was the case) and implemented a quick test to stop the loading. . The fix accelerates a lot the cmake time on my machine reducing the generation from 1min20 down to 15 sec. So I'm curious to see if such solution is reliable enough to be used (I consider that if this is not the default design of cmake package there must be a rational behind) and what are the possible drawback. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1464:98,plugin,plugins,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1464,1,['plugin'],['plugins']
Modifiability,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1819:83,plugin,plugin,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819,1,['plugin'],['plugin']
Modifiability,"The compatibility file SofaGuiQt.h (redirecting to sofa/gui/qt/config.h) had a `#endif` without a `#if`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2044:63,config,config,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2044,1,['config'],['config']
Modifiability,"The compile definition SOFA_LIBSUFFIX is missing when compiling in Debug mode. Consequently, the loading of the SOFA plugins failed when executing ""runSofa_d"" or ""runSofa2_d"", because it tries to load the libs without considering the ""_d"" suffix in the filenames. . Here is a quick patch from me to fix the issue. But maybe it exists a better solution. Note: My CMake version is 3.14.5. ```diff; From 9ea7a808e24ad1311427e4907e179e88cf7c6acf Mon Sep 17 00:00:00 2001; From: Antonin Bernardin <antonin.bernardin@inria.fr>; Date: Fri, 20 Dec 2019 18:36:29 +0100; Subject: [PATCH] Quick fix about missing compile definition SOFA_LIBSUFFIX. ---; SofaKernel/modules/SofaHelper/CMakeLists.txt | 5 ++++-; 1 file changed, 4 insertions(+), 1 deletion(-). diff --git a/SofaKernel/modules/SofaHelper/CMakeLists.txt b/SofaKernel/modules/SofaHelper/CMakeLists.txt; index b0fd0ce828..794b0edb89 100644; --- a/SofaKernel/modules/SofaHelper/CMakeLists.txt; +++ b/SofaKernel/modules/SofaHelper/CMakeLists.txt; @@ -334,7 +334,10 @@ endif(); # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; -set_property(SOURCE system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ); +#set_property(SOURCE system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ); +if(${CMAKE_BUILD_TYPE} STREQUAL ""Debug""); + add_compile_definitions(SOFA_LIBSUFFIX=_d); +endif(); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_HELPER""); set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX ""_d""); set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ""${SOFAFRAMEWORK_VERSION}""); -- ; 2.20.1; ```; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1235:117,plugin,plugins,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1235,6,"['Plugin', 'config', 'plugin']","['PluginManager', 'config', 'configuration', 'plugins']"
Modifiability,"The current implementation has flawns among which:; - lack of factorization between node & object rendering in the scenegraph view;; - the use of hardcoded color scheme in simulation:Colors. Here is a small attempt to change some of these aspects without the ambition to fix everything. ; Additionally, I would like to be able to add more colors/rendering scheme for objects that are not part of the base framework and wonder if we need to implement an extension mechanism so that object defines in plugins (eg: sofapython3::BasePrefab) can propose their own icon in the scene graph. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4536:499,plugin,plugins,499,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536,1,['plugin'],['plugins']
Modifiability,"The current lifecycle mechanism when renaming the symbol of a Data object is depreciating the old data and setting the new data as a parent of the old one : ; `_oldData.setParent(d_newData)`. This is not 100% working, because a setValue on the old data will not be applied on the new one, because a child is only link to the parent by a callback (and not a _feedForward_). This means that a lot of the recent refactoring pr renaming data symbols are breaking. This pr aims at solving this, and is meant to be applied to all the recent pr to solve this issue. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4814:409,refactor,refactoring,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4814,1,['refactor'],['refactoring']
Modifiability,"The design of Intersection/Intersector is really ""special"" in the sense that:; - Intersection class is the BaseObject in the graph doing stuff; - Intersector is container of functions for canIntersect/intersect method between different primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:650,plugin,plugin,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,1,['plugin'],['plugin']
Modifiability,"The directories `screenshots` and `config` are currently created in the `build` directory of SOFA. When installing the software on a machine, those can end up in a read-only directory. . To avoid this problem, this PR changes:. On Linux:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/.config/SOFA/config/` . On Windows:; - `screenshots` location to: `~/SOFAData/screenshots/`; - `config` location to: `~/AppData/Local/.config/SOFA/config/` . On MacOS:; - `screenshots` location to: `~/Library/Application Support/SOFAData/screenshots/`; - `config` location to: `~/Library/Application Support/.config/SOFA/config/` . These changes have only been tested on Linux. I'm not familiar with MacOS so I don't know what would be the best location. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5096:35,config,config,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5096,10,['config'],['config']
Modifiability,"The document is not maintained and obsolete. The relevant paragraphs are already in https://www.sofa-framework.org/community/doc/plugins/usual-plugins/multithreading/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3667:129,plugin,plugins,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3667,2,['plugin'],['plugins']
Modifiability,"The example src/applications/plugins/SofaPython/examples/keyboardControl.scn is not working anymore. . To 'fix' the example it is possible replace 'free_position' by 'position' in the keyboardControl.py pythonScriptController:; ```py; ...; 	# key and mouse events; use this to add some user interaction to your scripts ; 	def onKeyPressed(self,k):; 		; 		# free_position is a scalar array : [tx,ty,tz,rx,ry,rz,rw]; 		free_position=self.MechanicalState.free_position. 		# translation speed; 		speed = 1 . 		# UP key : front; 		if ord(k)==19:; 			free_position[0][2]-=speed; 		....; 	; 		self.MechanicalState.free_position=free_position; 		return 0 ; ```. The change of behavior happens with the merge of PR #459 ; @ChristianDuriez, @fjourdes, @EulalieCoevoet is this a regression (and thus we should fix the .cpp) or is this the normal expected behavior (and so we should just update the examples :)) ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/749:29,plugin,plugins,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/749,1,['plugin'],['plugins']
Modifiability,"The examples were about components only available into the SofaEulerianFluid plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2833:77,plugin,plugin,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2833,1,['plugin'],['plugin']
Modifiability,"The extern template instantiations allows to include ` SofaCUDA/config.h` before `ObjectFactor.h`. That is why the module name is defined properly in this PR. The extern template instantiations don't act directly on the module name, just the order of includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4714:64,config,config,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4714,1,['config'],['config']
Modifiability,"The following scene is crashing, he is using sofa 19.06 + STLIB + windows 10. ```python; from stlib.scene import MainHeader, ContactHeader, Node; from stlib.physics.deformable import ElasticMaterialObject. def Finger(parentNode=None, name=""Finger"",; rotation=[0.0, 0.0, 0.0], translation=[0.0, 0.0, 0.0],; fixingBox=[0.0,0.0,0.0], pullPointLocation=[0.0,0.0,0.0]):. finger = Node(parentNode, ""Finger""); eobject = ElasticMaterialObject(finger,; volumeMeshFileName=""data/mesh/quiNexistepas.vtk"",; poissonRatio=0.3,; youngModulus=18000,; totalMass=0.5,; surfaceColor=[0.0, 0.8, 0.7],; surfaceMeshFileName=""data/mesh/quiNexistepas.stl"",; rotation=rotation,; translation=translation); . return finger. ; def createScene(rootNode):; """"""This is my first scene""""""; MainHeader(rootNode, gravity=[0.0, -981.0, 0.0], plugins=[""SoftRobots""]); ContactHeader(rootNode, alarmDistance=10, contactDistance=3, frictionCoef=0.08); ; ; Finger(rootNode); ; . return rootNode; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1469:806,plugin,plugins,806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1469,1,['plugin'],['plugins']
Modifiability,The following scenes must be fixed because they show warnings or error messages. ```; [INFO] [PluginFinder] Found 6 files with advice:; examples\Benchmark\Performance\MatrixAssembly\MatrixAssembly_direct.scn; examples\Components\linearsolver\preconditioner\FEMBAR_PCG_AsyncSparseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\Topologi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:94,Plugin,PluginFinder,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,2,['Plugin'],['PluginFinder']
Modifiability,"The function pluginIsLoaded is not behaving as it name suggest and does not detect plugin that have not been loaded using an absolute file path. . See: ; https://github.com/SofaDefrost/plugin.SofaPython3.deprecated/issues/137. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:13,plugin,pluginIsLoaded,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,3,['plugin'],"['plugin', 'pluginIsLoaded']"
Modifiability,"The goal was to avoid type conversions by removing explicit types. Instead I took the rigorous returned types and added static_assert when two types are interacting. Curiously, I found out that the templated code (intersection with Sphere) is not called anywhere. Let's see if a known plugin is using it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3287:285,plugin,plugin,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3287,1,['plugin'],['plugin']
Modifiability,"The idea is to define component Data's where they are declared, usually in the header file. See https://isocpp.org/wiki/faq/cpp11-language-classes#member-init. Pros:; - All pros described in https://isocpp.org/wiki/faq/cpp11-language-classes#member-init; - Data name, variable name and description are declared and defined at the same place. No more back and forth between the declaration and the constructor definition.; - No duplicates between Doxygen and Data description. Cons:; - A change in the definition leads to a re-compilation of the files including the header; - Does not solve https://github.com/sofa-framework/sofa/issues/274 or https://github.com/sofa-framework/sofa/issues/44. An evolution of this proof of concept will be proposed in another PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2613:268,variab,variable,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2613,1,['variab'],['variable']
Modifiability,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1777:46,plugin,plugin,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777,1,['plugin'],['plugin']
Modifiability,"The inheritance link between CollisionResetVisitor and CollisionVisitor and some other had a consequence that ProcessGeometricalData was called multiple times in the FreeMotionAnimationLoop when the free motion and the collision detection where computed in parallel. . Another issue was that we had two time the timers for the substeps of the collision detection in the case of parallel computation : IMO only the AnimationLoop should have timers for global computation made by visitors. Here I remove the one of the Pipeline. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5042:4,inherit,inheritance,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5042,1,['inherit'],['inheritance']
Modifiability,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1941:129,plugin,plugins,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941,6,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugins']"
Modifiability,"The line defining node gathering all the plugins was immediately closed (slash at the end); consequently, the second `</Node>` was closing the root node itself. (so the loaded scene was containing nothing). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2831:41,plugin,plugins,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2831,1,['plugin'],['plugins']
Modifiability,The merge of the mass and the HexaFEMForceField in the followinf file doesn't seem to be useful because there exist a more classical way to do this and adds a diamond inheritance in the framework. - HexahedronFEMForceFieldAndMass; - HexahedralFEMForceFieldAndMass,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3901:167,inherit,inheritance,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3901,1,['inherit'],['inheritance']
Modifiability,"The module name is used by the PluginManager to identify a plugin. And there seems to have a need that the plugin binary filename matches the module name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4720:31,Plugin,PluginManager,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4720,3,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,The new SceneCreator implementation requires to load plugins to work. ; To do that it calls the PluginManager...the problem is that in debug...the plugins have are not found. https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/436/testReport/. Is this because of the _d suffix ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/463:53,plugin,plugins,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/463,3,"['Plugin', 'plugin']","['PluginManager', 'plugins']"
Modifiability,The newmat library is really old (discussion here https://github.com/sofa-framework/sofa/pull/2311). This is the last thing inheriting BaseVector/BaseMatrix which is not in Sofa.Algebra (related to https://github.com/sofa-framework/sofa/pull/2311). So the plan is to:; - deprecate LULinearSolver which needs NewMat only (not possible to use with standard Matrix); - deprecate all NewMatMatrix and NewMatVector; - (not related with algebra but) remove all usage of newmat itself here and there.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2483:124,inherit,inheriting,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2483,1,['inherit'],['inheriting']
Modifiability,"The objective is to remove all files related to Bezier High Order elements in the basic distribution of SOFA. Indeed, this content is still imature and will be provided in 2 separate plugins : SofaHighOrderTopology and SofaHighOrderFEM. In this pull request, topology classes in GeneralTopology has been removed and some associated components have been either removed or updated (to erase any link to Bezier High Order elements).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/14:183,plugin,plugins,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/14,1,['plugin'],['plugins']
Modifiability,The path to the pluginManager.cpp is incomplete in the CMakeLists. Thus prefix was always empty and nod set to _d in debug mode. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1313:16,plugin,pluginManager,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1313,1,['plugin'],['pluginManager']
Modifiability,"The precomputed compliance matrix with `PrecomputedConstraintCorrection` component has a chance to be corrupted at each recomputation. It depends on the collision model used. ### How to reproduce ; I made a small example scene : [BugShowcase.zip](https://github.com/sofa-framework/sofa/files/5961370/PostForum.zip). - Sofa version : 20.12. - Plugins : SofaPython3. This scene uses command line arguments and SofaPython3, so I added ; ```cpp; PythonEnvironment::setArguments(SetDirectory::GetFileName(filename), arguments);; ```; in the `try{}` block of in `SceneLoaderPY3::loadSceneWithArguments` in SceneLoaderPY3.cpp (lines : 90-100). ### The solution ; I do not know, but changing the 3d model can help. Also, one can try to recompute the compliance matrix until it ""works"" and save it and reload it (with `recompute=False`).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1809:342,Plugin,Plugins,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1809,1,['Plugin'],['Plugins']
Modifiability,The problem was that a failure to create a component due to template mismatch on a; pluginized object shows the pluginization message instead of template mismatch one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1332:84,plugin,pluginized,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1332,2,['plugin'],"['pluginization', 'pluginized']"
Modifiability,"The purpose of this PR is to unify the mass components in SOFA (UniformMass, DiagonalMass and MeshMatrixMass):; - unify the naming of data for mass information (vertexMass, massDensity and totalMass); - unify their initialization process; - apply the coding rules (especially regarding the variable prefix d_ and m_) and use the msg API; - add the feature of dataTracker on the data for mass information; - add support for additional CUDA templates for the MeshMatrixMass (that should always be preferred as default mass). This should ease the understanding of new users at first look.; All tests and checks added should also make these codes more robust. A script is added with this PR to automatically update all your scene files (.xml and .scn). I invite to be really **prudent** before merging this PR, since it affect basically all simulations. Note: @hdeling I removed unused functions (numericalIntegrationOrder, numericalIntegrationMethod, integrationMethod) in MeshMatrixMass that I think were used before the ""plugin.HighOrder"" plugin was created. Can you confirm this?. Suggestion for future work:; - rename MeshMatrixMass into SparseMass; - move MeshMatrixMass with DiagonalMass; - make DiagonalMass depends from MeshMatrixMass (since it's a simplified -lumped- derived approach from MeshMatrixMass) : this would clearly factorize the code and make it more robust. PS : bisous. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637:290,variab,variable,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637,3,"['plugin', 'variab']","['plugin', 'variable']"
Modifiability,"The removed line prevents referencing this plugin in another, externally built SOFA plugin.; (doing a `find_package(SofaPython)` from the CMakeLists.txt of another plugin, built as a standalone project did not work). I don't know the side-effect of simply removing this line, but I also don't see in which case this could (or should) work anyway: there is no reason to create a target during the import of a package. the targets are created at install, and loaded during the package import, not created, to my understanding. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/888:43,plugin,plugin,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/888,3,['plugin'],['plugin']
Modifiability,"The rigid type is registered both in applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/CapsuleModel.cpp and applications/plugins/CollisionOBBCapsule/src/CollisionOBBCapsule/geometry/RigidCapsuleModel.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4709:50,plugin,plugins,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4709,2,['plugin'],['plugins']
Modifiability,"The scene checker detects when we use a plugin but forgot the ""required plugin"" tag and tells us how to add it in our scene, but without closing the tag. This PR fixes the bug in the suggestion and corrects some typos in error messages in the same file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/573:40,plugin,plugin,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/573,2,['plugin'],['plugin']
Modifiability,The scene loader should warn the user when loading a python scene (py/pyscn) without SofaPython3 plugin loaded beforehand,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2366:97,plugin,plugin,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2366,1,['plugin'],['plugin']
Modifiability,"The state of vector.h and set.h is a bit messy right now. . A recent PR have added tests to vector & fix several crashes & infinite loop. It appears that the problematic code is also in set.h so a general code factoring is needed. . There is also some details on container refactoring in PR #113 ; Finally it is not very clear what should be in std:: and what should be in sofa::helper:: ...; and there is a lot of code in the .h for only two specialization I see no reason why they shouldn't be make extern and implemented in .cpp. . So this PR is a WIP in which everyone is welcome to contribute. My current todo list is:; - implement tests for set so we can refactor safely. ; - declare int & unsigned int as extern template & move specialization from .h to .cpp for vector & set; - have everything in sofa::helper for consistancy (vector, set, map, pair, list, deque); - fix the problem pointed by @maxime-tournier in #271 in the remove* functions. ; - remove the lines added by hugo ; ```cpp; /// \todo: refactoring of the containers required; /// More info PR #113: https://github.com/sofa-framework/sofa/pull/113; ```; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/278:273,refactor,refactoring,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/278,3,['refactor'],"['refactor', 'refactoring']"
Modifiability,"The static variable is constructed as soon as the plugin is loaded. This could be a problem if the plugin initialization failed (SofaCUDA). This PR remove the variable for a static function. The code is called only when used. Note that this PR is temporary, waiting for https://github.com/sofa-framework/sofa/pull/4852 where this variable won't be necessary. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4883:11,variab,variable,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4883,5,"['plugin', 'variab']","['plugin', 'variable']"
Modifiability,"The title is self contained : the plugins need a way to test the scenes and/or the regression, it would be great to create an action to automatize it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4265:34,plugin,plugins,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265,1,['plugin'],['plugins']
Modifiability,"The unit test in this PR relied on `rand()`, which was seeded by `srand(time(nullptr))`. However, it means that every time the test is executed, the generated input values are different. The test is not repeatable. And sometimes, the generated values lead to singularities, which are values not supported by the tested functions.; The changes in this PR made the random generation deterministic and portable, so that the test is repeatable. We also make sure that the generated values don't lead to singularities. For more information about the singularities, see https://github.com/sofa-framework/sofa/pull/4122. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4126:399,portab,portable,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4126,1,['portab'],['portable']
Modifiability,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4314:88,inherit,inherited,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314,1,['inherit'],['inherited']
Modifiability,"The usual pattern of component classes is the following:. - A generic method is defined in the base class of the component. Since it is generic, it does not know the type of the `DataTypes` (it's not templated). Instead, it acts on `VecId`.; - In a second base class, inheriting from the first one, the `DataTypes` is known (the class is templated). Therefore, the methods can be defined to work on the right type.; - In this class, the generic method calls the template-specific one. IMO, the template-specific method should not be public. In this PR, they are moved to protected. I think also, that the generic methods can be final, but this is breaking, so I am not sure that it is a good idea to keep the final keyword. The PR starts with the `final` keyword to study the consequence on the CI. Those changes force the user to call only the generic methods. I took the opportunity to add a check on the component state in the generic methods. If the final keyword is used, it would ensure that the component state is called before each call of the public API. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4943:268,inherit,inheriting,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4943,1,['inherit'],['inheriting']
Modifiability,"The warning was:; ``` cmake; CMake Warning at Sofa/framework/Config/cmake/SofaMacrosInstall.cmake:1031 (message):; Deprecated macro. Use 'sofa_add_targets_to_package' instead.; Call Stack (most recent call first):; applications/plugins/image/image_gui/CMakeLists.txt:46 (sofa_install_targets); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359:61,Config,Config,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359,2,"['Config', 'plugin']","['Config', 'plugins']"
Modifiability,"There are some unresolved externals in MeshGenerationFromImage.inl in the CGAL plugin. ; ```Undefined symbols for architecture x86_64:; ""_initImage()"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaultty",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:79,plugin,plugin,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,1,['plugin'],['plugin']
Modifiability,"There are still lots of references to this plugin in the rest of the SOFA code base, including bindings in the `image` and `PSL` plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855:43,plugin,plugin,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"There is a lot of commented code sine years. Is just ugly and pointless (as we have versioning system to keep old code) ...so we could spend some time to remove that during the coding spring. I know this is not a very challenging task, but it is like sweep your house...you fell so good when it is done. . (And making easy things is relaxing after hours of complex Sofa-NG refactoring). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/679:373,refactor,refactoring,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/679,1,['refactor'],['refactoring']
Modifiability,"There is duplicated code in several function of Link.h. ; I factored that. . I also removed an #ifdef MACRO that was standing there for year and no one cares. If we plan/want to refactor this part we should do that with [[deprecated]]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1704:178,refactor,refactor,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1704,1,['refactor'],['refactor']
Modifiability,There is not a lot of contribution to make plugin from the old sofa modules. ; Here is one. . The general idea is that it should decrease compilation time and memory footprint of sofa. . This is my contribution to the issue stated by @hugtalbot in ; https://github.com/sofa-framework/sofa/issues/346. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/396:43,plugin,plugin,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/396,1,['plugin'],['plugin']
Modifiability,"There was an unused variable in a frequently included header, and a missing override in another one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/386:20,variab,variable,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/386,1,['variab'],['variable']
Modifiability,"There's a wierd issue in cmake package config that caused the paths to CImg to be inconsistent (depending on whether the build was triggered from ghprb or manually) on Defrost's CI.; It happens to be CMake's interpretation of the ""PACKAGE_"" prefix in . CImgPlugin/extlibs/CImg/CImgConfig.cmake.in that varied from one build to another.; The prefix is actually useless, since ${CIMG_INCLUDE_DIR} is already a valid and complete path, in build & install configurations. Removing the PACKAGE_ prefix solves the issue.; I flagged this PR as fast-merge since our CI @SofaDefrost does not build anything because of that.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/921:39,config,config,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/921,2,['config'],"['config', 'configurations']"
Modifiability,"These 2 classes were not compiled/used anymore for at least more than 1 year.; So I consider the ""deprecation""/""removal"" process as expired; and remove them from the SOFA codebase.; (and especially to avoid for good the confusion with helper::system::{Plugin/PluginManager}. Removed last files using these mechanism as well (some plugins); those files were not compiled so no consequence at all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1612:252,Plugin,Plugin,252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1612,3,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugins']"
Modifiability,"These are all fixes required to correctly compile out-of-tree plugins and project. We really need to add out-of-tree CI. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1767:62,plugin,plugins,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1767,1,['plugin'],['plugins']
Modifiability,"These function allows to retrive other base object from the context and are actually duplicating a service that is already provided by BaseContext. To refactor that there was two options.; (1) keep search & searchAll and remove the getContext() (to follow Demeter's rules); (2) remove the search & searchAll and keep getContext() . Given that accessing the context seems an important feature (used for much more) , decided to do solution (2). . NB: There was more line of code in the implementation that the line of of code this functions saves. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1842:151,refactor,refactor,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1842,1,['refactor'],['refactor']
Modifiability,"These references were not removed in; - #3960 . There should be errors like; `CMake Error: File applications/plugins/Flexible/ExternalProjectConfig.cmake.in does not exist.` occuring. 🤐. Not sure why the CI did not detect this, maybe because of CMake caches not cleaned or something like that. EDIT: seems it depend on some factors, I get ""only"" warning on other configuration; `applications/plugins/Compliant does not exist and will be ignored.`; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:109,plugin,plugins,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,4,"['Flexible', 'config', 'plugin']","['Flexible', 'configuration', 'plugins']"
Modifiability,"They are moved in an external plugin: https://github.com/sofa-framework/CSparseSolvers. Two components are impacted: `SparseLUSolver` and `SparseCholeskySolver`. The plugin `CSparseSolvers` is now fetchable. > ⚠️ `SparseLUSolver` has an equivalent using Eigen in SOFA (without the need of a plugin): `EigenSparseLU`, and `SparseCholeskySolver` equivalent is `EigenSimplicialLLT`. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/378]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/119]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258:30,plugin,plugin,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258,3,['plugin'],['plugin']
Modifiability,"This ""move"" is originally done to uncouple CGAL plugin and Image. This was done by moving Image class (along with dependencies) from Image plugin (ImageTypes.h) to CImgPlugin (CImgData.h). The point is to reduce compilation time since CImg takes less time to compile than Image.; Now Image and CGAL both depend on CImgPlugin which is lighter.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1104:48,plugin,plugin,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1104,2,['plugin'],['plugin']
Modifiability,"This CMake macro permits to create dependent options for tests that will automatically be hidden and set to OFF if SOFA_BUILD_TESTS is defined and FALSE.; If SOFA_BUILD_TESTS goes back to TRUE, the option is shown again with its old value. This way of adding a tests subdirectory should be propagated to all plugins. See [CMake documentation](https://cmake.org/cmake/help/v3.10/module/CMakeDependentOption.html) for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1164:308,plugin,plugins,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1164,1,['plugin'],['plugins']
Modifiability,"This PR adds a ""MOVED"" status to ComponentChange, as it was only handling deprecated, removed and pluginized status. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2169:98,plugin,pluginized,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2169,1,['plugin'],['pluginized']
Modifiability,"This PR adds a CMake find module for the QGLViewer used in SOFA.GUI.Qt.; The behavior here (already in place) is to look for an external package of QGLViewer and if not found, use the embeded code of QGLViewer (which is linked dynamically).; I may have missed something but it seems that QGLViewer does not provide CMake config files (neither from source, or in package managers such as APT, Conda and vcpkg). And as SOFA was not including a CMake module for it, there was no chance for it to be found externally.; Then, this should not break current behavior but just fix the possibility to use an external GLViewer package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4290:321,config,config,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4290,1,['config'],['config']
Modifiability,"This PR adds a `isFile` function to the FileSystem component. The PluginManager will then use this new function to test whether or not the plugin path is an existent file. @guparan Concerning your question last week (what happens if the name of the plugin is passed without a path), the previous behavior was to check if the file was a valid library file (.so, etc.), and then gather the full path from the search directories. The new behavior will first check that the file is a valid file (which won't be if only the name is passed), and then try to find it in the search directories. This should not break any old behaviors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/621:66,Plugin,PluginManager,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/621,3,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"This PR adds an attribute pathType (m_pathType) in DataFileName and DataFileNameVector to be able to easily identify whether a component holding a DataFileName accepts files, directories or both. This is useful to provide custom fileDialogs in user interfaces such as runSofa2, give more information about the type of values a dataFileName takes, and provide better error messages. To use it: in the ctor of the component, on a DataFileName datafield, call setPathType(<PathType>) (<PathType> being an enum value of either FILE, DIRECTORY or BOTH. Default value is FILE). The PathType of a DataFileName can be queried by calling getPathType(). In addition, checks are made within the updatePath() method of DataFileName, called when the value changes, to guarantee that the value set is consistent with the defined path type. Since the default pathtype is set to FILE, there are only few components that are directly affected by the pull request (AddResourceRepository is one of them (takes only directories), MeshExporters have a DataFileNameVector which can accept both directories and files. Those 2 components had to be modified to behave properly, and I've been able to identify them thanks to the existing unit tests & scene tests that we compile on the CI. There's no guarantee that there isn't any untested component that should be updated too, but the fix is easy (setPathType(WHATEVER) in the ctor of the component). Same goes for pluginized components of course. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1407:1441,plugin,pluginized,1441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1407,1,['plugin'],['pluginized']
Modifiability,"This PR adds custom RPATH to handle dependencies to relocatable targets that will be installed in the ""plugins"" directory. 3 cases are handled:; - A non-relocatable library depends on a relocatable library; - A relocatable library depends on a relocatable library; - A relocatable library depends on a non-relocatable library. WARNING: note that this is a hacky fix based on the hacky RELOCATABLE ""feature"". ; TODO: rework the CMake files to replace the relocatable mechanism by something more standard. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1619:103,plugin,plugins,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1619,1,['plugin'],['plugins']
Modifiability,"This PR adds several bindings to the SOFA python's plugin that we recently needed for a project. - GUIManager: set prefix, config and screenshot directories; - RegularGrid: get the position of a given node index; - SparseGrid:; get the cube and node index in the underneath regular grid; get the position of a given node index; get the boundary cells and nodes; find the cube that enclose a given position; get the nodes indices of a given cube; - Simulation: init and unload a simulation node. Export a scene.; - SofaModule: add plugin repositories, create and set the simulation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990:51,plugin,plugin,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990,3,"['config', 'plugin']","['config', 'plugin']"
Modifiability,This PR adds some read/write access method for Data which can shorten slightly the syntax ; required when you want to construct a Read(Write)Accessor object for a Data. ; It extends the method implemented in commit 77ca6f2a7c2cf18a39cdad6a4a88f02ed6d9a9dd; for WriteOnlyAccessor to other types of Data Accessor.; ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/450:174,extend,extends,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/450,1,['extend'],['extends']
Modifiability,"This PR adds support for Visual Studio 13 in the ci scripts. VS2013 builds (on ci) won't work without this.; As soon as the builds of every non-VS2013 configurations are ok on this branch (see https://www.sofa-framework.org/dash/index.php?branch=origin%2Fci-vs2013 ) , I believe it is save to merge.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/129:151,config,configurations,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/129,1,['config'],['configurations']
Modifiability,"This PR adds the ability to autoload plugins, i.e without the need to add ""RequiredPlugin"" in each scene file.; This is especially useful for ""essential"" plugins such as SofaPython.; For now, only SofaPython is marked as ""Autoloadable"". An other future PR will activate CImgPlugin to add image loading (and remove ImagePNG/ImageBMP from SofaKernel). ""Main"" programs just needs to add the line : ; `sofa::helper::system::PluginManager::getInstance().autoloadPlugins();`. Important Changes:; * autoload API in Plugin ""interface""; * remove hard loading of SofaPython in runSofa; * add a new commandline in runSofa to disable autoloading of plugins (enable by default); * add a test; * (not really related to the PR but could be useful) add an helper function to check if a file is a symbolic link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253:37,plugin,plugins,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253,5,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugins']"
Modifiability,"This PR adds the cmake option ""NINJA_BUILD_POOL_FLEXIBLE"" which limits the number of CPU cores used to build the Flexible target (default value: 1). Can be easily replicated to other projects as needed. ; This is only effective when using Ninja.; This will make possible to optimize the number of build threads without hitting the RAM limit on CI, but also on workstations.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/254:113,Flexible,Flexible,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/254,1,['Flexible'],['Flexible']
Modifiability,"This PR aims at correcting bugs related to the newly externalized tinyxml2 dependency in two ways : ; 1. For Windows, this corrects the FindTinyxml2.cmake to be able to find the lib and install it correctly when using the tinyxml2 lib present in the WinDepPack.; 2. For MacOS, this PR correct the rpath of the plugins linking to tinyxml2 for packaging. After this PR is closed, the installed version of tinyxml2 present on the CI builders will be remoced, and the one in the WinDepPack will be used instead (thanks to this pr: https://github.com/sofa-framework/ci/pull/48 and some manual configuration of the builders). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4574:310,plugin,plugins,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4574,2,"['config', 'plugin']","['configuration', 'plugins']"
Modifiability,"This PR aims to handle in a more ""contained"" way the components implemented in different plugins to avoid having everything mixed into the ObjectFactory. . The PR is composed of two aspects. 1) **Registering components by ""plugin.classname"" instead of ""classname"" in the ObjectFactory**. The factory currently access component by their classname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:89,plugin,plugins,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"This PR aims to improve the way we search and load plugins. It adds:; - recursive search in PluginManager::findPlugin; - finding plugin dependencies in its directory (Windows only); - (SofaPython) function to easily edit sys.path at any plugin init; - ~~new Data in RequiredPlugin to find out-of-sofa plugins: `searchPath`~~; - new component AddPluginRepository for adding a path to the pool of plugin paths; - ~~**BREAKING**~~: rename AddResourceRepository into AddDataRepository (alias added for backward compat); - new default plugins folder in build/install to allow drag&drop. The last one shall be discussed, I'm not sure it is really needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:51,plugin,plugins,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,7,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"This PR change the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::Vec<Type> can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) need to be updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/328:384,plugin,plugin,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/328,1,['plugin'],['plugin']
Modifiability,"This PR changes the behavior of helper::vector to make it closer to svector; - helper::vector can parse space separated values **and** [,] separated values; - helper::vector now serialize into [,] separated string; - helper::fixed_array (and so helper::Vec<Type>) can also parse space separated values **and** [,] separated values. As a consequence the serialization/deserialization on the python side (SofaPython plugin) is updated accordingly. Now the repr() of a python object is used to serialize it into a string in the Node.createObject() method if it is not a string already. Later on, code can be cleaned-up:; - no more cat/concat/listToStr() calls needed in python code; - no more helper::svector needed in c++ code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330:414,plugin,plugin,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330,1,['plugin'],['plugin']
Modifiability,This PR contains a set of small changes on SofaPython that we are using in our projects. . CHANGELOG:; - [SofaHelper] add StringUtils::getStringCopy (because it was duplicated in several place of the plugin); - [SofaPython] add systematically sys.argv in PythonEnvironment; - [SofaPython] add a very general getattr function in Binding_Node (to write node1.node2.node3.obj.data); - [SofaPython] add a getTarget in BaseObject (to return the plugins that contains a component); - [SofaPython] add a getComponentsFromTarget in the Sofa module ; - [SofaPython] add some minor function in Binding_Data; - [SofaPython] add docstring support for the Sofa module; - [SofaPython] change Binding_BaseContext.getObject to return None instead of a broken exception . There is tests for all features. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656:200,plugin,plugin,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"This PR diffs against the sofa-framework::issofa_constrainsolving branch until it has been merged into master. # Objectives; - Adjust FreeMotionAnimationLoop so that it is more faithful to the actual equations, most notably by ; allowing only one linearisation of the mappings within the time step. ; - Update the API in order to compute a linearised version of the constraint forces, in a similar fashion to ; what is done in the Compliant plugin. . # Requirements ; The following PR are required in order to build this ; - #484 ✔️; - #450 ✔️ ; - #452 ✔️ ; - #456 ✔️ . For testing: ; - `SOFA_USE_MASK` **must** be deactivated, otherwise derivatives quantities ( velocity at contact points for example) are not propagated at all since all dofs are ""masked"" by default. After having a rather quick look, apparently the `SOFA_USE_MASK` impose some strict (undocumented) requirements (on top of other limitations like the fact that it does not support changes in the topology) about where in the time step the ""apply"" method of mappings is called. - There is a branch on my local fork that integrates all the requirements for testing that can be found at the following location [fjourdes:insimo_freemotion_integration](https://github.com/fjourdes/sofa/tree/insimo_freemotion_integration). # Changelog; API Breaking. [SofaCore]; - `ConstraintSolver` can now define the VecId where the constraint lambdas and constraint correction are stored. Previously, these were fixed locations, usually VecId::externalForce() and VecId::dx(), but it could vary depending on the implementation of both the ConstraintSolver and the ConstraintCorrection API. Components can retrieve these locations when inspecting their ConstraintParams object which is usually a parameter of the API methods for constraint solving.; - `ConstraintParams` contains the `MultiMatrixDerivId` that can be used by components related to the `ConstraintSolver` to retrieve the location of the constraint jacobian.; - `ConstraintResolution` API ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:441,plugin,plugin,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['plugin'],['plugin']
Modifiability,"This PR disables all freshly pluginized modules by default except for SofaMiscCollision because it contains DefaultCollisionGroupManager. It also disables PSL by default.; Tell me if these default plugins should actually be kept. To continue testing as before (and to keep our scene tests working) I manually enable all these plugins in CI at configuration step. This will fix some failing scene tests due to missing dependency (RequiredPlugin).; Actually, the scenes with missing dependencies due to disabled plugin (plugin library not found in `bin`) should not even be tested. Some scenes like `Fluid2D.scn` and `Fluid3D.scn` could even be moved to an examples folder in `plugins/SofaEulerianFluid`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575:29,plugin,pluginized,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575,7,"['config', 'plugin']","['configuration', 'plugin', 'pluginized', 'plugins']"
Modifiability,"This PR factorizes the code of PartialFixedConstraint by inheriting for most functions (init, draw) from the FixedConstraint; FIX #440 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/718:57,inherit,inheriting,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/718,1,['inherit'],['inheriting']
Modifiability,This PR fixes errors like `[FileRepository] File icons/back.png NOT FOUND` reported recently. These errors were caused by the fact that SofaGuiQt and runSofa had no idea were to find their resources (if not installed).; Adding and configuring some .ini files will fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/758:231,config,configuring,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/758,1,['config'],['configuring']
Modifiability,"This PR fixes errors on the CI. 1- SofaSph; SpatialGridPointModel should be in the same module as SpatialGridContainer (i.e SofaSphFluid). SPH is 100% linked with SpatialGridContainer and SpatialGridPointModel is always used with SPH so it makes much more sense to be in the SPH plugin.; The move is registered in the ComponentChange list. 2- SofaDistanceGrid; One file was present in SofaMiscCollision (namely FrictionContact_DistanceGrid.cpp) but was never enabled because of the dependency order. Moreover, the content of this file is already in SofaDistanceGrid, more precisely in RegisterModelToCollisionFactory.cpp). So this is totally useless. NB: the two scenes using SpatialGridPointModel does not need SofaMiscCollision anymore. Fix #1897. Contains #2169 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2170:279,plugin,plugin,279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2170,1,['plugin'],['plugin']
Modifiability,"This PR fixes exception handling in Python bindings. Mostly, the PR replaces the incorrect:; ```c++; PyErr_BadArgument();; Py_RETURN_NONE;; ```; with the correct:; ```c++; PyErr_BadArgument();; return NULL;; ```. As the [Python API](https://docs.python.org/2/c-api/exceptions.html) documentation says: . > [Python exception handling] works somewhat like the Unix errno variable: there is a global indicator (per thread) of the last error that occurred. Most functions don’t clear this on success, but will set it to indicate the cause of the error on failure.; > ; > **Most functions also return an error indicator, usually NULL if they are supposed to return a pointer, or -1 if they return an integer (exception: the PyArg_*() functions return 1 for success and 0 for failure).**. As it happened, any error triggered within the python bindings would go unnoticed until someone else would check the error flag using `PyErr_Occurred`, possibly during a python code error or by some other C extension (in my case, Numpy). . Hopefully the behaviour is now correct. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] the content of the PR is clear and that a future PR from @maxime-tournier may follow the @matthieu-nesme suggestion. ; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/156:369,variab,variable,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/156,1,['variab'],['variable']
Modifiability,"This PR fixes missing default ""plugins"" (now modules) after https://github.com/sofa-framework/sofa/pull/732. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/753:31,plugin,plugins,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/753,1,['plugin'],['plugins']
Modifiability,"This PR fixes the `init()` of RigidRigidMapping when using `globalToLocalCoords=True` (your positions are initially expressed wrt the global frame) with `repartition` (your child's positions are mapped to the parent's positions using this description). . When we look at the code, we can see that someone already fixed the `init()` but only for one of three cases. ; This PR fixes the two forgotten cases. . **EDIT**. This PR:. RigidMapping:; - adds template <Rigid3,Rigid3> with tests ; - this change required some updates/additions in RigidCoord and RigidDeriv; - cleans variables name (d_, m_), which is **breaking** . RigidRigidMapping:; - sets the component as deprecated (with instruction to fix the scene) ; - fixes `init()` when using `globalToLocalCoords=True` with `repartition` ; - adds tests; - cleans variables name (d_, m_), which is **breaking**; - adds vectors' size checks; - adds component state checks; - removes ""fake"" vectors' size checks: if the sizes mismatch it should be detected during the initialization and the component should be in an invalid state. If the sizes change during execution, it is not enough to just check the size, the component should be in an invalid state because it impacts many other things... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3680:573,variab,variables,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3680,2,['variab'],['variables']
Modifiability,This PR fixes the compilation of CGAL plugin with CGAL version greater than 4.10. It also enables back the CylinderMesh component for which I'm not sure why it was removed in the first place as it seems to work perfectly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/783:38,plugin,plugin,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/783,1,['plugin'],['plugin']
Modifiability,"This PR gives the ability to exchange images between different threads in the MultiThreading plugin. It would be especially usefull for multithreading a camera grabber component and other components (for instance computer vision algorithms). In more details: ; - It consists in adding, in the DataExchange component, exchanges of image data types (ImageUC, ImageUS, ImageF). It involves a depedency with the image plugin, handled in the CMakeLists through a preprocessor directive (WITH_IMAGE) defined in config.h.in.; - A simple example passing an image loaded from an ImageContainer component (thread 1) to an ImageViewer component (thread 2), to display the image in the GUI, is added.; - An issue with OpenGL in the draw() function in the Kinect component in the image plugin has also been fixed, by using the SOFA_NO_OPENGL directive (in the CMakeLists and in Kinect.h). Indeed, with the lib FREENECT detected, the OpenGL functions in draw() may not be compiled given the OpenGL support of SOFA. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:93,plugin,plugin,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,4,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"This PR https://github.com/sofa-framework/sofa/pull/4935 adds a unit test showing that the inertia matrix in rigids is not working properly. After rotation of the rigid, the inertia matrix is not rotated accordingly. . You can try a 'hand-on' example with the following : . ```py; #Required import for python; import Sofa; import SofaRuntime; from Sofa import SofaLinearSolver; import numpy as np. # Function called when the scene graph is being created; def createScene(root):. root.gravity=[0,0,0]. root.addObject('VisualStyle', displayFlags=""showBehaviorModels showForceFields""). root.addObject(""RequiredPlugin"", pluginName=['Sofa.Component.Mass',; 'Sofa.Component.StateContainer',; 'Sofa.Component.Topology.Container.Grid',; 'Sofa.Component.Visual'; ]). root.addObject('DefaultAnimationLoop'); root.addObject('DefaultVisualManagerLoop'). root.addObject('RequiredPlugin', name='Sofa.Component.ODESolver.Backward'); root.addObject('RequiredPlugin', name='Sofa.Component.LinearSolver.Direct'); root.addObject('RequiredPlugin', name='Sofa.Component.Engine.Select'); root.addObject('RequiredPlugin', name='Sofa.Component.Constraint.Projective'); root.addObject('RequiredPlugin', name='Sofa.Component.SolidMechanics.FEM.Elastic'). root.addObject(RotatorController('RotatorController', name='matrixAccessor', root=root)). totalMass = 300; x_side = 0.15; y_side = 0.15; z_side = 0.7; volume = x_side*y_side*z_side; inertiaMatrix = [(y_side**2 + z_side**2)/12, 0.0, 0.0, 0.0, (x_side**2 + z_side**2)/12, 0.0, 0.0, 0.0, (x_side**2 + y_side**2)/12]. print([totalMass, volume, inertiaMatrix[:]]). root.addObject('EulerImplicitSolver', rayleighStiffness=""0.0"", rayleighMass=""0.0""); root.addObject('SparseLDLSolver', applyPermutation=""false"", template=""CompressedRowSparseMatrixd""). aligned = root.addChild(""Aligned""). aligned.addObject('MechanicalObject', template='Rigid3', position=[0, 0, 0, 0, 0, 0, 1], showObject=True,; showObjectScale=0.1); aligned.addObject('UniformMass', name=""mass"", vertexMass=[total",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4936:616,plugin,pluginName,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4936,1,['plugin'],['pluginName']
Modifiability,"This PR improves the message about missing required plugins for python users. Before it was printing lines to cut and paste in the scene (which is really nice!), but only for xml users. Now I propose to check the scene's extension and adapt the message. Here's an example for python:. ![image](https://user-images.githubusercontent.com/12150715/173034896-f7547d53-6a99-475a-892f-b481709ed0c4.png); . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033:52,plugin,plugins,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033,2,"['adapt', 'plugin']","['adapt', 'plugins']"
Modifiability,This PR include PR #1508 and replace last use of Qwt in QGraphDataWidget by qtCharts; Remove all cmake config of Qwt and remove the internal library. should fix #1496 or make things worst!. ![graph_cg](https://user-images.githubusercontent.com/21199245/94787278-63f5ca00-03d2-11eb-8fca-80bfcd40ba29.JPG); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1512:103,config,config,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1512,1,['config'],['config']
Modifiability,"This PR introduces CMake configurations for SOFA activating and deactivating sub-parts of the project given the SOFA_CONFIGURATION string : CORE/STANDARD/FULL. . The configuration can be forced using `SOFA_FORCE_CONFIGURATION` otherwise the configuration can still be tweaked using CMake option command line. . To apply those configuration I've made two main modification depending on what needed to be activated :; - For options : I've added a CMake macro `sofa_configuration_dependent_option` that allows to specify the scope of the option and force it when needed.; - For plugins : I've modified the sofa_add_subdirectory adding the possibility to specify a `CONFIGURATION` type enabling or disabling the plugin by default depending on the config type and forcing the activation when needed. These configurations have been defined regarding the last STC discussion. . PS: This PR also enables to build Sofa.GUI without Qt. ; PPS: This PR also deactivates the legacy headers by default now; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:25,config,configurations,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,9,"['CONFIG', 'config', 'plugin']","['CONFIGURATION', 'config', 'configuration', 'configurations', 'plugin', 'plugins']"
Modifiability,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4580:457,rewrite,rewrite,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580,1,['rewrite'],['rewrite']
Modifiability,"This PR introduces collision layers, a collision filtering algorithm similar to the one used in [Unity's collsion pipeline](https://docs.unity3d.com/Manual/LayerBasedCollision.html). The overall idea is to omit collision detection for models that are in different layers. This way, each layer can be used for different functionality, e.g. cutting simulation.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4219:29,layers,layers,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219,2,['layers'],['layers']
Modifiability,"This PR is a step-by-step version of the experiment done in https://github.com/sofa-framework/sofa/pull/1552. Currently this PR shouldn't breaking too much, the CI will tells us. Two test are failing...but this is on purpose to keep a track the breaking parts. ; The failure results from the unification of the naming schemes. ; Fixing the tests is easy, just replace the old string with the new one (int->i).; Nevertheless I suggest to fix that when whole refactoring will be over. Compared to #1552 ; - In this PR I'm re-organizing the existing Sofa code without touching its logic. The files in typeinfo/models/* are cut & past from DataTypeInfo.h. The files in typeinfo/TypeInfo_XXX.h are the DataTypeInfo<> specialization that also come from DataTypeInfo.h; - Some breaking changed are introduced to unify the naming scheme. The 'short' naming scheme is following the standard for python.array and was very close to what we already have in Sofa. . - In this PR I don't use at all the TypeInfoRegistry (expect in the test part), this is on purpose so a future PR will be able to emphasize the change on the Sofa code base (in Data.h). ; - In this PR I don't register typeinfo the registry (because it is not used yet), but I added the 'empty' files for that...it is in typeinfo/TypeInfo_xxxxx.cpp ; ; What will be done in a future PR:; - 1. fill the registry with types we are using and replace the use of VirtualTypeInfo<T>::get() in Data.h by TypeInfoRegistry::Get(T).; - 2. remove step by step the static type info and there related #includes files. ; - 3. rename all the method/enum in the static & dynamic system to unify with official naming convention. ; a. static function must start with an UpperCase; b. function returning boolean must start with a verb like IsValidTypeInfo() instead of ValidTypeInfo() ; c. add a getName()/GetName() to replace name().; - 4. replace the enum involved in the static type info system with constexpr. . EDIT: To satisfy popular demand here is more or less",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605:457,refactor,refactoring,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605,1,['refactor'],['refactoring']
Modifiability,"This PR is big but should finally clean all licenses in SOFA. Here is what I did:; - Fix the licenseUpdater script; - Fix wrong or missing LGPL headers in modules; - Fix wrong or missing LGPL headers in SofaKernel; **WARNING**: I found a **contaminating paste of GPL code** in LCPcalc.cpp:501 (lcp_lexicolemke function). Since I didn't found any usage of this function in SOFA (including plugins), **I removed it**. ; Please **tell me if this is OK**. Otherwise, we will have to discuss about GPL contamination.; - Fix wrong or missing GPL headers in applications/projects; - ~~Fix wrong or missing LGPL headers in applications/plugins~~ (commits removed); - ~~Fix wrong or missing GPL headers in applications/plugins: OptiTrackNatNet, SofaPML and SofaVRPNClient~~ (commits removed); - ~~Fix wrong license in SofaHAPI/initSofaHAPI:58 (should be LGPL)~~ (commits removed); - Optimize organization of LICENSE files in SOFA. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139:388,plugin,plugins,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139,3,['plugin'],['plugins']
Modifiability,"This PR is certainly the biggest contribution from InSimo merge sprint. ; It will be further discussed during STC#3. ## issofa_multithreading. ### New features; - Add logGraphUpdates / logDataUpdates global variable in objectmodel to be able to debug multi-threading issue (not declared in headers, temporary until a better design is proposed); - Add a flag d_threadsafevisitor in solvers to disable writing in mechanicalstates of InteractionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change B",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:207,variab,variable,207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['variab'],['variable']
Modifiability,"This PR is en enhancement of the AdvancedTimer. We have added the possibility to get two different JSON ouputs. The first one represent all informations without deep limitation and the other is easier to use but does not represent all the componants tree of the simulation. You can now use the timer in C++ and in python, change dynamically the output type of each timer separately and use the output of the AdvancedTimer to create graphs and/or compare datas from two different scene timers. You can find an exemple of JSON output here : [JSON_example.txt](https://github.com/sofa-framework/sofa/files/1200444/JSON_example.txt); And an exemple of Light JSON output here : [LJSON_example.txt](https://github.com/sofa-framework/sofa/files/1200439/LJSON_example.txt). This work was done with the help of @untereiner and @chpaulus. A documentation will come at the end of my internship. suggested tag : enhancement; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360:14,enhance,enhancement,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360,2,['enhance'],['enhancement']
Modifiability,This PR is here to support Issue #388 . This is the beginning of a work on cleaning and modularizing the; SofaVolumetricData.; The module is splitted in two Plugins.; - SofaDistanceGrid; - SofaImplicitField. A third plugin act as a transitional package SofaVolumetricData guiding; other developpers on the change they have to do in order to have their; code compiling again. CHANGELOG.txt:; - SofaVolumetricData was strongly refactored and splitted in two plugins SofaDistanceGrid and SofaImplicitField. Please report to sofa-dev any broken behavior. A transitional plugin SofaVolumetricData is provided for one year. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389:157,Plugin,Plugins,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389,5,"['Plugin', 'plugin', 'refactor']","['Plugins', 'plugin', 'plugins', 'refactored']"
Modifiability,"This PR is the continuation of the refactoring of Link. . Currently there is two static function to check path that are fully implemented in Link.h. The drawback of doing is that this requires:; - more #include are needed because of the full function definition.; - the #includes propagate in all the files that includes Link.h (so nearly everywhere); - as the function are implemented on templated classes this also cause a a lot of code generation (one for each template instance). . The new implementation move the implmentation out of the .h and put that into PathResolver.h. ; Bacward compatibility is implemented and flagged as deprecated. This PR also includes #1714 (to validate that the CheckPath features are still working as they were doing in the past).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1717:35,refactor,refactoring,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1717,1,['refactor'],['refactoring']
Modifiability,"This PR is the following work on Geomagic started in PR #1366 (which is included in this one). This PR:; - Totally rewrite the GeomagicDriver init. Now, the tool is directly well placed before simulation start and doesn't need 2 or 3 simulation step to be well init.; => fix #996 . - HD (openHaptics) scheduler communication has been cleaned and fired msg_error with HD error code and description in case of problems.; => fix the possibility to handle several devices. - Clean a lot of old code not anymore used. Like the denavit matrix computation as OpenHaptics is doing it internally. ; => As a consequence, 5 or 6 Data have been removed: dh_XX; - Others changes like variable names replaced to use ""device"" or ""haptic"" instead of ""omni"". And add Doxygen documentation. - Add a component GeomagicEmulator to be able to virtually recreate device motion and interaction. See #1371; => This is almost working.. just need to do some inverse kinematics to compute the good tools transform matrix from the set of arm angles. ... I beg for help here. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1378:115,rewrite,rewrite,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1378,2,"['rewrite', 'variab']","['rewrite', 'variable']"
Modifiability,"This PR just reorder the files inside the CMakeLists but it would be a good starting point to discuss:; - how we want to reorder files in the plugin SofaCUDA. For the moment they are all in sofa/gpu/cuda/ in a big mess.; - refresh the CMakeLists for new CUDA support. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2534:142,plugin,plugin,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2534,1,['plugin'],['plugin']
Modifiability,"This PR kind of fixes #316 ; Concerning Multithreading plugin, it still would be better to get rid of Boost dependency as stated by @fjourdes in #316. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/359:55,plugin,plugin,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/359,1,['plugin'],['plugin']
Modifiability,"This PR links PythonLibs 2.7 to SofaPython ""the proper way"":. Until now, a target was created within SofaPython, in order to expose PythonLibs' leaders & libraries to linked projects. This led to issues when trying to link an external project to SofaPython, since the targets were not properly installed (see #888). Since there's not reason to create a separated target for PythonLibs anyway, I removed it, and simply linked PythonLibs as you would do for any other lib. It should not cause any issue to plugins using SofaPython, since PythonLibs' headers / lib are exposed publicly through the SofaPython target anyway. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/891:504,plugin,plugins,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/891,1,['plugin'],['plugins']
Modifiability,"This PR mainly changes SofaMacros.cmake to permit external (on another repository) projects/plugins to be automatically fetched, updated and added to SOFA. Important: this work will permit to include SofaQtQuick GUI as an external project :wink: . This is a modified version of @fredroy branch [setup_external_plugin](https://github.com/fredroy/sofa/tree/setup_external_plugin). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/649:92,plugin,plugins,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/649,1,['plugin'],['plugins']
Modifiability,"This PR makes it easier & more reliable for plugins / external projects to find paths to the ""examples/"" and the ""share/"" folders in both the build directory and install directory. The current system was filling a file (sofa.ini) for this single purpose, that GUIManager was then parsing to retrieve those paths. if another project (tests for instance) would want to retrieve those paths, they would have to first locate this sofa.ini file (which can be very tricky if not part of the SOFA project tree), parse it and add it to the DataRepository. Now, preprocessor defines holds the paths and you just have to add it to the DataRepository as such:; sofa::helper::system::DataRepository.addFirstPath(SOFA_SHARE_DIR); sofa::helper::system::DataRepository.addFirstPath(SOFA_EXAMPLES_DIR). In both cases, the paths are *absolute* which is great (and what I needed) when building an external project, but generating distributable binaries with absolute paths will not work out well...; I realise this PR is not mergeable until this issue is resolved, but don't know how to change that.; With relative paths, finding the install directory from external projects is impossible, and with absolute paths, redistribution of binaries is not feasible. . Looking fwd to your inputs!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/651:44,plugin,plugins,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/651,1,['plugin'],['plugins']
Modifiability,"This PR provides support for aliasing Eigen sparse matrices (classes derived from `EigenBaseSparseMatrix`) through scipy sparse matrices. The scipy matrix *aliases* the eigen matrix, so that any modification will reflect on both sides provided the sparsity pattern does not change (on either side). A python context manager is provided to commit modifications back, should the sparsity pattern change, as shown in the example below. The binding is somewhat unconventional as it uses `ctypes` for simplicity. Perhaps a cleaner version could be made using regular bindings + passing Eigen matrix pointers through python capsules if someone is motivated. # Example; ```python; from SofaPython import sparse; import numpy as np. import Sofa; Sofa.loadPlugin('Flexible'). def createScene(node):; template = 'Affine'. dofs = node.createObject('MechanicalObject', template = template, size = 1); dofs.init(); ; mass = node.createObject('AffineMass', template = template); mass.init(); mass.bwdInit(). ref = np.identity(12); ; with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(). m[10, 10] = 14; ref[10, 10] = 14. # assert our in-place modifications are reflected; with sparse.data_view(mass, 'massMatrix') as mm:; assert (mm == ref).all(). m[0, 10] = 14; ref[0, 10] = 14. # sparsity change: scipy matrix reallocates, no longer aliases ; with sparse.data_view(mass, 'massMatrix') as mm:; assert not (mm == ref).all(); ; # modification commit happens here. with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(); ```. # Changelog. - Added `DataTypeInfo` for `EigenBaseSparseMatrix` derived classes; - Added a bunch of C functions in `SofaPython/ctypes.cpp` for aliasing logic; - Added a ctypes binding for aliasing + contexts in `SofaPython.sparse`; - Added an example in `SofaPython/examples/sparse.py`; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411:755,Flexible,Flexible,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411,1,['Flexible'],['Flexible']
Modifiability,"This PR removes warnings caused by inconsistent use of the override keyword. While it might not remove all of them (not all plugins have been checked), it allows developers to actually fix the remaining ones rather than ignoring them because it will only generate more warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423:124,plugin,plugins,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423,1,['plugin'],['plugins']
Modifiability,"This branch contains the coding-sprint results & associated fixing commits. . There is the commit for the base branch, the coding sprint commit, post-sprint compilation fixes et test fixing. . CHANGELOG:; - deprecating several components (see the list in deprecatingcomponents.cpp); - the SceneCreator is base on a totally new implementation. The most notable difference is that the ; SceneCreator is no more relying on component from sofa core but use the factory to create the objects. ; The API does not change but if the factory is empty (because no plugin is loaded) then the ; components cannot be not created. So If you used SceneCreator in your test you may need to pre-load the plugin or module as done in ""sofa/SofaKernel/modules/SofaImplicitOdeSolver/SofaImplicitOdeSolver_test/loadPlugins.cpp""; - Fix FileMonitor_test that were randomly failing one MacOS; - Fix DataEngine_test that was failing on Vertex2Frame. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457:554,plugin,plugin,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457,2,['plugin'],['plugin']
Modifiability,"This branch is to prepare the coding sprint. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and 425 . Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/429:943,plugin,plugin,943,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/429,3,"['Plugin', 'plugin', 'refactor']","['Pluginizing', 'plugin', 'refactoring']"
Modifiability,This commit fixes compilation error while adding QtGuiInteraction plugin.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/48:66,plugin,plugin,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/48,1,['plugin'],['plugin']
Modifiability,"This commit fixes compilation of a basic configuration with the additional SOFA_NO_OPENGL flag being set, including compilation of Compliant and SofaPython plugins. Tested for runSofa -gui batch",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/18:41,config,configuration,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/18,2,"['config', 'plugin']","['configuration', 'plugins']"
Modifiability,"This commit fixes issue https://github.com/sofa-framework/sofa/issues/4196#issue-1912081028. ## Issue description:; Upon running ```cmake --install``` on a freshly built Sofa repo, the header files for libQGLViewer are not properly copied to the install/include directory.; First of all the install path is too long and has at least one ${PROJECT_NAME}, i.e. ""QGLViewer"" too much in the path. Also there are header files missing which are relevant for using the provided libQGLViewer in external projects/plugins. This is caused by the now modified ```Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt```:; - The last argument for the ```sofa_create_package_with_targets``` macro adds too many ```/${PROJECT_NAME}``` causing the long install path (line 118); - For some reason the ```sofa_create_package_with_targets``` macro does not copy the ```MOC_HEADER_FILES``` (line 21 ff.). ## Solution:; This PR shortens the output path and copies the contents of ```MOC_HEADER_FILES``` to the ""normal"" ```HEADER_FILES``` which causes them to be copied to the install/include directory. This does not affect the build but ensures that all headers are copied. This was tested on Windows and two different Linux installations. I am aware that simply re-mentioning the MOC_HEADERS may look redundant, but I could not find a solution to convince the ```sofa_create_package_with_targets``` macro to also consider the MOC_HEADERS for copying. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not g",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4198:505,plugin,plugins,505,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4198,1,['plugin'],['plugins']
Modifiability,"This commit rewrites the static ODE solver, implements two additional convergence criteria, improves the documentation of every step found in the ""solve"" method, and adds useful doxygen documentation of the Newton algorithms executed by the component. Up until this commit, the only convergence criteria of the static ODE solver were absolute force residual norms, and absolute (displacement) increment norm. Using absolute values for convergence criteria means that the value set by the user is dependent on the simulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:12,rewrite,rewrites,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,1,['rewrite'],['rewrites']
Modifiability,"This does the issue https://github.com/sofa-framework/sofa/issues/4845. . During this refactoring, I've stumbled upon two issues : ; 1. The first refactoring has some errors, where the new type was compatible with the old one, but not the exact one. So I fixed it. Also Sometimes the old data type was changed but only on the old symbol, which is strange and certainly made the compat layer break is used because often the two types where completely unrelated but `setParent` isn't templated so.... ; 2. This compat layer only works for `Data<T>` every types that inherits from it, will only see the original `Data<T>` methods taken into account in the compact layer. This was the case here for `DataFileName` and all `TopologicalData`. . I've decided to adopt two different strategy : ; 1. For `DataFileName` I didn't put my component and still usef the 'setParent' strategy. This is because, a priori, we won't chage a filename data during execution, this is often a given parameter, but we often use methods specific to `DataFileName`. ; 2. For the topological one, usually topological mechanisms are used in very specific classes to handle topological changes. But in a user perspective, it is often used as a classical `Data<vector<Index>>`. So What I did is use `RenamedData` on those, allowing the compat on the `Data<T>` level, but not for the topological methods which are not working anymore on the old symbol (and will create a compilation error if used)... ; ; To make it cleaner we might need to create new `RenamedData` class for all classes inheriting from `Data<T>`. Which is not the purpose of this PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4927:86,refactor,refactoring,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4927,3,"['inherit', 'refactor']","['inherits', 'refactoring']"
Modifiability,"This fixes a segmentation fault I had with the SofaPython3 where the valid gui name was a python string variable. Since the GUI manager was storing a raw pointer to it, and since the python variable was later destroyed, the GUI manager was seg faulting when accessing the pointer. This PR simply creates a copy of the string instead of storing a raw pointer to it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1108:104,variab,variable,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1108,2,['variab'],['variable']
Modifiability,This fixes the problem of closing runSofa while window like pluginManager or VisitorWindow being open and not killed when main application stop. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1030:60,plugin,pluginManager,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1030,1,['plugin'],['pluginManager']
Modifiability,"This helps to configure which branch to checkout when working with embedded external plugins (also for release generation). This parameter is mandatory for an `EXTERNAL` sub directory, because default value are misleading... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4448:14,config,configure,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448,2,"['config', 'plugin']","['configure', 'plugins']"
Modifiability,"This is a (big) attempt to clean the dependencies management in SOFA. ## Better understand SOFA dependencies; Here is a summary: https://docs.google.com/spreadsheets/d/1dxP7Rsyl1oCr0lfTwQESeeZQTt315CIFih5QpJp5OZY/edit?usp=sharing. ## Clean dependency management in CMakeLists; - SofaFramework; - Moved to SofaHelper: Boost, OpenGL, GLEW, GTest, Eigen, JSON, FFMPEG_exec ; - Removed (not needed by any SofaFramework module): TinyXML, ZLIB ; - SofaMisc; - Added to SofaMiscTopology: ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:824,Plugin,Plugins,824,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,2,"['Flexible', 'Plugin']","['Flexible', 'Plugins']"
Modifiability,This is a basic fix when compiling sofa with Visual Studio 2015 and using the QWT plugin; last() is replaced by back() for deque. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/935:82,plugin,plugin,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/935,1,['plugin'],['plugin']
Modifiability,"This is a small correction to fix the compilation of the Sensable plugin. Also, any idea why we keep the OmniDriver when there is a NewOmniDriver available?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/22:66,plugin,plugin,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/22,1,['plugin'],['plugin']
Modifiability,This is a subset of PR #1492 which aims at merging changes from old branch collodi.; This one only concerns some change done in Compliant plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1557:138,plugin,plugin,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1557,1,['plugin'],['plugin']
Modifiability,"This is a tentative to refactor `TetrahedronFEMForceField` for better readability. All the FEM methods have been dispatched into dedicated files. The methods are now classes sharing the same interface (polymorphism), called by the component. Advantages:; - `TetrahedronFEMForceField` is smaller; - `TetrahedronFEMForceField` had many similar codes (often identical). This is now avoided as all common code are in the base classes.; - It is easier to read the differences between the different FEM methods.; - We could imagine having a factory of FEM methods for `TetrahedronFEMForceField`. Then, the component could be extended in plugins by adding more methods into the factory. To do:. - [ ] Clean; - [ ] Move some class members from `TetrahedronFEMForceField` to `TetrahedronFEMForceFieldImpl`; - [ ] Restore initial performances; - [ ] Fix broken features such as drawing rotations; - [ ] If everyone agrees, remove the assembled methods. It adds complexity while the resulted matrix is not used.; - [ ] Adapt (if necessary) the derived classes (multithreading, CUDA etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:23,refactor,refactor,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,5,"['Adapt', 'extend', 'plugin', 'polymorphi', 'refactor']","['Adapt', 'extended', 'plugins', 'polymorphism', 'refactor']"
Modifiability,"This is a test to use Callbacks instead of inheriting from ```TopologyHandler```. - Callback have been added inside ```TopologyDat``` a to define specific method when creating/destroying element (call by remove/add). See ```TriangularFEMForceField``` for an example; - Map of Callback has been added inside TopologyHandler to set specific callback depending on the topology event. See ```TriangularBendingSprings``` as an example which handle Edge but also Triangle removing/adding. To discuss if this is better than inheriting from ```TopologyHandler```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2036:43,inherit,inheriting,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2036,2,['inherit'],['inheriting']
Modifiability,"This is a variation of the proposal done by @fjourdes in #455 where I allow me a bit more refactoring. . Here is what the PR does:; - implement basic test class in sofa/helper/testing/ BaseTest & NumericTest so that all framework tests can use them. ; - in SofaSimulationGraph/testing add a BaseSimulationTest class that implement facilities for tests that needs scene manipulation & loading. ; - udpates SofaTest to use the previously defined classes but still behaving as they used to in the past. ; - updates the framework_test to use BaseTest or NumericTest in place of Sofa_test or ::testing; - moves the tests in framework to framework_extra when they are manipulating a simulation (thus requires BaseSimulationTest instead of BaseTest); - updates the tests in simulation_test so that they don't use SofaTest anymore. ; - moves SimpleApi from SceneCreator to SofaSimulationGraph & fix a bug.; - creates a plugin in a the application/package directory so that in our tests we can load all the common sofa component with a single RequirePlugin(""SofaAllCommonComponents""). The consequences are:; - SofaTest is no more needed in framework & simulation ; - we can now progressively make the other tests to rely on BaseTest, BaseSimulation and SimpleAPI that are dependency free instead of SofaTest/SceneCreator. . Feel free to provide feedback/comment. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:90,refactor,refactoring,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,2,"['plugin', 'refactor']","['plugin', 'refactoring']"
Modifiability,"This is a way to explicit the narrowing conversions in SOFA. Instead of using the classic `static_cast`, this function can check if the value changed after the cast. It can happen in case of narrowing conversion, when the target type is smaller than the source type.; Since the check must be performed at run-time (affects the performances), it is enabled only in DEBUG mode. The idea is to use this cast everywhere the compiler warns about possible data loss and it's not possible to avoid a narrow conversion (e.g. by adapting both target and source types). An example is provided in this PR in `MeshGmsh`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2590:520,adapt,adapting,520,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2590,1,['adapt'],['adapting']
Modifiability,This is an attempt to refactor from PR #332 to make it non breaking. . No need for review now this is in WIP. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/596:22,refactor,refactor,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/596,1,['refactor'],['refactor']
Modifiability,"This is connected to the PR #771 about having a python 3.x version of SofaPython, refactor it and rewrite pybind11. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/808:82,refactor,refactor,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/808,2,"['refactor', 'rewrite']","['refactor', 'rewrite']"
Modifiability,"This is required by the plugin manager when writing and reading in an ini file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2948:24,plugin,plugin,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2948,1,['plugin'],['plugin']
Modifiability,"This is the first PR of a long series concerning ISSofa (InSimo) commits merge.; This branch has to be merged first because it is the base branch of all further integrations.; It contains mostly SofaPython commits and also some CI and environment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit te",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:685,extend,extended,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,1,['extend'],['extended']
Modifiability,"This is the return of PR https://github.com/sofa-framework/sofa/pull/106 taking into account all the feedback and discussion in https://github.com/sofa-framework/sofa/issues/179. This PR contains: ; - a PerComponentLoggingMessageHandler to stores the messages in components in a much cleaner way compared to the existing code in Sofa.; - the old history code is removed but a compatibility layer on top of the new one is provided to ; provide backward compatibility (eg in third party code like qtSofaQuick). ; - the runSofa GUI is slighly updated and improved to make use of the new component. ; - the msg_api is extended to facilitate its use and coherency; - I fixed all around in the code base the mis-usages of printLog eg: if(f_printLog) cout << .... ; - I didn't replaced the f_printLog data field because it would have broken the API too much ; (maybe one day if someone care). Now a bried summary of the new functions in the msg_* API; ```cpp; msg_info() << ""This is a message sended by the this component"" ;; msg_info(other) << ""This is a message sended by the 'other' component"" ;; msg_info(""A String"") << ""This message is not sended by a component"";; ```; Each version also exist in a conditional form eg:; ```cpp ; msg_info_when(!file.valid()) << ""File is not valid"" ; ```. In the previous examples you can also replace 'info' with the type of message you want to emit among:; 'info', 'advice', 'deprecated', 'warning', 'error', 'fatal'. ; ; 'warning', 'error' and 'fatal' and 'deprecated' message cannot be muted with the printLog parameter while 'info','advice',' can. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed.; - [x] is more than 1 week old. **Reviewers will merge only if all th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/190:614,extend,extended,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/190,1,['extend'],['extended']
Modifiability,"This is the second step of removal of Base* inclusion in Node.h ; This is made possible by all the PR that layed out the fwd stuff and Link refactoring. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1765:140,refactor,refactoring,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1765,1,['refactor'],['refactoring']
Modifiability,"This is the the third step of my LockOut refactoring effort for Sofa. In PR#1283 we have refactored the reflection system. We can now clean the DDGNode to cut the un-needed dependencies. ; DDGNode needed to be part of reflection system because it was storing its inputs and ouputs with Links. It is unclear what the link data structure was needed for and storing the input and output with a more classical data structure (a stable_vector) remove the needs to have DDNode be part of the reflection system...so remove a lot of un-needed code. . Exemple of needed but in face un-needed code that are now removed:; ```cpp; /// This method is needed by DDGNode; const std::string& getName() const override; {; static const std::string emptyName ="""";; return emptyName;; }; /// This method is needed by DDGNode; objectmodel::Base* getOwner() const override { return nullptr; }; /// This method is needed by DDGNode; objectmodel::BaseData* getData() const override { return nullptr; }; ```; ; Some code was added in BaseData. This is because these code was in-herited from DDGNode and are now not provided anymore. The code cannot be removed because BaseData is still used in Links and thus, still required to implement the reflection system...removing that is for an incoming PR. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372:41,refactor,refactoring,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372,2,['refactor'],"['refactored', 'refactoring']"
Modifiability,"This is the work on which was based the STC#4 coding sprint.; It has to be merged to clearly differentiate deprecation and pluginization works afterwards. It is a reopening of #429 (sort of).; I started from https://github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:123,plugin,pluginization,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,1,['plugin'],['pluginization']
Modifiability,"This is to fix SOFA configuration without Qt; Not 100% sure of the change inside the cmake.in. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:20,config,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,1,['config'],['configuration']
Modifiability,This issue is following a dev-meeting discussion about putting much more of the sofa components into plugins. . This issue is to continue the discussion and keep a trace.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/128:101,plugin,plugins,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/128,1,['plugin'],['plugins']
Modifiability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. The image plugin supports the python plugin, but does not require it. However, when linking the image plugin into an external project by using the install path of sofa, the image plugin lists the python plugin as a required dependency. CMake will then return the following error:. ```; CMake Error at CMakeLists.txt:50 (find_package):; Found package configuration file:. /.../sofa/build/install/lib/cmake/image/imageConfig.cmake. but it set image_FOUND to FALSE so package ""image"" is considered to be NOT; FOUND. Reason given by package:. The following imported targets are referenced, but are missing: SofaPython. -- Configuring incomplete, errors occurred!; ```. To reproduce the bug; 1. Compile SOFA with the image plugin activated, but without python plugin; 2. Lauch cmake on an external project and add the image plugin as a dependency; `find_package(image REQUIRED)`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/135:117,plugin,plugin-with-dependancy-to-skeleton-h-does-not-compile,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/135,11,"['Config', 'config', 'plugin']","['Configuring', 'configuration', 'plugin', 'plugin-with-dependancy-to-skeleton-h-does-not-compile']"
Modifiability,"This issue was first discovered by @rosaliepl : https://www.sofa-framework.org/community/forum/topic/error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile/#post-8397. When installing SOFA's image plugin (ex.: make install), the image plugin installation does not preserve the file's hierarchy which will failed the compilation of any external project that includes the SOFACImg.h file. `/.../sofa/build/install/include/CImg/CImg.h:9341:21: fatal error: plugins/skeleton.h: No such file or directory`. If we look in the installation folder (sofa/build/install), all the required headers are in include/CImg instead of include/CImg/plugins which will then failed the compilation. To reproduce the bug. 1. Compile and install SOFA with the image plugin activated; 2. Create an external project with the image plugin as a requirement, and add the following line in any of the source file: `#include <CImg/SOFACImg.h>`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/136:117,plugin,plugin-with-dependancy-to-skeleton-h-does-not-compile,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/136,7,['plugin'],"['plugin', 'plugin-with-dependancy-to-skeleton-h-does-not-compile', 'plugins']"
Modifiability,"This line is the origin of our problem: https://github.com/sofa-framework/sofa/blob/9c85b17b55f4cd1a14927090754004aaba51b802/SofaKernel/framework/sofa/helper/system/PluginManager.cpp#L103; This line was creating entries in m_pluginMap because pluginPath is not always a path.; It is not a path when we are reading ""plugin_list.conf.default"" file to auto-load plugins at startup. This PR adds getPlugin method to avoid future operator[] mishandlings. It gets a loaded plugin by paths OR names (even if the map is based on paths). Conclusion: **`operator[]` on maps should be globally avoided for read access**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:165,Plugin,PluginManager,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,4,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'pluginPath', 'plugins']"
Modifiability,This member was an error prone copy of `PluginRepository::vpath`.; PluginManager is now always in sync with PluginRepository. AddPluginRepository component has no effect without this change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/947:40,Plugin,PluginRepository,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/947,3,['Plugin'],"['PluginManager', 'PluginRepository']"
Modifiability,"This package is needed by plugins when building tests out-of-tree. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2511:26,plugin,plugins,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2511,1,['plugin'],['plugins']
Modifiability,"This part of Sofa.GUI (main codebase):; - is an option in Sofa.GUI (strongly non-recommended in Sofa nowadays); - need X11 libs (so being deprecated with the arrival of Wayland); - almost 99.9% restricted to Linux due to X11; - has replacement (https://github.com/jnbrunet/SofaOffscreenCamera among others); - is not compiling 😂. So IMO it was time to make it a plugin (as in, being in `applications/plugins`); Due to all recent implemented mechanisms, it was quite straight-forward and almost as easy as simply cut-pasting into the new folder. IMO 2, I would even directly put it into an external fetchable plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4928:362,plugin,plugin,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4928,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"This plugin allows us to load images using CImg API. For now this plugin is located in applications/plugins of Sofa, and does not supersede ImageQt/ImagePNG/ImageBMP. Tests and a simple scene to test all the supported formats are provided. An other pull-request will be done to remove ImageQt/ImagePNG/ImageBMP and their posssible dependencies in SofaKernel (e.g libpng), following further discussions. Linked to issue #51 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:5,plugin,plugin,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"This pull request aims at making the gravity clearly appearing in object nodes as a GravityForceField.; Old way to define gravity still works and is not deprecated. Main changes:; - By implementing this, the Mass is not inheriting from ForceField anymore.; - The optional mechanism of a separate gravity and the **Gravity** class are also deprecated.; - Default gravity is now 0 (therefore some scenes might fail and need an update). The GravityForceField can:; - either be manually added by the user in the node; - or the gravity can still be globally defined in the root node which will create the automatic creation of a GravityForceField for each mass in the graph. Fix: #2683. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/305]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/56]; [ci-depends-on https://github.com/sofa-framework/ci/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988:220,inherit,inheriting,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988,1,['inherit'],['inheriting']
Modifiability,"This pull request enhances the Operation::createPerformer function to provide more detailed error messages when it fails to create an InteractionPerformer. The function now includes precise diagnostic messages that indicates where the failure occurred, improving the ease of debugging and maintaining the code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4880:18,enhance,enhances,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4880,1,['enhance'],['enhances']
Modifiability,This pull request removes classes implementing High Order simplicial elements from SOFA.; Those classes have been moved to plugin sofaFramework/ plugin.HighOrder; Updates include . - removing topological classes for High order triangulation and tetrahedral meshes; - removing tests associated with topological classes; - removing topological and mechanical mapping between regular and highorder meshes; - update of MeshMassMatrix by removing code to compute mass of high order elements. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222:123,plugin,plugin,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222,2,['plugin'],['plugin']
Modifiability,This should fix CMake errors like `file cannot create directory: C:/softwares/sofa-soft-build/$C:/softwares/sofa-soft-install/plugins/SofaMiscCollision/lib` on Windows. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1154:126,plugin,plugins,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1154,1,['plugin'],['plugins']
Modifiability,This should fix failing scene tests due to issofa_plugin merge ; Failures were due to wrong `plugin_list.conf` path implying no plugin loading. Added some output to understand better were this list is loaded from (especially in case of failure). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502:128,plugin,plugin,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502,1,['plugin'],['plugin']
Modifiability,"This tests may be merged before refactoring otherwise it is harder to keep track of API changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1714:32,refactor,refactoring,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1714,1,['refactor'],['refactoring']
Modifiability,"This variable can be confused with another with the same name, also with; internal linkage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1956:5,variab,variable,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956,1,['variab'],['variable']
Modifiability,"This was introduced by e33ff21e75356e6967509cc0822d72c74f2d0247 ; So in order to have the ""_d"" debug postfix in your binary, you must use the `sofa_add_plugin` macro. ; I do not use this macro, and I did not mind its existence because I thought it was only related to have a pretty presentation of the plugins in the cmake-gui. https://github.com/fjourdes/sofa/blob/insimo_sofabuild/CMakeLists.txt is the main CMakelists.txt I use in my fork. Could be much simpler, because I started it by modifying the CMakeLists.txt fomr master, and also I really spent 5 minutes on it. The list of projects and plugin to build is simply passed through CMake cache variables. However now you are in the case where doing a ; `add_subdirectory(my_plugin_directory)` and ; `sofa_add_plugin(my_plugin_directory)` both works, and ends up giving different names for your binaries regarding of the config you use for building. . I do not mind strategies like https://github.com/fjourdes/sofa/blob/insimo_sofabuild/SofaKernel/SofaCommon/CMakeLists.txt for packages that are a composition of libraries - I think it is an improvement in this particular case - but for plugins that are a single library, all the necessary information should reside on their CMakeLists.txt. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/490:302,plugin,plugins,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/490,5,"['config', 'plugin', 'variab']","['config', 'plugin', 'plugins', 'variables']"
Modifiability,"This was preliminary introduced in SofaGLFW/SofaImgui, where a new GUI is loaded at run-time; Contrary to the batch/qt/headlessrecorder GUIs which are forcefully linked at compile-time through SofaGui, which could depend (or not) on Qt, etc according to the CMake config,. SOFANG works already made all the different GUIs as independent libraries but ultimately the SofaGui was still present because of the fact that runSofa was still relying on this mechanism. Now :; - Qt/Batch/HeadLessRecorder are loadable plugins and register themselves in the GUIManager, if loaded .; - Batch is still forcefully loaded by runSofa ; otherwise it could be possible to run SOFA without any GUI (I am not against having this possibility tho); - SofaGui is officially deprecated 🎇. Remarks: ; - after this PR, I would really like to move HeadlessRecorder in applications/plugins (either that in the ""official"" SOFA trunk) as it is only supported on Linux, needs X libs dev and I dont even know if people really uses it.; - showing help will only show the help for the runSofa options not the ones introduced by the eventual plugins....; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3550:264,config,config,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550,4,"['config', 'plugin']","['config', 'plugins']"
Modifiability,"This was preventing us from making compatibility layers in our plugins (i.e targeting master vs v20.12). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1771:49,layers,layers,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1771,2,"['layers', 'plugin']","['layers', 'plugins']"
Modifiability,"This will contain all the macros/configuration headers needed by all Sofa (config.h, etc); For now, those things are contained are in:; - SofaFramework; - SofaHelper; - Sofa (at the root); - maybe somewhere else ?; ; It will solve the issue raised at #1661",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1667:33,config,configuration,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1667,2,['config'],"['config', 'configuration']"
Modifiability,"This will contain all the matters about testing (things in SofaHelper, gtest, tools/gtestmain) and make things clearer.; And it will be also a first step for a refactoring of all about testing (deprecated SofaTest, etc)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1827:160,refactor,refactoring,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827,1,['refactor'],['refactoring']
Modifiability,"Those macro are needed if you are trying to enhance the gui from your plugin linking with SofaGuiQt. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2555:44,enhance,enhance,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2555,2,"['enhance', 'plugin']","['enhance', 'plugin']"
Modifiability,"Title says all, forgotten lines and mess with the generated variables (dot and underscore) in SofaFrameworkConfig.cmake.in (and Sofa.GLConfig.in); Fix out-of-tree compilation (tested with Py3) which could not find GLEW::GLEW target. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1911:60,variab,variables,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911,1,['variab'],['variables']
Modifiability,To be further discussed with @epernod @fredroy ; Question arose from the code: https://github.com/sofa-framework/BeamAdapter/blob/master/src/BeamAdapter/component/mapping/AdaptiveBeamMapping.h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3473:171,Adapt,AdaptiveBeamMapping,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3473,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,"To be merged **after** https://github.com/sofa-framework/sofa/pull/3928. Close #3001 and implement it again (move of all files made it too complex to pursue). - Deprecation of the DiagonalMass; - Making it as an inherited class from MeshMatrixMass. **TODO (in this PR)**; - [x] add deprecation macros in CPU and GPU codes (`SOFA_DEPRECATED_HEADER`); - [x] ~~Add callback on lumping to warn user~~ (in another PR); - [x] ~~edge implementation to backport in MMM~~ (not meaning ful, see below patch); - [x] rename the *DiagonalMass.scn* example and use MeshMatrixMass; - [x] specific removed-deprecation macros for RigidTypes: specialized class DiagonalMass for Rigid with a `parse()` function warning for user & deprecation for devs; - [x] assess again performances; - direct; - Diagonal-buildMassMatrix = 0.57%; - MeshMM-buildMassMatrix = 0.57%; - iterative; - Diagonal-addMDx = 0.45%; - MeshMM-addMDx = 0.70% -- 0.47% without the if condition for graph plotting; - TORUS Fall scene over 10 000 steps; - DiagonalMass; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.54	 1 	 0.01	 0.12	 0.01	 0 	 0.01	 0.19	.........DM-buildMassMatrix; - MeshMatrixMass lumped; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.44	 1 	 **0.0**	 **0.04**	 0.01	 0 	 0.01	 **0.18**	.........MMM-buildMassMatrix; - [ ] update all scenes ( `<DiagonalMass` :arrow_right: `<MeshMatrixMass lumping=""1""` ). **TODO (after this PR)**; - deprecate XspLoaders (see #4003). **NOTE** ; Rigid cases previously handled by the DiagonalMass are not anymore, therefore breaking.; Regarding the absence of use of xs3 formats for rigid bodies and the starting project coupling Pinocchio which should bring a more robust description/handling of rigid bodies, I would advocate to :; - deprecated associated components (XspLoader, MeshXspLoader and their impact on RigidMapping, SpringFF, VectorSpringFF) ; - take this opportunity to clean and replace OldTutorials coming with it with new ones. _________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912:212,inherit,inherited,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912,1,['inherit'],['inherited']
Modifiability,"To define regions of an object where materials are different, I thought about using sub-topologies, defined using BoxROI. ```xml; <?xml version=""1.0"" ?>; <Node name=""root"" dt=""0.005"" showBoundingTree=""0"" gravity=""0 -9 0"">. <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.AnimationLoop""/> <!-- Needed to use components [FreeMotionAnimationLoop] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Lagrangian.Correction""/> <!-- Needed to use components [LinearSolverConstraintCorrection] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Lagrangian.Solver""/> <!-- Needed to use components [GenericConstraintSolver] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [SparseLDLSolver] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [MeshMatrixMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.HyperElastic""/> <!-- Needed to use components [TetrahedronHyperelasticityFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms,TetrahedronSetTopologyContainer,TetrahedronSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Hexa2TetraTopologicalMapping] -",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4706:235,plugin,plugins,235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4706,1,['plugin'],['plugins']
Modifiability,"To experiment a new handling of sparse matrices under mappings in our plugin, a few changes are needed in the core of SOFA.; Main changes:; - Add a new function in MechanicalObject (commit 6a6fd98).; - Refactoring of MatrixDerivId: warning holonomicC() is deprecated --> replaced by constraintMatrix (commit 966f9af).; - Change allocation in createMatrix from a fullMatrix to a sparseMatrix.; Linked to #26 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276:70,plugin,plugin,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276,2,"['Refactor', 'plugin']","['Refactoring', 'plugin']"
Modifiability,To prepare for runSofa2 i feel the need to refactor some aspects. . CHANGELOG:; - ADD a Camera object inheriting from BaseCamera so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement your own 'application specific behavior' by using an external Controller (eg: PythonScriptController).; - ADD a link in BaseCamera to a BackgroundSetting so different camera can have different background. ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object; - Update the caduceus example.; - Light object now have a drawSource so that it is possible to draw the source from without having to change the d_drawSource data field.; ; This PR replace #674 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:43,refactor,refactor,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,2,"['inherit', 'refactor']","['inheriting', 'refactor']"
Modifiability,"To remember, in the core of SOFA the following API is dedicated only to Compliant and Flexible plugins:. - BaseMapping : getJs + updateK + getK; - BarycentricMapping.h : type Eigen sparse matrices defined + instantiation",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1636:86,Flexible,Flexible,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1636,2,"['Flexible', 'plugin']","['Flexible', 'plugins']"
Modifiability,"To reproduce the bug, simply add a `msg_error()` at the first line of `static std::string computeSofaPathPrefix()` (sofa/helper/Utils.cpp) on a mac OSX system. I believe this bug was due to an order mixup of global static initializer since this bug wasn't affecting Linux (not sure about Windows). I would need more time to prove this though. I moved the faulty global static intializer to local static initializer and that fixed the crashes. It may be a good idea in the future to minimize the uses of static objects (singletons, static global variables, etc) since they are pretty hard to debug and can cause behaviors dependent of the compiler used. @guparan could you test this in your PR #635 (by reinserting the msg_error) and make sure that the seg fault is gone?. Fixes #636 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642:545,variab,variables,545,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642,1,['variab'],['variables']
Modifiability,"To reproduce the bug: start runSofa, open Plugin Manager, add a plugin, remove the plugin, segfault.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/6:42,Plugin,Plugin,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/6,3,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"Today we have many different way to compile plugins (all ways : through SOFA in files, through SOFA with EXTERNAL_DIRECTORIES, out-of-SOFA).; It is misleading for users, we have still plugins in the core (making SOFA heavy). A proposal: why not going towards a full **out-of-tree compilation for SOFA plugins** (located in _applications/plugins_) ?. It would enforce us to:; - sort used and supported plugins vs. others; - clean dependencies in CMakeLists; - then we would actually have to change the CI so that these plugins are built with a SOFA docker image. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1285:44,plugin,plugins,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1285,5,['plugin'],['plugins']
Modifiability,"Trying to include the SofaExporter module in an external project (out-of-tree build of a plugin || test) was not functional since include directories were not exposed properly. I took inspiration from CImgPlugin for this PR, which uses CMAKE_CURRENT_SOURCE_DIR to expose the target's include directory.. but I believe this is actually wrong as this corresponds to the path to the sources (`/home/bruno/dev/sofa/modules/SofaExporter/src/` in my case for instance) and not to the installed include directory, (which should be `/home/bruno/dev/sofa/build/install/include/SofaExporter/src/SofaExporter` on my machine). I took a look at other plugins & pluginized modules & they all seem to do this, so Idk if it's a mistake or done on purpose..?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/975:89,plugin,plugin,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/975,3,['plugin'],"['plugin', 'pluginized', 'plugins']"
Modifiability,"Tutorials were not configuring. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3200:19,config,configuring,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3200,1,['config'],['configuring']
Modifiability,"Two change needed by the SofaPython3 plugin. . - In BaseData Some method have two version, one without arguments the other with an ExecParm. In pybind11 we need to differentiate explicitely the two version making the code more complex. As I see no good reason why to keep the two version in Sofa I merged these two into one by using a default param = nullptr. . - I have added a join/split function in the StringUtils class. . - In SimpleAPI I found allowing BaseObjectDescription useful to create object and node. So I added new functions.; _____________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/860:37,plugin,plugin,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/860,1,['plugin'],['plugin']
Modifiability,"Two new menu entry are added in the SceneGraph view to jump to the source file location corresponding to the selected object. This PR is based on #1012 to get the file location. ; By default qtcreator will be used to open the file. ; But this can be changed by editting the config file saved by the QSetting mecanism. . NB: The ""Go To implementation"" really make sense when using STLIB as it allows ; to jump where a prefab is implemented. It would be nice if we could do the same for c++ ; but this is of lesser interest ...because we need to compile sofa to see a change :) . EDIT: small video show how it works ; [![video](http://img.youtube.com/vi/zzOY-Lt0vgM/0.jpg)](http://www.youtube.com/watch?v=zzOY-Lt0vgM); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1013:274,config,config,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1013,1,['config'],['config']
Modifiability,"Two variables with internal linkage were defined with the same symbol, and the same value. Instead, I propose to associate these variable to the classes where they are used. I did not made them global variables because we could imagine having two different values for both classes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1951:4,variab,variables,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951,3,['variab'],"['variable', 'variables']"
Modifiability,"Two variables with the same name in the same scope: declaration hides previous local declaration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2463:4,variab,variables,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2463,1,['variab'],['variables']
Modifiability,"Typo in the name of the variable in an assert, so compiled only in Debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2417:24,variab,variable,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2417,1,['variab'],['variable']
Modifiability,"UCE YOUR PROBLEM HERE >; 1. install anaconda and make virtual environment ; 2. install sofa framework ; 3. define the environment variables ; 4. import Sofa in python. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. Success importing Sofa in python without any error. ---------------------------------------------. ### Environment. **Context**. - System: Mac OS X 14.4.1 (23E224) ; - Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:1309,variab,variable,1309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['variab'],['variable']
Modifiability,"Uber PR. - some instanciations were still refering to Vec3dTypes (instead of Vec3Types); - confusion between double and SReal; - Vector3 used as Vec<3. SReal> (confusion with Matrix3 for example which is effectively Mat<3,3,SReal>...); - MeshMatrixMass mixing MassType and DataTypes::Real; - Fix some double* cast to a float*...; - Fix a rounding error with float in regulargrid (**realllllllly** old bug); - short demo on godbolt: https://godbolt.org/z/no6hss6jr; ; -> massive use of auto and getAccessor(). This PR should be exactly the same if SOFA_FLOATING_POINT_TYPE is set to double (hopefully); ~The only breaking things are in MeshMatrixMass~. actually it should not be. I have ported the code from the standard set of sofa modules/plugins so plugins/tests are likely to fail (with float); CI is using double so it will only test if there is no regression. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2560:740,plugin,plugins,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2560,2,['plugin'],['plugins']
Modifiability,Unable to load plugin when sofa is installed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560:15,plugin,plugin,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560,1,['plugin'],['plugin']
Modifiability,"Uniform size type to be same type as index_type; + move index_type to sofa namespace (in sofa/config.h); (was located in defaulttype before, does not really make sense). So now : ; - index_type is defined as sofa::index_type; - size_type is defined as sofa::size_type ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1515:94,config,config,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1515,1,['config'],['config']
Modifiability,"Unless we are packaging the installation files, remove the automatic installation of external system libraries (glew, boost, etc.). This was messing with out-of-tree plugins compilation as the installed; external libraries were hiding the system's ones. Example of CMake warnings from the out-of-tree plugins:. ```cmake; Cannot generate a safe runtime search path for target MyProject; because files in some directories may conflict with libraries in implicit; directories:. runtime library [libGLEW.so.2.1] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_filesystem.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_program_options.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_thread.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_date_time.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_chrono.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_system.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; runtime library [libboost_atomic.so.1.67.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:; /home/jnbrunet/sources/sofa/build/install/lib; ```. See https://github.com/sofa-framework/sofa/issues/1153 for more details. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test fai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1387:166,plugin,plugins,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1387,2,['plugin'],['plugins']
Modifiability,Unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1754:7,variab,variable,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1754,1,['variab'],['variable']
Modifiability,"Up-to-date: C:/projects/sofa-build/install/lib/SceneCreator.lib; 1>-- Up-to-date: C:/projects/sofa-build/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:1927,plugin,plugins,1927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['plugin'],['plugins']
Modifiability,"Update architecture of plugins examples: doc, PluginExample, Qt template",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1041:23,plugin,plugins,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1041,2,"['Plugin', 'plugin']","['PluginExample', 'plugins']"
Modifiability,Update fetch mechanism for plugins using cmake 3.24,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4604:27,plugin,plugins,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4604,1,['plugin'],['plugins']
Modifiability,Update further to work on the upcoming Optimus plugin:; thanks @guparan for solving the issue !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1498:47,plugin,plugin,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1498,1,['plugin'],['plugin']
Modifiability,"Update the list of plugins to NOT auto-load when executing runSofa from the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3197:19,plugin,plugins,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3197,1,['plugin'],['plugins']
Modifiability,"Using the 21.06 sources from SOFA on Ubuntu, I faced a compilation issue with the CGAL plugin. It appears that the issue is fixed in #2246. Should it be backported in 21.06 release branch @guparan ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2480:87,plugin,plugin,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2480,1,['plugin'],['plugin']
Modifiability,"Using the newly released CMake 3.15, the configuring stage fails with:. CMake Error at SofaKernel/SofaFramework/SofaMacros.cmake:686 (message):; Missing parameter TARGETS.; Call Stack (most recent call first):; applications/plugins/SofaMiscCollision/CMakeLists.txt:82 (sofa_generate_package). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1105:41,config,configuring,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1105,2,"['config', 'plugin']","['configuring', 'plugins']"
Modifiability,"Very basic PR just to let you know that the CGAL plugin is not compatible with latest CGAL.; As is, it compiles with CGAL <= 4.9.1. CI build is unnecessary for this PR.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/510:49,plugin,plugin,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/510,1,['plugin'],['plugin']
Modifiability,Very simple PR to allow Windows loading MultiThreading plugin.; Will fix these errors: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64/550/warnings2Result/category.96784904/. [ci-build][with-scene-tests]; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/507:55,plugin,plugin,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/507,1,['plugin'],['plugin']
Modifiability,"Very useful collection of header-only utilities : https://github.com/nothings/stb. This PR uses **stb_image** and **stb_image_write** to read/write jpeg,png,etc. images directly without any reliance on libpng or libjpeg.; Practically, This PR almost depracates the use of CImgPlugin (at least as an image loader). ; The only thing stb (compared to cimg) is that it cannot load is the TIFF format... It allows us to :; - not depend on any external library anymore (libpng, libjpeg); - not need anymore to load the CimgPlugin to get images in a scene (which was a bit weird...). **stb** licence is either MIT or even public domain (!). Some questions about this PR:; - should we fetch stb at cmake configure time ? IMO no because it would mean we really need an Internet connection to compile the core of SOFA; - should we put all the files from the stb repo ? IMO no, the other files wont be used for sure. That's why the stb dir contains only the two files we want for this PR. <img src=""https://user-images.githubusercontent.com/11028016/146752568-e4f392d5-5ecd-4f32-be92-32f48b53f5ab.PNG"" width=""400"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551:696,config,configure,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551,1,['config'],['configure']
Modifiability,"Very useful variable to have a default `COMPONENT` value for every `install` call :+1:; Also, clean 2 missing `<build-dir>/cmake --> <build-dir>/lib/cmake` for consistency. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2037:12,variab,variable,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2037,1,['variab'],['variable']
Modifiability,"Visitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:2540,inherit,inheritance,2540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,1,['inherit'],['inheritance']
Modifiability,"Visual Studio allows to manager multiple compilation modes for one project. The plugin manager writes a list of loaded plugins in a file `loadedPlugins.ini`. This file stores the absolute paths to the loaded plugins. When switching the compilation mode in VS, this file is still loaded. And it will load plugins which paths point to the previous compilation mode. If you switch from Debug to Release, the file contains the paths to the Debug binaries and the plugin manager will try to load them, whereas the compilation mode is now Release.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2338:80,plugin,plugin,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2338,5,['plugin'],"['plugin', 'plugins']"
Modifiability,"VisualModelImpl inherits from State which allows it to be mapped (with Mappings) .; This State is slightly specialized for Visual thing (contains positions, normals and rest_positions(?) ). It was previously located exclusively in VisualModelImpl.h, this PR renames it and moves it into Sofa.Core.Visual.; Follows the guideline one class -> one (set of) file. Slightly breaking because some includes have been removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3782:16,inherit,inherits,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3782,1,['inherit'],['inherits']
Modifiability,VisualTransform moved from SofaBaseVisual to SofaGeneralVisual. ChangeLog:; - FIX: compilation LeapMotion plugin (issue since v16.12). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/296:106,plugin,plugin,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/296,1,['plugin'],['plugin']
Modifiability,"Voilà. Maybe @epernod a check on the SofaPhysicsSimulation with the various Fore/Background member variables. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5054:99,variab,variables,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5054,1,['variab'],['variables']
Modifiability,"WARNING: this will break SofaPython3. I'm working on it. Before, when 2 nested packages had `RELOCATABLE ""plugins""`, the 2nd was installed in CMAKE_INSTALL_PREFIX/plugins/FirstPackage/plugins/SecondPackage. Now, the RELOCATABLE argument, if relative, will always be treated as CMAKE_INSTALL_PREFIX/<argument>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2603:106,plugin,plugins,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2603,3,['plugin'],['plugins']
Modifiability,"WIP PR.; For now, it disables all python scenes in Flexible and Compliant. IMPORTANT: do not merge until https://github.com/sofa-framework/SofaPython3/tree/fix_or_disable_scene_tests is merged into SofaPython3 and ExternalProject tag is reset to master here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1919:51,Flexible,Flexible,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1919,1,['Flexible'],['Flexible']
Modifiability,We definitely need to get timing and position regression feedback from (at least a few) scene tests. Already existing tools for position regressions:; - applications/plugins/SofaTest/SofaTest_test/Regression_test; - applications/projects/sofaVerification. TODO:; - [x] Choose one tool to update and reactivate; - [ ] Add execution time measure; - [x] Integrate it in CI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/801:166,plugin,plugins,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/801,1,['plugin'],['plugins']
Modifiability,"We got this error many times in the past, and I never had the chance to dig into the issue. There was actually two issues:. 1. SOFA was unable to find some GL extensions on Intel drivers with the Qt viewer while they were supposed to be there (they were correctly found when using the qglviewer); 2. When no extensions at all were found by Glew, SOFA tried to convert a null pointer to a std::string, which created a segmentation fault. This PR fixes both of these issues. It first make sure that the pointer returned by Glew isn't null before converting it to a std::string. It also asks Qt to enable deprecated functions, which are used by SOFA. In addition, I've removed the part of the Qt viewer that was forcing the environment variable `MESA_GL_VERSION_OVERRIDE` on Linux. I've also remove the error when this environment variable wasn't set with Intel driver (which was never the case because we were forcing it...) and added a warning instead (Qt viewer works fine on Intel drivers, maybe this was an old bug?). . Will most probably fix https://github.com/sofa-framework/sofa/issues/1567. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1690:733,variab,variable,733,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1690,2,['variab'],['variable']
Modifiability,We have a lot of components accessing the topology through links.; We should create a TopologyAccessor and add the inheritance to these components.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2504:115,inherit,inheritance,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2504,1,['inherit'],['inheritance']
Modifiability,We need to:; - first locating csparse and newmat in SOFA; - move the dependency back into the appropriate plugins. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1309:106,plugin,plugins,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1309,1,['plugin'],['plugins']
Modifiability,"We noticed using the macro SOFA_UNUSED() from the module SofaKernel/framework/sofa/simulation, the inclusion of the header <sofa/simulation/simulationcore.h> was actually not providing access to the macro. Questions:; what is the default pipeline to include config.h ? i.e. inclusion between config.h, namings of headers (config/module/initmodule.h ?); is the SOFA_UNUSED at the right location ?. @damienmarchal any idea ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/904:258,config,config,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/904,3,['config'],['config']
Modifiability,We should discuss the missing features in the plugin [SofaGLFW](https://github.com/sofa-framework/SofaGLFW/) using ImGUI. ### Missing features. @alxbilger @fredroy do not hesitate to add more items :point_down: ; - [x] mouse interaction; - [x] screenshot / video saving https://github.com/sofa-framework/SofaGLFW/pull/90; - [x] profiler with tracy https://github.com/sofa-framework/SofaGLFW/pull/89; - [ ] editable data; - [x] plugin manager; - [x] Keyboard event,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4200:46,plugin,plugin,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4200,2,['plugin'],['plugin']
Modifiability,"We should improve our packaging process to ease the creation/build of a plugin linked to a SOFA release. Now: CPack (Windows) + Bundle (MacOS) + install archive (Linux); Problems: Not unified, some libs not included (Qt); Future: One unified method for all platforms.; Ideas: Flatpak, CPack, vcpkg; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/690:72,plugin,plugin,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/690,1,['plugin'],['plugin']
Modifiability,We would like to get an Eigen sparse matrix wrapper (e.g. the one from Caribou plugin).; SOFA already contains such wrappers: EigenMatrix and EigenVector. Existing Eigen wrapper are also available in Caribou: it could be copied in SOFA (sofa.linearalgebra) to have this unique wrapper. Would you mind @jnbrunet ?. **TODO**; - What does the existing wrapper today? and What are the differences? → issue ??,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2474:79,plugin,plugin,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2474,1,['plugin'],['plugin']
Modifiability,"When I configure the source sofa/src in cmake, the error is as:; ![Cmake_error](https://user-images.githubusercontent.com/22396672/93750818-b135a700-fc2e-11ea-996d-ac6cf1acb4df.png). CMake Error at CMakeLists.txt:121 (message):; Boost (1.54.0 or higher) is mandatory. Note that Boost autodetection on Windows was removed. Please follow CMake documentation to find Boost on your system. Hint: set BOOST_ROOT to your Boost location. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1494:7,config,configure,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1494,1,['config'],['configure']
Modifiability,"When I try to compile SOFA (on Windows), I observed that apparently some part of the build system (CMake? Or some pre/post-build event) tries to create output folders in the `bin` subfolder of the CMake cache for all the different MSVC build configurations created by Cmake (i.e. Debug, MinSizeRel, Release, RelWithDebInfo), **but instead of creating folders generates some obscure binary files with the same name**. This seems to be ok for the first compilation, where MSVC seems to be faster than the faulty script. E.g. when starting with Debug, I do not see any issues, however after finishing that and trying to compile in Release, MSVC compiler complains that e.g. (same for all other targets). > Error	MSB3191	Unable to create directory ""E:\work\dev\SOFA\sofa\build\bin\Release\"". Cannot create ""E:\work\dev\SOFA\sofa\build\bin\Release"" because a file or directory with the same name already exists.	. until I manually remove this useless extra **""Release"" file** (which was meant to be a folder). ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331:242,config,configurations,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331,1,['config'],['configurations']
Modifiability,"When a plugin is loaded, the ObjectFactory is populated of Components from this plugin. However, when this plugin is ""unloaded"", it was still possible to create a component from the plugin. This PR detects that the ObjectFactory tries to instantiate an object that is from an unloaded plugin.; It is particularly useful when the initialization of the plugin fails (SofaCUDA for example). When the initialization fails, the plugin is unloaded.; A unit test is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722:7,plugin,plugin,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722,7,['plugin'],['plugin']
Modifiability,"When building runsofa (master version 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:91,plugin,plugin,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,1,['plugin'],['plugin']
Modifiability,"When compiling a project/plugin with c++17, it fails due to std::binder used in Sofa and Eigen. This functionality was depreciated in c++11 and was removed in c++17 (lambda expressions are now the cool way to do this). This PR removes the use of std::binder and, as a side effect, brings us closer to be able to compile Sofa with c++ > 11 if we wish to do some modern c++ someday :-) . Small note: The version of Eigen used in Sofa is a little bit old (2015)... Might be a good idea to add this in the Sofa's to do list. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/908:25,plugin,plugin,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/908,1,['plugin'],['plugin']
Modifiability,"When compiling image, you might now have an issue when updating since DiffusionSolver has been made a separate plugin. This PR provides a warning for the users. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1067:111,plugin,plugin,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1067,1,['plugin'],['plugin']
Modifiability,"When doing `make install`, the RPATH of the libraries is set to ""../lib:$ORIGIN/../lib:$$ORIGIN/../lib"", and does not include the path to its relocated dependencies:. ```; $ ./bin/runSofa; ./runSofa: error while loading shared libraries: libSofaValidation.so.1.0: cannot open shared object file: No such file or directory; ```. ```; $ find . -name libSofaValidation.so.1.0; ./plugins/SofaValidation/lib/libSofaValidation.so.1.0; ```. Same thing happen if we link our project to some of SOFA's core library:; ```; $ lddtree my_plugin.so; my_plugin.so; libSofaMisc.so.20.06.99 => /sofa/build/install/lib/../lib/libSofaMisc.so.20.06.99; libSofaMiscEngine.so.20.06.99 => /sofa/build/install/lib/../lib/../lib/libSofaMiscEngine.so.20.06.99; libSofaNonUniformFem.so.1.0 => not found; ```; and again.; ```; $ find . -name libSofaNonUniformFem.so.1.0; ./plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so.1.0; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:376,plugin,plugins,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,2,['plugin'],['plugins']
Modifiability,"When doing `make install`, the installation fails for components SofaGuiQt et QGLViewer because the Qt ""plugins"" directory is not found. A more robust way to do it would be to query the path for each needed plugin (as in http://doc.qt.io/qt-5/cmake-manual.html), but I'm not sure which plugins are needed, or if their installation is really necessary (it is not, on my system). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/794:104,plugin,plugins,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/794,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"When fetching plugins such as **SofaPython3** or **BeamAdapter** directly at CMake configure time, the plugin is well added in the list of _applications/plugins/_ but it create also add a .gitignore file (which is not in the plugin repository).; This .gitignore file has in it:; > ```*``` . thus all new file created in the plugin are ignored. Is it a wanted behavior?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4409:14,plugin,plugins,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409,6,"['config', 'plugin']","['configure', 'plugin', 'plugins']"
Modifiability,When the plugin is activated the file ; XiTrocarInterface.h is missing. I assume this plugin does not compile anymore. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/943:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/943,2,['plugin'],['plugin']
Modifiability,"When the plugin manager searches for a plugin, it will loop through the prefixes defined inside the PluginRepository, and append it the plugin name. If this file exists, it will be directly returned. Else, it will go recursively through each prefixes trying to find the file, which is inefficient and does not follow symbolic links. Especially since the prefixes contain large directories such as ""/usr/lib"". This PR adds two hard coded path to each prefixes which will help the plugin manager find common plugins usually located in _""$SOFA_ROOT/plugins/PLUGIN_NAME/lib/libPLUGIN_NAME.so""_ **just before** doing the recursive search. This should improve the speed for locating common plugins, and moreover allow some symbolic links to external plugins since the recursive search do not follow these links. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1824:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824,9,"['Plugin', 'plugin']","['PluginRepository', 'plugin', 'plugins']"
Modifiability,"When trying to build an external project (in this case, it was the SP3 plugin), cmake isn't able to find zlib. Unless I'm mistaking, SOFA binaries should ship with this library. Collateral damage from the pluginization?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1692:71,plugin,plugin,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1692,2,['plugin'],"['plugin', 'pluginization']"
Modifiability,"While doing #3401 , I noticed that; ```; 11512 ms: std::set<sofa::core::objectmodel::Tag>::insert (688 times, avg 16 ms); ```; insert() from Tagset does not really require to be inlined, so I moved the two inline def into the associated cpp; Then:; ```; 3256 ms: std::set<sofa::core::objectmodel::Tag>::insert (209 times, avg 15 ms); ```; not extraordinary but _ca ne mange pas de pain_. Note that TagSet directly inherits from `std::set<Tag>` which is really not recommended... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3403:414,inherit,inherits,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3403,1,['inherit'],['inherits']
Modifiability,"While there are some pretty nice ideas going on considering the improvement the output of the advanced timer #348, to my knowledge (please correct me if I am wrong!), the component has some shortcomings:; 1. The timing output does not show up when using the batch gui, i.e. when specifying -g batch over the command line. Together with @ggrosshenny, we already took care of this in the work related to #348, a pull request will follow soon.; 2. The advanced timer can not be used at the initialization, i.e. in methods like init and I believe as well the backward init. To resolve the second point, I propose to change the variable computationTimeSampling to an integer (see Main.cpp, line 182). When set at ; - a negative integer c, it does output the timings of the initialization, but at every time step -c; - 0, it only outputs the timings of the initialization; - a positive integer c, it does not output the timings of the initialization and at every time step c. Thus the persons having used the timer before will not have any impact on their potential scripts using the SOFA output.; An implementation already has been started with @ggrosshenny, but it is not clear where an insertion has the less impact and yields the results. @ggrosshenny, could you precise that please?. Has there been any work considering this point?; Do you have any propositions how to address it?. Label propositions: discussion, bug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/357:623,variab,variable,623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/357,1,['variab'],['variable']
Modifiability,"While trying to add new options, I encounter the problem of adding new short argument names with consistency. The thing is, right now you have to design your option by using a short name (a char) and a long name (a char*).; But many options already exist. Finding a non used char which is consistent for an option is quite difficult. By reading existents short names, I assume I'm not the first one encountering this issue. Shouldn't it be better to let the user having the ability of using char* instead of char ? ; Of course short name still have to be ""short"" and we can add rules defining the maximum lenght of a short name, 3 for example. By example : ; ` .option(&colorsStatus, ""col"", ""colors"",""use colors on stdout and stderr (yes, no, auto)""); ` From POV, it is more consistent than : ; ` .option(&colorsStatus,'z',""colors"",""use colors on stdout and stderr (yes, no, auto)""); `. Here is an overview of the function : . ```; /** Declare an optional argument; \param ptr pointer to the variable; \param sho short name; \param lon long name; \param help; */; template<class T> inline; ArgumentParser& option( T* ptr, char sho, const char* lon, const char* help ); {; string sn, ln(lon), h(help); sn += sho;. if( sho!=0 && shortName.find(sho) != shortName.end() ); {; msg_fatal(""ArgumentParser"") << ""name "" << sn << "" already used !"";; exit(EXIT_FAILURE);; }; ....; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/512:992,variab,variable,992,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/512,1,['variab'],['variable']
Modifiability,"While trying to clear the build from compiler-warnings I found these pieces of code in in the metioned files:. ```C++; unsigned int idx = 0;; for( size_t i=0 ; i<size ; ); for( size_t j=0; j<value && i<size ; ++j, ++i ); rigidIndexPerPoint[i] = idx;; ++idx;; ```; (code is at line 280 in the file); The compiler warning is indicating that the `++idx;` statement is not effected by the outer or inner for-loop. As in this case `rigidIndexPerPoint[i] = idx;` is always assigning ""0"" to the `rigidIndexPerPoint[i]` I would purpose either to change change the mentioned statement to `rigidIndexPerPoint[i] = idx++;` or make `idx` a constant variable.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/435:637,variab,variable,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/435,1,['variab'],['variable']
Modifiability,"While trying to understand how forcefields work... I initially noticed that there was a bad handling of cases where `stiffness.size() != indices.size()` in the RestShapeSpringsForceField and tried to improve the overall error management on this component. I ended up doing the following changes:. - Call reinit() in bwdInit; - Using componentState to set the state to invalid when necessary (no stiffness set, out of bounds indices etc & check for component state in addForce / addDForce / addKToMatrix ..); - Improvement of warning messages (IMHO); - refactor code duplication; - remove warnings by changing int -> size_t for BaseMatrix::Index (got carried away here, sorry about that). **### BREAKING because:**. - Change in behavior in specific cases:. 1. empty stiffness vector: **Before:** setting arbitrary stiffness at 100.0 for all indices ; **Now:** msg_error & invalid state. ; 2. stiffness.size() != indices.size(): **Before:** applying stiffness[0] to all indices ; **Now:** ; ```py; if len(stiffness) > len(indices): ; crop(stiffness); else if len(stiffness) == 1:; stiffness.resize(len(indices), stiffness[0]); else if len(stiffness < len(indices):; ```; Generalized to angularStiffness on Rigids. - size_t in methods signature break API compatibility. I wouldn't call this component ""clean"" after those changes though, but it's a start. As stuff still to do to improve, I see:. - Using DataTrackers to call reinit() when necessary; - get rid of bwdInit by using componentState + datatrackers to reinit component; - remove those ugly getContext to retrieve the external mstate used for rest shape, by replacing them with a data or a link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1103:552,refactor,refactor,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1103,1,['refactor'],['refactor']
Modifiability,"With Boost 1.64, at least on Mac, Multithreading build fails with the following message:; ```FAILED: applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o ; /usr/local/bin/ccache clang++ -Qunused-arguments -Wno-deprecated-declarations -DMultiThreading_EXPORTS -Iinclude -I../applications/plugins/MultiThreading/.. -isystem /usr/local/include -I../SofaKernel/SofaBase/../modules -I../SofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:114,plugin,plugins,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,2,['plugin'],['plugins']
Modifiability,"With SofaNG now, the mandatory libs are neither plugin nor the deprecated ""module"" notion,. So while trying to configure SOFA for a minimum build (i.e no plugin) and without the compat layer (so no module), I stumbled in this error which was trying to generate the list of plugins/modules. ; There was no check on the list itself (as the empty modules/plugins could never have been empty before). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3069:48,plugin,plugin,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3069,5,"['config', 'plugin']","['configure', 'plugin', 'plugins']"
Modifiability,With the purpose to override it in a child class in a plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1444:54,plugin,plugin,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1444,1,['plugin'],['plugin']
Modifiability,With this PR you can `find_package(CImgPlugin)` in an other cmake project. Quite useful since this plugin is indeed part of the *core*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/544:99,plugin,plugin,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/544,1,['plugin'],['plugin']
Modifiability,"Work on merging BaseContext and BaseNode should first be addressed since the iterator would need to be able to iterate on both, but they have a different inheritance. To be further discussed in a STC!. _Originally posted by @hugtalbot in https://github.com/sofa-framework/sofa/issues/4334#issuecomment-1864102974_",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4397:154,inherit,inheritance,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4397,1,['inherit'],['inheritance']
Modifiability,Xitact plugin missing file.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/943:7,plugin,plugin,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/943,1,['plugin'],['plugin']
Modifiability,"[ Follow-up of #253 ]. To sum up the ideas:; - create a manifest file @ plugin post-build; - create a configuration system where applications can find the list of plugins to load automatically at startup; - inform the user that if you want to use `<ComponentAFromPluginXXX>`, you need to add the line `<RequiredPlugin pluginName=""PluginXXX"" >`. (Everything started from:; - hard loading of SofaPython in runSofa; - in the future we want to remove ImageBMP/ImagePNG/ImageQt and use ImageCImg from the plugin CimgPlugin, and avoid to always add the RequiredPlugin line in each scene.). The Manifest file will be useful when the components in the Sofa trunk will be dispatched in several plugins (planned in the far future)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281:72,plugin,plugin,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281,7,"['Plugin', 'config', 'plugin']","['PluginXXX', 'configuration', 'plugin', 'pluginName', 'plugins']"
Modifiability,[All] Add GIT_REF option for external plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4448:38,plugin,plugins,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4448,1,['plugin'],['plugins']
Modifiability,[All] Changed default plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322:22,plugin,plugins,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322,1,['plugin'],['plugins']
Modifiability,[All] Display reference name when pulling external plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4507:51,plugin,plugins,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4507,1,['plugin'],['plugins']
Modifiability,[All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1313:42,Plugin,PluginManager,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1313,1,['Plugin'],['PluginManager']
Modifiability,[All] Introduce cmake unified configurations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4766:30,config,configurations,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4766,1,['config'],['configurations']
Modifiability,[All] Plugins finding and loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:6,Plugin,Plugins,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,1,['Plugin'],['Plugins']
Modifiability,[All] Plugins: Deprecate entrypoint getModuleComponentList(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795:6,Plugin,Plugins,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795,1,['Plugin'],['Plugins']
Modifiability,[All] Refactor BaseClass & ClassInfo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1836:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836,1,['Refactor'],['Refactor']
Modifiability,[All] Refactor DataTypeInfo system.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605,1,['Refactor'],['Refactor']
Modifiability,[All] Refactor MatrixLinearSolver (step 1),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2238:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238,1,['Refactor'],['Refactor']
Modifiability,[All] Refactor the DataTypeinfo: v2,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1632:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1632,1,['Refactor'],['Refactor']
Modifiability,"[Anouncement] PSL plugin to write elegant, dynamic & savable SOFA scenes.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/390:18,plugin,plugin,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/390,1,['plugin'],['plugin']
Modifiability,"[BeamAdapter](https://github.com/sofa-framework/beamadapter/) shall now be fetchable from SOFA CMake configuration. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890:101,config,configuration,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890,1,['config'],['configuration']
Modifiability,[Bug] Configure won't run,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752:6,Config,Configure,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752,1,['Config'],['Configure']
Modifiability,[CGALPlugin] Clean and pluginization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308:23,plugin,pluginization,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308,1,['plugin'],['pluginization']
Modifiability,[CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1104:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1104,1,['plugin'],['plugin']
Modifiability,"[CImgPlugin, Flexible, image, CImg] Refactor CImg & CImgPlugin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/562:13,Flexible,Flexible,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/562,2,"['Flexible', 'Refactor']","['Flexible', 'Refactor']"
Modifiability,[CImgPlugin] Add plugin to load images with CImg,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:17,plugin,plugin,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,1,['plugin'],['plugin']
Modifiability,[CImgPlugin] FIX CMakeLists install fail since pluginization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609:47,plugin,pluginization,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609,1,['plugin'],['pluginization']
Modifiability,[CImgPlugin] Less scary config warnings,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/607:24,config,config,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/607,1,['config'],['config']
Modifiability,[CImgPlugin] Minimize plugin dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2318:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318,1,['plugin'],['plugin']
Modifiability,[CMakeLists.txt] Add macro to handle out-of-tree plugins in way similar to plugins/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/530:49,plugin,plugins,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/530,2,['plugin'],['plugins']
Modifiability,[CMake] FIX build/install plugins directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959:26,plugin,plugins,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959,1,['plugin'],['plugins']
Modifiability,[CMake] FIX out-of-tree configure,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2891:24,config,configure,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2891,1,['config'],['configure']
Modifiability,[CMake] Fix Cmake configure step with SOFA_WITH_DEPRECATED_COMPONENTS,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1452:18,config,configure,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1452,1,['config'],['configure']
Modifiability,[CMake] Fix install config files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3031:20,config,config,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3031,1,['config'],['config']
Modifiability,[CMake] Fix relocatable plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1059:24,plugin,plugins,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1059,1,['plugin'],['plugins']
Modifiability,[CMake] Speed-up Configuration (again),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3382:17,Config,Configuration,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3382,1,['Config'],['Configuration']
Modifiability,[CMake] Speedup configure step,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:16,config,configure,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,1,['config'],['configure']
Modifiability,[CMake] Update all cmake_minimum_required in plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4886:45,plugin,plugins,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4886,1,['plugin'],['plugins']
Modifiability,[CMake] Use cmake_dependent_option for plugin tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1164:39,plugin,plugin,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1164,1,['plugin'],['plugin']
Modifiability,[CMake][tests] installing gtest headers for separate plugin builds,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/395:53,plugin,plugin,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/395,1,['plugin'],['plugin']
Modifiability,[Camera] Refactoring,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/674:9,Refactor,Refactoring,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/674,1,['Refactor'],['Refactoring']
Modifiability,[Carving plugin] Small fix at init.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1110:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1110,1,['plugin'],['plugin']
Modifiability,[Cgal plugin] Fix windows cmake dll path and add a scene example,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958,1,['plugin'],['plugin']
Modifiability,[ColladaSceneLoader][SofaAssimp] Move ColladaSceneLoader plugin content into SofaAssimp plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1360:57,plugin,plugin,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1360,2,['plugin'],['plugin']
Modifiability,[CollisionOBBCapsule] Fix generation of configuration file for installation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3576:40,config,configuration,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3576,1,['config'],['configuration']
Modifiability,[Collision] Refactor the DetectionOutputVector interface and its impementation TDetectionOutputVector,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:12,Refactor,Refactor,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,1,['Refactor'],['Refactor']
Modifiability,[Component.Engine.Select] Refactoring of ROI classes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4839:26,Refactor,Refactoring,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4839,1,['Refactor'],['Refactoring']
Modifiability,[Component] Unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2721:19,variab,variable,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2721,1,['variab'],['variable']
Modifiability,[Components.Engine.Transform] remove shadow variable in ROIValueMapper,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2987:44,variab,variable,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2987,1,['variab'],['variable']
Modifiability,[Components] rename shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3606:27,variab,variable,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3606,2,['variab'],['variable']
Modifiability,[Config] Add CMake option for memory sanitizer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4847:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4847,1,['Config'],['Config']
Modifiability,[Config] Add TSAN option,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4534:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534,1,['Config'],['Config']
Modifiability,[Config] Add cxxopts cmake find module,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4538:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538,1,['Config'],['Config']
Modifiability,[Config] Add target generation to macro,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4135:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4135,1,['Config'],['Config']
Modifiability,[Config] Allow fast math mode for gcc/clang,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3922:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3922,1,['Config'],['Config']
Modifiability,[Config] CMake: Dont check for IPO at every configure step,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4191:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4191,2,"['Config', 'config']","['Config', 'configure']"
Modifiability,[Config] CMake: fix warning about upper/lowercase for Difflib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4486:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4486,1,['Config'],['Config']
Modifiability,[Config] CMake: support interface-type target for install macro,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4356:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356,1,['Config'],['Config']
Modifiability,[Config] Change type of CMake message when adding a module,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3381:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3381,1,['Config'],['Config']
Modifiability,[Config] Disable SOFA_EXTERN_TEMPLATE,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3678:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3678,1,['Config'],['Config']
Modifiability,[Config] Fix Findmetis module when using config mode,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4570:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570,2,"['Config', 'config']","['Config', 'config']"
Modifiability,[Config] Fix QGLViewer find module on windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4611:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4611,1,['Config'],['Config']
Modifiability,[Config] Fix cross-compilation for embedded external libs,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3870:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3870,1,['Config'],['Config']
Modifiability,[Config] Fix findcxxopt when version is not specified,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4564:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564,1,['Config'],['Config']
Modifiability,[Config] Integrate Tracy profiler,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182,1,['Config'],['Config']
Modifiability,[Config] Option to enable interprocedural optimization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3345:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3345,1,['Config'],['Config']
Modifiability,[Config] Option to set the number of MSVC processes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3313:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3313,1,['Config'],['Config']
Modifiability,[Config] POC: enable assertions even in release mode,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496,1,['Config'],['Config']
Modifiability,[Config] Remove deprecated macros,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3265:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3265,1,['Config'],['Config']
Modifiability,[Config] Remove suspicious Eigen macro preventing vectorization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3780:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3780,1,['Config'],['Config']
Modifiability,[Config] Remove unused SOFA_WITH_THREADING option,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3565:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3565,1,['Config'],['Config']
Modifiability,[Config] Remove unused option SOFA_WITH_DEPRECATED_COMPONENTS,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3172:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3172,1,['Config'],['Config']
Modifiability,[Config] Upgrade to C++20,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5056:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5056,1,['Config'],['Config']
Modifiability,[Config] Use cmake-generator-expression to set cxx and c flags,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4990:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4990,1,['Config'],['Config']
Modifiability,[Config][CMake] Fix include directories,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3023:1,Config,Config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3023,1,['Config'],['Config']
Modifiability,[Constraint] Change print variable names to be consistent with doc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3816:26,variab,variable,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3816,1,['variab'],['variable']
Modifiability,"[Core,Helper] Prevent to create objects from unloaded plugins",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722:54,plugin,plugins,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722,1,['plugin'],['plugins']
Modifiability,"[Core,Simulation] Inherit and link gravity from parent context if not set",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4910:18,Inherit,Inherit,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4910,1,['Inherit'],['Inherit']
Modifiability,[Core] Add filtering for unloaded plugins in ObjectFactory::getAllEntries,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4885:34,plugin,plugins,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4885,1,['plugin'],['plugins']
Modifiability,[Core] Factorize two variables with the same meaning (constraint id),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4786:21,variab,variables,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4786,1,['variab'],['variables']
Modifiability,[Core] Refactor VMultiOpEntry,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4333:7,Refactor,Refactor,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333,1,['Refactor'],['Refactor']
Modifiability,[Core] remove shadow variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3224:21,variab,variables,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3224,1,['variab'],['variables']
Modifiability,[ERROR] [PluginManager] Plugin loading failed (/home/dou/Downloads/SOFA_robosoft2022_python-3.9_Linux/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.9.so.1.0: cannot open shared object file: No such file or directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192:9,Plugin,PluginManager,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192,3,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugins']"
Modifiability,"[ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier.; import sys; import Sofa. def createScene(rootNode):. rootNode.addObject('RequiredPlugin', pluginName='BeamAdapter SofaMeshCollision SofaBoundaryCondition SofaConstraint SofaMiscCollision SofaDeformable SofaGeneralLinearSolver SofaImplicitOdeSolver'); rootNode.addObject('VisualStyle', displayFlags='hideVisualModels hideBehaviorModels showCollisionModels hideMappings showInteractionForceFields'). rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). rootNode.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); rootNode.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); rootNode.addObject('BruteForceBroadPhase', name='N2'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', contactDistance='1', alarmDistance='5', name='localmindistance', angleCone='0.02'); rootNode.addObject('DefaultContactManager', name='Response', response='FrictionContact'). topoLines_cath = rootNode.addChild('EdgeTopology'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',; straightLength=600.0, length=1000.0,; numEdges=200, youngModulus=12000,; spireDiameter=1000, numEdgesCollis=[50, 10],; printLog=True, template='Rigid3d', spireHeight=0.0,; densityOfBeams=[30, 10], youngModulusExtremity=12000); topoLines_cath.addObject('EdgeSetTopologyContainer', name='meshLinesCath'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'); topoLines_cath.addObject('MechanicalObject', template='Rigid3d', name='dofTopo'). CatheterMechanics = rootNode.addChild('CatheterModel'); CatheterMechanics.addObject('EulerImplicitSolver', rayleighStiffness=0.2, rayleighMass=0.1, printLog='false'); CatheterMechanics.addObject('BTDLinearSolver',verification=False, subpartSolve=False, verbose=False); CatheterMechanics.addObject('RegularGridTopology', name=",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463:192,plugin,pluginName,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463,1,['plugin'],['pluginName']
Modifiability,"[Engine.Select] Clean, extend and test MeshSubsetEngine",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4958:23,extend,extend,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4958,1,['extend'],['extend']
Modifiability,[FEM.Elastic] Hexa FEM inherits from BaseLinearElasticityFEMForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4832:23,inherit,inherits,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4832,1,['inherit'],['inherits']
Modifiability,[FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3983:20,refactor,refactor,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3983,1,['refactor'],['refactor']
Modifiability,[FEM.Elastic] Minor refactoring and optimization in draw,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3564:20,refactor,refactoring,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3564,1,['refactor'],['refactoring']
Modifiability,[FEM.Elastic] Some FEM inherits from BaseLinearElasticityFEMForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852:23,inherit,inherits,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852,1,['inherit'],['inherits']
Modifiability,[FEM.Elastic] remove static variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4883:28,variab,variable,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4883,1,['variab'],['variable']
Modifiability,[FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3989:25,refactor,refactor,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3989,1,['refactor'],['refactor']
Modifiability,[Flexible] Add engines for strain smoothing,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/77:1,Flexible,Flexible,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/77,1,['Flexible'],['Flexible']
Modifiability,[Flexible] FIX deps to pluginized modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1590:1,Flexible,Flexible,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1590,2,"['Flexible', 'plugin']","['Flexible', 'pluginized']"
Modifiability,"[Flexible] add engines and examples for strain smoothing, and minor cleaning",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/76:1,Flexible,Flexible,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/76,1,['Flexible'],['Flexible']
Modifiability,"[Flexible] add engines and examples to smooth strains, for faster convergence + minor cleaning on quadrature engines",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/75:1,Flexible,Flexible,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/75,1,['Flexible'],['Flexible']
Modifiability,[GKlib] Portable random number generation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3072:8,Portab,Portable,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3072,1,['Portab'],['Portable']
Modifiability,[GUI.Common] FIX unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3158:24,variab,variable,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3158,1,['variab'],['variable']
Modifiability,[GUI.Qt] Refactor a bit the way runSofa is implementing the scenegraph colors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4536:9,Refactor,Refactor,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4536,1,['Refactor'],['Refactor']
Modifiability,[GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4558:49,config,config,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4558,1,['config'],['config']
Modifiability,[GUI] GUI libraries as plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3550:23,plugin,plugins,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550,1,['plugin'],['plugins']
Modifiability,[Geomagic Plugin] Move all code related to device model display in a dedicated class.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1366:10,Plugin,Plugin,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1366,1,['Plugin'],['Plugin']
Modifiability,[Geomagic plugin] Fix scenes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/858:10,plugin,plugin,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/858,1,['plugin'],['plugin']
Modifiability,[Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/898:45,plugin,plugin,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/898,1,['plugin'],['plugin']
Modifiability,[Geomagic] Fix Geomagic plugin compilation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2033:24,plugin,plugin,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033,1,['plugin'],['plugin']
Modifiability,[Geomagic] Fix dll export and some enhancements,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/786:35,enhance,enhancements,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/786,1,['enhance'],['enhancements']
Modifiability,[Geomagic] Reorder plugin files for better modularization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1208:19,plugin,plugin,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1208,1,['plugin'],['plugin']
Modifiability,[Geometry] Make global variables constexpr,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3233:23,variab,variables,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3233,1,['variab'],['variables']
Modifiability,[Haption] Partially fix the plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4338:28,plugin,plugin,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338,1,['plugin'],['plugin']
Modifiability,[HeadlessRecorder] Handle errors in target config,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/608:43,config,config,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/608,1,['config'],['config']
Modifiability,[Helper] Deduce plugin name from path based on known extension,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2961:16,plugin,plugin,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2961,1,['plugin'],['plugin']
Modifiability,[Helper] Make clearer from where plugins are loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3109:33,plugin,plugins,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109,2,['plugin'],['plugins']
Modifiability,[Helper] PluginManager Fix test in debug,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4491:9,Plugin,PluginManager,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4491,1,['Plugin'],['PluginManager']
Modifiability,[Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466:9,Plugin,PluginManager,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466,1,['Plugin'],['PluginManager']
Modifiability,[Helper] PluginManager: testing loading a plugin with a dependency on an other plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4464:9,Plugin,PluginManager,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464,3,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[Helper] Portable thread local storage duration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3422:9,Portab,Portable,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3422,1,['Portab'],['Portable']
Modifiability,[Helper] Retrieve the current user local configuration directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875:41,config,configuration,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875,1,['config'],['configuration']
Modifiability,[How-to] Profile CMake configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1838:23,config,configuration,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1838,1,['config'],['configuration']
Modifiability,[INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7292,Plugin,PluginManager,7292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2714,Plugin,PluginManager,2714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinea,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2824,Plugin,PluginManager,2824,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[ImagePNG] FIX: Library linking in debug configuration under MSVS,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/297:41,config,configuration,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/297,2,['config'],['configuration']
Modifiability,[Image] remove shadow variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2936:22,variab,variables,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2936,1,['variab'],['variables']
Modifiability,[InvertibleFVM] Externalize the plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1443:32,plugin,plugin,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1443,1,['plugin'],['plugin']
Modifiability,[LMConstraint] Move LMConstraint components in a new plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659:53,plugin,plugin,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659,1,['plugin'],['plugin']
Modifiability,[LMConstraint] Remove LMConstraint folder as it is an external plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2828:63,plugin,plugin,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2828,1,['plugin'],['plugin']
Modifiability,[LinearAlgebra] Refactor sparse matrix product,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:16,Refactor,Refactor,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,1,['Refactor'],['Refactor']
Modifiability,[LinearSolver.Iterative] CMake: Fix package configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3840:44,config,configuration,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3840,1,['config'],['configuration']
Modifiability,[LinearSystem] Refactor matrix assembly,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777:15,Refactor,Refactor,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777,1,['Refactor'],['Refactor']
Modifiability,[Mass] Deprecate and make DiagonalMass inherit from MeshMatrixMass,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912:39,inherit,inherit,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912,1,['inherit'],['inherit']
Modifiability,[Modeler] rename shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3546:24,variab,variable,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3546,1,['variab'],['variable']
Modifiability,[Modules] shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2079:17,variab,variable,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2079,3,['variab'],['variable']
Modifiability,[MultiThreading] Add Image plugin Data types in DataExchange component,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,1,['plugin'],['plugin']
Modifiability,[MultiThreading] New components and Task scheduler classes refactoring,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/745:59,refactor,refactoring,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/745,1,['refactor'],['refactoring']
Modifiability,[Multithreading] Move TaskScheduler files from MultiThreading plugin to SofaKernel. TaskScheduler Tests included,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/805:62,plugin,plugin,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/805,1,['plugin'],['plugin']
Modifiability,[NG][Sofa.Helper] Differentiate classic library from plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/872:53,plugin,plugins,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/872,1,['plugin'],['plugins']
Modifiability,[OpenCL] Update OpenCLProgram.cpp remove unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4973:48,variab,variable,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4973,1,['variab'],['variable']
Modifiability,[OpenCTM plugin] Fix compilation and clean before moving out,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359,1,['plugin'],['plugin']
Modifiability,"[Plugin list](https://github.com/sofa-framework/sofa/wiki/Supported-SOFA-plugins) is now completed.; Plugins with their own repo:; - [SofaMatrix](https://github.com/sofa-framework/SofaMatrix); - [SofaCarving](https://github.com/sofa-framework/SofaCarving); - [image](https://github.com/sofa-framework/image); - [CImgPlugin](https://github.com/sofa-framework/CImgPlugin); - [DiffusionSolver](https://github.com/sofa-framework/DiffusionSolver); - [ArticulatedSystemPlugin](https://github.com/sofa-framework/ArticulatedSystemPlugin); - [BulletCollisionDetection](https://github.com/sofa-framework/BulletCollisionDetection); - [SofaAssimp](https://github.com/sofa-framework/SofaAssimp); - [SofaHAPI](https://github.com/sofa-framework/SofaHAPI); - [PersistentContact](https://github.com/sofa-framework/PersistentContact); - [SofaNewMat](https://github.com/sofa-framework/SofaNewMat); - [SofaPardisoSolver](https://github.com/sofa-framework/SofaPardisoSolver); - [SofaSimpleGui](https://github.com/sofa-framework/SofaSimpleGui); - [VolumetricRendering](https://github.com/sofa-framework/VolumetricRendering); - [SofaEulerianFluid](https://github.com/sofa-framework/SofaEulerianFluid); - [SofaImplicitField](https://github.com/sofa-framework/SofaImplicitField). Related to #1442 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4589:1,Plugin,Plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589,3,"['Plugin', 'plugin']","['Plugin', 'Plugins', 'plugins']"
Modifiability,[Plugin loading] Add external_directories/ in reference repositories to search for plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2927:1,Plugin,Plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2927,2,"['Plugin', 'plugin']","['Plugin', 'plugins']"
Modifiability,[PluginExample] Move the plugin to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2519:1,Plugin,PluginExample,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2519,2,"['Plugin', 'plugin']","['PluginExample', 'plugin']"
Modifiability,[PluginExample] Update example + add comments,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1053:1,Plugin,PluginExample,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1053,1,['Plugin'],['PluginExample']
Modifiability,"[PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8823,Plugin,PluginManager,8823,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[PluginManager] Switching compilation mode in VS causes wrong plugins to be loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2338:1,Plugin,PluginManager,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2338,2,"['Plugin', 'plugin']","['PluginManager', 'plugins']"
Modifiability,[Plugin] Add Cosserat as a fetchable plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4859:1,Plugin,Plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4859,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,[Plugin] Update PluginExample,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1356:1,Plugin,Plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1356,2,['Plugin'],"['Plugin', 'PluginExample']"
Modifiability,[Plugins] Add SofaGLFW GUI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2062:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684,2,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,[Plugins] Cyclic dependency between SofaDistanceGrid and SofaMiscCollision,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1897:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1897,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Disable pluginized modules by default,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575,2,"['Plugin', 'plugin']","['Plugins', 'pluginized']"
Modifiability,[Plugins] Fix Cmake configuration w/o compat,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3209:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3209,2,"['Plugin', 'config']","['Plugins', 'configuration']"
Modifiability,[Plugins] Gather external plugins configs in a same folder (proposal),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4505:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505,3,"['Plugin', 'config', 'plugin']","['Plugins', 'configs', 'plugins']"
Modifiability,[Plugins] Move CGALPlugin to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2500:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2500,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Move Flexible/Compliant/RigidScale to external repositories,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1873:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1873,2,"['Flexible', 'Plugin']","['Flexible', 'Plugins']"
Modifiability,[Plugins] Move ManifoldTopologies to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2623:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2623,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Move MeshSTEPLoader to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4504:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4504,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Move Newmat matters into the new SofaNewmat plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2532:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2532,2,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,[Plugins] Move OpenCTMPlugin to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2564:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2564,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Move OptitrackNatNet to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2548:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2548,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Move SofaCUDA to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2502:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2502,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Move SofaPython to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2224:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2224,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Move THMPGSpatialHashing to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2609:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2609,1,['Plugin'],['Plugins']
Modifiability,[Plugins] Sofa Fetch plugin create .gitignore file ignoring all new files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4409:1,Plugin,Plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4409,2,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,"[QT] Could not load the Qt platform plugin ""xcb"" in """" even though it was found.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486:36,plugin,plugin,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486,1,['plugin'],['plugin']
Modifiability,[Registration] Move the plugin to an external repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2552:24,plugin,plugin,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2552,1,['plugin'],['plugin']
Modifiability,"[RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4601,Plugin,Plugin,4601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,[SceneChecking] MissingRequiredPlugins: Adapts messages for xml and python users,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033:40,Adapt,Adapts,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033,1,['Adapt'],['Adapts']
Modifiability,[SceneCreator] Pluginizing...,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1109:15,Plugin,Pluginizing,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1109,1,['Plugin'],['Pluginizing']
Modifiability,[Sensable] Fix the compilation of the Sensable plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1019:47,plugin,plugin,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1019,1,['plugin'],['plugin']
Modifiability,[Simulation.Core] Fix import of required plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3322:41,plugin,plugins,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3322,1,['plugin'],['plugins']
Modifiability,[Simulation.Core] Refactor DefaultAnimationLoop + multithreading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:18,Refactor,Refactor,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,1,['Refactor'],['Refactor']
Modifiability,[Simulation] SceneCheck can be added in plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3597:40,plugin,plugins,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597,1,['plugin'],['plugins']
Modifiability,[Simulation] Suggest required plugin in the syntax of the scene loader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3799:30,plugin,plugin,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799,1,['plugin'],['plugin']
Modifiability,[Sofa.Component.ODESolver] Rewrite tests without SceneCreator,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2733:27,Rewrite,Rewrite,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2733,1,['Rewrite'],['Rewrite']
Modifiability,"[Sofa.Config] CMake: Remove ""both"" as a choice for SOFA_FLOATING_POINT_TYPE parameter",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3436:6,Config,Config,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3436,1,['Config'],['Config']
Modifiability,[Sofa.Config] FIX nested relocatable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2603:6,Config,Config,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2603,1,['Config'],['Config']
Modifiability,[Sofa.Config] Rename ide folder for libraries,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3214:6,Config,Config,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3214,1,['Config'],['Config']
Modifiability,[Sofa.Config][MSVC] Change SIMD cmake option and flags,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652:6,Config,Config,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652,1,['Config'],['Config']
Modifiability,[Sofa.Core] Fix diamond inheritance in PairInteractionConstraint,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2488:24,inherit,inheritance,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2488,1,['inherit'],['inheritance']
Modifiability,[Sofa.Core] Refactor BaseObject::canCreate & BaseObject::create,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3309:12,Refactor,Refactor,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3309,1,['Refactor'],['Refactor']
Modifiability,[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3278:18,refactor,refactoring,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3278,1,['refactor'],['refactoring']
Modifiability,[Sofa.Core][SofaBaseTopology] Refactor TopologyContainer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2387:30,Refactor,Refactor,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2387,1,['Refactor'],['Refactor']
Modifiability,[Sofa.DefaultType] Fix declaration of global variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2317:45,variab,variables,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2317,1,['variab'],['variables']
Modifiability,[Sofa.GL] Fix cmake config file for out-of-tree when trying to find glew on Windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3098:20,config,config,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3098,1,['config'],['config']
Modifiability,[Sofa.GL] Relocate the module (again) + clarify module vs plugin definitions,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1941:58,plugin,plugin,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941,1,['plugin'],['plugin']
Modifiability,[Sofa.GL] static variable belongs to the class,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1951:17,variab,variable,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1951,1,['variab'],['variable']
Modifiability,"[Sofa.GUI, Plugins] Pluginize HeadlessRecorder",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4928:11,Plugin,Plugins,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4928,2,['Plugin'],"['Pluginize', 'Plugins']"
Modifiability,[Sofa.GUI] Clean CMake variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974:23,variab,variables,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974,1,['variab'],['variables']
Modifiability,[Sofa.Helper] PluginManager: Add optional way to check if a plugin is init at the load stage,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425:14,Plugin,PluginManager,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:14,Plugin,PluginManager,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[Sofa.Testing] Add SimpleApi in Config.cmake.in,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4542:32,Config,Config,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542,1,['Config'],['Config']
Modifiability,[SofaAssimp] fix shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2844:24,variab,variable,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2844,1,['variab'],['variable']
Modifiability,[SofaAssimp] loader plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:20,plugin,plugin,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,1,['plugin'],['plugin']
Modifiability,[SofaAssump] Fix shadow variable in SceneColladaLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4785:24,variab,variable,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4785,1,['variab'],['variable']
Modifiability,[SofaBaseCollision] REFACTOR BruteForceDetection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1999:20,REFACTOR,REFACTOR,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999,1,['REFACTOR'],['REFACTOR']
Modifiability,[SofaBaseMechanics] Refactor mechanicalobject,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489:20,Refactor,Refactor,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489,1,['Refactor'],['Refactor']
Modifiability,[SofaBaseTopology] Single definition of global variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1950:47,variab,variables,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1950,1,['variab'],['variables']
Modifiability,[SofaBoundaryCondition] Refactor FixedPlaneConstraint (breaking),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/803:24,Refactor,Refactor,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/803,1,['Refactor'],['Refactor']
Modifiability,[SofaCUDA] FIX Configuration/compilation issue with CUDA plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/523:15,Config,Configuration,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/523,2,"['Config', 'plugin']","['Configuration', 'plugin']"
Modifiability,[SofaCUDA] Fix CMake to compile plugin without legacy headers option,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3077:32,plugin,plugin,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3077,1,['plugin'],['plugin']
Modifiability,[SofaCUDA] Fix plugin compilation if Sofa.GUI.Qt is not used,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4312:15,plugin,plugin,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4312,1,['plugin'],['plugin']
Modifiability,[SofaCUDA] Fix static variable definition for double-precision,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440:22,variab,variable,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440,1,['variab'],['variable']
Modifiability,[SofaCUDA] Fix: Headers of the SofaCUDA plugin are now installed in the include folder,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/383:40,plugin,plugin,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/383,1,['plugin'],['plugin']
Modifiability,[SofaCUDA] SofaCUDANvccFlags loading fails for in-tree plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2021:55,plugin,plugins,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021,1,['plugin'],['plugins']
Modifiability,[SofaCarving] Modify the CMake config file to allow other plugins link to Sofa Carving,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/781:31,config,config,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/781,2,"['config', 'plugin']","['config', 'plugins']"
Modifiability,[SofaCarving] Refresh and enhancement,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/712:26,enhance,enhancement,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/712,1,['enhance'],['enhancement']
Modifiability,[SofaCarving] plugin enhancement,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/787:14,plugin,plugin,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/787,2,"['enhance', 'plugin']","['enhancement', 'plugin']"
Modifiability,[SofaCommon] Pluginize SofaDeformable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1600:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1600,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaEngine,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1603:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1603,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaExplicitOdeSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1606:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1606,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaImplicitOdeSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1607:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1607,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1608:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1608,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaMeshCollision,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1602:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1602,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaObjectInteraction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1601:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1601,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaRigid,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1599:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1599,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize SofaSimpleFem,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1598:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1598,1,['Plugin'],['Pluginize']
Modifiability,[SofaCommon] Pluginize all modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1597:13,Plugin,Pluginize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1597,1,['Plugin'],['Pluginize']
Modifiability,[SofaCore] Make inheritance virtual,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2594:16,inherit,inheritance,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2594,1,['inherit'],['inheritance']
Modifiability,[SofaCore] Reorganize ObjectFactory so it becomes possible to refactor it in a smooth way,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712:62,refactor,refactor,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712,1,['refactor'],['refactor']
Modifiability,[SofaCore] Virtual inheritance of BaseObject,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2799:19,inherit,inheritance,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2799,1,['inherit'],['inheritance']
Modifiability,[SofaDefaultType] Extend TypeInfo to handle containers that are not flat array.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3851:18,Extend,Extend,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3851,1,['Extend'],['Extend']
Modifiability,[SofaDistanceGrid] plugin dll not exported at sofa install,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1219:19,plugin,plugin,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1219,1,['plugin'],['plugin']
Modifiability,[SofaDistanceGrid] remove shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4455:33,variab,variable,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4455,1,['variab'],['variable']
Modifiability,[SofaEulerianFluid] Fix: rename shadow variable in Fluid2D,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3561:39,variab,variable,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3561,1,['variab'],['variable']
Modifiability,[SofaEulerianFluid] Fix: rename shadow variable in Fluid3D,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3557:39,variab,variable,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3557,1,['variab'],['variable']
Modifiability,[SofaEulerianFluid] Move examples into plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2833:39,plugin,plugin,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2833,1,['plugin'],['plugin']
Modifiability,[SofaEulerianFluid] Pluginizing the module,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/396:20,Plugin,Pluginizing,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/396,1,['Plugin'],['Pluginizing']
Modifiability,[SofaExporter] FIX allow to extend VTKExporter in a plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/309:28,extend,extend,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/309,2,"['extend', 'plugin']","['extend', 'plugin']"
Modifiability,[SofaFramework/CMake] Create configuration type dir before copying lib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1347:29,config,configuration,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1347,1,['config'],['configuration']
Modifiability,[SofaFramework] Create Sofa.Config module,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:28,Config,Config,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,1,['Config'],['Config']
Modifiability,"[SofaFramework] Fix config files for Sofa.GL, for out-of-tree",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1911:20,config,config,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1911,1,['config'],['config']
Modifiability,[SofaFramework] Fix plugin list configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/645:20,plugin,plugin,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/645,2,"['config', 'plugin']","['configuration', 'plugin']"
Modifiability,[SofaGUICommon] Fix configuration file for install with cxxopts,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2279:20,config,configuration,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2279,1,['config'],['configuration']
Modifiability,[SofaGeneralEngine] Extend features of NearestPointROI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2595:20,Extend,Extend,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2595,1,['Extend'],['Extend']
Modifiability,[SofaGeneral] Pluginize SofaBoundaryCondition,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1556:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1556,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaConstraint,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1592:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1592,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralAnimationLoop,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1563:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1563,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralDeformable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1564:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1564,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralEngine,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1565:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1565,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralExplicitOdeSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1566:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1566,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralImplicitOdeSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1572:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1572,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralLinearSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1575:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1575,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralLoader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1595:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1595,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralMeshCollision,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1540:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1540,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralObjectInteraction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1580:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1580,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralRigid,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1579:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1579,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralSimpleFem,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1582:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1582,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralTopology,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1583:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1583,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGeneralVisual,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1530:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1530,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaGraphComponent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1531:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1531,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaTopologyMapping,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1586:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1586,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize SofaUserInteraction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1588:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1588,1,['Plugin'],['Pluginize']
Modifiability,[SofaGeneral] Pluginize all modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1529:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1529,1,['Plugin'],['Pluginize']
Modifiability,[SofaGraphComponent] Refactor the SceneChecker and add a new SceneChecker to test dumplicated names.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/392:21,Refactor,Refactor,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/392,1,['Refactor'],['Refactor']
Modifiability,[SofaGuiQt] Fix compilation when QtGuiInteraction plugin enabled,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/48:50,plugin,plugin,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/48,1,['plugin'],['plugin']
Modifiability,[SofaGui] Restore and update CMake variables and modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3011:35,variab,variables,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3011,1,['variab'],['variables']
Modifiability,[SofaHaptics] Pluginize,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/486:14,Plugin,Pluginize,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/486,1,['Plugin'],['Pluginize']
Modifiability,[SofaHelper SofaGraphComponent] issofa_plugin: Plugin management,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:47,Plugin,Plugin,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['Plugin'],['Plugin']
Modifiability,[SofaHelper] Add two search paths for every prefixes of the plugin manager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1824:60,plugin,plugin,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1824,1,['plugin'],['plugin']
Modifiability,"[SofaHelper] FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1823:41,Plugin,PluginManager,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1823,1,['Plugin'],['PluginManager']
Modifiability,"[SofaHelper] FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1825:41,Plugin,PluginManager,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825,1,['Plugin'],['PluginManager']
Modifiability,[SofaHelper] FIX PluginManager readFromIniFile plugin loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:17,Plugin,PluginManager,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,[SofaHelper] Fix CMake config with SOFA_NO_OPENGL and dependency package (Windows),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1650:23,config,config,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1650,1,['config'],['config']
Modifiability,[SofaHelper] Fix unloading with PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274:32,Plugin,PluginManager,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274,2,['Plugin'],['PluginManager']
Modifiability,[SofaHelper] PluginManager now checks for file existence instead of library extension match.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/621:13,Plugin,PluginManager,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/621,1,['Plugin'],['PluginManager']
Modifiability,[SofaHelper] REMOVE PluginManager::m_searchPaths,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/947:20,Plugin,PluginManager,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/947,1,['Plugin'],['PluginManager']
Modifiability,[SofaHelper][SofaPython] ADD PluginManager callback and use it in SofaPython,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1777:29,Plugin,PluginManager,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777,1,['Plugin'],['PluginManager']
Modifiability,[SofaImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:24,Rewrite,Rewrite,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,1,['Rewrite'],['Rewrite']
Modifiability,"[SofaKernel] Add automatically the ""_d"" suffix when loading plugins in debug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:60,plugin,plugins,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,1,['plugin'],['plugins']
Modifiability,[SofaKernel] Add tests on PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/240:26,Plugin,PluginManager,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/240,1,['Plugin'],['PluginManager']
Modifiability,[SofaKernel] Autoload plugin mechanism,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253,1,['plugin'],['plugin']
Modifiability,[SofaKernel] Deep refactoring of DataTypeInfo (not to merge...but to review),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:18,refactor,refactoring,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['refactor'],['refactoring']
Modifiability,[SofaKernel] FIX PluginManager::pluginIsLoaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:17,Plugin,PluginManager,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,2,"['Plugin', 'plugin']","['PluginManager', 'pluginIsLoaded']"
Modifiability,[SofaKernel] Improve check for already registered plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:50,plugin,plugins,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,1,['plugin'],['plugins']
Modifiability,[SofaKernel] Minor code refactor in BaseData & new StringUtils functions.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/860:24,refactor,refactor,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/860,1,['refactor'],['refactor']
Modifiability,[SofaKernel] Refactor BaseData to use DataLink,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1491:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1491,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor DDGNode,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor DataTrackerEngine so it match the DataCallback,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1073:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1073,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor the FileRepository constructors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor the MutationListener,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,1,['Refactor'],['Refactor']
Modifiability,"[SofaKernel] Refactoring in Camera, BackgroundSetting and Light",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:13,Refactor,Refactoring,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,1,['Refactor'],['Refactoring']
Modifiability,[SofaKernel] Remove a #pragma in a config.h (shouldn't be there),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1365:35,config,config,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1365,1,['config'],['config']
Modifiability,[SofaKernel] Remove core::Plugin/core::PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1612:26,Plugin,Plugin,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1612,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,[SofaKernel] fix shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2791:24,variab,variable,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2791,1,['variab'],['variable']
Modifiability,[SofaMacros] FIX libs copy and plugin deps finding,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708:31,plugin,plugin,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708,1,['plugin'],['plugin']
Modifiability,[SofaMacros] FIX plugins RPATH,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1619:17,plugin,plugins,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1619,1,['plugin'],['plugins']
Modifiability,[SofaMacros] Refactor for better target and package management,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1433:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1433,1,['Refactor'],['Refactor']
Modifiability,[SofaMatrix] A new plugin adding tools for linear system matrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2517:19,plugin,plugin,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2517,1,['plugin'],['plugin']
Modifiability,[SofaMatrix] Move CI setting to the plugin folder,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2579:36,plugin,plugin,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2579,1,['plugin'],['plugin']
Modifiability,[SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:20,plugin,plugin,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,1,['plugin'],['plugin']
Modifiability,[SofaMeshCollision] Fix cmake generated config file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2400:40,config,config,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2400,1,['config'],['config']
Modifiability,[SofaMiscCollision] Extract OBB/Capsule code into its own plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820:58,plugin,plugin,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820,1,['plugin'],['plugin']
Modifiability,[SofaMiscCollision] Fix config.in cmake file for export,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2052:24,config,config,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052,1,['config'],['config']
Modifiability,[SofaMiscCollision] Move back to modules (instead of applications/plugins),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2127:66,plugin,plugins,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127,1,['plugin'],['plugins']
Modifiability,[SofaMiscEngine] Pluginize,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/477:17,Plugin,Pluginize,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/477,1,['Plugin'],['Pluginize']
Modifiability,[SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:57,plugin,plugin,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,1,['plugin'],['plugin']
Modifiability,[SofaMiscForceField] Pluginizing the module,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/408:21,Plugin,Pluginizing,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/408,1,['Plugin'],['Pluginizing']
Modifiability,[SofaMiscMapping] Remove unused global variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1956:39,variab,variable,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956,1,['variab'],['variable']
Modifiability,[SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1909:32,inherit,inheritence,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909,1,['inherit'],['inheritence']
Modifiability,[SofaMisc] Pluginize all modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1306:11,Plugin,Pluginize,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1306,2,['Plugin'],['Pluginize']
Modifiability,[SofaNG] Setup Sofa.GL (as a plugin),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2709:29,plugin,plugin,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2709,1,['plugin'],['plugin']
Modifiability,[SofaNonUniformFem] Remove shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1874:34,variab,variable,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874,1,['variab'],['variable']
Modifiability,[SofaOpenCL] Fix Cmake configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1647:23,config,configuration,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1647,1,['config'],['configuration']
Modifiability,[SofaOpenglVisual] Pluginize &clean,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071:19,Plugin,Pluginize,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071,1,['Plugin'],['Pluginize']
Modifiability,[SofaOpenglVisual] Pluginize.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1080:19,Plugin,Pluginize,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1080,1,['Plugin'],['Pluginize']
Modifiability,[SofaPardisoSolver] Fix plugin and add example,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1830:24,plugin,plugin,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830,1,['plugin'],['plugin']
