quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"mber Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooCFunction4PdfBinding< VO, VI1, VI2, VI3, VI4 > Class Template Reference. ; template<class VO, class VI1, class VI2, class VI3, class VI4>; class RooCFunction4PdfBinding< VO, VI1, VI2, VI3, VI4 >; Definition at line 297 of file RooCFunction4Binding.h. Public Member Functions;  RooCFunction4PdfBinding ();  ;  RooCFunction4PdfBinding (const char *name, const char *title, VO(*_func)(VI1, VI2, VI3, VI4), RooAbsReal &_x, RooAbsReal &_y, RooAbsReal &_z, RooAbsReal &_w);  ;  RooCFunction4PdfBinding (const RooCFunction4PdfBinding &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction4PdfBinding.html:1248,inherit,inherited,1248,doc/master/classRooCFunction4PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction4PdfBinding.html,1,['inherit'],['inherited']
Modifiability,"mber Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEveTrack Class ReferenceGraphics » 3D Graphics » Event Display. ; Visual representation of a track. ; If member fDpDs is set, the momentum is reduced on all path-marks that do not fix the momentum according to the distance travelled from the previous pathmark. ; Definition at line 32 of file TEveTrack.h. Public Types; enum  EBreakProjectedTracks_e { kBPTDefault; , kBPTAlways; , kBPTNever; };  ; typedef vPathMark_t::const_iterator vPathMark_ci;  ; typedef vPathMark_t::iterator vPathMark_i;  ; typedef std::vector< TEvePathMarkD > vPathMark_t;  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrack.html:866,inherit,inherited,866,doc/master/classTEveTrack.html,https://root.cern,https://root.cern/doc/master/classTEveTrack.html,2,['inherit'],['inherited']
Modifiability,"mber Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooAddGenContext Class ReferenceRooFit » RooFit Core. ; Efficient implementation of the generator context specific for RooAddPdf PDFs. ; The strategy of RooAddGenContext is to defer generation of each component to a dedicated generator context for that component and to randomly choose one of those context to generate an event, with a probability proportional to its associated coefficient. ; Definition at line 32 of file RooAddGenContext.h. Public Member Functions;  RooAddGenContext (const RooAddModel &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ;  RooAddGenContext (const RooAddPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; void attach (const RooArgSet &params) override;  Attach given set of variables to internal p.d.f. clone. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Print the details of the context. ;  ; void setProtoDataOrder (Int_t *lut) override;  Forward the setProtoDataOrder call to the component generator contexts. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsGenContext;  RooAbsGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default contents when printing. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  Define default print style. ;  ; virtual RooDataSet * generate (double nEvents=0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddGenContext.html:1181,variab,variables,1181,doc/master/classRooAddGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAddGenContext.html,1,['variab'],['variables']
Modifiability,"mber Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMrbSubevent_Caen; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fMer;  ; Int_t fPileup;  ; TString fSevtName;  ;  Protected Attributes inherited from TMrbSubevent_Caen; TUsrHitBuffer fHitBuffer;  ; Int_t fTimeStamp;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interfac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrSevtData1.html:9423,inherit,inherited,9423,doc/master/classTUsrSevtData1.html,https://root.cern,https://root.cern/doc/master/classTUsrSevtData1.html,2,['inherit'],['inherited']
Modifiability,"mber Functions; static VO dummyFunction (VI);  . Private Attributes; func_t _ptr;  . Static Private Attributes; static RooCFunction1Map< VO, VI > * _fmap = nullptr;  Pointer to embedded function. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooCFunction1Binding.h>. Inheritance diagram for RooCFunction1Ref< VO, VI >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ func_t. template<class VO , class VI > . typedef VO(* RooCFunction1Ref< VO, VI >::func_t) (VI). private . Definition at line 132 of file RooCFunction1Binding.h. Constructor & Destructor Documentation. ◆ RooCFunction1Ref(). template<class VO , class VI > . RooCFunction1Ref< VO, VI >::RooCFunction1Ref ; (; VO(*)(VI) ; ptr = nullptr). inline . Definition at line 91 of file RooCFunction1Binding.h. Member Function Documentation. ◆ argName(). template<class VO , class VI > . const char * RooCFunction1Ref< VO, VI >::argName ; (; Int_t ; iarg). inline . Definition at line 117 of file RooCFunction1Binding.h. ◆ Class().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Ref.html:10219,inherit,inherited,10219,doc/master/classRooCFunction1Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Ref.html,2,['inherit'],['inherited']
Modifiability,"mber Functions;  TExceptionHandler ();  ;  ~TExceptionHandler () override;  ; EStatus Handle (std::exception &exc) override;  Handle exceptions deriving from TEveException. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStdExceptionHandler;  TStdExceptionHandler ();  Handle standard C++ exceptions intercepted by the TSystem::Run(). ;  ; virtual ~TStdExceptionHandler ();  ; void Add () override;  Add std::exception handler to system handler list. ;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove std::exception handler from system handler list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveManager_1_1TExceptionHandler.html:1405,inherit,inherited,1405,doc/master/classTEveManager_1_1TExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTEveManager_1_1TExceptionHandler.html,1,['inherit'],['inherited']
Modifiability,"mber functions. ; -* - Constructors and destructor have been added. ; -* - Instead of passing the FCN function in the argument ; -* list, the addresses of this function is stored as pointer ; -* in the data members of the class. This is by far more elegant ; -* and flexible in an interactive environment. ; -* The member function SetFCN can be used to define this pointer. ; -* - The ROOT static function Printf is provided to replace all ; -* format statements and to print on currently defined output file.; -* - The functions SetObjectFit(TObject *obj)/GetObjectFit() can be ; -* used inside the FCN function to set/get a referenced object ; -* instead of using global variables. ; *. . Basic concepts of MINUIT. The MINUIT package acts on a multiparameter Fortran function to which one; must give the generic name FCN. In the ROOT implementation,; the function FCN is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of FCN will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. P = arcsin(2((P -a)/(b- a))-1) P = a+((b- a)/(2))(sinP +1); int ext ext int. so that the internal value P can take on any value, while the external; int; value P can take on values only between the lower limit a and the; ext; upper limit b. Since the transformation is necessarily non-linear, it; would transform a nice line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:2272,variab,variable,2272,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,10,['variab'],['variable']
Modifiability,"mber of bytes written in the file (PDF); TStringTNamed::fNameobject identifier; Bool_tTVirtualPS::fPrintedTrue when a page must be printed; Bool_tfRangeTrue when a range has been defined; Int_tTVirtualPS::fSizBufferBuffer size; ofstream*TVirtualPS::fStreamFile stream identifier; Short_tTAttText::fTextAlignText alignment; Float_tTAttText::fTextAngleText angle; Color_tTAttText::fTextColorText color index; Font_tTAttText::fTextFontText font number; Float_tTAttText::fTextSizeText size; TStringTNamed::fTitleobject title; Int_tfTypeWorkstation type used to know if the SVG is open; Float_tfXsizePage size along X; Float_tfYsizePage size along Y; Double_tfYsizeSVGPage's Y size in SVG units. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSVG(); Default SVG constructor. TSVG(const char* filename, Int_t type = -113); Initialize the SVG interface. fname : SVG file name; wtype : SVG workstation type. Not used in the SVG driver. But as TSVG; inherits from TVirtualPS it should be kept. Anyway it is not; necessary to specify this parameter at creation time because it; has a default value (which is ignore in the SVG case). void Open(const char* filename, Int_t type = -111); Open a SVG file. ~TSVG(); Default SVG destructor. void Close(Option_t* opt = """"); Close a SVG file. void On(); Activate an already open SVG file. void Off(); Deactivate an already open SVG file. void DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); Draw a Box. void DrawFrame(Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light); Draw a Frame around a box. mode = -1 the box looks as it is behind the screen; mode = 1 the box looks as it is in front of the screen; border is the border size in already pre-computed SVG units dark is the; color for the dark part of the frame light is the color for the light; part of the frame. void DrawPolyLine(Int_t n, TPoints* xy); Draw a PolyLine. Draw a polyline through the point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSVG.html:12775,inherit,inherits,12775,root/html534/TSVG.html,https://root.cern,https://root.cern/root/html534/TSVG.html,2,['inherit'],['inherits']
Modifiability,"mber of entries in the list ;  ; Int_t fNBlocks;  number of TEntryListBlocks ;  ; bool fReapply;  If true, TTree::Draw will 'reapply' the original cut. ;  ; bool fShift;  ! true when some sub-lists don't correspond to trees (when the entry list is used as input in TChain) ;  ; ULong_t fStringHash;  ! Hash value of a string of treename and filename ;  ; TString fTreeName;  name of the tree ;  ; Int_t fTreeNumber;  ! the index of the tree in the chain (used when the entry list is used as input (TTree::SetEntryList()) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static constexpr auto kBigNumber = std::numeric_limits<Long64_t>::max();  . Private Member Functions;  TEntryListFromFile (const TEntryListFromFile &);  ; TEntryListFromFile & operator= (const TEntryListFromFile &);  . Additional Inherited Members;  Public Types inherited from TEntryList; enum  { kBlockSize = 64000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TEntryList; void GetFileName (const char *filename, TString &fn, bool *=nullptr);  To be able to re-localize the entry-list we identify the file by just the name and the anchor, i.e. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int leve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryListFromFile.html:18297,inherit,inherited,18297,doc/master/classTEntryListFromFile.html,https://root.cern,https://root.cern/doc/master/classTEntryListFromFile.html,2,['inherit'],['inherited']
Modifiability,"mber of parameters are now data members arrays with ; -* a dynamic dimension such that one can fit very large problems ; -* by simply initialising the TMinuit constructor with the maximum ; -* number of parameters. ; -* - The include file Minuit.h has been commented as much as possible; -* using existing comments in the code or the printed documentation; -* - The original Minuit subroutines are now member functions. ; -* - Constructors and destructor have been added. ; -* - Instead of passing the FCN function in the argument ; -* list, the addresses of this function is stored as pointer ; -* in the data members of the class. This is by far more elegant ; -* and flexible in an interactive environment. ; -* The member function SetFCN can be used to define this pointer. ; -* - The ROOT static function Printf is provided to replace all ; -* format statements and to print on currently defined output file.; -* - The functions SetObjectFit(TObject *obj)/GetObjectFit() can be ; -* used inside the FCN function to set/get a referenced object ; -* instead of using global variables. ; *. . Basic concepts of MINUIT. The MINUIT package acts on a multiparameter Fortran function to which one; must give the generic name FCN. In the ROOT implementation,; the function FCN is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of FCN will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. Basic concepts - The transformation for parameters with limits. F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:1926,variab,variables,1926,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,10,['variab'],['variables']
Modifiability,"mber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxyc; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Heaviside(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _c). Heaviside(const RooStats::Heaviside& other, const char* name = 0). Double_t evaluate() const; ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE. Heaviside(); {}. TObject* clone(const char* newname) const; { return new Heaviside(*this,newname); }. virtual ~Heaviside(); { }. » Last changed: Tue Mar 10 17:19:28 2015 » Last generated: 2015-03-10 17:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__Heaviside.html:35493,Inherit,Inheritance,35493,root/html534/RooStats__Heaviside.html,https://root.cern,https://root.cern/root/html534/RooStats__Heaviside.html,3,"['Inherit', 'VARIAB']","['Inheritance', 'Inherited', 'VARIABLE']"
Modifiability,"mber of rows in the database. ;  ; Long64_t GetEntries (const char *sel) override;  Return the number of entries matching the selection. ;  ; Long64_t GetEntriesFast () const override;  Return the number of entries as of the last check. ;  ; Int_t GetEntry (Long64_t entry=0, Int_t getall=0) override;  Load the data for the entry from the database. ;  ; TString GetTableName ();  ; TClass * IsA () const override;  ; Long64_t LoadTree (Long64_t entry) override;  Setup the tree to the load the specified entry. ;  ; virtual Long64_t PrepEntry (Long64_t entry);  Make sure the server and result set are setup for the requested entry. ;  ; void Refresh () override;  Refresh contents of this Tree and its branches from the current Tree status in the database One can call this function in case the Tree on its file is being updated by another process. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTree;  TTree ();  Default constructor and I/O constructor. ;  ;  TTree (const char *name, const char *title, Int_t splitlevel=99, TDirectory *dir=(::ROOT::Internal::TDirectoryAtomicAdapter{}));  Normal tree constructor. ;  ;  TTree (const TTree &tt)=delete;  ;  ~TTree () override;  Destructor. ;  ; void AddAllocationCount (UInt_t count);  ; virtual Int_t AddBranchToCache (const char *bname, bool subbranches=false);  Add branch with name bname to the Tree cache. ;  ; virtual Int_t AddBranchToCache (TBranch *branch, bool subbranches=false);  Add branch b to the Tree cache. ;  ; void AddClone (TTree *);  Add a cloned tree to our list of trees to be notified whenever we change our branch addresses or when we are deleted. ;  ; virtual TFriendElement * AddFriend (const char *treename, const char *filename="""");  Add a TFriendElement to the list of friends. ;  ; virtual TFriendElement * AddFriend (const char *treename, TFile *file);  Add a TFriendElement to the list ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeSQL.html:2960,inherit,inherited,2960,doc/master/classTTreeSQL.html,https://root.cern,https://root.cern/doc/master/classTTreeSQL.html,1,['inherit'],['inherited']
Modifiability,"mber of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TMonitor * fMonitor;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimeOutTimer.html:13066,inherit,inherited,13066,doc/master/classTTimeOutTimer.html,https://root.cern,https://root.cern/doc/master/classTTimeOutTimer.html,1,['inherit'],['inherited']
Modifiability,"mber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:42:00 2015 » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction3PdfBinding_double_double_int_int_.html:46619,variab,variable,46619,root/html604/RooCFunction3PdfBinding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html604/RooCFunction3PdfBinding_double_double_int_int_.html,2,['variab'],['variable']
Modifiability,"mber, Double_t *arr);  Save array as C++ code Returns name of created array. ;  ; void SaveHistogramAndFunctions (std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option);  Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes. ;  ; Double_t ** ShrinkAndCopy (Int_t size, Int_t iend);  if size*2 <= fMaxSize allocate new arrays of size points, copy points [0,oend). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fEXhigh;  [fNpoints] array of X high errors ;  ; Double_t * fEXhighd;  [fNpoints] array of X high displacements ;  ; Double_t * fEXlow;  [fNpoints] array of X low errors ;  ; Double_t * fEXlowd;  [fNpoints] array of X low displacements ;  ; Double_t * fEYhigh;  [fNpoints] array of Y high errors ;  ; Double_t * fEYhighd;  [fNpoints] array of Y high displacements ;  ; Double_t * fEYlow;  [fNpoints] array of Y low errors ;  ; Double_t * fEYlowd;  [fNpoints] array of Y low displacements ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:32003,inherit,inherited,32003,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,1,['inherit'],['inherited']
Modifiability,"mber, labels the term, the second the variable. More information is given in the class description ; Definition at line 2413 of file TMultiDimFit.cxx. ◆ Streamer(). void TMultiDimFit::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TMultiDimFit::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 207 of file TMultiDimFit.h. ◆ TestFunction(). Bool_t TMultiDimFit::TestFunction ; (; Double_t ; squareResidual, . Double_t ; dResidur . ). protectedvirtual . PRIVATE METHOD: Test whether the currently considered function contributes to the fit. ; See also class description ; Definition at line 2470 of file TMultiDimFit.cxx. Member Data Documentation. ◆ fBinVarX. Int_t TMultiDimFit::fBinVarX. protected . Number of bin in independent variables. ; Definition at line 98 of file TMultiDimFit.h. ◆ fBinVarY. Int_t TMultiDimFit::fBinVarY. protected . Number of bin in dependent variables. ; Definition at line 99 of file TMultiDimFit.h. ◆ fChi2. Double_t TMultiDimFit::fChi2. protected . Chi square of fit. ; Definition at line 85 of file TMultiDimFit.h. ◆ fCoefficients. TVectorD TMultiDimFit::fCoefficients. protected . Vector of the final coefficients. ; Definition at line 82 of file TMultiDimFit.h. ◆ fCoefficientsRMS. TVectorD TMultiDimFit::fCoefficientsRMS. protected . Vector of RMS of coefficients. ; Definition at line 83 of file TMultiDimFit.h. ◆ fCorrelationCoeff. Double_t TMultiDimFit::fCorrelationCoeff. protected . Multi Correlation coefficient. ; Definition at line 92 of file TMultiDimFit.h. ◆ fCorrelationMatrix. TMatrixD TMultiDimFit::fCorrelationMatrix. protected . Correlation matrix. ; Definition at line 93 of file TMultiDimFit.h. ◆ fError. Double_t TMultiDimFit::fError. protected . Error from parametrization. ; Definition at line 88 of file TMultiDimFit.h. ◆ fFitter. TVirtualFitter* TMultiDimFit::fFitter. protected . Definition at line 101 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:60986,variab,variables,60986,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variables']
Modifiability,"mber.; 87The keywords, kRed, kBlue, kYellow, kPink, etc are defined in the header file __Rtypes.h__; 88that is included in all ROOT other header files. We strongly recommend to use these keywords; 89in your code instead of hardcoded color numbers, eg:; 90~~~ {.cpp}; 91 myObject.SetFillColor(kRed);; 92 myObject.SetFillColor(kYellow-10);; 93 myLine.SetLineColor(kMagenta+2);; 94~~~; 95 ; 96Begin_Macro; 97{; 98 TColorWheel *w = new TColorWheel();; 99 auto cw = new TCanvas(""cw"",""cw"",0,0,400,400);; 100 w->SetCanvas(cw);; 101 w->Draw();; 102}; 103End_Macro; 104 ; 105### Special case forcing black&white output.; 106If the current style fill area color is set to 0, then ROOT will force; 107a black&white output for all objects with a fill area defined and independently; 108of the object fill style.; 109 ; 110\anchor ATTFILL2; 111## Fill Area style; 112The fill area style defines the pattern used to fill a polygon.; 113The fill area style of any class inheriting from `TAttFill` can; 114be changed using the method `SetFillStyle` and retrieved using the; 115method `GetFillStyle`.; 116### Conventions for fill styles:; 117 ; 118 - 0 : hollow; 119 - 1001 : Solid; 120 - 3000+pattern_number (see below); 121 - For TPad only:; 122 ; 123 - 4000 :the window is transparent.; 124 - 4000 to 4100 the window is 100% transparent to 100% opaque.; 125 ; 126 The pad transparency is visible in binary outputs files like gif, jpg, png etc ..; 127 but not in vector graphics output files like PS, PDF and SVG. This convention; 128 (fill style > 4000) is kept for backward compatibility. It is better to use; 129 the color transparency instead.; 130 ; 131pattern_number can have any value from 1 to 25 (see table), or any; 132value from 100 to 999. For the latest the numbering convention is the following:; 133~~~ {.cpp}; 134 pattern_number = ijk (FillStyle = 3ijk); 135 ; 136 i (1-9) : specify the space between each hatch; 137 1 = 1/2mm 9 = 6mm; 138 ; 139 j (0-9) : specify angle between 0 and 90 degrees; 140",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAttFill_8cxx_source.html:4267,inherit,inheriting,4267,doc/master/TAttFill_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAttFill_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"mberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TMVA::SVEventSVEvent(); TMVA::SVEventSVEvent(const TMVA::SVEvent&); TMVA::SVEventSVEvent(const TMVA::Event*, Float_t, Bool_t isSignal = kFALSE); TMVA::SVEventSVEvent(const vector<Float_t>*, Float_t alpha, Int_t typeFlag, UInt_t ns); TMVA::SVEventSVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); voidUpdateErrorCache(Float_t upercache). Data Members; private:. Float_tfAlphalagrange multiplier; Float_tfAlpha_plagrange multiplier; const Float_tfCweightsvm cost weight; vector<Float_t>fDataVector; Float_tfErrorCacheoptimization parameter; Int_tfIdxindex flag; Int_tfIsShrinkedshrinking flag, see documentation; Float_t*fLinepointer to column of kerenl matrix ; UInt_tfNVarnumber of variables; UInt_tfNsdocumentation; const Float_tfTargetregression target; const Int_tfTypeFlagis sig or bkg - svm requieres 1 for sig and -1 for bkg. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SVEvent(). SVEvent(const TMVA::Event* , Float_t , Bool_t isSignal = kFALSE); constructor. SVEvent(const vector<Float_t>* , Float_t alpha, Int_t typeFlag, UInt_t ns); constructor. SVEvent(const vector<Float_t>* svector, Float_t alpha, Float_t alpha_p, Int_t typeFlag); constructor. ~SVEvent(); destructor. void Print(ostream& os) const; printout. void PrintData(); printout. SVEvent(). void SetAlpha(Float_t alpha); { fAlpha = alpha; }. void SetAlpha_p(Float_t alpha); { fAlpha_p = alpha; }. void SetErrorCache(Float_t err_cache); { fErrorCache = err_cache; }. void SetIsShrinked(Int_t isshrinked); { fIsShrinked = isshrinked; }. void SetLine(Float_t* line); { fLine = line; }. void SetIdx(Int_t idx); { fIdx = idx; }. void SetNs(UInt_t ns); { fNs = ns; }. void UpdateErrorCache(Float_t upercache); { fErrorCache += upercache; }. std::vector<Float_t>* GetDataVector(); { return &fDataVector; }. Float_t GetAlpha() const; { return fAlpha; }. Float_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__SVEvent.html:2087,Inherit,Inheritance,2087,root/html532/TMVA__SVEvent.html,https://root.cern,https://root.cern/root/html532/TMVA__SVEvent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. Bool_tIsValid(Int_t field). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. ULong_t*fFieldLengthlength of each field in the row; char**fFieldscurrent row; MYSQL_RES*fResultcurrent result set. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMySQLRow(void* result, ULong_t rowHandle); Single row of query result. ~TMySQLRow(); Destroy row object. void Close(Option_t* opt = """"); Close row. Bool_t IsValid(Int_t field); Check if row is open and field index within range. ULong_t GetFieldLength(Int_t field); Get length in bytes of specified field. const char * GetField(Int_t field); Get specified field from row (0 <= field < GetFieldCount()). TMySQLRow(void* result, ULong_t rowHandle). » Author: Fons Rademakers 15/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/mysql:$Id$ » Last generated: 2015-03-14 16:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMySQLRow.html:5442,Inherit,Inheritance,5442,root/html534/TMySQLRow.html,https://root.cern,https://root.cern/root/html534/TMySQLRow.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers (Methods); public:. TPyMultiGradFunction(PyObject* self = 0); virtual~TPyMultiGradFunction(); static TClass*Class(); virtual ROOT::Math::IBaseFunctionMultiDim*Clone() const; doubleROOT::Math::IGradientMultiDim::Derivative(const double* x, unsigned int icoord = 0) const; virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const; virtual voidFdF(const double* x, double& f, double* df) const; virtual voidGradient(const double* x, double* grad) const; virtual TClass*IsA() const; virtual unsigned intNDim() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TPyMultiGradFunction(const TPyMultiGradFunction& src); TPyMultiGradFunction&operator=(const TPyMultiGradFunction&). Data Members; private:. PyObject*fPySelf! actual python object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyMultiGradFunction(PyObject* self = 0); Construct a TPyMultiGradFunction derived with <self> as the underlying. ~TPyMultiGradFunction(); Destructor. Only deref if still holding on to Py_None (circular otherwise). unsigned int NDim() const; Simply forward the call to python self. double DoEval(const double* x) const; Simply forward the call to python self. void Gradient(const double* x, double* grad) const; Simply forward the call to python self. void FdF(const double* x, double& f, double* df) const; Simply forward the call to python self. double DoDerivative(const double* x, unsigned int icoord) const; Simply forward the call to python self. ROOT::Math::IBaseFunctionMultiDim* Clone() const; Math::IMultiGenFunction implementation. { return new TPyMultiGenFunction( fPySelf ); }. TPyMultiGenFunction& operator=(const TPyMultiGradFunction& ); { return *this; }. TPyMultiGradFunction(PyObject* self = 0); ctor/dtor, and assignment. » Last c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPyMultiGradFunction.html:1377,Inherit,Inheritance,1377,root/html532/TPyMultiGradFunction.html,https://root.cern,https://root.cern/root/html532/TPyMultiGradFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers (Methods); public:. virtual~TAttFill(); static TClass*Class(); voidCopy(TAttFill& attfill) const; virtual Color_tGetFillColor() const; virtual Style_tGetFillStyle() const; virtual TClass*IsA() const; virtual Bool_tIsTransparent() const; virtual voidModify(); TAttFill&operator=(const TAttFill&); virtual voidResetAttFill(Option_t* option = """"); virtual voidSaveFillAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1001); virtual voidSetFillAttributes()MENU ; virtual voidSetFillColor(Color_t fcolor); virtual voidSetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidSetFillStyle(Style_t fstyle); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TAttFill(); TAttFill(const TAttFill&); TAttFill(Color_t fcolor, Style_t fstyle). Data Members; protected:. Color_tfFillColorfill area color; Style_tfFillStylefill area style. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttFill(); AttFill default constructor.; Default fill attributes are taking from the current style. TAttFill(Color_t fcolor, Style_t fstyle); AttFill normal constructor.; color Fill Color; style Fill Style. ~TAttFill(); AttFill destructor. void Copy(TAttFill& attfill) const; Copy this fill attributes to a new TAttFill. void Modify(); Change current fill area attributes if necessary. void ResetAttFill(Option_t* option = """"); Reset this fill attributes to default values. void SaveFillAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1001); Save fill attributes as C++ statement(s) on output stream out. void SetFillAttributes(); Invoke the DialogCanvas Fill attributes. void SetFillColorAlpha(Color_t fcolor, Float_t falpha); Set a transparent fill color. falpha defines the percentage of; the color opacity from 0. (fully transparent) to 1. (fully opaque). Bool_t IsTransparent() const; { return fFillStyle >= 4000 &&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAttFill.html:7433,Inherit,Inheritance,7433,root/html602/TAttFill.html,https://root.cern,https://root.cern/root/html602/TAttFill.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers ; RooGExpModel Class ReferenceRooFit » RooFit. ; The RooGExpModel is a RooResolutionModel implementation that models a resolution function that is the convolution of a Gaussian with a one-sided exponential. ; Such objects can be used for analytical convolutions with classes inheriting from RooAbsAnaConvPdf. ; \[; \mathrm{GExp} = \exp \left( -\frac{1}{2} \left(\frac{x-\mu}{\sigma} \right)^2 \right)^2; \otimes \exp\left( -\frac{x}{\tau} \right); \]. Definition at line 25 of file RooGExpModel.h. Public Types; enum  Type { Normal; , Flipped; };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGExpModel.html:918,inherit,inherited,918,doc/master/classRooGExpModel.html,https://root.cern,https://root.cern/doc/master/classRooGExpModel.html,4,['inherit'],['inherited']
Modifiability,"mbers ; THaarMatrixT< Element > Class Template Reference. ; template<class Element>; class THaarMatrixT< Element >; Definition at line 122 of file TMatrixTLazy.h. Public Member Functions;  THaarMatrixT ();  ;  THaarMatrixT (Int_t n, Int_t no_cols=0);  ; virtual ~THaarMatrixT ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTLazy< Element >;  TMatrixTLazy ();  ;  TMatrixTLazy (Int_t nrows, Int_t ncols);  ;  TMatrixTLazy (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  ;  ~TMatrixTLazy () override;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHaarMatrixT.html:1284,inherit,inherited,1284,doc/master/classTHaarMatrixT.html,https://root.cern,https://root.cern/doc/master/classTHaarMatrixT.html,1,['inherit'],['inherited']
Modifiability,"mbers ; TProofPlayer Class ReferencePROOF » PROOF kernel Libraries. ; Internal class steering processing in PROOF. ; Instances of the TProofPlayer class are created on the worker nodes per session and do the processing. Instances of its subclass - TProofPlayerRemote are created per each query on the master(s) and on the client. On the master(s), TProofPlayerRemote coordinate processing, check the dataset, create the packetizer and take care of merging the results of the workers. The instance on the client collects information on the input (dataset and selector), it invokes the Begin() method and finalizes the query by calling Terminate(). ; Definition at line 60 of file TProofPlayer.h. Classes; class  TCleanup;  . Public Types; enum  EStatusBits { kDispatchOneEvent = (1ULL << ( 15 )); , kIsProcessing = (1ULL << ( 16 )); , kMaxProcTimeReached = (1ULL << ( 17 )); , kMaxProcTimeExtended = (1ULL << ( 18 )); };  ;  Public Types inherited from TVirtualProofPlayer; enum  EExitStatus { kFinished; , kStopped; , kAborted; };  ; enum  EStatusBits { kIsSubmerger = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofPlayer (TProof *proof=0);  Default ctor. ;  ;  ~TProofPlayer () override;  Destructor. ;  ; void AddEventsProcessed (Long64_t ev) override;  ; void AddInput (TObject *inp) override;  Add object to input list. ;  ; void AddOutput (TList *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayer.html:1288,inherit,inherited,1288,doc/master/classTProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTProofPlayer.html,2,['inherit'],['inherited']
Modifiability,"mbers, TOperatorNewHelper and BranchProxy implementations classes.; Several definition where moved from the global or ROOT namespace to the ROOT::Details namespace as they are intended to be used in ‘expert’ level code and have a lower level of backward compatibility requirement. This includes TCollectionProxyInfo, TSchemaRuleSet.; Interpreter; ROOT can now dump the context of STL collections, for instance map<string,int>. A few ROOT types print their content, too.; Fixed the handling of the current directory in #include of system headers, avoid problem with local files named new or vector.; Fixed the issue with the ROOT special variable where the objects were read from the file at each and every access by caching those object. See ROOT-7830 for example.; This release contains several bug fixes and improvements, notably in unloading and performance. NOTE: The GCC 5 ABI is not supported yet, due to a lack of support in clang. I/O Libraries; hadd; We extended the hadd options to allow more control on the compression settings use for the output file. In particular the new option -fk allows for a copy of the input files with no decompressions/recompression of the TTree baskets even if they do not match the requested compression setting.; New options:. -ff allows to force the compression setting to match the one from the first input; -fk[0-209] allows to keep all the basket compressed as is and to compress the meta data with the given compression setting or the compression setting of the first input file.; -a option append to existing file; The verbosity level is now optional after -v. Command line utilities; We added command line utilities to streamline very common operations performed on root files, like listing their content or creating directories. The command line utilities are: - rootbrowse: to open the file in a TBrowser - rootcp: to copy content from one file to another - rooteventselector: to select a subset of the events in a tree contained in a file - rootls: t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v606/release-notes.html:7491,extend,extended,7491,doc/v606/release-notes.html,https://root.cern,https://root.cern/doc/v606/release-notes.html,1,['extend'],['extended']
Modifiability,"mbers.; The internal arrays with a maximum dimension depending on the maximum number of parameters are now data members arrays with a dynamic dimension such that one can fit very large problems by simply initialising the TMinuit constructor with the maximum number of parameters.; The include file Minuit.h has been commented as much as possible using existing comments in the code or the printed documentation; The original Minuit subroutines are now member functions.; Constructors and destructor have been added.; Instead of passing the FCN function in the argument list, the addresses of this function is stored as pointer in the data members of the class. This is by far more elegant and flexible in an interactive environment. The member function SetFCN can be used to define this pointer.; The ROOT static function Printf is provided to replace all format statements and to print on currently defined output file.; The functions SetObjectFit(TObject * obj)/GetObjectFit() can be used inside the FCN function to set/get a referenced object instead of using global variables. Basic concepts of MINUIT; The MINUIT package acts on a multiparameter Fortran function to which one must give the generic name FCN. In the ROOT implementation, the function FCN is defined via the MINUIT SetFCN member function when an Histogram.Fit command is invoked. The value of FCN will in general depend on one or more variable parameters.; To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D) the Fit function defines the Minuit fitting function as being H1FitChisquare or H1FitLikelihood depending on the options selected. H1FitChisquare calculates the chisquare between the user fitting function (gaussian, polynomial, user defined,etc) and the data for given values of the parameters. It is the task of MINUIT to find those values of the parameters which give the lowest value of chisquare. Basic concepts - The transformation for parameters with limits.; For variable parameters w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:1715,variab,variables,1715,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['variab'],['variables']
Modifiability,"mbers; data members; class charts. ROOT; » CORE; » BASE; » TPluginHandler. class TPluginHandler: public TObject. TPluginManager. This class implements a plugin library manager. It keeps track of; a list of plugin handlers. A plugin handler knows which plugin; library to load to get a specific class that is used to extend the; functionality of a specific base class and how to create an object; of this class. For example, to extend the base class TFile to be; able to read RFIO files one needs to load the plugin library; libRFIO.so which defines the TRFIOFile class. This loading should; be triggered when a given URI contains a regular expression defined; by the handler.; Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like <BaseClass>/PX0_<PluginClass>.C,; e.g.:; TFile/P10_TRFIOFile.C, TSQLServer/P20_TMySQLServer.C, etc.; to allow easy sorting and grouping. If the BaseClass is in a; namespace the directory must have the name NameSpace@@BaseClass as; : is a reserved pathname character on some operating systems.; Macros not beginning with 'P' and ending with "".C"" are ignored.; These macros typically look like:. void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }. Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:. Plugin.TFile: ^rfio: TRFIOFile RFIO ""<constructor>""; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginHandler.html:1146,plugin,plugin,1146,root/html528/TPluginHandler.html,https://root.cern,https://root.cern/root/html528/TPluginHandler.html,10,['plugin'],['plugin']
Modifiability,"mbers; data members; class charts. ROOT; » CORE; » BASE; » TPluginManager. class TPluginManager: public TObject. TPluginManager. This class implements a plugin library manager. It keeps track of; a list of plugin handlers. A plugin handler knows which plugin; library to load to get a specific class that is used to extend the; functionality of a specific base class and how to create an object; of this class. For example, to extend the base class TFile to be; able to read RFIO files one needs to load the plugin library; libRFIO.so which defines the TRFIOFile class. This loading should; be triggered when a given URI contains a regular expression defined; by the handler.; Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like <BaseClass>/PX0_<PluginClass>.C,; e.g.:; TFile/P10_TRFIOFile.C, TSQLServer/P20_TMySQLServer.C, etc.; to allow easy sorting and grouping. If the BaseClass is in a; namespace the directory must have the name NameSpace@@BaseClass as; : is a reserved pathname character on some operating systems.; Macros not beginning with 'P' and ending with "".C"" are ignored.; These macros typically look like:. void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }. Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:. Plugin.TFile: ^rfio: TRFIOFile RFIO ""<constructor>""; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginManager.html:1146,plugin,plugin,1146,root/html528/TPluginManager.html,https://root.cern,https://root.cern/root/html528/TPluginManager.html,10,['plugin'],['plugin']
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<float>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<float>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TImpProxy_float_.html:4266,Inherit,Inheritance,4266,root/html602/ROOT__TImpProxy_float_.html,https://root.cern,https://root.cern/root/html602/ROOT__TImpProxy_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<float>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<float>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TImpProxy_float_.html:4266,Inherit,Inheritance,4266,root/html604/ROOT__TImpProxy_float_.html,https://root.cern,https://root.cern/root/html604/ROOT__TImpProxy_float_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<short>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<short>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TImpProxy_short_.html:4266,Inherit,Inheritance,4266,root/html602/ROOT__TImpProxy_short_.html,https://root.cern,https://root.cern/root/html602/ROOT__TImpProxy_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(const ROOT::TImpProxy<short>& ). TClaImpProxy & operator=(const ROOT::TImpProxy<short>& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TImpProxy_short_.html:4266,Inherit,Inheritance,4266,root/html604/ROOT__TImpProxy_short_.html,https://root.cern,https://root.cern/root/html604/ROOT__TImpProxy_short_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TArrayProxy_-p0TArrayType_unsigned_int_0___.html:4976,Inherit,Inheritance,4976,root/html602/ROOT__TArrayProxy_-p0TArrayType_unsigned_int_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TArrayProxy_-p0TArrayType_unsigned_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TArrayProxy<ROOT::TArrayType<unsigned int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TArrayProxy_-p0TArrayType_unsigned_int_0___.html:4976,Inherit,Inheritance,4976,root/html604/ROOT__TArrayProxy_-p0TArrayType_unsigned_int_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TArrayProxy_-p0TArrayType_unsigned_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_ULong64_t_0___.html:4958,Inherit,Inheritance,4958,root/html602/ROOT__TClaArrayProxy_-p0TArrayType_ULong64_t_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TClaArrayProxy_-p0TArrayType_ULong64_t_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TClaArrayProxy<ROOT::TArrayType<ULong64_t,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_ULong64_t_0___.html:4958,Inherit,Inheritance,4958,root/html604/ROOT__TClaArrayProxy_-p0TArrayType_ULong64_t_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TClaArrayProxy_-p0TArrayType_ULong64_t_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TThread*fConsumerconsumer thread; TFile*fFilereference to the file; TMutex*fMutexPendingListmutex for the pending list; TMutex*fMutexReadListmutex for the list of read blocks; TMutex*fMutexSynchmutex for synchronisation between working and main thread; TCondition*fNewBlockAddedcondition used to signal the addition of a new pending block; TStringfPathCachepath to the cache directory; TList*fPendingBlockslist of pending block to be read; TCondition*fReadBlockAddedcondition usd to signal the addition of a new red block; TList*fReadBlockslist of block read; TSemaphore*fSemsemaphore used to kill the consumer thread; TStopwatchfWaitTimetime wating to prefetch a buffer (in usec). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFilePrefetch(TFile* ); Constructor. ~TFilePrefetch(); Destructor. void ReadAsync(TFPBlock* , Bool_t& ); Read one block and insert it in prefetchBuffers list. void ReadListOfBlocks(); Get blocks specified in prefetchBlocks. Bool_t BinarySearchReadList(TFPBlock* , Long64_t , Int_t , Int_t* ); Search for a requested element in a block and return the index. Long64_t GetWaitTime(); Return the time spent wating for buffer to be read in microseconds. Bool_t ReadBuffer(char* , Long64_t , Int_t ); Return a prefetched element. void ReadBlock(Long64_t* , Int_t* , Int_t ); Create a TFPBlock object or recycle one and add it to the prefetchBlocks list. void AddPendingBlock(TFPBlock* ); Safe method to add a block to the pendingList. TFPBlock* GetPendingBlock(); Safe method to remove a block from the pendingList. void AddReadBlock(TFPBlock* ); Safe method to add a block to the readList. TFPBlock* CreateBlockObj(Long64_t* , Int_t* , Int_t ); Create a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFilePrefetch.html:6524,Inherit,Inheritance,6524,root/html532/TFilePrefetch.html,https://root.cern,https://root.cern/root/html532/TFilePrefetch.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbers; public:. static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::kLeastSquare; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::kLogLikelihood; static ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::kUndefined. protected:. shared_ptr<ROOT::Fit::BinData>ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDim,ROOT::Fit::BinData>::fData; shared_ptr<ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::IModelFunction>ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDim,ROOT::Fit::BinData>::fFunc. private:. vector<double>fGradfor derivatives; boolfIsExtendedflag to indicate if is extended (when false is a Multinomial lieklihood), default is true; unsigned intfNEffPointsnumber of effective points used in the fit; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new PoissonLikelihoodFCN(*this); }. unsigned int NFitPoints() const; effective points used in the fit. { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th likelihood element and its gradient. void Gradient(const double* x, double* g) const; evaluate gradient. bool IsWeighted() const; { return (fWeight != 0); }. void UseSumOfWeights(); Use the weights in evaluating the likelihood. void UseSumOfWeightSquare(bool on = true); Use sum of the weight squared in evaluating the likelihood; (this is needed for calculating the errors). double DoEval(const double* x) const. Evaluation of the function (required by int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:6269,extend,extended,6269,root/html604/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,2,['extend'],['extended']
Modifiability,"mbers; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfG3CompatibleVolumeNamesoption to convert volumes names to; static TGeoMCGeometry*fgInstancesingleton instance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMCGeometry(const char* name, const char* title, Bool_t g3CompatibleVolumeNames = false). Standard constructor. TGeoMCGeometry(). Default constructor. ~TGeoMCGeometry(). Destructor. TGeoManager* GetTGeoManager() const; Return TGeoManager global pointer.; Create a new TGeoManager object if it does not yet exist. Double_t* CreateDoubleArray(Float_t* array, Int_t size) const; Converts Float_t* array to Double_t*,; !! The new array has to be deleted by user. void Vname(const char* name, char* vname) const. convert name to upper case. Make vname at least 4 chars. void Material(Int_t& kmat, const char* name, Double_t a, Double_t z, Double_t dens, Double_t radl, Double_t absl, Float_t* buf, Int_t nwbuf). Defines a Material. kmat number assigned to the material; name material name; a atomic mass in au; z atomic number; dens density in g/cm3; absl absorbtion length in cm; if >=0 it is ignored and the program; calculates it, if <0. -absl is t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoMCGeometry.html:9673,Inherit,Inheritance,9673,root/html602/TGeoMCGeometry.html,https://root.cern,https://root.cern/root/html602/TGeoMCGeometry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbersCount() const; Float_tGetMiddle() const; virtual const char*GetName() const; ENodeTypeGetNodeType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStructNode*GetParent() const; void*GetPointer() const; ULong_tGetRelativeMembersCount() const; ULong_tGetRelativeSize() const; ULong_tGetRelativeVolume() const; Float_tGetRelativeVolumeRatio(); ULong_tGetSize() const; virtual const char*TObject::GetTitle() const; ULong_tGetTotalSize() const; TStringGetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; ULong_tGetVolume() const; Float_tGetVolumeRatio(); Float_tGetWidth() const; Float_tGetX() const; Float_tGetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCollapsed() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; boolIsVisible() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStructNode.html:3555,Inherit,InheritsFrom,3555,root/html532/TStructNode.html,https://root.cern,https://root.cern/root/html532/TStructNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"mbersCount() const; Float_tGetMiddle() const; virtual const char*GetName() const; ENodeTypeGetNodeType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TStructNode*GetParent() const; void*GetPointer() const; ULong_tGetRelativeMembersCount() const; ULong_tGetRelativeSize() const; ULong_tGetRelativeVolume() const; Float_tGetRelativeVolumeRatio(); ULong_tGetSize() const; virtual const char*TObject::GetTitle() const; ULong_tGetTotalSize() const; TStringGetTypeName() const; virtual UInt_tTObject::GetUniqueID() const; ULong_tGetVolume() const; Float_tGetVolumeRatio(); Float_tGetWidth() const; Float_tGetX() const; Float_tGetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsCollapsed() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; boolIsVisible() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TStructNod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStructNode.html:3435,Inherit,InheritsFrom,3435,root/html602/TStructNode.html,https://root.cern,https://root.cern/root/html602/TStructNode.html,2,['Inherit'],['InheritsFrom']
Modifiability,"mbie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Pixel_t fBackColor;  default background color ;  ; Pixel_t fBlack;  black color index ;  ; Colormap_t fDefaultColormap;  default colormap ;  ; TGWindow * fDefaultRoot;  default root window (base window of display) ;  ; TGFontPool * fFontPool;  font pool ;  ; Bool_t fForceRedraw;  redraw widgets as soon as possible ;  ; Pixel_t fForeColor;  default foreground color ;  ; TGGCPool * fGCPool;  graphics context pool ;  ; std::atomic< Bool_t > fGlobalNeedRedraw;  true if at least one window needs to be redrawn ;  ; Pixel_t fHilite;  default highlight color ;  ; TList * fIdleHandlers;  list of idle handlers ;  ; TGMimeTypes * fMimeTypeList;  mimetype list ;  ; TGPicturePool * fPicturePool;  pixmap pool ;  ; TList * fPlist;  list of popup windows used in HandleMaskEvent() ;  ; TGResourcePool * fResourcePool;  global GUI resource pool ;  ; TGWindow * fRoot;  current root window (changing root window allows embedding) ;  ; Pixel_t fSelBackColor;  default selection background color ;  ; Pixel_t fSelForeColor;  default selection foreground color ;  ; Pixel_t fShadow;  default shadow color ;  ; UInt_t fStyle;  GUI style (modern or classic) ;  ; TList * fUWHandlers;  list of event handlers for unknown windows ;  ; EGEventType fWaitForEvent;  event to wait for ;  ; Window_t fWaitForWindow;  window in which to wait for event ;  ; Pixel_t fWhite;  white color index ;  ; THashList * fWlist;  list of frames ;  ; Int_t fXfd;  file descriptor of connection to server ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Friends; class TGCocoa;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGClient.html:19173,inherit,inherited,19173,doc/master/classTGClient.html,https://root.cern,https://root.cern/doc/master/classTGClient.html,1,['inherit'],['inherited']
Modifiability,"mbie(). private:. stringGetDirPath(TDirectory* dir). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. vector<RooStats::HistFactory::Asimov>fAsimovDatasets; intfBinHigh; intfBinLow; vector<RooStats::HistFactory::Channel>fChannels; vector<std::string>fConstantParams; boolfExportOnly; vector<RooStats::HistFactory::PreprocessFunction>fFunctionObjects; map<std::string,double>fGammaSyst; stringfInterpolationScheme; map<std::string,double>fLogNormSyst; doublefLumi; doublefLumiRelErr; map<std::string,double>fNoSyst; stringfOutputFilePrefix; vector<std::string>fPOI; map<std::string,double>fParamValues; map<std::string,double>fUniformSyst. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Measurement(); standard constructor. Measurement(const char* Name, const char* Title = """"); standard constructor specifying name and title of measurement. void AddConstantParam(const string& param); set a parameter in the model to be constant; the parameter does not have to exist yet, the information will be used when; the model is actually created. void SetParamValue(const string& param, double value); set parameter of the model to given value. void AddPreprocessFunction(string name, string expression, string dependencies); Add a preprocessed function by giving the function a name,; a functional expression, and a string with a bracketed list of dependencies (eg ""SigXsecOverSM[0,3]""). std::vector<std::string> GetPreprocessFunctions(); returns a list of defined proprocess function expressions. void AddGammaSyst(string syst, double uncert); set constraint term for given systematic to Gamma distribution. void AddLogNormSyst(string syst, d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__Measurement.html:8458,Inherit,Inheritance,8458,root/html534/RooStats__HistFactory__Measurement.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__Measurement.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mbined viewer/scene clip (set in scene::update); Short_tTGLSceneInfo::fLastLODLast combined viewer/scene lod (set in scene::lodify-scene-info).; Float_tTGLSceneInfo::fLastOLLineWLast combined viewer/scene outline line-width (set in scene::pre-draw).; Short_tTGLSceneInfo::fLastStyleLast combined viewer/scene style (set in scene::pre-draw).; Float_tTGLSceneInfo::fLastWFLineWLast combined viewer/scene wire-frame line-width (set in scene::pre-draw).; Float_tTGLSceneInfo::fOLLineWOptional override of scene outline line-width; TGLSceneBase*TGLSceneInfo::fScene; UInt_tTGLSceneInfo::fSceneStampScene's time-stamp on last update.; Short_tTGLSceneInfo::fStyleOptional override of scene style; TGLBoundingBoxTGLSceneInfo::fTransformedBBox; Bool_tTGLSceneInfo::fUpdateTimeoutedSet if update was interrupted.; Bool_tTGLSceneInfo::fViewCheckViewer side check if render is necessary.; TGLViewerBase*TGLSceneInfo::fViewer; Float_tTGLSceneInfo::fWFLineWOptional override of scene wire-frame line-width. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t CmpDrawElements(const TGLScene::DrawElement_t& de1, const TGLScene::DrawElement_t& de2). void ClearDrawElementVec(TGLScene::DrawElementVec_t& vec, Int_t maxSize). void ClearDrawElementPtrVec(TGLScene::DrawElementPtrVec_t& vec, Int_t maxSize). TSceneInfo(TGLViewerBase* view = 0, TGLScene* scene = 0). virtual ~TSceneInfo(). void ClearAfterRebuild(). void ClearAfterUpdate(). void Lodify(TGLRnrCtx& ctx). void PreDraw(). void PostDraw(). void ResetDrawStats(). void UpdateDrawStats(const TGLPhysicalShape& shape, Short_t lod). void DumpDrawStats(). » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLScene.h 32334 2010-02-12 11:52:13Z matevz $ » Last generated: 2011-11-03 20:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLScene__TSceneInfo.html:5833,Inherit,Inheritance,5833,root/html532/TGLScene__TSceneInfo.html,https://root.cern,https://root.cern/root/html532/TGLScene__TSceneInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from ROOT::v5::TFormula; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GetMaxima (Int_t &maxop, Int_t &maxpar, Int_t &maxconst);  static function to get the maximum value of 3 parameters -maxop : maximum number of operations -maxpar : maximum number of parameters -maxconst : maximum number of constants ;  ; static void SetMaxima (Int_t maxop=1000, Int_t maxpar=1000, Int_t maxconst=1000);  static function to set the maximum value of 3 parameters ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html:17960,inherit,inherited,17960,doc/master/structROOT_1_1v5_1_1TF1Data.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html,3,['inherit'],['inherited']
Modifiability,"mdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constCalls createHistogram(const char *name, const RooAbsRealLValue& xvar, const RooLinkedList& argList) c...Definition RooAbsData.cxx:561; yDouble_t y[n]Definition legend1.C:17; The caller takes ownership of the returned histogram ; Definition at line 673 of file RooAbsData.cxx. ◆ createHistogram() [3/5]. TH1 * RooAbsData::createHistogram ; (; const char * ; varNameList, . const RooCmdArg & ; binArgX = {}, . const RooCmdArg & ; binArgY = {}, . const RooCmdArg & ; binArgZ = {} . ); const. Create and fill a ROOT histogram TH1,TH2 or TH3 with the values of this dataset for the variables with given names. ; Parameters. [in]varNameListComma-separated variable names. ; [in]binArgXControl the binning for the x variable. ; [in]binArgYControl the binning for the y variable. ; [in]binArgZControl the binning for the z variable. . ReturnsHistogram now owned by user.; The possible binning command arguments for each axis are:. AutoBinning(Int_t nbins, Double_y margin) Automatically calculate range with given added fractional margin, set binning to nbins . AutoSymBinning(Int_t nbins, Double_y margin) Automatically calculate range with given added fractional margin, with additional constraint that mean of data is in center of range, set binning to nbins . Binning(const char* name) Apply binning with given name to x axis of histogram . Binning(RooAbsBinning& binning) Apply specified binning to x axis of histogram . Binning(int nbins, double lo, double hi) Apply specified binning to x axis of histogram. YVar(const RooAbsRealLValue& var,...) Observable to be mapped on y axis of ROOT histogram . ZVar(const RooAbsRealLValue& var,...) Observable to be mapped on z axis of ROOT histogram . Definition at line 598 of file RooAbsData.cxx. ◆ createHistogram() [4/5]. TH2F * RooAbsData::createHistogra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:41854,variab,variable,41854,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variable']
Modifiability,"mdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ); const. Create an object that represents the integral of the function over one or more observables listed in iset. ; The actual integration calculation is only performed when the returned object is evaluated. The name of the integral object is automatically constructed from the name of the input function, the variables it integrates and the range integrates over.; NoteThe integral over a PDF is usually not normalised (i.e., it is usually not 1 when integrating the PDF over the full range). In fact, this integral is used to compute the normalisation of each PDF. See the rf110 tutorial for details on PDF normalisation.; The following named arguments are accepted . Effect on integral creation . NormSet(const RooArgSet&) Specify normalization set, mostly useful when working with PDFs . NumIntConfig(const RooNumIntConfig&) Use given configuration for any numeric integration, if necessary . Range(const char* name) Integrate only over given range. Multiple ranges may be specified by passing multiple Range() arguments . PyROOT; The RooAbsReal::createIntegral() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 512 of file RooAbsReal.cxx. ◆ createIntegral() [6/6]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooNumIntConfig & ; cfg, . const char * ; rangeName = nullptr . ); const. inline . Create integral over observables in iset in range named rangeName using specified configuration for any numeric integration. ; Definition at line 220 of file RooAbsReal.h. ◆ createIntObj(). RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntObj ; (; const RooArgSet & ; iset, . const RooArgSet * ; nset, . const RooNumIntConfig * ; cfg, . const char * ; rangeName . ); const. protected . Inter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:90288,config,configuration,90288,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"mdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ); const. Create an object that represents the integral of the function over one or more observables listed in iset. ; The actual integration calculation is only performed when the returned object is evaluated. The name of the integral object is automatically constructed from the name of the input function, the variables it integrates and the range integrates over.; NoteThe integral over a PDF is usually not normalised (i.e., it is usually not 1 when integrating the PDF over the full range). In fact, this integral is used to compute the normalisation of each PDF. See the rf110 tutorial for details on PDF normalisation.; The following named arguments are accepted . Effect on integral creation . NormSet(const RooArgSet&) Specify normalization set, mostly useful when working with PDFs . NumIntConfig(const RooNumIntConfig&) Use given configuration for any numeric integration, if necessary . Range(const char* name) Integrate only over given range. Multiple ranges may be specified by passing multiple Range() arguments . PyROOT; The RooAbsReal::createIntegral() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 514 of file RooAbsReal.cxx. ◆ createIntegral() [6/6]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntegral ; (; const RooArgSet & ; iset, . const RooNumIntConfig & ; cfg, . const char * ; rangeName = nullptr . ); const. inline . Create integral over observables in iset in range named rangeName using specified configuration for any numeric integration. ; Definition at line 220 of file RooAbsReal.h. ◆ createIntObj(). RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntObj ; (; const RooArgSet & ; iset, . const RooArgSet * ; nset, . const RooNumIntConfig * ; cfg, . const char * ; rangeName . ); const. protected . Inter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:89020,config,configuration,89020,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"mdArg arg3, RooCmdArg arg4,; RooCmdArg arg5, RooCmdArg arg6, RooCmdArg arg7, RooCmdArg arg8). for documentation of options. RooFitResult* fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); Fit PDF to given dataset. If dataset is unbinned, an unbinned maximum likelihood is performed. If the dataset; is binned, a binned maximum likelihood is performed. By default the fit is executed through the MINUIT; commands MIGRAD, HESSE in succession. The following named arguments are supported. Options to control construction of -log(L). ConditionalObservables(const RooArgSet& set) -- Do not normalize PDF over listed observables; Extended(Bool_t flag) -- Add extended likelihood term, off by default; Range(const char* name) -- Fit only data inside range with given name; Range(Double_t lo, Double_t hi) -- Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; Multiple comma separated range names can be specified.; SumCoefRange(const char* name) -- Set the range in which to interpret the coefficients of RooAddPdf components; NumCPU(int num, int strat) -- Parallelize NLL calculation on num CPUs. Strategy 0 = RooFit::BulkPartition (Default) --> Divide events in N equal chunks; Strategy 1 = RooFit::Interleave --> Process event i%N in process N. Recommended for binned data with; a substantial number of zero-bins, which will be distributed across processes more equitably in this strategy; Strategy 2 = RooFit::SimComponents --> Process each component likelihood of a RooSimultaneous fully in a single process; and distribute components over processes. This approach can be benificial if normalization calculation time; dominates the total ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:54042,extend,extended,54042,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,9,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"mdArg& arg4,; 1265 const RooCmdArg& arg5, const RooCmdArg& arg6, const RooCmdArg& arg7, const RooCmdArg& arg8) const; 1266{; 1267 ; 1268 RooLinkedList l ;; 1269 l.Add((TObject*)&arg1) ; l.Add((TObject*)&arg2) ;; 1270 l.Add((TObject*)&arg3) ; l.Add((TObject*)&arg4) ;; 1271 l.Add((TObject*)&arg5) ; l.Add((TObject*)&arg6) ;; 1272 l.Add((TObject*)&arg7) ; l.Add((TObject*)&arg8) ;; 1273 ; 1274 return createHistogram(name,xvar,l) ;; 1275}; 1276 ; 1277 ; 1278////////////////////////////////////////////////////////////////////////////////; 1279/// Internal method implementing createHistogram; 1280 ; 1281TH1* RooAbsReal::createHistogram(const char *name, const RooAbsRealLValue& xvar, RooLinkedList& argList) const; 1282{; 1283 ; 1284 // Define configuration for this method; 1285 RooCmdConfig pc(""RooAbsReal::createHistogram("" + std::string(GetName()) + "")"");; 1286 pc.defineInt(""scaling"",""Scaling"",0,1) ;; 1287 pc.defineInt(""intBinning"",""IntrinsicBinning"",0,2) ;; 1288 pc.defineInt(""extended"",""Extended"",0,2) ;; 1289 ; 1290 pc.defineSet(""compSet"",""SelectCompSet"",0);; 1291 pc.defineString(""compSpec"",""SelectCompSpec"",0) ;; 1292 pc.defineSet(""projObs"",""ProjectedObservables"",0,nullptr) ;; 1293 pc.defineObject(""yvar"",""YVar"",0,nullptr) ;; 1294 pc.defineObject(""zvar"",""ZVar"",0,nullptr) ;; 1295 pc.defineMutex(""SelectCompSet"",""SelectCompSpec"") ;; 1296 pc.defineMutex(""IntrinsicBinning"",""Binning"") ;; 1297 pc.defineMutex(""IntrinsicBinning"",""BinningName"") ;; 1298 pc.defineMutex(""IntrinsicBinning"",""BinningSpec"") ;; 1299 pc.allowUndefined() ;; 1300 ; 1301 // Process & check varargs; 1302 pc.process(argList) ;; 1303 if (!pc.ok(true)) {; 1304 return nullptr ;; 1305 }; 1306 ; 1307 RooArgList vars(xvar) ;; 1308 RooAbsArg* yvar = static_cast<RooAbsArg*>(pc.getObject(""yvar"")) ;; 1309 if (yvar) {; 1310 vars.add(*yvar) ;; 1311 }; 1312 RooAbsArg* zvar = static_cast<RooAbsArg*>(pc.getObject(""zvar"")) ;; 1313 if (zvar) {; 1314 vars.add(*zvar) ;; 1315 }; 1316 ; 1317 auto projObs = pc.getSet(""projObs"");; 1318 R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:53154,extend,extended,53154,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['extend'],['extended']
Modifiability,"mdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection* whichVars = NULL) const; virtual THnSparse*GetAsSparseHist(RooAbsCollection& whichVars) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual RooRealVar*GetNLLVar() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual RooRealVar*GetWeightVar() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; RooStats::MarkovChainMarkovChain(); RooStats::MarkovChainMarkovChain(RooArgSet& parameters); RooStats::MarkovChainMarkovChain(const RooStats::MarkovChain&); RooStats::MarkovChainMarkovChain(const char* name, const char* title, RooArgSet& parameters); voidTObject::MayNotUse(const char* method) const; virtual Double_tNLL() const; virtual Double_tNLL(Int_t i) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__MarkovChain.html:3854,Inherit,InheritsFrom,3854,root/html532/RooStats__MarkovChain.html,https://root.cern,https://root.cern/root/html532/RooStats__MarkovChain.html,2,['Inherit'],['InheritsFrom']
Modifiability,"mdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); static TClass*Class(); virtual TClass*IsA() const; RooSimWSTool::BuildConfig&operator=(const RooSimWSTool::BuildConfig&); voidrestrictBuild(const char* catName, const char* stateList); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. RooSimWSTool::BuildConfigBuildConfig(); voidinternalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& /*legacyBuildConfig*/); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimWSTool__BuildConfig.html:5015,config,configuration,5015,root/html526/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html526/RooSimWSTool__BuildConfig.html,1,['config'],['configuration']
Modifiability,"me ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate value. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDerivative.html:48099,inherit,inherited,48099,doc/master/classRooDerivative.html,https://root.cern,https://root.cern/doc/master/classRooDerivative.html,5,['inherit'],['inherited']
Modifiability,"me ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TH3 ();  Default constructor. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type double. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type float. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t z, Double_t w);  Accumulate arguments in buffer. ;  ; Int_t BufferFill (Double_t, Double_t) override;  accumulate arguments in buffer. ;  ; virtual Int_t BufferFill (Double_t, Double_t, Double_t);  ; void DoFillProfileProjection (TProfile2D *p2, const TAxis &a1, const TAxis &a2, const TAxis &a3, Int_t bin1, Int_t bin2, Int_t bin3, Int_t inBin, Bool_t useWeights) const;  internal function to fill the bins of the projected profile 2D histogram called from DoProjectProfile2D ;  ; virtual TH1D * DoProject1D (const char *name, const char *title, const TAxis *projAxis, const TAx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:46623,variab,variable,46623,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['variab'],['variable']
Modifiability,"me ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void Begin1D (TTree *t);  Initialization for 1D Histogram. ;  ; virtual void Begin2D (TTree *t);  Initialization for 2D histogram. ;  ; virtual void Begin3D (TTree *t);  Initialization for 3D histogram. ;  ; void DefVar () override;  Define variables according to arguments. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the histgram with given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TH1 * fHistogram;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawHist.html:12161,variab,variable,12161,doc/master/classTProofDrawHist.html,https://root.cern,https://root.cern/doc/master/classTProofDrawHist.html,1,['variab'],['variable']
Modifiability,"me ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void processFile (const char *infile, Int_t nexp);  Read in study package. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::list< RooAbsStudy * > _studies;  ; RooWorkspace * _ws = nullptr;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStudyPackage.html:11054,inherit,inherited,11054,doc/master/classRooStudyPackage.html,https://root.cern,https://root.cern/doc/master/classRooStudyPackage.html,1,['inherit'],['inherited']
Modifiability,"me ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; TEveGeoShapeExtract * DumpShapeTree (TEveGeoShape *geon, TEveGeoShapeExtract *parent=nullptr);  Export this shape and its descendants into a geoshape-extract. ;  ; TGeoShape * MakePolyShape ();  Create derived TEveGeoShape form a TGeoCompositeShape. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  . Static Protected Member Functions; static TEveGeoShape * SubImportShapeExtract (TEveGeoShapeExtract *gse, TEveElement *parent);  Recursive version for importing a shape extract tree. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoShape.html:33883,inherit,inherited,33883,doc/master/classTEveGeoShape.html,https://root.cern,https://root.cern/doc/master/classTEveGeoShape.html,1,['inherit'],['inherited']
Modifiability,"me ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  THttpEngine (const char *name, const char *title);  constructor ;  ; virtual void Process ();  Method regularly called in main ROOT context. ;  ; void SetServer (THttpServer *serv);  ; virtual void Terminate ();  Method called when server want to be terminated. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; THttpServer * fServer {nullptr};  ! object server ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class THttpServer;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpEngine.html:10572,inherit,inherited,10572,doc/master/classTHttpEngine.html,https://root.cern,https://root.cern/doc/master/classTHttpEngine.html,1,['inherit'],['inherited']
Modifiability,"me ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; Double32_t fKinkAngle [3];  ; Int_t fKinkIndex [2];  ; Int_t fKinkLabel [2];  ; Int_t fKinkPdg [2];  ; TEveVector fPDaughter;  ; TEveVector fPMother;  ; Int_t fSign;  ; Int_t fStatus;  ; TEveVector fVDaughter;  ; TEveVector fVKink;  ; TEveVector fVMother;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TEveVSDStructs.h>. Inheritance diagram for TEveRecKink:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRecKink.html:9156,inherit,inherited,9156,doc/master/classTEveRecKink.html,https://root.cern,https://root.cern/doc/master/classTEveRecKink.html,1,['inherit'],['inherited']
Modifiability,"me ();  ; static void DisplayMarkerLineWidths ();  Display the table of markers with different line widths and their numbers. ;  ; static void DisplayMarkerTypes ();  Display the table of markers with their numbers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX;  X position of marker (left,center,etc..) ;  ; Double_t fY;  Y position of marker (left,center,etc..) ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int lev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker.html:13638,inherit,inherited,13638,doc/master/classTMarker.html,https://root.cern,https://root.cern/doc/master/classTMarker.html,1,['inherit'],['inherited']
Modifiability,"me ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Build ();  Desctiption: Build the node list, which is a list of nodes whose members in turn are lists of workers on the node. ;  . Private Attributes; TMap * fActiveNodes;  ; Int_t fMaxWrksNode;  ; Int_t fMinWrksNode;  ; Int_t fNActiveWrks;  ; Int_t fNCores;  ; Int_t fNNodes;  ; TMap * fNodes;  ; Int_t fNWrks;  ; TProof * fProof;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProofNodes.h>. Inheritance diagram for TProofNodes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofNodes.html:9941,inherit,inherited,9941,doc/master/classTProofNodes.html,https://root.cern,https://root.cern/doc/master/classTProofNodes.html,1,['inherit'],['inherited']
Modifiability,"me (TGeoVolume *, Option_t *="""", TGeoMatrix *=nullptr) override;  ; void PrintOverlaps () const override;  ; void RandomPoints (const TGeoVolume *, Int_t, Option_t *="""") override;  ; void RandomRays (Int_t, Double_t, Double_t, Double_t, const char *, Bool_t) override;  ; void Raytrace (Option_t *="""") override;  ; TGeoNode * SamplePoints (Int_t, Double_t &, Double_t, const char *) override;  ; void SetBombFactors (Double_t=1.3, Double_t=1.3, Double_t=1.3, Double_t=1.3) override;  ; void SetCheckedNode (TGeoNode *) override;  ; void SetClippingShape (TGeoShape *) override;  ; void SetExplodedView (Int_t=0) override;  ; void SetGeoManager (TGeoManager *) override;  ; void SetIteratorPlugin (TGeoIteratorPlugin *) override;  ; void SetNmeshPoints (Int_t) override;  ; void SetNsegments (Int_t=20) override;  ; void SetRaytracing (Bool_t=kTRUE) override;  ; void SetTopVisible (Bool_t on=kTRUE) override;  ; void SetTopVolume (TGeoVolume *) override;  ; void SetVisLevel (Int_t=3) override;  ; void SetVisOption (Int_t=0) override;  ; Int_t ShapeDistancetoPrimitive (const TGeoShape *, Int_t, Int_t, Int_t) const override;  ; void Test (Int_t, Option_t *) override;  ; void TestOverlaps (const char *) override;  ; Bool_t TestVoxels (TGeoVolume *) override;  ; void UnbombTranslation (const Double_t *, Double_t *) override;  ; Double_t Weight (Double_t, Option_t *=""v"") override;  ;  Public Member Functions inherited from TVirtualGeoPainter;  TVirtualGeoPainter (TGeoManager *manager);  Geometry painter default constructor. ;  ;  ~TVirtualGeoPainter () override;  Geometry painter default destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html:5174,inherit,inherited,5174,doc/v632/classROOT_1_1RGeoPainter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoPainter.html,2,['inherit'],['inherited']
Modifiability,"me (TObjString), or names of unconnected bins ;  ; TObjArray * fAxisList;  for each axis the bin borders (TVectorD) ;  ; Double_t fBinFactorConstant;  common scale factor for all bins of this node ;  ; TObject * fBinFactorFunction;  function to calculate a scale factor from bin centres (may be a TF1 or a TVectorD ;  ; Int_t fDistributionSize;  number of bins in this node's distribution ;  ; Int_t fFirstBin;  global bin number of the first bin ;  ; Int_t fHasOverflow;  bit fields indicating whether there are overflow bins on the axes ;  ; Int_t fHasUnderflow;  bit fields indicating whether there are underflow bins on the axes ;  ; Int_t fLastBin;  global bin number of the last(+1) bin, including daughters ;  ; TUnfoldBinning * nextNode;  next sister ;  ; TUnfoldBinning * parentNode;  mother node ;  ; TUnfoldBinning * prevNode;  previous sister ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TUnfoldBinning.h>. Inheritance diagram for TUnfoldBinning:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorMAXDIM maximum numner of axes per distribution . Definition at line 88 of file TUnfoldBinning.h. Constructor & Destructor Documentation. ◆ TUnfoldBinning() [1/2]. TUnfoldBinning::TUnfoldBinning ; (; const char * ; name = nullptr, . Int_t ; nBins = 0, . const char * ; binNames = nullptr . ). create a new node without axis ; Parameters. [in]nameidentifier of the node ; [in]nBinnumber of unconnected bins (could be zero) ; [in]binNames(optional) names of the bins separated by ';' . Definition at line 209 of file TUnfoldBinning.cxx. ◆ TUnfoldBinning() [2/2]. TUnfoldBinning::TUnfoldBinning ; (; const TAxis & ; axis, . Int_t ; includeUnderflow, . Int_t ; includeOverflow . ). create a new node c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldBinning.html:24364,inherit,inherited,24364,doc/master/classTUnfoldBinning.html,https://root.cern,https://root.cern/doc/master/classTUnfoldBinning.html,1,['inherit'],['inherited']
Modifiability,"me *f) override;  Set list view container. ;  ; virtual void SetDefaultColumnWidth (TGVFileSplitter *splitter);  Set default column width of the columns headers. ;  ; virtual void SetDefaultHeaders ();  Default headers are: Name, Attributes, Size, Owner, Group, Modified. ;  ; virtual void SetHeader (const char *s, Int_t hmode, Int_t cmode, Int_t idx);  Set header button idx [0-fNColumns>, hmode is the x text alignmode (ETextJustification) for the header text and cmode is the x text alignmode for the item text. ;  ; virtual void SetHeaders (Int_t ncolumns);  Set number of headers, i.e. ;  ; virtual void SetIncrements (Int_t hInc, Int_t vInc);  Set horizontal and vertical scrollbar increments. ;  ; virtual void SetViewMode (EListViewMode viewMode);  Set list view mode. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCanvas;  TGCanvas (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kSunkenFrame|kDoubleBorder, Pixel_t back=GetDefaultFrameBackground());  Create a canvas object. ;  ;  ~TGCanvas () override;  Delete canvas. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Adding a frame to a canvas is actually adding the frame to the viewport container. ;  ; virtual void ClearViewPort ();  Clear view port and redraw content. ;  ; void DrawBorder () override;  Draw canvas border. ;  ; TGFrame * GetContainer () const;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual Int_t GetHsbPosition () const;  Get position of horizontal scrollbar. ;  ; TGHScrollBar * GetHScrollbar () const;  ; Int_t GetScrolling () const;  ; TGViewPort * GetViewPort () const;  ; virtual Int_t GetVsbPosition () const;  Get position of vertical scrollbar. ;  ; TGVScrollBar * GetVScrollbar () const;  ; void MapSubwindows () override;  Map all canvas sub windows. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListView.html:3558,inherit,inherited,3558,doc/master/classTGListView.html,https://root.cern,https://root.cern/doc/master/classTGListView.html,1,['inherit'],['inherited']
Modifiability,"me * fMain;  container frame ;  ; TableData_t * fRow;  info about each row ;  ;  Protected Attributes inherited from TGLayoutManager; Bool_t fModified;  . Private Member Functions;  TGTableLayout (const TGTableLayout &)=delete;  ; TGTableLayout & operator= (const TGTableLayout &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGTableLayout.h>. Inheritance diagram for TGTableLayout:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTableLayout() [1/2]. TGTableLayout::TGTableLayout ; (; const TGTableLayout & ; ). privatedelete . ◆ TGTableLayout() [2/2]. TGTableLayout::TGTableLayout ; (; TGCompositeFrame * ; main, . UInt_t ; nrows, . UInt_t ; ncols, . Bool_t ; homogeneous = kFALSE, . Int_t ; sep = 0, . Int_t ; hints = 0 . ). TGTableLayout constructor. ; Note:; Number of rows first, number of Columns second; homogeneous == true means all table cells are the same size, set by the widest and the highest child frame.; s gives the amount of separation in pixels between cells; h are the hints, see TGTableLayoutHints. . Definition at line 93 of file TGTableLayout.cxx. ◆ ~TGTableLayout(). TGTableLayout::~TGTableLayout ; (; ). override . TGTableLayout constructor. ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableLayout.html:13219,inherit,inherited,13219,doc/master/classTGTableLayout.html,https://root.cern,https://root.cern/doc/master/classTGTableLayout.html,1,['inherit'],['inherited']
Modifiability,"me = """"); Constructor for set containing 6 initial objects. RooArgSet(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const RooAbsArg& var5, const RooAbsArg& var6, const RooAbsArg& var7, const char* name = """"); Constructor for set containing 7 initial objects. RooArgSet(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const RooAbsArg& var5, const RooAbsArg& var6, const RooAbsArg& var7, const RooAbsArg& var8, const char* name = """"); Constructor for set containing 8 initial objects. RooArgSet(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const RooAbsArg& var5, const RooAbsArg& var6, const RooAbsArg& var7, const RooAbsArg& var8, const RooAbsArg& var9, const char* name = """"); Constructor for set containing 9 initial objects. RooArgSet(const TCollection& tcoll, const char* name = """"); Constructor from a root TCollection. Elements in the collection that; do not inherit from RooAbsArg will be skipped. A warning message; will be printed for every skipped item. RooArgSet(const RooArgSet& other, const char* name = """"); Copy constructor. Note that a copy of a set is always non-owning,; even the source set is owning. To create an owning copy of; a set (owning or not), use the snaphot() method. ~RooArgSet(); Destructor. Bool_t add(const RooAbsArg& var, Bool_t silent = kFALSE); Add element to non-owning set. The operation will fail if; a similarly named object already exists in the set, or; the set is specified to own its elements. Eventual error messages; can be suppressed with the silent flag. Bool_t addOwned(RooAbsArg& var, Bool_t silent = kFALSE); Add element to an owning set. The operation will fail if; a similarly named object already exists in the set, or; the set is not specified to own its elements. Eventual error messages; can be suppressed with the silent flag. RooAbsArg* addClone(const RooAbsArg& var, Bool_t silent = kFALSE); Add clone o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooArgSet.html:16850,inherit,inherit,16850,root/html528/RooArgSet.html,https://root.cern,https://root.cern/root/html528/RooArgSet.html,9,['inherit'],['inherit']
Modifiability,"me = 0, Int_t option = 0, Int_t bufsize = 0) const; Int_tZ() const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGeoElement(const TGeoElement& other); TGeoElement&operator=(const TGeoElement& other). Data Members; public:. enum EGeoElement { kElemUsed; kElemDefined; kElementChecked; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfAA of element; Double_t*fAbundances[fNisotopes] Array of relative isotope abundances; TObjArray*fIsotopesList of isotopes; Int_tfNNumber of nucleons; TStringTNamed::fNameobject identifier; Int_tfNisotopesNumber of isotopes for the element; TStringTNamed::fTitleobject title; Int_tfZZ of element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoElement(); Default constructor. TGeoElement(const char* name, const char* title, Int_t z, Double_t a); Obsolete constructor. TGeoElement(const char* name, const char* title, Int_t nisotopes); Element having isotopes. TGeoElement(const char* name, const char* title, Int_t z, Int_t n, Double_t a); Constructor. void Print(Option_t* option = """") const; Print this isotope. TGeoElementTable * GetElementTable(); Returns pointer to the table. void AddIsotope(TGeoIsotope* isotope, Double_t relativeAbundance); Add an isotope for this element. All isotopes have to be isotopes of the same element. Double_t Neff() const; Returns effective number of nucleons. TGeoIsotope * GetIsotope(Int_t i) const; Return i-th isotope in the element. Double_t GetRelativeAbundance(Int_t i) const; Return relative abundance of i-th isotope in this element. TGeoElement(const TGeoElement& other). TGeoElement & operator=(const TGeoElement& other). virtual ~TGeoElemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoElement.html:6694,Inherit,Inheritance,6694,root/html532/TGeoElement.html,https://root.cern,https://root.cern/root/html532/TGeoElement.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me LayerPatternContainer > . void TMVA::DNN::Net::forwardBatch ; (; const LayerContainer & ; _layers, . LayerPatternContainer & ; layerPatternData, . std::vector< double > & ; valuesMean, . std::vector< double > & ; valuesStdDev, . size_t ; trainFromLayer . ); const. Definition at line 1240 of file NeuralNet.icc. ◆ forwardPattern(). template<typename LayerContainer > . void TMVA::DNN::Net::forwardPattern ; (; const LayerContainer & ; _layers, . std::vector< LayerData > & ; layerData . ); const. Definition at line 1221 of file NeuralNet.icc. ◆ initializeWeights(). template<typename OutIterator > . void TMVA::DNN::Net::initializeWeights ; (; WeightInitializationStrategy ; eInitStrategy, . OutIterator ; itWeight . ). initialize the weights with the given strategy ; initialization of the weights; Definition at line 1470 of file NeuralNet.icc. ◆ inputSize(). size_t TMVA::DNN::Net::inputSize ; (; ); const. inline . input size of the DNN ; Definition at line 1098 of file NeuralNet.h. ◆ layers() [1/2]. std::vector< Layer > & TMVA::DNN::Net::layers ; (; ). inline . returns the layers (structure) ; Definition at line 1246 of file NeuralNet.h. ◆ layers() [2/2]. const std::vector< Layer > & TMVA::DNN::Net::layers ; (; ); const. inline . returns the layers (structure) ; Definition at line 1245 of file NeuralNet.h. ◆ numNodes(). size_t TMVA::DNN::Net::numNodes ; (; size_t ; trainingStartLayer = 0); const. returns the number of nodes in this net ; Definition at line 556 of file NeuralNet.cxx. ◆ numWeights(). size_t TMVA::DNN::Net::numWeights ; (; size_t ; trainingStartLayer = 0); const. returns the number of weights in this net ; compute the number of weights given the size of the input layer; Definition at line 540 of file NeuralNet.cxx. ◆ operator()() [1/4]. template<typename Weights , typename PassThrough > . double TMVA::DNN::Net::operator() ; (; PassThrough & ; settingsAndBatch, . const Weights & ; weights . ); const. execute computation of the DNN for one mini-batch (used by",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:12689,layers,layers,12689,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['layers'],['layers']
Modifiability,"me amount of signal and bkg) bkg.; Small Indices mean, well separated.; General definition:. \[; Gini(Sample M) = 1 - (\frac{c(1)}{N})^2 - (\frac{c(2)}{N})^2 .... - (\frac{c(k)}{N})^2; \]. Where:; \( M \) is a sample of whatever \( N \) elements (events) that belong to \( K \) different classes.; \( c(k) \) is the number of elements that belong to class \( k \) for just Signal and Background classes this boils down to:; The Laplace's correction to the probability distribution would turn the \( \frac{c(1)}{N} \) into \( \frac{(c(1)+1)}{(N+2)} \) using this the simple Gini Index for two classes. \[; Gini(Sample) = \frac{2sb}{(s+b)^2}; \]. turns into. \[; GiniLaplace(Sample) = \frac{2(sb+s+b+1)}{(s+b+2)^2}; \]. Definition at line 59 of file GiniIndexWithLaplace.h. Public Member Functions;  GiniIndexWithLaplace ();  ;  GiniIndexWithLaplace (const GiniIndexWithLaplace &g);  ; virtual ~GiniIndexWithLaplace ();  ; virtual Double_t GetSeparationIndex (const Double_t s, const Double_t b);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::SeparationBase;  SeparationBase ();  Constructor. ;  ;  SeparationBase (const SeparationBase &s);  Copy constructor. ;  ; virtual ~SeparationBase ();  ; const TString & GetName ();  ; virtual Double_t GetSeparationGain (const Double_t nSelS, const Double_t nSelB, const Double_t nTotS, const Double_t nTotB);  Separation Gain: the measure of how the quality of separation of the sample increases by splitting the sample e.g. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::SeparationBase; static TClass * Class ();  ; static const char * Class_Name ();  ; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1GiniIndexWithLaplace.html:1605,inherit,inherited,1605,doc/master/classTMVA_1_1GiniIndexWithLaplace.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1GiniIndexWithLaplace.html,1,['inherit'],['inherited']
Modifiability,"me class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void CreateFileList ();  This function creates the file list from current dir. ;  ;  Protected Member Functions inherited from TGLVContainer; void ActivateItem (TGFrameElement *el) override;  Select/activate item. ;  ; void DeActivateItem (TGFrameElement *el) override;  Unselect/deactivate item. ;  ;  Protected Member Functions inherited from TGContainer; void DoRedraw () override;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileContainer.html:33487,inherit,inherited,33487,doc/master/classTGFileContainer.html,https://root.cern,https://root.cern/doc/master/classTGFileContainer.html,1,['inherit'],['inherited']
Modifiability,"me fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TSlider (const TSlider &)=delete;  ; TSlider & operator= (const TSlider &)=delete;  . Additional Inherited Members;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlider.html:49861,inherit,inherited,49861,doc/master/classTSlider.html,https://root.cern,https://root.cern/doc/master/classTSlider.html,1,['inherit'],['inherited']
Modifiability,"me for memory plots; Long64_tfPrevProcessed; Long64_tfPrevTotal; Float_tfProcTime; TGLabel*fProcessed; TProof*fProof; TGLabel*fRate; TGraph*fRateGraph; TGTextButton*fRatePlot; TNtuple*fRatePoints; Int_tfRightInfo; Int_tfSVNRev; TGLabel*fSelector; TStringfSessionUrl; TGCheckButton*fSmoothSpeedouse smooth speedometer update; TGSpeedo*fSpeedospeedometer; Bool_tfSpeedoEnabledwhether to enable the speedometer; TTimefStartTime; TProofProgressDialog::EQueryStatusfStatus; TGTextButton*fStop; TGTextBuffer*fTextQuery; TGLabel*fTimeLab; TGLabel*fTitleLab; TGraph*fTotSGraph; TGLabel*fTotal; TGTextButton*fUpdtSpeedo; static Bool_tfgKeepDefault; static Bool_tfgLogQueryDefault; static TStringfgTextQueryDefault; static TProofProgressDialog::EQueryStatuskAborted; static TProofProgressDialog::EQueryStatuskDone; static TProofProgressDialog::EQueryStatuskIncomplete; static TProofProgressDialog::EQueryStatuskRunning; static TProofProgressDialog::EQueryStatuskStopped. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressDialog(TProof* proof, const char* selector, Int_t files, Long64_t first, Long64_t entries); Create PROOF processing progress dialog. void ToggleOdometerInfos(); Toggle information displayed in Analog Meter. void ToggleThreshold(). void ResetProgressDialog(const char* sel, Int_t sz, Long64_t fst, Long64_t ent); Reset dialog box preparing for new query. void Progress(Long64_t total, Long64_t processed); Update progress bar and status labels.; Use ""processed == total"" or ""processed < 0"" to indicate end of processing. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses); Update progress bar and status labels.; Use ""processed == total"" or ""processed < 0"" to indicate end of processing. Float_t AdjustBytes(Float_t mbs, TString& sf); Transform MBs to GBs ot TBs and get the correct suffix. ~TProofProgressDialog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofProgressDialog.html:3350,Inherit,Inheritance,3350,root/html602/TProofProgressDialog.html,https://root.cern,https://root.cern/root/html602/TProofProgressDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me for training with 10000 events: 0.252 sec ; <HEADER> Category_Likelihood_1 : [Category_Likelihood_1_dsi] : Evaluation of Category_Likelihood_1 on training sample (10000 events); : Elapsed time for evaluation of 10000 events: 0.0108 sec ; <HEADER> Category_Likelihood_2 : [Category_Likelihood_2_dsi] : Evaluation of Category_Likelihood_2 on training sample (10000 events); : Elapsed time for evaluation of 10000 events: 0.00971 sec ; : Creating xml weight file: dataset/weights/TMVAClassificationCategory_LikelihoodCat.weights.xml; <HEADER> Factory : Training finished; : ; : Ranking input variables (method specific)...; <HEADER> Fisher : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Discr. power; : -------------------------------; : 1 : var4 : 1.446e-01; : 2 : var3 : 7.153e-02; : 3 : var2 : 2.447e-02; : 4 : var1 : 1.243e-02; : -------------------------------; <HEADER> Likelihood : Ranking result (top variable is best ranked); : -----------------------------------; : Rank : Variable : Delta Separation; : -----------------------------------; : 1 : var4 : 1.148e-01; : 2 : var3 : 5.071e-02; : 3 : var2 : 2.758e-02; : 4 : var1 : 1.990e-02; : -----------------------------------; : No variable ranking supplied by classifier: FisherCat; : No variable ranking supplied by classifier: LikelihoodCat; <HEADER> Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: dataset/weights/TMVAClassificationCategory_Fisher.weights.xml; : Reading weight file: dataset/weights/TMVAClassificationCategory_Likelihood.weights.xml; : Reading weight file: dataset/weights/TMVAClassificationCategory_FisherCat.weights.xml; : Recreating sub-classifiers from XML-file ; <HEADER> DataSetInfo : [Category_Fisher_1_dsi] : Added class ""Signal""; <HEADER> DataSetInfo : [Category_Fisher_1_dsi] : Added class ""Background""; <HEADER> DataSetInfo : [Category_Fisher_2_dsi] : Added class ""Signal""; <HEADER> DataSetInfo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:21028,variab,variable,21028,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,1,['variab'],['variable']
Modifiability,"me height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGHorizontal3DLine(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); constructor. void SavePrimitive(ostream& out, Option_t* option = """"); Save an vertical 3D line as a C++ statement(s) on output stream out. void DrawBorder(). » Author: Fons Rademakers 6/09/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGHorizontal3DLine.html:16931,Inherit,Inheritance,16931,root/html534/TGHorizontal3DLine.html,https://root.cern,https://root.cern/root/html534/TGHorizontal3DLine.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me into directory part and file name: A::B::C becomes module B, filename C. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <THtml.h>. Inheritance diagram for THtml::TFileDefinition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Function Documentation. ◆ Class(). static TClass * THtml::TFileDefinition::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THtml::TFileDefinition::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t THtml::TFileDefinition::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 85 of file THtml.h. ◆ DeclFileName(). static const char * THtml::TFileDefinition::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 85 of file THtml.h. ◆ ExpandSearchPath(). void THtml::TFileDefinition::ExpandSearchPath ; (; TString & ; path); const. protected . Create all permutations of path and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html:11745,inherit,inherited,11745,doc/master/classTHtml_1_1TFileDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html,1,['inherit'],['inherited']
Modifiability,"me is not yet defined in the index; category it will be added on the fly. The import command can be specified; multiple times. Link(const char*, RooDataSet&) -- Link contents of supplied RooDataSet to this dataset for given index category state name.; In this mode, no data is copied and the linked dataset must be remain live for the duration; of this dataset. Note that link is active for both reading and writing, so modifications; to the aggregate dataset will also modify its components. Link() and Import() are mutually exclusive. Import(map<string,RooDataSet*>&) -- As above, but allows specification of many imports in a single operation; Link(map<string,RooDataSet*>&) -- As above, but allows specification of many links in a single operation. Cut(const char*) -- Apply the given cut specification when importing data; Cut(RooFormulaVar&). CutRange(const char*) -- Only accept events in the observable range with the given name. WeightVar(const char*) -- Interpret the given variable as event weight rather than as observable; WeightVar(const RooAbsArg&). StoreError(const RooArgSet&) -- Store symmetric error along with value for given subset of observables; StoreAsymError(const RooArgSet&) -- Store asymmetric error along with value for given subset of observables. RooDataSet(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0); Constructor of an empty data set from a RooArgSet defining the dimensions; of the data space. RooDataSet(const char* name, const char* title, RooDataSet* data, const RooArgSet& vars, const char* cuts = 0, const char* wgtVarName = 0); Constructor of a data set from (part of) an existing data; set. The dimensions of the data set are defined by the 'vars'; RooArgSet, which can be identical to 'dset' dimensions, or a; subset thereof. The 'cuts' string is an optional RooFormula; expression and can be used to select the subset of the data; points in 'dset' to be copied. The cut expression can refer to; any variable in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDataSet.html:19397,variab,variable,19397,root/html528/RooDataSet.html,https://root.cern,https://root.cern/root/html528/RooDataSet.html,1,['variab'],['variable']
Modifiability,"me name text entry; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoVolumeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for volume editor. ~TGeoVolumeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the picked volume. void ActivateBaseClassEditors(TClass* cl); Add editors to fGedFrame and exclude TLineEditor. void DoVolumeName(); Modify volume name. void DoSelectShape(); Select a new shape. void DoSelectMedium(); Select a new medium. void DoSelectMatrix(); Select a matrix for positioning. void DoSelectVolume(); Select a daughter volume. void DoEditShape(); Edit the shape of the volume. void DoEditMedium(); Edit the medium of the volume. void DoEditMatrix(); Edit the position of the selected node. void DoAddNode(); Add a daughter. void DoRemoveNode(); Remove a daughter. void DoVisVolume(); Slot for setting volume visible/invi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoVolumeEditor.html:23773,Inherit,Inheritance,23773,root/html532/TGeoVolumeEditor.html,https://root.cern,https://root.cern/root/html532/TGeoVolumeEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me of index category; RooArgSet*_idxCatSetOwner of index category components; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; Int_t_numPdfNumber of generated PDFs; const RooSimultaneous*_pdfOriginal PDF; RooDataSet*_protoData! Prototype dataset; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*_prototypePrototype data set; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; TIterator*_proxyIterIterator over pdf proxies; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSimGenContext(const RooSimultaneous& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor of specialized generator context for RooSimultaneous p.d.f.s. This; context creates a dedicated context for each component p.d.f.s and delegates; generation of events to the appropriate component generator context. ~RooSimGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach the index category clone to the given event buffer. void initGenerator(const RooArgSet& theEvent); Perform one-time initialization of generator context. RooDataSet* createDataSet(const char* name, const char* title, const RooArgSet& obs); Create an empty dataset to hold the events that will be generated. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate event appropriate for current index state.; The index state is taken e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimGenContext.html:9122,Inherit,Inheritance,9122,root/html532/RooSimGenContext.html,https://root.cern,https://root.cern/root/html532/RooSimGenContext.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me of the file containing the class declaration ; Definition at line 56 of file TPointSet3D.h. ◆ GetOwnIds(). Bool_t TPointSet3D::GetOwnIds ; (; ); const. inline . Definition at line 51 of file TPointSet3D.h. ◆ GetPointId(). TObject * TPointSet3D::GetPointId ; (; Int_t ; n); const. inline . Definition at line 48 of file TPointSet3D.h. ◆ IsA(). TClass * TPointSet3D::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 56 of file TPointSet3D.h. ◆ operator=(). TPointSet3D & TPointSet3D::operator= ; (; const TPointSet3D & ; t). Assignment operator. ; Definition at line 77 of file TPointSet3D.cxx. ◆ PointSelected(). void TPointSet3D::PointSelected ; (; Int_t ; n). virtual . This virtual method is called from TPointSet3DGL when a point is selected. ; At this point it just prints out n and id of the point (if it exists). To make something useful out of this do:. subclass and re-implement this method;; extend this class to include TExec or some other kind of callback. . Reimplemented in TEvePointSet, and TEvePointSetProjected.; Definition at line 145 of file TPointSet3D.cxx. ◆ SetOwnIds(). void TPointSet3D::SetOwnIds ; (; Bool_t ; o). inline . Definition at line 52 of file TPointSet3D.h. ◆ SetPointId() [1/2]. void TPointSet3D::SetPointId ; (; Int_t ; n, . TObject * ; id . ). Set id of point n. ; Definition at line 115 of file TPointSet3D.cxx. ◆ SetPointId() [2/2]. void TPointSet3D::SetPointId ; (; TObject * ; id). Set id of last point. ; Use this method if you also use TPolyMarker3D::SetNextPoint(). ; Definition at line 107 of file TPointSet3D.cxx. ◆ Streamer(). void TPointSet3D::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TPointSet3D. ; Reimplemented from TObject.; Definition at line 157 of file TPointSet3D.cxx. ◆ StreamerNVirtual(). void TPointSet3D::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 56 of file TPointSet3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPointSet3D.html:21235,extend,extend,21235,doc/master/classTPointSet3D.html,https://root.cern,https://root.cern/doc/master/classTPointSet3D.html,1,['extend'],['extend']
Modifiability,"me to output dataset; Title(const char* name) -- Give specified title to output dataset. RooAbsData* reduce(const char* cut); Create a subset of the data set by applying the given cut on the data points.; The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points.; The 'cutVar' formula variable is used to select the subset of data points to be; retained in the reduced data collection. RooAbsData* reduce(const RooArgSet& varSubset, const char* cut); Create a subset of the data set by applying the given cut on the data points; and reducing the dimensions to the specified set. The cut expression can refer to any variable in the data set. For cuts involving; other variables, such as intermediate formula objects, use the equivalent; reduce method specifying the as a RooFormulVar reference. RooAbsData* reduce(const RooArgSet& varSubset, const RooFormulaVar& cutVar); Create a subset of the data set by applying the given cut on the data points; and reducing the dimensions to the specified set. The 'cutVar' formula variable is used to select the subset of data points to be; retained in the reduced data collection. Double_t weightError(RooAbsData::ErrorType etype = Poisson) const; Return error on current weight (dummy implementation returning zero). void weightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = Poisson) const; Return asymmetric error on weight. (Dummy implementation returning zero). RooPlot* plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsData.html:16527,variab,variables,16527,root/html526/RooAbsData.html,https://root.cern,https://root.cern/root/html526/RooAbsData.html,1,['variab'],['variables']
Modifiability,"me wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGWin32VirtualXProxy.cxx:249; TMath.h; ROOT::Fit::FitConfigClass describing the configuration of the fit, options and parameter settings using the ROOT::Fit::Pa...Definition FitConfig.h:47; ROOT::Fit::FitConfig::MinosParamsconst std::vector< unsigned int > & MinosParams() constreturn vector of parameter indices for which the Minos Error will be computedDefinition FitConfig.h:218; ROOT::Fit::FitConfig::ParSettingsParameterSettings & ParSettings(unsigned int i)get the parameter settings for the i-th parameter (non-const method)Definition FitConfig.h:81; ROOT::Fit::FitConfig::UpdateAfterFitbool UpdateAfterFit() constUpdate configuration after a fit using the FitResult.Definition FitConfig.h:211; ROOT::Fit::FitConfig::fMinosParamsstd::vector< unsigned int > fMinosParamsvector with the parameter indices for running MinosDefinition FitConfig.h:266; ROOT::Fit::FitConfig::SetMinimizervoid SetMinimizer(const char *type, const char *algo=nullptr)set minimizer typeDefinition FitConfig.h:179; ROOT::Fit::FitConfig::SetMinosErrorsvoid SetMinosErrors(bool on=true)set Minos errors computation to be performed after fittingDefinition FitConfig.h:229; ROOT::Fit::FitConfig::fNormErrorsbool fNormErrorsflag for error normalizationDefinition FitConfig.h:259; ROOT::Fit::FitConfig::ParamsValuesstd::vector< double > ParamsValues() constreturn a vector of stored parameter values (i.e initial fit parameters)Definition FitConfig.cxx:262; ROOT::Fit::FitConfig::MinimizerAlgoTypeconst std::string & MinimizerAlgoType() constreturn type of minimizer algorithmsDefinition FitConfig.h:192; ROOT::Fit::FitConfig::ParamsSetti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:10154,config,configuration,10154,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['config'],['configuration']
Modifiability,"me width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; Int_tTGDoubleVSlider::fYpvertical slider y position in pixel coordinates; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTripleVSlider(const TGWindow* p = 0, UInt_t h = 1, UInt_t type = 1, Int_t id = -1, UInt_t options = kVerticalFrame, Pixel_t back = GetDefaultFrameBackground(), Bool_t reversed = kFALSE, Bool_t mark_ends = kFALSE, Bool_t constrained = kTRUE, Bool_t relative = kFALSE); Create a vertical slider widget. ~TGTripleVSlider(); Delete vertical slider widget. void DoRedraw(); Redraw vertical slider widget. void DrawPointer(); Draw slider pointer. Bool_t HandleButton(Event_t* event); Handle mouse button event in vertical slider. Bool_t HandleConfigureNotify(Event_t* event); Handles resize events for this widget. Bool_t HandleMotion(Event_t* event); Handle mouse motion event in vertical slider. void SetConstrained(Bool_t on = kTRUE); Set pointer position constrained in the slider range. void SetPointerPos(Int_t z, Int_t opt = 0); Set slider pointer position in pixel value. void SetPointerPosition(Float_t pos); Set pointer position in scaled (rea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTripleVSlider.html:22214,Inherit,Inheritance,22214,root/html602/TGTripleVSlider.html,https://root.cern,https://root.cern/root/html602/TGTripleVSlider.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TASPaletteEditor(TAttImage* attImage, UInt_t w, UInt_t h); Palette editor constructor.; The palette editor aloows the editing of the color palette of the image. ~TASPaletteEditor(); Palette editor destructor. Deletes all frames and their layout hints. void CloseWindow(); Close editor. Bool_t ProcessMessage(Long_t msg, Long_t param1, Long_t param2); Process all editor mouse events. void InsertNewPalette(TImagePalette* newPalette); The newPalette is inserted in the list of palettes (fPaletteList) and; fPalette is set to the newPalette. Protected method,. void Save(); Saves the current palette either into a ROOT file or in an ASCII file.; It is called by the Save - button. Protected method. void Open(); Opens either a ROOT file or an ASCII file and reads a palette.; It is called by the Open - button. Protected method. void UpdateScreen(Bool_t histoUpdate); All widgeds of the screen are updated with the current palette.; Protected method. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TASPaletteEditor.html:22375,Inherit,Inheritance,22375,root/html532/TASPaletteEditor.html,https://root.cern,https://root.cern/root/html532/TASPaletteEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitParametersDialog(const TGWindow* p, const TGWindow* main, TF1* func, TVirtualPad* pad, Int_t* ret_code = 0); Create a dialog for fit function parameters' settings. ~TFitParametersDialog(); Destructor. void CloseWindow(); Close parameters' dialog. void DoCancel(); Slot related to the Cancel button. void DoParBound(Bool_t on); Slot related to the Bound check button. void DoParStep(); Slot related to parameter step setting. void DoParFix(Bool_t on); Slot related to the Fix check button. void SetParameters(); Set the parameter values inside the function. void DoOK(); Slot related to the OK button. void DoApply(); Slot related to the Preview button. void DoReset(); Slot related to the Reset button. void DoSlider(); Slot related to the parameters' value settings. void DoParValue(); Slot related to the parameter value settings. void DoParMinLimit(); Slot related to the minumum parameter limit settings. void DoParMaxLimit(); Slot related t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFitParametersDialog.html:23792,Inherit,Inheritance,23792,root/html532/TFitParametersDialog.html,https://root.cern,https://root.cern/root/html532/TFitParametersDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFunctionParametersDialog(const TGWindow* p, const TGWindow* main, TF1* func, TVirtualPad* pad, Double_t rmin, Double_t rmax); Create the parameters' dialog of currently selected function 'func'. ~TFunctionParametersDialog(); Destructor. void CloseWindow(); Close parameters' dialog. void DoCancel(); Slot related to the Cancel button. void DoFix(Bool_t on); Slot related to the Fix check button. void DoOK(); Slot related to the OK button. void DoApply(); Slot related to the Preview button. void DoReset(); Slot related to the Reset button. void DoSlider(); Slot related to the parameters' value settings. void DoParValue(); Slot related to the parameter value settings. void DoParMinLimit(); Slot related to the minumum parameter limit settings. void DoParMaxLimit(); Slot related to the maximum parameter limit settings. void RedrawFunction(); Redraw function graphics. void HandleButtons(Bool_t update); Handle the button dependent states in th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFunctionParametersDialog.html:23467,Inherit,Inheritance,23467,root/html532/TFunctionParametersDialog.html,https://root.cern,https://root.cern/root/html532/TFunctionParametersDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGColorDialog(const TGWindow* p = 0, const TGWindow* m = 0, Int_t* retc = 0, Pixel_t* color = 0, Bool_t wait = kTRUE); Color selection dialog constructor.; The TGColorDialog presents a full featured color selection dialog.; It uses 2 TGColorPalette's and the TGColorPick widgets. ~TGColorDialog(); TGColorDialog destructor. void SetCurrentColor(Pixel_t col); Change current color. void ColorSelected(Pixel_t ); Emit signal about selected color. void AlphaColorSelected(ULong_t ); Emit signal about selected alpha and color. void CloseWindow(); Called when window is closed via window manager. void UpdateAlpha(Pixel_t* c); Upadate Opacity text entry with alpha value of color c. void UpdateRGBentries(Pixel_t* c); Update RGB text entries with RGB values of color c. void UpdateHLSentries(Pixel_t* c); Update HLS text entries with HLS values of color c. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages for the color se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGColorDialog.html:23786,Inherit,Inheritance,23786,root/html534/TGColorDialog.html,https://root.cern,https://root.cern/root/html534/TGColorDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGColorDialog(const TGWindow* p = 0, const TGWindow* m = 0, Int_t* retc = 0, Pixel_t* color = 0, Bool_t wait = kTRUE); Color selection dialog constructor.; The TGColorDialog presents a full featured color selection dialog.; It uses 2 TGColorPalette's and the TGColorPick widgets. ~TGColorDialog(); TGColorDialog destructor. void SetCurrentColor(Pixel_t col); Change current color. void ColorSelected(Pixel_t ); Emit signal about selected color. void CloseWindow(); Called when window is closed via window manager. void UpdateRGBentries(Pixel_t* c); Update RGB text entries with RGB values of color c. void UpdateHLSentries(Pixel_t* c); Update HLS text entries with HLS values of color c. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages for the color selection dialog. void SetColorInfo(Int_t event, Int_t px, Int_t py, TObject* selected); Set the color info in RGB and HLS parts. void DoPreview(); Slot method called ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColorDialog.html:23595,Inherit,Inheritance,23595,root/html532/TGColorDialog.html,https://root.cern,https://root.cern/root/html532/TGColorDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFileBrowser(const TGWindow* p, TBrowser* b = 0, UInt_t w = 200, UInt_t h = 400); TGFileBrowser constructor. void CreateBrowser(); Create the actual file browser. ~TGFileBrowser(); Destructor. void Add(TObject* obj, const char* name = 0, Int_t check = -1); Add items to the browser. This function has to be called; by the Browse() member function of objects when they are; called by a browser. If check < 0 (default) no check box is drawn,; if 0 then unchecked checkbox is added, if 1 checked checkbox is added. void AddRemoteFile(TObject* obj); Add remote file in list tree. void BrowseObj(TObject* obj); Browse object. This, in turn, will trigger the calling of; TBrowser::Add() which will fill the IconBox and the tree.; Emits signal ""BrowseObj(TObject*)"". void Checked(TObject* obj, Bool_t check); Emits signal when double clicking on icon. Option_t * GetDrawOption() const; returns drawing option. void GetFilePictures(const TGPicture** pic, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFileBrowser.html:25071,Inherit,Inheritance,25071,root/html532/TGFileBrowser.html,https://root.cern,https://root.cern/root/html532/TGFileBrowser.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFileDialog(const TGWindow* p = 0, const TGWindow* main = 0, EFileDialogMode dlg_type = kFDOpen, TGFileInfo* file_info = 0); Create a file selection dialog. Depending on the dlg_type it can be; used for opening or saving a file.; About the first two arguments, p is the parent Window, usually the; desktop (root) window, and main is the main (TGMainFrame) application; window (the one opening the dialog), onto which the dialog is; usually centered, and which is waiting for it to close. ~TGFileDialog(); Delete file dialog. void CloseWindow(); Close file dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages generated by the user input in the file dialog. TGFileInfo& operator=(const TGFileDialog& ). TGFileDialog(const TGFileDialog& ). » Author: Fons Rademakers 20/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-04 16:52; This page has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGFileDialog.html:23221,Inherit,Inheritance,23221,root/html534/TGFileDialog.html,https://root.cern,https://root.cern/root/html534/TGFileDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFontDialog(const TGWindow* parent = 0, const TGWindow* t = 0, TGFontDialog::FontProp_t* fontProp = 0, const TString& sample = """", char** fontList = 0, Bool_t wait = kTRUE); Create font dialog. When closed via OK button fontProp is set to; the newly selected font. If closed via Cancel button or WM close box; fontProp->fName == """". ~TGFontDialog(); Delete all widgets. void CloseWindow(); Called when window is closed via window manager. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Handle dialog events. Bool_t Build(char** fontList, Int_t cnt); Build font dialog. void UpdateStyleSize(const char* family); Build font style and size list boxes. void GetFontName(); Sets fLName and other data members. void SetFont(TGFont* font); Set font. void SetColor(Pixel_t color); Set color. void SetAlign(Int_t align); Set align. void EnableAlign(Bool_t on = kTRUE); Enable/disable align combobox. void FontSelected(char* font); { Emit(""Fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFontDialog.html:23141,Inherit,Inheritance,23141,root/html532/TGFontDialog.html,https://root.cern,https://root.cern/root/html532/TGFontDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGotoDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, Long_t* ret_code = 0, UInt_t options = kVerticalFrame); Create a dialog to GoTo a specific line number. Returns -1 in; ret_code in case no valid line number was given or in case; cancel was pressed. If on input *ret_code is > 0 then this value; will be used as default value. ~TGGotoDialog(); Clean up goto dialog. void CloseWindow(); Close the dialog. On close the dialog will be deleted and cannot be; re-used. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process goto dialog widget messages. » Author: Fons Rademakers 10/7/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGTextEditDialogs.h 40451 2011-08-04 09:58:12Z bellenot $ » Last generated: 2011-11-03 20:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGGotoDialog.html:22287,Inherit,Inheritance,22287,root/html532/TGGotoDialog.html,https://root.cern,https://root.cern/root/html532/TGGotoDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGHtmlBrowser(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); TGHtmlBrowser constructor. void Selected(const char* txt); Open (browse) selected URL. void URLChanged(); URL combobox has changed. void Back(); Handle ""Back"" navigation button. Bool_t CheckAnchors(const char* ); Check if we just change position in the page (using anchor); and return kTRUE if any anchor has been found and followed. void Forward(); Handle ""Forward"" navigation button. void Reload(); Handle ""Reload"" navigation button. void Stop(); Handle ""Reload"" navigation button. void MouseOver(const char* ); Handle ""MouseOver"" TGHtml signal. void MouseDown(const char* ); Handle ""MouseDown"" TGHtml signal. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Process Events. virtual ~TGHtmlBrowser(); { ; }. void Clicked(char* uri); { Emit(""Clicked(char *)"",uri); }. » Author: Bertrand Bellenot 26/09/2007 » Copyright (C) 1995-2007, Rene Brun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGHtmlBrowser.html:22379,Inherit,Inheritance,22379,root/html532/TGHtmlBrowser.html,https://root.cern,https://root.cern/root/html532/TGHtmlBrowser.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGPrintDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, char** printerName = 0, char** printProg = 0, Int_t* ret_code = 0, UInt_t options = kVerticalFrame); Create the printer dialog box. Returns kTRUE in ret_code when; printerName and printProg have been set and cancel was not pressed,; kFALSE otherwise. ~TGPrintDialog(); Clean up print dialog. void CloseWindow(); Close the dialog. On close the dialog will be deleted and cannot be; re-used. void GetPrinters(); Ask the system fo the list of available printers and populate the combo; box. If there is a default printer, select it in the list. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process print dialog widget messages. » Author: Fons Rademakers 10/7/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:27; This page has been automatically generated. For comm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGPrintDialog.html:22772,Inherit,Inheritance,22772,root/html534/TGPrintDialog.html,https://root.cern,https://root.cern/root/html534/TGPrintDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGPrintDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, char** printerName = 0, char** printProg = 0, Int_t* ret_code = 0, UInt_t options = kVerticalFrame); Create the printer dialog box. Returns kTRUE in ret_code when; printerName and printProg have been set and cancel was not pressed,; kFALSE otherwise. ~TGPrintDialog(); Clean up print dialog. void CloseWindow(); Close the dialog. On close the dialog will be deleted and cannot be; re-used. void GetPrinters(); Ask the system fo the list of available printers and populate the combo; box. If there is a default printer, select it in the list. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process print dialog widget messages. » Author: Fons Rademakers 10/7/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGTextEditDialogs.h 40451 2011-08-04 09:58:12Z bellenot $ » Last generated: 2011-11-03 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGPrintDialog.html:22753,Inherit,Inheritance,22753,root/html532/TGPrintDialog.html,https://root.cern,https://root.cern/root/html532/TGPrintDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTextEditor(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); TGTextEditor constructor with file name as first argument. TGTextEditor(TMacro* macro, const TGWindow* p = 0, UInt_t w = 0, UInt_t h = 0); TGTextEditor constructor with pointer to a TMacro as first argument. ~TGTextEditor(); TGTextEditor destructor. void DeleteWindow(); Delete TGTextEditor Window. void Build(); Build TGTextEditor widget. void DataDropped(char* fname); Update file information when receiving the signal; DataDropped from TGTextEdit widget. void LoadFile(const char* fname = 0); Load a file into the editor. If fname is 0, a TGFileDialog will popup. void SaveFile(const char* fname); Save the edited text in the file ""fname"". Bool_t SaveFileAs(); Save the edited text in a file selected with TGFileDialog.; Shouldn't we create a backup file?. Int_t IsSaved(); Check if file has to be saved in case of modifications. void PrintText(); Ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGTextEditor.html:27104,Inherit,Inheritance,27104,root/html534/TGTextEditor.html,https://root.cern,https://root.cern/root/html534/TGTextEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTextEditor(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); TGTextEditor constructor with file name as first argument. TGTextEditor(TMacro* macro, const TGWindow* p = 0, UInt_t w = 0, UInt_t h = 0); TGTextEditor constructor with pointer to a TMacro as first argument. ~TGTextEditor(); TGTextEditor destructor. void DeleteWindow(); Delete TGTextEditor Window. void Build(); Build TGTextEditor widget. void DataDropped(char* fname); Update file informations when receiving the signal; DataDropped from TGTextEdit widget. void LoadFile(char* fname = 0); Load a file into the editor. If fname is 0, a TGFileDialog will popup. void SaveFile(const char* fname); Save the edited text in the file ""fname"". Bool_t SaveFileAs(); Save the edited text in a file selected with TGFileDialog.; Shouldn't we create a backup file?. Int_t IsSaved(); Check if file has to be saved in case of modifications. void PrintText(); Open the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextEditor.html:27079,Inherit,Inheritance,27079,root/html532/TGTextEditor.html,https://root.cern,https://root.cern/root/html532/TGTextEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTransientFrame(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kVerticalFrame); Create a transient window. A transient window is typically used for; dialog boxes. void CenterOnParent(Bool_t croot = kTRUE, TGTransientFrame::EPlacement pos = kCenter); Position transient frame centered relative to the parent frame.; If fMain is 0 (i.e. TGTransientFrame is acting just like a; TGMainFrame) and croot is true, the window will be centered on; the root window, otherwise no action is taken and the default; wm placement will be used. void SaveSource(const char* filename = ""Rootdlog.C"", Option_t* option = """"); Save the GUI tranzient frame widget in a C++ macro file. void SavePrimitive(ostream& out, Option_t* option = """"); Save a transient frame widget as a C++ statement(s) on output stream out. TGFrame& operator=(const TGTransientFrame& ). TGTransientFrame(const TGTransientFrame& ). const TGWindow * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTransientFrame.html:22770,Inherit,Inheritance,22770,root/html532/TGTransientFrame.html,https://root.cern,https://root.cern/root/html532/TGTransientFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRootBrowser(TBrowser* b = 0, const char* name = ""ROOT Browser"", UInt_t width = 800, UInt_t height = 500, Option_t* opt = """", Bool_t initshow = kTRUE); Create browser with a specified width and height. TRootBrowser(TBrowser* b, const char* name, Int_t x, Int_t y, UInt_t width, UInt_t height, Option_t* opt = """", Bool_t initshow = kTRUE); Create browser with a specified width and height and at position x, y. void CreateBrowser(const char* name). ~TRootBrowser(); Clean up all widgets, frames and layouthints that were used. void Add(TObject* obj, const char* name = 0, Int_t check = -1); Add items to the actual browser. This function has to be called; by the Browse() member function of objects when they are; called by a browser. If check < 0 (default) no check box is drawn,; if 0 then unchecked checkbox is added, if 1 checked checkbox is added. void BrowseObj(TObject* obj); Browse object. This, in turn, will trigger the calling of; TRootBro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootBrowser.html:25451,Inherit,Inheritance,25451,root/html532/TRootBrowser.html,https://root.cern,https://root.cern/root/html532/TRootBrowser.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupCintExport(TClass* cl); Add ""Export to CINT"" into context-menu for class cl. void CalculateReparentXY(TGObject* parent, Int_t& x, Int_t& y); Calculate position of a widget for reparenting into parent. TEveBrowser(UInt_t w, UInt_t h); Constructor. void EveMenu(Int_t id); Handle events from Eve menu. void InitPlugins(Option_t* opt = ""FI""); Initialize standard plugins. TGFileBrowser* MakeFileBrowser(); Create a file-browser. Caller should provide; Start/StopEmbedding() calls and populate the new browser. void ReallyDelete(); Really delete the browser and the this GUI. void HideBottomTab(). TEveListTreeItem& operator=(const TEveBrowser& ). TEveBrowser(const TEveBrowser& ). virtual ~TEveBrowser(); {}. TGFileBrowser* GetFileBrowser() const; { return fFileBrowser; }. TGMenuBar* GetMenuBar() const; Some getters missing in TRootBrowser. { return fMenuBar; }. TGHorizontalFrame* GetTopMenuFrame() const; { return fTopMenuFrame; }. » Last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveBrowser.html:26712,Inherit,Inheritance,26712,root/html532/TEveBrowser.html,https://root.cern,https://root.cern/root/html532/TEveBrowser.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupCintExport(TClass* cl); Add ""Export to CINT"" into context-menu for class cl. void CalculateReparentXY(TGObject* parent, Int_t& x, Int_t& y); Calculate position of a widget for reparenting into parent. TEveBrowser(UInt_t w, UInt_t h); Constructor. void EveMenu(Int_t id); Handle events from Eve menu. void InitPlugins(Option_t* opt = ""FI""); Initialize standard plugins. TGFileBrowser* MakeFileBrowser(Bool_t make_default = kFALSE); Create a file-browser. Caller should provide Start/StopEmbedding() calls; and populate the new browser.; If flag make_default is kTRUE, the default file-browser is set to the; newly created browser. TGFileBrowser* GetFileBrowser() const; Returns the default file-browser. void SetFileBrowser(TGFileBrowser* b); Set the default file browser. void ReallyDelete(); Override from TRootBrowser. We need to be more brutal as fBrowser is; not set in Eve case. void CloseTab(Int_t id); Virtual from TRootBrowser. Nee",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveBrowser.html:27230,Inherit,Inheritance,27230,root/html534/TEveBrowser.html,https://root.cern,https://root.cern/root/html534/TEveBrowser.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me"" with color ""color"". ;  ;  TStructNodeProperty (const char *name, Pixel_t pixel);  Contructs a TStructNodeProperty with p as parent window for class ""name"" with color ""pixel"". ;  ;  ~TStructNodeProperty () override;  Destructor. ;  ; Int_t Compare (const TObject *obj) const override;  Overrided method. Compare two objects of TStructNodeProperty class. ;  ; TColor GetColor () const;  Returns color of class. ;  ; Pixel_t GetPixel () const;  Return color in Pixel_t format. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  Retruns true, because we have overrided method Compare. ;  ; void SetColor (const TColor &color);  Sets the color to ""color"". ;  ; void SetColor (Int_t color);  Sets the color to ""color"". ;  ; void SetColor (Pixel_t pixel);  Sets the color to ""pixel"". ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStructNodeProperty.html:1475,inherit,inherited,1475,doc/master/classTStructNodeProperty.html,https://root.cern,https://root.cern/doc/master/classTStructNodeProperty.html,1,['inherit'],['inherited']
Modifiability,"me(""old""). then, old can be reused in a new expression. TFormula new(""x*old"") is equivalent to: TFormula new(""x*sin(x*(x<0.5 || x>1))""); Up to 4 dimensions are supported (indicated by x, y, z, t) An expression may have 0 parameters or a list of parameters indicated by the sequence [par_number]; A graph showing the logic to compile and analyze a formula is shown in TFormula::Compile and TFormula::Analyze. Once a formula has been compiled, it can be evaluated for a given set of parameters. see graph in TFormula::EvalPar.; This class is the base class for the function classes TF1,TF2 and TF3. It is also used by the ntuple selection mechanism TNtupleFormula.; In version 7 of TFormula, the usage of fOper has been changed to improve the performance of TFormula::EvalPar. Conceptually, fOper was changed from a simple array of Int_t to an array of composite values. For example a 'ylandau(5)' operation used to be encoded as 4105; it is now encoded as (klandau >> kTFOperShift) + 5 Any class inheriting from TFormula and using directly fOper (which is now a private data member), needs to be updated to take this in consideration. The member functions recommended to set and access fOper are: SetAction, GetAction, GetActionParam For more performant access to the information, see the implementation TFormula::EvalPar. CHANGING DEFAULT SETTINGS; When creating complex formula , it may be necessary to increase some default parameters. see static function TFormula::SetMaxima. WHY TFormula CANNOT ACCEPT A CLASS MEMBER FUNCTION ?; This is a frequently asked question. C++ is a strongly typed language. There is no way for TFormula (without recompiling this class) to know about all possible user defined data types. This also apply to the case of a static class function. Because TMath is a special and frequent case, TFormula is aware of all TMath functions. ; Definition at line 65 of file TFormula.h. Public Types; enum  { kNotGlobal = (1ULL << ( 10 )); , kNormalized = (1ULL << ( 14 )); , kLinea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html:2503,inherit,inheriting,2503,doc/master/classROOT_1_1v5_1_1TFormula.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html,1,['inherit'],['inheriting']
Modifiability,"me() const; Int_tTGeoMaterial::GetIndex(); virtual Double_tTGeoMaterial::GetIntLen() const; virtual const char*TNamed::GetName() const; Int_tGetNelements() const; Int_t*GetNmixt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMaterial::GetPointerName() const; Double_tTGeoMaterial::GetPressure() const; virtual Double_tTGeoMaterial::GetRadLen() const; TGeoMaterial::EGeoMaterialStateTGeoMaterial::GetState() const; Double_tTGeoMaterial::GetTemperature() const; virtual const char*TNamed::GetTitle() const; Char_tTGeoMaterial::GetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetWmixt() const; virtual Double_tTGeoMaterial::GetZ() const; Double_t*GetZmixt() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEq(const TGeoMaterial* other) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMixture() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTGeoMaterial::IsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMixture.html:3962,Inherit,InheritsFrom,3962,root/html532/TGeoMixture.html,https://root.cern,https://root.cern/root/html532/TGeoMixture.html,1,['Inherit'],['InheritsFrom']
Modifiability,"me() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THYPE.html:3543,Inherit,InheritsFrom,3543,root/html532/THYPE.html,https://root.cern,https://root.cern/root/html532/THYPE.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTTUBE::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTTUBE::GetNumberOfDivisions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPhi() const; virtual Float_tTTUBE::GetRmax() const; virtual Float_tTTUBE::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THYPE.html:3394,Inherit,InheritsFrom,3394,root/html602/THYPE.html,https://root.cern,https://root.cern/root/html602/THYPE.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooPlot*RooStats::SamplingDistPlot::GetPlot(); TH1F*RooStats::SamplingDistPlot::GetTH1F(const RooStats::SamplingDistribution* samplDist = __null); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HypoTestPlotHypoTestPlot(); RooStats::HypoTestPlotHypoTestPlot(const RooStats::HypoTestPlot&); RooStats::HypoTestPlotHypoTestPlot(RooStats::HypoTestResult& result, Int_t bins = 100, Option_t* opt = ""NORMALIZE HIST""); RooStats::HypoTestPlotHypoTestPlot(RooStats::HypoTestResult& result, Int_t bins, Double_t min, Double_t max, Option_t* opt = ""NORMALIZE HIST""); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__HypoTestPlot.html:4108,Inherit,InheritsFrom,4108,root/html604/RooStats__HypoTestPlot.html,https://root.cern,https://root.cern/root/html604/RooStats__HypoTestPlot.html,1,['Inherit'],['InheritsFrom']
Modifiability,"me()) << "" ""; 239 << setiosflags(ios::left) << std::setw(maxL) << dsi.GetClassInfo(cl)->GetName(); 240 << "" testing entries: "" << ds->GetNClassEvents( 1, cl ) << Endl;; 241 }; 242 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << "" "" << Endl;; 243 }; 244 ; 245 return ds;; 246}; 247 ; 248////////////////////////////////////////////////////////////////////////////////; 249/// checks a TTreeFormula for problems; 250 ; 251Bool_t TMVA::DataSetFactory::CheckTTreeFormula( TTreeFormula* ttf,; 252 const TString& expression,; 253 Bool_t& hasDollar ); 254{; 255 Bool_t worked = kTRUE;; 256 ; 257 if( ttf->GetNdim() <= 0 ); 258 Log() << kFATAL << ""Expression "" << expression.Data(); 259 << "" could not be resolved to a valid formula. "" << Endl;; 260 if( ttf->GetNdata() == 0 ){; 261 Log() << kWARNING << ""Expression: "" << expression.Data(); 262 << "" does not provide data for this event. ""; 263 << ""This event is not taken into account. --> please check if you use as a variable ""; 264 << ""an entry of an array which is not filled for some events ""; 265 << ""(e.g. arr[4] when arr has only 3 elements)."" << Endl;; 266 Log() << kWARNING << ""If you want to take the event into account you can do something like: ""; 267 << ""\""Alt$(arr[4],0)\"" where in cases where arr doesn't have a 4th element, ""; 268 << "" 0 is taken as an alternative."" << Endl;; 269 worked = kFALSE;; 270 }; 271 if( expression.Contains(""$"") ); 272 hasDollar = kTRUE;; 273 else; 274 {; 275 for (int i = 0, iEnd = ttf->GetNcodes (); i < iEnd; ++i); 276 {; 277 TLeaf* leaf = ttf->GetLeaf (i);; 278 if (!leaf->IsOnTerminalBranch()); 279 hasDollar = kTRUE;; 280 }; 281 }; 282 return worked;; 283}; 284 ; 285 ; 286////////////////////////////////////////////////////////////////////////////////; 287/// While the data gets copied into the local training and testing; 288/// trees, the input tree can change (for instance when changing from; 289/// signal to background tree, or using TChains as input) The; 290/// TTreeFormulas, that hold ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:10273,variab,variable,10273,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"me(). static const char * TEveBrowser::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 167 of file TEveBrowser.h. ◆ EveMenu(). void TEveBrowser::EveMenu ; (; Int_t ; id). Handle events from Eve menu. ; Definition at line 590 of file TEveBrowser.cxx. ◆ GetFileBrowser(). TGFileBrowser * TEveBrowser::GetFileBrowser ; (; ); const. Returns the default file-browser. ; Definition at line 752 of file TEveBrowser.cxx. ◆ GetMenuBar(). TGMenuBar * TEveBrowser::GetMenuBar ; (; ); const. inline . Definition at line 160 of file TEveBrowser.h. ◆ GetTopMenuFrame(). TGHorizontalFrame * TEveBrowser::GetTopMenuFrame ; (; ); const. inline . Definition at line 161 of file TEveBrowser.h. ◆ HideBottomTab(). void TEveBrowser::HideBottomTab ; (; ). Hide the bottom tab (usually holding command-line widget). ; Definition at line 810 of file TEveBrowser.cxx. ◆ InitPlugins(). void TEveBrowser::InitPlugins ; (; Option_t * ; opt = ""FI""). Initialize standard plugins. ; Definition at line 704 of file TEveBrowser.cxx. ◆ IsA(). TClass * TEveBrowser::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 167 of file TEveBrowser.h. ◆ MakeFileBrowser(). TGFileBrowser * TEveBrowser::MakeFileBrowser ; (; Bool_t ; make_default = kFALSE). Create a file-browser. ; Caller should provide Start/StopEmbedding() calls and populate the new browser.; If flag make_default is kTRUE, the default file-browser is set to the newly created browser. ; Definition at line 730 of file TEveBrowser.cxx. ◆ operator=(). TEveBrowser & TEveBrowser::operator= ; (; const TEveBrowser & ; ). private . ◆ ReallyDelete(). void TEveBrowser::ReallyDelete ; (; ). overridevirtual . Override from TRootBrowser. ; We need to be more brutal as fBrowser is not set in Eve case. ; Reimplemented from TGFrame.; Definition at line 769 of file TEveBrowser.cxx. ◆ SanitizeTabCounts(). void TEveBrowser::SanitizeTabC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBrowser.html:47290,plugin,plugins,47290,doc/master/classTEveBrowser.html,https://root.cern,https://root.cern/doc/master/classTEveBrowser.html,1,['plugin'],['plugins']
Modifiability,"me(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fCancelcancel button; TGLabel*fLabeltext entry label; TGTextButton*fOkok button; char*fRetStraddress to store return string; TGTextEntry*fTEtext entry widget. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); Create simple input dialog. It is important to know that the case where the constructor in; which all the variables are initialized to their default values is; only used for the TBrowser to inspect on the classes. For normal; use the only variable that should be free is options. Variables prompt, defval are the content of the input dialog while; retstr has to be initialized to a char[256]. In case these are not; initialized, they will show default values while retstr will be; automatically allocated by the dialog. However this will make; impossible to retrieve the value entered by the dialog. To see TGInputDialog in use see:; $ROOTSYS/tutorials/testInputDialog.cxx. ~TGInputDialog(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and text enter events. TGInputDialog(const TGInputDialog& ). TGInputDialog & operator=(const TGInputDialog& ). » Author: David Gonzalez Maline 19/07/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGInputDialog.html:22504,variab,variable,22504,root/html534/TGInputDialog.html,https://root.cern,https://root.cern/root/html534/TGInputDialog.html,3,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"me(fBLbl4, lo);; 1003 //--- IList text entry; 1004 fBarListIn = new TGTextEntry(fBFrame, new TGTextBuffer(100));; 1005 fBarListIn->SetWidth(60);; 1006 fBarListIn->SetToolTipText(""Name of a previously created event list"");; 1007 fBFrame->AddFrame(fBarListIn, lo);; 1008 //--- label for OList text entry; 1009 fBLbl5 = new TGLabel(fBFrame,""OList"");; 1010 fBFrame->AddFrame(fBLbl5, lo);; 1011 //--- OList text entry; 1012 fBarListOut = new TGTextEntry(fBFrame, new TGTextBuffer(100));; 1013 fBarListOut->SetWidth(60);; 1014 fBarListOut->SetToolTipText(""Output event list. Use <Draw> to generate it."");; 1015 fBFrame->AddFrame(fBarListOut, lo);; 1016 //--- Status bar; 1017 fStatusBar = new TGStatusBar(fBFrame, 10, 10);; 1018 fStatusBar->SetWidth(200);; 1019 fStatusBar->Draw3DCorner(false);; 1020 lo = new TGLayoutHints(kLHintsCenterX | kLHintsCenterY | kLHintsLeft | kLHintsExpandX, 2,2,2,2);; 1021 fWidgets->Add(lo);; 1022 fBFrame->AddFrame(fStatusBar, lo);; 1023 //--- RESET button; 1024 fReset = new TGTextButton(fBFrame,""RESET"",kRESET);; 1025 fReset->SetToolTipText(""Reset variable's fields and drawing options"");; 1026 fReset->Associate(this);; 1027 lo = new TGLayoutHints(kLHintsTop | kLHintsRight, 2,2,2,2);; 1028 fWidgets->Add(lo);; 1029 fBFrame->AddFrame(fReset,lo);; 1030 //--- group of buttons for session handling; 1031 fBGFirst = new TGPictureButton(fBFrame,; 1032 gClient->GetPicture(""first_t.xpm""), kBGFirst);; 1033 fBGFirst->SetToolTipText(""First record"");; 1034 fBGFirst->Associate(this);; 1035 fBGPrevious = new TGPictureButton(fBFrame,; 1036 gClient->GetPicture(""previous_t.xpm""), kBGPrevious);; 1037 fBGPrevious->SetToolTipText(""Previous record"");; 1038 fBGPrevious->Associate(this);; 1039 fBGRecord = new TGPictureButton(fBFrame,; 1040 gClient->GetPicture(""record_t.xpm""), kBGRecord);; 1041 fBGRecord->SetToolTipText(""Record"");; 1042 fBGRecord->Associate(this);; 1043 fBGNext = new TGPictureButton(fBFrame,; 1044 gClient->GetPicture(""next_t.xpm""), kBGNext);; 1045 fBGNext->SetToolT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8cxx_source.html:40662,variab,variable,40662,doc/master/TTreeViewer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8cxx_source.html,1,['variab'],['variable']
Modifiability,"me(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidRooPrintable::printTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidRooPrintable::printValue(ostream& os) const; voidsetYAxisLabel(const char* label); voidsetYAxisLimits(Double_t ymin, Double_t ymax); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidupdateYAxisLimits(Double_t y). Data Members; public:. enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; Double_t_normValue; TString_yAxisLabel; Double_t_ymax; Double_t_ymin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print detailed information. TObject * crossCast(); Return cast of RooPlotable as TObject. Note that is this a cross; cast that will change the pointer value in most cases. virtual ~RooPlotable(); { }. const char* getYAxisLabel() const; { return _yAxisLabel.Data(); }. void setYAxisLabel(const char* label); { _yAxisLabel= label; }. void updateYAxisLimits(Double_t y). void setYAxisLimits(Double_t ymin, Double_t ymax). Double_t getYAxisMin() const; { return _ymin; }. Double_t getYAxisMax() const; { return _ymax; }. Double_t getFitRangeNEvt() const; the normalization value refers to the full ""fit range"" instead of; the ""plot range"". Double_t getFitRangeNEvt(Double_t xlo, Double_t xhi) const. Double_t getFitRangeBinW() const. » Last changed: Tue Mar 10 17:18:25 2015 » Last generated: 2015-03-10 17:18; This page has been automatically generat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooPlotable.html:2726,Inherit,Inheritance,2726,root/html534/RooPlotable.html,https://root.cern,https://root.cern/root/html534/RooPlotable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEpsilon() const; Double_tGetError(Int_t event) const; Double_tGetError(TMultiLayerPerceptron::EDataSet set) const; Double_tGetEta() const; Double_tGetEtaDecay() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetReset() const; TStringGetStructure() const; Double_tGetTau() const; virtual const char*TObject::GetTitle() const; TNeuron::ENeuronTypeGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Bool_tLoadWeights(Option_t* filename = """"); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiLayerPerceptron.html:12451,Inherit,InheritsFrom,12451,root/html534/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html534/TMultiLayerPerceptron.html,1,['Inherit'],['InheritsFrom']
Modifiability,"me) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEpsilon() const; Double_tGetError(Int_t event) const; Double_tGetError(TMultiLayerPerceptron::EDataSet set) const; Double_tGetEta() const; Double_tGetEtaDecay() const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetReset() const; TStringGetStructure() const; Double_tGetTau() const; virtual const char*TObject::GetTitle() const; TNeuron::ENeuronTypeGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; voidLoadWeights(Option_t* filename = """"); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMultiLayerPerceptron.html:12453,Inherit,InheritsFrom,12453,root/html532/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html532/TMultiLayerPerceptron.html,1,['Inherit'],['InheritsFrom']
Modifiability,"me) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Float_tGetAngle3D(); Double_tGetAngularOffset(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntries(); Int_tGetEntryFillColor(Int_t); Int_tGetEntryFillStyle(Int_t); const char*GetEntryLabel(Int_t); Int_tGetEntryLineColor(Int_t); Int_tGetEntryLineStyle(Int_t); Int_tGetEntryLineWidth(Int_t); Double_tGetEntryRadiusOffset(Int_t); Double_tGetEntryVal(Int_t); const char*GetFractionFormat(); Double_tGetHeight(); virtual const char*TObject::GetIconName() const; const char*GetLabelFormat(); Float_tGetLabelsOffset(); TLegend*GetLegend(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetPercentFormat(); Double_tGetRadius(); TPieSlice*GetSlice(Int_t i); virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual Color_tTAttText::GetTextColor() const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValueFormat(); Double_tGetX(); Double_tGetY(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; TLegend*MakeLegend(Double_t x1 = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPie.html:3202,Inherit,InheritsFrom,3202,root/html602/TPie.html,https://root.cern,https://root.cern/root/html602/TPie.html,4,['Inherit'],['InheritsFrom']
Modifiability,"me) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TClass*GetClassPointer(Bool_t load = kTRUE); Int_tGetDelta() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Int_tIsSTLContainer(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBaseClass.html:2936,Inherit,InheritsFrom,2936,root/html534/TBaseClass.html,https://root.cern,https://root.cern/root/html534/TBaseClass.html,1,['Inherit'],['InheritsFrom']
Modifiability,"me) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const char*GetCWD(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetMaxOpenedFies() const; TList*GetMergeList() const; const char*GetMsgPrefix() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFile*GetOutputFile() const; const char*GetOutputFileName() const; Int_tGetPrintLevel() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasCompressionChange() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tMerge(Bool_t = kTRUE); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileMerger.html:3212,Inherit,InheritsFrom,3212,root/html532/TFileMerger.html,https://root.cern,https://root.cern/root/html532/TFileMerger.html,1,['Inherit'],['InheritsFrom']
Modifiability,"me) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const char*TControlBarButton::GetAction() const; TControlBarButton*GetClicked() const; TControlBarImp*GetControlBarImp() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfButtons() const; virtual const char*TNamed::GetName() const; Int_tGetNumberOfColumns() const; Int_tGetNumberOfRows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetOrientation() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTControlBarButton::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidHide(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TControlBar.html:5420,Inherit,InheritsFrom,5420,root/html532/TControlBar.html,https://root.cern,https://root.cern/root/html532/TControlBar.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const char*TControlBarButton::GetAction() const; TControlBarButton*GetClicked() const; TControlBarImp*GetControlBarImp() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfButtons() const; virtual const char*TNamed::GetName() const; Int_tGetNumberOfColumns() const; Int_tGetNumberOfRows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetOrientation() const; virtual const char*TNamed::GetTitle() const; virtual Int_tTControlBarButton::GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidHide(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TControlBar.html:5243,Inherit,InheritsFrom,5243,root/html602/TControlBar.html,https://root.cern,https://root.cern/root/html602/TControlBar.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me) const; virtual stringVariableName(unsigned int ivar) const; virtual const double*X() const. private:. ROOT::Math::Minimizer&operator=(const ROOT::Math::Minimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsfOptionsminimizer options; intfStatusstatus of minimizer ; boolfValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~Minimizer(). Destructor (no operations). {}. void Clear(); reset for consecutive minimizations - implement if needed. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set a function to minimize using gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a new free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set a new lower limit variable (override if minimizer supports them ). return SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower, double upper). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a new upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int ivar, const string& name, double val); set a new fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double value); set the value of an already existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool SetVariableStepSize(unsigned int ivar, double value); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:5700,variab,variable,5700,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,2,['variab'],['variable']
Modifiability,"me) constInternal utility function for createIntegral() that creates the actual integral object.Definition RooAbsReal.cxx:590; RooAbsReal::functorRooFunctor * functor(const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) constReturn a RooFunctor object bound to this RooAbsReal with given definition of observables and paramete...Definition RooAbsReal.cxx:3887; RooAbsReal::createPlotProjectionconst RooAbsReal * createPlotProjection(const RooArgSet &depVars, const RooArgSet &projVars, RooArgSet *&cloneSet) constUtility function for plotOn() that creates a projection of a function or p.d.f to be plotted on a Roo...Definition RooAbsReal.cxx:787; RooAbsReal::plotSamplingHintvirtual std::list< double > * plotSamplingHint(RooAbsRealLValue &obs, double xlo, double xhi) constInterface for returning an optional hint for initial sampling points when constructing a curve projec...Definition RooAbsReal.cxx:3571; RooAbsReal::setPlotLabelvoid setPlotLabel(const char *label)Set the label associated with this variable.Definition RooAbsReal.cxx:416; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooAbsReal::doEvalvirtual void doEval(RooFit::EvalContext &) constBase function for computing multiple values of a RooAbsReal.Definition RooAbsReal.cxx:4343; RooAbsReal::makeProjectionSetvoid makeProjectionSet(const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) constUtility function for plotOn() that constructs the set of observables to project when plotting ourselv...Definition RooAbsReal.cxx:2903; RooAbsReal::getMaxValvirtual Int_t getMaxVal(const RooArgSet &vars) constAd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:233456,variab,variable,233456,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"me)Replace in Formula expression the parameter name.Definition TFormula.cxx:3020; TFormula::SetPredefinedParamNamesvoid SetPredefinedParamNames()Set parameter names only in case of pre-defined functions.Definition TFormula.cxx:2471; TFormula::Copyvoid Copy(TObject &f1) const overrideCopy this to obj.Definition TFormula.cxx:684; TFormula::Classstatic TClass * Class(); TFormula::fConstsstd::map< TString, Double_t > fConsts!Definition TFormula.h:146; TFormula::fFunctionsShortcutsstd::map< TString, TString > fFunctionsShortcuts!Definition TFormula.h:147; TFormula::TFormulaTFormula()Definition TFormula.cxx:438; TFormula::HandleParamRangesvoid HandleParamRanges(TString &formula)Handling parameter ranges, in the form of [1..5].Definition TFormula.cxx:1320; TFormula::fLinearPartsstd::vector< TObject * > fLinearPartsVector of linear functions.Definition TFormula.h:152; TFormula::IsBracketstatic Bool_t IsBracket(const char c)Definition TFormula.cxx:294; TFormula::fVectorizedBool_t fVectorizedWhether we should use vectorized or regular variables.Definition TFormula.h:153; TFormula::fClingInputTString fClingInput! Input function passed to ClingDefinition TFormula.h:93; TFormula::PrepareEvalMethodBool_t PrepareEvalMethod()Sets TMethodCall to function inside Cling environment.Definition TFormula.cxx:861; TFormula::fNumberInt_t fNumberNumber used to identify pre-defined functions (gaus, expo,..)Definition TFormula.h:151; TFormula::GetGradientFuncNamestd::string GetGradientFuncName() constDefinition TFormula.h:128; TFormula::fIsCladRuntimeIncludedstatic bool fIsCladRuntimeIncludedDefinition TFormula.h:111; TFormula::CladStoragestd::vector< Double_t > CladStorageDefinition TFormula.h:184; TFormula::GetVariableDouble_t GetVariable(const char *name) constReturns variable value.Definition TFormula.cxx:2686; TFormula::fFuncsstd::list< TFormulaFunction > fFuncs!Definition TFormula.h:143; TFormula::fAllParametersSettedBool_t fAllParametersSettedFlag to control if all parameters are setted",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:157653,variab,variables,157653,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"me*TGeoNode::GetMotherVolume() const; virtual const char*TNamed::GetName() const; Int_tTGeoNode::GetNdaughters() const; TObjArray*TGeoNode::GetNodes() const; Int_tTGeoNode::GetNumber() const; virtual char*TGeoNode::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Double_tGetOffset() const; virtual Int_tTGeoNode::GetOptimalVoxels() const; virtual Option_t*TObject::GetOption() const; Int_t*TGeoNode::GetOverlaps(Int_t& novlp) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TGeoExtension*TGeoNode::GetUserExtension() const; TGeoVolume*TGeoNode::GetVolume() const; TGeoExtension*TGeoNode::GrabFWExtension() const; TGeoExtension*TGeoNode::GrabUserExtension() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTGeoNode::InspectNode() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoAtt::IsActive() const; Bool_tTGeoAtt::IsActiveDaughters() const; Bool_tTGeoNode::IsCloned() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTGeoNode::IsFolder() const; Bool_tTGeoNode::IsOffset() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoNode::IsOnScreen() constMENU ; Bool_tTGeoNode::IsOverlapping() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoNode::IsVirtual() const; Bool_tTGeoAtt::IsVisBranch() const; Bool_tTGeoAtt::IsVisContainers() const; Bool_tTGeoNode::IsVisDaughters() const; Bool_tTGeoNode::IsVisible() const; Bool_tTGeoAtt::IsVisLeaves() const; Bool_tTGeoAtt::IsVisOnly() const; Bool_tTGeoAtt::IsVisRaytrace() const; Bool_tTGeoAtt::IsVisStreamed() const; Bool_tTGeoAtt::IsVisTouched() const; Bool_tTObject::IsZombie() const; virtual voidTGeoNode::Lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNodeOffset.html:6601,Inherit,InheritsFrom,6601,root/html534/TGeoNodeOffset.html,https://root.cern,https://root.cern/root/html534/TGeoNodeOffset.html,3,['Inherit'],['InheritsFrom']
Modifiability,"me, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void ResetCount ();  Static function resetting fgCount. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; using BulkObj = ROOT::Experimental::Internal::TBulkBranchRead;  ; using CacheInfo_t = ROOT::Internal::TBranchCacheInfo;  ; enum  EStatusBits { ;   kDoNotProcess = ::kDoNotProcess; , kIsClone = ::kIsClone; , kBranchObject = ::kBranchObject; , kBranchAny = ::kBranchAny; , ;   kAutoDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:19597,inherit,inherited,19597,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,2,['inherit'],['inherited']
Modifiability,"me, LineStyle(kDashed));; ; // Draw frame on canvas; new TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; }; RooDataSet.h; RooFFTConvPdf.h; RooGaussian.h; RooLandau.h; RooPlot.h; RooRealVar.h; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooLandauLandau distribution p.d.f.Definition RooLandau.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf208_convolutionDefinition rf208_convolution.py:1; ; [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x56539f82d770 with pdf lx_CONV_gauss_CACH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf208__convolution_8C.html:2956,variab,variable,2956,doc/master/rf208__convolution_8C.html,https://root.cern,https://root.cern/doc/master/rf208__convolution_8C.html,1,['variab'],['variable']
Modifiability,"me, RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines the analytical integral translation for the class. ;  ; TObject * clone (const char *newname) const override;  ; void generateEvent (Int_t code) override;  Implement internal generator. ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Advertise analytical integral. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Advertise internal generator. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::uni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUniform.html:1765,inherit,inherited,1765,doc/master/classRooUniform.html,https://root.cern,https://root.cern/doc/master/classRooUniform.html,1,['inherit'],['inherited']
Modifiability,"me, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRInterface(). TRInterface::TRInterface ; (; const Int_t ; argc = 0, . const Char_t * ; argv[] = NULL, . const Bool_t ; loadRcpp = true, . const Bool_t ; verbose = false, . const Bool_t ; interactive = true . ). private . The command line arguments are by default argc=0 and argv=NULL, The verbose mode is by default disabled but you can enable it to show procedures information in stdout/stderr. ; Notesome time can produce so much noise in the output ; Parameters. argcdefault 0 ; argvdefault null ; loadRcppdefault true ; verbosedefault false ; interactivedefault true . Definition at line 33 of file TRInterface.cxx. ◆ ~TRInterface(). TRInterface::~TRInterface ; (; ). Definition at line 71 of file TRInterface.cxx. Member Function Documentation. ◆ Assign() [1/3]. template<typename T > . void ROOT::R::TRInterface::Assign ; (; const T & ; var, . const TString & ; name . ). inline . Template method to assign C++ variables into R environment. ; Parameters. varany R wrappable datatype ; namename of the variable in R's environment . Definition at line 258 of file TRInterface.h. ◆ Assign() [2/3]. void TRInterface::Assign ; (; const TRDataFrame & ; df, . const TString & ; name . ). Method to assign TRDataFrame in R's environment. ; Parameters. dfTRDataFrame ; namename of the variable in R's environment . Definition at line 154 of file TRInterface.cxx. ◆ Assign() [3/3]. void TRInterface::Assign ; (; const TRFunctionExport & ; fun, . const TString & ; name . ). Method to assign TRFunctionExport in R's environment. ; Parameters. funTRFunctionExport ; namename of the variable in R's environment . Definition at line 148 of file TRInterface.cxx. ◆ Class(). static TClass * ROOT::R::TRInterface::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * ROOT::R::TRInterface::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html:19213,variab,variables,19213,doc/master/classROOT_1_1R_1_1TRInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html,1,['variab'],['variables']
Modifiability,"me, const ROOT::Math::IBaseFunctionMultiDim &ftor, const RooArgList &vars);  ; RooAbsReal * bindFunction (const char *name, const ROOT::Math::IBaseFunctionOneDim &ftor, RooAbsReal &vars);  ; RooAbsReal * bindFunction (TF1 *func, RooAbsReal &x);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF1 *func, RooAbsReal &x, const RooArgList &params);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF2 *func, RooAbsReal &x, RooAbsReal &y);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF2 *func, RooAbsReal &x, RooAbsReal &y, const RooArgList &params);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF3 *func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF3 *func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z, const RooArgList &params);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsPdf * bindPdf (const char *name, CFUNCD1D func, RooAbsReal &x);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD1I func, RooAbsReal &x);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2DD func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2DI func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2ID func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2II func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2UD func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD3DDB func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD3DDD func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD3DII func, RooAbsReal &x, RooAbsReal &y, RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooFit.html:6632,variab,variables,6632,doc/master/namespaceRooFit.html,https://root.cern,https://root.cern/doc/master/namespaceRooFit.html,1,['variab'],['variables']
Modifiability,"me, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Protected Member Functions; void DoRedraw () override;  Draw selected pattern as current one. ;  ;  Protected Member Functions inherited from TGedSelect; void DoRedraw () override;  Draw separator and arrow. ;  ; void DrawTriangle (GContext_t gc, Int_t x, Int_t y);  Draw small triangle. ;  ;  Protected Member Functions inherited from TGCheckButton; void EmitSignals (Bool_t wasUp=kTRUE) override;  Emit signals. ;  ; void Init ();  Common check button initialization. ;  ; void PSetState (EButtonState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedPatternSelect.html:24778,inherit,inherited,24778,doc/master/classTGedPatternSelect.html,https://root.cern,https://root.cern/doc/master/classTGedPatternSelect.html,1,['inherit'],['inherited']
Modifiability,"me, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPalette.html:19510,inherit,inherited,19510,doc/master/classTGColorPalette.html,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html,6,['inherit'],['inherited']
Modifiability,"me, const char *title, InitializationOutput &&initInfo);  Private internal constructor. ;  . Static Private Member Functions; static std::unique_ptr< RooSimultaneous::InitializationOutput > initialize (std::string const &name, RooAbsCategoryLValue &inIndexCat, std::map< std::string, RooAbsPdf * > const &pdfMap);  . Private Attributes; std::unique_ptr< RooArgSet > _indexCatSet;  ! Index category wrapped in a RooArgSet if needed internally ;  . Friends; class RooSimGenContext;  ; class RooSimSplitGenContext;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:75323,inherit,inherited,75323,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,4,['inherit'],['inherited']
Modifiability,"me, const char* title, const RooArgSet& obs); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. Bool_t_expectedDataAsimov?; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; RooDataSet*RooAbsGenContext::_genData! Data being generated; RooDataHist*_histHistogram ; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooAbsPdf*_pdfPointer to cloned p.d.f; RooArgSet*_pdfSetSet owned all nodes of internal clone of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBinnedGenContext.html:7702,Extend,ExtendModeRooAbsGenContext,7702,root/html534/RooBinnedGenContext.html,https://root.cern,https://root.cern/root/html534/RooBinnedGenContext.html,1,['Extend'],['ExtendModeRooAbsGenContext']
Modifiability,"me, const char* title, const RooArgSet& obs); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio); voidupdateCCDTable(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooArgSet*_ccdCloneSet; Bool_t_ccdRefresh; RooSuperCategory*_ccdSuperSuperCategory of Common category dependents; Double_t*_ccdTable; RooArgSet_commonCatsCommon category dependents; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; TIterator*_gcIter! Iterator over gcList; TList_gcListList of component generator contexts; RooDataSet*RooAbsGenContext::_genData! Data being generated; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooArgSet_ownedMultiProdsOwned auxilary multi-term product PDFs; const RooProdPdf*_pdfOriginal PDF; RooRealIntegral*_pdfCcdInt; RooAbsPdf*_pdfClone; RooArgSet*_pdfCloneSet; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototyp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooProdGenContext.html:7879,extend,extended,7879,root/html530/RooProdGenContext.html,https://root.cern,https://root.cern/root/html530/RooProdGenContext.html,1,['extend'],['extended']
Modifiability,"me, const char* title, const RooArgSet& obs); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio); voidupdateCCDTable(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooArgSet*_ccdCloneSet; Bool_t_ccdRefresh; RooSuperCategory*_ccdSuperSuperCategory of Common category dependents; Double_t*_ccdTable; RooArgSet_commonCatsCommon category dependents; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; list<RooAbsGenContext*>_gcListList of component generator contexts; RooDataSet*RooAbsGenContext::_genData! Data being generated; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooArgSet_ownedMultiProdsOwned auxilary multi-term product PDFs; const RooProdPdf*_pdfOriginal PDF; RooRealIntegral*_pdfCcdInt; RooAbsPdf*_pdfClone; RooArgSet*_pdfCloneSet; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProdGenContext.html:7905,extend,extended,7905,root/html532/RooProdGenContext.html,https://root.cern,https://root.cern/root/html532/RooProdGenContext.html,4,['extend'],['extended']
Modifiability,"me, instead of being sent back at the end in one go. This may help debugging or monitoring in some cases, but, depending on the amount of log, it may have significant consequencies on the load over the network, so it must be used with care. ; Definition at line 7096 of file TProof.cxx. ◆ SetRunStatus(). void TProof::SetRunStatus ; (; ERunStatus ; rst). inlineprivate . Definition at line 672 of file TProof.h. ◆ SetupWorkersEnv(). void TProof::SetupWorkersEnv ; (; TList * ; wrks, . Bool_t ; increasingpool = kFALSE . ). protected . Set up packages, loaded macros, include and lib paths ... ; Definition at line 1528 of file TProof.cxx. ◆ ShowCache(). void TProof::ShowCache ; (; Bool_t ; all = kFALSE). virtual . List contents of file cache. ; If all is true show all caches also on slaves. If everything is ok all caches are to be the same. ; Reimplemented in TProofLite.; Definition at line 7691 of file TProof.cxx. ◆ ShowData(). void TProof::ShowData ; (; ). virtual . List contents of the data directory in the sandbox. ; This is the place where files produced by the client queries are kept ; Reimplemented in TProofLite.; Definition at line 7396 of file TProof.cxx. ◆ ShowDataSet(). void TProof::ShowDataSet ; (; const char * ; dataset = """", . const char * ; opt = ""filter:SsCc"" . ). display meta-info for given dataset usi ; Definition at line 10977 of file TProof.cxx. ◆ ShowDataSetCache(). void TProof::ShowDataSetCache ; (; const char * ; dataset = 0). virtual . Display the content of the dataset cache, if any (matching 'dataset', if defined). ; Reimplemented in TProofLite.; Definition at line 10914 of file TProof.cxx. ◆ ShowDataSetQuota(). void TProof::ShowDataSetQuota ; (; Option_t * ; opt = 0). shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ; Definition at line 11309 of file TProof.cxx. ◆ ShowDataSets(). void TProof::ShowDataSets ; (; const char * ; uri = """", . const char * ; optStr = """" . ). virtual . Shows datase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:148205,sandbox,sandbox,148205,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['sandbox'],['sandbox']
Modifiability,"me, retTypeName, std::move(expression), *fLoopManager);; 751 ; 752 RDFInternal::RColumnRegister newCols(fColRegister);; 753 newCols.AddDefine(std::move(newColumn));; 754 RInterface<Proxied> newInterface(fProxiedPtr, *fLoopManager, std::move(newCols));; 755 return newInterface;; 756 }; 757 ; 758 // clang-format off; 759 ////////////////////////////////////////////////////////////////////////////; 760 /// \brief Define a new column that is updated when the input sample changes.; 761 /// \param[in] name The name of the defined column.; 762 /// \param[in] expression A valid C++ expression as a string, which will be used to compute the defined value.; 763 /// \return the first node of the computation graph for which the new quantity is defined.; 764 ///; 765 /// The expression is just-in-time compiled and used to produce the column entries.; 766 /// It must be valid C++ syntax and the usage of the special variable names `rdfslot_` and `rdfsampleinfo_` is; 767 /// permitted, where these variables will take the same values as the `slot` and `id` parameters described at the; 768 /// DefinePerSample(std::string_view name, F expression) overload. See the documentation of that overload for more information.; 769 ///; 770 /// ### Example usage:; 771 /// ~~~{.py}; 772 /// df = ROOT.RDataFrame('mytree', ['sample1.root','sample2.root']); 773 /// df.DefinePerSample('weightbysample', 'rdfsampleinfo_.Contains(""sample1"") ? 1.0f : 2.0f'); 774 /// ~~~; 775 ///; 776 /// \note; 777 /// If you have declared some C++ function to the interpreter, the correct syntax to call that function with this; 778 /// overload of DefinePerSample is by calling it explicitly with the special names `rdfslot_` and `rdfsampleinfo_` as; 779 /// input parameters. This is for example the correct way to call this overload when working in PyROOT:; 780 /// ~~~{.py}; 781 /// ROOT.gInterpreter.Declare(; 782 /// """"""; 783 /// float weights(unsigned int slot, const ROOT::RDF::RSampleInfo &id){; 784 /// return id.Contains",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:40629,variab,variable,40629,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,2,['variab'],"['variable', 'variables']"
Modifiability,"me. ; if branchDescriptor = """" (default), it is assumed that the Tree descriptor is given in the first line of the file with a syntax like A/D:Table[2]/F:Ntracks/I:astring/C; F#define F(x, y, z); I#define I(x, y, z); otherwise branchDescriptor must be specified with the above syntax. If the type of the first variable is not specified, it is assumed to be ""/F""; If the type of any other variable is not specified, the type of the previous variable is assumed. eg; x:y:z (all variables are assumed of type ""F""); x/D:y:z (all variables are of type ""D""); x:y/D:z (x is type ""F"", y and z of type ""D""). delimiter allows for the use of another delimiter besides whitespace. This provides support for direct import of common data file formats like csv. If delimiter != ' ' and branchDescriptor == """", then the branch description is taken from the first line in the file, but delimiter is used for the branch names tokenization rather than ':'. Note however that if the values in the first line do not use the /[type] syntax, all variables are assumed to be of type ""F"". If the filename ends with extensions .csv or .CSV and a delimiter is not specified (besides ' '), the delimiter is automatically set to ','.; Lines in the input file starting with ""#"" are ignored. Leading whitespace for each column data is skipped. Empty lines are skipped.; A TBranch object is created for each variable in the expression. The total number of rows read from the file is returned. FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; To fill a TTree with multiple input text files, proceed as indicated above for the first input file and omit the second argument for subsequent calls T.ReadFile(""file1.dat"",""branch descriptor"");; T.ReadFile(""file2.dat"");. Definition at line 7564 of file TTree.cxx. ◆ ReadStream(). Long64_t TTree::ReadStream ; (; std::istream & ; inputStream, . const char * ; branchDescriptor = """", . char ; delimiter = ' ' . ). virtual . Create or simply read branches from an input stream. ; See alsorefer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:194238,variab,variables,194238,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['variab'],['variables']
Modifiability,"me::(anonymous)TGMainFrame::kDontCallClose. private:. TGTextButton*fClosecancel button; TGColorSelect*fConfColorColor for the graph; TGVerticalFrame*fConfFrameConfidence Intervals Frame; TGNumberEntry*fConfLevelConfidence Level; TGColorSelect*fContourColorColor for the graph; TGNumberEntry*fContourErrorError Level for Contour; TGVerticalFrame*fContourFrameContour Frame; TGCheckButton*fContourOverSuperimpose the graphics; TGComboBox*fContourPar1Parameter 1 for Contour; TGComboBox*fContourPar2Parameter 2 for Contour; TGNumberEntry*fContourPointsNumber of points for the graph; TGTextButton*fDrawok button; TBackCompFitter*fFitterFitter.; TGVerticalFrame*fMainFrameMain Vertical Frame; TGVerticalFrame*fScanFrameScan Frame; TGNumberEntry*fScanMaxMax Value for Contour; TGNumberEntry*fScanMinMin Value for Contour; TGComboBox*fScanParParameter for Scan; TGNumberEntry*fScanPointsNumber of points for the graph; TGTab*fTabTab containing the available methods. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAdvancedGraphicsDialog(const TGWindow* p, const TGWindow* main); Creates the Advanced Graphics Dialog. void CreateContourFrame(); Create the frame that contains all the necessary information for; the Contour method. void CreateScanFrame(); Create the frame that contains all the necessary information for; the Scan method. void CreateConfFrame(); Create the frame that contains all the necessary information for; the Confidence Level method. void AddParameters(TGComboBox* ); Add all the parameters of the VirtualFitter into a comboBox; (helper method). void ConnectSlots(); Connect the slots (buttons mainly + specific methods). void DoChangedScanPar(Int_t selected); Changes the Min and Max default values of the scan method,; depending on the selected parameter. void DoDraw(); Calls the correspoding method, depending on the selected tab. void DrawContour(); Generates all necessary data for the Contour method from its; tab. Then it call Virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAdvancedGraphicsDialog.html:24396,Inherit,Inheritance,24396,root/html602/TAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/root/html602/TAdvancedGraphicsDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; Bool_tIsCloseShown() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTabElement.html:8715,Inherit,InheritsFrom,8715,root/html532/TGTabElement.html,https://root.cern,https://root.cern/root/html532/TGTabElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; Bool_tIsCloseShown() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTabElement.html:8462,Inherit,InheritsFrom,8462,root/html602/TGTabElement.html,https://root.cern,https://root.cern/root/html602/TGTabElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSymLink() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFileItem.html:9053,Inherit,InheritsFrom,9053,root/html532/TGFileItem.html,https://root.cern,https://root.cern/root/html532/TGFileItem.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSymLink() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFileItem.html:8554,Inherit,InheritsFrom,8554,root/html602/TGFileItem.html,https://root.cern,https://root.cern/root/html602/TGFileItem.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidTGFram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLBEntry.html:8758,Inherit,InheritsFrom,8758,root/html532/TGLBEntry.html,https://root.cern,https://root.cern/root/html532/TGLBEntry.html,4,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLBEntry.html:8650,Inherit,InheritsFrom,8650,root/html602/TGLBEntry.html,https://root.cern,https://root.cern/root/html602/TGLBEntry.html,4,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGScrollBarElement.html:8813,Inherit,InheritsFrom,8813,root/html532/TGScrollBarElement.html,https://root.cern,https://root.cern/root/html532/TGScrollBarElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tIsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidTG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGScrollBarElement.html:8628,Inherit,InheritsFrom,8628,root/html602/TGScrollBarElement.html,https://root.cern,https://root.cern/root/html602/TGScrollBarElement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidMapSubwindows(); virtual voidTGFrame::MapWin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGCanvas.html:9685,Inherit,InheritsFrom,9685,root/html532/TGCanvas.html,https://root.cern,https://root.cern/root/html532/TGCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidLayoutHeader(TGFrame* head); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGListView.html:9569,Inherit,InheritsFrom,9569,root/html532/TGListView.html,https://root.cern,https://root.cern/root/html532/TGListView.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidLayoutHeader(TGFrame* head); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCanvas::MapSubwindows(); virtual voidTG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGListView.html:9430,Inherit,InheritsFrom,9430,root/html602/TGListView.html,https://root.cern,https://root.cern/root/html602/TGListView.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidMapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGCanvas.html:9536,Inherit,InheritsFrom,9536,root/html602/TGCanvas.html,https://root.cern,https://root.cern/root/html602/TGCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGCanvas::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCanvas::MapSubwindows(); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootEmbeddedCanvas.html:8882,Inherit,InheritsFrom,8882,root/html532/TRootEmbeddedCanvas.html,https://root.cern,https://root.cern/root/html532/TRootEmbeddedCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGCanvas::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCanvas::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootEmbeddedCanvas.html:8722,Inherit,InheritsFrom,8722,root/html602/TRootEmbeddedCanvas.html,https://root.cern,https://root.cern/root/html602/TRootEmbeddedCanvas.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColorFrame.html:8788,Inherit,InheritsFrom,8788,root/html532/TGColorFrame.html,https://root.cern,https://root.cern/root/html532/TGColorFrame.html,20,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGColorFrame.html:8724,Inherit,InheritsFrom,8724,root/html602/TGColorFrame.html,https://root.cern,https://root.cern/root/html602/TGColorFrame.html,20,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLBEntry::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGIconLBEntry.html:9144,Inherit,InheritsFrom,9144,root/html532/TGIconLBEntry.html,https://root.cern,https://root.cern/root/html532/TGIconLBEntry.html,8,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGFrame::HandleKey(Event_t*); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLBEntry::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTGFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGIconLBEntry.html:8973,Inherit,InheritsFrom,8973,root/html602/TGIconLBEntry.html,https://root.cern,https://root.cern/root/html602/TGIconLBEntry.html,8,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tHandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tHandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMainFrame.html:10414,Inherit,InheritsFrom,10414,root/html532/TGMainFrame.html,https://root.cern,https://root.cern/root/html532/TGMainFrame.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tHandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tHandleSelectionRequest(Event_t* event); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); virtual voidTGWindow:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGMainFrame.html:10318,Inherit,InheritsFrom,10318,root/html602/TGMainFrame.html,https://root.cern,https://root.cern/root/html602/TGMainFrame.html,2,['Inherit'],['InheritsFrom']
Modifiability,"me::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; voidHide(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tIsEmbedded() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGuiBldEditor.html:8925,Inherit,InheritsFrom,8925,root/html532/TGuiBldEditor.html,https://root.cern,https://root.cern/root/html532/TGuiBldEditor.html,4,['Inherit'],['InheritsFrom']
Modifiability,"me::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TG16ColorSelector(const TGWindow* p = 0); TG16ColorSelector constructor.; The TG16ColorSelector is a composite frame with 16 TGColorFrames. ~TG16ColorSelector(); TG16ColorSelector destructor. void SetActive(Int_t newat); Set active color frame. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process messages for TG16ColorSelector. TGColorFrame& operator=(const TG16ColorSelector& ). TG16ColorSelector(const TG16ColorSelector& ). Int_t GetActive(); { return fActive; }. » Author: Bertrand Bellenot + Fons Rademakers 22/08/02 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TG16ColorSelector.html:19424,Inherit,Inheritance,19424,root/html534/TG16ColorSelector.html,https://root.cern,https://root.cern/root/html534/TG16ColorSelector.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; TEveTrackPropagatorSubEditor*fRSSubEditorRender-style sub-editor.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackPropagatorEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. TEveTrackPropagatorSubEditor& operator=(const TEveTrackPropagatorEditor& ). TEveTrackPropagatorEditor(const TEveTrackPropagatorEditor& ). void CreateRefTab(). virtual ~TEveTrackPropagatorEditor(); {}. » Last changed: root/eve:$Id: TEveTrackPropagatorEditor.h 33627 2010-05-27 19:19:58Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTrackPropagatorEditor.html:19974,Inherit,Inheritance,19974,root/html532/TEveTrackPropagatorEditor.html,https://root.cern,https://root.cern/root/html532/TEveTrackPropagatorEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me::fWMWidthWM width; UInt_tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y position; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGUndockedFrame(const TGWindow* p = 0, TGDockableFrame* dockable = 0); Create the undocked (transient) frame. ~TGUndockedFrame(); Delete undocked frame. Puts back dockable frame in its original container. void FixSize(); Fix the size of the undocked frame so it cannot be changed via the WM. void CloseWindow(); Close undocked frame (called via WM close button). TGUndockedFrame(const TGUndockedFrame& ). TGUndockedFrame& operator=(const TGUndockedFrame& ). » Author: Abdelhalim Ssadik 07/07/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-04-23 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGUndockedFrame.html:22175,Inherit,Inheritance,22175,root/html534/TGUndockedFrame.html,https://root.cern,https://root.cern/root/html534/TGUndockedFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me::fWidthframe width; TStringfWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMainFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kVerticalFrame); Create a top level main frame. A main frame interacts; with the window manager. ~TGMainFrame(); TGMainFrame destructor. Bool_t SaveFrameAsCodeOrImage(); Opens dialog window allowing user to save the frame contents; as a ROOT macro or as an image.; Returns kTRUE if something was saved. This is bound to Ctrl-S by default. Bool_t HandleKey(Event_t* event); Handle keyboard events. Bool_t BindKey(const TGWindow* w, Int_t keycode, Int_t modifier) const; Bind key to a window. void RemoveBind(const TGWindow* w, Int_t keycode, Int_t modifier) const; Remove key binding. Bool_t HandleButton(Event_t* event); Handle mouse button events. Bool_t HandleMotion(Event_t* event); Handle mouse motion events. Bool_t HandleSelection(Event_t* event); Handle primary selection event. Bool_t HandleSelectionRequest(Event_t* event); Handle selection request event. Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMainFrame.html:21670,Inherit,Inheritance,21670,root/html532/TGMainFrame.html,https://root.cern,https://root.cern/root/html532/TGMainFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*TGTableCell::fgDefaultFontDefault font; static Pixel_tTGFrame::fgDefaultFrameBackground; static const TGGC*TGTableCell::fgDefaultGCDefault graphics context; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTableHeader(const TGWindow* p = 0, TGTable* table = 0, TGString* label = 0, UInt_t position = 0, EHeaderType type = kColumnHeader, UInt_t width = 80, UInt_t height = 25, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); TGTableHeader constuctor. TGTableHeader(const TGWindow* p, TGTable* table, const char* label, UInt_t position, EHeaderType type = kColumnHeader, UInt_t width = 80, UInt_t height = 25, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t option = 0); TGTableHeader constuctor. ~TGTableHeader(); TGTableHeader destructor. void Init(); Initialize the TGTableHeader. void SetWidth(UInt_t width); Resize the TGTableHeader. void SetHeight(UInt_t height); Resize the TGTableHeader. void SetLabel(const char* label); Set the label of the TGTableHeader to label. void SetDefaultLabel(); Set the label of the TGTableHeader to the default label, ""Row #"";",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTableHeader.html:20353,Inherit,Inheritance,20353,root/html602/TGTableHeader.html,https://root.cern,https://root.cern/root/html602/TGTableHeader.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TGGC*TGContainer::fgLineGC; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. private:. Cursor_tfCursorcurrent cursor; Cursor_tfDefaultCursordefault cursor; TList*fExpressionListlist of user defined expression widgets; TGListView*fListViewassociated list view; TTreeViewer*fViewerpointer to tree viewer. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGContainer. ←; TGLVContainer. ←; TTVLVContainer. Function documentation; TTVLVContainer(const TGWindow* p, UInt_t w, UInt_t h, UInt_t options = kSunkenFrame); TGLVContainer constructor. ~TTVLVContainer(); TGLVContainer destructor. const char* Cut(); return the cut entry. TTVLVEntry * ExpressionItem(Int_t index); return the expression item at specific position. TList* ExpressionList(); return the list of user-defined expressions. const char* Ex(); return the expression on X. const char* Ey(); return the expression on Y. const char* Ez(); return the expression on Z. const char* ScanList(); return the cut entry. Bool_t HandleButton(Event_t* event); Handle mouse button event in container. Bool_t HandleMotion(Event_t* event); Handle mouse motion events. void EmptyAll(); Clear all names and aliases for expression type items. void RemoveNonStatic(); remove all non-static items from the list view, exce",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTVLVContainer.html:26279,Inherit,Inheritance,26279,root/html602/TTVLVContainer.html,https://root.cern,https://root.cern/root/html602/TTVLVContainer.html,2,['Inherit'],['Inheritance']
Modifiability,"me::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. private:. TGTextButton*fCloseOK button; TGLayoutHints*fL1layout of TGTextEdit; TGLayoutHints*fL2layout of OK button; TGTextView*fTextViewText view widget; TSessionViewer*fViewerpointer on main viewer. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGMainFrame. ←; TGTransientFrame. ←; TSessionLogView. Function documentation; TSessionLogView(TSessionViewer* viewer, UInt_t w, UInt_t h); Create an editor in a dialog. ~TSessionLogView(). void SetTitle(); Set title in editor window. void Popup(); Show editor. void AddBuffer(const char* buffer); Load a text buffer in the editor. void ClearLogView(); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the editor. void LoadFile(const char* file); Load a file in the editor. void CloseWindow(); Called when closed via window manager action. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process OK button. TSessionLogView(TSessionViewer* viewer, UInt_t w, UInt_t h). » Author: Bertrand Bellenot, Gerri Ganis 15/09/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-06-02 16:32; This page",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSessionLogView.html:23425,Inherit,Inheritance,23425,root/html604/TSessionLogView.html,https://root.cern,https://root.cern/root/html604/TSessionLogView.html,1,['Inherit'],['Inheritance']
Modifiability,"me::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. private:. TGTextButton*fCloseOK button; TGLayoutHints*fL1layout of TGTextEdit; TGLayoutHints*fL2layout of OK button; TGTextView*fTextViewText view widget; TSessionViewer*fViewerpointer on main viewer. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGMainFrame. ←; TGTransientFrame. ←; TSessionLogView. Function documentation; TSessionLogView(TSessionViewer* viewer, UInt_t w, UInt_t h); Create an editor in a dialog. ~TSessionLogView(). void SetTitle(); Set title in editor window. void Popup(); Show editor. void AddBuffer(const char* buffer); Load a text buffer in the editor. void ClearLogView(); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the editor. void LoadFile(const char* file); Load a file in the editor. void CloseWindow(); Called when closed via window manager action. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process OK button. TSessionLogView(TSessionViewer* viewer, UInt_t w, UInt_t h). » Author: Bertrand Bellenot, Gerri Ganis 15/09/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-06-30 15:30; This page",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionLogView.html:23425,Inherit,Inheritance,23425,root/html602/TSessionLogView.html,https://root.cern,https://root.cern/root/html602/TSessionLogView.html,1,['Inherit'],['Inheritance']
Modifiability,"me::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. private:. Bool_tfApplyif true show Apply button; Bool_tfCancelif true show Cancel button; Bool_tfHelpif true show Online Help button; TGLayoutHints*fL1label layout; TGLayoutHints*fL2text entry layout; TRootContextMenu*fMenuassociated context menu; Bool_tfOkif true show OK button; TList*fWidgetslabel and text field widgets created in dialog. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGMainFrame. ←; TGTransientFrame. ←; TRootDialog. Function documentation; TRootDialog(TRootContextMenu* cmenu = 0, const TGWindow* main = 0, const char* title = ""ROOT Dialog"", Bool_t okB = kTRUE, Bool_t cancelB = kTRUE, Bool_t applyB = kFALSE, Bool_t helpB = kTRUE); Create a method argument prompt dialog. ~TRootDialog(); Delete the dialog. void Add(const char* argname, const char* value, const char* type); Add a label and text input field. const char * GetParameters(); Get parameter string (called by contextmenu after OK or Apply has; been selected). void Popup(); Popup dialog. void CloseWindow(); Called when closed via window manager action. void TabPressed(); Handle Tab keyboard navigation in this dialog. Bool_t HandleKey(Event_t* event); The key press event handler in this dialog. TRootDialog(TRootContextMenu* cmenu = 0, const TGWindow* main = 0, const char* title = ""ROOT Dialog"", Bool_t okB ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootDialog.html:23762,Inherit,Inheritance,23762,root/html602/TRootDialog.html,https://root.cern,https://root.cern/root/html602/TRootDialog.html,2,['Inherit'],['Inheritance']
Modifiability,"me::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGLayoutHints*fBarLayout; Bool_tfBrowseTextFile; TGLayoutHints*fComboLayout; TGComboBox*fDrawOptiondrawing option entry; TGLayoutHints*fExpandLayout; TGHorizontalFrame*fHf; TList*fHistoryhistory of browsing; TObject*fHistoryCursorcurrent hsitory position; const TGPicture*fIconPicicon picture; TGLabel*fLbl1; TGLabel*fLbl2; TGCompositeFrame*fListHdr; TGMenuBar*fMenuBar; TGLayoutHints*fMenuBarHelpLayout; TGLayoutHints*fMenuBarItemLayout; TGLayoutHints*fMenuBarLayout; TStringfTextFileName; TGToolBar*fToolBar; TGHorizontal3DLine*fToolBarSep; TGCompositeFrame*fTreeHdr; TGVerticalFrame*fV1; TGVerticalFrame*fV2; TList*fWidgets. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRootBrowserLite(TBrowser* b = 0, const char* title = ""ROOT Browser"", UInt_t width = 800, UInt_t height = 500); Create browser with a specified width and height. TRootBrowserLite(TBrowser* b, const char* title, Int_t x, Int_t y, UInt_t width, UInt_t height); Create browser with a specified width and height and at position x, y. ~TRootBrowserLite(); Browser destructor. void CreateBrowser(const char* name); Create the actual browser. Bool_t HandleKey(Event_t* event); handle keys. void Add(TObject* obj, const char* name = 0, Int_t check = -1); Add items to the browser. This function has to be called; by the Browse() member function of objects when they are; called by a browser. If check < 0 (default) no check box is drawn,; if 0 then unchecked checkbox is added, if 1 checked checkbox is added. void AddCheckBox(TObject* obj, Bool_t check = kFALSE); Add a checkbox in the TGListTreeItem corresponding to obj; and a checkmark on TGLVEntry if c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootBrowserLite.html:25198,Inherit,Inheritance,25198,root/html532/TRootBrowserLite.html,https://root.cern,https://root.cern/root/html532/TRootBrowserLite.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TRootGuiBuilder*fBuilderpointer to gui builder; Bool_tfDropStatuskTRUE if drop was successfull; TGuiBldEditor*fEditorframe property editor; TGPopupMenu*fFrameMenucontext menu for frames; Bool_tfLassoDrawnkTRUE if lasso drawn; TGPopupMenu*fLassoMenucontext menu for lasso drawn; TList*fListOfDialogslist of dialog methods; TStringfPasteFileNamepaste_clippboard file name; TGuiBldDragManagerPimpl*fPimplprivate data; TGFrame*fSelectedselected frame. In most cases selected is; Bool_tfSelectionIsOnselection with Shift key pressed; Bool_tfStopkTRUE if stopped; Window_tfTargetIdan id of window where drop; TStringfTmpBuildFiletemporary file name; static TGColorDialog*fgGlobalColorDialogcolor dialog; static TGFontDialog*fgGlobalFontDialogfont dialog. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGuiBldDragManager(); Constructor. Create ""fantom window"". ~TGuiBldDragManager(); Destructor. void Reset1(); Reset some parameters. void CreateListOfDialogs(); Create a list of dialog methods. void Snap2Grid(); Draw grid on editable frame and restore background on previuosly editted one. UInt_t GetGridStep(); Return the grid step. void SetGridStep(UInt_t step); Set the grid step. Bool_t IgnoreEvent(Event_t* e); Return kTRUE if event is rejected for processing by drag manager. TGFrame* InEditable(Window_t id); Return a pointer to the parent window (which is being editted). TGCompositeFrame * FindCompositeFrame(Window_t id); Find the first composite parent of window. void SetCursorType(Int_t cur); Set cursor for selcted/grabbed frame. Bool_t CheckDragResize(Event_t* event); Check resize type event. void DoRedraw(); Redraw the editted window. void SwitchEditable(TGFrame* frame); Switch editable. void SelectFrame(TGFrame* frame, Bool_t add",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGuiBldDragManager.html:23032,Inherit,Inheritance,23032,root/html532/TGuiBldDragManager.html,https://root.cern,https://root.cern/root/html532/TGuiBldDragManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me; Bool_tfKeep; TGCheckButton*fKeepToggle; TGTextButton*fLog; Bool_tfLogQuery; TGCheckButton*fLogQueryToggle; TProofProgressLog*fLogWindowtransient frame for logs; TGraph*fMBRtGraph; TGTextButton*fMemPlot; TProofProgressMemoryPlot*fMemWindowtransient frame for memory plots; Long64_tfPrevProcessed; Long64_tfPrevTotal; Float_tfProcTime; TGLabel*fProcessed; TProof*fProof; TGLabel*fRate; TGraph*fRateGraph; TGTextButton*fRatePlot; TNtuple*fRatePoints; Int_tfRightInfo; Int_tfSVNRev; TGLabel*fSelector; TStringfSessionUrl; TGCheckButton*fSmoothSpeedouse smooth speedometer update; TGSpeedo*fSpeedospeedometer; Bool_tfSpeedoEnabledwhether to enable the speedometer; TTimefStartTime; TProofProgressDialog::EQueryStatusfStatus; TGTextButton*fStop; TGTextBuffer*fTextQuery; TGLabel*fTimeLab; TGLabel*fTitleLab; TGraph*fTotSGraph; TGLabel*fTotal; TGTextButton*fUpdtSpeedo; static Bool_tfgKeepDefault; static Bool_tfgLogQueryDefault; static TStringfgTextQueryDefault. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressDialog(TProof* proof, const char* selector, Int_t files, Long64_t first, Long64_t entries); Create PROOF processing progress dialog. void ToggleOdometerInfos(); Toggle information displayed in Analog Meter. void ToggleThreshold(). void ResetProgressDialog(const char* sel, Int_t sz, Long64_t fst, Long64_t ent); Reset dialog box preparing for new query. void Progress(Long64_t total, Long64_t processed); Update progress bar and status labels.; Use ""processed == total"" or ""processed < 0"" to indicate end of processing. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses); Update progress bar and status labels.; Use ""processed == total"" or ""processed < 0"" to indicate end of processing. Float_t AdjustBytes(Float_t mbs, TString& sf); Transform MBs to GBs ot TBs and get the correct suffix. ~TProofProgressDialog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofProgressDialog.html:3148,Inherit,Inheritance,3148,root/html532/TProofProgressDialog.html,https://root.cern,https://root.cern/root/html532/TProofProgressDialog.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"me;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TSystemFile.h>. Inheritance diagram for TSystemFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSystemFile() [1/2]. TSystemFile::TSystemFile ; (; ). TSystemFile default constructor. ; Definition at line 30 of file TSystemFile.cxx. ◆ TSystemFile() [2/2]. TSystemFile::TSystemFile ; (; const char * ; filename, . const char * ; dirname . ). TSystemFile normal constructor. ; Definition at line 37 of file TSystemFile.cxx. ◆ ~TSystemFile(). TSystemFile::~TSystemFile ; (; ). virtual . Delete TSystemFile object. ; Definition at line 46 of file TSystemFile.cxx. Member Function Documentation. ◆ Browse(). void TSystemFile::Browse ; (; TBrowser * ; b). overridevirtual . Execute default action for this system file (action is specified in the $HOME/.root.mimes or $ROOTSYS/etc/root.mimes file. ; Reimplemented from TObject.; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemFile.html:11637,inherit,inherited,11637,doc/master/classTSystemFile.html,https://root.cern,https://root.cern/doc/master/classTSystemFile.html,1,['inherit'],['inherited']
Modifiability,"me="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html:11497,inherit,inherited,11497,doc/master/classRooWorkspace_1_1WSDir.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html,5,['inherit'],['inherited']
Modifiability,"me="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:9774,inherit,inherited,9774,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,1,['inherit'],['inherited']
Modifiability,"meElementPack() [2/2]. TGFrameElementPack::TGFrameElementPack ; (; TGFrame * ; frame, . TGLayoutHints * ; lh = nullptr, . Float_t ; weight = 1 . ). inline . Definition at line 31 of file TGPack.h. Member Function Documentation. ◆ Class(). static TClass * TGFrameElementPack::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGFrameElementPack::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGFrameElementPack::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 34 of file TGPack.h. ◆ DeclFileName(). static const char * TGFrameElementPack::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 34 of file TGPack.h. ◆ IsA(). TClass * TGFrameElementPack::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGFrameElement.; Definition at line 34 of file TGPack.h. ◆ operator=(). TGFrameElementPack & TGFrameElementPack::operator= ; (; const TGFrameElementPack & ; ). privatedelete . ◆ Streamer(). void TGFrameElementPack::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGFrameElement. ◆ StreamerNVirtual(). void TGFrameElementPack::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 34 of file TGPack.h. Member Data Documentation. ◆ fSplitFE. TGFrameElementPack* TGFrameElementPack::fSplitFE. ! cached variable for optimisation ; Definition at line 29 of file TGPack.h. ◆ fWeight. Float_t TGFrameElementPack::fWeight. relative weight ; Definition at line 28 of file TGPack.h. Libraries for TGFrameElementPack:. [legend]; The documentation for this class was generated from the following file:; gui/gui/inc/TGPack.h. TGFrameElementPack. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrameElementPack.html:12636,variab,variable,12636,doc/master/classTGFrameElementPack.html,https://root.cern,https://root.cern/doc/master/classTGFrameElementPack.html,1,['variab'],['variable']
Modifiability,"mePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class RooAbsTestStatistic;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:57355,inherit,inherited,57355,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,3,['inherit'],['inherited']
Modifiability,"mePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static RooArgSet _emptySet;  Supports named argument constructor. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions;  RooChi2Var (const char *name, const char *title, RooAbsReal &func, RooDataHist &data, const RooArgSet &projDeps, FuncMode funcMode, RooAbsTestStatistic::Configuration const &cfg, RooDataHist::ErrorType etype);  . Additional Inherited Members;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:65613,inherit,inherited,65613,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"meShape; kGeoInvalidShape; kGeoTorus; kGeoBox; kGeoPara; kGeoSph; kGeoTube; kGeoTubeSeg; kGeoCone; kGeoConeSeg; kGeoPcon; kGeoPgon; kGeoArb8; kGeoEltu; kGeoTrap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tTGeoTube::fDzhalf length; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; Double_tTGeoTube::fRmaxouter radius; Double_tTGeoTube::fRmininner radius; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoEltu(); Dummy constructor. TGeoEltu(Double_t a, Double_t b, Double_t dz); Default constructor specifying X and Y semiaxis length. TGeoEltu(const char* name, Double_t a, Double_t b, Double_t dz); Default constructor specifying X and Y semiaxis length. TGeoEltu(Double_t* params); Default constructor specifying minimum and maximum radius; param[0] = A; param[1] = B; param[2] = dz. ~TGeoEltu(); destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); compute bounding box of the tube. void ComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. Bool_t Contains(Double_t* point) const; test if point is inside the elliptical tube. Int_t DistancetoPrimitive(Int_t px, Int_t py); compute closest distance from point px,py to each vertex. Double_t DistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoEltu.html:12223,Inherit,Inheritance,12223,root/html532/TGeoEltu.html,https://root.cern,https://root.cern/root/html532/TGeoEltu.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"meShape; kGeoInvalidShape; kGeoTorus; kGeoBox; kGeoPara; kGeoSph; kGeoTube; kGeoTubeSeg; kGeoCone; kGeoConeSeg; kGeoPcon; kGeoPgon; kGeoArb8; kGeoEltu; kGeoTrap; kGeoCtub; kGeoTrd1; kGeoTrd2; kGeoComb; kGeoClosedShape; kGeoXtru; kGeoParaboloid; kGeoHalfSpace; kGeoHype; kGeoSavePrimitive; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; Double_tTGeoTube::fDzhalf length; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; Double_tTGeoTube::fRmaxouter radius; Double_tTGeoTube::fRmininner radius; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoEltu(); Dummy constructor. TGeoEltu(Double_t a, Double_t b, Double_t dz); Default constructor specifying X and Y semiaxis length. TGeoEltu(const char* name, Double_t a, Double_t b, Double_t dz); Default constructor specifying X and Y semiaxis length. TGeoEltu(Double_t* params); Default constructor specifying minimum and maximum radius; param[0] = A; param[1] = B; param[2] = dz. ~TGeoEltu(); destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. void ComputeBBox(); compute bounding box of the tube. void ComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. Bool_t Contains(const Double_t* point) const; test if point is inside the elliptical tube. Int_t DistancetoPrimitive(Int_t px, Int_t py); compute closest distance from point px,py to each vertex. Double_t DistFromInside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoEltu.html:13171,Inherit,Inheritance,13171,root/html534/TGeoEltu.html,https://root.cern,https://root.cern/root/html534/TGeoEltu.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"meStamp.AsDouble"");; AsString can be returning either a char*, or a TString or an std::string.; 12.20.8 Multiple variables visualisation; This section presents the visualization technique available in ROOT to represent multiple variables (>4) data sets.; 12.20.8.1 Spider (Radar) Plots; Spider plots (sometimes called “web-plots” or “radar plots”) are used to compare series of data points (events). They use the human ability to spot un-symmetry. Example of spider plot. Variables are represented on individual axes displayed along a circle. For each variable the minimum value sits on the circle’s center, and the maximum on the circle’s radius. Spider plots are not suitable for an accurate graph reading since, by their nature, it can be difficult to read out very detailed values, but they give quickly a global view of an event in order to compare it with the others. In ROOT the spider plot facility is accessed from the tree viewer GUI. The variables to be visualized are selected in the tree viewer and can be scanned using the spider plot button. The tree viewer Graphical User Interface and the Spider Plot Editor. The spider plot graphics editor provides two tabs to interact with the spider plots’ output: the tab “Style” defining the spider layout and the tab “Browse” to navigate in the tree.; 12.20.8.2 Parallel Coordinates Plots. The Parallel Coordinates Plots are a common way of studying and visualizing multiple variables data sets. They were proposed by in A.Inselberg in 1981 as a new way to represent multi-dimensional information. In traditional Cartesian coordinates, axes are mutually perpendicular. In Parallel coordinates, all axes are parallel which allows representing data in much more than three dimensions. To show a set of points in Parallel Coordinates, a set of parallel lines is drawn, typically vertical and equally spaced. A point in n-dimensional space is represented as a polyline with vertices on the parallel axes. The position of the vertex on the i-th axi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:609496,variab,variables,609496,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,me_t UChar_t lenDefinition TGWin32VirtualXProxy.cxx:249; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; SetTextFontOption_t Option_t SetTextFontDefinition TGWin32VirtualXProxy.cxx:60; angleOption_t Option_t TPoint TPoint angleDefinition TGWin32VirtualXProxy.cxx:68; y2Option_t Option_t TPoint TPoint const char y2Definition TGWin32VirtualXProxy.cxx:70; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; wmaxOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t wmaxDefinition TGWin32VirtualXProxy.cxx:162; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; namechar name[80]Definition TGX11.cxx:110; kHoriconst Int_t kHoriDefinition TGaxis.cxx:39; SavedAttTextstatic TAttText SavedAttTextGlobal variable saving the current label's text angle. Used by TGaxis::ChangeLabelAttributes.Definition TGaxis.cxx:2845; TGaxis.h; THLimitsFinder.h; THashList.h; xminfloat xminDefinition THbookFile.cxx:95; hi#define hiDefinition THbookFile.cxx:128; yminfloat yminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; ymaxfloat ymaxDefinition THbookFile.cxx:95; TLatex.h; TLine.h; TMath.h; TObject.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TTimeStamp.h; TVirtualPad.h; gPad#define gPadDefinition TVirtualPad.h:308; TVirtualX.h; gVirtualX#define gVirtualXDefinition TVirtualX.h:337; snprintf#define snprintfDefinition civetweb.c:1540; TArrowDraw all kinds of Arrows.Definition TArrow.h:29; TAttAxis::GetTitleColorvirtual Color_t GetTitleColor() constDefinition TAttAxis.h:46; TAttAxis::GetLabelColorvirtual Color_t GetLabelColor() constDefinition TAttAxis.h:38; TAttAxis::GetAxisColorvirtual Color_t GetAxis,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:108308,variab,variable,108308,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['variab'],['variable']
Modifiability,"means size in pixels positive value of ptsize means size in points. ;  ; TGFont * GetFont (const char *font, Bool_t fixedDefault=kTRUE);  Get the specified font. ;  ; TGFont * GetFont (const TGFont *font);  Use font, i.e. ;  ; TGFont * GetFont (FontStruct_t font);  Use font, i.e. increases ref count of specified font. ;  ; char ** GetFontFamilies ();  Return information about the font families that are available on the current display. ;  ; TClass * IsA () const override;  ; const char * NameOfFont (TGFont *font);  Given a font, return a textual string identifying it. ;  ; Bool_t ParseFontName (const char *string, FontAttributes_t *fa);  Converts a string into a set of font attributes that can be used to construct a font. ;  ; void Print (Option_t *option="""") const override;  List all fonts in the pool. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGObject;  TGObject ();  ;  TGObject (const TGObject &tgo);  ;  ~TGObject () override;  TGObject destructor. ;  ; TGClient * GetClient () const;  ; Handle_t GetId () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Equal comparison (TGObjects are equal if they have the same window identifier). ;  ; void SaveAs (const char *filename="""", Option_t *option="""") const override;  Write this TGObject to a file using TImage, if filename's extension signals a valid TImage::EImageFileType, as defined by TImage::GetImageFileTypeFromFilename(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFontPool.html:2351,inherit,inherited,2351,doc/master/classTGFontPool.html,https://root.cern,https://root.cern/doc/master/classTGFontPool.html,1,['inherit'],['inherited']
Modifiability,"med::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. TSeqCollection*fSecContextsList of TSecContext with cleanup info; static UChar_tfgAcceptOptDefault accept options; static void*fgSrvAuthClupHook; static void*fgSrvAuthHook. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TServerSocket(const char* service, Bool_t reuse = kFALSE, Int_t backlog = kDefaultBacklog, Int_t tcpwindowsize = -1); Create a server socket object for a named service. Set reuse to true; to force reuse of the server socket (i.e. do not wait for the time; out to pass). Using backlog one can set the desirable queue length; for pending connections.; Use tcpwindowsize to specify the size of the receive buffer, it has; to be specified here to make sure the window scale option is set (for; tcpwindowsize > 65KB and for platforms supporting window scaling).; Use IsValid() to check the validity of the; server socket. In case server socket is not valid use GetErrorCode(); to obtain the specific error value. These values are:; 0 = no error (socket is valid); -1 = low level socket() call failed; -2 = low level bind() call failed; -3 = low level listen() call failed; Every valid server socket is added to the TROOT sockets list which; will make sur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TServerSocket.html:10431,Inherit,Inheritance,10431,root/html532/TServerSocket.html,https://root.cern,https://root.cern/root/html532/TServerSocket.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"med::fTitleobject title. private:. TGaxis*fCandleAxis! An axis used when displaying a candle chart.; TEntryList*fCurrentEntries-> Current selected entries in the tree.; Long64_tfCurrentFirstFirst entry to display.; Long64_tfCurrentNNumber of entries to display.; TParallelCoordSelect*fCurrentSelection! Current Selection being edited.; Int_tfDotsSpacingSpacing between dots to draw the entries.; TEntryList*fInitEntries-> Selected entries when TParallelCoord first initialized.; Color_tfLineColorentries line color.; Width_tfLineWidthentries line width.; Long64_tfNentriesNumber of entries;; UInt_tfNvarNumber of variables.; TList*fSelectListList of selections over the variables.; TTree*fTree! Pointer to the TTree.; TStringfTreeFileNameName of the file containing the tree.; TStringfTreeNameName of the tree.; TList*fVarListList of the variables.; Int_tfWeightCutSpecify a cut on the entries from their weight (see TParallelCoordVar::GetEvtWeight(Long64_t)). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoord(); Default constructor. TParallelCoord(Long64_t nentries); Constructor without a reference to a tree,; the datas must be added afterwards with; TParallelCoord::AddVariable(Double_t*,const char*). TParallelCoord(TTree* tree, Long64_t nentries); Normal constructor, the datas must be added afterwards; with TParallelCoord::AddVariable(Double_t*,const char*). ~TParallelCoord(); Destructor. void AddVariable(Double_t* val, const char* title = """"); Add a variable. void AddVariable(const char* varexp); Add a variable from an expression. void AddSelection(const char* title); Add a selection. void ApplySelectionToTree(); Apply the current selection to the tree. void BuildParallelCoord(TSelectorDraw* selector, Bool_t candle); Call constructor and add the variables. void CleanUpSelections(TParallelCoordRange* range); Clean up the selections from the ranges which could have been deleted; when a variable has been deleted. void DeleteSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParallelCoord.html:12950,Inherit,Inheritance,12950,root/html532/TParallelCoord.html,https://root.cern,https://root.cern/root/html532/TParallelCoord.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"med; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveRefBackPtr; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveRefCnt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Public Attributes; static TEveTrackPropagator fgDefault;  ; static Double_t fgDefMagField = 0.5;  ; static Double_t fgEditorMaxR = 2000;  ; static Double_t fgEditorMaxZ = 4000;  ; static const Double_t fgkB2C = 0.299792458e-2;  ;  Static Public Attributes inherited from TEveElement; static const TGPicture * fgListTreeIcons [9] = { nullptr };  ; static const TGPicture * fgRnrIcons [4] = { nullptr };  . Protected Member Functions; Bool_t ClosestPointBetweenLines (const TEveVectorD &, const TEveVectorD &, const TEveVectorD &, const TEveVectorD &, TEveVectorD &out);  Get closest point on line defined with vector p0 and u. ;  ; void ClosestPointFromVertexToLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackPropagator.html:36517,inherit,inherited,36517,doc/master/classTEveTrackPropagator.html,https://root.cern,https://root.cern/doc/master/classTEveTrackPropagator.html,3,['inherit'],['inherited']
Modifiability,"med] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooArgSet*fBestFitParamssnapshot of the model parameters with best fit value (managed internally); Double_tfConfidenceLevelRequested confidence level (eg. 0.95 for 95% CL); auto_ptr<RooFunctor>fFunctor! transient pointer to functor class used by the minimizer; RooAbsReal*fLikelihoodRatiolikelihood ratio function used to make contours (managed internally); map<std::string,double>fLowerLimitsmap with cached lower bound values; auto_ptr<ROOT::Math::IMultiGenFunction>fMinFunc! transient pointer to the minimization function ; auto_ptr<ROOT::Math::Minimizer>fMinimizer! transient pointer to minimizer class used to find limits and contour; RooArgSetfParametersparameters of interest for this interval; map<std::string,double>fUpperLimitsmap with cached upper bound values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; LikelihoodInterval(const char* name = 0); Default constructor with name and title. LikelihoodInterval(const char* name, RooAbsReal* , const RooArgSet* , RooArgSet* = 0); Alternate constructor taking a pointer to the profile likelihood ratio, parameter of interest and; optionally a snaphot of best parameter of interest for interval. ~LikelihoodInterval(); Destructor. Bool_t IsInInterval(const RooArgSet& ) const; This is the main method to satisfy the RooStats::ConfInterval interface.; It returns true if the parameter point is in the interval. RooArgSet* GetParameters() const; returns list of parameters. Bool_t CheckParameters(const RooArgSet& ) const; check that the parameters are correct. Double_t LowerLimit(const RooRealVar& param, bool& status); Compute lower limit, check first if limit has been computed; status is a boolean flag which will b set to false in case of error; and is true if calculation is succesfull; in case of error re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__LikelihoodInterval.html:8404,Inherit,Inheritance,8404,root/html532/RooStats__LikelihoodInterval.html,https://root.cern,https://root.cern/root/html532/RooStats__LikelihoodInterval.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"med] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooArgSet*fBestFitParamssnapshot of the model parameters with best fit value (managed internally); Double_tfConfidenceLevelRequested confidence level (eg. 0.95 for 95% CL); auto_ptr<RooFunctor>fFunctor! transient pointer to functor class used by the minimizer; RooAbsReal*fLikelihoodRatiolikelihood ratio function used to make contours (managed internally); map<std::string,double>fLowerLimitsmap with cached lower bound values; auto_ptr<ROOT::Math::IMultiGenFunction>fMinFunc! transient pointer to the minimization function ; auto_ptr<ROOT::Math::Minimizer>fMinimizer! transient pointer to minimizer class used to find limits and contour; RooArgSetfParametersparameters of interest for this interval; map<std::string,double>fUpperLimitsmap with cached upper bound values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; LikelihoodInterval(const char* name = 0); Default constructor with name and title. LikelihoodInterval(const char* name, RooAbsReal* , const RooArgSet* , RooArgSet* = 0); Alternate constructor taking a pointer to the profile likelihood ratio, parameter of interest and; optionally a snaphot of best parameter of interest for interval. ~LikelihoodInterval(); Destructor. Bool_t IsInInterval(const RooArgSet& ) const; This is the main method to satisfy the RooStats::ConfInterval interface.; It returns true if the parameter point is in the interval. RooArgSet* GetParameters() const; returns list of parameters. Bool_t CheckParameters(const RooArgSet& ) const; check that the parameters are correct. Double_t LowerLimit(const RooRealVar& param, bool& status); Compute lower limit, check first if limit has been computed; status is a boolean flag which will b set to false in case of error; and is true if calculation is successful; in case of error re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__LikelihoodInterval.html:8423,Inherit,Inheritance,8423,root/html534/RooStats__LikelihoodInterval.html,https://root.cern,https://root.cern/root/html534/RooStats__LikelihoodInterval.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"medisplay option is set or CanExtendAllAxes(), the number of bins is automatically doubled to accommodate the new bin. ;  ; virtual void SetBinContent (Int_t bin, Int_t, Double_t content);  ; virtual void SetBinContent (Int_t bin, Int_t, Int_t, Double_t content);  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBinsLength (Int_t=-1);  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:43885,variab,variable,43885,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,2,['variab'],['variable']
Modifiability,"medisplay option is set or CanExtendAllAxes(), the number of bins is automatically doubled to accommodate the new bin. ;  ; virtual void SetBinContent (Int_t bin, Int_t, Double_t content);  ; virtual void SetBinContent (Int_t bin, Int_t, Int_t, Double_t content);  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual void SetBins (Int_t nx, const Double_t *xBins);  Redefine x axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask returns the previous bit mask specifying w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1C.html:20968,variab,variable,20968,doc/master/classTH1C.html,https://root.cern,https://root.cern/doc/master/classTH1C.html,6,['variab'],['variable']
Modifiability,"members ; TH3 Class ReferenceHistogram Library » Histogram classes. ; The 3-D histogram classes derived from the 1-D histogram classes. ; All operations are supported (fill, fit). Drawing is currently restricted to one single option. A cloud of points is drawn. The number of points is proportional to cell content. TH3C a 3-D histogram with one byte per cell (char). Maximum bin content = 127; TH3S a 3-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; TH3I a 3-D histogram with four bytes per cell (32 bit integer). Maximum bin content = INT_MAX (*); TH3L a 3-D histogram with eight bytes per cell (64 bit integer). Maximum bin content = LLONG_MAX (**); TH3F a 3-D histogram with four bytes per cell (float). Maximum precision 7 digits, maximum integer bin content = +/-16777216 (***); TH3D a 3-D histogram with eight bytes per cell (double). Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (****). (*) INT_MAX = 2147483647 is the maximum value for a variable of type int.; (**) LLONG_MAX = 9223372036854775807 is the maximum value for a variable of type long64.; (***) 2^24 = 16777216 is the maximum integer that can be properly represented by a float32 with 23-bit mantissa.; (****) 2^53 = 9007199254740992 is the maximum integer that can be properly represented by a double64 with 52-bit mantissa. ; Definition at line 31 of file TH3.h. Public Member Functions;  ~TH3 () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w. ;  ; virtual void AddBinContent (Int_t binx, Int_t biny, Int_t binz);  Increment 3D bin content by 1. ;  ; virtual void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w);  Increment 3D bin content by a weight w. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; void Copy (TObject &hnew) const overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:1341,variab,variable,1341,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['variab'],['variable']
Modifiability,"members ; TSessionOutputFrame Class Reference. . Definition at line 459 of file TSessionViewer.h. Public Member Functions;  TSessionOutputFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionOutputFrame () override;  Destructor. ;  ; void AddObject (TObject *obj);  Add object to output list view. ;  ; void Build (TSessionViewer *gui);  Build query output information frame. ;  ; TGLVContainer * GetLVContainer ();  ; TClass * IsA () const override;  ; void OnElementClicked (TGLVEntry *entry, Int_t btn, Int_t x, Int_t y);  Handle mouse clicks on list view items. ;  ; void OnElementDblClicked (TGLVEntry *entry, Int_t btn, Int_t x, Int_t y);  Handle double-clicks on list view items. ;  ; void RemoveAll () override;  Remove all frames from composite frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionOutputFrame.html:1197,inherit,inherited,1197,doc/master/classTSessionOutputFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionOutputFrame.html,1,['inherit'],['inherited']
Modifiability,"members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineGslRanlxd< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineGslRanlxd< p >Compatibility engine for gsl_rng_ranlxd* from the GNU Scientific Library. ; Definition at line 137 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineGslRanlxd (uint64_t seed=1);  ;  ~RanluxppCompatEngineGslRanlxd () override;  ; uint64_t IntRndm ();  Generate a random integer value with 48 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 48 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 48, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineGslRanlxd< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineGslRanlxd< p >::ImplType = RanluxppEngineImpl<48, p>. private . Definition at line 140 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineGslRanlxd(). template<int p> . ROOT::Math::RanluxppCompatEngineGslRanlxd< p >::RanluxppCompatEngineGslRanlxd ; (; uint64_t ; seed = 1). Definition at line 532 of file RanluxppEngineImpl.cxx. ◆ ~RanluxppCompatEngineGslRanlxd(). template<int p> . ROOT::Math:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxd.html:1154,inherit,inherited,1154,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxd.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxd.html,1,['inherit'],['inherited']
Modifiability,"members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::Math::RanluxppCompatEngineGslRanlxs< p > Class Template Referencefinal. ; template<int p>; class ROOT::Math::RanluxppCompatEngineGslRanlxs< p >Compatibility engine for gsl_rng_ranlxs* from the GNU Scientific Library. ; Definition at line 100 of file RanluxppEngine.h. Public Member Functions;  RanluxppCompatEngineGslRanlxs (uint64_t seed=1);  ;  ~RanluxppCompatEngineGslRanlxs () override;  ; uint64_t IntRndm ();  Generate a random integer value with 24 bits. ;  ; double operator() ();  Generate a floating point random number (non-virtual method) ;  ; double Rndm () override;  Generate a floating point random number with 24 bits of randomness. ;  ; void SetSeed (uint64_t seed);  Initialize and seed the state of the generator. ;  ; void Skip (uint64_t n);  Skip n random numbers without generating them. ;  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static const char * Name ();  Get name of the generator. ;  . Private Types; using ImplType = RanluxppEngineImpl< 24, p >;  . Private Attributes; std::unique_ptr< ImplType > fImpl;  . #include <Math/RanluxppEngine.h>. Inheritance diagram for ROOT::Math::RanluxppCompatEngineGslRanlxs< p >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ ImplType. template<int p> . using ROOT::Math::RanluxppCompatEngineGslRanlxs< p >::ImplType = RanluxppEngineImpl<24, p>. private . Definition at line 103 of file RanluxppEngine.h. Constructor & Destructor Documentation. ◆ RanluxppCompatEngineGslRanlxs(). template<int p> . ROOT::Math::RanluxppCompatEngineGslRanlxs< p >::RanluxppCompatEngineGslRanlxs ; (; uint64_t ; seed = 1). Definition at line 488 of file RanluxppEngineImpl.cxx. ◆ ~RanluxppCompatEngineGslRanlxs(). template<int p> . ROOT::Math:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxs.html:1154,inherit,inherited,1154,doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxs.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppCompatEngineGslRanlxs.html,1,['inherit'],['inherited']
Modifiability,"members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; List of all members ; TEveStraightLineSetProjected Class ReferenceGraphics » 3D Graphics » Event Display. ; Projected replica of a TEveStraightLineSet. ; Definition at line 126 of file TEveStraightLineSet.h. Public Member Functions;  TEveStraightLineSetProjected ();  Constructor. ;  ;  ~TEveStraightLineSetProjected () override;  ; TEveElement * GetProjectedAsElement () override;  Returns this projected dynamic-casted to TEveElement. ;  ; TClass * IsA () const override;  ; void SetProjection (TEveProjectionManager *mng, TEveProjectable *model) override;  Set projection manager and model object. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  Callback that actually performs the projection. ;  ;  Public Member Functions inherited from TEveStraightLineSet;  TEveStraightLineSet (const char *n=""StraightLineSet"", const char *t="""");  Constructor. ;  ;  ~TEveStraightLineSet () override;  ; Line_t * AddLine (const TEveVector &p1, const TEveVector &p2);  Add a line. ;  ; Line_t * AddLine (Float_t x1, Float_t y1, Float_t z1, Float_t x2, Float_t y2, Float_t z2);  Add a line. ;  ; Marker_t * AddMarker (const TEveVector &p, Int_t line_id=-1);  Add a marker with given position. ;  ; Marker_t * AddMarker (Float_t x, Float_t y, Float_t z, Int_t line_id=-1);  Add a marker with given position. ;  ; Marker_t * AddMarker (Int_t line_id, Float_t pos);  Add a marker for line with given index on relative position pos. ;  ; void ComputeBBox () override;  Compute bounding-box. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; virtual Bool_t GetDepthTest ();  ; TEveChunkManager & GetLinePlex ();  ; TEveChunkManager & GetMarkerPlex ();  ; virtual Bool_t GetRnrLines ();  ; virtual Bool_t GetRnrMarkers ();  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:1101,inherit,inherited,1101,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,1,['inherit'],['inherited']
Modifiability,"members; class charts. ROOT; » TMVA; » TMVA; » TMVA::RegressionVariance. class TMVA::RegressionVariance. Function Members (Methods); public:. virtual~RegressionVariance(); static TClass*Class(); TStringGetName(); Double_tGetSeparationGain(const Double_t& nLeft, const Double_t& targetLeft, const Double_t& target2Left, const Double_t& nTot, const Double_t& targetTot, const Double_t& target2Tot); virtual Double_tGetSeparationIndex(const Double_t& n, const Double_t& target, const Double_t& target2); virtual TClass*IsA() const; TMVA::RegressionVariance&operator=(const TMVA::RegressionVariance&); TMVA::RegressionVarianceRegressionVariance(); TMVA::RegressionVarianceRegressionVariance(const TMVA::RegressionVariance& s); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. TStringfNamename of the concrete Separation Index impementation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Double_t GetSeparationGain(const Double_t& nLeft, const Double_t& targetLeft, const Double_t& target2Left, const Double_t& nTot, const Double_t& targetTot, const Double_t& target2Tot); Separation Gain:; the measure of how the quality of separation of the sample increases; by splitting the sample e.g. into a ""left-node"" and a ""right-node""; (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right); this is then the quality crition which is optimized for when trying; to increase the information in the system; for the Regression: as the ""Gain is maximised"", the RMS (sqrt(variance)); which is used as a ""separation"" index should be as small as possible.; the ""figure of merit"" here has to be -(rms left+rms-right) or 1/rms... Double_t GetSeparationIndex(const Double_t& n, const Double_t& target, const Double_t& target2); Separation Index: a simple Variance. RegressionVariance(); default constructor. {fName = ""Variance for Regression",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__RegressionVariance.html:1187,Inherit,Inheritance,1187,root/html604/TMVA__RegressionVariance.html,https://root.cern,https://root.cern/root/html604/TMVA__RegressionVariance.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"members; data members; class charts. ROOT; » CORE; » BASE; » TControlBarImp. class TControlBarImp. TControlBarImp. ABC describing GUI independent control bar. Function Members (Methods); public:. virtual~TControlBarImp(); static TClass*Class(); virtual voidCreate(); virtual TControlBarButton*GetClicked(); virtual TControlBar*GetControlBar(); virtual voidHide(); virtual TClass*IsA() const; TControlBarImp&operator=(const TControlBarImp&); virtual voidSetButtonState(const char*, Int_t); virtual voidSetButtonWidth(UInt_t); virtual voidSetFont(const char*); virtual voidSetTextColor(const char*); virtual voidShow(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TControlBarImp(const TControlBarImp&); TControlBarImp(TControlBar* c, const char* = """"); TControlBarImp(TControlBar* c, const char*, Int_t, Int_t). Data Members; protected:. TControlBarButton*fClickedLast clicked button; TControlBar*fControlBarTControlBar associated with this implementation; Int_tfXposInitial x position; Int_tfYposInitial y position. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TControlBarImp(TControlBar* c, const char* = """"); { }. TControlBarImp(TControlBar* c, const char* , Int_t , Int_t ); { }. virtual ~TControlBarImp(); { }. TControlBar * GetControlBar(); { return fControlBar; }. TControlBarButton * GetClicked(); { return fClicked; }. void Create(); { }. void Hide(); { }. void Show(); { }. void SetFont(const char* ); { }. void SetTextColor(const char* ); { }. void SetButtonState(const char* , Int_t ); { }. void SetButtonWidth(UInt_t ); { }. » Author: Nenad Buncic 20/02/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-02 13:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TControlBarImp.html:1320,Inherit,Inheritance,1320,root/html602/TControlBarImp.html,https://root.cern,https://root.cern/root/html602/TControlBarImp.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"members; data members; class charts. ROOT; » CORE; » BASE; » TControlBarImp. class TControlBarImp. TControlBarImp. ABC describing GUI independent control bar. Function Members (Methods); public:. virtual~TControlBarImp(); static TClass*Class(); virtual voidCreate(); virtual TControlBarButton*GetClicked(); virtual TControlBar*GetControlBar(); virtual voidHide(); virtual TClass*IsA() const; TControlBarImp&operator=(const TControlBarImp&); virtual voidSetButtonState(const char*, Int_t); virtual voidSetButtonWidth(UInt_t); virtual voidSetFont(const char*); virtual voidSetTextColor(const char*); virtual voidShow(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TControlBarImp(const TControlBarImp&); TControlBarImp(TControlBar* c, const char* = """"); TControlBarImp(TControlBar* c, const char*, Int_t, Int_t). Data Members; protected:. TControlBarButton*fClickedLast clicked button; TControlBar*fControlBarTControlBar associated with this implementation; Int_tfXposInitial x position; Int_tfYposInitial y position. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TControlBarImp(TControlBar* c, const char* = """"); { }. TControlBarImp(TControlBar* c, const char* , Int_t , Int_t ); { }. virtual ~TControlBarImp(); { }. TControlBar * GetControlBar(); { return fControlBar; }. TControlBarButton * GetClicked(); { return fClicked; }. void Create(); { }. void Hide(); { }. void Show(); { }. void SetFont(const char* ); { }. void SetTextColor(const char* ); { }. void SetButtonState(const char* , Int_t ); { }. void SetButtonWidth(UInt_t ); { }. » Author: Nenad Buncic 20/02/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-02 15:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TControlBarImp.html:1320,Inherit,Inheritance,1320,root/html604/TControlBarImp.html,https://root.cern,https://root.cern/root/html604/TControlBarImp.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"members; data members; class charts. ROOT; » GRAF3D; » GL; » TGLAdapter. class TGLAdapter: public TGLPaintDevice. Allow plot-painters to be used for gl-inpad and gl-viewer. Function Members (Methods); public:. TGLAdapter(Int_t glDevice = -1); ~TGLAdapter(); static TClass*Class(); virtual voidExtractViewport(Int_t* vp) const; virtual const TGLContext*GetContext() const; virtual const TGLFormat*GetPixelFormat() const; virtual TClass*IsA() const; virtual Bool_tMakeCurrent(); voidMarkForDirectCopy(Bool_t isDirect); voidReadGLBuffer(); voidSelectOffScreenDevice(); voidSetGLDevice(Int_t glDevice); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSwapBuffers(). private:. TGLAdapter(const TGLAdapter&); virtual voidAddContext(TGLContext*); TGLAdapter&operator=(const TGLAdapter&); virtual voidRemoveContext(TGLContext*). Data Members; private:. Int_tfGLDevice. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLAdapter(Int_t glDevice = -1); Constructor. Bool_t MakeCurrent(); Set as current GL contet. void SwapBuffers(); Swap front/back buffers. void MarkForDirectCopy(Bool_t isDirect); Mark gl-device for later copying into x-pixmap. void ReadGLBuffer(); Read gl buffer into x-pixmap. void ExtractViewport(Int_t* vp) const; Extract viewport from gl. void SelectOffScreenDevice(); Select off-screen device for rendering. explicit TGLAdapter(Int_t glDevice = -1). const TGLFormat * GetPixelFormat() const; {return 0;}. const TGLContext * GetContext() const; {return 0;}. void SetGLDevice(Int_t glDevice). void AddContext(TGLContext* ); {}. void RemoveContext(TGLContext* ); {}. » Author: Timur Pocheptsov, Jun 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLAdapter.html:1159,Inherit,Inheritance,1159,root/html534/TGLAdapter.html,https://root.cern,https://root.cern/root/html534/TGLAdapter.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"memfuncTFormula::fOptimal!pointer to optimal function; Double_t*TFormula::fParams[fNpar] Array of fNpar parameters; TFormulaPrimitive**TFormula::fPredefined![fNPar] predefined function ; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFormula(); Default constructor; coverity[UNINIT_CTOR]. RooFormula(const char* name, const char* formula, const RooArgList& varList); Constructor with expression string and list of RooAbsArg variables. RooFormula(const RooFormula& other, const char* name = 0); Copy constructor. Bool_t reCompile(const char* newFormula); Recompile formula with new expression. ~RooFormula(); Destructor. RooArgSet& actualDependents() const; Return list of RooAbsArg dependents that is actually used by formula expression. void dump(); DEBUG: Dump state information. Bool_t changeDependents(const RooAbsCollection& newDeps, Bool_t mustReplaceAll, Bool_t nameChange); Change used variables to those with the same name in given list; If mustReplaceAll is true and error is generated if one of the; elements of newDeps is not found as a server. Double_t eval(const RooArgSet* nset = 0); Evaluate TFormula using given normalization set to be used as; observables definition passed to RooAbsReal::getVal(). DefinedValue(Int_t code); Interface to TFormula, return value defined by object with id 'code'; Object ids are mapped from object names by method DefinedVariable(). Int_t DefinedVariable(TString& name, int& action); Interface to TFormula. If name passed by TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. Int_t DefinedVariable(TString& name); Interface to TFormula. If name passed by TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Printing interface. void printValu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooFormula.html:14578,variab,variables,14578,root/html528/RooFormula.html,https://root.cern,https://root.cern/root/html528/RooFormula.html,6,['variab'],['variables']
Modifiability,"memory values an order of magnitude lower. This behavior affected versions up to v6-25-01, after which the default units were restored to be the ROOT ones.; For users needing to restore the CGS behavior for material properties, the following sequence needs to be called before creating the TGeoManager instance: From v6-18-02 to v6-22-06: TGeoUnit::setUnitType(TGeoUnit::kTGeoUnits);; From v6-22-08 to v6-25-01: TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(kRootUnits);; TGeoManager::LockDefaultUnits(true);; TGeoManager::SetDefaultUnitsstatic void SetDefaultUnits(EDefaultUnits new_value)Definition TGeoManager.cxx:4319; TGeoManager::LockDefaultUnitsstatic Bool_t LockDefaultUnits(Bool_t new_value)Definition TGeoManager.cxx:4307. Definition at line 34 of file TGeoMaterial.h. Public Types; enum  EGeoMaterial { kMatUsed = (1ULL << ( 17 )); , kMatSavePrimitive = (1ULL << ( 18 )); };  ; enum  EGeoMaterialState { kMatStateUndefined; , kMatStateSolid; , kMatStateLiquid; , kMatStateGas; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoMaterial ();  Default constructor. ;  ;  TGeoMaterial (const char *name);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, Double_t radlen=0, Double_t intlen=0);  Constructor. ;  ;  TGeoMaterial (const char *name, Double_t a, Double_t z, Double_t rho, EGeoMaterialState state",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMaterial.html:1969,inherit,inherited,1969,doc/master/classTGeoMaterial.html,https://root.cern,https://root.cern/doc/master/classTGeoMaterial.html,1,['inherit'],['inherited']
Modifiability,"memory; 1483 // for varying length arrays before we overwrite; 1484 // the counter values.; 1485 //; 1486 // For now we will just leak memory, just as we; 1487 // have always done in the past. Fix this.; 1488 //; 1489 //char** r = (char**) pp[ndx];; 1490 //if (r) {; 1491 // for (Int_t v = 0; v < vlen; ++v) {; 1492 // cl->Destructor(r[v]);; 1493 // r[v] = 0;; 1494 // }; 1495 //}; 1496 delete[] pp[ndx];; 1497 pp[ndx] = 0;; 1498 }; 1499 if (!vlen) {; 1500 continue;; 1501 }; 1502 // Note: We now have pp[ndx] is null.; 1503 // Allocate memory to read into.; 1504 if (!isPtrPtr) {; 1505 // -- We are a varying-length array of objects.; 1506 // Note: Polymorphism is not allowed here.; 1507 // Allocate a new array of objects to read into.; 1508 pp[ndx] = (char*) cl->NewArray(vlen);; 1509 if (!pp[ndx]) {; 1510 Error(""ReadBuffer"", ""Memory allocation failed!\n"");; 1511 continue;; 1512 }; 1513 } else {; 1514 // -- We are a varying-length array of pointers to objects.; 1515 // Note: The object pointers are allowed to be polymorphic.; 1516 // Allocate a new array of pointers to objects to read into.; 1517 pp[ndx] = (char*) new char*[vlen];; 1518 if (!pp[ndx]) {; 1519 Error(""ReadBuffer"", ""Memory allocation failed!\n"");; 1520 continue;; 1521 }; 1522 // And set each pointer to null.; 1523 memset(pp[ndx], 0, vlen * sizeof(char*)); // This is the right size we really have a char**: pp[ndx] = (char*) new char*[vlen];; 1524 }; 1525 if (!isPtrPtr) {; 1526 // -- We are a varying-length array of objects.; 1527 b.ReadFastArray(pp[ndx], cl, vlen, 0);; 1528 }; 1529 else {; 1530 // -- We are a varying-length array of object pointers.; 1531 b.ReadFastArray((void**) pp[ndx], cl, vlen, kFALSE, 0);; 1532 } // isPtrPtr; 1533 } // ndx; 1534 } // k; 1535 }; 1536 else {; 1537 // -- Older versions do *not* allow polymorphic pointers.; 1538 // Loop over the entries in the clones array or the STL container.; 1539 for (Int_t k = 0; k < narr; ++k) {; 1540 // Get the counter for the varying length array.; 154",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html:64185,polymorphi,polymorphic,64185,doc/master/TStreamerInfoReadBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html,1,['polymorphi'],['polymorphic']
Modifiability,"memory; 1569 // for varying length arrays before we overwrite; 1570 // the counter values.; 1571 //; 1572 // For now we will just leak memory, just as we; 1573 // have always done in the past. Fix this.; 1574 //; 1575 //char** r = (char**) pp[ndx];; 1576 //if (r) {; 1577 // for (Int_t v = 0; v < vlen; ++v) {; 1578 // cl->Destructor(r[v]);; 1579 // r[v] = 0;; 1580 // }; 1581 //}; 1582 delete[] pp[ndx];; 1583 pp[ndx] = 0;; 1584 }; 1585 if (!vlen) {; 1586 continue;; 1587 }; 1588 // Note: We now have pp[ndx] is null.; 1589 // Allocate memory to read into.; 1590 if (!isPtrPtr) {; 1591 // -- We are a varying-length array of objects.; 1592 // Note: Polymorphism is not allowed here.; 1593 // Allocate a new array of objects to read into.; 1594 pp[ndx] = (char*) cl->NewArray(vlen);; 1595 if (!pp[ndx]) {; 1596 Error(""ReadBuffer"", ""Memory allocation failed!\n"");; 1597 continue;; 1598 }; 1599 } else {; 1600 // -- We are a varying-length array of pointers to objects.; 1601 // Note: The object pointers are allowed to be polymorphic.; 1602 // Allocate a new array of pointers to objects to read into.; 1603 pp[ndx] = (char*) new char*[vlen];; 1604 if (!pp[ndx]) {; 1605 Error(""ReadBuffer"", ""Memory allocation failed!\n"");; 1606 continue;; 1607 }; 1608 // And set each pointer to null.; 1609 memset(pp[ndx], 0, vlen * sizeof(char*)); // This is the right size we really have a char**: pp[ndx] = (char*) new char*[vlen];; 1610 }; 1611 if (!isPtrPtr) {; 1612 // -- We are a varying-length array of objects.; 1613 // Loop over the elements of the varying length array.; 1614 for (Int_t v = 0; v < vlen; ++v) {; 1615 // Read the object from the buffer.; 1616 cl->Streamer(pp[ndx] + (v * cl->Size()), b);; 1617 } // v; 1618 }; 1619 else {; 1620 // -- We are a varying-length array of object pointers.; 1621 // Get a pointer to the object pointer array.; 1622 char** r = (char**) pp[ndx];; 1623 // Loop over the elements of the varying length array.; 1624 for (Int_t v = 0; v < vlen; ++v) {; 1625 // Allocat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html:67476,polymorphi,polymorphic,67476,doc/master/TStreamerInfoReadBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html,1,['polymorphi'],['polymorphic']
Modifiability,"mension >=1 or <=3. { fObsNameVec.push_back(fObsName); }. string AddNormFactor(RooWorkspace* proto, string& channel, string& sigmaEpsilon, RooStats::HistFactory::Sample& sample, bool doRatio). void AddEfficiencyTerms(RooWorkspace* proto, string prefix, string interpName, vector<RooStats::HistFactory::OverallSys,allocator<RooStats::HistFactory::OverallSys> >& systList, vector<std::string>& likelihoodTermNames, vector<std::string>& totSystTermNames); add variables for all the relative overall uncertainties we expect; range is set using defined macro (see top of the page). void MakeTotalExpected(RooWorkspace* proto, string totName, vector<std::string>& syst_x_expectedPrefixNames, vector<std::string>& normByNames); for ith bin calculate totN_i = lumi * sum_j expected_j * syst_j. void AddPoissonTerms(RooWorkspace* proto, string prefix, string obsPrefix, string expPrefix, int lowBin, int highBin, vector<std::string>& likelihoodTermNames). Relate observables to expected for each bin; later modify variable named expPrefix_i to be product of terms. void SetObsToExpected(RooWorkspace* proto, string obsPrefix, string expPrefix, int lowBin, int highBin). set observed to expected. void EditSyst(RooWorkspace* proto, const char* pdfNameChar, map<std::string,double> gammaSyst, map<std::string,double> uniformSyst, map<std::string,double> logNormSyst, map<std::string,double> noSyst). void PrintCovarianceMatrix(RooFitResult* result, RooArgSet* params, string filename); Change-> Now a static utility. RooWorkspace* MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement& measurement, RooStats::HistFactory::Channel& channel). void ConfigureHistFactoryDataset(RooDataSet* obsData, TH1* nominal, RooWorkspace* proto, vector<std::string> obsNameVec); Take a RooDataSet and fill it with the entries; from a TH1*, using the observable names to; determine the columns. void GuessObsNameVec(TH1* hist). RooWorkspace* MakeCombinedModel(vector<std::string> , vector<RooWorkspace*> ). RooDataSet* Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html:11092,variab,variable,11092,root/html534/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__HistoToWorkspaceFactoryFast.html,2,['variab'],['variable']
Modifiability,"ment ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveArrow.h>. Inheritance diagram for TEveArrow:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveArrow() [1/2]. TEveArrow::TEveArrow ; (; const TEveArrow & ; ). private . ◆ TEveArrow() [2/2]. TEveArrow::TEveArrow ; (; Float_t ; xVec = 0, . Float_t ; yVec = 0, . Float_t ; zVec = 1, . Float_t ; xOrg = 0, . Float_t ; yOrg = 0, . Float_t ; zOrg = 0 . ). Definition at line 25 of file TEveArrow.cxx. ◆ ~TEveArrow(). TEveArrow::~TEveArrow ; (; ). inlineoverride . Definition at line 48 of file TEveArrow.h. Member Function Documentation. ◆ Class(). static TClass * TEveArrow::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveArrow::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveArrow::Class_Version ; (; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveArrow.html:32719,inherit,inherited,32719,doc/master/classTEveArrow.html,https://root.cern,https://root.cern/doc/master/classTEveArrow.html,1,['inherit'],['inherited']
Modifiability,"ment ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveBox.h>. Inheritance diagram for TEveBox:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveBox() [1/2]. TEveBox::TEveBox ; (; const TEveBox & ; ). private . ◆ TEveBox() [2/2]. TEveBox::TEveBox ; (; const char * ; n = ""TEveBox"", . const char * ; t = """" . ). Constructor. ; Definition at line 33 of file TEveBox.cxx. ◆ ~TEveBox(). TEveBox::~TEveBox ; (; ). override . Destructor. ; Definition at line 41 of file TEveBox.cxx. Member Function Documentation. ◆ Class(). static TClass * TEveBox::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveBox::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveBox::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 48 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:37603,inherit,inherited,37603,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,1,['inherit'],['inherited']
Modifiability,"ment ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveProjectionAxes.h>. Inheritance diagram for TEveProjectionAxes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EAxesMode. enum TEveProjectionAxes::EAxesMode. EnumeratorkHorizontal ; kVertical ; kAll . Definition at line 34 of file TEveProjectionAxes.h. ◆ ELabMode. enum TEveProjectionAxes::ELabMode. EnumeratorkPosition ; kValue . Definition at line 33 of file TEveProjectionAxes.h. Constructor & Destructor Documentation. ◆ TEveProjectionAxes() [1/2]. TEveProjectionAxes::TEveProjectionAxes ; (; const TEveProjectionAxes & ; ). private . ◆ TEveProjectionAxes() [2/2]. TEveProjectionAxes::TEveProjectionAxes ; (; TEveProjectionManager * ; m, . Bool_t ; useColorSet = kTRUE . ). Constructor. ; Definition at line 29 of file TEveProjectionAxes.cxx. ◆ ~TEveProjectionAxes(). TEveProjectionAxes::~TEveProjectionAxes ; (; )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionAxes.html:36022,inherit,inherited,36022,doc/master/classTEveProjectionAxes.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionAxes.html,1,['inherit'],['inherited']
Modifiability,"ment ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveShape.h>. Inheritance diagram for TEveShape:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ vVector2_i. typedef std::vector<TEveVector2>::iterator TEveShape::vVector2_i. Definition at line 35 of file TEveShape.h. ◆ vVector2_t. typedef std::vector<TEveVector2> TEveShape::vVector2_t. Definition at line 34 of file TEveShape.h. Constructor & Destructor Documentation. ◆ TEveShape() [1/2]. TEveShape::TEveShape ; (; const TEveShape & ; ). privatedelete . ◆ TEveShape() [2/2]. TEveShape::TEveShape ; (; const char * ; n = ""TEveShape"", . const char * ; t = """" . ). Constructor. ; Definition at line 32 of file TEveShape.cxx. ◆ ~TEveShape(). TEveShape::~TEveShape ; (; ). override . Destructor. ; Definition at line 49 of file TEveShape.cxx. Member Function Documentation. ◆ CheckAndFixBoxOrientationEv(). void TEveShape::Check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveShape.html:36457,inherit,inherited,36457,doc/master/classTEveShape.html,https://root.cern,https://root.cern/doc/master/classTEveShape.html,1,['inherit'],['inherited']
Modifiability,"ment ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveText.h>. Inheritance diagram for TEveText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveText() [1/2]. TEveText::TEveText ; (; const TEveText & ; ). private . ◆ TEveText() [2/2]. TEveText::TEveText ; (; const char * ; txt = """"). Constructor. ; Definition at line 32 of file TEveText.cxx. ◆ ~TEveText(). TEveText::~TEveText ; (; ). inlineoverride . Definition at line 47 of file TEveText.h. Member Function Documentation. ◆ Class(). static TClass * TEveText::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveText::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveText::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 77 of file TEveText.h. ◆ ComputeB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveText.html:32983,inherit,inherited,32983,doc/master/classTEveText.html,https://root.cern,https://root.cern/doc/master/classTEveText.html,1,['inherit'],['inherited']
Modifiability,"ment ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <TEveTriangleSet.h>. Inheritance diagram for TEveTriangleSet:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TEveTriangleSet() [1/2]. TEveTriangleSet::TEveTriangleSet ; (; const TEveTriangleSet & ; ). private . ◆ TEveTriangleSet() [2/2]. TEveTriangleSet::TEveTriangleSet ; (; Int_t ; nv, . Int_t ; nt, . Bool_t ; norms = kFALSE, . Bool_t ; cols = kFALSE . ). Constructor. ; Definition at line 36 of file TEveTriangleSet.cxx. ◆ ~TEveTriangleSet(). TEveTriangleSet::~TEveTriangleSet ; (; ). override . Destructor. ; Definition at line 52 of file TEveTriangleSet.cxx. Member Function Documentation. ◆ CanEditMainTransparency(). Bool_t TEveTriangleSet::CanEditMainTransparency ; (; ); const. inlineoverridevirtual . Reimplemented from TEveElement.; Definition at line 48 of file TEveTriangleSet.h. ◆ Class(). static TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTriangleSet.html:36037,inherit,inherited,36037,doc/master/classTEveTriangleSet.html,https://root.cern,https://root.cern/doc/master/classTEveTriangleSet.html,1,['inherit'],['inherited']
Modifiability,"ment * GetSlider () const;  ; virtual Int_t GetSmallIncrement ();  ; TGScrollBarElement * GetTail () const;  ; void GrabPointer (Bool_t grab);  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleTimer (TTimer *t) override;  Handle repeat timer for horizontal or vertical scrollbar. ;  ; Bool_t IsAccelerated () const;  ; void MapSubwindows () override;  map sub windows ;  ; void MoveResize (Int_t x, Int_t y, UInt_t w=0, UInt_t h=0) override;  Move and/or resize the frame. ;  ; virtual void PageSizeChanged (Int_t range);  ; virtual void PositionChanged (Int_t pos);  ; virtual void RangeChanged (Int_t range);  ; void Resize (TGDimension size) override;  Resize the frame. ;  ; void Resize (UInt_t w=0, UInt_t h=0) override;  Resize the frame. ;  ; virtual void SetAccelerated (Bool_t m=kTRUE);  ; virtual void SetDragging (Bool_t drag);  ; virtual void SetSmallIncrement (Int_t increment);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVScrollBar.html:3231,inherit,inherited,3231,doc/master/classTGVScrollBar.html,https://root.cern,https://root.cern/doc/master/classTGVScrollBar.html,1,['inherit'],['inherited']
Modifiability,"ment Tree drawing using PROOF. ; Definition at line 49 of file TProofDraw.h. Public Member Functions;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; void Init (TTree *) override;  Init the tree. ;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveBegin (TTree *) override;  Executed by each slave before processing. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  Executed by the client after getting the processing retults. ;  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetInputList (TList *input);  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDraw.html:1381,inherit,inherited,1381,doc/master/classTProofDraw.html,https://root.cern,https://root.cern/doc/master/classTProofDraw.html,1,['inherit'],['inherited']
Modifiability,ment of the class context menu; TClassRef ; TClassStreamer ; TClassTable Table of known classes; TClassTree Manager class to draw classes inheritance tree and relations; TClonesArray An array of clone objects; TCollection Collection abstract base class; TCollectionClassStreamer ; TCollectionMemberStreamer ; TCollectionMethodBrowsable Helper object to browse a collection's methods; TCollectionPropertyBrowsable Helper object to add browsable collection properties; TCollectionProxyFactory ; TCollectionStreamer ; TColor Color defined by RGB or HLS; TColorGradient Gradient fill.; TColorGradient::Point ; TColorWheel The ROOT Color Wheel; TColumnView Helper to represent one TTable column; TComplex Complex Class; TCondition Condition variable class; TConditionImp Condition variable implementation ABC; TCondor Interface to the Condor System; TCondorSlave Describes a claimed slave; TConfidenceLevel output for TLimit functions; TContextMenu Context sensitive popup menu; TContextMenuImp Context sensitive popup menu implementation; TControlBar Control bar; TControlBarButton The Control bar button; TControlBarImp GUI independent controlbar abc; TCrown A crown or segment of crown; TCurlyArc A curly arc; TCurlyArcEditor GUI for editing arrow attributes; TCurlyLine A curly polyline; TCurlyLineEditor GUI for editing arrow attributes; TCut A specialized string object used for TTree selections; TCutG A Graphical cut.; TDNDData Drag and drop specific data; TDOMParser DOM Parser; TDSet Data set for remote processing (PROOF); TDSetElement A TDSet element; TDSetProxy TDSet proxy for use on slaves; TDataMember Dictionary for a class data member; TDataSet The base class to create the hierarchical data structures; TDataSetIter class-iterator to navigate TDataSet structure; TDataSetManager Abstract data set manager class; TDataSetManagerFile DataSet manager for files; TDataType Basic data type descriptor; TDatabasePDG PDG particle database; TDatime Date and time 950130 124559; TDecayChannel Cl,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:57672,variab,variable,57672,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,4,['variab'],['variable']
Modifiability,"ment operator. ;  ; Int_t & operator[] (Int_t i);  ; Int_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Int_t val);  ; void Set (Int_t n) override;  Set size of this array to n ints. ;  ; void Set (Int_t n, const Int_t *array);  Set size of this array to n ints and set the contents. ;  ; void SetAt (Double_t v, Int_t i) override;  ; void Streamer (TBuffer &) override;  Stream a TArrayI object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArray;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Int_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  . Additional Inherited Members;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . #include <TArrayI.h>. Inheritance diagram for TArrayI:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArrayI() [1/4]. TArrayI::TArrayI ; (; ). Default TArrayI ctor. ; Definition at line 26 of file TArrayI.cxx. ◆ TA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrayI.html:2175,inherit,inherited,2175,doc/master/classTArrayI.html,https://root.cern,https://root.cern/doc/master/classTArrayI.html,1,['inherit'],['inherited']
Modifiability,"ment used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTEveLine::fgDefaultSmooth; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrack(); Default constructor. TEveTrack(TParticle* t, Int_t label, TEveTrackPropagator* prop = 0); Constructor from TParticle. TEveTrack(TEveMCTrack* t, TEveTrackPropagator* prop = 0); Constructor from TEveUtil Monte Carlo track. TEveTrack(TEveRecTrackD* t, TEveTrackPropagator* prop = 0); Constructor from TEveRecTrack<double> reconstructed track. TEveTrack(TEveRecTrack* t, TEveTrackPropagator* prop = 0); Constructor from TEveRecTrack<float> reconstructed track.; It is recomended to use constructor with TEveRecTrack<double> since; TEveTrackPropagator operates with double type. TEveTrack(const TEveTrack& t); Copy constructor. Track paremeters are copied but the; extrapolation is not perfermed so you should still call; MakeTrack() to do that.; If points of 't' are locked, they are cloned. ~TEveTrack(); Destructor. const TGPicture* GetListTreeIcon(Bool_t open = kFALSE); Returns list-tree icon for TEveTrack. void ComputeBBox(); Compute ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrack.html:31526,Inherit,Inheritance,31526,root/html602/TEveTrack.html,https://root.cern,https://root.cern/root/html602/TEveTrack.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ment(TObject* obj); voidFixCollisions(Int_t index); Bool_tHighWaterMark(); TObjectTable&operator=(const TObjectTable&); TObjectTable(const TObjectTable&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Int_tfSize; TObject**fTable; Int_tfTally. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TObjectTable(Int_t tableSize = 100); Create an object table. ~TObjectTable(); Delete TObjectTable. void Print(Option_t* option = """") const; Print the object table.; If option =""all"" prints the list of all objects with the format; object number, pointer, class name, object name. void Add(TObject* obj); Add an object to the object table. void AddObj(TObject* obj); Add an object to the global object table gObjectTable. If the global; table does not exist create it first. This member function may only; be used by TObject::TObject. Use Add() to add objects to any other; TObjectTable object. This is a static function. void Delete(Option_t* opt = """"); Delete all objects stored in the TObjectTable. void Remove(TObject* obj); Remove an object from the object table. void RemoveQuietly(TObject* obj); Remove an object from the object table. If op is 0 or not in the table; don't complain. Currently only used by the TClonesArray dtor. Should not; be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TObjectTable.html:8039,Inherit,Inheritance,8039,root/html602/TObjectTable.html,https://root.cern,https://root.cern/root/html602/TObjectTable.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ment(const char* datamember, Int_t& offset) const; TStreamerElement*GetStreamerElementReal(Int_t i, Int_t j) const; static Bool_tTVirtualStreamerInfo::GetStreamMemberWise(); virtual const char*TNamed::GetTitle() const; Int_tGetType(Int_t id) const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(char* pointer, Int_t i, Int_t j, Int_t len) const; Double_tGetValueClones(TClonesArray* clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; Double_tGetValueSTL(TVirtualCollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; Double_tGetValueSTLP(TVirtualCollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; TStreamerInfoActions::TActionSequence*GetWriteMemberWiseActions(Bool_t forCollection); TStreamerInfoActions::TActionSequence*GetWriteObjectWiseActions(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTVirtualStreamerInfo::IsBuilt() const; Bool_tTVirtualStreamerInfo::IsCompiled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTVirtualStreamerInfo::IsOptimized() const; Int_tTVirtualStreamerInfo::IsRecovered() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; Bool_tMatchLegacyCheckSum(UInt_t checksum) const; voidTObject::MayNotUse(const char* method) const; virtual void*New(void* obj = 0); virtual void*NewArray(Long_t nElements, void* ary = 0); virtual TVirtualStreamerInfo*NewInfo(TClass* cl); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStreamerInfo.html:6144,Inherit,InheritsFrom,6144,root/html534/TStreamerInfo.html,https://root.cern,https://root.cern/root/html534/TStreamerInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ment,oldType,i,compinfo,offset) );; 4151 sequence->AddAction( GenericLooper::GenericWrite, new TConfigSTL(info,i,compinfo,0 /* the offset will be used from TStreamerInfo */,0,proxy.GetCollectionClass(),0,0) );; 4152 }; 4153#endif; 4154 }; 4155 return sequence;; 4156}; 4157 ; 4158void TStreamerInfoActions::TActionSequence::AddToOffset(Int_t delta); 4159{; 4160 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4161 // TBranchElement in the case of split sub-object.; 4162 ; 4163 TStreamerInfoActions::ActionContainer_t::iterator end = fActions.end();; 4164 for(TStreamerInfoActions::ActionContainer_t::iterator iter = fActions.begin();; 4165 iter != end;; 4166 ++iter); 4167 {; 4168 // (fElemId == -1) indications that the action is a Push or Pop DataCache.; 4169 if (iter->fConfiguration->fElemId != (UInt_t)-1 &&; 4170 !iter->fConfiguration->fInfo->GetElements()->At(iter->fConfiguration->fElemId)->TestBit(TStreamerElement::kCache)); 4171 iter->fConfiguration->AddToOffset(delta);; 4172 }; 4173}; 4174 ; 4175void TStreamerInfoActions::TActionSequence::SetMissing(); 4176{; 4177 // Add the (potentially negative) delta to all the configuration's offset. This is used by; 4178 // TBranchElement in the case of split sub-object.; 4179 ; 4180 TStreamerInfoActions::ActionContainer_t::iterator end = fActions.end();; 4181 for(TStreamerInfoActions::ActionContainer_t::iterator iter = fActions.begin();; 4182 iter != end;; 4183 ++iter); 4184 {; 4185 if (!iter->fConfiguration->fInfo->GetElements()->At(iter->fConfiguration->fElemId)->TestBit(TStreamerElement::kCache)); 4186 iter->fConfiguration->SetMissing();; 4187 }; 4188}; 4189 ; 4190TStreamerInfoActions::TActionSequence *TStreamerInfoActions::TActionSequence::CreateCopy(); 4191{; 4192 // Create a copy of this sequence.; 4193 ; 4194 TStreamerInfoActions::TActionSequence *sequence = new TStreamerInfoActions::TActionSequence(fStreamerInfo, fActions.size(), IsForVectorPtrLooper());; 4195 ; 4196 sequence",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:196899,config,configuration,196899,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ment::_meanMean (if calculated for central moment); static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooSetProxyRooAbsMoment::_nsetNormalization set (optional); RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Int_tRooAbsMoment::_orderMoment order; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsMoment::_takeRootReturn n-order root of moment; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxyRooAbsMoment::_xObservable; RooRealProxy_xfX*F ; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFirstMoment(); Default constructor. Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFirstMoment.html:35400,config,configuration,35400,root/html534/RooFirstMoment.html,https://root.cern,https://root.cern/root/html534/RooFirstMoment.html,2,['config'],['configuration']
Modifiability,"ment::_meanMean (if calculated for central moment); static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooSetProxyRooAbsMoment::_nsetNormalization set (optional); RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Int_tRooAbsMoment::_orderMoment order; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsMoment::_takeRootReturn n-order root of moment; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxyRooAbsMoment::_xObservable; RooRealProxy_xfX*F ; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMoment(); Default constructor. RooMomen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMoment.html:35486,config,configuration,35486,root/html534/RooMoment.html,https://root.cern,https://root.cern/root/html534/RooMoment.html,2,['config'],['configuration']
Modifiability,"ment::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Double_tfCurMaxOverall and current maximum value of the separating quantity.; Double_tfCurMinOverall and current minimum value of the separating quantity.; Int_tfDefPointSetCapacityDefault capacity of subjugated TEvePointSet's.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tfLastBin! Index of the last filled TEvePointSet.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Double_tfMax; Double_tfMin; Int_tfNBinsNumber of subjugated TEvePointSet's.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TStringfQuantNameName of the separating quantity.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree item",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSetArray.html:19752,variab,variable,19752,root/html528/TEvePointSetArray.html,https://root.cern,https://root.cern/root/html528/TEvePointSetArray.html,1,['variab'],['variable']
Modifiability,"ment::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Double_tfCurMaxOverall and current maximum value of the separating quantity.; Double_tfCurMinOverall and current minimum value of the separating quantity.; Int_tfDefPointSetCapacityDefault capacity of subjugated TEvePointSet's.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Int_tfLastBin! Index of the last filled TEvePointSet.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Double_tfMax; Double_tfMin; Int_tfNBinsNumber of subjugated TEvePointSet's.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TStringfQuantNameName of the separating quantity.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree item",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEvePointSetArray.html:19986,variab,variable,19986,root/html530/TEvePointSetArray.html,https://root.cern,https://root.cern/root/html530/TEvePointSetArray.html,5,['variab'],['variable']
Modifiability,"ment::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Pixel_tTEveWindow::fgCurrentBackgroundColor; static UInt_tTEveWindow::fgMainFrameDefHeight; static UInt_tTEveWindow::fgMainFrameDefWidth; static Pixel_tTEveWindow::fgMiniBarBackgroundColor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveWindowPack(TGPack* p, const char* n = ""TEveWindowPack"", const char* t = """"); Constructor.; If passed pack is 0, a defualt one is instantiated. ~TEveWindowPack(); Destructor. TGFrame* GetGUIFrame(); Return top-frame of this eve-window - the pack. TEveWindowSlot* NewSlot(); Create a new frame-slot at the last position of the pack. TEveWindowSlot* NewSlotWithWeight(Float_t w); Create a new weighted frame-slot at the last position of the pack. void FlipOrientation(); Flip orientation of the pack (vertical / horizontal). void SetVertical(Bool_t x = kTRUE); Set orientation of the pack (vertical / horizontal). void EqualizeFrames(); Refit existing frames so that their lengths are equal. TEveCompositeFrame& operator=(const TEveWindowPack& ). Bool_t CanMakeNewSlots() const; { return kFALSE; }. TEveWindowPack(const TEveWindowPack& ). void SetHorizontal(); { SetVertical(kFALSE); }. TGPack* GetPack() const; { return fPack; }. » Author: Matevz ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveWindowPack.html:21730,Inherit,Inheritance,21730,root/html532/TEveWindowPack.html,https://root.cern,https://root.cern/root/html532/TEveWindowPack.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ment::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Pixel_tTEveWindow::fgCurrentBackgroundColor; static UInt_tTEveWindow::fgMainFrameDefHeight; static UInt_tTEveWindow::fgMainFrameDefWidth; static Pixel_tTEveWindow::fgMiniBarBackgroundColor. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveWindowSlot(const char* n = ""TEveWindowSlot"", const char* t = """"); Constructor. ~TEveWindowSlot(); Destructor. TGFrame* GetGUIFrame(); Return top-frame of this eve-window - the big button to make slot current. void SetCurrent(Bool_t curr); Set current state of this window-slot.; Virtual from TEveWindow. TEveWindowPack* MakePack(); A pack is created in place of this window-slot.; This window-slot will auto-destruct. TEveWindowTab* MakeTab(); A tab is created in place of this window-slot.; This window-slot will auto-destruct. TEveWindowFrame* MakeFrame(TGFrame* frame = 0); An eve-window-frame is created and frame is passed into it.; If frame is 0 (the default), a default composite-frame will be created; in TEveWindowFrame() constructor.; This window-slot will auto-destruct. TGCompositeFrame* StartEmbedding(); Start embedding a window that will replace the current slot.; It is expected that a main-frame will be created and then; StopEm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveWindowSlot.html:21730,Inherit,Inheritance,21730,root/html532/TEveWindowSlot.html,https://root.cern,https://root.cern/root/html532/TEveWindowSlot.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ment::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveJetCone(const Text_t* n = ""TEveJetCone"", const Text_t* t = """"); Constructor. void ComputeBBox(); Compute bounding-box of the data. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, returns TEveJetConeProjected class. Int_t AddCone(Float_t eta, Float_t phi, Float_t cone_r, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * cone_r : cone radius in eta-phi space; * length : length of the cone; * if cylinder is set and length is adapted to cylinder.; - if length is given, it will be used as scalar factor; * if cylinder is not set, length is used as length of the cone; Return 0 on sucess. Int_t AddEllipticCone(Float_t eta, Float_t phi, Float_t reta, Float_t rphi, Float_t length = 0); Add jet cone.; parameters are :; * (eta,phi) : of the center/leading particle; * (reta, rphi) : radius of cone in eta-phi space; * length : length of the cone; * if cylinder is set and length is adapted to cylinder.; - if length is given, it will be used as scalar factor; * if cylinder is not set, length is used as length of the cone; Returns 0 on sucess. TEveVector CalcEtaPhiVec(Float_t eta, Float_t phi) const; Fill TEveVector with eta and phi, magnitude 1. TEveVector CalcBaseVec(Float_t eta, Float_t phi) const; Returns point on the base of the cone with given eta and phi. TEveVector CalcBaseVec(Float_t alpha) const; Returns point on the base of the cone with internal angle alpha:; alpha = 0 -> max eta, alpha = pi/2 -> max phi, ... Bool_t IsInTransitionRegion() const; Returns true if the cone is in barrel / endcap transition region. TEveJetCone(const TEveJetCone& ). TEveJetCone& operator=(const TEveJetCone& ). virtual ~TEveJetCone(); {}. void SetApex(const TEveVector& a); { fApex = a; }. void SetCylinder(Float_t r, Float_t z); { fLimits.Set(0, r, z); fThetaC = fLimits.Theta(); }. void SetRadius(F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveJetCone.html:24810,adapt,adapted,24810,root/html602/TEveJetCone.html,https://root.cern,https://root.cern/root/html602/TEveJetCone.html,4,['adapt'],['adapted']
Modifiability,"mentList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Short_tTEveCompound::fCompoundOpenIf more than zero, tag new children as compound members.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCompoundProjected.html:19036,variab,variable,19036,root/html528/TEveCompoundProjected.html,https://root.cern,https://root.cern/root/html528/TEveCompoundProjected.html,1,['variab'],['variable']
Modifiability,"mentList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Short_tTEveCompound::fCompoundOpenIf more than zero, tag new children as compound members.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveCompoundProjected.html:19428,variab,variable,19428,root/html530/TEveCompoundProjected.html,https://root.cern,https://root.cern/root/html530/TEveCompoundProjected.html,5,['variab'],['variable']
Modifiability,"mentVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>unit() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::ScalarX() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalarx() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::ScalarY() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalary() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<Double32_t>fCoordinatesinternal coordinate system. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SetXYZ(ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalar a, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalar b, ROOT::Math::DisplacementVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::LocalCoordinateSystemTag>::Scalar c). DisplacementVector3D & operator=( const ForeignVector & v). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). CoordSystem Coordinates() const; ------ Set, Get, and access coordinate data ------. Retrieve a copy of the coordinates object. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(const Scalar[] src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordinates.SetCoordinates(src); return *this; }. DisplacementVector3D<CoordSystem, Tag>& SetCoordinates(ROOT::Math::Displacement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html:10962,Inherit,Inheritance,10962,root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__DisplacementVector3D_-p1CylindricalEta3D_Double32_t__-p1LocalCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mentation for the SQL writers. ; Definition at line 30 of file TProofMonSenderSQL.h. Public Member Functions;  TProofMonSenderSQL (const char *serv, const char *user, const char *pass, const char *table=""proof.proofquerylog"", const char *dstab=0, const char *filestab=0);  Main constructor. ;  ;  ~TProofMonSenderSQL () override;  Destructor. ;  ; TClass * IsA () const override;  ; Int_t SendDataSetInfo (TDSet *, TList *, const char *, const char *) override;  Post information about the processed dataset(s). ;  ; Int_t SendFileInfo (TDSet *, TList *, const char *, const char *) override;  Post information about the requested files. ;  ; Int_t SendSummary (TList *, const char *) override;  Send 'summary' record for the table 'proofquerylog'. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProofMonSender;  TProofMonSender (const char *n=""Abstract"", const char *t=""ProofMonSender"");  ;  ~TProofMonSender () override;  ; Bool_t IsValid () const;  ; Int_t SetSendOptions (const char *);  Parse send options from string 'sendopts'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSenderSQL.html:1263,inherit,inherited,1263,doc/master/classTProofMonSenderSQL.html,https://root.cern,https://root.cern/doc/master/classTProofMonSenderSQL.html,1,['inherit'],['inherited']
Modifiability,"mented from TObject.; Definition at line 637 of file TPluginManager.cxx. ◆ RemoveHandler(). void TPluginManager::RemoveHandler ; (; const char * ; base, . const char * ; regexp = nullptr . ). Remove handler for the specified base class and the specified regexp. ; If regexp=0 remove all handlers for the specified base. ; Definition at line 588 of file TPluginManager.cxx. ◆ Streamer(). void TPluginManager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TPluginManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 286 of file TPluginManager.h. ◆ WritePluginMacros(). Int_t TPluginManager::WritePluginMacros ; (; const char * ; dir, . const char * ; plugin = nullptr . ); const. Write in the specified directory the plugin macros. ; If plugin is specified and if it is a base class all macros for that base will be written. If it is a plugin class name, only that one macro will be written. If plugin is 0 all macros are written. Returns -1 if dir does not exist, 0 otherwise. ; Definition at line 665 of file TPluginManager.cxx. ◆ WritePluginRecords(). Int_t TPluginManager::WritePluginRecords ; (; const char * ; envFile, . const char * ; plugin = nullptr . ); const. Write in the specified environment config file the plugin records. ; If plugin is specified and if it is a base class all records for that base will be written. If it is a plugin class name, only that one record will be written. If plugin is 0 all macros are written. If envFile is 0 or """" the records are written to stdout. Returns -1 if envFile cannot be created or opened, 0 otherwise. ; Definition at line 747 of file TPluginManager.cxx. Member Data Documentation. ◆ fBasesLoaded. THashTable* TPluginManager::fBasesLoaded. private . Definition at line 262 of file TPluginManager.h. ◆ fHandlers. TList* TPluginManager::fHandlers. private . Definition at line 261 of file TPluginManage",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:20587,plugin,plugin,20587,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,1,['plugin'],['plugin']
Modifiability,"mented from TObject.; Reimplemented in TLeafB, TLeafC, TLeafD, TLeafD32, TLeafElement, TLeafF, TLeafF16, TLeafG, TLeafI, TLeafL, TLeafO, TLeafObject, and TLeafS.; Definition at line 480 of file TLeaf.cxx. ◆ StreamerNVirtual(). void TLeaf::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 168 of file TLeaf.h. Member Data Documentation. ◆ fBranch. TBranch* TLeaf::fBranch. protected . ! Pointer to supporting branch (we do not own the branch) ; Definition at line 78 of file TLeaf.h. ◆ fIsRange. bool TLeaf::fIsRange. protected . (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ; Definition at line 75 of file TLeaf.h. ◆ fIsUnsigned. bool TLeaf::fIsUnsigned. protected . (=true if unsigned, false otherwise) ; Definition at line 76 of file TLeaf.h. ◆ fLeafCount. TLeaf* TLeaf::fLeafCount. protected . Pointer to Leaf count if variable length (we do not own the counter) ; Definition at line 77 of file TLeaf.h. ◆ fLeafCountValues. LeafCountValues* TLeaf::fLeafCountValues. protected . ! Cache of collection/array sizes ; Definition at line 79 of file TLeaf.h. ◆ fLen. Int_t TLeaf::fLen. protected . Number of fixed length elements in the leaf's data. ; Definition at line 72 of file TLeaf.h. ◆ fLenType. Int_t TLeaf::fLenType. protected . Number of bytes for this data type. ; Definition at line 73 of file TLeaf.h. ◆ fNdata. Int_t TLeaf::fNdata. protected . ! Number of elements in fAddress data buffer. ; Definition at line 71 of file TLeaf.h. ◆ fOffset. Int_t TLeaf::fOffset. protected . Offset in ClonesArray object (if one) ; Definition at line 74 of file TLeaf.h. Libraries for TLeaf:. [legend]; The documentation for this class was generated from the following files:; tree/tree/inc/TLeaf.h; tree/tree/src/TLeaf.cxx. TLeaf. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:53 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeaf.html:30291,variab,variable,30291,doc/master/classTLeaf.html,https://root.cern,https://root.cern/doc/master/classTLeaf.html,1,['variab'],['variable']
Modifiability,"mented in ProgressMonitor, RooAbsTestStatistic, RooAddition, and RooConstraintSum.; Definition at line 374 of file RooAbsReal.h. ◆ setEvalErrorLoggingMode(). void RooAbsReal::setEvalErrorLoggingMode ; (; RooAbsReal::ErrorLoggingMode ; m). static . Set evaluation error logging mode. ; Options are; PrintErrors - Print each error through RooMsgService() as it occurs CollectErrors - Accumulate errors, but do not print them. A subsequent call to printEvalErrors() will print a summary CountErrors - Accumulate error count, but do not print them. ; Definition at line 4392 of file RooAbsReal.cxx. ◆ setHideOffset(). void RooAbsReal::setHideOffset ; (; bool ; flag). static . Definition at line 168 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [1/2]. void RooAbsReal::setIntegratorConfig ; (; ). Remove the specialized numeric integration configuration associated with this object. ; Definition at line 3428 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [2/2]. void RooAbsReal::setIntegratorConfig ; (; const RooNumIntConfig & ; config). Set the given integrator configuration as default numeric integration configuration for this object. ; Definition at line 3417 of file RooAbsReal.cxx. ◆ setParameterizeIntegral(). void RooAbsReal::setParameterizeIntegral ; (; const RooArgSet & ; paramVars). Definition at line 4400 of file RooAbsReal.cxx. ◆ setPlotLabel(). void RooAbsReal::setPlotLabel ; (; const char * ; label). Set the label associated with this variable. ; Definition at line 414 of file RooAbsReal.cxx. ◆ setTreeBranchStatus(). void RooAbsReal::setTreeBranchStatus ; (; TTree & ; t, . bool ; active . ). overrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3198 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition at line 147 of file RooAbsReal.h. ◆ sigma() [1/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs). inline . Definition at line 368 of file RooAbsReal.h.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:148169,config,config,148169,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['config']
Modifiability,"mented in ProgressMonitor, RooAddition, RooConstraintSum, and RooAbsTestStatistic.; Definition at line 367 of file RooAbsReal.h. ◆ setEvalErrorLoggingMode(). void RooAbsReal::setEvalErrorLoggingMode ; (; RooAbsReal::ErrorLoggingMode ; m). static . Set evaluation error logging mode. ; Options are; PrintErrors - Print each error through RooMsgService() as it occurs CollectErrors - Accumulate errors, but do not print them. A subsequent call to printEvalErrors() will print a summary CountErrors - Accumulate error count, but do not print them. ; Definition at line 4316 of file RooAbsReal.cxx. ◆ setHideOffset(). void RooAbsReal::setHideOffset ; (; bool ; flag). static . Definition at line 191 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [1/2]. void RooAbsReal::setIntegratorConfig ; (; ). Remove the specialized numeric integration configuration associated with this object. ; Definition at line 3346 of file RooAbsReal.cxx. ◆ setIntegratorConfig() [2/2]. void RooAbsReal::setIntegratorConfig ; (; const RooNumIntConfig & ; config). Set the given integrator configuration as default numeric integration configuration for this object. ; Definition at line 3335 of file RooAbsReal.cxx. ◆ setParameterizeIntegral(). void RooAbsReal::setParameterizeIntegral ; (; const RooArgSet & ; paramVars). Definition at line 4324 of file RooAbsReal.cxx. ◆ setPlotLabel(). void RooAbsReal::setPlotLabel ; (; const char * ; label). Set the label associated with this variable. ; Definition at line 416 of file RooAbsReal.cxx. ◆ setTreeBranchStatus(). void RooAbsReal::setTreeBranchStatus ; (; TTree & ; t, . bool ; active . ). overrideprotectedvirtual . (De)Activate associated tree branch ; Implements RooAbsArg.; Definition at line 3116 of file RooAbsReal.cxx. ◆ setUnit(). void RooAbsReal::setUnit ; (; const char * ; unit). inline . Definition at line 147 of file RooAbsReal.h. ◆ sigma() [1/2]. RooAbsMoment * RooAbsReal::sigma ; (; RooRealVar & ; obs). inline . Definition at line 361 of file RooAbsReal.h.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:146332,config,config,146332,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['config']
Modifiability,"mented in TChain, TNtuple, and TNtupleD.; Definition at line 8065 of file TTree.cxx. ◆ ResetBranchAddresses(). void TTree::ResetBranchAddresses ; (; ). virtual . Tell all of our branches to drop their current objects and allocate new ones. ; Reimplemented in TChain, TNtuple, and TNtupleD.; Definition at line 8075 of file TTree.cxx. ◆ Scan(). Long64_t TTree::Scan ; (; const char * ; varexp = """", . const char * ; selection = """", . Option_t * ; option = """", . Long64_t ; nentries = kMaxEntries, . Long64_t ; firstentry = 0 . ). virtual . Loop over tree entries and print entries passing selection. . If varexp is 0 (or """") then print only first 8 columns.; If varexp = ""*"" print all columns. Otherwise a columns selection can be made using ""var1:var2:var3"". See alsoTTreePlayer::Scan for more information ; Reimplemented in TChain.; Definition at line 8094 of file TTree.cxx. ◆ SetAlias(). bool TTree::SetAlias ; (; const char * ; aliasName, . const char * ; aliasFormula . ). virtual . Set a tree variable alias. ; Set an alias for an expression/formula based on the tree 'variables'.; The content of 'aliasName' can be used in TTreeFormula (i.e. TTree::Draw, TTree::Scan, TTreeViewer) and will be evaluated as the content of 'aliasFormula'.; If the content of 'aliasFormula' only contains symbol names, periods and array index specification (for example event.fTracks[3]), then the content of 'aliasName' can be used as the start of symbol.; If the alias 'aliasName' already existed, it is replaced by the new value.; When being used, the alias can be preceded by an eventual 'Friend Alias' (see TTree::GetFriendAlias); Return true if it was added properly.; For example: tree->SetAlias(""x1"",""(tdc1[1]-tdc1[0])/49"");; tree->SetAlias(""y1"",""(tdc1[3]-tdc1[2])/47"");; tree->SetAlias(""x2"",""(tdc2[1]-tdc2[0])/49"");; tree->SetAlias(""y2"",""(tdc2[3]-tdc2[2])/47"");; tree->Draw(""y2-y1:x2-x1"");; ; tree->SetAlias(""theGoodTrack"",""event.fTracks[3]"");; tree->Draw(""theGoodTrack.fPx""); // same as ""event.fTracks[3]",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:198234,variab,variable,198234,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,1,['variab'],['variable']
Modifiability,"ments (for each Tab) ;  ; TGCompositeFrame * fEditFrame;  Frame in ""Edit"" mode. ;  ; Int_t fEditPos;  Id of tab in ""Edit"" mode. ;  ; Int_t fEditSubPos;  Id of subtab in ""Edit"" mode. ;  ; TGTab * fEditTab;  Tab in ""Edit"" mode. ;  ; TGHorizontalFrame * fH1;  Horizontal frame. ;  ; TGHorizontalFrame * fH2;  Horizontal frame. ;  ; TGHorizontalFrame * fHf;  Horizontal frame. ;  ; TGHSplitter * fHSplitter;  Horizontal splitter. ;  ; const TGPicture * fIconPic;  icon picture ;  ; TGLayoutHints * fLH0;  ; TGLayoutHints * fLH1;  ; TGLayoutHints * fLH2;  ; TGLayoutHints * fLH3;  Layout hints, part 1. ;  ; TGLayoutHints * fLH4;  ; TGLayoutHints * fLH5;  ; TGLayoutHints * fLH6;  ; TGLayoutHints * fLH7;  Layout hints, part 2. ;  ; TGMenuBar * fMenuBar;  Main (owned) menu bar. ;  ; TGPopupMenu * fMenuExecPlugin;  ""Exec Plugin"" popup menu ;  ; TGPopupMenu * fMenuFile;  ""File"" popup menu ;  ; TGHorizontalFrame * fMenuFrame;  Shared menu frame. ;  ; TGPopupMenu * fMenuHelp;  ""Browser Help"" popup menu ;  ; Int_t fNbInitPlugins;  Number of initial plugins (from .rootrc) ;  ; Int_t fNbTab [3];  Number of tab elements (for each Tab) ;  ; Int_t fPid;  Current process id. ;  ; TList fPlugins;  List of plugins. ;  ; TGHorizontalFrame * fPreMenuFrame;  First (owned) menu frame. ;  ; Bool_t fShowCloseTab;  kTRUE to show close icon on tab elements ;  ; TGStatusBar * fStatusBar;  Status bar. ;  ; TGTab * fTabBottom;  Bottom Tab. ;  ; TGTab * fTabLeft;  Left Tab. ;  ; TGTab * fTabRight;  Right Tab. ;  ; TGHorizontalFrame * fToolbarFrame;  Toolbar frame. ;  ; TGHorizontalFrame * fTopMenuFrame;  Top menu frame. ;  ; TGVerticalFrame * fV1;  Vertical frame. ;  ; TGVerticalFrame * fV2;  Vertical frame. ;  ; TGVerticalFrame * fVf;  Vertical frame. ;  ; TGVSplitter * fVSplitter;  Vertical splitter. ;  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBrowser.html:37083,plugin,plugins,37083,doc/master/classTEveBrowser.html,https://root.cern,https://root.cern/doc/master/classTEveBrowser.html,2,['plugin'],['plugins']
Modifiability,"ments and Methods in Physics Research A 401 (1997) 113-132.; [2] M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; [3] M. Morhac et al.: Efficient algorithm of multidimensional deconvolution and its application to nuclear data processing. Digital Signal Processing, Vol. 13, No. 1, (2003), 144-171.; [4] M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125.; These NIM papers are also available as Postscript files from:. SpectrumDec.ps.gz; SpectrumSrc.ps.gz; SpectrumBck.ps.gz. See also the online documentation and tutorials. ; Definition at line 18 of file TSpectrum3.h. Public Types; enum  { kBackIncreasingWindow =0; , kBackDecreasingWindow =1; , kBackSuccessiveFiltering =0; , kBackOneStepFiltering =1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSpectrum3 ();  Constructor. ;  ;  TSpectrum3 (Int_t maxpositions, Double_t resolution=1);  ;  ~TSpectrum3 () override;  Destructor. ;  ; virtual const char * Background (const TH1 *hist, Int_t niter, Option_t *option=""goff"");  This function calculates background spectrum from source in h. ;  ; const char * Background (Double_t ***spectrum, Int_t ssizex, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum3.html:2242,inherit,inherited,2242,doc/master/classTSpectrum3.html,https://root.cern,https://root.cern/doc/master/classTSpectrum3.html,1,['inherit'],['inherited']
Modifiability,"ments if the variable is fixed or const the value is zero The ordering of the variables is the same as in errors and parameter value. ;  ; int CovMatrixStatus () const override;  return the status of the covariance matrix status = -1 : not available (inversion failed or Hesse failed) status = 0 : available but not positive defined status = 1 : covariance only approximate status = 2 : full matrix but forced pos def status = 3 : full accurate matrix ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; bool FixVariable (unsigned int ivar) override;  fix an existing variable ;  ; bool GetCovMatrix (double *cov) const override;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; bool GetHessianMatrix (double *h) const override;  Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ;  ; bool GetMinosError (unsigned int i, double &errLow, double &errUp, int=0) override;  get the minos error for parameter i, return false if Minos failed A minimizaiton must be performed befre, return false if no minimization has been done In case of Minos failed the status error is updated as following status += 10 * minosStatus. ;  ; bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &varObj) const override;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; double GlobalCC (unsigned int i) const override;  get global correlation coefficient for the variable i. ;  ; bool Hesse () override;  perform a full calculation of the Hessian matrix for error calculation If a valid minimum exists the calculation is done on the minimum point otherwise is performed in the current set values of param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:2749,variab,variable,2749,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,"menu entries. ;  ; void DrawRCheckMark (GContext_t gc, Int_t l, Int_t t, Int_t r, Int_t b);  Draw radio check mark. Used for radio button type menu entries. ;  ; void DrawTrianglePattern (GContext_t gc, Int_t l, Int_t t, Int_t r, Int_t b);  Draw triangle pattern. ;  ; virtual void Reposition ();  Reposition entries in popup menu. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TContextMenuImp;  TContextMenuImp (const TContextMenuImp &cmi);  ; TContextMenuImp & operator= (const TContextMenuImp &cmi);  . Private Member Functions;  TRootContextMenu (const TRootContextMenu &);  ; void CreateMenu (TObject *object);  Create the context menu depending on the selected object. ;  ; TRootContextMenu & operator= (const TRootContextMenu &);  . Private Attributes; TRootDialog * fDialog;  dialog prompting for command line arguments ;  ; TList * fTrash;  list of objects to be deleted before refilling menu ;  . Additional Inherited Members;  Public Types inherited from TGWindow",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootContextMenu.html:28254,inherit,inherited,28254,doc/master/classTRootContextMenu.html,https://root.cern,https://root.cern/doc/master/classTRootContextMenu.html,3,['inherit'],['inherited']
Modifiability,"meobject identifier; TStringfParamsdefault string of macro parameters; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMacro(); Create an empty macro, use AddLine() or ReadFile() to fill this macro. TMacro(const char* name, const char* title = """"); Create a macro with a name and a title.; If name contains a '.' it is assumed to be the name of a file, and; * the macro is automatically filled by reading all the lines in the file,; * if the title is empty, it will be set to the name of the file,; * the name will be set to the filename without path or extension. TMacro(const TMacro& ); Copy constructor. ~TMacro(); Delete this macro. TMacro& operator=(const TMacro& ); Copy constructor. TObjString * AddLine(const char* text); Add line with text in the list of lines of this macro. Returns 0 in; case of error, otherwise the added TObjString. void Browse(TBrowser* b); When clicking in the browser, the following action is performed; on this macro, depending the content of the variable TMacro.Browse.; TMacro.Browse can be set in the system.rootrc or .rootrc file like; TMacro.Browse : Action; or set via gEnv->SetValue, eg; gEnv->SetValue(""TMacro.Browse"",""Print"");; By default TMacro.Browse=""""; -if TMacro.Browse ="""" the macro is executed; -if TMacro.Browse =""Print"" the macro is printed in stdout; -if TMacro.Browse is of the form ""mymacro.C""; the macro void mymacro.C(TMacro *m) is called where m=this macro; An example of macro.C saving the macro into a file and viewing it; with emacs is shown below:; void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }. TMD5 * Checksum(); Returns checksum of the current content. The returned TMD5 object must; be deleted by the user. Returns 0 in case of error. Long_t Exec(const char* params = 0, Int_t* error = 0); Execute this macro with params, if params is 0, default parameters; (set via SetParams) are used.; error is set to an TInte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMacro.html:7890,variab,variable,7890,root/html534/TMacro.html,https://root.cern,https://root.cern/root/html534/TMacro.html,2,['variab'],['variable']
Modifiability,"mepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » TPyMultiGenFunction. class TPyMultiGenFunction: public ROOT::Math::IBaseFunctionMultiDim. Python wrapper for Fit functions. Function Members (Methods); public:. TPyMultiGenFunction(PyObject* self = 0); virtual~TPyMultiGenFunction(); static TClass*Class(); virtual ROOT::Math::IBaseFunctionMultiDim*Clone() const; virtual doubleDoEval(const double* x) const; virtual TClass*IsA() const; virtual unsigned intNDim() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TPyMultiGenFunction(const TPyMultiGenFunction& src); TPyMultiGenFunction&operator=(const TPyMultiGenFunction&). Data Members; private:. PyObject*fPySelf! actual python object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyMultiGenFunction(PyObject* self = 0); Construct a TPyMultiGenFunction derived with <self> as the underlying. ~TPyMultiGenFunction(); Destructor. Only deref if still holding on to Py_None (circular otherwise). unsigned int NDim() const; Simply forward the call to python self. double DoEval(const double* x) const; Simply forward the call to python self. TPyMultiGenFunction(PyObject* self = 0); ctor/dtor, and assignment. ROOT::Math::IBaseFunctionMultiDim* Clone() const; Math::IMultiGenFunction implementation. { return new TPyMultiGenFunction( fPySelf ); }. TPyMultiGenFunction& operator=(const TPyMultiGenFunction& ); { return *this; }. » Last changed: Sat Mar 14 16:47:58 2015 » Last generated: 2015-03-14 16:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPyMultiGenFunction.html:1092,Inherit,Inheritance,1092,root/html534/TPyMultiGenFunction.html,https://root.cern,https://root.cern/root/html534/TPyMultiGenFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merElement(const char* datamember, Int_t& offset) const; TStreamerElement*GetStreamerElementReal(Int_t i, Int_t j) const; static Bool_tTVirtualStreamerInfo::GetStreamMemberWise(); virtual const char*TNamed::GetTitle() const; Int_t*GetTypes() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(char* pointer, Int_t i, Int_t j, Int_t len) const; Double_tGetValueClones(TClonesArray* clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; Double_tGetValueSTL(TVirtualCollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; Double_tGetValueSTLP(TVirtualCollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; TStreamerInfoActions::TActionSequence*GetWriteMemberWiseActions(Bool_t forCollection); TStreamerInfoActions::TActionSequence*GetWriteObjectWiseActions(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTVirtualStreamerInfo::IsBuilt() const; Bool_tTVirtualStreamerInfo::IsCompiled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTVirtualStreamerInfo::IsOptimized() const; Int_tTVirtualStreamerInfo::IsRecovered() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual void*New(void* obj = 0); virtual void*NewArray(Long_t nElements, void* ary = 0); virtual TVirtualStreamerInfo*NewInfo(TClass* cl); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerInfo.html:5933,Inherit,InheritsFrom,5933,root/html532/TStreamerInfo.html,https://root.cern,https://root.cern/root/html532/TStreamerInfo.html,1,['Inherit'],['InheritsFrom']
Modifiability,"merElement::GetNewClass() const; Int_tTStreamerElement::GetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; Int_tTStreamerSTL::GetSTLtype() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTStreamerElement::HasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTStreamerElement::Init(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTStreamerSTL::IsaPointer() const; virtual Bool_tTStreamerSTL::IsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTStreamerSTL::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerSTLstring.html:3655,Inherit,InheritsFrom,3655,root/html532/TStreamerSTLstring.html,https://root.cern,https://root.cern/root/html532/TStreamerSTLstring.html,1,['Inherit'],['InheritsFrom']
Modifiability,"merInfoActions.cxx:142; TStreamerInfoActions::VectorLooper::ConvertBasicType< BitsMarker, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1753; TStreamerInfoActions::VectorLooper::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1793; TStreamerInfoActions::VectorLooper::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1775; TStreamerInfoActions::VectorLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1735; TStreamerInfoActions::VectorLooper::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1736; TStreamerInfoActions::VectorLooper::ConvertCollectionBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2013; TStreamerInfoActions::VectorLooper::ConvertCollectionBasicTypeDefinition TStreamerInfoActions.cxx:1985; TStreamerInfoActions::VectorLooper::ConvertCollectionBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1986; TStreamerInfoActions::VectorLooperDefinition TStreamerInfoActions.cxx:1719; TStreamerInfoActions::VectorLooper::ReadActionstatic Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1823; TStreamerInfoActions::VectorLooper::WriteBasicTypestatic Int_t WriteBas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:272630,config,config,272630,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"merNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPolyMarker3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with 3-d polymarkers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPointSet3D.html:14217,inherit,inherited,14217,doc/master/classTPointSet3D.html,https://root.cern,https://root.cern/doc/master/classTPointSet3D.html,1,['inherit'],['inherited']
Modifiability,"merNVirtual(). void TSystem::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 558 of file TSystem.h. ◆ StripOffProto(). const char * TSystem::StripOffProto ; (; const char * ; path, . const char * ; proto . ). staticprotected . Strip off protocol string from specified path. ; Definition at line 117 of file TSystem.cxx. ◆ Symlink(). int TSystem::Symlink ; (; const char * ; from, . const char * ; to . ). virtual . Create a symbolic link from file1 to file2. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1368 of file TSystem.cxx. ◆ Syslog(). void TSystem::Syslog ; (; ELogLevel ; level, . const char * ; mess . ). virtual . Send mess to syslog daemon. ; Level is the logging level and mess the message that will be written on the log. ; Reimplemented in TUnixSystem.; Definition at line 1686 of file TSystem.cxx. ◆ TempDirectory(). const char * TSystem::TempDirectory ; (; ); const. virtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1482 of file TSystem.cxx. ◆ TempFileName(). FILE * TSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). virtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1499 of file TSystem.cxx. ◆ Umask(). int TSystem::Umask ; (; Int_t ; mask). virtual . Set the process file creation mode mask. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1517 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:94569,config,configured,94569,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['config'],['configured']
Modifiability,"merNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGLFont(); TGLFont(const TGLFont& o); TGLFont(Int_t size, Int_t font, TGLFont::EMode mode, FTFont* f = 0, TGLFontManager* mng = 0). private:. TGLFont&operator=(const TGLFont& o). Data Members; public:. static TGLFont::EModekBitmap; static TGLFont::ETextAlignV_ekBottom; static TGLFont::ETextAlignH_ekCenterH; static TGLFont::ETextAlignV_ekCenterV; static TGLFont::EModekExtrude; static TGLFont::ETextAlignH_ekLeft; static TGLFont::EModekOutline; static TGLFont::EModekPixmap; static TGLFont::EModekPolygon; static TGLFont::ETextAlignH_ekRight; static TGLFont::EModekTexture; static TGLFont::ETextAlignV_ekTop; static TGLFont::EModekUndef. protected:. Int_tfFilefree-type file name; TGLFont::EModefModefree-type FTGL class id; Int_tfSizefree-type face size; Int_tfTrashCount. private:. Float_tfDepthdepth of extruded fonts, enforced at render time.; FTFont*fFontFTGL font.; TGLFontManager*fManagerFont manager. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLFont(); Constructor. TGLFont(Int_t size, Int_t font, TGLFont::EMode mode, FTFont* f = 0, TGLFontManager* mng = 0); Constructor. TGLFont(const TGLFont& o); Assignment operator. ~TGLFont(); Destructor. void CopyAttributes(const TGLFont& o); Assignment operator. Float_t GetAscent() const; Get font's ascent. Float_t GetDescent() const; Get font's descent. The returned value is positive. Float_t GetLineHeight() const; Get font's line-height. void MeasureBaseLineParams(Float_t& ascent, Float_t& descent, Float_t& line_height, const char* txt = ""Xj"") const; Measure font's base-line parameters from the passed text.; Note that the measured parameters are not the same as the ones; returned by get-functions - those were set by the font designer. void BBox(const char* txt, Float_t& llx, Float_t& lly, Float_t& llz, Float_t& urx, Float_t& ury, Float_t& urz) const; Get bounding box. void BBox(const wchar_t* txt, Float_t& llx, Float_t& lly, Float_t&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLFont.html:2930,Inherit,Inheritance,2930,root/html602/TGLFont.html,https://root.cern,https://root.cern/root/html602/TGLFont.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; ROOT::THnBaseBrowsableTHnBaseBrowsable(const ROOT::THnBaseBrowsable&); ROOT::THnBaseBrowsableTHnBaseBrowsable(THnBase* hist, Int_t axis); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfAxisAxis to visualize; THnBase*fHistOriginal histogram; TH1*fProjProjection result. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THnBaseBrowsable(THnBase* hist, Int_t axis); Construct a THnBaseBrowsable. ~THnBaseBrowsable(); Destruct a THnBaseBrowsable. void Browse(TBrowser* b); Browse an axis of a THnBase, i.e. draw its projection. THnBase& operator=(const ROOT::THnBaseBrowsable& ). Bool_t IsFolder() const; { return kTRUE; }. THnBaseBrowsable(THnBase* hist, Int_t axis). » Author: Axel Naumann (2011-12-20) » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-03-10 17:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__THnBaseBrowsable.html:5703,Inherit,Inheritance,5703,root/html534/ROOT__THnBaseBrowsable.html,https://root.cern,https://root.cern/root/html534/ROOT__THnBaseBrowsable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSQLResult*fClassData! results with request to selected table; TSQLClassInfo*fInfo! classinfo, for which pool is created; Bool_tfIsMoreRows! indicates if class data has not yet read rows; TList*fRowsPool! pool of extrcted, but didnot used rows. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLObjectDataPool(). TSQLObjectDataPool(TSQLClassInfo* info, TSQLResult* data). ~TSQLObjectDataPool(); Destructor of TSQLObjectDataPool class; Deletes not used rows and class data table. TSQLRow* GetObjectRow(Long64_t objid); Returns single sql row with object data for that class. TSQLObjectDataPool(). TSQLClassInfo* GetSqlInfo() const; { return fInfo; }. TSQLResult* GetClassData() const; { return fClassData; }. » Author: Sergey Linev 20/11/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sql:$Id$ » Last generated: 2015-03-14 16:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLObjectDataPool.html:5894,Inherit,Inheritance,5894,root/html534/TSQLObjectDataPool.html,https://root.cern,https://root.cern/root/html534/TSQLObjectDataPool.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EStatusBits { kMultiply; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; boolfVal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t TParameter<AParamType> Merge(TCollection* in); Merge objects in the list.; Returns the number of objects that were in the list. const char * GetName() const; { return fName; }. const AParamType & GetVal() const; { return fVal; }. void SetVal(const bool& val); { fVal = val; }. void SetMergeMode(char mergemode = '+'). ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. Int_t Compare(const TObject* obj) const; Compare two TParameter objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp). void ls(Option_t* ) const; Print this parameter content. void Print(Option_t* ) const; Print this parameter content. cout << IsA(). » Author: Maarten Ballintijn 21/06/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TParameter.h 40272 2011-07-18 11:12:14Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automaticall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_bool_.html:5503,Inherit,Inheritance,5503,root/html532/TParameter_bool_.html,https://root.cern,https://root.cern/root/html532/TParameter_bool_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EStatusBits { kMultiply; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfName; longfVal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t TParameter<AParamType> Merge(TCollection* in); Merge objects in the list.; Returns the number of objects that were in the list. const char * GetName() const; { return fName; }. const AParamType & GetVal() const; { return fVal; }. void SetVal(const long& val); { fVal = val; }. void SetMergeMode(char mergemode = '+'). ULong_t Hash() const; { return fName.Hash(); }. Bool_t IsSortable() const; { return kTRUE; }. Int_t Compare(const TObject* obj) const; Compare two TParameter objects. Returns 0 when equal, -1 when this is; smaller and +1 when bigger (like strcmp). void ls(Option_t* ) const; Print this parameter content. void Print(Option_t* ) const; Print this parameter content. cout << IsA(). » Author: Maarten Ballintijn 21/06/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TParameter.h 40272 2011-07-18 11:12:14Z rdm $ » Last generated: 2011-11-03 20:21; This page has been automaticall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_long_.html:5504,Inherit,Inheritance,5504,root/html532/TParameter_long_.html,https://root.cern,https://root.cern/root/html532/TParameter_long_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~ConfInterval(); destructor. {}. Bool_t IsInInterval(const RooArgSet& ) const; check if given point is in the interval. void SetConfidenceLevel(Double_t cl); used to set confidence level. Keep pure virtual. Double_t ConfidenceLevel() const; return confidence level. RooArgSet* GetParameters() const; return list of parameters of interest defining this interval (return a new cloned list). Bool_t CheckParameters(const RooArgSet& ) const; check if parameters are correct (i.e. they are the POI of this interval). » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: ConfInterval.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__ConfInterval.html:6373,Inherit,Inheritance,6373,root/html532/RooStats__ConfInterval.html,https://root.cern,https://root.cern/root/html532/RooStats__ConfInterval.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual_b); TUnuranDiscrDist(TF1* func); TUnuranDiscrDist(const TUnuranDiscrDist&); TUnuranDiscrDist(const ROOT::Math::IGenFunction& func, bool copyFunc = false). Data Members; private:. const ROOT::Math::IGenFunction*fCdfpointer to the cumulative distribution function; boolfHasDomainflag to control if distribution has a defined domain (otherwise is [0,INT_MAX]); boolfHasModeflag to control if distribution has a pre-computed mode; boolfHasSumflag to control if distribution has a pre-computed sum of the probabilities; intfModemode of the distribution; boolfOwnFuncflag to control if distribution owns the funcitno pointers; vector<double>fPVecVector of the probabilities; vector<double>fPVecSumVector of the sum of the probabilities; const ROOT::Math::IGenFunction*fPmfpointer to a function calculating the probability; doublefSumtotal sum of the probabilities in the given domain; intfXmaxupper value of the domain; intfXminlower value of the domain. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TUnuranDiscrDist(const ROOT::Math::IGenFunction& func, bool copyFunc = false); Constructor from a generic function object. TUnuranDiscrDist(TF1* func); Constructor from a TF1 objects. TUnuranDiscrDist(const TUnuranDiscrDist& ); Implementation of copy ctor using aassignment operator. ~TUnuranDiscrDist(); destructor implementation. void SetCdf(const ROOT::Math::IGenFunction& cdf); set cdf distribution using a generic function interface. void SetCdf(TF1* cdf); set cumulative distribution function from a TF1. double Pmf(int x) const; evaluate the distribution. double Cdf(int x) const; evaluate the cumulative distribution; otherwise evaluate from the sum of the probabilities. TUnuranDiscrDist * Clone() const. Clone (required by base class). { return new TUnuranDiscrDist(*this); }. void SetDomain(int xmin, int xmax). Set the distribution domain, by default the domain is [0,INT_MAX]; If xmin >= xmax a domain is removed. void SetMode(int mode)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TUnuranDiscrDist.html:2029,Inherit,Inheritance,2029,root/html604/TUnuranDiscrDist.html,https://root.cern,https://root.cern/root/html604/TUnuranDiscrDist.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); static TVirtualViewer3D*Viewer3D(TVirtualPad* pad = 0, Option_t* type = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TVirtualViewer3D* Viewer3D(TVirtualPad* pad = 0, Option_t* type = """"); Create a Viewer 3D of specified type. virtual ~TVirtualViewer3D(); {}. Bool_t PreferLocalFrame() const; Viewers must always handle master (absolute) positions - and; buffer producers must be able to supply them. Some viewers may; prefer local frame & translation - and producers can optionally; supply them. Bool_t CanLoopOnPrimitives() const; Viewers can implement their own loop over pad's primitive list. { return kFALSE; }. void PadPaint(TVirtualPad* ); When they can, TPad::Paint() and TPad::PaintModified() simply; call the following function:. {}. void ObjectPaint(TObject* , Option_t* = """"); {}. void BeginScene(); Addition/removal of objects must occur between Begin/EndUpdate calls. Bool_t BuildingScene() const. void EndScene(). Int_t AddObject(const TBuffer3D& buffer, Bool_t* addChildren = 0); Simple object addition - buffer represents a unique single positioned o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualViewer3D.html:16748,Inherit,Inheritance,16748,root/html534/TVirtualViewer3D.html,https://root.cern,https://root.cern/root/html534/TVirtualViewer3D.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"merNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLManager; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGLManager *& Instance ();  Return the global GL Manager. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TGWin3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32GLManager.html:11027,inherit,inherited,11027,doc/master/classTGWin32GLManager.html,https://root.cern,https://root.cern/doc/master/classTGWin32GLManager.html,1,['inherit'],['inherited']
Modifiability,"merNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLManager; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGLManager *& Instance ();  Return the global GL Manager. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TX11GL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTX11GLManager.html:11628,inherit,inherited,11628,doc/master/classTX11GLManager.html,https://root.cern,https://root.cern/doc/master/classTX11GLManager.html,1,['inherit'],['inherited']
Modifiability,"merNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLManager; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGLManager *& Instance ();  Return the global GL Manager. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef std::map< ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGOSXGLManager.html:10798,inherit,inherited,10798,doc/master/classTGOSXGLManager.html,https://root.cern,https://root.cern/doc/master/classTGOSXGLManager.html,1,['inherit'],['inherited']
Modifiability,"merNVirtual_b);  ;  Public Member Functions inherited from RooAbsAnaConvPdf;  RooAbsAnaConvPdf ();  Default constructor, required for persistence. ;  ;  RooAbsAnaConvPdf (const char *name, const char *title, const RooResolutionModel &model, RooRealVar &convVar);  Constructor. ;  ;  RooAbsAnaConvPdf (const RooAbsAnaConvPdf &other, const char *name=nullptr);  ;  ~RooAbsAnaConvPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integral defined by given code, which is returned by getAnalyticalIntegralWN() ;  ; virtual bool changeModel (const RooResolutionModel &newModel);  Change the current resolution model to newModel. ;  ; virtual RooFit::OwningPtr< RooArgSet > coefVars (Int_t coefIdx) const;  Return set of parameters with are used exclusively by the coefficient functions. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooAbsRealLValue * convVar ();  Retrieve the convolution variable. ;  ; const RooAbsRealLValue * convVar () const;  Retrieve the convolution variable. ;  ; Int_t declareBasis (const char *expression, const RooArgList &params);  Declare a basis function for use in this physics model. ;  ; bool forceAnalyticalInt (const RooAbsArg &dep) const override;  This function forces RooRealIntegral to offer all integration dependents to RooAbsAnaConvPdf::getAnalyticalIntegralWN() for consideration for internal integration, if RooRealIntegral considers this to be unsafe (e.g. ;  ; RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const override;  Create a generator context for this p.d.f. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Advertise capability to perform (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:5242,variab,variable,5242,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,4,['variab'],['variable']
Modifiability,"merNVirtual_b);  ;  Public Member Functions inherited from TStopwatch;  TStopwatch ();  Create a stopwatch and start it. ;  ; void Continue ();  Resume a stopped stopwatch. ;  ; Int_t Counter () const;  ; Double_t CpuTime ();  Stop the stopwatch (if it is running) and return the cputime (in seconds) passed between the start and stop events. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print the real and cpu time passed between the start and stop events. ;  ; Double_t RealTime ();  Stop the stopwatch (if it is running) and return the realtime (in seconds) passed between the start and stop events. ;  ; void Reset ();  ; void ResetCpuTime (Double_t time=0);  ; void ResetRealTime (Double_t time=0);  ; void Start (Bool_t reset=kTRUE);  Start the stopwatch. ;  ; void Stop ();  Stop the stopwatch. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Timer.html:3574,inherit,inherited,3574,doc/master/classTMVA_1_1Timer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Timer.html,1,['inherit'],['inherited']
Modifiability,"meric integrator; RooInvTransform Function binding returning inverse of other function binding; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLinTransBinning Linear transformation of binning specification; RooLinearMorph Linear shape interpolation operator p.d.f; RooLinearVar Lvalue linear transformation function ; RooLinkedList Doubly linked list for storage of RooAbsArg objects; RooLinkedListElem Element of RooLinkedList container class; RooLinkedListIter Iterator for RooLinkedList container class; RooList TList with extra support for Option_t associations; RooListProxy Proxy class for a RooArgList; RooMCIntegrator VEGAS based multi-dimensional numerical integration engine; RooMCStudy A general purpose toy Monte Carlo study manager; RooMPSentinel Singleton class that terminate MP server processes when parent exists; RooMapCatEntry Utility class, holding a map expression from a index label regexp to a RooCatType; RooMappedCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNormSetCach",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:36659,variab,variable,36659,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,1,['variab'],['variable']
Modifiability,"merical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxyRooAbsHiddenReal::_stateProxy to hiding state category; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; RooRealProxy_valueHolder of the blind value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooUnblindPrecision.html:33323,config,configuration,33323,root/html530/RooUnblindPrecision.html,https://root.cern,https://root.cern/root/html530/RooUnblindPrecision.html,1,['config'],['configuration']
Modifiability,"merical values or strings to fill in the option. For example, TAxis::SetTitle will prompt you for a string to use for the axis title. Context menus of different objects in a canvas. 9.2.3.2 Structure of the Context Menus; The curious reader will have noticed that each entry in the context menu corresponds to a method of the class. Look for example to the menu named TAxis::xaxis. xaxis is the name of the object and TAxis the name of its class. If we look at the list of TAxis methods, for example in https://root.cern/doc/master/classTAxis.html, we see the methods SetTimeDisplay() andUnZoom(), which appear also in the context menu.; There are several divisions in the context menu, separated by lines. The top division is a list of the class methods; the second division is a list of the parent class methods. The subsequent divisions are the methods other parent classes in case of multiple inheritance. For example, see the TPaveText::title context menu. A TPaveText inherits from TAttLine, which has the method SetLineAttributes().; 9.2.3.3 Adding Context Menus for a Class; For a method to appear in the context menu of the object it has to be marked by // *MENU* in the header file. Below is the line from TAttLine.h that adds the SetLineAttribute method to the context menu.; virtual void SetLineAttributes(); // *MENU*; Nothing else is needed, since Cling knows the classes and their methods. It takes advantage of that to create the context menu on the fly when the object is clicking on. If you click on an axis, ROOT will ask the interpreter what are the methods of the TAxis and which ones are set for being displayed in a context menu.; Now, how does the interpreter know this? Remember, when you build a class that you want to use in the ROOT environment, you use rootcling that builds the so-called stub functions and the dictionary. These functions and the dictionary contain the knowledge of the used classes. To do this, rootcling parses all the header files. ROOT has defined s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:295398,inherit,inherits,295398,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"mericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2214; TStreamerInfoActions::BitsMarkerDefinition TStreamerInfoActions.cxx:67; TStreamerInfoActions::BitsMarker::Value_tUInt_t Value_tDefinition TStreamerInfoActions.cxx:68; TStreamerInfoActions::ConvertBasicType< BitsMarker, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1427; TStreamerInfoActions::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1457; TStreamerInfoActions::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1444; TStreamerInfoActions::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:1414; TStreamerInfoActions::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:1415; TStreamerInfoActions::GenericLooper::ConvertBasicType< BitsMarker, To, Generic >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2447; TStreamerInfoActions::GenericLooper::ConvertBasicType< NoFactorMarker< From >, To, Converter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2504; TStreamerInfoActions::GenericLooper::ConvertBasicType< WithFactorMarker< From >, To, Converter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2484; TStreamerInfoActions::GenericLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:2428; TStream",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:265218,config,config,265218,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"mersDefinition TSystem.h:294; TSystem::fNfdInt_t fNfdSignals that were trapped.Definition TSystem.h:280; TSystem::fInsideNotifystd::atomic< Bool_t > fInsideNotifyDefinition TSystem.h:286; TSystem::Sleepvirtual void Sleep(UInt_t milliSec)Sleep milliSec milli seconds.Definition TSystem.cxx:437; TSystem::fMaxwfdInt_t fMaxwfdDefinition TSystem.h:282; TSystem::WorkingDirectoryvirtual const char * WorkingDirectory()Return working directory.Definition TSystem.cxx:871; TSystem::Whichvirtual char * Which(const char *search, const char *file, EAccessMode mode=kFileExists)Find location of file in a search path.Definition TSystem.cxx:1548; TSystem::GetHostByNamevirtual TInetAddress GetHostByName(const char *server)Get Internet Protocol (IP) address of host.Definition TSystem.cxx:2291; TSystem::RemoveSignalHandlervirtual TSignalHandler * RemoveSignalHandler(TSignalHandler *sh)Remove a signal handler from list of signal handlers.Definition TSystem.cxx:542; TSystem::Setenvvirtual void Setenv(const char *name, const char *value)Set environment variable.Definition TSystem.cxx:1649; TSystem::StripOffProtostatic const char * StripOffProto(const char *path, const char *proto)Strip off protocol string from specified path.Definition TSystem.cxx:117; TSystem::RemoveTimervirtual TTimer * RemoveTimer(TTimer *t)Remove timer from list of system timers.Definition TSystem.cxx:481; TSystem::GetDirNamevirtual TString GetDirName(const char *pathname)Return the directory name in pathname.Definition TSystem.cxx:1032; TSystem::Unlinkvirtual int Unlink(const char *name)Unlink, i.e.Definition TSystem.cxx:1381; TTimeBasic time type with millisecond precision.Definition TTime.h:27; TTimerHandles synchronous and a-synchronous timer events.Definition TTimer.h:51; TTimer::IsAsyncBool_t IsAsync() constDefinition TTimer.h:81; TTimer::CheckTimerBool_t CheckTimer(const TTime &now)Check if timer timed out.Definition TTimer.cxx:130; TTimer::IsSyncBool_t IsSync() constDefinition TTimer.h:80; TUnixSystemDefinition T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:200321,variab,variable,200321,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['variab'],['variable']
Modifiability,"mes as usual (normally ~10000 nodes and ~200000 elementary faces are shown) - all - try to display all geometry volumes (may lead to browser hanging) - maxnodesN - configure maximal number of rendered nodes (like maxnodes100K) - maxfacesN - configure maximal number of rendered faces (like maxfaces3M) - highlight - force highlighting of selected volume, normally activated for moderate-size geometries - nohighlight - disable volumes highlighting (can be activated via context menu) - hscene - enable highlight of extra objects like tracks or hits - hsceneonly - enable only highlight of extra objects like tracks or hits - nohscene - disable highlight of extra objects like tracks or hits - macro:name.C - invoke ROOT configuration macro - dflt - set default volumes colors as TGeoManager::DefaultColors() does - transpXY - set global transparency value (XY is number between 1 and 99) - zoomFACTOR - set initial zoom factor (FACTOR is integer value from 1 to 10000, default is 100) - rotyANGLE - set Y rotation angle in degrees (like roty10) - rotzANGLE - set Z rotation angle in degrees (like rotz20) - rotate - enable automatic rotation of the geometry - trzVALUE - set transformation along Z axis (like trz50) - trrVALUE - set radial transformation (like trr100) - ortho_camera - use THREE.OrthographicCamera without possibility to rotate it - ortho_camera_rotate - use THREE.OrthographicCamera and enable it rotation - ctrl - show control UI from the beginning - tracks - show tracks from TGeoManager - showtop - show top-level volume of TGeoManager (default off) - no_screen - let ignore kVisOnScreen bits for nodes visibility - dray - calculate rendering order using raytracing (extensive calculations) - dbox - use distance to nearest point from bounding box for rendering order (default) - dpnt - use distance to shape center as rendering order - dsize - use volume size as rendering order - ddflt - let three.js to calculate rendering order - comp - show left and right components of TGeo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:12563,config,configuration,12563,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,2,['config'],['configuration']
Modifiability,"message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::VariableTransformBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::VariableTransformBase; void CalcNorm (const std::vector< const Event * > &);  TODO --> adapt to variable,target,spectator selection method to calculate minimum, maximum, mean, and RMS for all variables used in the MVA. ;  ; Int_t GetNClasses ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html:12209,inherit,inherited,12209,doc/master/classTMVA_1_1VariableRearrangeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html,2,['inherit'],['inherited']
Modifiability,"message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::VariableTransformBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TMVA::VariableTransformBase; typedef VectorOfCharAndInt::iterator ItVarTypeIdx;  ; typedef VectorOfCharAndInt::const_iterator ItVarTypeIdxConst;  ; typedef std::vector< std::pair< Char_t, UInt_t > > VectorOfCharAndInt;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableIdentityTransform.html:11434,inherit,inherited,11434,doc/master/classTMVA_1_1VariableIdentityTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableIdentityTransform.html,2,['inherit'],['inherited']
Modifiability,"message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::VariableTransformBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; std::vector< TMatrixDSym * > * CalcCovarianceMatrices (const std::vector< const Event * > &events, Int_t maxCls);  ; void CalcSQRMats (const std::vector< Event * > &, Int_t maxCls);  compute square-root matrices for signal and background ;  . Private Attributes; std::vector< TMatrixD * > fDecorrMatrices;  ! Decorrelation matrix [class0/class1/.../all classes] ;  . Additional Inher",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html:11530,inherit,inherited,11530,doc/master/classTMVA_1_1VariableDecorrTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html,2,['inherit'],['inherited']
Modifiability,"message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::VariableTransformBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void CalcNormalizationParams (const std::vector< Event * > &events);  compute offset and scale from min and max ;  . Private Attributes; VectorOfFloatVectors fMax;  ! Max of source range ;  ; VectorOfFloatVectors fMin;  ! Min of source range ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html:12743,inherit,inherited,12743,doc/master/classTMVA_1_1VariableNormalizeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html,2,['inherit'],['inherited']
Modifiability,"message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::VariableTransformBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void CalculatePrincipalComponents (const std::vector< Event * > &);  calculate the principal components for the signal and the background data it uses the MakePrincipal method of ROOT's TPrincipal class ;  ; void P2X (std::vector< Float_t > &, const std::vector< Float_t > &, Int_t cls) const;  Perform the back-transformation from the principal components pc, and return x It's the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html:11796,inherit,inherited,11796,doc/master/classTMVA_1_1VariablePCATransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariablePCATransform.html,2,['inherit'],['inherited']
Modifiability,"message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::VariableTransformBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void CleanUpCumulativeArrays (TString opt=""ALL"");  clean up of cumulative arrays ;  ; void GetCumulativeDist (const std::vector< Event * > &);  fill the cumulative distributions ;  ; Double_t OldCumulant (Float_t x, TH1 *h) const;  . Private Attributes; std::vector< std::vector< TH1F * > > fCumulativeDist;  ! The Cumulative distributions ;  ; std::vector< std::vector< PDF * > > fC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html:11518,inherit,inherited,11518,doc/master/classTMVA_1_1VariableGaussTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html,2,['inherit'],['inherited']
Modifiability,"message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  Flag indicating that classes compiled OK. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; std::map< TString, ClassRelInfo > _c2fmap;  ; bool _compiledOK;  ; std::map< TString, ExtraHeader > _ehmap;  ; std::map< TString, ClassFiles > _fmap;  ; RooWorkspace * _wspace;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html:9115,inherit,inherited,9115,doc/master/classRooWorkspace_1_1CodeRepo.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html,1,['inherit'],['inherited']
Modifiability,"message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void AnchorFromLine (const TString &line, TString &anchor);  Create an anchor from the given line, by hashing it and convertig the hash into a custom base64 string. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t IsName (UChar_t c);  Check if c is a valid C++ name character. ;  ; static Bool_t IsWord (UChar_t c);  Check if c is a valid first character for C++ name. ;  ; static Bool_t Strip (TString &s);  strips ' ', tabs, and newlines from both sides of str ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { ;   kClassDoc_Uninitialized; , kClassDoc_LookingNothingFound; , kClassDoc_LookingHaveSomething; , kClassDoc_Written; , ;   kClassDoc_Ignore; , kClassDoc_NumStates. };  ; enum  EDocContext { kIgnore; , kDocFunc; , kDocClass; , kNumDocContexts; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void AddClassDataMembersRecursively (TBaseClass *bc);  Add data members of fCurrentClass and of bc to datamembers, recursively. ;  ; void AddClassMethodsRecursively (TBaseClass *b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocParser.html:11815,inherit,inherited,11815,doc/master/classTDocParser.html,https://root.cern,https://root.cern/doc/master/classTDocParser.html,1,['inherit'],['inherited']
Modifiability,"message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis3D.html:11360,inherit,inherits,11360,doc/master/classTAxis3D.html,https://root.cern,https://root.cern/doc/master/classTAxis3D.html,3,['inherit'],['inherits']
Modifiability,"messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams ; for logging of e.g. DEBUG messages on particular topics or objects and or redirect streams to; C++ streams or files.; ; The singleton instance is accessible through RooMsgService::instance() ;; . Function Members (Methods); public:. ~StreamConfig(); voidaddTopic(RooFit::MsgTopic newTopic); Bool_tmatch(RooFit::MsgLevel level, RooFit::MsgTopic facility, const RooAbsArg* obj); Bool_tmatch(RooFit::MsgLevel level, RooFit::MsgTopic facility, const TObject* obj); RooMsgService::StreamConfig&operator=(const RooMsgService::StreamConfig&); RooMsgService::StreamConfig&operator=(RooMsgService::StreamConfig&&); voidremoveTopic(RooFit::MsgTopic oldTopic); RooMsgService::StreamConfigStreamConfig(); RooMsgService::StreamConfigStreamConfig(const RooMsgService::StreamConfig&); RooMsgService::StreamConfigStreamConfig(RooMsgService::StreamConfig&&). Data Members; public:. Bool_tactive; stringbaseClassName; stringclassName; Color_tcolor; RooFit::MsgLevelminLevel; stringobjectName; ostream*os; Bool_tprefix; stringtagName; Int_ttopic; Bool_tuniversal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t match(RooFit::MsgLevel level, RooFit::MsgTopic facility, const RooAbsArg* obj); Determine if message from given object at given level on given topic is logged. Bool_t match(RooFit::MsgLevel level, RooFit::MsgTopic facility, const TObject* obj); Determine if message from given object at given level on given topic is logged. void addTopic(RooFit::MsgTopic newTopic). void removeTopic(RooFit::MsgTopic oldTopic). » Last changed: Tue Sep 8 17:42:19 2015 » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooMsgService__StreamConfig.html:2336,Inherit,Inheritance,2336,root/html604/RooMsgService__StreamConfig.html,https://root.cern,https://root.cern/root/html604/RooMsgService__StreamConfig.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHistFunc(); Default constructor. RooHistFunc(const char* name, const char* title, const RooArgSet& vars, const RooDataHist& dhist, Int_t intOrder = 0); Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; for the entire life span of this function. RooHistFunc(const char* name, const char* title, const RooArgList& funcObs, const RooArgList& histObs, const RooDataHist& dhist, Int_t intOrder = 0); Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; for the entire life span of this function. RooHistFunc(const RooHistFunc& other, const char* name = 0); Copy constructor. ~RooHistFunc(). Double_t evaluate() const; Return the current value: The value of the bin enclosing the current coordinates; of the dependents, normalized by the histograms contents. Interpolation; is applied if the RooHistFunc is configured to do that. Int_t getMaxVal(const RooArgSet& vars) const; Only handle case of maximum in all variables. Double_t maxVal(Int_t code) const. Double_t totVolume() const; Return the total volume spanned by the observables of the RooDataHist. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* ra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooHistFunc.html:37446,variab,variable,37446,root/html534/RooHistFunc.html,https://root.cern,https://root.cern/root/html534/RooHistFunc.html,6,['variab'],['variable']
Modifiability,"meta:$Id$; 2// Author: Fons Rademakers 20/06/96; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12 ; 13#ifndef ROOT_TDictionary; 14#define ROOT_TDictionary; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TDictionary //; 19// //; 20// This class defines an abstract interface that must be implemented //; 21// by all classes that contain dictionary information. //; 22// //; 23// The dictionary is defined by the followling classes: //; 24// TDataType (typedef definitions) //; 25// TGlobal (global variables) //; 26// TFunction (global functions) //; 27// TClass (classes) //; 28// TBaseClass (base classes) //; 29// TDataMember (class datamembers) //; 30// TMethod (class methods) //; 31// TMethodArg (method arguments) //; 32// //; 33// All the above classes implement the TDictionary abstract interface //; 34// (note: the indentation shows aggregation not inheritance). //; 35// The ROOT dictionary system provides a very extensive RTTI //; 36// environment that facilitates a.o. object inspectors, object I/O, //; 37// ROOT Trees, etc. Most of the type information is provided by the //; 38// CINT C++ interpreter. //; 39// //; 40// TMethodCall (method call environment) //; 41// //; 42//////////////////////////////////////////////////////////////////////////; 43 ; 44#include ""TNamed.h""; 45 ; 46#include ""ESTLType.h""; 47 ; 48// The following are opaque type and are never really declared; 49// The specific implementation of TInterpreter will cast the; 50// value of pointer to this types to the correct type (possibly; 51// distinct from these); 52class CallFunc_t;; 53class ClassInfo_t;; 54class BaseClassInf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDictionary_8h_source.html:1078,variab,variables,1078,doc/master/TDictionary_8h_source.html,https://root.cern,https://root.cern/doc/master/TDictionary_8h_source.html,4,"['inherit', 'variab']","['inheritance', 'variables']"
Modifiability,"meter aux is obligatory for the cuts method where it represents the efficiency cutoff. Double_t EvaluateMVA( const std::vector<Double_t>& inputVec, const TString& methodTag, Double_t aux ); Evaluate a vector<double> of input data for a given method; The parameter aux is obligatory for the cuts method where it represents the efficiency cutoff. Double_t EvaluateMVA(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. Double_t EvaluateMVA(TMVA::MethodBase* method, Double_t aux = 0); evaluates the MVA. const std::vector< Float_t >& EvaluateRegression(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateRegression(TMVA::MethodBase* method, Double_t aux = 0); evaluates the regression MVA. Float_t EvaluateRegression(UInt_t tgtNumber, const TString& methodTag, Double_t aux = 0); evaluates the regression MVA. const std::vector< Float_t >& EvaluateMulticlass(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateMulticlass(TMVA::MethodBase* method, Double_t aux = 0); evaluates the multiclass MVA. Float_t EvaluateMulticlass(UInt_t clsNumber, const TString& methodTag, Double_t aux = 0); evaluates the multiclass MVA. TMVA::IMethod* FindMVA(const TString& methodTag); return pointer to method with tag ""methodTag"". TMVA::MethodCuts* FindCutsMVA(const TString& methodTag); special function for Cuts to avoid dynamic_casts in ROOT macros,; which are not properly handled by CINT. Double_t GetProba(const TString& methodTag, Double_t ap_sig = 0.5, Double_t mvaVal = -9999999); evaluates probability of MVA for given set of input variables. Double_t GetRarity(const TString& methodTag, Double_t mvaVal = -9999999); evaluates the MVA's rarity. void DecodeVarNames( const std::string& varNames ); decodes ""name1:name2:..."" form. void DecodeVarNames(const TString& varNames); decodes ""name1:name2:..."" form. D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Reader.html:13590,variab,variables,13590,root/html528/TMVA__Reader.html,https://root.cern,https://root.cern/root/html528/TMVA__Reader.html,4,['variab'],['variables']
Modifiability,"meter beta.; By default, alpha=0, beta=1; This distribution is known under different names, most common is; double exponential distribution, but it also appears as; the two-tailed exponential or the bilateral exponential distribution. Double_t LogNormal(Double_t x, Double_t sigma, Double_t theta = 0, Double_t m = 1); Computes the density of LogNormal distribution at point x.; Variable X has lognormal distribution if Y=Ln(X) has normal distribution; sigma is the shape parameter; theta is the location parameter; m is the scale parameter; The formula was taken from ""Engineering Statistics Handbook"" on site; http://www.itl.nist.gov/div898/handbook/eda/section3/eda3669.htm; Implementation using ROOT::Math::lognormal_pdf. /*; ; */. Double_t NormQuantile(Double_t p); Computes quantiles for standard normal distribution N(0, 1); at probability p; ALGORITHM AS241 APPL. STATIST. (1988) VOL. 37, NO. 3, 477-484. Bool_t Permute(Int_t n, Int_t* a); Simple recursive algorithm to find the permutations of; n natural numbers, not necessarily all distinct; adapted from CERNLIB routine PERMU.; The input array has to be initialised with a non descending; sequence. The method returns kFALSE when; all combinations are exhausted. Double_t Student(Double_t T, Double_t ndf); Computes density function for Student's t- distribution; (the probability function (integral of density) is computed in StudentI). First parameter stands for x - the actual variable of the; density function p(x) and the point at which the density is calculated.; Second parameter stands for number of degrees of freedom. About Student distribution:; Student's t-distribution is used for many significance tests, for example,; for the Student's t-tests for the statistical significance of difference; between two sample means and for confidence intervals for the difference; between two population means. Example: suppose we have a random sample of size n drawn from normal; distribution with mean Mu and st.deviation Sigma. Then th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMath.html:33617,adapt,adapted,33617,root/html528/TMath.html,https://root.cern,https://root.cern/root/html528/TMath.html,10,['adapt'],['adapted']
Modifiability,"meter for the scan function ; [in]projectionMode3rd parameter for the scan function ; [out]lCurvePlotfor monitoring, shows the L-curve ; [out]logTauXPlotfor monitoring, L-curve(X) as a function of log(tau) ; [out]logTauYPlotfor monitoring, L-curve(Y) as a function of log(tau). Return value: the coordinate number on the curve scanResult which corresponds to the minimum ; The function is scanned by repeating the following steps nPoint times . Choose a value of tau . Perform the unfolding for this choice of tau, DoUnfold(tau) . Determinethe scan variable GetScanVariable() . The method GetScanVariable() defines scans of correlation coefficients, where mode is chosen from the enum EScanTauMode. In addition one may set distribution and/or projectionMode to refine the calculation of correlations (e.g. restrict the calcuation to the signal distribution and/or exclude underflow and overflow bins). See the documentation of GetScanVariable() for details. Alternative scan variables may be defined by overriding the GetScanVariable() method. ; Automatic choice of scan range: if (tauMin,tauMax) do not correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then the tau range is determined automatically. Use with care! ; Definition at line 1354 of file TUnfoldDensity.cxx. ◆ Streamer(). void TUnfoldDensity::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TUnfold. ◆ StreamerNVirtual(). void TUnfoldDensity::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 205 of file TUnfoldDensity.h. Member Data Documentation. ◆ fConstInputBins. const TUnfoldBinning* TUnfoldDensity::fConstInputBins. protected . binning scheme for the input (detector level) ; Definition at line 57 of file TUnfoldDensity.h. ◆ fConstOutputBins. const TUnfoldBinning* TUnfoldDensity::fConstOutputBins. protected . binning scheme for the output (truth level) ; Definition at line 55 of file TUnfoldDensity.h. ◆ fOwnedInputBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:70037,variab,variables,70037,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,1,['variab'],['variables']
Modifiability,"meter; TMVA::SVWorkingSet*fWgSetsvm working set . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodSVM(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodSVM(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. ~MethodSVM(); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); SVM can handle classification with 2 classes and regression with one regression-target. void Init(); default initialisation. void DeclareOptions(); declare options available for this method. void DeclareCompatibilityOptions(); options that are used ONLY for the READER to ensure backward compatibility. void ProcessOptions(); option post processing (if necessary). void Train(); Train SVM. void AddWeightsXMLTo(void* parent) const; write configuration to xml file. void ReadWeightsFromXML(void* wghtnode). void WriteWeightsToStream(TFile& fout) const; TODO write IT; write training sample (TTree) to file. void ReadWeightsFromStream(istream& istr). void ReadWeightsFromStream(TFile& fFin); TODO write IT. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns MVA value for given event. const std::vector<Float_t>& GetRegressionValues(). void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Marcin Wolter, Andrzej Zemla » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general pl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodSVM.html:17730,config,configuration,17730,root/html534/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodSVM.html,2,['config'],['configuration']
Modifiability,"meter<Long64_t>::SetMergeMode(char mergemode = '+'); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTParameter<Long64_t>::SetVal(const long long& val); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TParameter::EStatusBits { kMultiply; kMax; kMin; kFirst; kLast; kIsConst; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Inc(Long_t n = 1); Increment scalar value by n. Int_t Merge(TCollection* list); Merge scalars with scalars in the list. The scalar values are added.; Returns the number of scalars that were in the list. TSelectorScalar(const char* name = """", Long64_t val = 0); { }. ~TSelectorScalar(); { }. » Author: Maarten Ballintijn 13/02/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-03-14 16:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorScalar.html:5849,Inherit,Inheritance,5849,root/html534/TSelectorScalar.html,https://root.cern,https://root.cern/root/html534/TSelectorScalar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"meterOptimisation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TMVA::HyperParameterOptimisation Class ReferenceTMVA. . Definition at line 73 of file HyperParameterOptimisation.h. Public Member Functions;  HyperParameterOptimisation (DataLoader *dataloader);  ;  ~HyperParameterOptimisation ();  ; virtual void Evaluate ();  Virtual method to be implemented with your algorithm. ;  ; TString GetFiiter ();  ; TString GetFOMType ();  ; UInt_t GetNumFolds ();  ; const HyperParameterOptimisationResult & GetResults () const;  ; virtual TClass * IsA () const;  ; void SetFitter (TString fitType);  ; void SetFOMType (TString ftype);  ; void SetNumFolds (UInt_t folds);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Envelope;  ~Envelope ();  Default destructor. ;  ; virtual void BookMethod (TString methodname, TString methodtitle, TString options="""");  Method to book the machine learning method to perform the algorithm. ;  ; virtual void BookMethod (Types::EMVA method, TString methodtitle, TString options="""");  Method to book the machine learning method to perform the algorithm. ;  ; DataLoader * GetDataLoader ();  Method to get the pointer to TMVA::DataLoader object. ;  ; TFile * GetFile ();  Method to get the pointer to TFile object. ;  ; std::vector< OptionMap > & GetMethods ();  Method get the Booked methods in a option map object. ;  ; Bool_t HasMethod (TString methodname, TString methodtitle);  function to check methods booked ;  ; Bool_t IsModelPersistence ();  Method to see if the algorithm model is saved in xml or serialized files. ;  ; Bool_t IsSilentFile ();  Method to see if a file is available to save results. ;  ; Bool_t IsVerbose ();  Method to se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1HyperParameterOptimisation.html:1038,inherit,inherited,1038,doc/master/classTMVA_1_1HyperParameterOptimisation.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1HyperParameterOptimisation.html,1,['inherit'],['inherited']
Modifiability,"meters are defined as all parameters; of the function except the stated paramsOfInterest. RooAbsReal* createIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. The following named arguments are accepted. NormSet(const RooArgSet&) -- Specify normalization set, mostly useful when working with PDFS; NumIntConfig(const RooNumIntConfig&) -- Use given configuration for any numeric integration, if necessary; Range(const char* name) -- Integrate only over given range. Multiple ranges may be specified; by passing multiple Range() arguments. RooAbsReal* createIntegral(const RooArgSet& iset, const RooArgSet* nset = 0, const RooNumIntConfig* cfg = 0, const char* rangeName = 0) const; Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. If nset is specified the integrand is request; to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified; the integral is performed over the named range, otherwise it is performed over the domain of each; integrated observable. If cfg is specified it will",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsReal.html:36101,config,configuration,36101,root/html528/RooAbsReal.html,https://root.cern,https://root.cern/root/html528/RooAbsReal.html,9,['config'],['configuration']
Modifiability,"meters are now data members arrays with; 27 a dynamic dimension such that one can fit very large problems; 28 by simply initialising the TMinuit constructor with the maximum; 29 number of parameters.; 30 ; 31 - The include file Minuit.h has been commented as much as possible; 32 using existing comments in the code or the printed documentation; 33 ; 34 - The original Minuit subroutines are now member functions.; 35 ; 36 - Constructors and destructor have been added.; 37 ; 38 - Instead of passing the FCN function in the argument; 39 list, the addresses of this function is stored as pointer; 40 in the data members of the class. This is by far more elegant; 41 and flexible in an interactive environment.; 42 The member function SetFCN can be used to define this pointer.; 43 ; 44 - The ROOT static function Printf is provided to replace all; 45 format statements and to print on currently defined output file.; 46 - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; 47 used inside the FCN function to set/get a referenced object; 48 instead of using global variables.; 49 ; 50 ; 51## Basic concepts of MINUIT; 52 ; 53The [MINUIT](https://root.cern/download/minuit.pdf); 54package acts on a multiparameter Fortran function to which one; 55must give the generic name <TT>FCN</TT>. In the ROOT implementation,; 56the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; 57when an Histogram.Fit command is invoked.; 58The value of <TT>FCN</TT> will in general depend on one; 59or more variable parameters.; 60 ; 61To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); 62the Fit function defines the Minuit fitting function as being H1FitChisquare; 63or H1FitLikelihood depending on the options selected.; 64H1FitChisquare; 65calculates the chisquare between the user fitting function (gaussian, polynomial,; 66user defined,etc) and the data for given values of the parameters.; 67It is the task of MINUIT to find those values of the par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:2218,variab,variables,2218,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,"meters of the external input p.d.f ; Implements RooAbsCachedReal.; Definition at line 178 of file RooCachedReal.cxx. ◆ cacheSource(). bool RooCachedReal::cacheSource ; (; ); const. inline . Definition at line 42 of file RooCachedReal.h. ◆ Class(). static TClass * RooCachedReal::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooCachedReal::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooCachedReal::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 72 of file RooCachedReal.h. ◆ clone(). TObject * RooCachedReal::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 28 of file RooCachedReal.h. ◆ createCache(). RooAbsCachedReal::FuncCacheElem * RooCachedReal::createCache ; (; const RooArgSet * ; nset); const. overrideprotectedvirtual . Interface function to create an internal cache object that represent each cached function configuration. ; This interface allows to create and return a class derived from RooAbsCachedReal::FuncCacheElem so that a derived class fillCacheObject implementation can utilize extra functionality defined in such a derived cache class ; Reimplemented from RooAbsCachedReal.; Definition at line 103 of file RooCachedReal.cxx. ◆ DeclFileName(). static const char * RooCachedReal::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 72 of file RooCachedReal.h. ◆ evaluate(). double RooCachedReal::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Dummy evaluate, it is never called. ; Implements RooAbsReal.; Definition at line 55 of file RooCachedReal.h. ◆ fillCacheObject(). void RooCachedReal::fillCacheObject ; (; RooAbsCachedReal::FuncCacheElem & ; cache); const. overrideprotectedvirtual . Update contents of cache histogram by resampling the input function. ; Implements RooAbsCachedRea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:66886,config,configuration,66886,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['config'],['configuration']
Modifiability,"meters:. - txvec - event vector of variables, transformed into foam; coordinates [0,1]. The size of txvec can be smaller than the; dimension of the foam. Return value:. - vector of cells, that fit txvec. std::vector<TMVA::PDEFoamCell*> FindCells(const std::map<Int_t, Float_t> &txvec); Find all cells, that contain the coordinates specified in txvec.; The key in 'txvec' is the dimension, and the corresponding value; is the coordinate. Note, that not all coordinates have to be; specified in txvec. Parameters:. - txvec - map of coordinates (transformed into foam coordinates; [0,1]). Return value:. - vector of cells, that fit txvec. TH1D* Draw1Dim(TMVA::ECellValue cell_value, Int_t nbin, TMVA::PDEFoamKernelBase* kernel = __null); Draws 1-dimensional foam (= histogram). Parameters:. - cell_value - the cell value to draw. - nbin - number of bins of result histogram. - kernel - a PDEFoam kernel. TH2D* Project2(Int_t idim1, Int_t idim2, TMVA::ECellValue cell_value = kValue, TMVA::PDEFoamKernelBase* kernel = __null, UInt_t nbin = 50); Project foam variable idim1 and variable idim2 to histogram. Parameters:. - idim1, idim2 - dimensions to project to. - cell_value - the cell value to draw. - kernel - a PDEFoam kernel (optional). If NULL is given, the; kernel is ignored and the pure cell values are; plotted. - nbin - number of bins in x and y direction of result histogram; (optional, default is 50). Returns:; a 2-dimensional histogram. Float_t GetCellValue(const PDEFoamCell* cell, ECellValue cv); Returns the cell value of 'cell' corresponding to the given; option 'cv'. This function should be overridden by the subclass; in order to specify which cell elements to return for a given; cell value 'cv'. By default kValue returns cell element 0, and; kValueError returns cell element 1. Double_t GetCellElement(const TMVA::PDEFoamCell* cell, UInt_t i) const; Returns cell element i of cell 'cell'. If the cell has no; elements or the index 'i' is out of range, than 0 is returned. void SetC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoam.html:20113,variab,variable,20113,root/html602/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoam.html,8,['variab'],['variable']
Modifiability,"meters; float fY; //y position in centimeters; public:; TMyClass() { fX = fY = -1; }; virtual void Print() const;; void SetX(float x) { fX = x; }; void SetY(float y) { fY = y; }; };; void TMyClass::Print() const // parent print method; {; cout << ""fX = "" << fX << "", fY = "" << fY << endl;; }; class TChild : public TMyClass {; public:; void Print() const;; };; void TChild::Print() const // child print metod; {; cout << ""This is TChild::Print()"" << endl;; TMyClass::Print();; }; To execute script4.C do:; root[] .L script4.C; root[] TMyClass *a = new TChild; root[] a->Print(); This is TChild::Print(); fX = -1, fY = -1; root[] a->SetX(10); root[] a->SetY(12); root[] a->Print(); This is TChild::Print(); fX = 10, fY = 12; root[] .class TMyClass; =====================================================; class TMyClass; size=0x8 FILE:script4.C LINE:3; List of base class-----------------------------------; List of member variable------------------------------; Defined in TMyClass; 0x0 private: float fX; 0x4 private: float fY; List of member function------------------------------; Defined in TMyClass; filename line:size busy function type and name; script4.C 16:5 0 public: class TMyClass TMyClass(void);; script4.C 22:4 0 public: void Print(void);; script4.C 12:1 0 public: void SetX(float x);; script4.C 13:1 0 public: void SetY(float y);; root[] .q; As you can see, an interpreted class behaves just like a compiled class. See “Adding a Class” for ways how to add a class with a shared library and with ACLiC.; 7.6 Inspecting Objects; An object of a class inheriting from TObject can be inspected, with the Inspect() method. The TObject::Inspect method creates a window listing the current values of the objects members. For example, the next picture is of TFile.; root[] TFile f(""staff.root""); root[] f.Inspect(); You can see the pointers are in red and can be clicked on to follow the pointer to the object. If you clicked on fList, the list of objects in memory and there were none, no new ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:280279,variab,variable,280279,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"meters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut string expression can be used to select the events to be plotted.; The cut specification may refer to any variable contained in the data set. The drawOptions are passed to the TH1::Draw() method. RooPlot* plotAsymOn(RooPlot* frame, const RooAbsCategoryLValue& asymCat, RooAbsData::PlotOpt o) const; Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ),; where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1; as function of the frames variable. The asymmetry category 'asymCat' must; have exactly 2 (or 3) states defined with index values +1,-1 (and 0). The plot range and the number of plot bins is determined by the parameters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut string expression can be used to select the events to be plotted.; The cut specification may refer to any variable contained in the data set. The drawOptions are passed to the TH1::Draw() method. RooPlot* plotEffOn(RooPlot* frame, const RooAbsCategoryLValue& effCat, RooAbsData::PlotOpt o) const; Create and fill a histogram with the effiency N[1] / ( N[1] + N[0] ),; where N(1/0) is the number of data points with effCat=1 and effCat=0; as function of the frames variable. The efficiency category 'effCat' must; have exactly 2 +1 and 0. The plot range and the number of plot bins is determined by the parameters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut string expression can be used to select the events to be plotted.; The cut specification may refer to any variable contained in the data set. The drawOptions are passed to the TH1::Draw() method. Roo1DTable* table(const RooAbsCategory& cat, const char* cuts = """", const char* opts = """") const; Create and fill a 1-dimensional table for given category column; This functions is the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsData.html:32905,variab,variable,32905,root/html528/RooAbsData.html,https://root.cern,https://root.cern/root/html528/RooAbsData.html,9,['variab'],['variable']
Modifiability,"meters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut string expression can be used to select the events to be plotted.; The cut specification may refer to any variable contained in the data set. The drawOptions are passed to the TH1::Draw() method. RooPlot* plotAsymOn(RooPlot* frame, const RooAbsCategoryLValue& asymCat, RooAbsData::PlotOpt o) const; Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ),; where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1; as function of the frames variable. The asymmetry category 'asymCat' must; have exactly 2 (or 3) states defined with index values +1,-1 (and 0). The plot range and the number of plot bins is determined by the parameters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut string expression can be used to select the events to be plotted.; The cut specification may refer to any variable contained in the data set. The drawOptions are passed to the TH1::Draw() method. RooPlot* plotEffOn(RooPlot* frame, const RooAbsCategoryLValue& effCat, RooAbsData::PlotOpt o) const; Create and fill a histogram with the effiency N[1] / ( N[1] + N[0] ),; where N(1/0) is the number of data points with effCat=1 and effCat=0; as function of the frames variable. The efficiency category 'effCat' must; have exactly 2 +1 and 0. The plot range and the number of plot bins is determined by the parameters; of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()). The optional cut string expression can be used to select the events to be plotted.; The cut specification may refer to any variable contained in the data set. The drawOptions are passed to the TH1::Draw() method. Roo1DTable* table(const RooAbsCategory& cat, const char* cuts, const char* /*opts*/); Create and fill a 1-dimensional table for given category column; This functions is the equivalent o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsData.html:32763,variab,variable,32763,root/html526/RooAbsData.html,https://root.cern,https://root.cern/root/html526/RooAbsData.html,1,['variab'],['variable']
Modifiability,"meters; vector<Double_t>TF1::fParMinArray of lower limits of the fNpar parameters; TF1Parameters*TF1::fParamsPointer to Function parameters object (exusts only for not-formula functions); TObject*TF1::fParent!Parent object hooking this function (if one); vector<Double_t>TF1::fSaveArray of fNsave function values; TStringTNamed::fTitleobject title; Int_tTF1::fType(=0 for standard functions, 1 if pointer to function); Double_tTF1::fXmaxUpper bounds for the range; Double_tTF1::fXminLower bounds for the range; Double_tfYmaxUpper bound for the range in y; Double_tfYminLower bound for the range in y; static Bool_tTF1::fgAbsValueuse absolute value of function when computing integral; static Bool_tTF1::fgAddToGlobListTrue if we want to register the function in the global list; static TF1*TF1::fgCurrentpointer to current function being processed; static Bool_tTF1::fgRejectPointTrue if point must be rejected in a fit; static TF1::(anonymous)TF1::kNotGlobal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TF2(); F2 default constructor*-*-*-*-*-*-; *-* ======================. TF2(const char* name, const char* formula, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1); F2 constructor using a formula definition. See TFormula constructor for explanation of the formula syntax. if formula has the form ""fffffff;xxxx;yyyy"", it is assumed that; the formula string is ""fffffff"" and ""xxxx"" and ""yyyy"" are the; titles for the X and Y axis respectively. TF2(const char *name, Double_t (*fcn)(Double_t *, Double_t *), Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Int_t npar, Int_t ndim); -*-*F2 constructor using a pointer to a compiled function; *-* =====================================================; -; *-* npar is the number of free parameters used by the function; -; *-* This constructor creates a function of type C when invoked; *-* with the normal C++ compiler.; -; *-* WARNING! A function created with this c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF2.html:21029,Inherit,Inheritance,21029,root/html604/TF2.html,https://root.cern,https://root.cern/root/html604/TF2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"metersvoid SetParameters(const Double_t *params)Set a vector of parameters value.Definition TFormula.cxx:2970; TFormula::fSavedInputFormulastd::string fSavedInputFormula! Unique name used to defined the function and used in the global map (need to be saved in case of la...Definition TFormula.h:102; TFormula::IsValidBool_t IsValid() constDefinition TFormula.h:271; TFormula::ReplaceAllNamesvoid ReplaceAllNames(TString &formula, std::map< TString, TString > &substitutions)Definition TFormula.cxx:405; TFormula::IsDefaultVariableNamestatic Bool_t IsDefaultVariableName(const TString &name)Definition TFormula.cxx:312; TFormula::FillParametrizedFunctionsvoid FillParametrizedFunctions(std::map< std::pair< TString, Int_t >, std::pair< TString, TString > > &functions)Fill map with parametrized functions.Definition TFormula.cxx:2417; TFormula::EvalParDouble_t EvalPar(const Double_t *x, const Double_t *params=nullptr) constDefinition TFormula.cxx:3078; TFormula::AddVariablesvoid AddVariables(const TString *vars, const Int_t size)Adds multiple variables.Definition TFormula.cxx:2602; TFormula::GetVarNumberInt_t GetVarNumber(const char *name) constReturns variable number (positon in array) given its name.Definition TFormula.cxx:2699; TFormula::fClingVariablesstd::vector< Double_t > fClingVariables! Cached variablesDefinition TFormula.h:94; TFormula::fMethodstd::unique_ptr< TMethodCall > fMethod! Pointer to methodcallDefinition TFormula.h:100; TFormula::fFormulaTString fFormulaString representing the formula expression.Definition TFormula.h:148; TFormula::IsScientificNotationstatic Bool_t IsScientificNotation(const TString &formula, int ipos)Definition TFormula.cxx:318; TFormula::fGradFuncPtrCallFuncSignature fGradFuncPtr! Function pointer, owned by the JIT.Definition TFormula.h:108; TFormula::fClingParametersstd::vector< Double_t > fClingParametersParameter values.Definition TFormula.h:95; TFormula::SetParametervoid SetParameter(const char *name, Double_t value)Sets parameter value",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:161241,variab,variables,161241,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variables']
Modifiability,"mething"");; One can find example of command interface usage in tutorials/http/httpcontrol.C macro.; 1.5 Customize user interface; JSROOT is used to implement UI for the THttpServer. Default webpage shows list of registered objects on the left side and drawing area on the right side - see example. JSROOT allows to configure different parameters via URL - like monitoring interval or name of displayed items item=Files/job1.root/hpxpy&opt=colz&monitoring=1000.; Some of such parameters can be configured already on the server:; serv->SetItemField(""/"", ""_monitoring"", ""1000""); // monitoring interval in ms; serv->SetItemField(""/"", ""_drawitem"", ""Files/job1.root/hpxpy""); // item to draw; serv->SetItemField(""/"", ""_drawopt"", ""colz"");; In such case URL parameters are not required - specified item will be displayed automatically when web page is opened. One also can configure to display several items at once. For that one also can configure layout of the drawing area:; serv->SetItemField(""/"", ""_layout"", ""grid2x2""); // layout for drawing area; serv->SetItemField(""/"", ""_drawitem"", ""[Files/job1.root/hpxpy,Files/job1.root/hpx]""); // items; serv->SetItemField(""/"", ""_drawopt"", ""[colz,hist]""); // options; One also can change appearance of hierarchy browser on the left side of the web page:; serv->SetItemField(""/"", ""_browser"", ""off""); // allowed ""fix"" (default), ""float"", ""no"", ""off""; serv->SetItemField(""/"", ""_toptitle"", ""Custom title""); // title of web page, shown when browser off; If necessary, one also can automatically open ROOT file when web page is opened:; serv->SetItemField(""/"", ""_loadfile"", ""currentdir/hsimple.root""); // name of ROOT file to load; 1.6 Configuring user access; By default, the http server is open for anonymous access. One could restrict the access to the server for authenticated users only. First of all, one should create a password file, using the htdigest utility.; [shell] htdigest -c .htdigest domain_name user_name; It is recommended not to use special symbols in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html:6834,config,configure,6834,root/htmldoc/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html,2,['config'],['configure']
Modifiability,"method = GetMethod(datasetname, methodTitle);; 1337 if (method); 1338 method->PrintHelpMessage();; 1339 else {; 1340 Log() << kWARNING << ""<PrintHelpMessage> Could not find classifier \"""" << methodTitle << ""\"" in list"" << Endl;; 1341 }; 1342 } else {; 1343 ; 1344 // no classifier specified, print all help messages; 1345 MVector *methods = fMethodsMap.find(datasetname)->second;; 1346 MVector::const_iterator itrMethod;; 1347 for (itrMethod = methods->begin(); itrMethod != methods->end(); ++itrMethod) {; 1348 MethodBase *method = dynamic_cast<MethodBase *>(*itrMethod);; 1349 if (method == 0); 1350 continue;; 1351 Log() << kINFO << ""Print help message for classifier: "" << method->GetMethodName() << Endl;; 1352 method->PrintHelpMessage();; 1353 }; 1354 }; 1355}; 1356 ; 1357////////////////////////////////////////////////////////////////////////////////; 1358/// Iterates over all MVA input variables and evaluates them.; 1359 ; 1360void TMVA::Factory::EvaluateAllVariables(DataLoader *loader, TString options); 1361{; 1362 Log() << kINFO << ""Evaluating all variables..."" << Endl;; 1363 Event::SetIsTraining(kFALSE);; 1364 ; 1365 for (UInt_t i = 0; i < loader->GetDataSetInfo().GetNVariables(); i++) {; 1366 TString s = loader->GetDataSetInfo().GetVariableInfo(i).GetLabel();; 1367 if (options.Contains(""V"")); 1368 s += "":V"";; 1369 this->BookMethod(loader, ""Variable"", s);; 1370 }; 1371}; 1372 ; 1373////////////////////////////////////////////////////////////////////////////////; 1374/// Iterates over all MVAs that have been booked, and calls their evaluation methods.; 1375 ; 1376void TMVA::Factory::EvaluateAllMethods(void); 1377{; 1378 Log() << kHEADER << gTools().Color(""bold"") << ""Evaluate all methods"" << gTools().Color(""reset"") << Endl;; 1379 ; 1380 // don't do anything if no method booked; 1381 if (fMethodsMap.empty()) {; 1382 Log() << kINFO << ""...nothing found to evaluate"" << Endl;; 1383 return;; 1384 }; 1385 std::map<TString, MVector *>::iterator itrMap;; 1386 ; 1387 for (itr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:55581,variab,variables,55581,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variables']
Modifiability,"method for 1D conditional p.d.f.s with categories; RooCategory_method2DSelects integration method for 2D p.d.f.s; RooCategory_method2DCatSelects integration method for 2D p.d.f.s with categories; RooCategory_method2DCondSelects integration method for 2D conditional p.d.f.s; RooCategory_method2DCondCatSelects integration method for 2D conditional p.d.f.s with categories; RooCategory_methodNDSelects integration method for ND p.d.f.s; RooCategory_methodNDCatSelects integration method for ND p.d.f.s with categories; RooCategory_methodNDCondSelects integration method for ND conditional p.d.f.s; RooCategory_methodNDCondCatSelects integration method for ND conditional p.d.f.s with categories; static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumGenConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumGenConfig(); Constructor. ~RooNumGenConfig(); Destructor. RooNumGenConfig(const RooNumGenConfig& other); Copy constructor. RooNumGenConfig& operator=(const RooNumGenConfig& other); Assignment operator from other RooNumGenConfig. RooCategory& method1D(Bool_t cond, Bool_t cat). RooCategory& method2D(Bool_t cond, Bool_t cat). RooCategory& methodND(Bool_t cond, Bool_t cat). const RooCategory& method1D(Bool_t cond, Bool_t cat) const. const RooCategory& method2D(Bool_t cond, Bool_t cat) const. const RooCategory& methodND(Bool_t cond, Bool_t cat) const. Bool_t addConfigSection(const RooAbsNumGenerator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Retu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumGenConfig.html:8480,config,configuration,8480,root/html528/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html528/RooNumGenConfig.html,10,['config'],['configuration']
Modifiability,"method for 1D conditional p.d.f.s with categories; RooCategory_method2DSelects integration method for 2D p.d.f.s; RooCategory_method2DCatSelects integration method for 2D p.d.f.s with categories; RooCategory_method2DCondSelects integration method for 2D conditional p.d.f.s; RooCategory_method2DCondCatSelects integration method for 2D conditional p.d.f.s with categories; RooCategory_methodNDSelects integration method for ND p.d.f.s; RooCategory_methodNDCatSelects integration method for ND p.d.f.s with categories; RooCategory_methodNDCondSelects integration method for ND conditional p.d.f.s; RooCategory_methodNDCondCatSelects integration method for ND conditional p.d.f.s with categories; static Int_tRooPrintable::_nameLength. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumGenConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumGenConfig(); Constructor. ~RooNumGenConfig(); Destructor. RooNumGenConfig(const RooNumGenConfig& other); Copy constructor. RooNumGenConfig& operator=(const RooNumGenConfig& other); Assignment operator from other RooNumGenConfig. RooCategory& method1D(Bool_t cond, Bool_t cat). RooCategory& method2D(Bool_t cond, Bool_t cat). RooCategory& methodND(Bool_t cond, Bool_t cat). const RooCategory& method1D(Bool_t cond, Bool_t cat). const RooCategory& method2D(Bool_t cond, Bool_t cat). const RooCategory& methodND(Bool_t cond, Bool_t cat). Bool_t addConfigSection(const RooAbsNumGenerator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumGenConfig.html:8494,config,configuration,8494,root/html526/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html526/RooNumGenConfig.html,1,['config'],['configuration']
Modifiability,"method for 2D integrals; RooCategory_method2DOpenSelects integration method for open ended 2D integrals; RooCategory_methodNDSelects integration method for ND integrals; RooCategory_methodNDOpenSelects integration method for open ended ND integrals; static Int_tRooPrintable::_nameLength; Bool_t_printEvalCounterFlag to control printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name) const; Retrieve configuration information specific to integrator with given name. void setEpsAbs(Double_t newEpsAbs); Set absolute convergence criteria (convergence if abs(Err)<newEpsAbs). RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void setEpsRel(Double_t newEpsRel); Set relative convergence criteria (convergence if abs(Err)/abs(Int)<newEpsRel). void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. RooCategory& method1D(); Return selected integration techniques fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumIntConfig.html:8704,config,configuration,8704,root/html528/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html528/RooNumIntConfig.html,10,['config'],['configuration']
Modifiability,"method for 2D integrals; RooCategory_method2DOpenSelects integration method for open ended 2D integrals; RooCategory_methodNDSelects integration method for ND integrals; RooCategory_methodNDOpenSelects integration method for open ended ND integrals; static Int_tRooPrintable::_nameLength; Bool_t_printEvalCounterFlag to control printing of function evaluation counter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name); Retrieve configuration information specific to integrator with given name. void setEpsAbs(Double_t newEpsAbs); Set absolute convergence criteria (convergence if abs(Err)<newEpsAbs). RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void setEpsRel(Double_t newEpsRel); Set relative convergence criteria (convergence if abs(Err)/abs(Int)<newEpsRel). void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. RooCategory& method1D(); Return selected integration techniques for 1,2,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumIntConfig.html:8718,config,configuration,8718,root/html526/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html526/RooNumIntConfig.html,1,['config'],['configuration']
Modifiability,"method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGNumberFormat; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGButton * fButtonDown;  Button for decreasing value. ;  ; Bool_t fButtonToNum;  Send button messages to parent rather than number entry field. ;  ; TGButton * fButtonUp;  Button for increasing value. ;  ; TGNumberEntryField * fNumericEntry;  Number text entry field. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntry.html:30368,inherit,inherited,30368,doc/master/classTGNumberEntry.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntry.html,2,['inherit'],['inherited']
Modifiability,"method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:22062,inherit,inherits,22062,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,11,['inherit'],['inherits']
Modifiability,"method to add columns from table of class, specified by TVirtualStreamerInfo structure ; Definition at line 1237 of file TSQLFile.cxx. ◆ ReadBuffer() [1/2]. Bool_t TSQLFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). inlinefinalvirtual . Read a buffer from the file. ; This is the basic low level read operation. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 237 of file TSQLFile.h. ◆ ReadBuffer() [2/2]. Bool_t TSQLFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). inlinefinalvirtual . Read a buffer from the file at the offset 'pos' in the file. ; Returns kTRUE in case of failure. Compared to ReadBuffer(char*, Int_t), this routine does not change the cursor on the physical file representation (fD) if the data is in this TFile's cache. ; Reimplemented from TFile.; Definition at line 238 of file TSQLFile.h. ◆ ReadConfigurations(). Bool_t TSQLFile::ReadConfigurations ; (; ). protected . read table configurations as special table ; Definition at line 1054 of file TSQLFile.cxx. ◆ ReadFree(). void TSQLFile::ReadFree ; (; ). inlinefinalvirtual . Read the FREE linked list. ; Every file has a linked list (fFree) of free segments. This linked list has been written on the file via WriteFree as a single data record. ; Reimplemented from TFile.; Definition at line 239 of file TSQLFile.h. ◆ ReadSpecialObject(). TObject * TSQLFile::ReadSpecialObject ; (; Long64_t ; keyid, . TObject * ; obj = nullptr . ). protected . Read data of special kind of objects. ; Definition at line 851 of file TSQLFile.cxx. ◆ ReadSQLClassInfos(). void TSQLFile::ReadSQLClassInfos ; (; ). protected . Read all class infos from IdsTable. ; Definition at line 1911 of file TSQLFile.cxx. ◆ Recover(). Int_t TSQLFile::Recover ; (; ). inlinefinalvirtual . Attempt to recover file if not correctly closed. ; The function returns the number of keys that have been recovered. If no keys can be recovered, the file will be declared Zombie by the calling function. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:83619,config,configurations,83619,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['config'],['configurations']
Modifiability,"method's discriminating variableDefinition MethodBase.cxx:794; TMVA::MethodBase::IsConstructedFromWeightFileBool_t IsConstructedFromWeightFile() constDefinition MethodBase.h:540; TMVA::MethodBase::CheckSetupvirtual void CheckSetup()check may be overridden by derived class (sometimes, eg, fitters are used which can only be implement...Definition MethodBase.cxx:433; TMVA::MethodBoostClass for boosting a TMVA method.Definition MethodBoost.h:58; TMVA::MethodCategoryClass for categorizing the phase space.Definition MethodCategory.h:58; TMVA::MethodCompositeBaseVirtual base class for combining several TMVA method.Definition MethodCompositeBase.h:50; TMVA::MethodCrossValidationDefinition MethodCrossValidation.h:38; TMVA::MethodCutsMultivariate optimisation of signal efficiency for given background efficiency, applying rectangular ...Definition MethodCuts.h:61; TMVA::PDFPDF wrapper for histograms; uses user-defined spline interpolation.Definition PDF.h:63; TMVA::RankingRanking for variables in method (implementation)Definition Ranking.h:48; TMVA::ResultsClass that is the base-class for a vector of result.Definition Results.h:57; TMVA::RootFinderRoot finding using Brents algorithm (translated from CERNLIB function RZERO)Definition RootFinder.h:48; TMVA::TSpline1Linear interpolation of TGraph.Definition TSpline1.h:43; TMVA::TrainingHistoryTracking data from training.Definition TrainingHistory.h:31; TMVA::TransformationHandlerClass that contains all the data information.Definition TransformationHandler.h:56; TMVA::TransformationHandler::Transformconst Event * Transform(const Event *) constthe transformationDefinition TransformationHandler.cxx:152; TMVA::TransformationHandler::GetRMSDouble_t GetRMS(Int_t ivar, Int_t cls=-1) constDefinition TransformationHandler.cxx:955; TMVA::TransformationHandler::GetMeanDouble_t GetMean(Int_t ivar, Int_t cls=-1) constDefinition TransformationHandler.cxx:936; TMVA::TransformationHandler::GetMinDouble_t GetMin(Int_t ivar, Int_t cls=-1) constDef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:67782,variab,variables,67782,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['variab'],['variables']
Modifiability,"method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:6901,inherit,inheritance,6901,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['inherit'],['inheritance']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetIndex() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGeoDecayChannel&operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoDecayChannel.html:2939,Inherit,InheritsFrom,2939,root/html532/TGeoDecayChannel.html,https://root.cern,https://root.cern/root/html532/TGeoDecayChannel.html,2,['Inherit'],['InheritsFrom']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetIndex() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGeoDecayChannel&operator=(const TGeoDecayChannel& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoDecayChannel.html:2788,Inherit,InheritsFrom,2788,root/html602/TGeoDecayChannel.html,https://root.cern,https://root.cern/root/html602/TGeoDecayChannel.html,2,['Inherit'],['InheritsFrom']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const Text_t*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tgetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCatType.html:2849,Inherit,InheritsFrom,2849,root/html534/RooCatType.html,https://root.cern,https://root.cern/root/html534/RooCatType.html,1,['Inherit'],['InheritsFrom']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const Text_t*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tgetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCatType.html:2755,Inherit,InheritsFrom,2755,root/html602/RooCatType.html,https://root.cern,https://root.cern/root/html602/RooCatType.html,2,['Inherit'],['InheritsFrom']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const long long&GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsConst() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParameter_Long64_t_.html:2404,Inherit,InheritsFrom,2404,root/html534/TParameter_Long64_t_.html,https://root.cern,https://root.cern/root/html534/TParameter_Long64_t_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const long long&GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tHash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TParameter<long ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParameter_Long64_t_.html:2404,Inherit,InheritsFrom,2404,root/html532/TParameter_Long64_t_.html,https://root.cern,https://root.cern/root/html532/TParameter_Long64_t_.html,1,['Inherit'],['InheritsFrom']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocDirective.html:3391,Inherit,InheritsFrom,3391,root/html532/TDocDirective.html,https://root.cern,https://root.cern/root/html532/TDocDirective.html,6,['Inherit'],['InheritsFrom']
Modifiability,"method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocDirective.html:3391,Inherit,InheritsFrom,3391,root/html602/TDocDirective.html,https://root.cern,https://root.cern/root/html602/TDocDirective.html,6,['Inherit'],['InheritsFrom']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void Init (void);  common initialisation with defaults for the D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:25170,inherit,inherited,25170,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,5,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Double_t CalculateMVAError ();  Calculate the error on the Mva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html:25029,inherit,inherited,25029,doc/master/classTMVA_1_1MethodPDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html,5,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t DataInterface (Double_t *, Double_t *, Int_t *, Int_t *,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html:23314,inherit,inherited,23314,doc/master/classTMVA_1_1MethodCFMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html,5,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual void AddWeightsXMLTo (void *parent) const =0;  ; void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RMethodBase.html:21456,inherit,inherited,21456,doc/master/classTMVA_1_1RMethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RMethodBase.html,5,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DeclareCompatibilityOptions ();  Options that are used ON",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:27382,inherit,inherited,27382,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,10,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DeclareCompatibilityOptions ();  options that are used ON",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:24562,inherit,inherited,24562,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,5,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DeclareOptions ()=0;  ; MethodBase * GetCurrentMethod ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCompositeBase.html:22138,inherit,inherited,22138,doc/master/classTMVA_1_1MethodCompositeBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCompositeBase.html,5,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void GetHelpMessage () const;  ; virtual std::vector< Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDL.html:23746,inherit,inherited,23746,doc/master/classTMVA_1_1MethodDL.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDL.html,5,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void GetHelpMessage () const;  get help message text ;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html:21789,inherit,inherited,21789,doc/master/classTMVA_1_1MethodBayesClassifier.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html,40,['inherit'],['inherited']
Modifiability,"method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TObjArray * fNetwork;  ;  Public Attributes inherited from TMVA::Method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:23790,inherit,inherited,23790,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,5,['inherit'],['inherited']
Modifiability,"method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; RooDataSet*fSData; RooArgListfSWeightVars; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~SPlot(). SPlot(); Default constructor. SPlot(const char* name, const char* title). SPlot(const char* name, const char* title, const RooDataSet& data); Constructor from a RooDataSet; No sWeighted variables are present. SPlot(const RooStats::SPlot& other); Copy Constructor from another SPlot. SPlot(const char* name, const char* title, RooDataSet& data, RooAbsPdf* pdf, const RooArgList& yieldsList, const RooArgSet& projDeps = RooArgSet(), bool includeWeights = kTRUE, bool copyDataSet = kFALSE, const char* newName = """"). RooDataSet* SetSData(RooDataSet* data). RooDataSet* GetSDataSet() const. Double_t GetSWeight(Int_t numEvent, const char* sVariable) const. Double_t GetSumOfEventSWeight(Int_t numEvent) const. Double_t GetYieldFromSWeight(const char* sVariable) const. RooArgList GetSWeightVars() const. Int_t GetNumSWeightVars() const; Return the number of SWeights; In other words, return the number of; species that we are trying to extract. void AddSWeight(RooAbsPdf* pdf, const RooArgList& yieldsTmp, const RooArgSet& projDeps = RooArgSet(), bool includeWeights = kTRUE). » Author: Kyle Cranmer 21/07/2008 » Copyright (C) 1995-2008, Rene Br",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__SPlot.html:7337,variab,variables,7337,root/html526/RooStats__SPlot.html,https://root.cern,https://root.cern/root/html526/RooStats__SPlot.html,3,['variab'],['variables']
Modifiability,"method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. ROOT::TFriendProxyDescriptor&operator=(const ROOT::TFriendProxyDescriptor& b); ROOT::TFriendProxyDescriptorTFriendProxyDescriptor(const ROOT::TFriendProxyDescriptor& b). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfDuplicate; Int_tfIndex; TListfListOfTopProxies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFriendProxyDescriptor(const char* treename, const char* aliasname, Int_t index); Constructor. Bool_t IsEquivalent(const ROOT::TFriendProxyDescriptor* other); Return true if this descriptor and the other are equivalent (describe the; same entity). void OutputClassDecl(FILE* hf, int offset, UInt_t maxVarname); Print the declaration needed for this descriptor. void OutputDecl(FILE* hf, int offset, UInt_t maxVarname); Print the declaration needed for this descriptor. TFriendProxyDescriptor(const ROOT::TFriendProxyDescriptor& b). TFriendProxyDescriptor& operator=(const ROOT::TFriendProxyDescriptor& b). Int_t GetIndex() const; { return fIndex; }. TList * GetListOfTopProxies(); { return &fListOfTopProxies; }. Bool_t IsDuplicate(); { return fDuplicate; }. void SetDuplicate(); { fDuplicate = kTRUE; }. » Author: Philippe Canal 06/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: rooeeplayer:$Id$ » Last ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TFriendProxyDescriptor.html:6281,Inherit,Inheritance,6281,root/html534/ROOT__TFriendProxyDescriptor.html,https://root.cern,https://root.cern/root/html534/ROOT__TFriendProxyDescriptor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. ROOT::TFriendProxyDescriptor&operator=(const ROOT::TFriendProxyDescriptor& b); ROOT::TFriendProxyDescriptorTFriendProxyDescriptor(const ROOT::TFriendProxyDescriptor& b). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_tfDuplicate; Int_tfIndex; TListfListOfTopProxies. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFriendProxyDescriptor(const char* treename, const char* aliasname, Int_t index); Constructor. Bool_t IsEquivalent(const ROOT::TFriendProxyDescriptor* other); Return true if this descriptor and the other are equivalent (describe the; same entity). void OutputClassDecl(FILE* hf, int offset, UInt_t maxVarname); Print the declaration needed for this descriptor. void OutputDecl(FILE* hf, int offset, UInt_t maxVarname); Print the declaration needed for this descriptor. TFriendProxyDescriptor(const ROOT::TFriendProxyDescriptor& b). TFriendProxyDescriptor& operator=(const ROOT::TFriendProxyDescriptor& b). Int_t GetIndex() const; { return fIndex; }. TList * GetListOfTopProxies(); { return &fListOfTopProxies; }. Bool_t IsDuplicate(); { return fDuplicate; }. void SetDuplicate(); { fDuplicate = kTRUE; }. » Author: Philippe Canal 06/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: rooeeplayer:$Id: TFriend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TFriendProxyDescriptor.html:6262,Inherit,Inheritance,6262,root/html532/ROOT__TFriendProxyDescriptor.html,https://root.cern,https://root.cern/root/html532/ROOT__TFriendProxyDescriptor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"method, const char* msgfmt) const; virtual Int_tfill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual const RooArgSet*getNative(Int_t index) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); virtual Int_tnumEntries() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooVectorDataStore.html:4366,Inherit,InheritsFrom,4366,root/html534/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html534/RooVectorDataStore.html,1,['Inherit'],['InheritsFrom']
Modifiability,"method, const char* msgfmt) const; virtual Int_tfill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual const RooArgSet*getNative(Int_t index) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; virtual voidloadValues(const RooAbsDataStore* tds, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual RooAbsDataStore*merge(const RooArgSet& allvars, list<RooAbsDataStore*> dstoreList); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); virtual Int_tnumEntries() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooVectorDataStore.html:3742,Inherit,InheritsFrom,3742,root/html602/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html602/RooVectorDataStore.html,2,['Inherit'],['InheritsFrom']
Modifiability,"method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TLDAPAttribute*GetAttribute() const; TLDAPAttribute*GetAttribute(const char* name) const; Int_tGetCount() const; const char*GetDn() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TList*GetReferrals() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReferral() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLDAPEntry.html:2604,Inherit,InheritsFrom,2604,root/html532/TLDAPEntry.html,https://root.cern,https://root.cern/root/html532/TLDAPEntry.html,1,['Inherit'],['InheritsFrom']
Modifiability,"method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMap*GetMapOfActiveNodes() const; TMap*GetMapOfNodes() const; Int_tGetMaxWrksPerNode() const; Int_tGetMinWrksPerNode() const; Int_tGetNActives() const; virtual const char*TObject::GetName() const; Int_tGetNCores() const; Int_tGetNNodes() const; Int_tGetNWorkersCluster() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofNodes.html:2652,Inherit,InheritsFrom,2652,root/html534/TProofNodes.html,https://root.cern,https://root.cern/root/html534/TProofNodes.html,1,['Inherit'],['InheritsFrom']
Modifiability,"method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMap*GetMapOfActiveNodes() const; TMap*GetMapOfNodes() const; Int_tGetMaxWrksPerNode() const; Int_tGetMinWrksPerNode() const; Int_tGetNActives() const; virtual const char*TObject::GetName() const; Int_tGetNCores() const; Int_tGetNNodes() const; Int_tGetNWorkersCluster() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofNodes.html:2591,Inherit,InheritsFrom,2591,root/html602/TProofNodes.html,https://root.cern,https://root.cern/root/html602/TProofNodes.html,2,['Inherit'],['InheritsFrom']
Modifiability,"method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsHorizontal(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsVertical(); Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLine.html:2803,Inherit,InheritsFrom,2803,root/html532/TLine.html,https://root.cern,https://root.cern/root/html532/TLine.html,1,['Inherit'],['InheritsFrom']
Modifiability,"method:. Double_t <classname>::MDF(Double_t *x). which does the same as TMultiDimFit::Eval. Please refer to this; method. Further, the public static members:. Int_t <classname>::fgNVariables; Int_t <classname>::fgNCoefficients; Double_t <classname>::fgDMean; Double_t <classname>::fgXMean[] //[fgNVariables]; Double_t <classname>::fgXMin[] //[fgNVariables]; Double_t <classname>::fgXMax[] //[fgNVariables]; Double_t <classname>::fgCoefficient[] //[fgNCoeffficents]; Int_t <classname>::fgPower[] //[fgNCoeffficents*fgNVariables]. are initialized, and assumed to exist. The class declaration is; assumed to be in <classname>.h and assumed to be provided by the; user. See TMultiDimFit::MakeRealCode for a list of options. The minimal class definition is:. class <classname> {; public:; Int_t <classname>::fgNVariables; // Number of variables; Int_t <classname>::fgNCoefficients; // Number of terms; Double_t <classname>::fgDMean; // Mean from training sample; Double_t <classname>::fgXMean[]; // Mean from training sample; Double_t <classname>::fgXMin[]; // Min from training sample; Double_t <classname>::fgXMax[]; // Max from training sample; Double_t <classname>::fgCoefficient[]; // Coefficients; Int_t <classname>::fgPower[]; // Function powers. Double_t Eval(Double_t *x);; };. Whether the method <classname>::Eval should be static or not, is; up to the user. void MakeNormalized(); PRIVATE METHOD:; Normalize data to the interval [-1;1]. This is needed for the; classes method to work. void MakeParameterization(); PRIVATE METHOD:; Find the parameterization over the training sample. A full account; of the algorithm is given in the; class description. void MakeRealCode(const char* filename, const char* classname, Option_t* option = """"); PRIVATE METHOD:; This is the method that actually generates the code for the; evaluation the parameterization on some point.; It's called by TMultiDimFit::MakeCode and TMultiDimFit::MakeMethod. The options are: NONE so far. void Print(Option_t* option = ""p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:31162,variab,variables,31162,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,10,['variab'],['variables']
Modifiability,"methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); voidTMVA::MethodANNBase::SetNeuronInputCalculator(TMVA::TNeuronInput* inputCalculator); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodANNBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodMLP.html:13303,Config,Configurable,13303,root/html534/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodMLP.html,1,['Config'],['Configurable']
Modifiability,"methodname); static voidDestroyInstance(); TStringGetMethodName(TMVA::Types::EMVA method) const; TMVA::Types::EMVAGetMethodType(const TString& method) const; static TMVA::Types&Instance(); TMVA::Types&operator=(const TMVA::Types&); TMVA::TypesTypes(const TMVA::Types&). private:. TMVA::MsgLogger&Log() const; TMVA::TypesTypes(). Data Members; public:. enum EMVA { kVariable; kCuts; kLikelihood; kPDERS; kHMatrix; kFisher; kKNN; kCFMlpANN; kTMlpANN; kBDT; kDT; kRuleFit; kSVM; kMLP; kBayesClassifier; kFDA; kBoost; kPDEFoam; kLD; kPlugins; kCategory; kMaxMethod; };; enum EVariableTransform { kIdentity; kDecorrelated; kNormalized; kPCA; kRearranged; kGauss; kUniform; kMaxVariableTransform; };; enum EAnalysisType { kClassification; kRegression; kMulticlass; kNoAnalysisType; kMaxAnalysisType; };; enum ESBType { kSignal; kBackground; kSBBoth; kMaxSBType; kTrueType; };; enum ETreeType { kTraining; kTesting; kMaxTreeType; kValidation; kTrainingOriginal; };; enum EBoostStage { kBoostProcBegin; kBeforeTraining; kBeforeBoosting; kAfterBoosting; kBoostProcEnd; };. private:. TMVA::MsgLogger*fLoggermessage logger; map<TString,TMVA::Types::EMVA>fStr2typetypes-to-text map; static TMVA::Types*fgTypesPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Types(); constructor. ~Types(); destructor. TMVA::Types& Instance(); the the single instance of ""Types"" if existin already, or create it (Signleton). void DestroyInstance(); ""destructor"" of the single instance. Bool_t AddTypeMapping(TMVA::Types::EMVA method, const TString& methodname). TString GetMethodName(TMVA::Types::EMVA method) const. Types::EMVA GetMethodType(const TString& method) const. Types(). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Types.html:1595,Inherit,Inheritance,1595,root/html534/TMVA__Types.html,https://root.cern,https://root.cern/root/html534/TMVA__Types.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"methods␛[0m; Factory : [dataset] : Create Transformation ""I"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""D"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""P"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""G"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; Factory : [dataset] : Create Transformation ""D"" with events from all classes.; : ; : Transformation, Variable selection : ; : Input : variable 'myvar1' <---> Output : variable 'myvar1'; : Input : variable 'myvar2' <---> Output : variable 'myvar2'; : Input : variable 'var3' <---> Output : variable 'var3'; : Input : variable 'var4' <---> Output : variable 'var4'; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : myvar1: -0.062775 1.7187 [ -9.3380 7.6931 ]; : myva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:10083,variab,variable,10083,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,8,['variab'],['variable']
Modifiability,"metricEquationGL&operator=(const TGLParametricEquationGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; TGLPlotCoordinatesTGLPlot3D::fCoord; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TGLParametricEquation*fM; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; TGLPlotPainter*TGLPlot3D::fPlotPainter; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLParametricEquationGL(); Constructor. ~TGLParametricEquationGL(); Destructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Setup bounding-box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render the object. TGLParametricEquationGL(const TGLParametricEquationGL& ). TGLParametricEquationGL& operator=(const TGLParametricEquationGL& ). Bool_t KeepDuringSmartRefresh() const; { return kFALSE; }. » Author: Matevz Tadel, Jun 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLParametricEquationGL.h 29526 2009-07-20 17:41:53Z matevz $ » Last generated: 2011-11-03 20:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLParametricEquationGL.html:4477,Inherit,Inheritance,4477,root/html532/TGLParametricEquationGL.html,https://root.cern,https://root.cern/root/html532/TGLParametricEquationGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mg_file fi;; 3356 time_t timestamp;; 3357 ; 3358 /* Unused, in the RELEASE build */; 3359 (void)func;; 3360 (void)line;; 3361 ; 3362#if defined(GCC_DIAGNOSTIC); 3363#pragma GCC diagnostic push; 3364#pragma GCC diagnostic ignored ""-Wformat-nonliteral""; 3365#endif; 3366 ; 3367 IGNORE_UNUSED_RESULT(vsnprintf_impl(buf, sizeof(buf), fmt, ap));; 3368 ; 3369#if defined(GCC_DIAGNOSTIC); 3370#pragma GCC diagnostic pop; 3371#endif; 3372 ; 3373 buf[sizeof(buf) - 1] = 0;; 3374 ; 3375 DEBUG_TRACE(""mg_cry called from %s:%u: %s"", func, line, buf);; 3376 ; 3377 if (!conn) {; 3378 puts(buf);; 3379 return;; 3380 }; 3381 ; 3382 /* Do not lock when getting the callback value, here and below.; 3383 * I suppose this is fine, since function cannot disappear in the; 3384 * same way string option can. */; 3385 if ((conn->phys_ctx->callbacks.log_message == NULL); 3386 || (conn->phys_ctx->callbacks.log_message(conn, buf) == 0)) {; 3387 ; 3388 if (conn->dom_ctx->config[ERROR_LOG_FILE] != NULL) {; 3389 if (mg_fopen(conn,; 3390 conn->dom_ctx->config[ERROR_LOG_FILE],; 3391 MG_FOPEN_MODE_APPEND,; 3392 &fi); 3393 == 0) {; 3394 fi.access.fp = NULL;; 3395 }; 3396 } else {; 3397 fi.access.fp = NULL;; 3398 }; 3399 ; 3400 if (fi.access.fp != NULL) {; 3401 flockfile(fi.access.fp);; 3402 timestamp = time(NULL);; 3403 ; 3404 sockaddr_to_string(src_addr, sizeof(src_addr), &conn->client.rsa);; 3405 fprintf(fi.access.fp,; 3406 ""[%010lu] [error] [client %s] "",; 3407 (unsigned long)timestamp,; 3408 src_addr);; 3409 ; 3410 if (conn->request_info.request_method != NULL) {; 3411 fprintf(fi.access.fp,; 3412 ""%s %s: "",; 3413 conn->request_info.request_method,; 3414 conn->request_info.request_uri; 3415 ? conn->request_info.request_uri; 3416 : """");; 3417 }; 3418 ; 3419 fprintf(fi.access.fp, ""%s"", buf);; 3420 fputc('\n', fi.access.fp);; 3421 fflush(fi.access.fp);; 3422 funlockfile(fi.access.fp);; 3423 (void)mg_fclose(&fi.access); /* Ignore errors. We can't call; 3424 * mg_cry here anyway ;-) */; 3425 }; 3426 }; 3427}; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:100893,config,config,100893,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['config'],['config']
Modifiability,"mg_file fi;; 3357 time_t timestamp;; 3358 ; 3359 /* Unused, in the RELEASE build */; 3360 (void)func;; 3361 (void)line;; 3362 ; 3363#if defined(GCC_DIAGNOSTIC); 3364#pragma GCC diagnostic push; 3365#pragma GCC diagnostic ignored ""-Wformat-nonliteral""; 3366#endif; 3367 ; 3368 IGNORE_UNUSED_RESULT(vsnprintf_impl(buf, sizeof(buf), fmt, ap));; 3369 ; 3370#if defined(GCC_DIAGNOSTIC); 3371#pragma GCC diagnostic pop; 3372#endif; 3373 ; 3374 buf[sizeof(buf) - 1] = 0;; 3375 ; 3376 DEBUG_TRACE(""mg_cry called from %s:%u: %s"", func, line, buf);; 3377 ; 3378 if (!conn) {; 3379 puts(buf);; 3380 return;; 3381 }; 3382 ; 3383 /* Do not lock when getting the callback value, here and below.; 3384 * I suppose this is fine, since function cannot disappear in the; 3385 * same way string option can. */; 3386 if ((conn->phys_ctx->callbacks.log_message == NULL); 3387 || (conn->phys_ctx->callbacks.log_message(conn, buf) == 0)) {; 3388 ; 3389 if (conn->dom_ctx->config[ERROR_LOG_FILE] != NULL) {; 3390 if (mg_fopen(conn,; 3391 conn->dom_ctx->config[ERROR_LOG_FILE],; 3392 MG_FOPEN_MODE_APPEND,; 3393 &fi); 3394 == 0) {; 3395 fi.access.fp = NULL;; 3396 }; 3397 } else {; 3398 fi.access.fp = NULL;; 3399 }; 3400 ; 3401 if (fi.access.fp != NULL) {; 3402 flockfile(fi.access.fp);; 3403 timestamp = time(NULL);; 3404 ; 3405 sockaddr_to_string(src_addr, sizeof(src_addr), &conn->client.rsa);; 3406 fprintf(fi.access.fp,; 3407 ""[%010lu] [error] [client %s] "",; 3408 (unsigned long)timestamp,; 3409 src_addr);; 3410 ; 3411 if (conn->request_info.request_method != NULL) {; 3412 fprintf(fi.access.fp,; 3413 ""%s %s: "",; 3414 conn->request_info.request_method,; 3415 conn->request_info.request_uri; 3416 ? conn->request_info.request_uri; 3417 : """");; 3418 }; 3419 ; 3420 fprintf(fi.access.fp, ""%s"", buf);; 3421 fputc('\n', fi.access.fp);; 3422 fflush(fi.access.fp);; 3423 funlockfile(fi.access.fp);; 3424 (void)mg_fclose(&fi.access); /* Ignore errors. We can't call; 3425 * mg_cry here anyway ;-) */; 3426 }; 3427 }; 3428}; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:100925,config,config,100925,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['config'],['config']
Modifiability,"mic ;  CTGLPlotPainterBase class for plot-painters that provide GL rendering of various 2D and 3D histograms, functions and parametric surfaces ;  CTGLPolyLineTo draw a 3D polyline in a GL window ;  CTGLPolyMarker;  CTGLPShapeObjWrap TGLPysicalShape into TObject so that it can be edited using GED ;  CTGLPShapeObjEditorGUI editor for TGLPShapeObj ;  CTGLPShapeRefBase class for references to TGLPysicalShape that need to be notified when the shape is destroyed ;  CTGLQuadricWrapper class for GLU quadric shape drawing object ;  CTGLRectViewport (pixel base) 2D rectangle class ;  CTGLRedrawTimer;  CTGLRnrCtxAggregates data for a given redering context as needed by various parts of the ROOT's OpenGL infrastructure ;  CTGLRotateManipRotate manipulator - attaches to physical shape and draws local axes widgets - rings drawn from attached physical center, in plane defined by axis ;  CTGLSAFrameStandalone GL Viewer GUI main frame ;  CTGLSAViewerThe top level standalone GL-viewer - created via plugin manager ;  CTGLScaleManipScale manipulator - attaches to physical shape and draws local axes widgets with box heads ;  ►CTGLSceneTGLScene provides management and rendering of ROOT's default 3D /object representation as logical and physical shapes ;  CDrawElement_t;  CTSceneInfo;  CTGLSceneBaseScene base-class – provides basic interface expected by the TGLViewer or its sub-classes: ;  CTGLSceneInfoBase class for extended scene context ;  CTGLScenePadImplements VirtualViewer3D interface and fills the base-class visualization structures from pad contents ;  CTGLSelectBufferEncapsulates OpenGL select buffer ;  CTGLSelectionBuffer;  CTGLSelectRecordStandard selection record including information about containing scene and details ob out selected object (TGLPhysicalShape*, TObject* or simply a void* for foreign scenes) ;  CTGLSelectRecordBase;  CTGLSphereImplements a native ROOT-GL sphere that can be rendered at different levels of detail ;  CTGLStopwatchStopwatch object for timing GL wor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:128004,plugin,plugin,128004,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['plugin'],['plugin']
Modifiability,"might be either a freshly allocated object or one that had already been allocated (and assumingly used). In the later case, the function Clear will be called and passed the value of 'clear_options'; Tests to see if the destructor has been called on the object. If so, or if the object has never been constructed the class constructor is called using New(). If not, return a pointer to the correct memory location. This explicitly to deal with TObject classes that allocate memory which will be reset (but not deallocated) in their Clear() functions. ; Definition at line 399 of file TClonesArray.cxx. ◆ DeclFileName(). static const char * TClonesArray::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 83 of file TClonesArray.h. ◆ Delete(). void TClonesArray::Delete ; (; Option_t * ; option = """"). overridevirtual . Clear the clones array. ; Use this routine when your objects allocate memory (e.g. objects inheriting from TNamed or containing TStrings allocate memory). If not you better use Clear() since if is faster. ; Implements TCollection.; Definition at line 452 of file TClonesArray.cxx. ◆ Expand(). void TClonesArray::Expand ; (; Int_t ; newSize). overridevirtual . Expand or shrink the array to newSize elements. ; Reimplemented from TObjArray.; Definition at line 480 of file TClonesArray.cxx. ◆ ExpandCreate(). void TClonesArray::ExpandCreate ; (; Int_t ; n). virtual . Expand or shrink the array to n elements and create the clone objects by calling their default ctor. ; If n is less than the current size the array is shrunk and the allocated space is freed. This routine is typically used to create a clonesarray into which one can directly copy object data without going via the ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly). ; Definition at line 514 of file TClonesArray.cxx. ◆ ExpandCreateFast(). void TClonesArray::ExpandCreateFast ; (; Int_t ; n). virtual . Expand or shrink the array to n elem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClonesArray.html:35964,inherit,inheriting,35964,doc/master/classTClonesArray.html,https://root.cern,https://root.cern/doc/master/classTClonesArray.html,1,['inherit'],['inheriting']
Modifiability,"might be empty. The internal representation of entry numbers in the blocks is described in the TEntryListBlock class description, and this representation might be changed by calling OptimizeStorage() function (when the list is filled via the Enter() function, this is done automatically, except for the last block). Individual entry lists can be merged (functions Merge() and Add()) to make an entry list for a TChain of corresponding TTrees. 2.; for a TChain (fLists data member is non-zero) It contains a TList of sub-lists (TEntryList objects, corresponding to each TTree) Trees and lists are matched by the TTree name and its file name (full path). All sub-lists are returned by the GetLists() function and individual lists are returned by GetEntryList() function. Such lists are no different from the lists for TTrees, described above. Definition at line 25 of file TEntryList.h. Public Types; enum  { kBlockSize = 64000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEntryList ();  default c-tor ;  ;  TEntryList (const char *name, const char *title);  c-tor with name and title ;  ;  TEntryList (const char *name, const char *title, const char *treename, const char *filename);  c-tor with name and title, which also sets the treename and the filename ;  ;  TEntryList (const char *name, const char *title, const TTree *tree);  constructor with name and title, which al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryList.html:7893,inherit,inherited,7893,doc/master/classTEntryList.html,https://root.cern,https://root.cern/doc/master/classTEntryList.html,1,['inherit'],['inherited']
Modifiability,"min () const;  ; TClass * IsA () const override;  ; double operator() (const Double_t *x, const Double_t *p) override;  Overload the parenthesis to add the functions. ;  ; TF1NormSum & operator= (const TF1NormSum &rhs);  Operator =. ;  ; void SetParameters (const Double_t *params) override;  Initialize array of all parameters. ;  ; void SetParameters (Double_t p0, Double_t p1, Double_t p2=0., Double_t p3=0., Double_t p4=0., Double_t p5=0., Double_t p6=0., Double_t p7=0., Double_t p8=0., Double_t p9=0., Double_t p10=0.);  Initialize array of all parameters. ;  ; void SetRange (Double_t a, Double_t b) override;  ; void SetScale (Double_t scale);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update () override;  Update the component functions of the normalized sum. ;  ;  Public Member Functions inherited from TF1AbsComposition;  ~TF1AbsComposition () override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1NormSum.html:2671,inherit,inherited,2671,doc/master/classTF1NormSum.html,https://root.cern,https://root.cern/doc/master/classTF1NormSum.html,2,['inherit'],['inherited']
Modifiability,"min, Double_t ymax, Int_t nbinsz, Double_t zmin, Double_t zmax) override;  Redefine x, y and z axis parameters. ;  ; void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins) override;  Redefine x, y and z axis parameters with variable bin sizes. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow. ;  ; void SetBuffer (Int_t buffersize, Option_t *opt="""") override;  Set the buffer size in units of 8 bytes (double). ;  ; virtual void SetErrorOption (Option_t *option="""");  Set option to compute profile3D errors. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH3D. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Sumw2 (Bool_t flag=kTRUE) override;  Create/Delete structure to store sum of squares of weights per bin This is needed to compute the correct statistical quantities of a profile filled with weights. ;  ;  Public Member Functions inherited from TH3D;  TH3D ();  Constructor. ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const TH3D &h3d);  Copy constructor. ;  ;  ~TH3D () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinConten",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:8817,inherit,inherited,8817,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['inherit'],['inherited']
Modifiability,"min2, Double_t rmax2);  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void ComputeNormalS (const Double_t *point, const Double_t *dir, Double_t *norm, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2);  ; static const char * DeclFileName ();  ; static Double_t DistFromInsideS (const Double_t *point, const Double_t *dir, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2);  ; static Double_t DistFromOutsideS (const Double_t *point, const Double_t *dir, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2);  ; static void DistToCone (const Double_t *point, const Double_t *dir, Double_t dz, Double_t r1, Double_t r2, Double_t &b, Double_t &delta);  ; static Double_t SafetyS (const Double_t *point, Bool_t in, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Int_t skipz=0);  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCone.html:15619,inherit,inherited,15619,doc/master/classTGeoCone.html,https://root.cern,https://root.cern/doc/master/classTGeoCone.html,2,['inherit'],['inherited']
Modifiability,"min;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . #include <TGeoElement.h>. Inheritance diagram for TGeoBatemanSol:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoBatemanSol() [1/4]. TGeoBatemanSol::TGeoBatemanSol ; (; ). inline . Definition at line 301 of file TGeoElement.h. ◆ TGeoBatemanSol() [2/4]. TGeoBatemanSol::TGeoBatemanSol ; (; TGeoElementRN * ; elem). Default ctor. ; Definition at line 1438 of file TGeoElement.cxx. ◆ TGeoBatemanSol() [3/4]. TGeoBatemanSol::TGeoBatemanSol ; (; const TObjArray * ; ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBatemanSol.html:16250,inherit,inherited,16250,doc/master/classTGeoBatemanSol.html,https://root.cern,https://root.cern/doc/master/classTGeoBatemanSol.html,1,['inherit'],['inherited']
Modifiability,"minal = 0;  ; RooListProxy _paramList;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html:55679,inherit,inherited,55679,doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html,1,['inherit'],['inherited']
Modifiability,minantDensity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationReLU. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTSparseDiag<float>. TMatrixTSparseRow<double>. TMatrixTSparseRow<float>. TMatrixTSub<double>. TMatrixTSub<float>. TMatrixTSym<double>. TMatrixTSym<float>. TM,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ClassHierarchy.html:79165,Variab,VariableGaussTransform,79165,root/html604/ClassHierarchy.html,https://root.cern,https://root.cern/root/html604/ClassHierarchy.html,1,['Variab'],['VariableGaussTransform']
Modifiability,"minate () override;  Called at the end of a loop on a TTree. ;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; virtual void Init (TTree *);  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ResetAbort ();  ; virtual void SetInputList (TList *input);  ; virtual void SetObject (TObject *obj);  ; virtual void SetOption (const char *option);  ; virtual void SetStatus (Long64_t status);  ; virtual void SlaveBegin (TTree *);  ; virtual void SlaveTerminate ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html:4877,inherit,inherited,4877,doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,2,['inherit'],['inherited']
Modifiability,"minating variables. A detail description of the formalism itself, called ; , is given in [1]. The method. The ; technique is developped in the above context of a maximum Likelihood method making use of discriminating variables.; One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. : the total number of events in the data sample,. : the number of species of events populating the data sample,. : the number of events expected on the average for the species,. : the value of the PDFs of the discriminating variables for the species and for event , . : the set of control variables which, by definition, do not appear in the expression of the Likelihood function . The extended log-Likelihood reads:. (1). From this expression, after maximization of with respect to the parameters, a weight can be computed for every event and each species, in order to obtain later the true distribution ; of variable . If is one of the ; species present in the data sample, the weight for this species is defined by:. (2). where . is the covariance matrix resulting from the Likelihood maximization.; This matrix can be used directly from the fit, but this is numerically; less accurate than the direct computation:. (3). The distribution of the control variable  obtained by histogramming the weighted events reproduces, on average, the true distribution ; . The class TSPlot allows to reconstruct the true distribution ; of a control variable  for each of the ; species from the sole knowledge of the PDFs of the discriminating variables . The plots obtained thanks to the TSPlot class are called ; . Some properties and checks. Beside reproducing the true distribution, ; bear remarkable properties:. Each -distribution is properly normalized:. (4). For any event:. (5). That is to say that, summing up the ; ; , one",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSPlot.html:2811,variab,variable,2811,root/html528/TSPlot.html,https://root.cern,https://root.cern/root/html528/TSPlot.html,6,['variab'],['variable']
Modifiability,"ming (Bool_t isTransient);  Error message in case of checksum/version mismatch. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; UInt_t & fBaseCheckSum;  ; TClass * fBaseClass;  checksum of the base class (used during memberwise streaming) ;  ; Int_t fBaseVersion;  ; ClassConvStreamerFunc_t fConvStreamerFunc;  Pointer to a wrapper around a custom streamer member function. ;  ; TString fErrorMsg;  Pointer to the current StreamerInfo for the baset class. ;  ; TClass * fNewBaseClass;  pointer to base class ;  ; ClassStreamerFunc_t fStreamerFunc;  pointer to new base class if renamed ;  ; TVirtualStreamerInfo * fStreamerInfo;  Pointer to a wrapper around a custom convertion streamer member function. ;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TStreamerBase (const TStreamerBase &)=delete;  ; TStreamerBase & operator= (const TStreamerBase &)=delete;  . Additional Inherited Members;  Public Types inherited from TStreamerElement; enum  EStatusBits { ;   kHasRange = (1ULL << ( 6 )); , kCache = (1ULL << ( ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBase.html:15357,inherit,inherited,15357,doc/master/classTStreamerBase.html,https://root.cern,https://root.cern/doc/master/classTStreamerBase.html,1,['inherit'],['inherited']
Modifiability,"minimization; RooRealProxy_nllInput -log(L) function; RooSetProxy_obsParameters of profile likelihood; RooArgSet_obsAbsMinObservable values at absolute minimum; TIterator*_oiter! Iterator of profile likelihood output parameter(s); RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxy_parMarginialized parameters of likelihood; RooArgSet_paramAbsMinParameter values at absolute minimum; map<string,bool>_paramFixedParameter constant status at last time of use; TIterator*_piter! Iterator over profile likelihood parameters to be minimized; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_t_startFromMinAlways start minimization for global minimum?; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooProfileLL.html:37680,config,configuration,37680,root/html602/RooProfileLL.html,https://root.cern,https://root.cern/root/html602/RooProfileLL.html,4,['config'],['configuration']
Modifiability,"minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fValues.size(); }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total number of free parameters. { return fObjFunc->NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. const ROOT::Math::IMultiGradFunction * ObjFunction() const; method of only GSL minimizer (not inherited from interface); return pointer to used objective gradient function. { return fObjFunc; }. » Author: L. Moneta Wed Oct 18 11:48:00 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLMinimizer.h 37448 2010-12-09 20:20:56Z moneta $ » Last generated: 2010-12-09 22:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLMinimizer.html:8288,variab,variable,8288,root/html528/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLMinimizer.html,3,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fValues.size(); }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total number of free parameters. { return fObjFunc->NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. const ROOT::Math::IMultiGradFunction * ObjFunction() const; method of only GSL minimizer (not inherited from interface); return pointer to used objective gradient function. { return fObjFunc; }. » Author: L. Moneta Wed Oct 18 11:48:00 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLMinimizer.h 37448 2010-12-09 20:20:56Z moneta $ » Last generated: 2011-07-04 15:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Math__GSLMinimizer.html:8422,variab,variable,8422,root/html530/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Math__GSLMinimizer.html,3,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fValues.size(); }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total number of free parameters. { return fObjFunc->NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. const ROOT::Math::IMultiGradFunction * ObjFunction() const; method of only GSL minimizer (not inherited from interface); return pointer to used objective gradient function. { return fObjFunc; }. » Author: L. Moneta Wed Oct 18 11:48:00 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLMinimizer.h 37448 2010-12-09 20:20:56Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLMinimizer.html:8422,variab,variable,8422,root/html532/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLMinimizer.html,6,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"minimizer type ;  ; void SetMinimizerOptions (const ROOT::Math::MinimizerOptions &minopt);  set all the minimizer options using class MinimizerOptions ;  ; void SetMinosErrors (bool on=true);  set Minos errors computation to be performed after fitting ;  ; void SetMinosErrors (const std::vector< unsigned int > &paramInd);  set parameter indices for running Minos this can be used for running Minos on a subset of parameters - otherwise is run on all of them if MinosErrors() is set ;  ; void SetNormErrors (bool on=true);  set the option to normalize the error on the result according to chi2/ndf ;  ; void SetParabErrors (bool on=true);  set parabolic errors ;  ; void SetParamsSettings (const std::vector< ROOT::Fit::ParameterSettings > &pars);  ; void SetParamsSettings (unsigned int npar, const double *params, const double *vstep=nullptr);  set the parameter settings from number of parameters and a vector of values and optionally step values. ;  ; void SetUpdateAfterFit (bool on=true);  Update configuration after a fit using the FitResult. ;  ; void SetWeightCorrection (bool on=true);  apply the weight correction for error matrix computation ;  ; bool UpdateAfterFit () const;  Update configuration after a fit using the FitResult. ;  ; bool UseWeightCorrection () const;  Apply Weight correction for error matrix computation. ;  . Static Public Member Functions; static void SetDefaultMinimizer (const char *type, const char *algo=nullptr);  static function to control default minimizer type and algorithm ;  . Private Attributes; ROOT::Math::MinimizerOptions fMinimizerOpts;  minimizer control parameters including name and algo type ;  ; bool fMinosErrors;  do full error analysis using Minos ;  ; std::vector< unsigned int > fMinosParams;  vector with the parameter indices for running Minos ;  ; bool fNormErrors;  flag for error normalization ;  ; bool fParabErrors;  get correct parabolic errors estimate (call Hesse after minimizing) ;  ; std::vector< ROOT::Fit::ParameterSettings",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html:3615,config,configuration,3615,doc/master/classROOT_1_1Fit_1_1FitConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html,1,['config'],['configuration']
Modifiability,"minval of bins in the range,; unless the value has been overridden by TH1::SetMinimum,; in which case it returns that value. (This happens, for example,; when the histogram is drawn and the y or z axis limits are changed. To get the minimum value of bins in the histogram regardless of; whether the value has been overridden, use; h->GetBinContent(h->GetMinimumBin()). Int_t GetMinimumBin() const; -*-*-*-*-*Return location of bin with minimum value in the range*-*. Int_t GetMinimumBin(Int_t& locmix, Int_t& locmiy, Int_t& locmiz) const; -*-*-*-*-*Return location of bin with minimum value in the range*-*. void SetBins(Int_t nx, Double_t xmin, Double_t xmax); -*-*-*-*-*-*-*Redefine x axis parameters*-*-*-*-*-*-*-*-*-*-*-*. The X axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins); -*-*-*-*-*-*-*Redefine x axis parameters with variable bin sizes *-*-*-*-*-*-*-*-*-*. The X axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1. void SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); -*-*-*-*-*-*-*Redefine x and y axis parameters*-*-*-*-*-*-*-*-*-*-*-*. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); -*-*-*-*-*-*-*Redefine x and y axis parameters with variable bin sizes *-*-*-*-*-*-*-*-*. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:121602,variab,variable,121602,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,2,['variab'],['variable']
Modifiability,"mitive replacement for some operands. ;  ; Int_t PreCompile ();  pointer to optimal function ;  ; void SetAction (Int_t code, Int_t value, Int_t param=0);  ; void SetActionOptimized (Int_t code, Int_t value, Int_t param=0);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObjArray fAliases;  ! List of TTreeFormula for each alias used. ;  ; std::vector< std::string > fAliasesUsed;  ! List of aliases used during the parsing of the expression. ;  ; TAxis * fAxis;  ! pointer to histogram axis if this is a string ;  ; TObjArray fBranches;  ! List of branches to read. Similar to fLeaves but duplicates are zeroed out. ;  ; Int_t fCodes [kMAXCODES];  List of leaf numbers referenced in formula. ;  ; LongDouble_t * fConstLD;  ! local version of fConsts able to store bigger numbers ;  ; Int_t fCumulSizes [kMAXCODES][kMAXFORMDIM];  Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated. ;  ; TObjArray fDataMembers;  ! List of leaf data members ;  ; bool fDidBooleanOptimization;  ! True if we executed one boolean optimization since the last time instance number 0 was evaluated ;  ; TList * fDimensionSetup;  ! list of dimension setups, for delayed creation of the dimension information. ;  ; TObjArray fExternalCuts;  ! List of TCutG and TEntryList used in the formula ;  ; Int_t fFixedSizes [kMAXCODES][kMAXFORMDIM];  Physical sizes of lower dimensions for each leaf. ;  ; bool fHasCast;  Record whether the formula contain a cast operation or not. ;  ; UChar_t fHasMultipleVarDim [kMAXCODES];  True if the corresponding variable is an array with more than one variable dimension. ;  ; Int_t fIndexes [kMAXCODES][kMAXFORMDIM];  Index of array selected by user for each leaf. ;  ; TObjArray fLeafNames;  List of TNamed describing leaves. ;  ; TObjArray fLeaves;  ! ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:27825,variab,variable,27825,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variable']
Modifiability,"mization against the Minuit internal numerical Gradient in order to; spot problems in the analytical Gradient calculation. This can be turned; off by overriding CheckGradient() to make it return ""false"".; The size of the output Gradient vector must be equal to the size of the; input Parameter vector.; Minuit does a check of the user Gradient at the beginning, if this is not; wanted the method ""CheckGradient()"" has to be overridden to return; ""false"". Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~FCNGradientBase(); virtual boolCheckGradient() const; virtual doubleROOT::Minuit2::FCNBase::ErrorDef() const; ROOT::Minuit2::FCNBaseROOT::Minuit2::FCNBase::FCNBase(); ROOT::Minuit2::FCNBaseROOT::Minuit2::FCNBase::FCNBase(const ROOT::Minuit2::FCNBase&); ROOT::Minuit2::FCNGradientBaseFCNGradientBase(); ROOT::Minuit2::FCNGradientBaseFCNGradientBase(const ROOT::Minuit2::FCNGradientBase&); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(const ROOT::Minuit2::GenericFunction&); virtual vector<double>Gradient(const vector<double>&) const; virtual doubleROOT::Minuit2::FCNBase::operator()(const vector<double>& x) const; ROOT::Minuit2::FCNGradientBase&operator=(const ROOT::Minuit2::FCNGradientBase&); virtual voidROOT::Minuit2::FCNBase::SetErrorDef(double); virtual doubleROOT::Minuit2::FCNBase::Up() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~FCNGradientBase(); {}. std::vector<double> Gradient(const vector<double>& ) const. bool CheckGradient() const; {return true;}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-06-30 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__FCNGradientBase.html:2046,Inherit,Inheritance,2046,root/html602/ROOT__Minuit2__FCNGradientBase.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__FCNGradientBase.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mization against the Minuit internal numerical Gradient in order to; spot problems in the analytical Gradient calculation. This can be turned; off by overriding CheckGradient() to make it return ""false"".; The size of the output Gradient vector must be equal to the size of the; input Parameter vector.; Minuit does a check of the user Gradient at the beginning, if this is not; wanted the method ""CheckGradient()"" has to be overridden to return; ""false"". Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~FCNGradientBase(); virtual boolCheckGradient() const; virtual doubleROOT::Minuit2::FCNBase::ErrorDef() const; ROOT::Minuit2::FCNBaseROOT::Minuit2::FCNBase::FCNBase(); ROOT::Minuit2::FCNBaseROOT::Minuit2::FCNBase::FCNBase(const ROOT::Minuit2::FCNBase&); ROOT::Minuit2::FCNGradientBaseFCNGradientBase(); ROOT::Minuit2::FCNGradientBaseFCNGradientBase(const ROOT::Minuit2::FCNGradientBase&); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(); ROOT::Minuit2::GenericFunctionROOT::Minuit2::GenericFunction::GenericFunction(const ROOT::Minuit2::GenericFunction&); virtual vector<double>Gradient(const vector<double>&) const; virtual doubleROOT::Minuit2::FCNBase::operator()(const vector<double>& x) const; ROOT::Minuit2::FCNGradientBase&operator=(const ROOT::Minuit2::FCNGradientBase&); virtual voidROOT::Minuit2::FCNBase::SetErrorDef(double); virtual doubleROOT::Minuit2::FCNBase::Up() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~FCNGradientBase(); {}. std::vector<double> Gradient(const vector<double>& ) const. bool CheckGradient() const; {return true;}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Minuit2__FCNGradientBase.html:2046,Inherit,Inheritance,2046,root/html604/ROOT__Minuit2__FCNGradientBase.html,https://root.cern,https://root.cern/root/html604/ROOT__Minuit2__FCNGradientBase.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrices elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. int CovMatrixStatus() const. return the status of the covariance matrix. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int i) const. get global correlation coefficient for the variable i. This is a number between zero and o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html:7903,variab,variables,7903,root/html526/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__Minuit2Minimizer.html,2,['variab'],['variables']
Modifiability,"mization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1 : Covariance was made pos defined; status = 2 : Hesse is invalid; status = 3 : Edm is above max; status = 4 : Reached call limit; status = 5 : Any other failure. double MinValue() const; return minimum function value. { return fState.Fval(); }. double Edm() const; return expected distance reached from the minimum. { return fState.Edm(); }. const double * X() const; return pointer to X values at the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return fState.NFcn(); }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fState.VariableParameters(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return true; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int i, unsigned int j) const. return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetCovMatrix(double* cov) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html:8229,variab,variables,8229,root/html530/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__Minuit2Minimizer.html,5,['variab'],['variables']
Modifiability,"mizeCaching ();  This method changes the value caching logic for all nodes that depends on any of the observables as defined by the given dataset. ;  ; void optimizeConstantTerms (bool, bool=true);  Driver function to activate global constant term optimization. ;  ; void printCompactTreeHook (std::ostream &os, const char *indent="""") override;  Catch print hook function and forward to function clone. ;  ; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Catch server redirect calls and forward to internal clone of function. ;  ; virtual RooArgSet requiredExtraObservables () const;  ; void runRecalculateCache (std::size_t firstEvent, std::size_t lastEvent, std::size_t stepSize) const override;  ; bool setDataSlave (RooAbsData &data, bool cloneData=true, bool ownNewDataAnyway=false) override;  Change dataset that is used to given one. ;  ;  Protected Member Functions inherited from RooAbsTestStatistic; double evaluate () const override;  Calculate and return value of test statistic. ;  ; virtual double getCarry () const;  ; bool initialize ();  One-time initialization of the test statistic. ;  ; void initMPMode (RooAbsReal *real, RooAbsData *data, const RooArgSet *projDeps, std::string const &rangeName, std::string const &addCoefRangeName);  Initialize multi-processor calculation mode. ;  ; void initSimMode (RooSimultaneous *pdf, RooAbsData *data, const RooArgSet *projDeps, std::string const &rangeName, std::string const &addCoefRangeName);  Initialize simultaneous p.d.f processing mode. ;  ; Int_t numSets () const;  ; void printCompactTreeHook (std::ostream &os, const char *indent="""") override;  Add extra information on component test statistics when printing itself as part of a tree structure. ;  ; virtual bool processEmptyDataSets () const;  ; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward serve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:51633,inherit,inherited,51633,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"mizeOr; kBoolOptimizeAnd; kBoolSet; kFDM; kFD0; kFD1; kFD2; kFD3; kNotGlobal; kNormalized; kLinear; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObjArrayfAliases! List of TTreeFormula for each alias used.; vector<std::string>fAliasesUsed! List of aliases used during the parsing of the expression.; TBitsTFormula::fAlreadyFound! cache for information; TAxis*fAxis! pointer to histogram axis if this is a string; TObjArrayfBranches! List of branches to read. Similar to fLeaces but duplicates are zeroed out.; Short_tfCodes[500]List of leaf numbers referenced in formula; Double_t*TFormula::fConst[fNconst] Array of fNconst formula constants; Int_tfCumulSizes[500][5]Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated; TObjArrayfDataMembers! List of leaf data members; Bool_tfDidBooleanOptimization! True if we executed one boolean optimization since the last time instance number 0 was evaluated; TList*fDimensionSetup! list of dimension setups, for delayed creation of the dimension information.; TString*TFormula::fExpr[fNoper] List of expressions; TString*TFormula::fExprOptimized![fNOperOptimized] List of expressions; TObjArrayfExternalCuts! List of TCutG and TEntryList used in the formula; Int_tfFixedSizes[500][5]Physical sizes of lower dimensions for each leaf; TObjArrayTFormula::fFunctionsArray of function calls to make; Bool_tfHasCastRecord whether the formula contain a cast operation or not; UChar_tfHasMultipleVarDim[500]True if the corresponding variable is an array with more than one variable dimension.; Int_tfIndexes[500][5]Index of array selected by user for each leaf; TObjArrayfLeafNamesList of TNamed describing leaves; TObjArrayfLeaves! List of leaf used in this formula.; TObjArrayTFormula::fLinearPar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeFormula.html:14792,variab,variable,14792,root/html528/TTreeFormula.html,https://root.cern,https://root.cern/root/html528/TTreeFormula.html,4,['variab'],['variable']
Modifiability,"mizer(). TFumiliMinimizer::TFumiliMinimizer ; (; int ; dummy = 0). Default constructor (an argument is needed by plug-in manager) ; Definition at line 137 of file TFumiliMinimizer.cxx. ◆ ~TFumiliMinimizer(). TFumiliMinimizer::~TFumiliMinimizer ; (; ). override . Destructor (no operations) ; Definition at line 160 of file TFumiliMinimizer.cxx. Member Function Documentation. ◆ Class(). static TClass * TFumiliMinimizer::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFumiliMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFumiliMinimizer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 162 of file TFumiliMinimizer.h. ◆ CovMatrix(). double TFumiliMinimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. inlineoverridevirtual . return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 116 of file TFumiliMinimizer.h. ◆ CovMatrixStatus(). int TFumiliMinimizer::CovMatrixStatus ; (; ); const. inlineoverridevirtual . return status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate} Minimizer who implements covariance matrix calculation will re-implement the method ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 123 of file TFumiliMinimizer.h. ◆ DeclFileName(). static const char * TFumiliMinimizer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 162 of file TFumiliMinimizer.h. ◆ Edm(). double TFumiliMinimizer::Edm ; (; ); const. inlineoverridevirtual . return expected distance reached from the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 87 of file TFumiliMinimizer.h. ◆ Errors(). const double * TFumiliM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumiliMinimizer.html:12294,variab,variable,12294,doc/master/classTFumiliMinimizer.html,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html,2,['variab'],"['variable', 'variables']"
Modifiability,"mizer::SetFunctionvirtual void SetFunction(const ROOT::Math::IMultiGenFunction &func)=0set the function to minimize; ROOT::Math::Minimizer::Scanvirtual bool Scan(unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0)scan function minimum for variable i.Definition Minimizer.cxx:195; ROOT::Math::Minimizer::MaxIterationsunsigned int MaxIterations() constmax iterationsDefinition Minimizer.h:297; ROOT::Math::Minimizer::SetDefaultOptionsvoid SetDefaultOptions()reset the default options (defined in MinimizerOptions)Definition Minimizer.h:361; ROOT::Math::Minimizer::fValidErrorbool fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit)Definition Minimizer.h:369; ROOT::Math::Minimizer::MinosStatusvirtual int MinosStatus() conststatus code of Minos (to be re-implemented by the minimizers supporting Minos)Definition Minimizer.h:313; ROOT::Math::Minimizer::SetVariableLimitsvirtual bool SetVariableLimits(unsigned int ivar, double lower, double upper)set the limits of an already existing variableDefinition Minimizer.h:199; ROOT::Math::Minimizer::SetTolerancevoid SetTolerance(double tol)set the toleranceDefinition Minimizer.h:337; ROOT::Math::Minimizer::MinimizerMinimizer(Minimizer const &)=delete; ROOT::Math::Minimizer::CovMatrixStatusvirtual int CovMatrixStatus() constreturn status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made po...Definition Minimizer.h:256; ROOT::Math::Minimizer::Minimizevirtual bool Minimize()=0method to perform the minimization; ROOT::Math::Minimizer::Statusint Status() conststatus code of minimizerDefinition Minimizer.h:310; ROOT::Math::Minimizer::SetVariableUpperLimitvirtual bool SetVariableUpperLimit(unsigned int ivar, double upper)set the upper-limit of an already existing variableDefinition Minimizer.cxx:78; ROOT::Math::Minimizer::SetCovariancevirtual bool SetCovariance(std::span< const double > cov, unsigned int nrow)set initial covarianc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:25340,variab,variableDefinition,25340,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['variab'],['variableDefinition']
Modifiability,"mizer::VariableName ; (; unsigned int ; ivar); const. overridevirtual . get name of variables (override if minimizer support storing of variable names) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 227 of file BasicMinimizer.cxx. ◆ X(). const double * ROOT::Math::BasicMinimizer::X ; (; ); const. inlineoverridevirtual . return pointer to X values at the minimum ; Implements ROOT::Math::Minimizer.; Definition at line 118 of file BasicMinimizer.h. Member Data Documentation. ◆ fBounds. std::map< unsigned int, std::pair<double, double> > ROOT::Math::BasicMinimizer::fBounds. private . map specifying the bound using as key the parameter index ; Definition at line 166 of file BasicMinimizer.h. ◆ fDim. unsigned int ROOT::Math::BasicMinimizer::fDim. private . Definition at line 157 of file BasicMinimizer.h. ◆ fMinVal. double ROOT::Math::BasicMinimizer::fMinVal. private . Definition at line 161 of file BasicMinimizer.h. ◆ fNames. std::vector<std::string> ROOT::Math::BasicMinimizer::fNames. private . Definition at line 164 of file BasicMinimizer.h. ◆ fObjFunc. const ROOT::Math::IMultiGenFunction* ROOT::Math::BasicMinimizer::fObjFunc. private . Definition at line 159 of file BasicMinimizer.h. ◆ fSteps. std::vector<double> ROOT::Math::BasicMinimizer::fSteps. private . Definition at line 163 of file BasicMinimizer.h. ◆ fValues. std::vector<double> ROOT::Math::BasicMinimizer::fValues. private . Definition at line 162 of file BasicMinimizer.h. ◆ fVarTypes. std::vector<ROOT::Math::EMinimVariableType> ROOT::Math::BasicMinimizer::fVarTypes. private . vector specifying the type of variables ; Definition at line 165 of file BasicMinimizer.h. Libraries for ROOT::Math::BasicMinimizer:. [legend]; The documentation for this class was generated from the following files:; math/mathcore/inc/Math/BasicMinimizer.h; math/mathcore/src/BasicMinimizer.cxx. ROOTMathBasicMinimizer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html:21982,variab,variables,21982,doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicMinimizer.html,1,['variab'],['variables']
Modifiability,"mizerFcn&operator=(const RooMinimizerFcn&); voidSetEvalErrorWall(Bool_t flag); Bool_tSetLogFile(const char* inLogfile); voidSetPrintEvalErrors(Int_t numEvalErrors); voidSetVerbose(Bool_t flag = kTRUE); Bool_tSynchronize(vector<ROOT::Fit::ParameterSettings>& parameters, Bool_t optConst, Bool_t verbose). private:. voidClearPdfParamAsymErr(Int_t index); virtual doubleDoEval(const double* x) const; Double_tGetPdfParamErr(Int_t index); Double_tGetPdfParamVal(Int_t index); voidSetPdfParamErr(Int_t index, Double_t value); voidSetPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Bool_tSetPdfParamVal(const Int_t& index, const Double_t& value) const. Data Members; private:. RooArgList*_constParamList; RooMinimizer*_context; Bool_t_doEvalErrorWall; RooArgList*_floatParamList; RooAbsReal*_funct; RooArgList*_initConstParamList; RooArgList*_initFloatParamList; ofstream*_logfile; double_maxFCN; int_nDim; int_numBadNLL; int_printEvalErrors; bool_verbose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMinimizerFcn(RooAbsReal* funct, RooMinimizer* context, bool verbose = false). ROOT::Math::IBaseFunctionMultiDim* Clone() const. unsigned int NDim() const; { return _nDim; }. RooArgList* GetFloatParamList(); { return _floatParamList; }. RooArgList* GetConstParamList(); { return _constParamList; }. RooArgList* GetInitFloatParamList(); { return _initFloatParamList; }. RooArgList* GetInitConstParamList(); { return _initConstParamList; }. void SetEvalErrorWall(Bool_t flag); { _doEvalErrorWall = flag ; }. void SetPrintEvalErrors(Int_t numEvalErrors); { _printEvalErrors = numEvalErrors ; }. Bool_t SetLogFile(const char* inLogfile). ofstream* GetLogFile(); { return _logfile; }. void SetVerbose(Bool_t flag = kTRUE); { _verbose = flag ; }. Double_t& GetMaxFCN(); { return _maxFCN; }. Int_t GetNumInvalidNLL(); { return _numBadNLL; }. Bool_t Synchronize(vector<ROOT::Fit::ParameterSettings>& parameters, Bool_t optConst, Bool_t verbose). void Appl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMinimizerFcn.html:1951,Inherit,Inheritance,1951,root/html532/RooMinimizerFcn.html,https://root.cern,https://root.cern/root/html532/RooMinimizerFcn.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mizerParameters & ROOT::Math::GeneticMinimizer::MinimizerParameters ; (; ); const. inline . Definition at line 96 of file GeneticMinimizer.h. ◆ MinValue(). double ROOT::Math::GeneticMinimizer::MinValue ; (; ); const. overridevirtual . return minimum function value ; Implements ROOT::Math::Minimizer.; Definition at line 331 of file GeneticMinimizer.cxx. ◆ NCalls(). unsigned int ROOT::Math::GeneticMinimizer::NCalls ; (; ); const. overridevirtual . number of function calls to reach the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 340 of file GeneticMinimizer.cxx. ◆ NDim(). unsigned int ROOT::Math::GeneticMinimizer::NDim ; (; ); const. overridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 348 of file GeneticMinimizer.cxx. ◆ NFree(). unsigned int ROOT::Math::GeneticMinimizer::NFree ; (; ); const. overridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total (re-implement if minimizer supports bounded parameters) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 355 of file GeneticMinimizer.cxx. ◆ Options(). ROOT::Math::MinimizerOptions ROOT::Math::GeneticMinimizer::Options ; (; ); const. overridevirtual . retrieve the minimizer options (implement derived class if needed) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 185 of file GeneticMinimizer.cxx. ◆ ProvidesError(). bool ROOT::Math::GeneticMinimizer::ProvidesError ; (; ); const. overridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 365 of file GeneticMinimizer.cxx. ◆ SetFixedVariable(). bool ROOT::Math::GeneticMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set a new fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:14176,variab,variables,14176,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,1,['variab'],['variables']
Modifiability,"mizerRMinimizer class ;  CRootFinderUser Class to find the Root of one dimensional functions ;  CRotation3DRotation class with the (3D) rotation represented by a 3x3 orthogonal matrix ;  CRotationXRotation class representing a 3D rotation about the X axis by the angle of rotation ;  CRotationYRotation class representing a 3D rotation about the Y axis by the angle of rotation ;  CRotationZRotation class representing a 3D rotation about the Z axis by the angle of rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the new Y' axis, followed by a third rotation of an angle psi (roll) about the final X'' axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  CSkipFunction;  CSkipFunction< 0 >;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineClass to wrap engines fron the C++ standard random library in the ROOT Random interface ;  CStdEngineType;  CStdEngineType< std::knuth_b >;  CStdEngineType< std::minstd_rand >;  CStdEngineType< std::mt19937 >;  CStdEngineType< std::mt19937_64 >;  CStdEngineType< std::random_device >;  CStdEngineType< std::ranlux24 >;  CStdEngineType< std::ranlux48 >;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:55753,variab,variables,55753,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,1,['variab'],['variables']
Modifiability,"mlDefineClass (const char *xmlClassName);  define class for the converted class name, where special symbols were replaced by '_' ;  . Static Protected Member Functions; static void * ConvertFromXMLChecked (const char *xml, const TClass *expectedClass, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  Convert from XML and check if object derived from specified class When possible, cast to given class. ;  ;  Static Protected Member Functions inherited from TBufferIO; static R__ALWAYS_INLINE ULong_t Void_Hash (const void *ptr);  Return hash value for provided object. ;  . Protected Attributes; Bool_t fCanUseCompact {kFALSE};  ! Flag indicate that basic type (like Int_t) can be placed in the same tag ;  ; Int_t fCompressLevel {0};  ! Compression level and algorithm ;  ; Int_t fErrorFlag {0};  ! Error flag ;  ; TClass * fExpectedBaseClass {nullptr};  ! Pointer to class, which should be stored as parent of current ;  ; Int_t fIOVersion {3};  ! Indicates format of ROOT xml file ;  ; std::deque< std::unique_ptr< TXMLStackObj > > fStack;  ! Stack of processed objects ;  ; TString fValueBuf;  ! Current value buffer ;  ; Version_t fVersionBuf {-111};  ! Current version buffer ;  ; TXMLEngine * fXML {nullptr};  ! instance of TXMLEngine for working with XML structures ;  ;  Protected Attributes inherited from TBufferIO; TExMap * fClassMap {nullptr};  Map containing object,class pairs for reading. ;  ; Int_t fDisplacement {0};  Value to be added to the map offsets. ;  ; TExMap * fMap {nullptr};  Map containing object,offset pairs for reading/writing. ;  ; Int_t fMapCount {0};  Number of objects or classes in map. ;  ; Int_t fMapSize {0};  Default size of map. ;  ; UShort_t fPidOffset {0};  Offset to be added to the pid index in this key/buffer. ;  ;  Protected Attributes inherited from TBuffer; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:50308,inherit,inherited,50308,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,1,['inherit'],['inherited']
Modifiability,"mma; , ;   kDelta. };  . Private Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of the Johnson distribution. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  . Private Attributes; RooRealProxy _delta;  ; RooRealProxy _gamma;  ; RooRealProxy _lambda;  ; RooRealProxy _mass;  ; double _massThreshold {-1.E300};  ; RooRealProxy _mu;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJohnson.html:60111,inherit,inherited,60111,doc/master/classRooJohnson.html,https://root.cern,https://root.cern/doc/master/classRooJohnson.html,4,['inherit'],['inherited']
Modifiability,"mmand arguments.; 812 * You can pass either an arbitrary number of RooCmdArg instances; 813 * or a single RooLinkedList that points to the RooCmdArg objects.; 814 * @return An owning pointer to the created RooAbsReal NLL object.; 815 *; 816 * @tparam CmdArgs_t Template types for optional command arguments.; 817 * Can either be an arbitrary number of RooCmdArg or a single RooLinkedList.; 818 *; 819 * \note This front-end function should not be re-implemented in derived PDF types.; 820 * If you mean to customize the NLL creation routine,; 821 * you need to override the virtual RooAbsPdf::createNLLImpl() method.; 822 *; 823 * The following named arguments are supported:; 824 *; 825 * <table>; 826 * <tr><th> Type of CmdArg <th> Effect on NLL; 827 * <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Do not normalize PDF over listed observables.; 828 * Arguments can either be multiple RooRealVar or a single RooArgSet containing them.; 829 * <tr><td> `Extended(bool flag)` <td> Add extended likelihood term, off by default.; 830 * <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name. Multiple comma-separated range names can be specified.; 831 * In this case, the unnormalized PDF \f$f(x)\f$ is normalized by the integral over all ranges \f$r_i\f$:; 832 * \f[; 833 * p(x) = \frac{f(x)}{\sum_i \int_{r_i} f(x) dx}.; 834 * \f]; 835 * <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; 836 * <tr><td> `SumCoefRange(const char* name)` <td> Set the range in which to interpret the coefficients of RooAddPdf components; 837 * <tr><td> `NumCPU(int num, int istrat)` <td> Parallelize NLL calculation on num CPUs; 838 * <table>; 839 * <tr><th> Strategy <th> Effect; 840 * <tr><td> 0 = RooFit::BulkPartition - *default* <td> Divide events in N equal chunks; 841 * <tr><td> 1 = RooFit::Interleave <td> Process event i%N in process N. Recommended for binned data with; 8",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:33507,extend,extended,33507,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extended']
Modifiability,"mment(). Bool_t TMVA::Tools::AddComment ; (; void * ; node, . const char * ; comment . ). Definition at line 1132 of file Tools.cxx. ◆ AddRawLine(). Bool_t TMVA::Tools::AddRawLine ; (; void * ; node, . const char * ; raw . ). XML helpers. ; Definition at line 1190 of file Tools.cxx. ◆ CalcCovarianceMatrices() [1/2]. std::vector< TMatrixDSym * > * TMVA::Tools::CalcCovarianceMatrices ; (; const std::vector< const Event * > & ; events, . Int_t ; maxCls, . VariableTransformBase * ; transformBase = nullptr . ). Definition at line 1494 of file Tools.cxx. ◆ CalcCovarianceMatrices() [2/2]. std::vector< TMatrixDSym * > * TMVA::Tools::CalcCovarianceMatrices ; (; const std::vector< Event * > & ; events, . Int_t ; maxCls, . VariableTransformBase * ; transformBase = nullptr . ). compute covariance matrices ; Definition at line 1513 of file Tools.cxx. ◆ CheckForSilentOption(). Bool_t TMVA::Tools::CheckForSilentOption ; (; const TString & ; cs); const. check for ""silence"" option in configuration option string ; Definition at line 691 of file Tools.cxx. ◆ CheckForVerboseOption(). Bool_t TMVA::Tools::CheckForVerboseOption ; (; const TString & ; cs); const. check if verbosity ""V"" set in option ; Definition at line 708 of file Tools.cxx. ◆ CheckSplines(). Bool_t TMVA::Tools::CheckSplines ; (; const TH1 * ; theHist, . const TSpline * ; theSpline . ). check quality of splining by comparing splines and histograms in each bin ; Definition at line 479 of file Tools.cxx. ◆ Color(). const TString & TMVA::Tools::Color ; (; const TString & ; c). human readable color strings ; Definition at line 828 of file Tools.cxx. ◆ ComputeStat(). void TMVA::Tools::ComputeStat ; (; const std::vector< TMVA::Event * > & ; events, . std::vector< Float_t > * ; valVec, . Double_t & ; meanS, . Double_t & ; meanB, . Double_t & ; rmsS, . Double_t & ; rmsB, . Double_t & ; xmin, . Double_t & ; xmax, . Int_t ; signalClass, . Bool_t ; norm = kFALSE . ). sanity check ; Definition at line 202 of file Tools.cxx. ◆ Compute",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Tools.html:12564,config,configuration,12564,doc/master/classTMVA_1_1Tools.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Tools.html,1,['config'],['configuration']
Modifiability,"mmy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for now) ;  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:19759,config,configuration,19759,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,18,['config'],['configuration']
Modifiability,"mmy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for now) ;  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:32585,config,configuration,32585,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,116,['config'],['configuration']
Modifiability,"mmy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstVar.html:17471,config,configuration,17471,doc/master/classRooConstVar.html,https://root.cern,https://root.cern/doc/master/classRooConstVar.html,1,['config'],['configuration']
Modifiability,"mmyFunction(double, double). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. static RooCFunction2Map<double,double,double>*_fmapPointer to mapping service object; RooCFunction2Ref<double,double,double>::func_t_ptr! Pointer to embedded function. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& R__b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. VO operator()(double x, double y) const; Evaluate embedded function. const char* name() const; Return registered name of embedded function. If function; is not registered return string with hex presentation; of function pointer value. const char* argName(Int_t iarg); Return suggested name for i-th argument. return fmap(). V",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2Ref_double_double_double_.html:6743,Inherit,Inheritance,6743,root/html602/RooCFunction2Ref_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2Ref_double_double_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; TEveTransSubEditor*fSEActual editor widget.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTransEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. TEveTransSubEditor& operator=(const TEveTransEditor& ). TEveTransEditor(const TEveTransEditor& ). virtual ~TEveTransEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveTransEditor.html:19773,Inherit,Inheritance,19773,root/html534/TEveTransEditor.html,https://root.cern,https://root.cern/root/html534/TEveTransEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; static RooRealVarSharedProperties_nullPropNull property; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; static Bool_t_printScientific; static Int_t_printSigDigits; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooRealVarSharedProperties*_sharedProp! Shared properties associated with this instance; static RooSharedPropertiesList_sharedPropListList of properties shared among clone sets; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealVar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRealVar.html:42673,config,configuration,42673,root/html602/RooRealVar.html,https://root.cern,https://root.cern/root/html602/RooRealVar.html,4,['config'],['configuration']
Modifiability,"mode. ;  ; UInt_t fTWidth;  Label width. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableHeader.html:28079,inherit,inherited,28079,doc/master/classTGTableHeader.html,https://root.cern,https://root.cern/doc/master/classTGTableHeader.html,1,['inherit'],['inherited']
Modifiability,"mode. ;  ; UInt_t fTWidth;  Label width. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = 0;  Default font. ;  ; static const TGGC * fgDefaultGC = 0;  Default graphics context. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableCell.html:26099,inherit,inherited,26099,doc/master/classTGTableCell.html,https://root.cern,https://root.cern/doc/master/classTGTableCell.html,1,['inherit'],['inherited']
Modifiability,"module; THtml::TPathDefinition helper class to determine directory layouts; TImage Abstract image class; TImageDump create image in batch mode; TImagePalette Color Palette for value -> color conversion; TImagePlugin base class for different image format handlers(plugins); TIndArray ; TIndexTable ""Index"" array for TTable object; TIndexTable::iterator ; TInetAddress Represents an Internet Protocol (IP) address; TInspectCanvas The canvas Inspector; TInspectorImp GUI independent inspector abc; TInterpreter ABC defining interface to generic interpreter; TIsAProxy ; TIter Iterator wrapper; TIterator Iterator abstract base class; TKDTree<int,double> KD tree; TKDTree<int,float> KD tree; TKey Header description of a logical record on file.; TKeyMapFile Utility class for browsing TMapFile objects.; TKeyXML a special TKey for XML files ; TLatex The Latex-style text processor class; TLeaf Leaf: description of a Branch data type; TLeafB A TLeaf for an 8 bit Integer data type.; TLeafC A TLeaf for a variable length string.; TLeafD A TLeaf for a 64 bit floating point data type.; TLeafElement A TLeaf for a general object derived from TObject.; TLeafF A TLeaf for a 32 bit floating point data type.; TLeafI A TLeaf for an Integer data type.; TLeafL A TLeaf for a 64 bit Integer data type.; TLeafO A TLeaf for an 8 bit Integer data type.; TLeafObject A TLeaf for a general object derived from TObject.; TLeafS A TLeaf for a 16 bit Integer data type.; TLegend Legend of markers/lines/boxes to represent obj's; TLegendEntry Storage class for one entry of a TLegend; TLibraryDocInfo documentation for a library; TLimit Class to compute 95% CL limits; TLimitDataSource input for TLimit routines; TLine A line segment; TLineEditor GUI for editing Line attributes; TLinearFitter fit a set of data points with a linear combination of functions; TLinearMinimizer Implementation of the Minimizer interface using TLinearFitter ; TLink Link: hypertext link to an object; TList Doubly linked list; TListIter Linke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:93632,variab,variable,93632,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['variab'],['variable']
Modifiability,"moment; 366 //TStreamerInfo *subinfo = (TStreamerInfo*)vClass->GetStreamerInfo();; 367 ; 368 //for (int k = 0; k < narr; ++k) {; 369 char **contp = (char **)((char *)addr + ioffset);; 370 for(int j=0;j<config->fCompInfo->fLength;++j) {; 371 char *cont = contp[j];; 372 TVirtualCollectionProxy::TPushPop helper( proxy, cont );; 373 Int_t nobjects = cont ? proxy->Size() : 0;; 374 buf << nobjects;; 375 ; 376 // TODO: method is private, should be made accesible from here; 377 // subinfo->WriteBufferSTL(buf,proxy,nobjects);; 378 }; 379 //}; 380 buf.SetByteCount(pos,kTRUE);; 381 return 0;; 382 }; 383 UInt_t pos = buf.WriteVersion(config->fInfo->IsA(), kTRUE);; 384 if (kIsTextT) {; 385 // use same method which is used in kSTL; 386 buf.WriteFastArray((void **)((char *)addr + ioffset), cl, config->fCompInfo->fLength, kFALSE, pstreamer);; 387 } else if (pstreamer == nullptr) {; 388 // for (int k = 0; k < narr; ++k) {; 389 char **contp = (char **)((char *)addr + ioffset);; 390 for (int j = 0; j < config->fCompInfo->fLength; ++j) {; 391 char *cont = contp[j];; 392 cl->Streamer(cont, buf);; 393 }; 394 // }; 395 } else {; 396 // for (int k = 0; k < narr; ++k) {; 397 (*pstreamer)(buf, (char *)addr + ioffset, config->fCompInfo->fLength);; 398 //}; 399 }; 400 buf.SetByteCount(pos, kTRUE);; 401 return 0;; 402 }; 403 ; 404 ; 405 /** Direct copy of code from TStreamerInfo::WriteBufferAux,; 406 * potentially can be used later for non-text streaming */; 407 template<bool kIsTextT>; 408 INLINE_TEMPLATE_ARGS Int_t ReadSTLp(TBuffer &buf, void *addr, const TConfiguration *config); 409 {; 410 TClass *cle = config->fCompInfo->fClass;; 411 TStreamerElement * aElement = (TStreamerElement*) config->fCompInfo->fElem;; 412 TMemberStreamer *pstreamer = config->fCompInfo->fStreamer;; 413 //TVirtualCollectionProxy *proxy = cl->GetCollectionProxy();; 414 //TClass* vClass = proxy ? proxy->GetValueClass() : 0;; 415 ; 416 UInt_t eoffset = 0; // extra parameter of TStreamerInfo::WriteBufferAux, 0 for all kind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:14864,config,config,14864,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,3,['config'],['config']
Modifiability,"mon message dialog box initialization. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGButton * fAppend;  ; TGButton * fApply;  buttons in dialog box ;  ; TGHorizontalFrame * fButtonFrame;  frame containing buttons ;  ; TGButton * fCancel;  buttons in dialog box ;  ; TGButton * fClose;  ; TGButton * fDismiss;  buttons in dialog box ;  ; TGIcon * fIcon;  icon ;  ; TGHorizontalFrame * fIconFrame;  frame containing icon and text ;  ; TGButton * fIgnore;  ; TGLayoutHints * fL1;  ; TGLayoutHints * fL2;  ; TGLayoutHints * fL3;  ; TGLayoutHints * fL4;  ; TGLayoutHints * fL5;  layout hints ;  ; TGVerticalFrame * fLabelFrame;  frame containing text ;  ; TList * fMsgList;  text (list of TGLabels) ;  ; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMsgBox.html:29887,inherit,inherited,29887,doc/master/classTGMsgBox.html,https://root.cern,https://root.cern/doc/master/classTGMsgBox.html,3,['inherit'],['inherited']
Modifiability,"mon, Long_t timeout = -1, Int_t endtype = -1, Bool_t deactonfail = kFALSE); Int_tCollectInputFrom(TSocket* s, Int_t endtype = -1, Bool_t deactonfail = kFALSE); Bool_tCreateMerger(TSlave* sl, Int_t port); voidDeActivateAsyncInput(); Int_tDisablePackage(const char* package); Int_tDisablePackageOnClient(const char* package); Int_tDisablePackages(); Int_tExec(const char* cmd, TProof::ESlaves list, Bool_t plusMaster); voidFinalizationDone(); Int_tFindNextFreeMerger(); TSlave*FindSlave(TSocket* s) const; virtual voidFindUniqueSlaves(); Int_tGetActiveMergersCount(); static TList*GetDataSetSrvMaps(const TString& srvmaps); TList*GetListOfBadSlaves() const; TList*GetListOfInactiveSlaves() const; TList*GetListOfSlaves() const; TList*GetListOfUniqueSlaves() const; Int_tGetNumberOfActiveSlaves() const; Int_tGetNumberOfBadSlaves() const; Int_tGetNumberOfInactiveSlaves() const; Int_tGetNumberOfSlaves() const; Int_tGetNumberOfUniqueSlaves() const; Int_tGetQueryReference(Int_t qry, TString& ref); Int_tGoMoreParallel(Int_t nWorkersToAdd); Int_tGoParallel(Int_t nodes, Bool_t accept = kFALSE, Bool_t random = kFALSE); Int_tHandleInputMessage(TSlave* wrk, TMessage* m, Bool_t deactonfail = kFALSE); voidHandleSubmerger(TMessage* mess, TSlave* sl); voidInterrupt(TProof::EUrgent type, TProof::ESlaves list = kActive); voidInterruptCurrentMonitor(); Bool_tIsEndMaster() const; Bool_tIsSync() const; Int_tLoadPackage(const char* package, Bool_t notOnClient = kFALSE, TList* loadopts = 0, TList* workers = 0); Int_tLoadPackageOnClient(const char* package, TList* loadopts = 0); voidMarkBad(TSlave* wrk, const char* reason = 0); voidMarkBad(TSocket* s, const char* reason = 0); Int_tModifyWorkerLists(const char* ord, Bool_t add, Bool_t save); voidNotifyLogMsg(const char* msg, const char* sfx = ""\n""); voidoperator=(const TProof&); voidParseConfigField(const char* config); Int_tPing(TProof::ESlaves list); Int_tPollForNewWorkers(); voidPrintProgress(Long64_t total, Long64_t processed, Float_t procTime = -1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProof.html:25009,config,config,25009,root/html602/TProof.html,https://root.cern,https://root.cern/root/html602/TProof.html,2,['config'],['config']
Modifiability,"more than one adequate generator. If you use Visual Studio, “NMake Makefiles” is a generator you can use for building with NMake. By default, CMake chooses the most specific generator supported by your development environment. If you want an alternative generator, you must tell this to CMake with the -G option.; Options and variables; Variables customize how the build will be generated. Options are boolean variables, with possible values ON/OFF. Options and variables are defined on the CMake command line like this:; $ cmake -DVARIABLE=value path/to/source. You can set a variable after the initial CMake invocation to change its value. You can also undefine a variable:; $ cmake -UVARIABLE path/to/source. Variables are stored in the CMake cache. This is a file named CMakeCache.txt stored at the root of your build directory that is generated by cmake. Editing it yourself is not recommended.; Variables are listed in the CMake cache with the variable name and type separated by a colon. You can also specify the variable and type on the CMake command line:; $ cmake -DVARIABLE:TYPE=value path/to/source. Variables in the CMake cache are 'remembered', so you do not need to type them if you execute cmake command again. It is recommended to delete the file CMakeCache.txt to start from a clean configuration. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/building-root.html:23295,variab,variable,23295,d/building-root.html,https://root.cern,https://root.cern/d/building-root.html,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"mory 'r' and the number of events 'e'. ;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; TGSplitButton * fAllWorkers;  ; TMultiGraph * fAPlot;  ; TProofProgressDialog * fDialog;  ; Bool_t fFullLogs;  ; TRootEmbeddedCanvas * fMasterPlot;  ; TMultiGraph * fMPlot;  ; TGTextButton * fPlot;  ; TProofLog * fProofLog;  ; TGListBox * fWorkers;  ; TRootEmbeddedCanvas * fWorkersPlot;  ; TMultiGraph * fWPlot;  ;  Protected Attributes inherited from TGTransientFrame; const TGWindow * fMain;  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconName;  icon name ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressMemoryPlot.html:26020,inherit,inherited,26020,doc/master/classTProofProgressMemoryPlot.html,https://root.cern,https://root.cern/doc/master/classTProofProgressMemoryPlot.html,3,['inherit'],['inherited']
Modifiability,"mote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. private:. TStringfDefaultPromptdefault prompt: ""root [%d] ""; TFileHandler*fInputHandlerterminal input handler; Bool_tfInterruptif true macro execution will be stopped; Int_tfNcmdcommand history number; charfPrompt[64]interpreter prompt. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TApplication. ←; TRint. Function documentation; TRint(const char* appClassName, int* argc, char** argv, void* options = 0, int numOptions = 0, Bool_t noLogo = kFALSE); Create an application environment. The TRint environment provides an; interface to the WM manager functionality and eventloop via inheritance; of TApplication and in addition provides interactive access to; the CINT C++ interpreter via the command line. ~TRint(); Destructor. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. void Run(Bool_t retrn = kFALSE); Main application eventloop. First process files given on the command; line and then go into the main application event loop, unless the -q; command line option was specfied in which case the program terminates.; When retrun is true this method returns even when -q was specified. When QuitOpt is true and retrn is false, terminate the application with; an error code equal to either the Process",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRint.html:13583,inherit,inheritance,13583,root/html602/TRint.html,https://root.cern,https://root.cern/root/html602/TRint.html,2,['inherit'],['inheritance']
Modifiability,"mous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphPainter(). Default constructor; ; . ~TGraphPainter(). Destructor.; ; . void ComputeLogs(Int_t npoints, Int_t opt). Compute the logarithm of global variables gxwork and gywork; according to the value of Options and put the results in the global; variables gxworkl and gyworkl.; ; npoints : Number of points in gxwork and in gywork.; ; opt = 1 ComputeLogs is called from PaintGrapHist; opt = 0 ComputeLogs is called from PaintGraph; ; . Int_t DistancetoPrimitiveHelper(TGraph* theGraph, Int_t px, Int_t py). Compute distance from point px,py to a graph.; ; Compute the closest distance of approach from point px,py to this line.; The distance is computed in pixels units.; ; . void DrawPanelHelper(TGraph* theGraph). Display a panel with all histogram drawing options.; ; . void ExecuteEventHelper(TGraph* theGraph, Int_t event, Int_t px, Int_t py). Execute action corresponding to one event.; ; This member function is called when a graph is clicked with the locator.; ; If the left mouse button is clicked on one of the line end points, this point; follows the cursor until button is released.; ; If the middle mouse button clicked, the line is moved parallel to itself; until the button is rele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphPainter.html:20304,variab,variables,20304,root/html602/TGraphPainter.html,https://root.cern,https://root.cern/root/html602/TGraphPainter.html,8,['variab'],['variables']
Modifiability,"mous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tfArrayDimnumber of array dimensions; Int_tfArrayLengthcumulative size of all array dims; TClass*fClassObject!pointer to class of object; Double_tfFactor!Conversion factor if a range is specified fFactor = (1<<nbits/(xmax-xmin); Int_tfMaxIndex[5]Maximum array index for array dimension ""dim""; TStringTNamed::fNameobject identifier; TClass*fNewClass!new element class when reading; Int_tfNewType!new element type when reading; Int_tfOffset!element offset in class; Int_tfSizesizeof element; TMemberStreamer*fStreamer!pointer to element Streamer; Int_tfTObjectOffset!base offset for TObject if the element inherits from it; TStringTNamed::fTitleobject title; Int_tfTypeelement type; TStringfTypeNameData type name of data member; Double_tfXmax!Maximum of data member if a range is specified [xmin,xmax,nbits]; Double_tfXmin!Minimum of data member if a range is specified [xmin,xmax,nbits]. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStreamerElement. ←. TStreamerArtificial. TStreamerBase. TStreamerBasicPointer. TStreamerBasicType. TStreamerLoop. TStreamerObject. TStreamerObjectAny. TStreamerObjectAnyPointer. TStreamerObjectPointer. TStreamerSTL.  [more...]. Function documentation; TStreamerElement(); Default ctor. TStreamerElement(const char* name, const char* title, Int_t offset, Int_t dtype, const char* typeName); Create a TStreamerElement object. ~TStreamerElement(); TStreamerElement dtor. Bool_t CannotSplit() const; Returns true if the element cannot be split, false otherwise.; An element cannot be split if the corresponding class member has; the special characters ""||"" as the first characters in the; comment field. TClass * GetClassPointer() const; Returns a pointer to the TClass of this element. Int_t GetExecID() const; Returns the TExec id for the EXEC instruction in the comment field; of a TRef data member. const char * GetFullName() const; Return element name including di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerElement.html:9064,Inherit,Inheritance,9064,root/html602/TStreamerElement.html,https://root.cern,https://root.cern/root/html602/TStreamerElement.html,2,['Inherit'],['Inheritance']
Modifiability,"move proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooListProxy _coefList;  ; int _lowestOrder;  ; RooRealProxy _x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegacyExpPoly.html:68471,config,configuration,68471,doc/master/classRooLegacyExpPoly.html,https://root.cern,https://root.cern/doc/master/classRooLegacyExpPoly.html,1,['config'],['configuration']
Modifiability,"move the outputLayer of the preNet; 1715// preNet.removeLayer ();; 1716 ; 1717// // set the output size to the number of nodes in the new output layer (== last hidden layer); 1718// preNet.setOutputSize (numNodes);; 1719 ; 1720// // transform pattern using the created preNet; 1721// auto proceedPattern = [&](std::vector<Pattern>& pttrn); 1722// {; 1723// std::vector<Pattern> newPttrn;; 1724// std::for_each (std::begin (pttrn), std::end (pttrn),; 1725// [&preNet,&preWeights,&newPttrn](Pattern& p); 1726// {; 1727// std::vector<double> output = preNet.compute (p.input (), preWeights);; 1728// Pattern pat (output, output, p.weight ());; 1729// newPttrn.push_back (pat);; 1730// // p = pat;; 1731// });; 1732// return newPttrn;; 1733// };; 1734 ; 1735 ; 1736// prePatternTrain = proceedPattern (prePatternTrain);; 1737// prePatternTest = proceedPattern (prePatternTest);; 1738 ; 1739 ; 1740// // the new input size is the output size of the already reduced preNet; 1741// _inputSize = preNet.layers ().back ().numNodes ();; 1742// }; 1743// }; 1744 ; 1745 ; 1746 ; 1747 ; 1748 ; 1749 ; 1750 ; 1751 ; 1752 ; 1753 ; 1754 ; 1755 ; 1756 ; 1757 ; 1758 ; 1759 ; 1760 } // namespace DNN; 1761} // namespace TMVA; 1762 ; 1763#endif; MethodBase.h; Pattern.h; f#define f(i)Definition RSha256.hxx:104; g#define g(i)Definition RSha256.hxx:105; kMagenta@ kMagentaDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void inputDefinition TGWin32VirtualXProxy.cxx:142; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:58658,layers,layers,58658,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['layers'],['layers']
Modifiability,"moveMethod (Int_t level);  Remove method 'meth' from the list, if there ... ;  ; void ReOrder (Int_t nmet, Int_t *fmet);  Reorder nmet methods according fmet[nmet]. ;  ; void Reset ();  Remove all methods, leaving Active status and list of associted TSceContexts unchanged. ;  ; void SetDetails (Int_t level, const char *details);  Set authentication details for specified level. ;  ; void SetEstablished (TList *nl);  ; void SetFirst (Int_t level);  Set 'method' to be the first used (if in the list ...). ;  ; void SetHost (const char *host);  ; void SetLast (Int_t level);  Set 'method' to be the last used (if in the list ...). ;  ; void SetServer (Int_t server);  ; void SetUser (const char *user);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Update (THostAuth *ha);  Update info with the one in ha Remaining methods, if any, get lower priority. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHostAuth.html:3906,inherit,inherited,3906,doc/master/classTHostAuth.html,https://root.cern,https://root.cern/doc/master/classTHostAuth.html,1,['inherit'],['inherited']
Modifiability,"movedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodBase&operator=(const TMVA::MethodBase&); virtual map<TString,Double_t>OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadStateFromFile(); voidReadStateFromStream(istream& tf); voidReadStateFromStream(TFile& rf); voidReadStateFromXMLString(const char* xmlstr); virtual voidTObject::RecursiveRemove(TObject* obj); voidRerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetAnalysisType(TMVA::Types::EAnalysisType type); voidSetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMethodBaseDir(TDirectory* methodDir); voidSetMethodDir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:10335,Config,Configurable,10335,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,2,['Config'],['Configurable']
Modifiability,"mp {nullptr};  ; char * fBufCompCur {nullptr};  ; TClass * fClass {nullptr};  ; char * fCompPos {nullptr};  ; Int_t fCompress {0};  ; Bool_t fEvolution {kFALSE};  ; TList * fInfos {nullptr};  ; UInt_t fWhat {0};  . Static Private Attributes; static Bool_t fgEvolution = kFALSE;  . Friends; class TAuthenticate;  ; class TPSocket;  ; class TSocket;  ; class TUDPSocket;  ; class TXSocket;  . Additional Inherited Members;  Public Types inherited from TBufferFile; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TBufferFile; typedef std::vector< TStreamerInfo * > InfoList_t;  ;  Protected Types inherited from TBufferIO; enum  { kNullTag = 0; };  ;  Protected Types inherited from TBuffer; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMessage.html:37627,inherit,inherited,37627,doc/master/classTMessage.html,https://root.cern,https://root.cern/doc/master/classTMessage.html,2,['inherit'],['inherited']
Modifiability,"mp, '""' - &quot, ''' - &apos ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fSkipComments;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TXMLEngine.h>. Inheritance diagram for TXMLEngine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TXMLEngine(). TXMLEngine::TXMLEngine ; (; ). if true, do not create comments nodes in document during parsing ; default (normal) constructor of TXMLEngine class ; Definition at line 524 of file TXMLEngine.cxx. ◆ ~TXMLEngine(). TXMLEngine::~TXMLEngine ; (; ). override . destructor for TXMLEngine object ; Definition at line 532 of file TXMLEngine.cxx. Member Function Documentation. ◆ AddChild(). void TXMLEngine::AddChild ; (; XMLNodePointer_t ; parent, . XMLNodePointer_t ; child . ). add child element to xmlnode ; Definition at line 799 of file TXMLEngine.cxx. ◆ AddChildAfter(). void TXMLEngine::AddChildAfter ; (; XMLNodePointer_t ; parent, . XMLNodePointer_t ; child, . XMLNodePointer_t ; afternode . ). Insert new child node after already exist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEngine.html:18899,inherit,inherited,18899,doc/master/classTXMLEngine.html,https://root.cern,https://root.cern/doc/master/classTXMLEngine.html,1,['inherit'],['inherited']
Modifiability,"mp.remove(*tmp,true,true) ;; 2259 }; 2260 ; 2261 if (!sliceSetTmp.empty()) {; 2262 coutI(Plotting) << ""RooAbsReal::plotAsymOn("" << GetName() << "") plot on ""; 2263 << frame->getPlotVar()->GetName() << "" represents a slice in "" << sliceSetTmp << std::endl ;; 2264 }; 2265 sliceSet.add(sliceSetTmp) ;; 2266 }; 2267 } else {; 2268 makeProjectionSet(frame->getPlotVar(),frame->getNormVars(),projectedVars,true) ;; 2269 }; 2270 ; 2271 ; 2272 // Take out data-projected dependens from projectedVars; 2273 RooArgSet* projDataNeededVars = nullptr ;; 2274 if (o.projData) {; 2275 projDataNeededVars = projectedVars.selectCommon(projDataVars);; 2276 projectedVars.remove(projDataVars,true,true) ;; 2277 }; 2278 ; 2279 // Take out plotted asymmetry from projection; 2280 if (projectedVars.find(asymCat.GetName())) {; 2281 projectedVars.remove(*projectedVars.find(asymCat.GetName())) ;; 2282 }; 2283 ; 2284 // Clone the plot variable; 2285 RooAbsReal* realVar = static_cast<RooRealVar*>(frame->getPlotVar()) ;; 2286 RooRealVar* plotVar = static_cast<RooRealVar*>(realVar->Clone()) ;; 2287 ; 2288 // Inform user about projections; 2289 if (!projectedVars.empty()) {; 2290 coutI(Plotting) << ""RooAbsReal::plotAsymOn("" << GetName() << "") plot on "" << plotVar->GetName(); 2291 << "" projects variables "" << projectedVars << std::endl ;; 2292 }; 2293 if (projDataNeededVars && !projDataNeededVars->empty()) {; 2294 coutI(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") plot on "" << plotVar->GetName(); 2295 << "" averages using data variables ""<< *projDataNeededVars << std::endl ;; 2296 }; 2297 ; 2298 ; 2299 // Customize two copies of projection with fixed negative and positive asymmetry; 2300 std::unique_ptr<RooAbsCategoryLValue> asymPos{static_cast<RooAbsCategoryLValue*>(asymCat.Clone(""asym_pos""))};; 2301 std::unique_ptr<RooAbsCategoryLValue> asymNeg{static_cast<RooAbsCategoryLValue*>(asymCat.Clone(""asym_neg""))};; 2302 asymPos->setIndex(1) ;; 2303 asymNeg->setIndex(-1) ;; 2304 RooCustomizer custPos{*thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:100069,variab,variable,100069,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"mp::HasStatusBar() const; virtual Bool_tTCanvasImp::HasToolBar() const; virtual Bool_tTCanvasImp::HasToolTips() const; virtual voidTCanvasImp::Iconify(); virtual Int_tTCanvasImp::InitWindow(); virtual TClass*TCanvasImp::IsA() const; virtual voidTCanvasImp::RaiseWindow(); virtual voidTCanvasImp::ReallyDelete(); virtual voidTCanvasImp::SetCanvasSize(UInt_t w, UInt_t h); virtual voidTCanvasImp::SetStatusText(const char* text = 0, Int_t partidx = 0); virtual voidTCanvasImp::SetWindowPosition(Int_t x, Int_t y); virtual voidTCanvasImp::SetWindowSize(UInt_t w, UInt_t h); virtual voidTCanvasImp::SetWindowTitle(const char* newTitle); virtual voidTCanvasImp::Show(); virtual voidTCanvasImp::ShowEditor(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowMembers(TMemberInspector& insp) const; virtual voidTCanvasImp::ShowMenuBar(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowStatusBar(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowToolBar(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowToolTips(Bool_t show = kTRUE); virtual voidTCanvasImp::Streamer(TBuffer&); voidTCanvasImp::StreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TQCanvasImp(const TQCanvasImp&). protected:. virtual Bool_tTCanvasImp::IsLocked(); virtual voidTCanvasImp::Lock(); TCanvasImp&TCanvasImp::operator=(const TCanvasImp& ci); virtual voidTCanvasImp::Unlock(). Data Members; protected:. TCanvas*TCanvasImp::fCanvasTCanvas associated with this implementation; TQRootCanvas*fQCanvasPointer to the Qt widget (TQRootCanvas). Class Charts. Inheritance Chart:. TCanvasImp. ←; TQCanvasImp. Function documentation; TQCanvasImp(TCanvas *c, const char *name, UInt_t width, UInt_t height); TQCanvasImp ctor. » Author: Denis Bertini 01/11/2000 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/qtgsi:$Id$ » Last generated: 2015-06-02 16:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TQCanvasImp.html:2311,Inherit,Inheritance,2311,root/html604/TQCanvasImp.html,https://root.cern,https://root.cern/root/html604/TQCanvasImp.html,1,['Inherit'],['Inheritance']
Modifiability,"mp::HasStatusBar() const; virtual Bool_tTCanvasImp::HasToolBar() const; virtual Bool_tTCanvasImp::HasToolTips() const; virtual voidTCanvasImp::Iconify(); virtual Int_tTCanvasImp::InitWindow(); virtual TClass*TCanvasImp::IsA() const; virtual voidTCanvasImp::RaiseWindow(); virtual voidTCanvasImp::ReallyDelete(); virtual voidTCanvasImp::SetCanvasSize(UInt_t w, UInt_t h); virtual voidTCanvasImp::SetStatusText(const char* text = 0, Int_t partidx = 0); virtual voidTCanvasImp::SetWindowPosition(Int_t x, Int_t y); virtual voidTCanvasImp::SetWindowSize(UInt_t w, UInt_t h); virtual voidTCanvasImp::SetWindowTitle(const char* newTitle); virtual voidTCanvasImp::Show(); virtual voidTCanvasImp::ShowEditor(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowMembers(TMemberInspector& insp) const; virtual voidTCanvasImp::ShowMenuBar(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowStatusBar(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowToolBar(Bool_t show = kTRUE); virtual voidTCanvasImp::ShowToolTips(Bool_t show = kTRUE); virtual voidTCanvasImp::Streamer(TBuffer&); voidTCanvasImp::StreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TQCanvasImp(const TQCanvasImp&). protected:. virtual Bool_tTCanvasImp::IsLocked(); virtual voidTCanvasImp::Lock(); TCanvasImp&TCanvasImp::operator=(const TCanvasImp& ci); virtual voidTCanvasImp::Unlock(). Data Members; protected:. TCanvas*TCanvasImp::fCanvasTCanvas associated with this implementation; TQRootCanvas*fQCanvasPointer to the Qt widget (TQRootCanvas). Class Charts. Inheritance Chart:. TCanvasImp. ←; TQCanvasImp. Function documentation; TQCanvasImp(TCanvas *c, const char *name, UInt_t width, UInt_t height); TQCanvasImp ctor. » Author: Denis Bertini 01/11/2000 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/qtgsi:$Id$ » Last generated: 2015-06-30 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQCanvasImp.html:2311,Inherit,Inheritance,2311,root/html602/TQCanvasImp.html,https://root.cern,https://root.cern/root/html602/TQCanvasImp.html,1,['Inherit'],['Inheritance']
Modifiability,"mpBase::fConditionmatrix condition number; Double_tTDecompBase::fDet1determinant mantissa; Double_tTDecompBase::fDet2determinant exponent for powers of 2; Int_tTDecompBase::fRowLwbRow lower bound of decomposed matrix; TVectorDfSigdiagonal of diagonal matrix; Double_tTDecompBase::fTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1; TMatrixDfUorthogonal matrix; TMatrixDfVorthogonal matrix; static TDecompBase::EMatrixDecompStatTDecompBase::kCondition; static TDecompBase::EMatrixDecompStatTDecompBase::kDecomposed; static TDecompBase::EMatrixDecompStatTDecompBase::kDetermined; static TDecompBase::EMatrixDecompStatTDecompBase::kInit; static TDecompBase::EMatrixDecompStatTDecompBase::kMatrixSet; static TDecompBase::EMatrixDecompStatTDecompBase::kPatternSet; static TDecompBase::EMatrixDecompStatTDecompBase::kSingular; static TDecompBase::EMatrixDecompStatTDecompBase::kValuesSet; static TDecompBase::(anonymous)TDecompBase::kWorkMax. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDecompSVD(Int_t nrows, Int_t ncols); Constructor for (nrows x ncols) matrix. TDecompSVD(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb); Constructor for ([row_lwb..row_upb] x [col_lwb..col_upb]) matrix. TDecompSVD(const TMatrixD& m, Double_t tol = 0.); Constructor for general matrix A . TDecompSVD(const TDecompSVD& another); Copy constructor. Bool_t Decompose(); SVD decomposition of matrix; If the decomposition succeeds, bit kDecomposed is set , otherwise kSingular. Bool_t Bidiagonalize(TMatrixD& v, TMatrixD& u, TVectorD& sDiag, TVectorD& oDiag); Bidiagonalize the (m x n) - matrix a (stored in v) through a series of Householder; transformations applied to the left (Q^T) and to the right (H) of a ,; so that A = Q . C . H^T with matrix C bidiagonal. Q and H are orthogonal matrices . Output:; v - (n x n) - matrix H in the (n x n) part of v; u - (m x m) - matrix Q^T; sDiag - diagonal of the (m x n) C; oDiag - off-diagonal elem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDecompSVD.html:9390,Inherit,Inheritance,9390,root/html602/TDecompSVD.html,https://root.cern,https://root.cern/root/html602/TDecompSVD.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mpDist(); static TClass*Class(); virtual TUnuranEmpDist*Clone() const; const vector<double>&Data() const; virtual TClass*IsA() const; boolIsBinned() const; doubleLowerBin() const; unsigned intNDim() const; TUnuranEmpDist&operator=(const TUnuranEmpDist& rhs); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TUnuranEmpDist(const TUnuranEmpDist&); TUnuranEmpDist(const TH1* h1 = 0, bool useBuffer = true); TUnuranEmpDist(unsigned int n, double* x); TUnuranEmpDist(unsigned int n, double* x, double* y); TUnuranEmpDist(unsigned int n, double* x, double* y, double* z); doubleUpperBin() const. Data Members; private:. boolfBinnedflag for binned/unbinned data; vector<double>fDatapointer to the data vector (used for generation from un-binned data); unsigned intfDimdata dimensionality; doublefMaxmax values (used in the binned case); doublefMinmin values (used in the binned case). Class Charts. Inheritance Chart:. TUnuranBaseDist. ←; TUnuranEmpDist. Function documentation; TUnuranEmpDist(const TH1* h1 = 0, bool useBuffer = true); Constructor from a TH1 objects.; The buffer of the histo, if available, can be used for; the estimation of the parent distribution using smoothing. TUnuranEmpDist(unsigned int n, double* x); constructor for 1D unbinned data. TUnuranEmpDist(unsigned int n, double* x, double* y); constructor for 2D unbinned data. TUnuranEmpDist(unsigned int n, double* x, double* y, double* z); constructor for 3D unbinned data. TUnuranEmpDist(const TUnuranEmpDist& ); Implementation of copy ctor using aassignment operator. virtual ~TUnuranEmpDist(). Destructor (no operations). {}. TUnuranEmpDist * Clone() const. Clone (required by base class). { return new TUnuranEmpDist(*this); }. const std::vector<double> & Data() const. Return reference to data vector (unbinned or binned data). { return fData; }. bool IsBinned() const. Flag to control if data are binned. { return fBinned; }. d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnuranEmpDist.html:1381,Inherit,Inheritance,1381,root/html602/TUnuranEmpDist.html,https://root.cern,https://root.cern/root/html602/TUnuranEmpDist.html,1,['Inherit'],['Inheritance']
Modifiability,"mpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBayesClassifier(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodBayesClassifier(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Variable can handle classification with 2 classes. void Init( void ); default initialisation. void DeclareOptions(); define the options (their key words) that can be set in the option string. void ProcessOptions(); the option string is decoded, for availabel options see ""DeclareOptions"". ~MethodBayesClassifier( void ); destructor. void Train( void ); some training. void AddWeightsXMLTo(void* parent) const. void ReadWeightsFromStream(istream& istr); read back the training results from a file (stream). Double_t Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBayesClassifier.html:16039,Inherit,Inheritance,16039,root/html532/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBayesClassifier.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mpOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooRealProxy_ndof; RooRealProxy_x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooChiSquarePdf(). RooChiSquarePdf(const char* name, const char* title, RooAbsReal& x, RooAbsReal& ndof). RooChiSquarePdf(const RooChiSquarePdf& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; No analytical calculation available (yet) of integrals over subranges. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. TObject* clone(const char* newname) const; { return new RooChiSquarePdf(*this, newname); }. virtual ~RooChiSquarePdf(); { }. » Last changed: Tue Jun 30 14:32:08 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooChiSquarePdf.html:44826,Inherit,Inheritance,44826,root/html602/RooChiSquarePdf.html,https://root.cern,https://root.cern/root/html602/RooChiSquarePdf.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mpOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,double>funcFunction pointer reference; RooRealProxyxArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction1Ref<VO,VI> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registered name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction1Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:14:44 2015 »",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1Binding_double_double_.html:36276,Inherit,Inheritance,36276,root/html534/RooCFunction1Binding_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1Binding_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mpProxy<double>&operator=(double); ROOT::TClaImpProxy<double>TClaImpProxy<double>(double). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(double ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TClaImpProxy_double_.html:4103,Inherit,Inheritance,4103,root/html534/ROOT__TClaImpProxy_double_.html,https://root.cern,https://root.cern/root/html534/ROOT__TClaImpProxy_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mpact) const override;  Write value to stream. ;  ;  Public Member Functions inherited from RooAbsRealLValue;  RooAbsRealLValue ();  ;  RooAbsRealLValue (const char *name, const char *title, const char *unit="""");  Constructor. ;  ;  RooAbsRealLValue (const RooAbsRealLValue &other, const char *name=nullptr);  Copy constructor. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel, const RooAbsBinning &bins) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH1F * createHistogram (const char *name, const char *yAxisLabel, double xlo, double xhi, Int_t nBins) const;  Create an empty 1D-histogram with appropriate scale and labels for this variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel, const RooAbsBinning **bins) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH2F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const char *zAxisLabel=nullptr, double *xlo=nullptr, double *xhi=nullptr, Int_t *nBins=nullptr) const;  Create an empty 2D-histogram with appropriate scale and labels for this variable (x) and the specified y variable. ;  ; TH3F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, const char *tAxisLabel, const RooAbsBinning **bins) const;  ; TH3F * createHistogram (const char *name, const RooAbsRealLValue &yvar, const RooAbsRealLValue &zvar, const char *tAxisLabel, double *xlo=nullptr, double *xhi=nullptr, Int_t *nBins=nullptr) const;  Create an empty 3D-histogram with appropriate scale and labels for this variable (x) and the specified y,z variables. ;  ; TH1 * createHistogram (const char *name, const RooCmdArg &arg1={}, const RooCmdArg &arg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:5280,variab,variable,5280,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,2,['variab'],['variable']
Modifiability,"mpare (const TObjLinkPtr_t &l1, const TObjLinkPtr_t &l2);  Compares the objects stored in the TObjLink objects. ;  ; TObjLinkPtr_t NewLink (TObject *obj, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjLink. ;  ; TObjLinkPtr_t NewLink (TObject *obj, TObjLink *prev);  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, const TObjLinkPtr_t &prev=nullptr);  Return a new TObjOptLink (a TObjLink that also stores the option). ;  ; TObjLinkPtr_t NewOptLink (TObject *obj, Option_t *opt, TObjLink *prev);  ;  Protected Member Functions inherited from TSeqCollection;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; TQCommand * fCurrent;  ; TObjLink * fCursor;  ; UInt_t fLimit;  ; TList * fLogBook;  ; Bool_t fLogging;  ;  Protected Attributes inherited from TQCommand; TString fName;  ; Bool_t fNewDelete;  ; Int_t fNRargs;  ; Int_t fNUargs;  ; void * fObject;  ; TQConnection * fRedo;  ; Long_t * fRedoArgs;  ; Int_t fState;  ; Int_t fStatus;  ; TString fTitle;  ; TQConnection * fUndo;  ; Long_t * fUndoArgs;  ;  Protected Attributes inherited from TList; Bool_t fAscending;  cache to speedup sequential calling of Before() and After() functions ;  ; TObjLinkWeakPtr_t fCache;  pointer to last entry in linked list ;  ; TObjLinkPtr_t fFirst;  ; TObjLinkPtr_t fLast;  pointer to first entry in linked list ;  ;  Protected Attribut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQUndoManager.html:24814,inherit,inherited,24814,doc/master/classTQUndoManager.html,https://root.cern,https://root.cern/doc/master/classTQUndoManager.html,1,['inherit'],['inherited']
Modifiability,"mpared to nEvents**1/5. ;  ; TKDE operator= (TKDE &kde);  ; void ReInit ();  ; void SetBinCentreData (Double_t xmin, Double_t xmax);  ; void SetBinCountData ();  ; void SetCanonicalBandwidths ();  ; void SetData (const Double_t *data, const Double_t *weights);  ; void SetDrawOptions (const Option_t *option, TString &plotOpt, TString &drawOpt);  ; void SetHistogram ();  ; void SetKernel ();  ; void SetKernelFunction (KernelFunction_Ptr kernfunc=nullptr);  ; void SetKernelSigmas2 ();  ; void SetMean ();  ; void SetMirror ();  ; void SetMirroredEvents ();  Intgernal function to mirror the data. ;  ; void SetOptions (const Option_t *option, Double_t rho);  ; void SetSigma (Double_t R);  ; void SetUseBins ();  ; void SetUserCanonicalBandwidth ();  ; void SetUserKernelSigma2 ();  ; Double_t UpperConfidenceInterval (const Double_t *x, const Double_t *p) const;  Valid if the bandwidth is small compared to nEvents**1/5. ;  . Private Attributes; Double_t fAdaptiveBandwidthFactor;  Geometric mean of the kernel density estimation from the data for adaptive iteration. ;  ; TF1 * fApproximateBias;  Output Kernel Density Estimation lower confidence interval PDF function. ;  ; Bool_t fAsymLeft;  ; Bool_t fAsymRight;  ; std::vector< Double_t > fBinCount;  Number of events per bin for binned data option. ;  ; EBinning fBinning;  ; std::vector< Double_t > fCanonicalBandwidths;  ; std::vector< Double_t > fData;  Data events. ;  ; std::vector< Double_t > fEvents;  Original data storage. ;  ; std::vector< Double_t > fEventWeights;  Original data weights. ;  ; TGraphErrors * fGraph;  Output Kernel Density Estimation approximate bias. ;  ; EIteration fIteration;  ; std::unique_ptr< TKernel > fKernel;  ! internal kernel class. Transient because it is recreated after reading from a file ;  ; KernelFunction_Ptr fKernelFunction;  ! pointer to kernel function ;  ; std::vector< Double_t > fKernelSigmas2;  ; EKernelType fKernelType;  Graph with the errors. ;  ; TF1 * fLowerPDF;  Output Kernel Den",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKDE.html:18521,adapt,adaptive,18521,doc/master/classTKDE.html,https://root.cern,https://root.cern/doc/master/classTKDE.html,1,['adapt'],['adaptive']
Modifiability,"mplate on the contained type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<float,3,4,ROOT::Math::MatRepStd<float,3,4> >::rep_type. Function Members (Methods); public:. ~MatRepStd<float,3,4>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; ROOT::Math::MatRepStd<float,3,4>MatRepStd<float,3,4>(); ROOT::Math::MatRepStd<float,3,4>MatRepStd<float,3,4>(const ROOT::Math::MatRepStd<float,3,4>&); const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<float,3,4>&operator=(const ROOT::Math::MatRepStd<float,3,4>&); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[12]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<float,3,4>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_3_4_.html:1685,Inherit,Inheritance,1685,root/html534/ROOT__Math__MatRepStd_float_3_4_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_3_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mplate on the contained type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<float,4,3,ROOT::Math::MatRepStd<float,4,3> >::rep_type. Function Members (Methods); public:. ~MatRepStd<float,4,3>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; ROOT::Math::MatRepStd<float,4,3>MatRepStd<float,4,3>(); ROOT::Math::MatRepStd<float,4,3>MatRepStd<float,4,3>(const ROOT::Math::MatRepStd<float,4,3>&); const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<float,4,3>&operator=(const ROOT::Math::MatRepStd<float,4,3>&); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[12]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<float,4,3>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_4_3_.html:1685,Inherit,Inheritance,1685,root/html534/ROOT__Math__MatRepStd_float_4_3_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_4_3_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mplate on the contained type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<float,4,4,ROOT::Math::MatRepStd<float,4,4> >::rep_type. Function Members (Methods); public:. ~MatRepStd<float,4,4>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; ROOT::Math::MatRepStd<float,4,4>MatRepStd<float,4,4>(); ROOT::Math::MatRepStd<float,4,4>MatRepStd<float,4,4>(const ROOT::Math::MatRepStd<float,4,4>&); const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<float,4,4>&operator=(const ROOT::Math::MatRepStd<float,4,4>&); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[16]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<float,4,4>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_4_4_.html:1685,Inherit,Inheritance,1685,root/html534/ROOT__Math__MatRepStd_float_4_4_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_4_4_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mplate on the contained type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<float,5,5,ROOT::Math::MatRepStd<float,5,5> >::rep_type. Function Members (Methods); public:. ~MatRepStd<float,5,5>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; ROOT::Math::MatRepStd<float,5,5>MatRepStd<float,5,5>(); ROOT::Math::MatRepStd<float,5,5>MatRepStd<float,5,5>(const ROOT::Math::MatRepStd<float,5,5>&); const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<float,5,5>&operator=(const ROOT::Math::MatRepStd<float,5,5>&); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[25]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<float,5,5>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_5_5_.html:1685,Inherit,Inheritance,1685,root/html534/ROOT__Math__MatRepStd_float_5_5_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_5_5_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mplate on the contained type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<float,6,6,ROOT::Math::MatRepStd<float,6,6> >::rep_type. Function Members (Methods); public:. ~MatRepStd<float,6,6>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; ROOT::Math::MatRepStd<float,6,6>MatRepStd<float,6,6>(); ROOT::Math::MatRepStd<float,6,6>MatRepStd<float,6,6>(const ROOT::Math::MatRepStd<float,6,6>&); const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<float,6,6>&operator=(const ROOT::Math::MatRepStd<float,6,6>&); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[36]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<float,6,6>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_6_6_.html:1685,Inherit,Inheritance,1685,root/html534/ROOT__Math__MatRepStd_float_6_6_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_6_6_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mplate on the contained type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<float,7,7,ROOT::Math::MatRepStd<float,7,7> >::rep_type. Function Members (Methods); public:. ~MatRepStd<float,7,7>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; ROOT::Math::MatRepStd<float,7,7>MatRepStd<float,7,7>(); ROOT::Math::MatRepStd<float,7,7>MatRepStd<float,7,7>(const ROOT::Math::MatRepStd<float,7,7>&); const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<float,7,7>&operator=(const ROOT::Math::MatRepStd<float,7,7>&); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[49]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<float,7,7>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_7_7_.html:1685,Inherit,Inheritance,1685,root/html534/ROOT__Math__MatRepStd_float_7_7_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_7_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mplate on the contained type T, the number of rows and the number of columns.; Its data member is an array T[nrows*ncols] containing the matrix data.; The data are stored in the row-major C convention.; For example, for a matrix, M, of size 3x3, the data \f$ \left[a_0,a_1,a_2,.......,a_7,a_8 \right] \f$d are stored in the following order:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_2 \\; a_3 & a_4 & a_5 \\; a_6 & a_7 & a_8 \end{array} \right); \f]. @ingroup MatRep. This class is also known as (typedefs to this class)ROOT::Math::SMatrix<float,9,7,ROOT::Math::MatRepStd<float,9,7> >::rep_type. Function Members (Methods); public:. ~MatRepStd<float,9,7>(); floatapply(unsigned int i) const; float*Array(); const float*Array() const; ROOT::Math::MatRepStd<float,9,7>MatRepStd<float,9,7>(); ROOT::Math::MatRepStd<float,9,7>MatRepStd<float,9,7>(const ROOT::Math::MatRepStd<float,9,7>&); const float&operator()(unsigned int i, unsigned int j) const; float&operator()(unsigned int i, unsigned int j); ROOT::Math::MatRepStd<float,9,7>&operator=(const ROOT::Math::MatRepStd<float,9,7>&); float&operator[](unsigned int i); const float&operator[](unsigned int i) const. Data Members; public:. enum { kRows; kCols; kSize; };. private:. floatfArray[63]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const T& operator()(unsigned int i, unsigned int j) const. T& operator()(unsigned int i, unsigned int j). T& operator[](unsigned int i); { return fArray[i]; }. const T& operator[](unsigned int i) const; { return fArray[i]; }. T apply(unsigned int i) const; { return fArray[i]; }. T* Array(); { return fArray; }. const T* Array() const; { return fArray; }. MatRepStd<T, D1, D2>& operator=(const ROOT::Math::MatRepStd<float,9,7>& ). » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_9_7_.html:1685,Inherit,Inheritance,1685,root/html534/ROOT__Math__MatRepStd_float_9_7_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__MatRepStd_float_9_7_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mplate<typename T > ; T GetTypedValueSubArray (Int_t i=0, Int_t j=0) const;  ; const char * GetTypeName () const override;  ; Double_t GetValue (Int_t i=0) const override;  ; Long64_t GetValueLong64 (Int_t i=0) const override;  ; LongDouble_t GetValueLongDouble (Int_t i=0) const override;  ; void * GetValuePointer () const override;  ; bool IncludeRange (TLeaf *) override;  Copy/set fMinimum and fMaximum to include/be wide than those of the parameter. ;  ; TClass * IsA () const override;  ; bool IsOnTerminalBranch () const override;  Return true if this leaf is does not have any sub-branch/leaf. ;  ; void PrintValue (Int_t i=0) const override;  ; bool ReadBasketFast (TBuffer &, Long64_t) override;  Deserialize N events from an input buffer. ;  ; void SetLeafCount (TLeaf *leaf) override;  Set the leaf count of this leaf. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual void Export (TClonesArray *, Int_t);  ; virtual void FillBasket (TBuffer &b);  Pack leaf elements in Basket output buffer. ;  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, Long64_t len);  If this branch is a branch count, return the set of collection size f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafElement.html:2488,inherit,inherited,2488,doc/master/classTLeafElement.html,https://root.cern,https://root.cern/doc/master/classTLeafElement.html,1,['inherit'],['inherited']
Modifiability,"mplate<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTButton.html:39640,inherit,inherited,39640,doc/master/classTButton.html,https://root.cern,https://root.cern/doc/master/classTButton.html,8,['inherit'],['inherited']
Modifiability,mplates. ; Definition at line 142 of file TROOT.h. ◆ fFunctions. TCollection* TROOT::fFunctions. protected . List of analytic functions. ; Definition at line 151 of file TROOT.h. ◆ fgDirLevel. Int_t TROOT::fgDirLevel = 0. staticprivate . Indentation level for ls() ; Definition at line 102 of file TROOT.h. ◆ fGeometries. TSeqCollection* TROOT::fGeometries. protected . List of geometries. ; Definition at line 154 of file TROOT.h. ◆ fGitBranch. TString TROOT::fGitBranch. protected . Git branch. ; Definition at line 121 of file TROOT.h. ◆ fGitCommit. TString TROOT::fGitCommit. protected . Git commit SHA1 of built. ; Definition at line 120 of file TROOT.h. ◆ fGitDate. TString TROOT::fGitDate. protected . Date and time when make was run. ; Definition at line 122 of file TROOT.h. ◆ fGlobalFunctions. TListOfFunctions* TROOT::fGlobalFunctions. protected . List of global functions. ; Definition at line 144 of file TROOT.h. ◆ fGlobals. TListOfDataMembers* TROOT::fGlobals. protected . List of global variables. ; Definition at line 143 of file TROOT.h. ◆ fgRootInit. Bool_t TROOT::fgRootInit = kFALSE. staticprivate . Singleton initialization flag. ; Definition at line 103 of file TROOT.h. ◆ fInterpreter. TInterpreter* TROOT::fInterpreter. protected . Command interpreter. ; Definition at line 125 of file TROOT.h. ◆ fInterrupt. Bool_t TROOT::fInterrupt. protected . True if macro should be interrupted. ; Definition at line 134 of file TROOT.h. ◆ fIsWebDisplay. Bool_t TROOT::fIsWebDisplay. protected . True if session uses web widgets. ; Definition at line 128 of file TROOT.h. ◆ fIsWebDisplayBatch. Bool_t TROOT::fIsWebDisplayBatch. protected . True if web widgets are not displayed. ; Definition at line 129 of file TROOT.h. ◆ fLineIsProcessing. Int_t TROOT::fLineIsProcessing. private . To synchronize multi-threads. ; Definition at line 100 of file TROOT.h. ◆ fMappedFiles. TSeqCollection* TROOT::fMappedFiles. protected . List of memory mapped files. ; Definition at line 147 of file TROO,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:84724,variab,variables,84724,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['variab'],['variables']
Modifiability,"mple 45 draws the same results - i.e. an histogram whose labels are the string value of ‘mystring’:; tree->Draw(""mybr.mystring.c_str()"");; or; tree->Draw(""mybr.mytstring.Data()"");. tree->Draw(""myTimeStamp"");. You can plot plot objects of any class which has either AsDouble or AsString (AsDouble has priority). For such a class (for example TTimeStamp), the line 46 will plot the same as:; tree->Draw(""myTimeStamp.AsDouble"");; AsString can be returning either a char*, or a TString or an std::string.; 12.20.8 Multiple variables visualisation; This section presents the visualization technique available in ROOT to represent multiple variables (>4) data sets.; 12.20.8.1 Spider (Radar) Plots; Spider plots (sometimes called “web-plots” or “radar plots”) are used to compare series of data points (events). They use the human ability to spot un-symmetry. Example of spider plot. Variables are represented on individual axes displayed along a circle. For each variable the minimum value sits on the circle’s center, and the maximum on the circle’s radius. Spider plots are not suitable for an accurate graph reading since, by their nature, it can be difficult to read out very detailed values, but they give quickly a global view of an event in order to compare it with the others. In ROOT the spider plot facility is accessed from the tree viewer GUI. The variables to be visualized are selected in the tree viewer and can be scanned using the spider plot button. The tree viewer Graphical User Interface and the Spider Plot Editor. The spider plot graphics editor provides two tabs to interact with the spider plots’ output: the tab “Style” defining the spider layout and the tab “Browse” to navigate in the tree.; 12.20.8.2 Parallel Coordinates Plots. The Parallel Coordinates Plots are a common way of studying and visualizing multiple variables data sets. They were proposed by in A.Inselberg in 1981 as a new way to represent multi-dimensional information. In traditional Cartesian coordinates, ax",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:609099,variab,variable,609099,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"mple of a Graph with Error Bars"");; bar->AddButton(""tornado"", "".x graphics/tornado.C"", ""Examples of 3-D PolyMarkers"");; bar->AddButton(""geometry"", "".x geom/rootgeom.C"", ""Example of TGeoManager drawing"");; bar->AddButton(""file"", "".x io/file.C"", ""The ROOT File Format"");; bar->AddButton(""fildir"", "".x io/fildir.C"", ""The ROOT File, Directories and Keys"");; bar->AddButton(""tree"", "".x tree/tree.C"", ""The Tree Data Structure"");; bar->AddButton(""ntuple1"", "".x tree/ntuple1.C"", ""Ntuples and Selections"");; bar->AddButton(""benchmarks"", "".x legacy/benchmarks.C"", ""Runs several tests and produces an benchmark report"");; bar->AddButton(""rootmarks"", "".x legacy/rootmarks.C"", ""Prints an Estimated ROOTMARKS for Your Machine"");; bar->SetButtonWidth(90);; bar->Show();; gROOT->SaveContext();; }; gInterpreter#define gInterpreterDefinition TInterpreter.h:573; gROOT#define gROOTDefinition TROOT.h:406; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TControlBarA Control Bar is a fully user configurable tool which provides fast access to frequently used operati...Definition TControlBar.h:26; TControlBar::Showvoid Show()Show control bar.Definition TControlBar.cxx:317; TControlBar::SetButtonWidthvoid SetButtonWidth(UInt_t width)Sets the width in pixels for control bar button.Definition TControlBar.cxx:277; TControlBar::AddButtonvoid AddButton(TControlBarButton *button)Add button.Definition TControlBar.cxx:141; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TSystem::GetDirNamevirtual TString GetDirName(const char *pathname)Return the directory name in pathname.Definition TSystem.cxx:1032; AuthorRene Brun ; Definition in file demos.C. tutorialsdemos.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxyg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/demos_8C.html:2895,config,configurable,2895,doc/master/demos_8C.html,https://root.cern,https://root.cern/doc/master/demos_8C.html,1,['config'],['configurable']
Modifiability,"mple to be used for the; parameterization.; The mean of the variables and quantity is calculated on the fly,; as outlined in TPrincipal::AddRow.; This sample should be representive of the problem at hand.; Please note, that if no error is given Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void AddTestRow(const Double_t* x, Double_t D, Double_t E = 0); Add a row consisting of fNVariables independent variables, the; known, dependent quantity, and optionally, the square error in; the dependent quantity, to the test sample to be used for the; test of the parameterization.; This sample needn't be representive of the problem at hand.; Please note, that if no error is given Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void Browse(TBrowser* b); Browse the TMultiDimFit object in the TBrowser. void Clear(Option_t* option = """"); Clear internal structures and variables. Double_t Eval(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalError(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization error at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalControl(const Int_t* powers) const; PRIVATE METHOD:; Calculate the control parameter from the passed powers. Double_t EvalFactor(Int_t p, Double_t x) const; PRIVATE METHOD:; Evaluate function with power p at variable value x. void FindParameterization(Option_t* option = """"); Find the parameterization. Options:; None so far. For detailed description of what this entails, please refer to the; class description. void Fit(Option_t* option = """"); Try to fit the found parameterisation to the test sample. Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:26634,variab,variables,26634,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,10,['variab'],['variables']
Modifiability,"mple tree analysis ;  parallelcoord.C Script illustrating the use of the TParalleCoord class ;  parallelcoordtrans.C Use of transparency with ||-Coord ;  printSizes.C This macro can be used to get aggregate information on the size take on disk or in memory by the various branches in a TTree ;  run_h1analysis.C Macro driving the analysis can specify file name and type ;  spider.C TSpider example ;  staff.C Create a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unfold;  testUnfold1.C Test program for the classes TUnfold and related ;  testUnfold2.C Test program as an example for a user specific regularisation scheme ;  testUnfold3.C Simple Test program for the class TUnfoldDensity ;  testUnfold4.C Test program for the class TUnfoldSys ;  testUnfold5a.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5b.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5c.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5d.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold6.C Test program for the class TUnfoldBinning ;  testUnfold7a.C Test program for the classes TUnfoldDensity and TUnfo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:159268,variab,variable,159268,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,2,['variab'],['variable']
Modifiability,"mple tree analysis ;  parallelcoord.C Script illustrating the use of the TParalleCoord class ;  parallelcoordtrans.C Use of transparency with ||-Coord ;  printSizes.C This macro can be used to get aggregate information on the size take on disk or in memory by the various branches in a TTree ;  run_h1analysis.C Macro driving the analysis can specify file name and type ;  spider.C TSpider example ;  staff.C Create a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unuran;  unuranDemo.CExample macro to show unuran capabilities The results are compared with what is obtained using TRandom or TF1::GetRandom The macro is divided in 3 parts: ;  unuranFoamTest.CThis program must be compiled and executed with Aclic as follows ;  ► v7;  concurrentfill.cxx;  draw.cxx;  histops.cxx;  histspeedtest.cxx;  perf.cxx;  perfcomp.cxx;  simple.cxx;  ► xml;  DOMParsePerson.C ROOT implementation of a XML DOM Parser ;  DOMRecursive.C ROOT implementation of a XML DOM Parser ;  SAXHandler.C ROOT implementation of a simple SAX Handler ;  xmlnewfile.C Example to create a new xml file with the TXMLEngine class ;  xmlreadfile.C Example to read and parse any xml file, supported by TXMLEngine class The input file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:157415,variab,variable,157415,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['variab'],['variable']
Modifiability,"mple, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boosting). Double_t CheckEvent(const TMVA::Event& , Bool_t UseYesNoLeaf = kFALSE) const; the event e is put into the decision tree (starting at the root node); and the output is NodeType (signal) or (background) of the final node (basket); in which the given events ends up. I.e. the result of the classification if; the event for this decision tree. Double_t SamplePurity(TMVA::DecisionTree::EventList eventSample); calculates the purity S/(S+B) of a given event sample. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); returns the relative improtance of variable ivar. DecisionTreeNode* GetRoot() const; Retrieves the address of the root node. { return dynamic_cast<TMVA::DecisionTreeNode*>(fRoot); }. DecisionTreeNode * CreateNode(UInt_t ) const; { return new DecisionTreeNode(); }. BinaryTree* CreateTree() const; { return new DecisionTree(); }. const char* ClassName() const; { return ""DecisionTree""; }. Double_t TrainNode(const TMVA::DecisionTree::EventList& eventSample, TMVA::DecisionTreeNode* node); determine the way how a node is split (which variable, which cut value). { return TrainNodeFast( eventSample, node ); }. void SetPruneMethod(TMVA::DecisionTree::EPruneMethod m = kCostComplexityPruning); { fPruneMethod = m; }. void SetPruneStrength(Double_t p); manage the pruning strength parameter (iff < 0 -> automate the pruning process). { fPruneStrength = p; }. Double_t GetPruneStrength() const; { return fPruneStrength; }. void SetNodePurityLimit(Double_t p); { fNodePurityLimit = p; }. Double_t GetNodePuri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__DecisionTree.html:14854,variab,variable,14854,root/html530/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html530/TMVA__DecisionTree.html,3,['variab'],['variable']
Modifiability,"mple, TMVA::DecisionTreeNode* node). TMVA::DecisionTreeNode* GetEventNode(const TMVA::Event& e) const; get the pointer to the leaf node where a particular event ends up in...; (used in gradient boosting). Double_t CheckEvent(const TMVA::Event* , Bool_t UseYesNoLeaf = kFALSE) const; the event e is put into the decision tree (starting at the root node); and the output is NodeType (signal) or (background) of the final node (basket); in which the given events ends up. I.e. the result of the classification if; the event for this decision tree. Double_t SamplePurity(TMVA::DecisionTree::EventList eventSample); calculates the purity S/(S+B) of a given event sample. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); returns the relative improtance of variable ivar. DecisionTreeNode* GetRoot() const; Retrieves the address of the root node. { return dynamic_cast<TMVA::DecisionTreeNode*>(fRoot); }. DecisionTreeNode * CreateNode(UInt_t ) const; { return new DecisionTreeNode(); }. BinaryTree* CreateTree() const; { return new DecisionTree(); }. const char* ClassName() const; { return ""DecisionTree""; }. Double_t TrainNode(const TMVA::DecisionTree::EventConstList& eventSample, TMVA::DecisionTreeNode* node); determine the way how a node is split (which variable, which cut value). { return TrainNodeFast( eventSample, node ); }. void SetPruneMethod(TMVA::DecisionTree::EPruneMethod m = kCostComplexityPruning); { fPruneMethod = m; }. void SetPruneStrength(Double_t p); manage the pruning strength parameter (iff < 0 -> automate the pruning process). { fPruneStrength = p; }. Double_t GetPruneStrength() const; { return fPruneStrength; }. void SetNodePurityLimit(Double_t p); { fNodePurityLimit = p; }. Double_t GetNod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__DecisionTree.html:15066,variab,variable,15066,root/html534/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html534/TMVA__DecisionTree.html,6,['variab'],['variable']
Modifiability,"mplementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ; Then if the resulting value is less than -rmax, replace it by -rmax. ; Definition at line 357 of file TQpResidual.cxx. ◆ operator=(). TQpResidual & TQpResidual::operator= ; (; const TQpResidual & ; source). Assignment operator. ; Definition at line 378 of file TQpResidual.cxx. ◆ Project_r3(). void TQpResidual::Project_r3 ; (; Double_t ; rmin, . Double_t ; rmax . ). Perform the projection operation required by Gondzio algorithm: replace each component r3_i of the complementarity component of the residuals by r3p_i-r3_i, where r3p_i is the projection of r3_i onto the box [rmin, rmax]. ; Then if the resulting value is less than -rmax, replace it by -rmax. ; Definition at line 299 of file TQpResidual.cxx. ◆ Set_r3_xz_alpha(). void TQpResidual::Set_r3_xz_alpha ; (; TQpVar * ; vars, . Double_t ; alpha . ). Set the ""complementarity"" component of the residuals to the pairwise products of the complementary variables plus a constant alpha . ; Definition at line 257 of file TQpResidual.cxx. ◆ ValidNonZeroPattern(). Bool_t TQpResidual::ValidNonZeroPattern ; (; ). Check if vector elements as selected through array indices are non-zero. ; Definition at line 323 of file TQpResidual.cxx. Member Data Documentation. ◆ fCloIndex. TVectorD TQpResidual::fCloIndex. protected . Definition at line 83 of file TQpResidual.h. ◆ fCupIndex. TVectorD TQpResidual::fCupIndex. protected . Definition at line 82 of file TQpResidual.h. ◆ fDualityGap. Double_t TQpResidual::fDualityGap. protected . Definition at line 66 of file TQpResidual.h. ◆ fMclo. Double_t TQpResidual::fMclo. protected . Definition at line 77 of file TQpResidual.h. ◆ fMcup. Double_t TQpResidual::fMcup. protected . Definition at line 76 of file TQpResidual.h. ◆ fMy. Int_t TQpResidual::fMy. protected . Definition at line 71 of file TQpResidual.h. ◆ fMz. Int_t TQpResidual::fMz. protected . Definition at line 72 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpResidual.html:15536,variab,variables,15536,doc/master/classTQpResidual.html,https://root.cern,https://root.cern/doc/master/classTQpResidual.html,1,['variab'],['variables']
Modifiability,"mplemented from TGWindow.; Definition at line 201 of file TSessionViewer.h. ◆ GetPortNumber(). Int_t TSessionServerFrame::GetPortNumber ; (; ); const. inline . Definition at line 203 of file TSessionViewer.h. ◆ GetUserName(). const char * TSessionServerFrame::GetUserName ; (; ); const. inline . Definition at line 206 of file TSessionViewer.h. ◆ HandleExpose(). Bool_t TSessionServerFrame::HandleExpose ; (; Event_t * ; event). overridevirtual . Handle expose event in server frame. ; Reimplemented from TGWindow.; Definition at line 352 of file TSessionViewer.cxx. ◆ IsA(). TClass * TSessionServerFrame::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGCompositeFrame.; Definition at line 233 of file TSessionViewer.h. ◆ IsSync(). Bool_t TSessionServerFrame::IsSync ; (; ); const. inline . Definition at line 207 of file TSessionViewer.h. ◆ OnBtnAddClicked(). void TSessionServerFrame::OnBtnAddClicked ; (; ). Add newly created session configuration in the list of sessions. ; Definition at line 684 of file TSessionViewer.cxx. ◆ OnBtnConnectClicked(). void TSessionServerFrame::OnBtnConnectClicked ; (; ). Connect to selected server. ; Definition at line 432 of file TSessionViewer.cxx. ◆ OnBtnDeleteClicked(). void TSessionServerFrame::OnBtnDeleteClicked ; (; ). Delete selected session configuration (remove it from the list). ; Definition at line 377 of file TSessionViewer.cxx. ◆ OnBtnNewServerClicked(). void TSessionServerFrame::OnBtnNewServerClicked ; (; ). Reset server configuration fields. ; Definition at line 661 of file TSessionViewer.cxx. ◆ OnConfigFileClicked(). void TSessionServerFrame::OnConfigFileClicked ; (; ). Browse configuration files. ; Definition at line 362 of file TSessionViewer.cxx. ◆ ProcessMessage(). Bool_t TSessionServerFrame::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Process messages for session server frame. ; Used to navigate between text entr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionServerFrame.html:34731,config,configuration,34731,doc/master/classTSessionServerFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionServerFrame.html,1,['config'],['configuration']
Modifiability,"mplemented from TInterpreter.; Definition at line 7615 of file TCling.cxx. ◆ RescanLibraryMap(). Int_t TCling::RescanLibraryMap ; (; ). finalvirtual . Scan again along the dynamic path for library maps. ; Entries for the loaded shared libraries are unloaded first. This can be useful after reseting the dynamic path through TSystem::SetDynamicPath() In case of error -1 is returned, 0 otherwise. ; Implements TInterpreter.; Definition at line 5925 of file TCling.cxx. ◆ Reset(). void TCling::Reset ; (; ). finalvirtual . Pressing Ctrl+C should forward here. ; In the case where we have had continuation requested we must reset it. ; Implements TInterpreter.; Definition at line 3708 of file TCling.cxx. ◆ ResetAll(). void TCling::ResetAll ; (; ). finalvirtual . Reset the Cling state to its initial state. ; Implements TInterpreter.; Definition at line 3724 of file TCling.cxx. ◆ ResetGlobals(). void TCling::ResetGlobals ; (; ). finalvirtual . Reset in Cling the list of global variables to the state saved by the last call to TCling::SaveGlobalsContext(). ; Note: Right now, all we do is run the global destructors. ; Implements TInterpreter.; Definition at line 3740 of file TCling.cxx. ◆ ResetGlobalVar(). void TCling::ResetGlobalVar ; (; void * ; obj). finalvirtual . Reset the Cling 'user' global objects/variables state to the state saved by the last call to TCling::SaveGlobalsContext(). ; Implements TInterpreter.; Definition at line 3754 of file TCling.cxx. ◆ RewindDictionary(). void TCling::RewindDictionary ; (; ). finalvirtual . Rewind Cling dictionary to the point where it was before executing the current macro. ; This function is typically called after SEGV or ctlr-C after doing a longjmp back to the prompt. ; Implements TInterpreter.; Definition at line 3769 of file TCling.cxx. ◆ RewindInterpreterMutex(). void * TCling::RewindInterpreterMutex ; (; ). Reset the interpreter lock to the state it had before interpreter-related calls happened. ; Definition at line 9664 of file TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:128674,variab,variables,128674,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['variab'],['variables']
Modifiability,"mplemented from TMVA::Configurable. ◆ StreamerNVirtual(). void TMVA::DataLoader::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 214 of file DataLoader.h. ◆ UserAssignEvents(). Bool_t TMVA::DataLoader::UserAssignEvents ; (; UInt_t ; clIndex). Definition at line 311 of file DataLoader.cxx. ◆ VarTransform(). TMVA::DataLoader * TMVA::DataLoader::VarTransform ; (; TString ; trafoDefinition). Transforms the variables and return a new DataLoader with the transformed variables. ; Definition at line 146 of file DataLoader.cxx. Friends And Related Symbol Documentation. ◆ DataLoaderCopy. void DataLoaderCopy ; (; TMVA::DataLoader * ; des, . TMVA::DataLoader * ; src . ). friend . Member Data Documentation. ◆ fAnalysisType. Types::EAnalysisType TMVA::DataLoader::fAnalysisType. private . the training type ; Definition at line 210 of file DataLoader.h. ◆ fATreeEvent. std::vector<Float_t> TMVA::DataLoader::fATreeEvent. private . event variables ; Definition at line 208 of file DataLoader.h. ◆ fATreeType. Int_t TMVA::DataLoader::fATreeType = 0. private . type of event (=classIndex) ; Definition at line 206 of file DataLoader.h. ◆ fATreeWeight. Float_t TMVA::DataLoader::fATreeWeight = 0.0. private . weight of the event ; Definition at line 207 of file DataLoader.h. ◆ fDataAssignType. DataAssignType TMVA::DataLoader::fDataAssignType. private . flags for data assigning ; Definition at line 202 of file DataLoader.h. ◆ fDataInputHandler. DataInputHandler* TMVA::DataLoader::fDataInputHandler. private . -> ; Definition at line 189 of file DataLoader.h. ◆ fDataSetManager. DataSetManager* TMVA::DataLoader::fDataSetManager. private . Definition at line 186 of file DataLoader.h. ◆ fDefaultTrfs. std::vector<TMVA::VariableTransformBase*> TMVA::DataLoader::fDefaultTrfs. private . list of transformations on default DataSet ; Definition at line 191 of file DataLoader.h. ◆ fOptions. TString TMVA::DataLoader::fOptions. private . option string given by constr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader.html:36190,variab,variables,36190,doc/master/classTMVA_1_1DataLoader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader.html,1,['variab'],['variables']
Modifiability,"mplemented from TMinuit.; Definition at line 51 of file MinuitWrapper.cxx. ◆ ExecuteCommand(). Int_t TMVA::MinuitWrapper::ExecuteCommand ; (; const char * ; command, . Double_t * ; args, . Int_t ; nargs . ). Execute a fitter command; command : command string args : list of nargs command arguments. ; Definition at line 64 of file MinuitWrapper.cxx. ◆ GetErrors(). Int_t TMVA::MinuitWrapper::GetErrors ; (; Int_t ; ipar, . Double_t & ; eplus, . Double_t & ; eminus, . Double_t & ; eparab, . Double_t & ; globcc . ). return current errors for a parameter . ipar : parameter number; eplus : upper error; eminus : lower error; eparab : parabolic error; globcc : global correlation coefficient . Definition at line 105 of file MinuitWrapper.cxx. ◆ GetStats(). Int_t TMVA::MinuitWrapper::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ). return global fit parameters . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Definition at line 90 of file MinuitWrapper.cxx. ◆ IsA(). virtual TClass * TMVA::MinuitWrapper::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 69 of file MinuitWrapper.h. ◆ SetFitterTarget(). void TMVA::MinuitWrapper::SetFitterTarget ; (; IFitterTarget & ; target). inline . Definition at line 54 of file MinuitWrapper.h. ◆ SetParameter(). Int_t TMVA::MinuitWrapper::SetParameter ; (; Int_t ; ipar, . const char * ; parname, . Double_t ; value, . Double_t ; verr, . Double_t ; vlow, . Double_t ; vhigh . ). set initial values for a parameter . ipar : parameter number; parname : parameter name; value : initial parameter value; verr : initial error for this parameter; vlow : lower value for the parameter; vhigh : upper value for the parameter . Definition at line 121 of file MinuitWrapper.cxx. ◆ Streamer(). virtual void TMVA::MinuitWrapper::Streame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html:26833,variab,variable,26833,doc/master/classTMVA_1_1MinuitWrapper.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html,1,['variab'],['variable']
Modifiability,"mplemented from TObject.; Definition at line 50 of file TCutG.h. ◆ operator=(). TCutG & TCutG::operator= ; (; const TCutG & ; rhs). Assignment operator. ; Definition at line 254 of file TCutG.cxx. ◆ SavePrimitive(). void TCutG::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitive as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Definition at line 356 of file TCutG.cxx. ◆ SetObjectX(). void TCutG::SetObjectX ; (; TObject * ; obj). virtual . Set the X object (and delete the previous one if any). ; Definition at line 384 of file TCutG.cxx. ◆ SetObjectY(). void TCutG::SetObjectY ; (; TObject * ; obj). virtual . Set the Y object (and delete the previous one if any). ; Definition at line 393 of file TCutG.cxx. ◆ SetVarX(). void TCutG::SetVarX ; (; const char * ; varx). virtual . Set X variable. ; Definition at line 402 of file TCutG.cxx. ◆ SetVarY(). void TCutG::SetVarY ; (; const char * ; vary). virtual . Set Y variable. ; Definition at line 412 of file TCutG.cxx. ◆ Streamer(). void TCutG::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TCutG. ; Reimplemented from TObject.; Definition at line 422 of file TCutG.cxx. ◆ StreamerNVirtual(). void TCutG::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 50 of file TCutG.h. Member Data Documentation. ◆ fObjectX. TObject* TCutG::fObjectX. protected . ! pointer to an object corresponding to X ; Definition at line 25 of file TCutG.h. ◆ fObjectY. TObject* TCutG::fObjectY. protected . ! pointer to an object corresponding to Y ; Definition at line 26 of file TCutG.h. ◆ fVarX. TString TCutG::fVarX. protected . X variable. ; Definition at line 23 of file TCutG.h. ◆ fVarY. TString TCutG::fVarY. protected . Y variable. ; Definition at line 24 of file TCutG.h. Libraries for TCutG:. [legend]; The documentation for this class was generated from the following files:; graf2d/graf/inc/TCutG.h; gr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCutG.html:39659,variab,variable,39659,doc/master/classTCutG.html,https://root.cern,https://root.cern/doc/master/classTCutG.html,1,['variab'],['variable']
Modifiability,"mplemented in TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 282 of file Minimizer.h. ◆ ProvidesError(). virtual bool ROOT::Math::Minimizer::ProvidesError ; (; ); const. inlinevirtual . minimizer provides error and error matrix ; Reimplemented in TFumiliMinimizer, ROOT::Math::GeneticMinimizer, ROOT::Math::GSLMinimizer, ROOT::Math::GSLNLSMinimizer, TLinearMinimizer, TMinuitMinimizer, ROOT::Minuit2::Minuit2Minimizer, and ROOT::Math::RMinimizer.; Definition at line 243 of file Minimizer.h. ◆ ReleaseVariable(). bool ROOT::Math::Minimizer::ReleaseVariable ; (; unsigned int ; ivar). virtual . release an existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 94 of file Minimizer.cxx. ◆ Scan(). bool ROOT::Math::Minimizer::Scan ; (; unsigned int ; ivar, . unsigned int & ; nstep, . double * ; x, . double * ; y, . double ; xmin = 0, . double ; xmax = 0 . ). virtual . scan function minimum for variable i. ; Variable and function must be set before using Scan Return false if an error or if minimizer does not support this functionality ; Reimplemented in TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 195 of file Minimizer.cxx. ◆ SetCovariance(). bool ROOT::Math::Minimizer::SetCovariance ; (; std::span< const double > ; cov, . unsigned int ; nrow . ). virtual . set initial covariance matrix ; set initial values for covariance/error matrix The covariance matrix must be provided in compressed form (row-major ordered upper traingular part) ; Reimplemented in ROOT::Minuit2::Minuit2Minimizer.; Definition at line 25 of file Minimizer.cxx. ◆ SetCovarianceDiag(). bool ROOT::Math::Minimizer::SetCovarianceDiag ; (; std::span< const double > ; d2, . unsigned int ; n . ). virtual . set initial second derivatives ; Reimplemented in ROOT::Minuit2::Minuit2Minimizer.; Definition at line 15 of file Minimizer.cxx. ◆ SetDefaultOptions(). void ROOT::Math::Minimi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:26523,variab,variable,26523,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variable']
Modifiability,"mplementing Hessian computation (re-implemented by Minimizer using it) ; Reimplemented in ROOT::Minuit2::Minuit2Minimizer.; Definition at line 142 of file Minimizer.h. ◆ SetLimitedVariable(). bool ROOT::Math::Minimizer::SetLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower, . double ; upper . ). virtual . set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited variable ; Reimplemented in TFumiliMinimizer, ROOT::Math::BasicMinimizer, TMinuitMinimizer, ROOT::Minuit2::Minuit2Minimizer, and ROOT::Math::GeneticMinimizer.; Definition at line 34 of file Minimizer.cxx. ◆ SetLowerLimitedVariable(). virtual bool ROOT::Math::Minimizer::SetLowerLimitedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step, . double ; lower . ). inlinevirtual . set a new lower limit variable (override if minimizer supports them ) ; Reimplemented in ROOT::Math::BasicMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 175 of file Minimizer.h. ◆ SetMaxFunctionCalls(). void ROOT::Math::Minimizer::SetMaxFunctionCalls ; (; unsigned int ; maxfcn). inline . set maximum of function calls ; Definition at line 331 of file Minimizer.h. ◆ SetMaxIterations(). void ROOT::Math::Minimizer::SetMaxIterations ; (; unsigned int ; maxiter). inline . set maximum iterations (one iteration can have many function calls) ; Definition at line 334 of file Minimizer.h. ◆ SetOptions(). void ROOT::Math::Minimizer::SetOptions ; (; const MinimizerOptions & ; opt). inline . set all options in one go ; Definition at line 353 of file Minimizer.h. ◆ SetPrecision(). void ROOT::Math::Minimizer::SetPrecision ; (; double ; prec). inline . set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ; default case) ; Definition at line 341 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:29942,variab,variable,29942,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variable']
Modifiability,"mplements RooAbsDataStore.; Definition at line 623 of file RooVectorDataStore.cxx. ◆ addReal(). RooVectorDataStore::RealVector * RooVectorDataStore::addReal ; (; RooAbsReal * ; real). protected . Definition at line 1244 of file RooVectorDataStore.cxx. ◆ addRealFull(). RooVectorDataStore::RealFullVector * RooVectorDataStore::addRealFull ; (; RooAbsReal * ; real). protected . Definition at line 1304 of file RooVectorDataStore.cxx. ◆ append(). void RooVectorDataStore::append ; (; RooAbsDataStore & ; other). overridevirtual . Implements RooAbsDataStore.; Definition at line 720 of file RooVectorDataStore.cxx. ◆ attachBuffers(). void RooVectorDataStore::attachBuffers ; (; const RooArgSet & ; extObs). overridevirtual . Implements RooAbsDataStore.; Definition at line 1041 of file RooVectorDataStore.cxx. ◆ attachCache(). void RooVectorDataStore::attachCache ; (; const RooAbsArg * ; newOwner, . const RooArgSet & ; cachedVars . ). overridevirtual . Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ; Implements RooAbsDataStore.; Definition at line 982 of file RooVectorDataStore.cxx. ◆ cache(). const RooVectorDataStore * RooVectorDataStore::cache ; (; ); const. inline . Definition at line 171 of file RooVectorDataStore.h. ◆ cacheArgs(). void RooVectorDataStore::cacheArgs ; (; const RooAbsArg * ; owner, . RooArgSet & ; newVarSet, . const RooArgSet * ; nset = nullptr, . bool ; skipZeroWeights = true . ). overridevirtual . Cache given RooAbsArgs: The tree is given direct write access of the args internal cache the args values is pre-calculated for all data points in this data collection. ; Upon a get() call, the internal cache of 'newVar' will be loaded with the precalculated value and it's dirty flag will be cleared. ; Implements RooAbsDataStore.; Definition at line 764 of file RooVectorDataStore.cxx. ◆ cacheOwner(). const RooAbsArg * RooVectorDataStore::cacheOwner ; (; ). inlineoverridevirtual . Implements RooAbsDataStore.; Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVectorDataStore.html:26768,variab,variables,26768,doc/master/classRooVectorDataStore.html,https://root.cern,https://root.cern/doc/master/classRooVectorDataStore.html,1,['variab'],['variables']
Modifiability,"mpler::SetRange(const double* xmin, const double* xmax); voidROOT::Math::DistSampler::SetRange(double xmin, double xmax, int icoord = 0); virtual voidSetSeed(unsigned int seed); TUnuranSampler(); TUnuranSampler(const TUnuranSampler&). protected:. boolDoInit1D(const char* algo); boolDoInitDiscrete1D(const char* algo); boolDoInitND(const char* algo); virtual voidROOT::Math::DistSampler::DoSetFunction(const ROOT::Math::IMultiGenFunction& func, bool copy); boolROOT::Math::DistSampler::IsInitialized(); const ROOT::Fit::DataRange&ROOT::Math::DistSampler::PdfRange() const. Data Members; private:. doublefAreaarea of dist; boolfDiscreteflag to indicate if the function is discrete; const ROOT::Math::IGenFunction*fFunc1D1D function pointer; boolfHasAreaflag to indicate if a area is set; boolfHasModeflag to indicate if a mode is set; intfLeveldebug level; doublefModemode of dist; boolfOneDimflag to indicate if the function is 1 dimension; TUnuran*fUnuranunuran engine class. Class Charts. Inheritance Chart:. ROOT::Math::DistSampler. ←; TUnuranSampler. Function documentation; TUnuranSampler(). ~TUnuranSampler(). bool Init(const char* algo = """"); initialize unuran classes using the given algorithm. bool Init(const ROOT::Math::DistSamplerOptions& opt); default initialization with algorithm name. bool DoInit1D(const char* algo); initilize for 1D sampling; need to create 1D interface from Multidim one; (to do: use directly 1D functions ??). bool DoInitDiscrete1D(const char* algo); initilize for 1D sampling of discrete distributions. bool DoInitND(const char* algo); initilize for 1D sampling. void SetFunction(TF1* pdf); set function from a TF1 pointer. void SetRandom(TRandom* r); set random generator (must be called before Init to have effect). void SetSeed(unsigned int seed); set random generator seed (must be called before Init to have effect). TRandom * GetRandom(); get random generator used. double Sample1D(); sample 1D distributions. bool Sample(double* x); sample multi-dim distr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnuranSampler.html:2942,Inherit,Inheritance,2942,root/html602/TUnuranSampler.html,https://root.cern,https://root.cern/root/html602/TUnuranSampler.html,2,['Inherit'],['Inheritance']
Modifiability,"mples of valid expression: ""x<y && sqrt(z)>3.2""; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the reading of the information. Here is the list of theses classes:; TFormLeafInfo; TFormLeafInfoDirect; TFormLeafInfoNumerical; TFormLeafInfoClones; TFormLeafInfoCollection; TFormLeafInfoPointer; TFormLeafInfoMethod; TFormLeafInfoMultiVarDim; TFormLeafInfoMultiVarDimDirect; TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. AddOffset(Int_t offset, TStreamerElement* element); GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; GetMultiplicity() : Returns info on the variability of the number of elements; GetNdata(TLeaf* leaf) : Returns the number of elements; GetNdata() : Used by GetNdata(TLeaf* leaf); GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; IsString(); ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; Update() : react to the possible loading of a shared library. . Definition at line 58 of file TTreeFormula.h. Classes; struct  RealInstanceCache;  . Public Member Functions;  TTreeFormula ();  ;  TTreeFormula (const char *name, const char *formula, TTree *tree);  Normal TTree Formula Constructor. ;  ;  ~TTreeFormula () override;  Tree Formula default destructor. ;  ; Int_t DefinedVariable (TString &variable, Int_t &action) override;  Check if name is in the list of Tree/Branch leaves. ;  ; virtual TClass * EvalClass () const;  Evaluate the class of this treeformula. ;  ; template<typename T > ; T EvalInstance (Int_t i=0, const char *stringStack[]=nullptr);  Evaluate this treeformula. ;  ; virtual Double_t EvalInstance (Int_t i=0, const char *strin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:1337,variab,variability,1337,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variability']
Modifiability,"mplete(const TRegexp& re, const TSeqCollection* pListOfCandidates, const char* appendage, ostream& out, TString::ECaseCompare cmp = TString::kExact); [private]. void CopyMatch(char* dest, const char* localName, const char* appendage = 0, const char* fullName = 0) const; [private]. TString DeterminePath(const TString& fileName, const char* defaultPath) const; [private]. TString ExtendPath(const char* originalPath, TString newBase) const; [private]. Int_t Hook(char* buf, int* pLoc, ostream& out); [private]. void InitPatterns(); [private]. TClass * MakeClassFromClassName(const char* className) const; [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a class.; user must delete.; returns 0 in case of error. TClass * TryMakeClassFromClassName(const char* className) const; Same as above but does not print the error message. TClass * MakeClassFromVarName(const char* varName, TTabCom::EContext_t& context, int iter = 0); [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a variable.; user must delete.; returns 0 in case of error.; if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; context sensitive behavior. void SetPattern(TTabCom::EContext_t handle, const char* regexp); [private]. int ParseReverse(const char* var_str, int start). Returns the place in the string where to put the \0, starting the search; from ""start"". TTabCom(). TTabCom& operator=(const TTabCom& ). EContext_t DetermineContext() const. » Author: Christian Lacunza 27/04/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/rint:$Id: TTabCom.h 39402 2011-05-26 12:56:31Z axel $ » Last generated: 2011-07-04 15:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTabCom.html:12332,variab,variable,12332,root/html530/TTabCom.html,https://root.cern,https://root.cern/root/html530/TTabCom.html,1,['variab'],['variable']
Modifiability,"mplete(const TRegexp& re, const TSeqCollection* pListOfCandidates, const char* appendage, ostream& out, TString::ECaseCompare cmp = TString::kExact); [private]. void CopyMatch(char* dest, const char* localName, const char* appendage = 0, const char* fullName = 0) const; [private]. TString DeterminePath(const TString& fileName, const char* defaultPath) const; [private]. TString ExtendPath(const char* originalPath, TString newBase) const; [private]. Int_t Hook(char* buf, int* pLoc, ostream& out); [private]. void InitPatterns(); [private]. TClass * MakeClassFromClassName(const char* className) const; [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a class.; user must delete.; returns 0 in case of error. TClass * TryMakeClassFromClassName(const char* className) const; Same as above but does not print the error message. TClass * MakeClassFromVarName(const char* varName, TTabCom::EContext_t& context, int iter = 0); [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a variable.; user must delete.; returns 0 in case of error.; if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; context sensitive behavior. void SetPattern(TTabCom::EContext_t handle, const char* regexp); [private]. int ParseReverse(const char* var_str, int start). Returns the place in the string where to put the \0, starting the search; from ""start"". TTabCom(). TTabCom& operator=(const TTabCom& ). EContext_t DetermineContext() const. » Author: Christian Lacunza 27/04/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/rint:$Id: TTabCom.h 39402 2011-05-26 12:56:31Z axel $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTabCom.html:12332,variab,variable,12332,root/html532/TTabCom.html,https://root.cern,https://root.cern/root/html532/TTabCom.html,2,['variab'],['variable']
Modifiability,"mpling distribution ;  ; std::vector< double > fSumW;  ! Cached vector with sum of the weight used to compute integral ;  ; std::vector< double > fSumW2;  ! Cached vector with sum of the weight used to compute integral error ;  ; TString fVarName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/SamplingDistribution.h>. Inheritance diagram for RooStats::SamplingDistribution:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SamplingDistribution() [1/5]. SamplingDistribution::SamplingDistribution ; (; const char * ; name, . const char * ; title, . std::vector< double > & ; samplingDist, . const char * ; varName = nullptr . ). Constructor for SamplingDistribution. ; SamplingDistribution constructor. ; Definition at line 43 of file SamplingDistribution.cxx. ◆ SamplingDistribution() [2/5]. SamplingDistribution::SamplingDistribution ; (; const char * ; name, . const char * ; title, . std::vector< double > & ; samplingDist, . std::vector< double > & ; sampleWeights, . const char * ; varName = nullptr . ). SamplingDistribution constructor. ; Definition at line 57 of file SamplingDistributio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html:13833,inherit,inherited,13833,doc/master/classRooStats_1_1SamplingDistribution.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html,2,['inherit'],['inherited']
Modifiability,"mponent (PCA) transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : myvar1: -0.11433 2.2714 [ -11.272 9.0916 ]; : myvar2: -0.0070834 1.0934 [ -3.9875 3.3836 ]; : var3: 0.011107 0.57824 [ -2.0171 2.1958 ]; : var4: -0.0094450 0.33437 [ -1.0176 1.0617 ]; : -----------------------------------------------------------; : Preparing the Gaussian transformation...; : Preparing the Decorrelation transformation...; TFHandler_Factory : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : myvar1: -0.049483 1.0000 [ -3.0916 8.1528 ]; : myvar2: -0.0017889 1.0000 [ -4.5911 5.6465 ]; : var3: -0.0056513 1.0000 [ -3.1504 4.5978 ]; : var4: 0.070934 1.0000 [ -3.4539 5.9256 ]; : -----------------------------------------------------------; : Ranking input variables (method unspecific)...; IdTransformation : Ranking result (top variable is best ranked); : -------------------------------------; : Rank : Variable : Separation; : -------------------------------------; : 1 : Variable 4 : 2.843e-01; : 2 : Variable 3 : 1.756e-01; : 3 : myvar1 : 1.018e-01; : 4 : Expression 2 : 3.860e-02; : -------------------------------------; Factory : Train method: Cuts for Classification; : ; FitterBase : <MCFitter> Sampling, please be patient ...; : Elapsed time: 3.53 sec ; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.1; : Corresponding background efficiency : 0.00621902; : Transformation applied to input variables : None; : ------------------------------------------; : Cut[ 0]: -1.19223 < myvar1 <= 1e+30; : Cut[ 1]: -1e+30 < myvar2 <= 2.126; : Cut[ 2]: -2.90978 < var3 <= 1e+30; : Cut[ 3]: 2.16207 < var4 <= 1e+30; : ------------------------------------------; : ------------------------------------------; Cuts : Cut values for requested signal efficiency: 0.2; : Corresponding background efficiency : 0.0171253; : Transformation applied",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:12772,variab,variable,12772,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variable']
Modifiability,mponent PDFs. ;  ; RooObjCacheManager _projCacheMgr;  ; bool _recursive = false;  Flag indicating is fractions are treated recursively. ;  ; RooSetProxy _refCoefNorm;  Reference observable set for coefficient interpretation. ;  ; TNamed * _refCoefRangeName = nullptr;  Reference range name for coefficient interpretation. ;  ; RooArgList * _snormList {nullptr};  ! List of supplemental normalization factors ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddPdf.html:72128,config,configuration,72128,doc/master/classRooAddPdf.html,https://root.cern,https://root.cern/doc/master/classRooAddPdf.html,1,['config'],['configuration']
Modifiability,mponent PDFs. ;  ; RooObjCacheManager _projCacheMgr;  ; bool _recursive = false;  Flag indicating is fractions are treated recursively. ;  ; RooSetProxy _refCoefNorm;  Reference observable set for coefficient interpretation. ;  ; TNamed * _refCoefRangeName = nullptr;  Reference range name for coefficient interpretation. ;  ; RooArgList * _snormList {nullptr};  ! List of supplemental normalization factors ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; std::unique_ptr< TreeReadBuffer > _treeReadBuffer;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:73271,config,configuration,73271,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,1,['config'],['configuration']
Modifiability,"mponents! Set of owned component; TIterator*_pdfIter! Iterator of PDF list; RooListProxy_pdfListList of PDF components; RooLinkedList_pdfNSetListList of PDF component normalization sets; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; TNamed*_refRangeNameReference range name for interpretation of conditional products; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; Bool_t_selfNormIs self-normalized; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_useDefaultGenUse default or distributed event generator; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooProdPdf.html:46220,config,configuration,46220,root/html534/RooProdPdf.html,https://root.cern,https://root.cern/root/html534/RooProdPdf.html,4,['config'],['configuration']
Modifiability,"mponents! Set of owned component; TIterator*_pdfObsIter! ; RooSetProxy_pdfObsListList of observables mapped onto histogram observables; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNormAssume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooHistPdf.html:40205,config,configuration,40205,root/html528/RooHistPdf.html,https://root.cern,https://root.cern/root/html528/RooHistPdf.html,2,['config'],['configuration']
Modifiability,"mponents; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define projected observables. RooAbsReal* createChi2(RooDataSet& data, const RooLinkedList& cmdList); Internal back-end function to create a chi^2 from a p.d.f. and a dataset. void printValue(ostream& os) const; Print value of p.d.f, also print normalization integral that was last used, if any. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print multi line detailed information of this RooAbsPdf. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Interface function to create a generator context from a p.d.f. This default; implementation returns a 'standard' context that works for any p.d.f. RooDataSet * generate(const RooArgSet& whatVars, Int_t nEvents, const RooCmdArg& arg1,				const RooCmdArg& arg2, const RooCmdArg& arg3,const RooCmdArg& arg4, const RooCmdArg& arg5); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ProtoData(const RooDataSet& data, -- Use specified dataset as prototype dataset. If randOrder is set to true; Bool_t randOrder) the order of the events in the dataset will be read in a random order; if the requested number of events to be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:55679,variab,variables,55679,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"mporary column.; 554 ; 555A new variable is created called `name`, accessible as if it was contained in the dataset from subsequent; 556transformations/actions.; 557 ; 558Use cases include:; 559- caching the results of complex calculations for easy and efficient multiple access; 560- extraction of quantities of interest from complex objects; 561- branch aliasing, i.e. changing the name of a branch; 562 ; 563An exception is thrown if the `name` of the new column/branch is already in use for another branch in the TTree.; 564 ; 565It is also possible to specify the quantity to be stored in the new temporary column as a C++ expression with the method; 566`Define(name, expression)`. For example this invocation; 567 ; 568~~~{.cpp}; 569df.Define(""pt"", ""sqrt(px*px + py*py)"");; 570~~~; 571 ; 572will create a new column called ""pt"" the value of which is calculated starting from the columns px and py. The system; 573builds a just-in-time compiled function starting from the expression after having deduced the list of necessary branches; 574from the names of the variables specified by the user.; 575 ; 576#### Custom columns as function of slot and entry number; 577 ; 578It is possible to create custom columns also as a function of the processing slot and entry numbers. The methods that can; 579be invoked are:; 580- `DefineSlot(name, f, columnList)`. In this case the callable f has this signature `R(unsigned int, T1, T2, ...)`: the; 581first parameter is the slot number which ranges from 0 to ROOT::GetThreadPoolSize() - 1.; 582- `DefineSlotEntry(name, f, columnList)`. In this case the callable f has this signature `R(unsigned int, ULong64_t,; 583T1, T2, ...)`: the first parameter is the slot number while the second one the number of the entry being processed.; 584 ; 585\anchor actions; 586## Actions: getting results; 587### Instant and lazy actions; 588Actions can be **instant** or **lazy**. Instant actions are executed as soon as they are called, while lazy actions are; 589execut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:35163,variab,variables,35163,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['variab'],['variables']
Modifiability,"mporary column.; 594 ; 595A new variable is created called `name`, accessible as if it was contained in the dataset from subsequent; 596transformations/actions.; 597 ; 598Use cases include:; 599- caching the results of complex calculations for easy and efficient multiple access; 600- extraction of quantities of interest from complex objects; 601- branch aliasing, i.e. changing the name of a branch; 602 ; 603An exception is thrown if the `name` of the new column/branch is already in use for another branch in the TTree.; 604 ; 605It is also possible to specify the quantity to be stored in the new temporary column as a C++ expression with the method; 606`Define(name, expression)`. For example this invocation; 607 ; 608~~~{.cpp}; 609df.Define(""pt"", ""sqrt(px*px + py*py)"");; 610~~~; 611 ; 612will create a new column called ""pt"" the value of which is calculated starting from the columns px and py. The system; 613builds a just-in-time compiled function starting from the expression after having deduced the list of necessary branches; 614from the names of the variables specified by the user.; 615 ; 616#### Custom columns as function of slot and entry number; 617 ; 618It is possible to create custom columns also as a function of the processing slot and entry numbers. The methods that can; 619be invoked are:; 620- `DefineSlot(name, f, columnList)`. In this case the callable f has this signature `R(unsigned int, T1, T2, ...)`: the; 621first parameter is the slot number which ranges from 0 to ROOT::GetThreadPoolSize() - 1.; 622- `DefineSlotEntry(name, f, columnList)`. In this case the callable f has this signature `R(unsigned int, ULong64_t,; 623T1, T2, ...)`: the first parameter is the slot number while the second one the number of the entry being processed.; 624 ; 625\anchor actions; 626## Actions: getting results; 627### Instant and lazy actions; 628Actions can be **instant** or **lazy**. Instant actions are executed as soon as they are called, while lazy actions are; 629execut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:36803,variab,variables,36803,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['variab'],['variables']
Modifiability,"mport a RooAbsArg object, e.g. ; function, p.d.f or variable into the workspace. This import function clones the input argument and will own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the complete tree of objects is imported. If any of the variables of a composite object (parameters/observables) are already in the workspace the imported p.d.f. is connected to the already existing variables. If any of the function objects (p.d.f, formulas) to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled. Several optional arguments can be provided to modify the import procedure. Accepted arguments . RenameConflictNodes(const char* suffix) Add suffix to branch node name if name conflicts with existing node in workspace . RenameAllNodes(const char* suffix) Add suffix to all branch node names including top level node. . RenameAllVariables(const char* suffix) Add suffix to all variables of objects being imported. . RenameAllVariablesExcept(const char* suffix, const char* exceptionList) Add suffix to all variables names, except ones listed . RenameVariable(const char* inputName, const char* outputName) Rename a single variable as specified upon import. . RecycleConflictNodes() If any of the function objects to be imported already exist in the name space, connect the imported expression to the already existing nodes. AttentionUse with care! If function definitions do not match, this alters the definition of your function upon import. Silence() Do not issue any info message . The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with two comma separated lists. NoteFrom python, use Import(), since import is a reserved keyword. PyROOT; Support the C++ impor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:39623,variab,variables,39623,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['variab'],['variables']
Modifiability,"mposite (const TBuffer3D &buffer, Bool_t *addChildren=nullptr) override;  Composite shapes not supported on this viewer currently - ignore. ;  ; Bool_t PreferLocalFrame () const override;  Indicates if we prefer positions in local frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualViewer3D; virtual ~TVirtualViewer3D ();  ; virtual Bool_t CanLoopOnPrimitives () const;  ; virtual void DrawViewer ();  ; TClass * IsA () const override;  ; virtual void ObjectPaint (TObject *, Option_t *="""");  ; virtual void PadPaint (TVirtualPad *);  ; virtual void PrintObjects ();  ; virtual void ResetCameras ();  ; virtual void ResetCamerasAfterNextUpdate ();  ; virtual TObject * SelectObject (Int_t, Int_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewer3DPad.html:2226,inherit,inherited,2226,doc/master/classTViewer3DPad.html,https://root.cern,https://root.cern/doc/master/classTViewer3DPad.html,1,['inherit'],['inherited']
Modifiability,"mposite frame widget as a C++ statement(s) on output stream out. ;  ; virtual void SavePrimitiveSubframes (std::ostream &out, Option_t *option="""");  Auxiliary protected method used to save subframes. ;  ; void SetCleanup (Int_t mode=kLocalCleanup) override;  Turn on automatic cleanup of child frames in dtor. ;  ; void SetEditable (Bool_t on=kTRUE) override;  Switch ON/OFF edit mode. ;  ; void SetEditDisabled (UInt_t on=1) override;  Set edit disable flag for this frame and subframes. ;  ; void SetLayoutBroken (Bool_t on=kTRUE) override;  Set broken layout. No Layout method is called. ;  ; void SetMapSubwindows (Bool_t on) override;  ; virtual void ShowFrame (TGFrame *f);  Show sub frame. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t TranslateCoordinates (TGFrame *child, Int_t x, Int_t y, Int_t &fx, Int_t &fy);  Translate coordinates to child frame. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const override;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void DrawCopy (Handle_t, Int_t, Int_t);  ; void Dump () const override;  Dump contents of object on stdout. ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGView.html:8656,inherit,inherited,8656,doc/master/classTGView.html,https://root.cern,https://root.cern/doc/master/classTGView.html,1,['inherit'],['inherited']
Modifiability,"mposite p.d.fs. ;  ; RooPlot * plotOnWithErrorBand (RooPlot *frame, const RooFitResult &fr, double Z, const RooArgSet *params, const RooLinkedList &argList, bool method1) const;  Plot function or PDF on frame with support for visualization of the uncertainty encoded in the given fit result fr. ;  ; bool plotSanityChecks (RooPlot *frame) const;  Utility function for plotOn(), perform general sanity check on frame to ensure safe plotting operations. ;  ; virtual void selectNormalization (const RooArgSet *depSet=nullptr, bool force=false);  Interface function to force use of a given set of observables to interpret function value. ;  ; void setTreeBranchStatus (TTree &t, bool active) override;  (De)Activate associated tree branch ;  ; void syncCache (const RooArgSet *set=nullptr) override;  ; double traceEval (const RooArgSet *set) const;  Calculate current value of object, with error tracing wrapper. ;  ;  Protected Member Functions inherited from RooAbsArg; void attachToStore (RooAbsDataStore &store);  Attach this argument to the data store such that it reads data from there. ;  ; TString cleanBranchName () const;  Construct a mangled name from the actual name that is free of any math symbols that might be interpreted by TTree. ;  ; void clearShapeDirty () const;  ; void clearValueAndShapeDirty () const;  ; void clearValueDirty () const;  ; virtual void getObservablesHook (const RooArgSet *, RooArgSet *) const;  ; void graphVizAddConnections (std::set< std::pair< RooAbsArg *, RooAbsArg * > > &);  Utility function that inserts all point-to-point client-server connections between any two RooAbsArgs in the expression tree headed by this object in the linkSet argument. ;  ; bool inhibitDirty () const;  Delete watch flag. ;  ; virtual void ioStreamerPass2 ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ; virtual void operModeHook ();  ; virtual void optimizeDirtyHook (const RooArgSet *);  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:74211,inherit,inherited,74211,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['inherit'],['inherited']
Modifiability,"mpositeFrame*fColorFrametop frame for color componet control; ULong_tfCtxGL context; Window_tfGLWinGL window with sphere; TGButton*fGeoApplyButtonaction button; TGCompositeFrame*fGeoFrameorientation, clipping; TGNumberEntry*fGeomData[6]position and clipping control; TGHSlider*fGreenSlidergreen component of selected material; TGLPShapeObjEditor::ELightModefLMode; TGLayoutHintsfLbbutton layout; TGLayoutHintsfLenum entry layout; TGButton*fLightTypes[4]light type; TGLayoutHintsfLllabel layout; TGLayoutHintsfLsslider layout; TGLWidget*fMatViewinner structure to handle sphere GL window; TGLPShapeObj*fPShapeObjmodel; Float_tfRGBA[17]color multiplet; TGHSlider*fRedSliderred component of selected material; TGHSlider*fShineSliderspecular refelction of selected material; static TGLPShapeObjEditor::ELightModekAmbient; static TGLPShapeObjEditor::ELightModekDiffuse; static TGLPShapeObjEditor::ELightModekEmission; static TGLPShapeObjEditor::ELightModekSpecular. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPShapeObjEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of TGLPhysicalShape editor GUI. ~TGLPShapeObjEditor(); Destroy color editor GUI component.; Done automatically. void SetPShape(TGLPhysicalShape* shape); Shape has changed.; Check if set to zero and make sure we're no longer in editor. void PShapeModified(); Shape has been modified.; Update editor if we're still shown. Otherwise unref. void SetModel(TObject* obj); Sets model or disables/hides viewer. void SetCenter(const Double_t* center); Set internal center data from 3 component 'c'. void SetScale(const Double_t* scale); Set internal scale data from 3 component 'c'. void DoGeoButton(); Process 'Apply' - update the viewer object from GUI. void GetObjectData(Double_t* shift, Double_t* scale); Extract the GUI object data, return center in 3 component 'center'; scale in 3 co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLPShapeObjEditor.html:22409,Inherit,Inheritance,22409,root/html602/TGLPShapeObjEditor.html,https://root.cern,https://root.cern/root/html602/TGLPShapeObjEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mpoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfEditPathMarksShow widgets for path-mark control in GUI editor.; TMarkerfFVAttMarker attributes for fits vertex.; Bool_tfFitCluster2DsPass through 2D-clusters when extrapolating a track.; Bool_tfFitDaughtersPass through daughter creation points when extrapolating a track.; Bool_tfFitDecayPass through decay point when extrapolating a track.; Bool_tfFitReferencesPass through given track-references when extrapolating a track.; TEveTrackPropagator::Helix_tfHHelix.; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveMagField*fMagFieldObj; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Double_tfMaxOrbsMaximal angular path of tracks' orbits (1 ~ 2Pi).; Double_tfMaxRMax radius for track extrapolation; Double_tfMaxZMax z-coordinate for track extrapolation.; Int_tfNMaxMax steps; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tfOwnMagFiledObj; TMarkerfPMAttMarker attributes for rendering of path-marks.; TMarkerfPTBAttMarker attributes for track break-points.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector4D>fPointsCalculated point.; UChar_tfProjTrackBreakingHandling of projected-track breaking.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Int_tTEveRefCnt::fRefCount; Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTrackPropagator.html:23172,variab,variable,23172,root/html530/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html530/TEveTrackPropagator.html,3,['variab'],['variable']
Modifiability,"mpoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfEditPathMarksShow widgets for path-mark control in GUI editor.; TMarkerfFVAttMarker attributes for fits vertex.; Bool_tfFitCluster2DsPass through 2D-clusters when extrapolating a track.; Bool_tfFitDaughtersPass through daughter creation points when extrapolating a track.; Bool_tfFitDecayPass through decay point when extrapolating a track.; Bool_tfFitReferencesPass through given track-references when extrapolating a track.; TEveTrackPropagator::Helix_tfHHelix.; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveMagField*fMagFieldObj; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tfMaxOrbsMaximal angular path of tracks' orbits (1 ~ 2Pi).; Float_tfMaxRMax radius for track extrapolation; Float_tfMaxZMax z-coordinate for track extrapolation.; Int_tfNMaxMax steps; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tfOwnMagFiledObj; TMarkerfPMAttMarker attributes for rendering of path-marks.; TMarkerfPTBAttMarker attributes for track break-points.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector4>fPointsCalculated point.; UChar_tfProjTrackBreakingHandling of projected-track breaking.; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Int_tTEveRefCnt::fRefCount; Bool_tTE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrackPropagator.html:22902,variab,variable,22902,root/html528/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html528/TEveTrackPropagator.html,1,['variab'],['variable']
Modifiability,"mpt(); Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". const char * SetPrompt(const char* newPrompt); Set a new default prompt. It returns the previous prompt.; The prompt may contain a %d which will be replaced by the commend; number. The default prompt is ""root [%d] "". The maximum length of; the prompt is 55 characters. To set the prompt in an interactive; session do:; root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> ""); aap>. Bool_t HandleTermInput(); Handle input coming from terminal. void HandleException(Int_t sig); Handle exceptions (kSigBus, kSigSegmentationViolation,; kSigIllegalInstruction and kSigFloatingException) trapped in TSystem.; Specific TApplication implementations may want something different here. void Terminate(int status); Terminate the application. Reset the terminal to sane mode and call; the logoff macro defined via Rint.Logoff environment variable. void SetEchoMode(Bool_t mode); Set console mode:. mode = kTRUE - echo input symbols; mode = kFALSE - noecho input symbols. Long_t ProcessRemote(const char* line, Int_t* error = 0); Process the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script]; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. TRint(const TRint& ). TRint& operator=(const TRint& ). void Interrupt(); { fInterrupt = kTRUE; }. » Author: Rene Brun 17/02/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/rint:$Id: TRint.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2010-09-27 22:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRint.html:15016,variab,variable,15016,root/html528/TRint.html,https://root.cern,https://root.cern/root/html528/TRint.html,1,['variab'],['variable']
Modifiability,"mptDirectRenderer (TObject *id);  Try to construct an appropriate logical-shape sub-class based on id'class, following convention that SomeClassGL is a suitable renderer for class SomeClass. ;  ; RootCsg::TBaseMesh * BuildComposite ();  Build and return composite shape mesh. ;  ; void ComposePolymarker (const TList *padPrimitives);  ; TGLLogicalShape * CreateNewLogical (const TBuffer3D &buffer) const;  Create and return a new TGLLogicalShape from the supplied buffer. ;  ; TGLPhysicalShape * CreateNewPhysical (UInt_t physicalID, const TBuffer3D &buffer, const TGLLogicalShape &logical) const;  Create and return a new TGLPhysicalShape with id 'ID', using 'buffer' placement information (translation etc), and bound to suppled 'logical'. ;  ; Int_t ValidateObjectBuffer (const TBuffer3D &buffer, Bool_t includeRaw) const;  Validate if the passed 'buffer' contains all sections we require to add object. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TGLScene; virtual void DestroyPhysicalInternal (PhysicalShapeMapIt_t pit);  Virtual function to destroy a physical. ;  ; void ReleaseGLCtxIdentity ();  Release all GL resources for current context identity. ;  . Protected Attributes; Int_t fAcceptedPhysicals;  last physical ID that was processed in AddObject() ;  ; TGLFaceSet * fComposite;  ; UInt_t fCSLevel;  Paritally created composite. ;  ; std::vector< CSPart_t > fCSTokens;  ; Bool_t fInternalPIDs;  ; UInt_t fLastPID;  next internal physical ID (from 1 - 0 reserved) ;  ; UInt_t fNextInternalPID;  using internal physical IDs ;  ; TVirtualPad * fPad;  ; Bool_t fSmartRefresh;  ;  Protected Attributes inherited from TGLScene; TGLContextIdentity * fGLCtxIdentity;  ; Bool_t fInSmartRefresh;  ; Float_t fLastLineWidthScale;  ; Float_t fLastPointSizeScale;  ; LogicalShapeMap_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:21166,inherit,inherited,21166,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,1,['inherit'],['inherited']
Modifiability,"mputation of a credible interval using a Bayesian method ;  CBernsteinCorrectionBernsteinCorrection is a utility in RooStats to augment a nominal PDF with a polynomial correction term ;  CCombinedCalculatorCombinedCalculator is an interface class for a tools which can produce both RooStats HypoTestResults and ConfIntervals ;  CConfidenceBeltConfidenceBelt is a concrete implementation of the ConfInterval interface ;  CConfIntervalConfInterval is an interface class for a generic interval in the RooStats framework ;  CDebuggingSampler;  CDebuggingTestStat;  CDetailedOutputAggregator;  CFeldmanCousins(like the Feldman-Cousins technique) is essentially a specific configuration of the more general NeymanConstruction ;  CFrequentistCalculatorHypothesis Test Calculator using a full frequentist procedure for sampling the test statistic distribution ;  CHeavisideRepresents the Heaviside function ;  CHLFactoryHLFactory is an High Level model Factory allows you to describe your models in a configuration file (datacards) acting as an interface with the RooFactoryWSTool ;  CHybridCalculatorThis class implements the Hypothesis test calculation using an hybrid (frequentist/bayesian) procedure ;  CHybridCalculatorOriginalHybridCalculatorOriginal class ;  CHybridPlotThis class provides the plots for the result of a study performed with the HybridCalculatorOriginal class ;  CHybridResult;  CHypoTestCalculatorHypoTestCalculator is an interface class for a tools which produce RooStats HypoTestResults ;  CHypoTestCalculatorGenericCommon base class for the Hypothesis Test Calculators ;  CHypoTestInverterHypoTestInverter class for performing an hypothesis test inversion by scanning the hypothesis test results of an HypoTestCalculator for various values of the parameter of interest ;  CHypoTestInverterOriginalThis class is now depratcated and to be replaced by the HypoTestInverter ;  CHypoTestInverterPlotClass to plot an HypoTestInverterResult, result of the HypoTestInverter calculator ;  C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:4491,config,configuration,4491,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,3,['config'],['configuration']
Modifiability,"mpute stream, if it's not the default stream.Definition CudaMatrix.h:282; TMVA::DNN::TCudaMatrix::fNColssize_t fNColsDefinition CudaMatrix.h:118; TMVA::DNN::TCudaMatrix::GetOnesstatic AFloat * GetOnes()Definition CudaMatrix.h:125; TMVA::DNN::TCudaMatrix::~TCudaMatrix~TCudaMatrix()=default; TMVA::DNN::TCudaMatrix::fOnesstatic AFloat * fOnesVector used for summations of columns.Definition CudaMatrix.h:111; TMVA::DNN::TCudaMatrix::fCublasHandlestatic cublasHandle_t fCublasHandleDefinition CudaMatrix.h:109; TMVA::DNN::TCudaMatrix::fInstancesstatic size_t fInstancesCurrent number of matrix instances.Definition CudaMatrix.h:108; TMVA::DNN::TCudaMatrix::GetNrowssize_t GetNrows() constDefinition CudaMatrix.h:159; TMVA::DNN::TCudaMatrix::operator=TCudaMatrix & operator=(TCudaMatrix &&)=default; TMVA::DNN::TCudaMatrix::InitializeCurandStatesvoid InitializeCurandStates()Definition CudaMatrix.cu:140; TMVA::DNN::TCudaMatrix::GetDataPointerAFloat * GetDataPointer()Definition CudaMatrix.h:164; TMVA::DNN::TCudaMatrix::fNOnesstatic size_t fNOnesCurrent length of the one vector.Definition CudaMatrix.h:112; TMVA::DNN::TCudaMatrix::TCudaMatrixTCudaMatrix(TCudaMatrix &&)=default; TMVA::DNN::TCudaMatrix::GetCurandStatesPointerstatic curandState_t * GetCurandStatesPointer()Definition CudaMatrix.h:152; TMatrixTBase::Printvoid Print(Option_t *name="""") const overridePrint the matrix as a table of elements.Definition TMatrixTBase.cxx:636; TMatrixTTMatrixT.Definition TMatrixT.h:40; bool; lineTLine * lineDefinition entrylistblock_figure1.C:235; nconst Int_t nDefinition legend1.C:16; TMVA::DNN::cudaErrorvoid cudaError(cudaError_t code, const char *file, int line, bool abort=true)Function to check cuda return code.Definition CudaMatrix.h:198; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; mTMarker mDefinition textangle.C:8. tmvatmvaincTMVADNNArchitecturesCudaCudaMatrix.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:57 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/CudaMatrix_8h_source.html:17689,variab,variable,17689,doc/master/CudaMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/CudaMatrix_8h_source.html,1,['variab'],['variable']
Modifiability,"mputer lower interval bound ;  ; double fNLLMin;  minimum value of Nll ;  ; int fNScanBins;  number of bins to scan, if = -1 no scan is done (default) ;  ; RooArgSet fNuisanceParameters;  nuisance parameters ;  ; RooAbsPdf * fNuisancePdf;  nuisance pdf (needed when using nuisance sampling technique) ;  ; int fNumIterations;  number of iterations (when using ToyMC) ;  ; RooAbsPdf * fPdf;  model pdf (could contain the nuisance pdf as constraint term) ;  ; RooArgSet fPOI;  POI. ;  ; ROOT::Math::IGenFunction * fPosteriorFunction;  function representing the posterior ;  ; RooAbsPdf * fPosteriorPdf;  normalized (on the poi) posterior pdf ;  ; RooAbsPdf * fPriorPdf;  prior pdf (typically for the POI) ;  ; RooAbsPdf * fProductPdf;  internal pointer to model * prior ;  ; double fSize;  size used for getting the interval ;  ; double fUpper;  upper interval bound ;  ; bool fValidInterval;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/BayesianCalculator.h>. Inheritance diagram for RooStats::BayesianCalculator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ BayesianCalculator() [1/3]. RooSta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1BayesianCalculator.html:19713,inherit,inherited,19713,doc/master/classRooStats_1_1BayesianCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1BayesianCalculator.html,1,['inherit'],['inherited']
Modifiability,"ms in memory.Definition TH1.cxx:1294; When the histogram is deleted, the reference to it is removed from the list of objects in memory. When a file is closed, all histograms in memory associated with this file are automatically deleted. Labelling axes; Axis titles can be specified in the title argument of the constructor. They must be separated by "";"": TH1F* h=new TH1F(""h"", ""Histogram title;X Axis;Y Axis"", 100, 0, 1);; The histogram title and the axis titles can be any TLatex string, and are persisted if a histogram is written to a file.; Any title can be omitted: TH1F* h=new TH1F(""h"", ""Histogram title;;Y Axis"", 100, 0, 1);; TH1F* h=new TH1F(""h"", "";;Y Axis"", 100, 0, 1);; The method SetTitle() has the same syntax: h->SetTitle(""Histogram title;Another X title Axis"");; Alternatively, the title of each axis can be set directly: h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");; For bin labels see binning. Binning. Fix or variable bin size; All histogram types support either fix or variable bin sizes. 2-D histograms may have fix size bins along X and variable size bins along Y or vice-versa. The functions to fill, manipulate, draw or access histograms are identical in both cases.; Each histogram always contains 3 axis objects of type TAxis: fXaxis, fYaxis and fZaxis. To access the axis parameters, use: TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; TAxisClass to manage histogram axis.Definition TAxis.h:31; TAxis::GetBinCentervirtual Double_t GetBinCenter(Int_t bin) constReturn center of bin.Definition TAxis.cxx:478; See class TAxis for a description of all the access functions. The axis range is always stored internally in double precision. Convention for numbering bins; For all histogram types: nbins, xlow, xup bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; In case of 2-D or 3-D histograms, a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:6505,variab,variable,6505,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,2,['variab'],['variable']
Modifiability,"ms of several; others, which are directly measurable.; ; An example in high energy physics is the evaluation of the momentum of; a charged particle from the observation of its trajectory in a magnetic; field. The problem is to relate the momentum of the particle to the; observations, which may consists of of positional measurements at; intervals along the particle trajectory.; ; The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations.; ; This explicit function of the observations can be obtained by a; least squares fitting procedure applied to a representive; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables.; ; This class TMultiDimFit implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package; [2]. Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit.; ; In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information.; ; And example of usage is given in; $ROOTSYS/tutorials/fit/multidimfit.C.; . The Method; . Let by the dependent quantity of interest, which depends smoothly; on the observable quantities ; , which we'll denote by; ; . Given a training sample of tuples of the form,; (TMultiDimFit::AddRow); . where ; are independen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:1524,variab,variables,1524,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,6,['variab'],['variables']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tHandleEvent(Event_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGUnknownWindowHandler&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGUnknownWindowHandler.html:2544,Inherit,InheritsFrom,2544,root/html532/TGUnknownWindowHandler.html,https://root.cern,https://root.cern/root/html532/TGUnknownWindowHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tHandleEvent(Event_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGUnknownWindowHandler&operator=(const TGUnknownWin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGUnknownWindowHandler.html:2544,Inherit,InheritsFrom,2544,root/html602/TGUnknownWindowHandler.html,https://root.cern,https://root.cern/root/html602/TGUnknownWindowHandler.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TParameter<Long64_t>::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const long long&TParameter<Long64_t>::GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTParameter<Long64_t>::Hash() const; voidInc(Long_t n = 1); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTParameter<Long64_t>::IsConst() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTParameter<Long64_t>::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTParameter<Long64_t>::ls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorScalar.html:2724,Inherit,InheritsFrom,2724,root/html534/TSelectorScalar.html,https://root.cern,https://root.cern/root/html534/TSelectorScalar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TParameter<Long64_t>::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const long long&TParameter<Long64_t>::GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTParameter<Long64_t>::Hash() const; voidInc(Long_t n = 1); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTParameter<Long64_t>::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTParameter<Long64_t>::ls(Option_t*) const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelectorScalar.html:2724,Inherit,InheritsFrom,2724,root/html532/TSelectorScalar.html,https://root.cern,https://root.cern/root/html532/TSelectorScalar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified(TClass* classPtr, TDocOutput::EFileType type); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidNameSpace2FileName(TString& name); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocOutput.html:3800,Inherit,InheritsFrom,3800,root/html532/TDocOutput.html,https://root.cern,https://root.cern/root/html532/TDocOutput.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFixupAuthorSourceInfo(TString& authors); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetExtension() const; THtml*GetHtml(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsModified(TClass* classPtr, TDocOutput::EFileType type); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidNameSpace2FileName(TString& name); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDocOutput.html:3744,Inherit,InheritsFrom,3744,root/html602/TDocOutput.html,https://root.cern,https://root.cern/root/html602/TDocOutput.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidexportData(TList* olist, Int_t seqno); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidinitialize(); Int_tinitRandom(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStudyPackage.html:2636,Inherit,InheritsFrom,2636,root/html532/RooStudyPackage.html,https://root.cern,https://root.cern/root/html532/RooStudyPackage.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ms, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidexportData(TList* olist, Int_t seqno); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidinitialize(); Int_tinitRandom(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStudyPackage.html:2549,Inherit,InheritsFrom,2549,root/html602/RooStudyPackage.html,https://root.cern,https://root.cern/root/html602/RooStudyPackage.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ms.Definition THnChain.h:50. Definition at line 49 of file THnChain.h. Public Member Functions;  THnChain (const char *name);  Default constructor. ;  ; void AddFile (const char *fileName);  Add a new file to this chain. ;  ; TAxis * GetAxis (Int_t i) const;  Get an axis from the histogram. ;  ; TClass * IsA () const override;  ; TH3 * Projection (Int_t xDim, Int_t yDim, Int_t zDim, Option_t *option="""") const;  See THnBase::Projection for the intended behavior. ;  ; TH1 * Projection (Int_t xDim, Option_t *option="""") const;  See THnBase::Projection for the intended behavior. ;  ; TH2 * Projection (Int_t yDim, Int_t xDim, Option_t *option="""") const;  See THnBase::Projection for the intended behavior. ;  ; THnBase * ProjectionND (Int_t ndim, const Int_t *dim, Option_t *option="""") const;  See THnBase::Projection for the intended behavior. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnChain.html:2189,inherit,inherited,2189,doc/master/classTHnChain.html,https://root.cern,https://root.cern/doc/master/classTHnChain.html,1,['inherit'],['inherited']
Modifiability,"ms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3(); Default constructor. TH3(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); -*-*-*-*Normal constructor for fix bin size 3-D histograms; *-* ==================================================. TH3(const char* name, const char* title, Int_t nbinsx, const Float_t* xbins, Int_t nbinsy, const Float_t* ybins, Int_t nbinsz, const Float_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); -*-*-*-*Normal constructor for variable bin size 3-D histograms; *-* =======================================================. TH3(const TH3& ); Copy constructor.; The list of functions is not copied. (Use Clone if needed). ~TH3(); Destructor. void Copy(TObject& hnew) const; Copy. Int_t BufferEmpty(Int_t action = 0); Fill histogram with all entries in the buffer.; action = -1 histogram is reset and refilled from the buffer (called by THistPainter::Paint); action = 0 histogram is filled from the buffer; action = 1 histogram is filled and buffer is deleted; The buffer is automatically deleted when the number of entries; in the buffer is greater than the number of entries in the histogram. Int_t BufferFill(Double_t x, Double_t y, Double_t z, Double_t w); accumulate arguments in buffer. When buffer is full, empty the buffer; fBuffer[0] = number of entries in buffer; fBuffer[1] = w of first entry; fBuffer[2] = x of first entry; fBuffer[3] = y of first entry; fBuffer[4] = z of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH3.html:25767,variab,variable,25767,root/html528/TH3.html,https://root.cern,https://root.cern/root/html528/TH3.html,6,['variab'],['variable']
Modifiability,"msPlot = nullptr;  ; TObject * fPlotObject = nullptr;  plotted object ;  ; double fPrecision = -1;  RooCurve precision, use default in case of -1. ;  ; double fXmax = -1;  ; double fXmin = 0;  ; double fYmax = -1;  ; double fYmin = 0;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/LikelihoodIntervalPlot.h>. Inheritance diagram for RooStats::LikelihoodIntervalPlot:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ LikelihoodIntervalPlot() [1/2]. LikelihoodIntervalPlot::Likelihoo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1LikelihoodIntervalPlot.html:14993,inherit,inherited,14993,doc/master/classRooStats_1_1LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1LikelihoodIntervalPlot.html,1,['inherit'],['inherited']
Modifiability,"msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TSecContext&TSecContext::operator=(const TSecContext&). private:. virtual Bool_tCleanupSecContext(Bool_t all). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfRSAKeyType of RSA key used. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRootSecContext(const char* user, const char* host, Int_t meth, Int_t offset, const char* id, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0, Int_t key = 1); Ctor for SecContext object. TRootSecContext(const char* url, Int_t meth, Int_t offset, const char* id, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0, Int_t key = 1); Ctor for SecContext object.; User and host from url = user@host . ~TRootSecContext(); Dtor: delete (deActivate, local/remote cleanup, list removal); all what is still active. void DeActivate(Option_t* opt = ""CR""); Set OffSet to -1 and expiring Date to default; Remove from the list; If globus, cleanup local stuff; If Opt contains ""C"" or ""c"", ask for remote cleanup; If Opt contains ""R"" or ""r"", remove from the list; Default Opt=""CR"". Bool_t CleanupSecContext(Bool_t all); Ask remote client to cleanup security context 'ctx'; If 'all', all sec context with the same host as ctx; are cleaned. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRootSecContext.html:6379,Inherit,Inheritance,6379,root/html532/TRootSecContext.html,https://root.cern,https://root.cern/root/html532/TRootSecContext.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; RooWorkspace&wspace(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. list<RooAbsStudy*>_studies; RooWorkspace*_ws; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooStudyPackage(). RooStudyPackage(RooWorkspace& w). RooStudyPackage(const RooStudyPackage& ). void addStudy(RooAbsStudy& study). void driver(Int_t nExperiments). void initialize(); Make iterator over copy of studies attached to workspace. void run(Int_t nExperiments). void runOne(). void finalize(); Finalize all studies. void exportData(TList* olist, Int_t seqno). Int_t initRandom(); Choose random seed for this process; in case pass a definite seed to have it deterministic; use also worker number. void processFile(const char* infile, Int_t nexp); Read in study package. TObject* Clone(const char* = """") const; { return new RooStudyPackage(*this) ; }. RooWorkspace& wspace(); { return *_ws ; }. std::list<RooAbsStudy*>& studies(); { return _studies ; }. » Last changed: Mon Jun 22 16:42:50 2015 » Last generated: 2015-06-22 16:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStudyPackage.html:5998,Inherit,Inheritance,5998,root/html534/RooStudyPackage.html,https://root.cern,https://root.cern/root/html534/RooStudyPackage.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static VoidFuncPtr_tGetDict(const char* cname); static VoidFuncPtr_tGetDict(const type_info& info); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static Version_tGetID(const char* cname); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static Int_tGetPragmaBits(const char* name); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static char*Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClassTable.html:2929,Inherit,InheritsFrom,2929,root/html532/TClassTable.html,https://root.cern,https://root.cern/root/html532/TClassTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidfirstBox(UInt_t* box) const; voidgeneratePoint(const UInt_t* box, Double_t* x, UInt_t* bin, Double_t& vol, Bool_t useQuasiRandom = kTRUE) const; UInt_tgetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tgetNBins() const; UInt_tgetNBoxes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tgetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tinitialize(const RooAbsFunc& function); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tisValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); Bool_tnextBox(UInt_t* box) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooGrid.html:3115,Inherit,InheritsFrom,3115,root/html532/RooGrid.html,https://root.cern,https://root.cern/root/html532/RooGrid.html,2,['Inherit'],['InheritsFrom']
Modifiability,"msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetClassName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tGetFileStat(FileStat_t* sbuf); virtual const char*TObject::GetIconName() const; const char*GetKeyClassName() const; const char*GetKeyObjectName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRemoteObject&operator=(const TRem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TRemoteObject.html:3025,Inherit,InheritsFrom,3025,root/html532/TRemoteObject.html,https://root.cern,https://root.cern/root/html532/TRemoteObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetClassName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tGetFileStat(FileStat_t* sbuf); virtual const char*TObject::GetIconName() const; const char*GetKeyClassName() const; const char*GetKeyObjectName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRemoteObject&operator=(const TRemoteObject&); virtual voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRemoteObject.html:2919,Inherit,InheritsFrom,2919,root/html602/TRemoteObject.html,https://root.cern,https://root.cern/root/html602/TRemoteObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TH1*GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; Int_tGetNPeaks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_t*GetPositionX() const; Double_t*GetPositionY() const; Double_t*GetPositionZ() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSpectrum3&operator=(const TSpectrum3&); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum3.html:4487,Inherit,InheritsFrom,4487,root/html602/TSpectrum3.html,https://root.cern,https://root.cern/root/html602/TSpectrum3.html,2,['Inherit'],['InheritsFrom']
Modifiability,"msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TGCompositeFrame * fFrame;  ; TString fName;  . Private Member Functions;  TGedSubFrame (const TGedSubFrame &)=delete;  ; TGedSubFrame & operator= (const TGedSubFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html:8319,inherit,inherited,8319,doc/master/classTGedFrame_1_1TGedSubFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html,1,['inherit'],['inherited']
Modifiability,"mt) const; TObject*find(const char* name) const; TObject*find(const TObject* arg) const; RooAbsArg*findArg(const RooAbsArg* arg) const; RooLinkedListElem*findLinkTo(const TObject* arg) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooSetPair*findSetPair(const RooArgSet* set1, const RooArgSet* set2) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHashTable.html:2993,Inherit,InheritsFrom,2993,root/html532/RooHashTable.html,https://root.cern,https://root.cern/root/html532/RooHashTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"mt) const; TObject*find(const char* name) const; TObject*find(const TObject* arg) const; RooAbsArg*findArg(const RooAbsArg* arg) const; RooLinkedListElem*findLinkTo(const TObject* arg) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooSetPair*findSetPair(const RooArgSet* set1, const RooArgSet* set2) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHashTable.html:2873,Inherit,InheritsFrom,2873,root/html602/RooHashTable.html,https://root.cern,https://root.cern/root/html602/RooHashTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"mt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidfirstBox(UInt_t[] box) const; voidgeneratePoint(const UInt_t[] box, Double_t[] x, UInt_t[] bin, Double_t& vol, Bool_t useQuasiRandom = kTRUE) const; UInt_tgetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tgetNBins() const; UInt_tgetNBoxes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tgetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tinitialize(const RooAbsFunc& function); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tisValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); Bool_tnextBox(UInt_t[] box) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGrid.html:3047,Inherit,InheritsFrom,3047,root/html602/RooGrid.html,https://root.cern,https://root.cern/root/html602/RooGrid.html,2,['Inherit'],['InheritsFrom']
Modifiability,"mt, va_list va) const; Int_tExact(Double_t* ndist); Int_tExact2(TMatrixD& mstockbig, TMatrixD& cstockbig, TMatrixD& hyperplane, Double_t* deti, Int_t nbest, Int_t kgroup, TMatrixD& sscp, Double_t* ndist); Double_tKOrdStat(Int_t ntotal, Double_t* arr, Int_t k, Int_t* work); voidTObject::MakeZombie(); Int_tPartition(Int_t nmini, Int_t* indsubdat); Int_tRDist(TMatrixD& sscp); voidRDraw(Int_t* subdat, Int_t ngroup, Int_t* indsubdat). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMatrixDSymfCorrelationcorrelation matrix; TMatrixDSymfCovariancecovariance matrix estimate; TMatrixDfDatathe original data; Int_tfExactif there was an exact fit, stores the number of points on a hyperplane ; Int_tfHalgorithm parameter, determining the subsample size; TVectorDfHyperplanein case more than fH observations lie on a hyperplane; TMatrixDSymfInvcovarianceinverse of the covariance matrix; TVectorDfMeanlocation estimate (mean values); Int_tfNnumber of observations; Int_tfNvarnumber of variables; TArrayIfOutarray of indexes of ouliers, size <0.5*n; TVectorDfRdarray of robust distances, size n; TVectorDfSdarray of standard deviations; Int_tfVarTempnumber of variables already added to the data matrix; Int_tfVecTempnumber of observations already added to the data matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRobustEstimator(); this constructor should be used in a univariate case:; first call this constructor, then - the EvaluateUni(..) function. TRobustEstimator(Int_t nvectors, Int_t nvariables, Int_t hh = 0); constructor. void AddColumn(Double_t* col); adds a column to the data matrix; it is assumed that the column has size fN; variable fVarTemp keeps the number of columns l; already added. void AddR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRobustEstimator.html:11715,variab,variables,11715,root/html528/TRobustEstimator.html,https://root.cern,https://root.cern/root/html528/TRobustEstimator.html,6,['variab'],['variables']
Modifiability,"mt, va_list va) const; voidTObject::MakeZombie(). private:. RooSimPdfBuilder(const RooSimPdfBuilder&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooArgSet_compSplitCatSetList of owned composite splitting categories; list<RooSuperCategory*>_fitCatListThe supercategories that we built; RooArgSet_protoPdfSetSet of prototype PDFS; TList_retiredCustomizerListRetired customizer from previous builds (own their PDF branch nodes); list<RooSimultaneous*>_simPdfListThe simpdfs that we built; RooArgSet_splitNodeListList of owned split nodes; RooArgSet_splitNodeListOwnedList of all split nodes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSimPdfBuilder(const RooArgSet& pdfProtoList). RooArgSet* createProtoBuildConfig(); Make RooArgSet of configuration objects. void addSpecializations(const RooArgSet& specSet). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); Initialize needed components. ~RooSimPdfBuilder(). RooSimPdfBuilder(const RooArgSet& pdfProtoList). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE). return buildPdf(buildConfig,*dataSet->get(),&auxSplitCats,verbose). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE). const RooArgSet& splitLeafList(); { return _splitNodeList; }. » Last changed: Mon Oct 11 11:18:57 2010 » Last generated: 2010-10-11 11:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimPdfBuilder.html:19690,config,configuration,19690,root/html528/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html528/RooSimPdfBuilder.html,1,['config'],['configuration']
Modifiability,"mt, va_list va) const; voidTObject::MakeZombie(). private:. RooSimPdfBuilder(const RooSimPdfBuilder&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooArgSet_compSplitCatSetList of owned composite splitting categories; list<RooSuperCategory*>_fitCatListThe supercategories that we built; RooArgSet_protoPdfSetSet of prototype PDFS; TList_retiredCustomizerListRetired customizer from previous builds (own their PDF branch nodes); list<RooSimultaneous*>_simPdfListThe simpdfs that we built; RooArgSet_splitNodeListList of owned split nodes; RooArgSet_splitNodeListOwnedList of all split nodes. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooSimPdfBuilder(const RooArgSet& pdfProtoList). RooArgSet* createProtoBuildConfig(); Make RooArgSet of configuration objects. void addSpecializations(const RooArgSet& specSet). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE); Initialize needed components. ~RooSimPdfBuilder(). RooSimPdfBuilder(const RooArgSet& pdfProtoList). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet* auxSplitCats = 0, Bool_t verbose = kFALSE). return buildPdf(buildConfig,*dataSet->get(),&auxSplitCats,verbose). RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooArgSet& dependents, const RooArgSet& auxSplitCats, Bool_t verbose = kFALSE). const RooArgSet& splitLeafList(); { return _splitNodeList; }. » Last changed: Tue Mar 10 17:19:08 2015 » Last generated: 2015-03-10 17:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSimPdfBuilder.html:19778,config,configuration,19778,root/html534/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html534/RooSimPdfBuilder.html,2,['config'],['configuration']
Modifiability,"mt, va_list va) const; voidTObject::MakeZombie(); TLeaf&operator=(const TLeaf&). Data Members; public:. enum { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*fBranch! Pointer to supporting branch (we do not own the branch); Bool_tfIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tfIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tfLenNumber of fixed length elements; Int_tfLenTypeNumber of bytes for this data type; TStringTNamed::fNameobject identifier; Int_tfNdata! Number of elements in fAddress data buffer; Int_tfOffsetOffset in ClonesArray object (if one); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeaf(). TLeaf(TBranch* parent, const char* name, const char* type); Create a Leaf. See the TTree and TBranch constructors for explanation of parameters. TLeaf(const TLeaf& ); copy constructor. TLeaf& operator=(const TLeaf& ); assignment operator. ~TLeaf(); -- Destructor. void Browse(TBrowser* b); Browse the content of this leaf. void FillBasket(TBuffer& b); -- Pack leaf elements in Basket output buffer. TLeaf* GetLeafCounter(Int_t& countval) const; -- Return a pointer to the counter of this leaf. If leaf name has the form var[nelem], where nelem is alphanumeric, then; if nelem is a leaf name, return countval = 1 and the pointer to; the leaf named nelem, otherwise return 0.; If leaf name has the form var[nelem], where nelem is a non-negative integer, then; return countval = nelem and a null pointer.; If leaf name has the form of a multi-dimensional array (e.g. var[nelem][nelem2]; where nelem and nelem2 are non-negative integers) then; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLeaf.html:7209,Inherit,Inheritance,7209,root/html532/TLeaf.html,https://root.cern,https://root.cern/root/html532/TLeaf.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mula default constructor. TTreeFormula(const char* name, const char* formula, TTree* tree); Normal TTree Formula Constuctor. TTreeFormula(const char* name, const char* formula, TTree* tree, const vector<string>& aliases); Constructor used during the expansion of an alias. void Init(const char* name, const char* formula); Initialiation called from the constructors. ~TTreeFormula(); Tree Formula default destructor; *-* =================================. void DefineDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* info, Int_t& virt_dim); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(const char* size, Int_t code); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* multidim = 0); This method stores the dimension information for later usage. Int_t RegisterDimensions(Int_t code, TFormLeafInfo* info, TFormLeafInfo* maininfo, Bool_t useCollectionObject); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, TBranchElement* branch); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, TLeaf* leaf); This method is used internally to decode the dimensions of the variables. Int_t DefineAlternate(const char* expression); This method check for treat the case where expression contains $Atl and load up; both fAliases and fExpr.; We return; -1 in case of failure; 0 in case we did not find $Alt; the action number in case of success. Int_t ParseWithLeaf(TLeaf* leaf, const char* expression, Bool_t final, UInt_t paran_level, TObjArray& castqueue, Bool_t useLeafCollectionObject, const char* fullExpression); Decompose 'expression' as pointing to something inside the leaf; Returns:; -2 Error: some information is missing (message already printed); -1 Error: Syntax is incorrect (message already printed); 0; >0 the value ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:24382,variab,variables,24382,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,4,['variab'],['variables']
Modifiability,"mula::(anonymous)ROOT::v5::TFormula::kxexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxgaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxlandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxpol; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxyexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxygaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kxylandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kyexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kygaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kylandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kypol; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzgaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzlandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzpol. Class Charts. Inheritance Chart:. ROOT::v5::TFormula. ←; TTreeFormula. Function documentation; TTreeFormula(); Tree Formula default constructor. TTreeFormula(const char* name, const char* formula, TTree* tree); Normal TTree Formula Constuctor. TTreeFormula(const char* name, const char* formula, TTree* tree, const vector<string>& aliases); Constructor used during the expansion of an alias. void Init(const char* name, const char* formula); Initialiation called from the constructors. ~TTreeFormula(); Tree Formula default destructor; *-* =================================. void DefineDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* info, Int_t& virt_dim); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(const char* size, Int_t code); This method is used internally to decode the dimensions of the variables. Int_t RegisterDimensions(Int_t code, Int_t size, TFormLeafInfoMultiVarDim* multidim = 0); This method stores the dimension information for later usa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeFormula.html:26164,Inherit,Inheritance,26164,root/html604/TTreeFormula.html,https://root.cern,https://root.cern/root/html604/TTreeFormula.html,1,['Inherit'],['Inheritance']
Modifiability,"mula::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tTFormula::Compile(const char* expression = """"); virtual voidCopy(TObject& f3) const; virtual Double_tTF2::Covariance2XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCovariance3XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCovariance3XZ(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCovariance3YZ(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon = 9.9999999999999995E-7); virtual TH1*CreateHistogram(); virtual char*TFormula::DefinedString(Int_t code); virtual Double_tTFormula::DefinedValue(Int_t code); virtual Int_tTFormula::DefinedVariable(TString& variable, Int_t& action); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Double_tTF1::Derivative(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; virtual Double_tTF1::Derivative2(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; virtual Double_tTF1::Derivative3(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; static Double_tTF1::DerivativeError(); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TF1*TF2::DrawCopy(Option_t* option = """") const; virtual TObject*DrawDerivative(Option_t* = ""al""); virtual voidTF1::DrawF1(const char* formula, Double_t xmin, Double_t xmax, Option_t* option = """"); virtual voidTF2::DrawF2(const char* formu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF3.html:2421,variab,variable,2421,root/html602/TF3.html,https://root.cern,https://root.cern/root/html602/TF3.html,2,['variab'],['variable']
Modifiability,"mulaManager.cxx. ◆ UpdateUsedSize(). void TTreeFormulaManager::UpdateUsedSize ; (; Int_t & ; virt_dim, . Int_t ; vsize . ). protectedvirtual . Reload the array sizes. ; Definition at line 308 of file TTreeFormulaManager.cxx. Friends And Related Symbol Documentation. ◆ TTreeFormula. friend class TTreeFormula. friend . Definition at line 47 of file TTreeFormulaManager.h. Member Data Documentation. ◆ fCumulUsedSizes. Int_t TTreeFormulaManager::fCumulUsedSizes[kMAXFORMDIM+1]. private . Accumulated size of lower dimensions as seen for this entry. ; Definition at line 38 of file TTreeFormulaManager.h. ◆ fCumulUsedVarDims. TArrayI* TTreeFormulaManager::fCumulUsedVarDims. private . fCumulUsedSizes(1) for multi variable dimensions case ; Definition at line 39 of file TTreeFormulaManager.h. ◆ fFormulas. TObjArray TTreeFormulaManager::fFormulas. private . Definition at line 32 of file TTreeFormulaManager.h. ◆ fMultiplicity. Int_t TTreeFormulaManager::fMultiplicity. private . Indicator of the variability of the formula. ; Definition at line 33 of file TTreeFormulaManager.h. ◆ fMultiVarDim. bool TTreeFormulaManager::fMultiVarDim. private . True if one of the variable has 2 variable size dimensions. ; Definition at line 34 of file TTreeFormulaManager.h. ◆ fNdata. Int_t TTreeFormulaManager::fNdata. private . ! Last value calculated by GetNdata ; Definition at line 35 of file TTreeFormulaManager.h. ◆ fNeedSync. bool TTreeFormulaManager::fNeedSync. private . Definition at line 45 of file TTreeFormulaManager.h. ◆ fUsedSizes. Int_t TTreeFormulaManager::fUsedSizes[kMAXFORMDIM+1]. private . Actual size of the dimensions as seen for this entry. ; Definition at line 41 of file TTreeFormulaManager.h. ◆ fVarDims. TArrayI* TTreeFormulaManager::fVarDims[kMAXFORMDIM+1]. private . List of variable sizes dimensions. ; Definition at line 42 of file TTreeFormulaManager.h. ◆ fVirtUsedSizes. Int_t TTreeFormulaManager::fVirtUsedSizes[kMAXFORMDIM+1]. private . Virtual size of lower dimensions as seen f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormulaManager.html:17809,variab,variability,17809,doc/master/classTTreeFormulaManager.html,https://root.cern,https://root.cern/doc/master/classTTreeFormulaManager.html,1,['variab'],['variability']
Modifiability,"mulaVar& select, const char* wgtVarName = 0). RooTreeDataStore(const char* name, const char* title, const RooArgSet& vars, TTree& t, const char* selExpr = 0, const char* wgtVarName = 0). RooTreeDataStore(const char* name, const char* title, const RooArgSet& vars, const RooAbsDataStore& tds, const RooFormulaVar& select, const char* wgtVarName = 0). RooTreeDataStore(const char* name, const char* title, const RooArgSet& vars, const RooAbsDataStore& tds, const char* selExpr = 0, const char* wgtVarName = 0). RooTreeDataStore(const char* name, const char* title, RooAbsDataStore& tds, const RooArgSet& vars, const RooFormulaVar* cutVar, const char* cutRange, Int_t nStart, Int_t nStop, Bool_t , const char* wgtVarName = 0). RooArgSet varsNoWeight(const RooArgSet& allVars, const char* wgtName = 0); Utility function for constructors; Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. RooRealVar* weightVar(const RooArgSet& allVars, const char* wgtName = 0); Utility function for constructors; Return pointer to weight variable if it is defined. void attachCache(const RooAbsArg* newOwner, const RooArgSet& cachedVars); Initialize cache of dataset: attach variables of cache ArgSet; to the corresponding TTree branches. RooTreeDataStore(const RooTreeDataStore& other, const char* newname = 0). RooTreeDataStore(const RooTreeDataStore& other, const RooArgSet& vars, const char* newname = 0). ~RooTreeDataStore(); Destructor. void initialize(); One-time initialization common to all constructor forms. Attach; variables of internal ArgSet to the corresponding TTree branches. void createTree(const char* name, const char* title); Create TTree object that lives in memory, independent of current; location of gDirectory. void loadValues(const TTree* t, const RooFormulaVar* select = 0, const char* rangeName = 0, Int_t nStart = 0, Int_t nStop = 2000000000); Load values from tree 't' into this data collection, optionally; selecting events using 'select' RooFormulaVar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooTreeDataStore.html:12747,variab,variable,12747,root/html528/RooTreeDataStore.html,https://root.cern,https://root.cern/root/html528/RooTreeDataStore.html,10,['variab'],['variable']
Modifiability,"mulaVar* identity(); Return identity formula pointer. RooResolutionModel* convolution(RooFormulaVar* basis, RooAbsArg* owner) const; Instantiate a clone of this resolution model representing a convolution with given; basis function. The owners object name is incorporated in the clones name; to avoid multiple convolution objects with the same name in complex PDF structures. Note: The 'inBasis' formula expression must be a RooFormulaVar that encodes the formula; in the title of the object and this expression must be an exact match against the; implemented basis function strings (see derived class implementation of method basisCode(); for those strings. void changeBasis(RooFormulaVar* basis); Change the basis function we convolute with.; For one-time use by convolution() only. const RooRealVar& basisConvVar() const; Return the convolution variable of the selection basis function.; This is, by definition, the first parameter of the basis function. RooRealVar& convVar() const; Return the convolution variable of the resolution model. Double_t getVal(const RooArgSet* nset = 0) const; Modified version of RooAbsPdf::getVal(). If used as regular PDF,; call RooAbsPdf::getVal(), otherwise return unnormalized value; regardless of specified normalization set. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); Forward redirectServers call to our basis function, which is not connected to either resolution; model or the physics model. Bool_t traceEvalHook(Double_t value) const; Floating point error checking and tracing for given float value. void normLeafServerList(RooArgSet& list) const; Return the list of servers used by our normalization integral. Double_t getNorm(const RooArgSet* nset = 0) const; Return the integral of this PDF over all elements of 'nset'. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specified s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooResolutionModel.html:42755,variab,variable,42755,root/html526/RooResolutionModel.html,https://root.cern,https://root.cern/root/html526/RooResolutionModel.html,3,['variab'],['variable']
Modifiability,"mulaVar* identity(); Return identity formula pointer. RooResolutionModel* convolution(RooFormulaVar* basis, RooAbsArg* owner) const; Instantiate a clone of this resolution model representing a convolution with given; basis function. The owners object name is incorporated in the clones name; to avoid multiple convolution objects with the same name in complex PDF structures. Note: The 'inBasis' formula expression must be a RooFormulaVar that encodes the formula; in the title of the object and this expression must be an exact match against the; implemented basis function strings (see derived class implementation of method basisCode(); for those strings. void changeBasis(RooFormulaVar* basis); Change the basis function we convolute with.; For one-time use by convolution() only. const RooRealVar& basisConvVar() const; Return the convolution variable of the selection basis function.; This is, by definition, the first parameter of the basis function. RooRealVar& convVar() const; Return the convolution variable of the resolution model. Double_t getValV(const RooArgSet* nset = 0) const; Modified version of RooAbsPdf::getValF(). If used as regular PDF,; call RooAbsPdf::getValF(), otherwise return unnormalized value; regardless of specified normalization set. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); Forward redirectServers call to our basis function, which is not connected to either resolution; model or the physics model. Bool_t traceEvalHook(Double_t value) const; Floating point error checking and tracing for given float value. void normLeafServerList(RooArgSet& list) const; Return the list of servers used by our normalization integral. Double_t getNorm(const RooArgSet* nset = 0) const; Return the integral of this PDF over all elements of 'nset'. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this object to the specifie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooResolutionModel.html:45046,variab,variable,45046,root/html532/RooResolutionModel.html,https://root.cern,https://root.cern/root/html532/RooResolutionModel.html,8,['variab'],['variable']
Modifiability,"mulas and should probably be replaced with something more; efficient later. Function Members (Methods); public:. virtual~TActivationTanh(); static TClass*Class(); virtual Double_tEval(Double_t arg); virtual Double_tEvalDerivative(Double_t arg); virtual TStringGetExpression(); virtual Double_tGetMax(); virtual Double_tGetMin(); virtual TClass*IsA() const; virtual voidMakeFunction(ostream& fout, const TString& fncName); TMVA::TActivationTanh&operator=(const TMVA::TActivationTanh&); voidSetSlow(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMVA::TActivationTMVA::TActivation::TActivation(); TMVA::TActivationTMVA::TActivation::TActivation(const TMVA::TActivation&); TMVA::TActivationTanhTActivationTanh(); TMVA::TActivationTanhTActivationTanh(const TMVA::TActivationTanh&). private:. Double_tfast_tanh(Double_t arg). Data Members; private:. Bool_tfFAST. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TActivationTanh(); constructor for tanh sigmoid (normalized in [-1,1]). ~TActivationTanh(); destructor. Double_t fast_tanh(Double_t arg); a fast tanh approximation. Double_t Eval(Double_t arg); evaluate the tanh. Double_t EvalDerivative(Double_t arg); evaluate the derivative. TString GetExpression(); get expressions for the tanh and its derivative; whatever that may be good for ... void MakeFunction(ostream& fout, const TString& fncName); writes the sigmoid activation function source code. TActivationTanh(). Double_t GetMin(); minimum of the range of the activation function. { return -1; }. Double_t GetMax(); maximum of the range of the activation function. { return 1; }. void SetSlow(); {fFAST=kFALSE;}. » Author: Matt Jachowski » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__TActivationTanh.html:1387,Inherit,Inheritance,1387,root/html604/TMVA__TActivationTanh.html,https://root.cern,https://root.cern/root/html604/TMVA__TActivationTanh.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mulas.emplace_back(ttf);; 321 fInputTableFormulas.emplace_back(std::make_pair(ttf, (Int_t) 0));; 322 } else {; 323 // it is a variable from an array; 324 if (firstArrayVar) {; 325 ; 326 // create a new TFormula; 327 ttf = new TTreeFormula(Form(""Formula%s"", dsi.GetVariableInfo(i).GetInternalName().Data()),; 328 dsi.GetVariableInfo(i).GetExpression().Data(), tr);; 329 CheckTTreeFormula(ttf, dsi.GetVariableInfo(i).GetExpression(), hasDollar);; 330 fInputFormulas.push_back(ttf);; 331 ; 332 arraySize = dsi.GetVarArraySize(dsi.GetVariableInfo(i).GetExpression());; 333 firstArrayVar = kFALSE;; 334 firstArrayVarIndex = i;; 335 ; 336 Log() << kINFO << ""Using variable "" << dsi.GetVariableInfo(i).GetInternalName() <<; 337 "" from array expression "" << dsi.GetVariableInfo(i).GetExpression() << "" of size "" << arraySize << Endl;; 338 }; 339 fInputTableFormulas.push_back(std::make_pair(ttf, (Int_t) i-firstArrayVarIndex));; 340 if (int(i)-firstArrayVarIndex == arraySize-1 ) {; 341 // I am the last element of the array; 342 firstArrayVar = kTRUE;; 343 firstArrayVarIndex = -1;; 344 Log() << kDEBUG << ""Using Last variable from array : "" << dsi.GetVariableInfo(i).GetInternalName() << Endl;; 345 }; 346 }; 347 ; 348 }; 349 ; 350 //; 351 // targets; 352 //; 353 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform regression targets"" << Endl;; 354 for (formIt = fTargetFormulas.begin(), formItEnd = fTargetFormulas.end(); formIt!=formItEnd; ++formIt) if (*formIt) delete *formIt;; 355 fTargetFormulas.clear();; 356 for (UInt_t i=0; i<dsi.GetNTargets(); i++) {; 357 ttf = new TTreeFormula( TString::Format( ""Formula%s"", dsi.GetTargetInfo(i).GetInternalName().Data() ),; 358 dsi.GetTargetInfo(i).GetExpression().Data(), tr );; 359 CheckTTreeFormula( ttf, dsi.GetTargetInfo(i).GetExpression(), hasDollar );; 360 fTargetFormulas.push_back( ttf );; 361 }; 362 ; 363 //; 364 // spectators; 365 //; 366 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform spectator variables""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:13844,variab,variable,13844,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,mulatedAnnealingFitter::~SimulatedAnnealingFitter ; (; ). inlinevirtual . Definition at line 56 of file SimulatedAnnealingFitter.h. Member Function Documentation. ◆ Class(). static TClass * TMVA::SimulatedAnnealingFitter::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::SimulatedAnnealingFitter::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::SimulatedAnnealingFitter::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 87 of file SimulatedAnnealingFitter.h. ◆ DeclareOptions(). void TMVA::SimulatedAnnealingFitter::DeclareOptions ; (; ). privatevirtual . declare SA options. . MaxCalls <int> maximum number of calls for simulated annealing; TemperatureGradient <float> temperature gradient for simulated annealing; UseAdaptiveTemperature <bool> use of adaptive temperature for simulated annealing; InitialTemperature <float> initial temperature for simulated annealing; MinTemperature <float> minimum temperature for simulated annealing; Eps <int> number of epochs for simulated annealing; NFunLoops <int> number of loops for simulated annealing; NEps <int> number of epochs for simulated annealing . Implements TMVA::FitterBase.; Definition at line 74 of file SimulatedAnnealingFitter.cxx. ◆ DeclFileName(). static const char * TMVA::SimulatedAnnealingFitter::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 87 of file SimulatedAnnealingFitter.h. ◆ IsA(). virtual TClass * TMVA::SimulatedAnnealingFitter::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::FitterBase.; Definition at line 87 of file SimulatedAnnealingFitter.h. ◆ Run(). Double_t TMVA::SimulatedAnnealingFitter::Run ; (; std::vector< Double_t > & ; pars). virtual . Execute fitting. ; Implements TMVA::FitterBase.; Definition at line 136 of file Simulated,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealingFitter.html:18005,adapt,adaptive,18005,doc/master/classTMVA_1_1SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealingFitter.html,1,['adapt'],['adaptive']
Modifiability,multaneous fits to multiple datasets ;  ; file  rf501_simultaneouspdf.py;   Organization and simultaneous fits: using simultaneous pdfs to describe simultaneous fits to multiple datasets ;  ; file  rf502_wspacewrite.C;   Organisation and simultaneous fits: creating and writing a workspace ;  ; file  rf502_wspacewrite.py;   Organization and simultaneous fits: creating and writing a workspace ;  ; file  rf503_wspaceread.C;   Organisation and simultaneous fits: reading and using a workspace ;  ; file  rf503_wspaceread.py;   'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #503 ;  ; file  rf504_simwstool.C;   Organisation and simultaneous fits: using RooSimWSTool to construct a simultaneous pdf that is built of variations of an input pdf ;  ; file  rf504_simwstool.py;   Organization and simultaneous fits: using RooSimWSTool to construct a simultaneous pdf that is built of variations of an input pdf ;  ; file  rf505_asciicfg.C;   Organisation and simultaneous fits: reading and writing ASCII configuration files ;  ; file  rf505_asciicfg.py;   Organization and simultaneous fits: reading and writing ASCII configuration files ;  ; file  rf506_msgservice.C;   Organisation and simultaneous fits: tuning and customizing the RooFit message logging facility ;  ; file  rf506_msgservice.py;   Organization and simultaneous fits: tuning and customizing the ROOT.RooFit message logging facility ;  ; file  rf508_listsetmanip.C;   Organization and simultaneous fits: RooArgSet and RooArgList tools and tricks ;  ; file  rf508_listsetmanip.py;   'ORGANIZATION AND SIMULTANEOUS FITS' RooFit tutorial macro #508 ;  ; file  rf509_wsinteractive.C;   Organization and simultaneous fits: easy interactive access to workspace contents - CINT to CLING code migration ;  ; file  rf509_wsinteractive.py;   Organization and simultaneous fits: easy interactive access to workspace contents - CINT to CLING code migration ;  ; file  rf510_wsnamedsets.C;   Organization and simultaneous fits: working with,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:13112,config,configuration,13112,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['config'],['configuration']
Modifiability,"multiple values of a RooAbsReal. ;  ; double evaluate () const override;  Note: P_0^0 = 1, so P_l^m = P_l^m P_0^0. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegendre.html:49040,parameteriz,parameterized,49040,doc/master/classRooLegendre.html,https://root.cern,https://root.cern/doc/master/classRooLegendre.html,1,['parameteriz'],['parameterized']
Modifiability,"mum () const;  ; virtual Int_t GetMinimum () const;  ; virtual Int_t GetNdata () const;  ; virtual Int_t GetOffset () const;  ; template<typename T > ; T GetTypedValue (Int_t i=0) const;  ; virtual Long64_t GetValueLong64 (Int_t i=0) const;  ; virtual LongDouble_t GetValueLongDouble (Int_t i=0) const;  ; virtual bool IncludeRange (TLeaf *);  ; virtual bool IsOnTerminalBranch () const;  ; virtual bool IsRange () const;  ; virtual bool IsUnsigned () const;  ; virtual bool ReadBasketFast (TBuffer &, Long64_t);  ; virtual bool ReadBasketSerialized (TBuffer &, Long64_t);  ; Int_t ResetAddress (void *add, bool calledFromDestructor=false);  Helper routine for TLeafX::SetAddress. ;  ; virtual void SetBranch (TBranch *branch);  ; virtual void SetLeafCount (TLeaf *leaf);  Set the leaf count of this leaf. ;  ; virtual void SetLen (Int_t len=1);  ; virtual void SetOffset (Int_t offset=0);  ; virtual void SetRange (bool range=true);  ; virtual void SetUnsigned ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafD32.html:4346,inherit,inherited,4346,doc/master/classTLeafD32.html,https://root.cern,https://root.cern/doc/master/classTLeafD32.html,2,['inherit'],['inherited']
Modifiability,"mum number of function evaluations to be allowed.; maxpts >= 2^n +2*n*(n+1) +1; if maxpts<minpts, maxpts is set to 10*minpts; epsrel : Specified relative accuracy.; epsabs : Specified absolute accuracy.; The integration algorithm will attempt to reach either the relative or the absolute accuracy.; In case the maximum funcion called is reached the algorithm will stop earlier without having reached; the desired accuracy. Output parameters:. relerr : Contains, on exit, an estimation of the relative accuracy of the result.; nfnevl : number of function evaluations performed.; ifail :; 0 Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1 maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 3 n<2 or n>15. Method:. The default method used is the Genz-Mallik adaptive multidimensional algorithm; using the class ROOT::Math::AdaptiveIntegratorMultiDim; (see the reference documentation of the class); Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator(); to different integrators.; Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class; Possible methods are : Vegas, Miser or Plain; IN case of MC integration the accuracy is determined by the number of function calls, one should be; careful not to use a too large value of maxpts. Bool_t IsInside(const Double_t* x) const; Return kTRUE if the point is inside the function range. void Paint(Option_t* option = """"); Paint this function with its current attributes. void Print(Option_t* option = """") const; Dump this function with its attributes. void ReleaseParameter(Int_t ipar); Release parameter number ipar If used in a fit, the parameter; can vary freely. The parameter limits are reset to 0,0. void Save(Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Double_t zmin, Double_t zmax); Save values of function in array fSa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF1.html:60717,adapt,adaptive,60717,root/html602/TF1.html,https://root.cern,https://root.cern/root/html602/TF1.html,3,"['Adapt', 'adapt']","['AdaptiveIntegratorMultiDim', 'adaptive']"
Modifiability,"mum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_t_takeRootReturn n-order root of moment; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxy_xObservable; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsMoment(); Default constructor. RooAbsMoment(const char* name, const char* title, RooAbsReal& func, RooRealVar& x, Int_t order = 1, Bool_t takeRoot = kFALSE). RooAbsMoment(const RooAbsMoment& other, const char* name = 0). ~RooAbsMoment(); Destructor. Int_t order() const; { return _order ; }. Bool_t central() const; { return _mean.absArg() ? kTRUE : kFALSE ; }. RooAbsReal* mean(); { return (RooAbsReal*) _mean.absArg() ; }. » Last changed: Tue Jun 2 15:27:11 2015 » Last generated: 2015-06-02 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsMoment.html:37436,Inherit,Inheritance,37436,root/html604/RooAbsMoment.html,https://root.cern,https://root.cern/root/html604/RooAbsMoment.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"mum(Double_t minval = -3.40282347E+38F) const; Return minimum value larger than minval of bins in the range,; unless the value has been overridden by TH1::SetMinimum,; in which case it returns that value. (This happens, for example,; when the histogram is drawn and the y or z axis limits are changed. To get the minimum value of bins in the histogram regardless of; whether the value has been overridden, use; h->GetBinContent(h->GetMinimumBin()). Int_t GetMinimumBin() const; Return location of bin with minimum value in the range. Int_t GetMinimumBin(Int_t& locmix, Int_t& locmiy, Int_t& locmiz) const; Return location of bin with minimum value in the range. void SetBins(Int_t nx, Double_t xmin, Double_t xmax); Redefine x axis parameters. The X axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins); Redefine x axis parameters with variable bin sizes. The X axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is supposed to be of length nx+1. void SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); Redefine x and y axis parameters. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); Redefine x and y axis parameters with variable bin sizes. The X and Y axis parameters are modified.; The bins content array is resized; if errors (Sumw2) the errors array is resized; The previous bin contents are lost; To change only the axis limits, see TAxis::SetRange; xBins is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:124402,variab,variable,124402,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,4,['variab'],['variable']
Modifiability,"must be complex-Hermitian, if the ipoint > n/2, the according point before n/2 is set to (re, -im) ;  ; void SetPointComplex (Int_t ipoint, TComplex &c) override;  since the input must be complex-Hermitian, if the ipoint > n/2, the according point before n/2 is set to (re, -im) ;  ; void SetPoints (const Double_t *data) override;  set all points. ;  ; void SetPointsComplex (const Double_t *re, const Double_t *im) override;  Set all points. The values are copied. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Transform () override;  Computes the transform, specified in Init() function. ;  ;  Public Member Functions inherited from TVirtualFFT;  TVirtualFFT ();  ; virtual ~TVirtualFFT ();  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTComplexReal.html:5073,inherit,inherited,5073,doc/master/classTFFTComplexReal.html,https://root.cern,https://root.cern/doc/master/classTFFTComplexReal.html,1,['inherit'],['inherited']
Modifiability,"mw2 . ). Increment the bin content of the bin enclosing the given coordinates. ; Parameters. [in]rowCoordinates of the bin. ; [in]wgtIncrement by this weight. ; [in]sumw2Optionally, track the sum of squared weights. If a value > 0 or a weight != 1. is passed for the first time, a vector for the squared weights will be allocated. . Definition at line 1704 of file RooDataHist.cxx. ◆ add() [4/4]. void RooDataHist::add ; (; const RooArgSet & ; row, . double ; wgt = 1.0 . ). inlineoverridevirtual . Add wgt to the bin content enclosed by the coordinates passed in row. ; Implements RooAbsData.; Definition at line 72 of file RooDataHist.h. ◆ adjustBinning(). void RooDataHist::adjustBinning ; (; const RooArgList & ; vars, . const TH1 & ; href, . Int_t * ; offset = nullptr . ). protected . Adjust binning specification on first and optionally second and third observable to binning in given reference TH1. ; Used by constructors that import data from an external TH1. Both the variables in vars and in this RooDataHist are adjusted. Parameters. varsList with variables that are supposed to have their binning adjusted. ; hrefReference histogram that dictates the binning ; offsetIf not nullptr, a possible bin count offset for the axes x,y,z is saved here as Int_t[3] . Definition at line 737 of file RooDataHist.cxx. ◆ arraySize(). int RooDataHist::arraySize ; (; ); const. inline . Definition at line 215 of file RooDataHist.h. ◆ binVolume() [1/3]. double RooDataHist::binVolume ; (; ); const. inline . Return volume of current bin. ; Deprecated:Use binVolume(std::size_t) const. ; Definition at line 194 of file RooDataHist.h. ◆ binVolume() [2/3]. double RooDataHist::binVolume ; (; const RooArgSet & ; bin); const. Return the volume of the bin enclosing coordinates 'coord'. ; Definition at line 2202 of file RooDataHist.cxx. ◆ binVolume() [3/3]. double RooDataHist::binVolume ; (; std::size_t ; i); const. inline . Return bin volume of i-th bin. ; See alsogetIndex() ; Definition at line 118 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:53012,variab,variables,53012,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variables']
Modifiability,"mwtTotal Sum of weight*T; Double_tfTsumwt2Total Sum of weight*T*T; Double_tTH1::fTsumwxTotal Sum of weight*X; Double_tTH1::fTsumwx2Total Sum of weight*X*X; Double_tTH3::fTsumwxyTotal Sum of weight*X*Y; Double_tTH3::fTsumwxzTotal Sum of weight*X*Z; Double_tTH3::fTsumwyTotal Sum of weight*Y; Double_tTH3::fTsumwy2Total Sum of weight*Y*Y; Double_tTH3::fTsumwyzTotal Sum of weight*Y*Z; Double_tTH3::fTsumwzTotal Sum of weight*Z; Double_tTH3::fTsumwz2Total Sum of weight*Z*Z; TAxisTH1::fXaxisX axis descriptor; TAxisTH1::fYaxisY axis descriptor; TAxisTH1::fZaxisZ axis descriptor; static Bool_tTH1::fgAddDirectory!flag to add histograms to the directory; static Bool_tfgApproximatebin error approximation option; static Int_tTH1::fgBufferSize!default buffer size for automatic histograms; static Bool_tTH1::fgDefaultSumw2!flag to call TH1::Sumw2 automatically at histogram creation time; static Bool_tTH1::fgStatOverflows!flag to use under/overflows in statistics. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProfile3D(); Default constructor for Profile3D histograms*-*-*-; *-* ============================================. ~TProfile3D(); Default destructor for Profile3D histograms*-*-*-; *-* ===========================================. TProfile3D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup, Option_t* option = """"); Normal Constructor for Profile histograms*-*-*-*-; *-* ==========================================. The first eleven parameters are similar to TH3D::TH3D.; All values of t are accepted at filling time.; To fill a profile3D histogram, one must use TProfile3D::Fill function. Note that when filling the profile histogram the function Fill; checks if the variable t is betyween fTmin and fTmax.; If a minimum or maximum value is set for the T scale before filling,; then all values below tmin or above tmax will be discar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile3D.html:28609,Inherit,Inheritance,28609,root/html532/TProfile3D.html,https://root.cern,https://root.cern/root/html532/TProfile3D.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"myFile.root"");; gROOT#define gROOTDefinition TROOT.h:406; TDirectory::FindObjectTObject * FindObject(const char *name) const overrideFind object by name in the list of memory objects.Definition TDirectory.cxx:784; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; The above statement can be abbreviated to: TFile *myFile = (TFile*)gROOT->FindObject(""/Files/myFile.root"");; or even to: TFile *myFile = (TFile*)gROOT->FindObjectAny(""myFile.root"");; TDirectoryFile::FindObjectAnyTObject * FindObjectAny(const char *name) const overrideFind object by name in the list of memory objects of the current directory or its sub-directories.Definition TDirectoryFile.cxx:843; In this last case, the TROOT::FindObjectAny function will scan the folder hierarchy starting at //root and will return the first object named ""myFile.root"".; Because a string-based search mechanism is expensive, it is recommended to save the pointer to the object as a class member or local variable if this pointer is used frequently or inside loops. ; Definition at line 30 of file TFolder.h. Public Member Functions;  TFolder ();  Default constructor used by the Input functions. ;  ;  TFolder (const char *name, const char *title);  Create a normal folder. ;  ; virtual ~TFolder ();  Folder destructor. ;  ; virtual void Add (TObject *obj);  Add object to this folder. obj must be a TObject or a TFolder. ;  ; TFolder * AddFolder (const char *name, const char *title, TCollection *collection=nullptr);  Create a new folder and add it to the list of folders of this folder, return a pointer to the created folder. ;  ; void Browse (TBrowser *b) override;  Browse this folder. ;  ; void Clear (Option_t *option="""") override;  Delete all objects from a folder list. ;  ; void Copy (TObject &) const override;  Copy this to obj. ;  ; virtual const char * FindFullPathName (const char *name) const;  Return the full pathname corresponding to subpath name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFolder.html:4143,variab,variable,4143,doc/master/classTFolder.html,https://root.cern,https://root.cern/doc/master/classTFolder.html,1,['variab'],['variable']
Modifiability,"myvar2 : 2.460e-01; : 4 : var3 : 2.377e-01; : ----------------------------------------; RuleFit : Ranking result (top variable is best ranked); : -------------------------------; : Rank : Variable : Importance; : -------------------------------; : 1 : var4 : 1.000e+00; : 2 : myvar1 : 6.981e-01; : 3 : var3 : 5.947e-01; : 4 : myvar2 : 4.105e-01; : -------------------------------; TH1.Print Name = TrainingHistory_DNN_CPU_trainingError, Entries= 0, Total sum= 15.1237; TH1.Print Name = TrainingHistory_DNN_CPU_valError, Entries= 0, Total sum= 14.7947; Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_Cuts.weights.xml␛[0m; : Read cuts optimised using sample of MC events; : Reading 100 signal efficiency bins for 4 variables; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_CutsD.weights.xml␛[0m; : Read cuts optimised using sample of MC events; : Reading 100 signal efficiency bins for 4 variables; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_Likelihood.weights.xml␛[0m; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_LikelihoodPCA.weights.xml␛[0m; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_PDERS.weights.xml␛[0m; : signal and background scales: 0.001 0.001; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_PDEFoam.weights.xml␛[0m; : Read foams from file: ␛[0;36mdataset/weights/TMVAClassification_PDEFoam.weights_foams.root␛[0m; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_KNN.weights.xml␛[0m; : Creating kd-tree with 2000 events; : Computing scale factor for 1d distributions: (ifrac, bottom, top) = (80%, 10%, 90%); ModulekNN : Optimizing tree for 4 variables with 2000 values; : <Fill> Class 1 has 1000 events; : <Fill> Class 2 has 1000 events; : Reading weight file: ␛[0;36mdataset/weights/TMVAClassification_LD.weights.xml␛[0m; : Reading weight file: ␛[0;36mdataset/weights/T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:63560,variab,variables,63560,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['variab'],['variables']
Modifiability,"n &func, const UnBinData &data, const double *p, double *grad, unsigned int &nPoints, ::ROOT::EExecutionPolicy executionPolicy=::ROOT::EExecutionPolicy::kSequential, unsigned nChunks=0);  evaluate the LogL gradient given a model function and the data at the point p. ;  ; double EvaluatePdf (const IModelFunction &func, const UnBinData &data, const double *p, unsigned int ipoint, double *g=nullptr, double *h=nullptr, bool hasGrad=false, bool fullHessian=false);  evaluate the pdf contribution to the LogL given a model function and the BinPoint data. ;  ; double EvaluatePoissonBinPdf (const IModelFunction &func, const BinData &data, const double *x, unsigned int ipoint, double *g=nullptr, double *h=nullptr, bool hasGrad=false, bool fullHessian=false);  evaluate the pdf contribution to the Poisson LogL given a model function and the BinPoint data. ;  ; double EvaluatePoissonLogL (const IModelFunction &func, const BinData &data, const double *p, int iWeight, bool extended, unsigned int &nPoints, ::ROOT::EExecutionPolicy executionPolicy, unsigned nChunks=0);  evaluate the Poisson LogL given a model function and the data at the point p. ;  ; void EvaluatePoissonLogLGradient (const IModelFunction &func, const BinData &data, const double *p, double *grad, unsigned int &nPoints, ::ROOT::EExecutionPolicy executionPolicy=::ROOT::EExecutionPolicy::kSequential, unsigned nChunks=0);  evaluate the Poisson LogL given a model function and the data at the point p. ;  ; unsigned setAutomaticChunking (unsigned nEvents);  . Detailed Description; namespace defining utility free functions using in Fit for evaluating the various fit method functions (chi2, likelihood, etc..) given the data and the model function ; Typedef Documentation. ◆ IGradModelFunction. typedef ROOT::Math::IParamMultiGradFunction ROOT::Fit::FitUtil::IGradModelFunction. Definition at line 65 of file FitUtil.h. ◆ IGradModelFunctionTempl. template<class T > . using ROOT::Fit::FitUtil::IGradModelFunctionTempl = typedef ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html:3593,extend,extended,3593,doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html,1,['extend'],['extended']
Modifiability,"n 'left' and 'right' shapes positioned with respect to an ARBITRARY reference frame. The boolean node is referenced by a mother composite shape and its shape components may be primitive but also composite shapes. The later situation leads to a binary tree hierarchy. When the parent composite shape is used to create a volume, the reference frame of the volume is chosen to match the frame in which node shape components were defined.; The positioned shape components may or may not be disjoint. The specific implementations for Boolean nodes are:. TGeoUnion - representing the Boolean union of two positioned shapes; TGeoSubtraction - representing the Boolean subtraction of two positioned shapes; TGeoIntersection - representing the Boolean intersection of two positioned shapes . Definition at line 25 of file TGeoBoolNode.h. Classes; struct  ThreadData_t;  . Public Types; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoBoolNode ();  Default constructor. ;  ;  TGeoBoolNode (const char *expr1, const char *expr2);  Constructor called by TGeoCompositeShape providing 2 subexpressions for the 2 branches. ;  ;  TGeoBoolNode (TGeoShape *left, TGeoShape *right, TGeoMatrix *lmat=nullptr, TGeoMatrix *rmat=nullptr);  Constructor providing left and right shapes and matrices (in the Boolean operation). ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBoolNode.html:1488,inherit,inherited,1488,doc/master/classTGeoBoolNode.html,https://root.cern,https://root.cern/doc/master/classTGeoBoolNode.html,1,['inherit'],['inherited']
Modifiability,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; void Obsolete (const char *method, const char *asOfVers, const char *removedFromVers) const;  Use this method to declare a method obsolete. ;  ; void operator delete (void *ptr);  Operator delete. ;  ; void operator delete (void *ptr, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCollection.html:9403,inherit,inherits,9403,doc/v632/classTCollection.html,https://root.cern,https://root.cern/doc/v632/classTCollection.html,30,['inherit'],['inherits']
Modifiability,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocInfo.html:5378,inherit,inherits,5378,doc/master/classTClassDocInfo.html,https://root.cern,https://root.cern/doc/master/classTClassDocInfo.html,1,['inherit'],['inherits']
Modifiability,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParameter.html:6018,inherit,inherits,6018,doc/master/classTParameter.html,https://root.cern,https://root.cern/doc/master/classTParameter.html,2,['inherit'],['inherits']
Modifiability,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinkedList.html:6964,inherit,inherits,6964,doc/master/classRooLinkedList.html,https://root.cern,https://root.cern/doc/master/classRooLinkedList.html,10,['inherit'],['inherits']
Modifiability,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatistic.html:5311,inherit,inherits,5311,doc/master/classTStatistic.html,https://root.cern,https://root.cern/doc/master/classTStatistic.html,1,['inherit'],['inherits']
Modifiability,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjString.html:4988,inherit,inherits,4988,doc/master/classTObjString.html,https://root.cern,https://root.cern/doc/master/classTObjString.html,1,['inherit'],['inherits']
Modifiability,"n () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; virtual TClass * IsA () const;  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; virtual void ls (Option_t *option="""") const;  The ls function lists the contents of a class on stdout. ;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIconBoxThumb.html:4159,inherit,inherits,4159,doc/master/classTIconBoxThumb.html,https://root.cern,https://root.cern/doc/master/classTIconBoxThumb.html,1,['inherit'],['inherits']
Modifiability,"n ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; virtual bool Equals (RooArgSet &x1, RooArgSet &x2);  whether we own the proposal density function ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::unique_ptr< RooDataSet > fCache;  our position in the cached proposal data set ;  ; Int_t fCachePosition = 0;  how many points to generate each time ;  ; Int_t fCacheSize = 1;  the last point we were at ;  ; std::map< RooRealVar *, RooAbsReal * >::iterator fIt;  map of values in pdf to update ;  ; RooArgSet fLastX;  pdf iterator ;  ; std::map< RooRealVar *, RooAbsReal * > fMap;  the proposal density function ;  ; RooArgSet fMaster;  the cached proposal data set ;  ; bool fOwnsPdf = false;  pointers to master variables needed for updates ;  ; RooAbsPdf * fPdf = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html:13720,variab,variables,13720,doc/master/classRooStats_1_1PdfProposal.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html,1,['variab'],['variables']
Modifiability,"n ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TDatabasePDG (const TDatabasePDG &db);  hash-map from pdg-code to particle ;  ; void BuildPdgMap () const;  Build fPdgMap mapping pdg-code to particle. ;  ; TDatabasePDG & operator= (const TDatabasePDG &db);  ; virtual void ReadPDGTableImpl (const char *filename, bool isParticleListInitializedWhenInvoking);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObjArray * fListOfClasses;  ; THashList * fParticleList;  ; TExMap * fPdgMap;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TDatabasePDG.h>. Inheritance diagram for TDatabasePDG:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDatabasePDG.html:13123,inherit,inherited,13123,doc/master/classTDatabasePDG.html,https://root.cern,https://root.cern/doc/master/classTDatabasePDG.html,1,['inherit'],['inherited']
Modifiability,"n ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fCalcMass;  ; Int_t fDaughter [2];  ; Double_t fE;  ; Int_t fMother [2];  ; TParticlePDG * fParticlePDG;  ; Int_t fPdgCode;  ; Double_t fPolarPhi;  ; Double_t fPolarTheta;  ; Double_t fPx;  ; Double_t fPy;  ; Double_t fPz;  ; Int_t fStatusCode;  ; Double_t fVt;  ; Double_t fVx;  ; Double_t fVy;  ; Double_t fVz;  ; Float_t fWeight;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParticle.html:15585,inherit,inherited,15585,doc/master/classTParticle.html,https://root.cern,https://root.cern/doc/master/classTParticle.html,1,['inherit'],['inherited']
Modifiability,"n ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TLine.h>. Inheritance diagram for TLine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkLineNDC Use NDC coordinates. . kVertical Line is vertical. . kHorizontal Line is horizontal. . Definition at line 32 of file TLine.h. Constructor & Destructor Documentation. ◆ TLine() [1/3]. TLine::TLine ; (; ). inline . Definition at line 38 of file TLine.h. ◆ TLine() [2/3]. TLine::TLine ; (; Double_t ; x1, . Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine.html:14866,inherit,inherited,14866,doc/master/classTLine.html,https://root.cern,https://root.cern/doc/master/classTLine.html,1,['inherit'],['inherited']
Modifiability,"n ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void AssignCaloVizParameters (TEveCaloViz *cv);  Assign parameters from given model. ;  ; virtual void BuildCellIdCache ()=0;  ; void SetupColorHeight (Float_t value, Int_t slice, Float_t &height) const;  Set color and height for a given value and slice using slice color or TEveRGBAPalette. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  . Protected Attributes; Bool_t fAutoRange;  ; Float_t fBarrelRadius;  ; Bool_t fCellIdCacheOK;  ; TEveCaloData * fData;  ; Float_t fEndCapPosB;  ; Float_t fEndCapPosF;  ; Double_t fEtaMax;  ; Double_t fEtaMin;  ; Float_t fMaxTowerH;  ; Float_t fMaxValAbs;  ; TEveRGBAPalette * fPalette;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCaloViz.html:32890,inherit,inherited,32890,doc/master/classTEveCaloViz.html,https://root.cern,https://root.cern/doc/master/classTEveCaloViz.html,1,['inherit'],['inherited']
Modifiability,"n ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TMethodCall * fGetter;  ; Bool_t fInitialized;  ; TObject * fObject;  ; TMethodCall * fSetter;  ; Int_t * fTglVariable;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; Long_t fOffValue;  ; Long_t fOnValue;  ; Bool_t fState;  ; Longptr_t fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TToggle.h>. Inheritance diagram for TToggle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTToggle.html:12154,inherit,inherited,12154,doc/master/classTToggle.html,https://root.cern,https://root.cern/doc/master/classTToggle.html,1,['inherit'],['inherited']
Modifiability,"n ();  Do the garbage collection. ;  ; static void GarbageCollect (TObject *obj);  Add to the list of things to be cleaned up. ;  ; static TCollection * GetCurrentCollection ();  Return the globally accessible collection. ;  ; static void StartGarbageCollection ();  Set up for garbage collection. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TSeqCollection ();  ; virtual void Changed ();  ;  Protected Member Functions inherited from TCollection;  TCollection ();  ; virtual const char * GetCollectionEntryName (TObject *entry) const;  For given collection entry return the string that is used to identify the object and, potentially, perform wildcard/regexp filtering on. ;  ; virtual void PrintCollectionEntry (TObject *entry, Option_t *option, Int_t recurse) const;  Print the collection entry. ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fSorted;  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . Additional Inherited Members;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x0400",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSeqCollection.html:13690,inherit,inherited,13690,doc/master/classTSeqCollection.html,https://root.cern,https://root.cern/doc/master/classTSeqCollection.html,1,['inherit'],['inherited']
Modifiability,"n (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetNumberOfWorkers (const char *url=0);  Static method to determine the number of workers giving priority to users request. ;  ;  Static Public Member Functions inherited from TProof; static void AddEnvVar (const char *name, const char *value);  Add an variable to the list of environment variables passed to proofserv on the master and slaves. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DelEnvVar (const char *name);  Remove an variable from the list of environment variables passed to proofserv on the master and slaves. ;  ; static const TList * GetEnvVars ();  Get environemnt variables. ;  ; static TObject * GetOutput (const char *name, TList *out);  Find object 'name' in list 'out' or in the files specified in there. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Double_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, Int_t &value);  Get the value from the specified parameter from the specified collection. ;  ; static Int_t GetParameter (TCollection *c, const char *par, L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:31079,inherit,inherited,31079,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,3,"['inherit', 'variab']","['inherited', 'variable', 'variables']"
Modifiability,"n (with respect to total phase space. ;  ; Double_t * fXmax;  [fDim] maximum for variable transform ;  ; Double_t * fXmin;  [fDim] minimum for variable transform ;  . Friends; class PDEFoamKernelBase;  ; class PDEFoamKernelGauss;  ; class PDEFoamKernelLinN;  ; class PDEFoamKernelTrivial;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/PDEFoam.h>. Inheritance diagram for TMVA::PDEFoam:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoam() [1/3]. TMVA::PDEFoam::PDEFoam ; (; const PDEFoam & ; from). protected . Copy Constructor NOT IMPLEMENTED (NEVER USED) ; Definition at line 207 of file PDEFoam.cxx. ◆ PDEFoam() [2/3]. TMVA::PDEFoam::PDEFoam ; (; ). Default constructor for streamer, user should not use it. ; Definition at line 101 of file PDEFoam.cxx. ◆ PDEFoam() [3/3]. TMVA::PDEFoam::PDEFoam ; (; const TString & ; name). User constructor, to be employed by the user. ; Definition at line 140 of file PDEFoam.cxx. ◆ ~PDEFoam(). TMVA::PDEFoam::~PDEFoam ; (; ). virtual . Default destructor. ; Definition at line 182 of file PDEFoam.cxx. Member Function Documentation. ◆ AddVariableName() [1/2]. void TMVA::PDEFoam::AddVariableName ; (; const char * ; s). inline . Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html:18931,inherit,inherited,18931,doc/master/classTMVA_1_1PDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html,1,['inherit'],['inherited']
Modifiability,"n *config); 1889 {; 1890 // Well the implementation is non trivial. For now punt.; 1891 ; 1892 UInt_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; 1893 UInt_t n = (((char*)end)-((char*)start))/incr;; 1894 char **arrptr = new char*[n];; 1895 UInt_t i = 0;; 1896 for(void *iter = start; iter != end; iter = (char*)iter + incr, ++i ) {; 1897 arrptr[i] = (char*)iter;; 1898 }; 1899 ((TStreamerInfo*)config->fInfo)->WriteBufferAux(buf, arrptr, &(config->fCompInfo), /*first*/ 0, /*last*/ 1, n, config->fOffset, 1|2 );; 1900 delete [] arrptr;; 1901 return 0;; 1902 }; 1903 ; 1904 template <typename T>; 1905 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionBasicType(TBuffer &buf, void *addr, const TConfiguration *conf); 1906 {; 1907 // Collection of numbers. Memberwise or not, it is all the same.; 1908 ; 1909 TConfigSTL *config = (TConfigSTL*)conf;; 1910 UInt_t start, count;; 1911 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1912 ; 1913 std::vector<T> *const vec = (std::vector<T>*)(((char*)addr)+config->fOffset);; 1914 Int_t nvalues;; 1915 buf.ReadInt(nvalues);; 1916 vec->resize(nvalues);; 1917 ; 1918#ifdef R__VISUAL_CPLUSPLUS; 1919 if (nvalues <= 0) {; 1920 buf.CheckByteCount(start,count,config->fTypeName);; 1921 return 0;; 1922 }; 1923#endif; 1924 T *begin = &(*vec->begin());; 1925 buf.ReadFastArray(begin, nvalues);; 1926 ; 1927 buf.CheckByteCount(start,count,config->fTypeName);; 1928 return 0;; 1929 }; 1930 ; 1931 ; 1932 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf); 1933 {; 1934 // Collection of numbers. Memberwise or not, it is all the same.; 1935 ; 1936 TConfigSTL *config = (TConfigSTL*)conf;; 1937 UInt_t start, count;; 1938 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1939 ; 1940 std::vector<float> *const vec = (std::vector<float>*)(((char*)addr)+config->fOffset);; 1941 Int_t nvalues;; 1942 buf.ReadInt(nvalues);; 1943 vec->resize(nvalues);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:79984,config,config,79984,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"n *samplDist=nullptr);  Sets line color for given sampling distribution and fill color for the associated shaded TH1F. ;  ; void SetLineStyle (Style_t style, const SamplingDistribution *samplDist=nullptr);  ; void SetLineWidth (Width_t lwidth, const SamplingDistribution *samplDist=nullptr);  ; void SetLogXaxis (bool lx);  changes plot to log scale on x axis ;  ; void SetLogYaxis (bool ly);  changes plot to log scale on y axis ;  ; void SetMarkerColor (Color_t color, const SamplingDistribution *samplDist=nullptr);  ; void SetMarkerSize (Size_t size, const SamplingDistribution *samplDist=nullptr);  ; void SetMarkerStyle (Style_t style, const SamplingDistribution *samplDist=nullptr);  ; void SetXRange (double mi, double ma);  change x range ;  ; void SetYRange (double mi, double ma);  change y range ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestPlot.html:4404,inherit,inherited,4404,doc/master/classRooStats_1_1HypoTestPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestPlot.html,2,['inherit'],['inherited']
Modifiability,"n * fLineSmooth;  ; TGNumberEntry * fLineWidthScale;  ; TGNumberEntry * fMaxSceneDrawTimeHQ;  ; TGNumberEntry * fMaxSceneDrawTimeLQ;  ; TGNumberEntry * fOLLineWidth;  ; TGNumberEntry * fPointSizeScale;  ; TGCheckButton * fPointSmooth;  ; TGGroupFrame * fRefContainer;  ; TGCheckButton * fReferenceOn;  ; TGNumberEntry * fReferencePosX;  ; TGNumberEntry * fReferencePosY;  ; TGNumberEntry * fReferencePosZ;  ; TGCheckButton * fResetCamerasOnUpdate;  ; TGCheckButton * fRotateSceneOn;  ; TGNumberEntry * fSceneRotDt;  ; TGNumberEntry * fStereoEyeOffsetFac;  ; TGCompositeFrame * fStereoFrame;  ; TGNumberEntry * fStereoFrustumAsymFac;  ; TGNumberEntry * fStereoZeroParallax;  ; TGTextButton * fUpdateScene;  ; TGLViewer * fViewer;  ; TGNumberEntry * fWFLineWidth;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLViewerEditor.html:30069,inherit,inherited,30069,doc/master/classTGLViewerEditor.html,https://root.cern,https://root.cern/doc/master/classTGLViewerEditor.html,1,['inherit'],['inherited']
Modifiability,"n 0 if the formula compilation is successful ; Definition at line 650 of file TFormula.cxx. ◆ Copy(). void TFormula::Copy ; (; TObject & ; object); const. overridevirtual . Copy this to obj. ; Reimplemented from TObject.; Definition at line 684 of file TFormula.cxx. ◆ DeclFileName(). static const char * TFormula::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 289 of file TFormula.h. ◆ DoAddParameter(). void TFormula::DoAddParameter ; (; const TString & ; name, . Double_t ; value, . bool ; processFormula . ). protected . Adds parameter to known parameters. ; User should use SetParameter, because parameters are added during initialization part, and after that adding new will be pointless. ; Definition at line 2743 of file TFormula.cxx. ◆ DoEval(). Double_t TFormula::DoEval ; (; const Double_t * ; x, . const Double_t * ; p = nullptr . ); const. protected . Evaluate formula. ; If formula is not ready to execute(missing parameters/variables), print these which are not known. If parameter has default value, and has not been set, appropriate warning is shown. ; Definition at line 3359 of file TFormula.cxx. ◆ DoSetParameters(). void TFormula::DoSetParameters ; (; const Double_t * ; p, . Int_t ; size . ). protected . Definition at line 2949 of file TFormula.cxx. ◆ Eval(). template<typename... Args> . Double_t TFormula::Eval ; (; Args... ; args); const. Set first 1, 2, 3 or 4 variables (e.g. ; x, y, z and t) and evaluate formula. ; Definition at line 324 of file TFormula.h. ◆ EvalPar() [1/2]. Double_t TFormula::EvalPar ; (; const Double_t * ; x, . const Double_t * ; params = nullptr . ); const. Definition at line 3078 of file TFormula.cxx. ◆ EvalPar() [2/2]. template<class T > . T TFormula::EvalPar ; (; const T * ; x, . const Double_t * ; params = nullptr . ); const. inline . Definition at line 244 of file TFormula.h. ◆ ExtractFunctors(). void TFormula::ExtractFunctors ; (; TString & ; formula). protected . Ext",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:33303,variab,variables,33303,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"n 3, the text size (textsize) is a fraction of the current pad size. Therefore the same textsize value can generate text outputs with different absolute sizes in two different pads. The text size in pixels (charheight) is computed the following way:; pad_width = gPad->XtoPixel(gPad->GetX2());; pad_height = gPad->YtoPixel(gPad->GetY1());; if (pad_width < pad_height) charheight = textsize*pad_width;; else charheight = textsize*pad_height;; textsizeOption_t Option_t textsizeDefinition TGWin32VirtualXProxy.cxx:58; gPad#define gPadDefinition TVirtualPad.h:308; If the text precision is equal to 3, the text size doesn't depend on the pad's dimensions. A given textsize value always generates the same absolute size. The text size (charheight) is given in pixels:; charheight = textsize;; Note that to scale fonts to the same size as the old True Type package a scale factor of 0.93376068 is apply to the text size before drawing.; The text size of any class inheriting from TAttText can be changed using the method SetTextSize and retrieved using the method GetTextSize. Text Font and Precision; The text font code is combination of the font number and the precision. Text font code = 10*fontnumber + precision; fontnumberOption_t Option_t fontnumberDefinition TGWin32VirtualXProxy.cxx:60; Font numbers must be between 1 and 14.; The precision can be:. precision = 0 fast hardware fonts (steps in the size); precision = 1 scalable and rotatable hardware fonts (see below); precision = 2 scalable and rotatable hardware fonts; precision = 3 scalable and rotatable hardware fonts. Text size is given in pixels. The text font and precision of any class inheriting from TAttText can be changed using the method SetTextFont and retrieved using the method GetTextFont. Font quality and speed; When precision 0 is used, only the original non-scaled X11 system fonts are used. The fonts have a minimum (4) and maximum (37) size in pixels. These fonts are fast and are of good quality. Their size varies with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttText.html:7614,inherit,inheriting,7614,doc/master/classTAttText.html,https://root.cern,https://root.cern/doc/master/classTAttText.html,1,['inherit'],['inheriting']
Modifiability,n ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found - save the configuration ; : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23258,config,configuration,23258,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23484,config,configuration,23484,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23598,config,configuration,23598,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Test error found - save the configuration ; : 142 | 9564.39 8579.88 0.0204803 0.00186473 42974.8 0; : 143 Minimum Test error found - save the configuration ; : 143 | 9485.56 8503.01 0.0205275 0.0018356 42799.2 0; : 144 Minimum Test error found - save the configuration ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:27891,config,configuration,27891,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test error found - save the configuration ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30721,config,configuration,30721,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test error found - save the configuration ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test error found - save the configuration ; : 184 | 6771.06 5807.61 0.0200991 0.00181199 43746.7 0; : 185 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30831,config,configuration,30831,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:35475,config,configuration,35475,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:35816,config,configuration,35816,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:35929,config,configuration,35929,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37513,config,configuration,37513,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39445,config,configuration,39445,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 M,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41819,config,configuration,41819,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43182,config,configuration,43182,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43296,config,configuration,43296,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43410,config,configuration,43410,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43524,config,configuration,43524,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:44203,config,configuration,44203,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:44317,config,configuration,44317,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:48290,config,configuration,48290,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:49759,config,configuration,49759,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:51460,config,configuration,51460,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:51574,config,configuration,51574,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52818,config,configuration,52818,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53725,config,configuration,53725,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53839,config,configuration,53839,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test error found - save the configuration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test error found - save the configuration ; : 392 | 1125.56 638.711 0.0206275 0.00184646 42596.2 0; : 393 Minimum Test error found - save the configuration ; : 393 | 1115.4 631.055 0.0202254 0.00180782 43436.7 0; : 394 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54518,config,configuration,54518,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 403 | 1012.74 563.823 0.0201066 0.00181196 43728.6 0; : 404 Minimum Test error found - save the configuration ; : 404 | 1002.66 558.031 0.0201068 0.0018122 43728.9 0; : 405 Minimum Test error found - save the configuration ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57567,config,configuration,57567,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 404 | 1002.66 558.031 0.0201068 0.0018122 43728.9 0; : 405 Minimum Test error found - save the configuration ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57681,config,configuration,57681,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test error found - save the configuration ; : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test error found - save the configuration ; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test error found - save the configuration ; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test error found - save the configuration ; : 453 | 615.499 330.282 0.0202258 0.00184415 43521.7 0; : 454 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:61313,config,configuration,61313,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 455 | 602.478 323.085 0.0201467 0.00181706 43645.1 0; : 456 Minimum Test error found - save the configuration ; : 456 | 596.625 319.828 0.0201415 0.00181382 43649.8 0; : 457 Minimum Test error found - save the configuration ; : 457 | 590.662 316.621 0.0201112 0.00181253 43718.9 0; : 458 Minimum Test error found - save the configuration ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Test error found - save the configuration ; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:63464,config,configuration,63464,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 456 | 596.625 319.828 0.0201415 0.00181382 43649.8 0; : 457 Minimum Test error found - save the configuration ; : 457 | 590.662 316.621 0.0201112 0.00181253 43718.9 0; : 458 Minimum Test error found - save the configuration ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Test error found - save the configuration ; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Test error found - save the configuration ; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:63578,config,configuration,63578,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 457 | 590.662 316.621 0.0201112 0.00181253 43718.9 0; : 458 Minimum Test error found - save the configuration ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Test error found - save the configuration ; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Test error found - save the configuration ; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Test error found - save the configuration ; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:63692,config,configuration,63692,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Test error found - save the configuration ; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Test error found - save the configuration ; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Test error found - save the configuration ; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Test error found - save the configuration ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:63806,config,configuration,63806,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66185,config,configuration,66185,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66299,config,configuration,66299,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66413,config,configuration,66413,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:67093,config,configuration,67093,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68228,config,configuration,68228,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68342,config,configuration,68342,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68456,config,configuration,68456,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68570,config,configuration,68570,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68796,config,configuration,68796,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68909,config,configuration,68909,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72427,config,configuration,72427,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76675,config,configuration,76675,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,n ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76788,config,configuration,76788,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"n ; Implements TMVA::VariableTransformBase.; Definition at line 132 of file VariableRearrangeTransform.cxx. ◆ Class(). static TClass * TMVA::VariableRearrangeTransform::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::VariableRearrangeTransform::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::VariableRearrangeTransform::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 74 of file VariableRearrangeTransform.h. ◆ DeclFileName(). static const char * TMVA::VariableRearrangeTransform::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 74 of file VariableRearrangeTransform.h. ◆ GetTransformationStrings(). std::vector< TString > * TMVA::VariableRearrangeTransform::GetTransformationStrings ; (; Int_t ; cls); const. virtual . creates string with variable transformations applied ; Reimplemented from TMVA::VariableTransformBase.; Definition at line 121 of file VariableRearrangeTransform.cxx. ◆ Initialize(). void TMVA::VariableRearrangeTransform::Initialize ; (; ). virtual . initialization of the rearrangement transformation (nothing to do) ; Implements TMVA::VariableTransformBase.; Definition at line 60 of file VariableRearrangeTransform.cxx. ◆ InverseTransform(). const TMVA::Event * TMVA::VariableRearrangeTransform::InverseTransform ; (; const Event * const ; ev, . Int_t ; cls . ); const. virtual . Implements TMVA::VariableTransformBase.; Definition at line 100 of file VariableRearrangeTransform.cxx. ◆ IsA(). virtual TClass * TMVA::VariableRearrangeTransform::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::VariableTransformBase.; Definition at line 74 of file VariableRearrangeTransform.h. ◆ MakeFunction(). void TMVA::VariableRearrangeTransform::MakeFunction ; (; std::ostream & ; fout, . const TString & ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html:16344,variab,variable,16344,doc/master/classTMVA_1_1VariableRearrangeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html,1,['variab'],['variable']
Modifiability,"n ;  CTConstBinStatConst view on a THistStatUncertainty for a given bin ;  CTHistViewA view on a histogram, selecting a range on a subset of dimensions ;  CTHistViewOutOfRange;  CTLogEntry;  CTLogHandlerAbstract TLogHandler base class ;  CTLogManager;  ►NFitNamespace for the fitting classes ;  CBasicFCNBasicFCN class: base class for the objective functions used in the fits It has a reference to the data and th emodel function used in the fit ;  CBinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y values and error on coordinates The dimension of the coordinate is free There are 4 different options: ;  CChi2FCNChi2FCN class for binnned fits using the least square methods ;  CDataOptionsDataOptions : simple structure holding the options on how the data are filled ;  CDataRangeClass describing the range in the coordinates it supports multiple range in a coordinate ;  CDummyDeleter;  CFcnAdapter;  CFitConfigClass describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class ;  CFitDataBase class for all the fit data types: Stores the coordinates and the DataOptions ;  CFitResultClass containg the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values ;  CFitterFitter class, entry point for performing all type of fits ;  CLogLikelihoodFCNLogLikelihoodFCN class for likelihood fits ;  CParameterSettingsClass, describing value, limits and step size of the parameters Provides functionality also to set/retrieve values, step sizes, limits and fix the parameters ;  CPoissonLikelihoodFCNClass evaluating the log likelihood for binned Poisson likelihood fits it is template to distinguish gradient and non-gradient case ;  CSparseData;  CUnBinDataClass describing the unbinned data sets (just x coordinat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:18231,config,configuration,18231,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,1,['config'],['configuration']
Modifiability,"n = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsCachedReal::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedReal::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsSelfCachedReal.html:23415,config,config,23415,root/html530/RooAbsSelfCachedReal.html,https://root.cern,https://root.cern/root/html530/RooAbsSelfCachedReal.html,3,['config'],['config']
Modifiability,"n = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsAnaConvPdf.html:12205,extend,extendMode,12205,root/html532/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsAnaConvPdf.html,98,['extend'],['extendMode']
Modifiability,"n = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TEveVectorfCascadeBirthReconstucted birth point of cascade particle.; TEveVectorfCascadeVCaPoint of closest approach for Cascade.; Int_tfDLabelDaughter label.; Int_tfLabelCascade mother label read from kinematics.; TEveVectorfPBacMomentum of bachelor track.; Int_tfPdgPDG code of mother.; Int_tfStatus; TEveVectorfVBacVertex of bachelor track. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveRecCascade& ); { *((TParticle*)this) = p; return *this; }. TEveRecCascade(); {}. virtual ~TEveRecCascade(); {}. » Last changed: root/eve:$Id: TEveVSDStructs.h 38721 2011-04-04 13:37:12Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveRecCascade.html:5473,Inherit,Inheritance,5473,root/html532/TEveRecCascade.html,https://root.cern,https://root.cern/root/html532/TEveRecCascade.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n = """", . Bool_t ; verbose = 0 . ). constructor ; Definition at line 148 of file Reader.cxx. ◆ Reader() [5/5]. TMVA::Reader::Reader ; (; const TString & ; varNames, . const TString & ; theOption, . Bool_t ; verbose = 0 . ). constructor ; Definition at line 236 of file Reader.cxx. ◆ ~Reader(). TMVA::Reader::~Reader ; (; void ; ). virtual . destructor ; Definition at line 277 of file Reader.cxx. Member Function Documentation. ◆ AddSpectator() [1/2]. void TMVA::Reader::AddSpectator ; (; const TString & ; expression, . Float_t * ; datalink . ). Add a float spectator or expression to the reader. ; Definition at line 321 of file Reader.cxx. ◆ AddSpectator() [2/2]. void TMVA::Reader::AddSpectator ; (; const TString & ; expression, . Int_t * ; datalink . ). Add an integer spectator or expression to the reader. ; Definition at line 329 of file Reader.cxx. ◆ AddVariable() [1/2]. void TMVA::Reader::AddVariable ; (; const TString & ; expression, . Float_t * ; datalink . ). Add a float variable or expression to the reader. ; Definition at line 303 of file Reader.cxx. ◆ AddVariable() [2/2]. void TMVA::Reader::AddVariable ; (; const TString & ; expression, . Int_t * ; datalink . ). Definition at line 310 of file Reader.cxx. ◆ BookMVA() [1/3]. TMVA::IMethod * TMVA::Reader::BookMVA ; (; const TString & ; methodTag, . const TString & ; weightfile . ). read method name from weight file ; Definition at line 368 of file Reader.cxx. ◆ BookMVA() [2/3]. TMVA::IMethod * TMVA::Reader::BookMVA ; (; TMVA::Types::EMVA ; methodType, . const char * ; xmlstr . ). Definition at line 429 of file Reader.cxx. ◆ BookMVA() [3/3]. TMVA::IMethod * TMVA::Reader::BookMVA ; (; Types::EMVA ; method, . const TString & ; weightfile . ). private . books MVA method from weightfile ; Definition at line 393 of file Reader.cxx. ◆ Class(). static TClass * TMVA::Reader::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::Reader::Class_Name ; (; ). static . ReturnsName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:22682,variab,variable,22682,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['variab'],['variable']
Modifiability,"n = """", Bool_t verbose = 0); TMVA::ReaderReader(vector<std::string>& varNames, const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(const string& varNames, const TString& theOption, Bool_t verbose = 0); TMVA::ReaderReader(vector<TString>& varNames, const TString& theOption = """", Bool_t verbose = 0); TMVA::ReaderReader(const TString& varNames, const TString& theOption, Bool_t verbose = 0); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVerbose(Bool_t v); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); Bool_tVerbose() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Reader.html:8482,Config,Configurable,8482,root/html534/TMVA__Reader.html,https://root.cern,https://root.cern/root/html534/TMVA__Reader.html,3,['Config'],['Configurable']
Modifiability,"n = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodTMlpANN&operator=(const TMVA::MethodTMlpANN&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodTMlpANN.html:10395,Config,Configurable,10395,root/html602/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodTMlpANN.html,2,['Config'],['Configurable']
Modifiability,"n = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidTTablePoints::SetTablePointer(void* table). private:. TTable3Points(const TTable3Points&); TTable3Points&operator=(const TTable3Points&). Data Members; public:. enum EPointDirection { kXPoints; kYPoints; kZPoints; kTotalSize; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. ULong_t*fColumnOffset!; Int_tTTablePoints::fFirstRowThe first row to take in account; const void*TTablePoints::fKeypointer to key value to select rows; void*TTablePoints::fRowsPointer the first row of the STAF table; Int_tTTablePoints::fSize; TTableSorter*TTablePoints::fTableSorter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTable3Points(); to be documented. TTable3Points(TTableSorter* sorter, const void* key, const Char_t* xName = ""x"", const Char_t* yName = ""y"", const Char_t* zName = ""z"", Option_t* opt = """"); to be documented. TTable3Points(TTableSorter* sorter, Int_t keyIndex, const Char_t* xName = ""x"", const Char_t* yName = ""y"", const Char_t* zName = ""z"", Option_t* opt = """"); to be documented. ~TTable3Points(); to be documented. Float_t GetAnyPoint(Int_t idx, TTable3Points::EPointDirection xAxis) const; to be documented. void SetAnyColumn(const Char_t* anyName, TTable3Points::EPointDirection indx); to be documented. Float_t * GetXYZ(Float_t* xyz, Int_t idx, Int_t num = 1) const; to be documented. TTable3Points(const TTable3Points& ). TTable3Points & operator=(const TTable3Points& ). void SetXColumn(const Char_t* xName); { SetAnyColumn(xName,kXPoints);}. void SetYColumn(const Char_t* yName); { SetAnyColumn(yName,kYPoints);}. void SetZColumn(const Char_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTable3Points.html:9773,Inherit,Inheritance,9773,root/html534/TTable3Points.html,https://root.cern,https://root.cern/root/html534/TTable3Points.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TGeoMatrix::EGeoTransfTypes { kGeoIdentity; kGeoTranslation; kGeoRotation; kGeoScale; kGeoReflection; kGeoRegistered; kGeoSavePrimitive; kGeoMatrixOwned; kGeoCombiTrans; kGeoGenTrans; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TGeoRotation*TGeoCombiTrans::fRotationrotation matrix; Double_tfScale[3]scale (x, y, z); TStringTNamed::fTitleobject title; Double_tTGeoCombiTrans::fTranslation[3]translation vector. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoGenTrans(); dummy ctor. TGeoGenTrans(const char* name); constructor. TGeoGenTrans(Double_t dx, Double_t dy, Double_t dz, Double_t sx, Double_t sy, Double_t sz, TGeoRotation* rot); constructor. TGeoGenTrans(const char* name, Double_t dx, Double_t dy, Double_t dz, Double_t sx, Double_t sy, Double_t sz, TGeoRotation* rot); constructor. ~TGeoGenTrans(); destructor. void Clear(Option_t* option = """"); clear the fields of this transformation. void SetScale(Double_t sx, Double_t sy, Double_t sz); set the scale. TGeoMatrix& Inverse() const; Return a temporary inverse of this. Bool_t Normalize(); A scale transformation should be normalized by sx*sy*sz factor. TGeoMatrix& operator=(const TGeoGenTrans& ); Preventing warnings with -Weffc++ in GCC since the behaviour of operator * was chosen so by design. const Double_t * GetScale() const. TGeoMatrix * MakeClone() const. void SetScale(Double_t sx, Double_t sy, Double_t sz). TGeoGenTrans(). » Aut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoGenTrans.html:15241,Inherit,Inheritance,15241,root/html532/TGeoGenTrans.html,https://root.cern,https://root.cern/root/html532/TGeoGenTrans.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_t&X(); Double_t&Y(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCopyPoly(const TSplinePoly& other). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfXabscissa; Double_tfYconstant term. Class Charts. Inheritance Chart:. TObject. ←; TSplinePoly. ←. TSplinePoly3. TSplinePoly5. Function documentation; TSplinePoly & operator=(const TSplinePoly& other); assignment operator. void CopyPoly(const TSplinePoly& other); utility called by the copy constructors and = operator. inline TSplinePoly(const TSplinePoly& other). void GetKnot(Int_t i, Double_t &x, Double_t &y). Double_t Eval(Double_t ) const. TSplinePoly(); {}. TSplinePoly(Double_t x, Double_t y); {}. Double_t & X(); {return fX;}. Double_t & Y(); {return fY;}. » Author: Federico Carminati 28/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSplinePoly.html:5929,Inherit,Inheritance,5929,root/html604/TSplinePoly.html,https://root.cern,https://root.cern/root/html604/TSplinePoly.html,1,['Inherit'],['Inheritance']
Modifiability,"n = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_t&X(); Double_t&Y(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCopyPoly(const TSplinePoly& other). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfXabscissa; Double_tfYconstant term. Class Charts. Inheritance Chart:. TObject. ←; TSplinePoly. ←. TSplinePoly3. TSplinePoly5. Function documentation; TSplinePoly & operator=(const TSplinePoly& other); assignment operator. void CopyPoly(const TSplinePoly& other); utility called by the copy constructors and = operator. inline TSplinePoly(const TSplinePoly& other). void GetKnot(Int_t i, Double_t &x, Double_t &y). Double_t Eval(Double_t ) const. TSplinePoly(); {}. TSplinePoly(Double_t x, Double_t y); {}. Double_t & X(); {return fX;}. Double_t & Y(); {return fY;}. » Author: Federico Carminati 28/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSplinePoly.html:5929,Inherit,Inheritance,5929,root/html602/TSplinePoly.html,https://root.cern,https://root.cern/root/html602/TSplinePoly.html,1,['Inherit'],['Inheritance']
Modifiability,"n = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.70799; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.625222 0.0421632 4287.73 0; : 2 | 0.694153 0.694394 0.638111 0.0419725 4193.66 1; : 3 | 0.689625 0.697522 0.634816 0.0412563 4211.88 2; : 4 | 0.681203 0.694822 0.628686 0.0407413 4252.1 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.619972 0.0411822 4319.36 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.614022 0.0406714 4360.33 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.602694 0.0404119 4446.16 0; : 8 | 0.616397 0.638352 0.610274 0.0409979 4391.54 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.618875 0.0405848 4323.09 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.603058 0.0404042 4443.23 0; : ; : Elapsed time for training with 3200 events: 6.25 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.214 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:16267,config,configuration,16267,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['config'],['configuration']
Modifiability,"n == ""-close"") {; 1471 rc = 1;; 1472 } else if (tkn.BeginsWith(""-"")) {; 1473 ::Warning(""TApplication::ParseRemoteLine"",""unknown option: %s"", tkn.Data());; 1474 } else {; 1475 if (isUser) {; 1476 user = tkn;; 1477 isUser = kFALSE;; 1478 } else if (isDbg) {; 1479 dbg = tkn.Atoi();; 1480 isDbg = kFALSE;; 1481 } else if (isHostDir) {; 1482 hostdir = tkn;; 1483 hostdir.ReplaceAll("":"",""/"");; 1484 isHostDir = kFALSE;; 1485 isScript = kTRUE;; 1486 } else if (isScript) {; 1487 // Add everything left; 1488 script = tkn;; 1489 script.Insert(0, ""\"""");; 1490 script += ""\"""";; 1491 // isScript = kFALSE; // [clang-tidy] never read; 1492 break;; 1493 }; 1494 }; 1495 }; 1496 ; 1497 // Done; 1498 return rc;; 1499}; 1500 ; 1501////////////////////////////////////////////////////////////////////////////////; 1502/// Process the content of a line starting with "".R"" (already stripped-off); 1503/// The format is; 1504/// ~~~ {.cpp}; 1505/// [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; 1506/// ~~~; 1507/// The variable 'dir' is the remote directory to be used as working dir.; 1508/// The username can be specified in two ways, ""-l"" having the priority; 1509/// (as in ssh).; 1510/// A 'dbg' value > 0 gives increasing verbosity.; 1511/// The last argument 'script' allows to specify an alternative script to; 1512/// be executed remotely to startup the session.; 1513 ; 1514Longptr_t TApplication::ProcessRemote(const char *line, Int_t *); 1515{; 1516 if (!line) return 0;; 1517 ; 1518 if (!strncmp(line, ""-?"", 2) || !strncmp(line, ""-h"", 2) ||; 1519 !strncmp(line, ""--help"", 6)) {; 1520 Info(""ProcessRemote"", ""remote session help:"");; 1521 Printf("".R [user@]host[:dir] [-l user] [-d dbg] [[<]script] | [host] -close"");; 1522 Printf(""Create a ROOT session on the specified remote host."");; 1523 Printf(""The variable \""dir\"" is the remote directory to be used as working dir."");; 1524 Printf(""The username can be specified in two ways, \""-l\"" having the priority"");; 1525 Printf(""(as in ssh). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:59434,variab,variable,59434,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['variab'],['variable']
Modifiability,n > _conv;  ! Actual convolution calculation ;  ; bool _init = false;  ! do not persist ;  ; RooRealProxy _origModel;  Original resolution model. ;  ; RooRealProxy _origPdf;  Original input PDF. ;  ; RooRealProxy _origVar;  Original convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvPdf.html:71072,inherit,inherited,71072,doc/master/classRooNumConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooNumConvPdf.html,1,['inherit'],['inherited']
Modifiability,"n Fill; checks if the variable z is betyween fZmin and fZmax.; If a minimum or maximum value is set for the Z scale before filling,; then all values below zmin or above zmax will be discarded.; Setting the minimum or maximum value for the Z scale before filling; has the same effect as calling the special TProfile2D constructor below; where zmin and zmax are specified. H(I,J) is printed as the cell contents. The errors computed are s(I,J) if CHOPT='S'; (spread option), or e(I,J) if CHOPT=' ' (error on mean). See TProfile2D::BuildOptions for explanation of parameters. see other constructors below with all possible combinations of; fix and variable bin size like in TH2D. TProfile2D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, Double_t ylow, Double_t yup, Option_t* option = """"); Create a 2-D Profile with variable bins in X and fix bins in Y. TProfile2D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t* ybins, Option_t* option = """"); Create a 2-D Profile with fix bins in X and variable bins in Y. TProfile2D(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Option_t* option = """"); Create a 2-D Profile with variable bins in X and variable bins in Y. TProfile2D(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Double_t zlow, Double_t zup, Option_t* option = """"); Constructor for Profile2D histograms with range in z; *-* ====================================================; The first eight parameters are similar to TH2D::TH2D.; Only the values of Z between ZMIN and ZMAX will be considered at filling time.; zmin and zmax will also be the maximum and minimum values; on the z scale when drawing the profile2D. See TProfile2D::BuildOptions for more explanations on errors. void BuildOptions(Double_t zmin, Double_t zmax, Option_t* option); Set Profile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile2D.html:29455,variab,variable,29455,root/html528/TProfile2D.html,https://root.cern,https://root.cern/root/html528/TProfile2D.html,10,['variab'],['variable']
Modifiability,"n GetObjectChecked(namecycle, TClass::GetClass(classname));; 932}; 933 ; 934 ; 935////////////////////////////////////////////////////////////////////////////////; 936/// Return pointer to object identified by namecycle if and only if the actual; 937/// object is a type suitable to be stored as a pointer to a ""expectedClass""; 938/// If expectedClass is null, no check is performed.; 939///; 940/// namecycle has the format `name;cycle`; 941/// - name = * is illegal, cycle = * is illegal; 942/// - cycle = """" or cycle = 9999 ==> apply to a memory object; 943///; 944/// VERY IMPORTANT NOTE:; 945///; 946/// The calling application must cast the returned pointer to; 947/// the type described by the 2 arguments (i.e. cl):; 948/// ~~~ {.cpp}; 949/// MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; 950/// ~~~; 951/// Note: We recommend using the method TDirectory::GetObject:; 952/// ~~~ {.cpp}; 953/// MyClass *obj = nullptr;; 954/// directory->GetObject(""some object inheriting from MyClass"",obj);; 955/// if (obj) { ... we found what we are looking for ... }; 956/// ~~~; 957 ; 958void *TDirectory::GetObjectChecked(const char *namecycle, const TClass* expectedClass); 959{; 960 Short_t cycle;; 961 char name[kMaxLen];; 962 ; 963 DecodeNameCycle(namecycle, name, cycle, kMaxLen);; 964 char *namobj = name;; 965 Int_t nch = strlen(name);; 966 for (Int_t i = nch-1; i > 0; i--) {; 967 if (name[i] == '/') {; 968 name[i] = 0;; 969 TDirectory* dirToSearch=GetDirectory(name);; 970 namobj = name + i + 1;; 971 name[i] = '/';; 972 if (dirToSearch) {; 973 return dirToSearch->GetObjectChecked(namobj, expectedClass);; 974 } else {; 975 return nullptr;; 976 }; 977 }; 978 }; 979 ; 980//*-*---------------------Case of Object in memory---------------------; 981// ========================; 982 if (!expectedClass || expectedClass->IsTObject()) {; 983 TObject *objcur = fList->FindObject(namobj);; 984 if (objcur) {; 985 if (objcur==this && strlen(namobj)!=0) {;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectory_8cxx_source.html:33455,inherit,inheriting,33455,doc/master/TDirectory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectory_8cxx_source.html,1,['inherit'],['inheriting']
Modifiability,"n GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGWin32VirtualXProxy.cxx:249; UnBinData.h; WrappedFunction.h; FunctionDouble_t(* Function)(Double_t)Definition Functor.C:4; ROOT::Fit::BinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y ...Definition BinData.h:52; ROOT::Fit::FitConfigClass describing the configuration of the fit, options and parameter settings using the ROOT::Fit::Pa...Definition FitConfig.h:47; ROOT::Fit::FitConfig::CreateParamsSettingsvoid CreateParamsSettings(const ROOT::Math::IParamMultiFunctionTempl< T > &func)set the parameter settings from a model function.Definition FitConfig.h:109; ROOT::Fit::FitResultclass containing the result of the fit and all the related information (fitted parameter values,...Definition FitResult.h:47; ROOT::Fit::FitterFitter class, entry point for performing all type of fits.Definition Fitter.h:77; ROOT::Fit::Fitter::LikelihoodFitbool LikelihoodFit(const std::shared_ptr< UnBinData > &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Un-binned Likelihood fit using a shared_ptr for NOT copying the input data.Definition Fitter.h:229; ROOT::Fit::Fitter::LinearFitbool LinearFit(const BinData &data)Do a linear fit copying the input data.Definition Fitter.h:247; ROOT::Fit::Fitter::LeastSquareFitbool Le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:28726,config,configuration,28726,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['config'],['configuration']
Modifiability,"n Likelihood) return the 2 * negative log-likelihood ratio; 152 /// using the definition of Baker-Cousins; 153 double Chi2() const { return fChi2; }; 154 ; 155 /// Number of degree of freedom; 156 unsigned int Ndf() const { return fNdf; }; 157 ; 158 /// p value of the fit (chi2 probability); 159 double Prob() const;; 160 ; 161 /// parameter errors (return st::vector); 162 const std::vector<double> & Errors() const { return fErrors; }; 163 /// parameter errors (return const pointer); 164 const double * GetErrors() const { return fErrors.empty() ? nullptr : &fErrors.front(); }; 165 ; 166 /// parameter values (return std::vector); 167 const std::vector<double> & Parameters() const { return fParams; }; 168 /// parameter values (return const pointer); 169 const double * GetParams() const { return &fParams.front(); }; 170 ; 171 /// parameter value by index; 172 double Value(unsigned int i) const { return fParams[i]; }; 173 /// parameter value by index; 174 double Parameter(unsigned int i) const { return fParams[i]; }; 175 ; 176 /// parameter error by index; 177 // (NOTE: this due to conflict with TObject::Error cannot used in derived class which; 178 // inherits from TObject. Use instead ParError (or Errors()[i] ); 179 double Error(unsigned int i) const {; 180 return (i < fErrors.size() ) ? fErrors[i] : 0;; 181 }; 182 /// parameter error by index; 183 double ParError(unsigned int i) const {; 184 return (i < fErrors.size() ) ? fErrors[i] : 0;; 185 }; 186 ; 187 /// name of the parameter; 188 std::string ParName(unsigned int i) const;; 189 ; 190 /// set the Minos errors for parameter i (called by the Fitter class when running Minos); 191 void SetMinosError(unsigned int i, double elow, double eup);; 192 ; 193 /// Set the chi2 and the ndf; 194 /// This function should be called when using an external FCN for fitting; 195 /// and one provides the chi2 and the number of fitting data points) to store; 196 /// and have them printed in the FitResult class; 197 void SetChi2AndNdf(do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:6543,inherit,inherits,6543,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,1,['inherit'],['inherits']
Modifiability,"n MinimTransformVariable.h:146; ROOT::Math::MinimTransformVariable::MinimTransformVariableMinimTransformVariable(double lower, SqrtLowVariableTransformation *trafo)Definition MinimTransformVariable.h:74; ROOT::Math::MinimTransformVariable::IsLimitedbool IsLimited() constDefinition MinimTransformVariable.h:111; ROOT::Math::MinimTransformVariable::DerivativeIntToExtdouble DerivativeIntToExt(double x) constDefinition MinimTransformVariable.h:129; ROOT::Math::MinimTransformVariable::fBoundsbool fBoundshas double boundDefinition MinimTransformVariable.h:143; ROOT::Math::MinimTransformVariable::fLowerdouble fLowerlower parameter limitDefinition MinimTransformVariable.h:145; ROOT::Math::MinimTransformVariable::fUpBoundbool fUpBoundhas upper bound paramDefinition MinimTransformVariable.h:142; ROOT::Math::SinVariableTransformationSin Transformation class for dealing with double bounded variables.Definition MinimizerVariableTransformation.h:38; ROOT::Math::SqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables.Definition MinimizerVariableTransformation.h:58; ROOT::Math::SqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables.Definition MinimizerVariableTransformation.h:74; xDouble_t x[n]Definition legend1.C:17; MathNamespace for new Math classes and functions.; ROOT::Math::EMinimVariableTypeEMinimVariableTypeEnumeration describing the status of the variable The enumeration are used in the minimizer classes t...Definition MinimTransformVariable.h:27; ROOT::Math::kFix@ kFixfixed variableDefinition MinimTransformVariable.h:29; ROOT::Math::kUpBound@ kUpBoundvariable has an upper boundsDefinition MinimTransformVariable.h:32; ROOT::Math::kBounds@ kBoundsvariable has two boundsDefinition MinimTransformVariable.h:30; ROOT::Math::kLowBound@ kLowBoundvariable has a lower boundDefinition MinimTransformVariable.h:31; ROOT::Math::kDefault@ kDefaultfree variable (unlimited)Definition MinimTransformVariable.h:28",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MinimTransformVariable_8h_source.html:8985,variab,variables,8985,doc/master/MinimTransformVariable_8h_source.html,https://root.cern,https://root.cern/doc/master/MinimTransformVariable_8h_source.html,1,['variab'],['variables']
Modifiability,"n NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. { return NULL; }. double CovMatrix(unsigned int ivar, unsigned int jvar) const; return covariance matrices element for variables ivar,jvar; if the variable is fixed the return value is zero; The ordering of the variables is the same as in the parameter and errors vectors. bool GetCovMatrix(double* covMat) const. Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters. bool GetHessianMatrix(double* hMat) const. Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]. int CovMatrixStatus() const; return status of covariance matrix; using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; Minimizer who implements covariance matrix calculation will re-implement the method. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int ivar) const. return global correlation coefficient for variable i; This is a number between zero and one which gives; the correlation between the i-th parameter and that linear combination of all; other parameters which is most strongly correlated with i.; Minimizer must overload method if implemented. bool GetMinosError(unsigned int ivar, double& errLow, double& errUp, int option = 0). minos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:9455,variab,variable,9455,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,12,['variab'],"['variable', 'variables']"
Modifiability,"n Reader.cxx:565; TMVA::Reader::fMethodMapstd::map< TString, IMethod * > fMethodMapmap of methodsDefinition Reader.h:157; TMVA::Reader::GetNamevirtual const char * GetName() constReturns name of object.Definition Reader.h:113; TMVA::Reader::EvaluateMVADouble_t EvaluateMVA(const std::vector< Float_t > &, const TString &methodTag, Double_t aux=0)Evaluate a std::vector<float> of input data for a given method The parameter aux is obligatory for th...Definition Reader.cxx:468; TMVA::Reader::GetRarityDouble_t GetRarity(const TString &methodTag, Double_t mvaVal=-9999999)evaluates the MVA's rarityDefinition Reader.cxx:737; TMVA::Reader::FindMVAIMethod * FindMVA(const TString &methodTag)return pointer to method with tag ""methodTag""Definition Reader.cxx:695; TMVA::Reader::Initvoid Init(void)default initialisation (no member variables)Definition Reader.cxx:292; TMVA::Reader::GetProbaDouble_t GetProba(const TString &methodTag, Double_t ap_sig=0.5, Double_t mvaVal=-9999999)evaluates probability of MVA for given set of input variablesDefinition Reader.cxx:706; TMVA::Reader::fMvaEventErrorUpperDouble_t fMvaEventErrorUpperper-event error returned by MVADefinition Reader.h:155; TMVA::Reader::SetVerbosevoid SetVerbose(Bool_t v)Definition Reader.h:115; TMVA::Reader::GetMethodTypeFromFileTString GetMethodTypeFromFile(const TString &filename)read the method type from the fileDefinition Reader.cxx:337; TMVA::Reader::fDataSetManagerDataSetManager * fDataSetManagerDefinition Reader.h:128; TMVA::Reader::fColorBool_t fColorcolor modeDefinition Reader.h:151; TMVA::Reader::fDataSetInfoDataSetInfo fDataSetInfoDefinition Reader.h:136; TMVA::Reader::fVerboseBool_t fVerboseverbosityDefinition Reader.h:149; TMVA::Reader::fCalculateErrorBool_t fCalculateErrorerror calculation modeDefinition Reader.h:152; TMVA::Reader::VerboseBool_t Verbose(void) constDefinition Reader.h:114; TMVA::Reader::fMvaEventErrorDouble_t fMvaEventErrorper-event error returned by MVADefinition Reader.h:154; TMVA::Reader::fTmpEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8h_source.html:9778,variab,variablesDefinition,9778,doc/master/Reader_8h_source.html,https://root.cern,https://root.cern/doc/master/Reader_8h_source.html,1,['variab'],['variablesDefinition']
Modifiability,"n RooAbsPdf.h:343; RooAbsPdf::_verboseEvalstatic Int_t _verboseEvalDefinition RooAbsPdf.h:314; RooAbsPdf::extendedTermdouble extendedTerm(double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) constDefinition RooAbsPdf.cxx:730; RooAbsPdf::getGeneratorvirtual Int_t getGenerator(const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) constLoad generatedVars with the subset of directVars that we can generate events for, and return a code t...Definition RooAbsPdf.cxx:1522; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsPdf::getLogValvirtual double getLogVal(const RooArgSet *set=nullptr) constReturn the log of the current value with given normalization An error message is printed if the argum...Definition RooAbsPdf.cxx:620; RooAbsRealLValue::hasRangebool hasRange(const char *name) const overrideCheck if variable has a binning with given name.Definition RooAbsRealLValue.h:97; RooAbsRealLValue::getRangestd::pair< double, double > getRange(const char *name=nullptr) constGet low and high bound of the variable.Definition RooAbsRealLValue.h:88; RooAbsRealAbstract base class for objects that represent a real value and implements functionality common to al...Definition RooAbsReal.h:59; RooAbsReal::fillDataHistRooDataHist * fillDataHist(RooDataHist *hist, const RooArgSet *nset, double scaleFactor, bool correctForBinVolume=false, bool showProgress=false) constFill a RooDataHist with values sampled from this function at the bin centers.Definition RooAbsReal.cxx:1124; RooAbsReal::plotOnCompSelectvoid plotOnCompSelect(RooArgSet *selNodes) constHelper function for plotting of composite p.d.fs.Definition RooAbsReal.cxx:1438; RooAbsReal::createIntegralRooFit::OwningPtr< RooAbsReal > createIntegral(const RooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:155280,variab,variable,155280,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variable']
Modifiability,"n RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString _bname;  Name of the binning specification to be used to perform the mapping. ;  ; RooTemplateProxy< RooAbsRealLValue > _inputVar;  Input variable that is mapped. ;  ;  Protected Attributes inherited from RooAbsCategory; value_type _currentIndex {std::numeric_limits<int>::min()};  Current category state. ;  ; std::vector< std::string > _insertionOrder;  Keeps track in which order state numbers have been inserted. Make sure this is updated in recomputeShape(). ;  ; std::map< value_type, std::unique_ptr< RooCatType, std::function< void(RooCatType *)> > > _legacyStates;  ! Map holding pointers to RooCatType instances. Only for legacy interface. Don't use if possible. ;  ; std::map< std::string, value_type > _stateNames;  Map state names to index numbers. Make sure state names are updated in recomputeShape(). ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinningCategory.html:39909,variab,variable,39909,doc/master/classRooBinningCategory.html,https://root.cern,https://root.cern/doc/master/classRooBinningCategory.html,1,['variab'],['variable']
Modifiability,"n Rtypes.h:112; ROOT::NewFunc_tvoid *(* NewFunc_t)(void *)Definition Rtypes.h:109; ROOT::MergeFunc_tLong64_t(* MergeFunc_t)(void *, TCollection *, TFileMergeInfo *)Definition Rtypes.h:115; TClassEdit::IsStdPairBasebool IsStdPairBase(std::string_view name)Definition TClassEdit.h:188; TClassEdit::ResolveTypedefstd::string ResolveTypedef(const char *tname, bool resolveAll=false)Definition TClassEdit.cxx:1748; TClassEdit::IsStdArraybool IsStdArray(std::string_view name)Definition TClassEdit.h:183; TClassEdit::IsStdClassbool IsStdClass(const char *type)return true if the class belongs to the std namespaceDefinition TClassEdit.cxx:1418; TClassEdit::IsStdPairbool IsStdPair(std::string_view name)Definition TClassEdit.h:184; TClassEdit::IsInterpreterDetailbool IsInterpreterDetail(const char *type)Return true if the type is one the interpreter details which are only forward declared (ClassInfo_t e...Definition TClassEdit.cxx:1322; TClassEdit::DemangleTypeIdNamechar * DemangleTypeIdName(const std::type_info &ti, int &errorCode)Demangle in a portable way the type id name.Definition TClassEdit.cxx:2147; TClassEdit::IsSTLContROOT::ESTLType IsSTLCont(std::string_view type)type : type name: vector<list<classA,allocator>,allocator> result: 0 : not stl container code of cont...Definition TClassEdit.cxx:1378; TClassEdit::ShortTypestd::string ShortType(const char *typeDesc, int mode)Return the absolute type of typeDesc.Definition TClassEdit.cxx:1305; TClassEdit::IsArtificialbool IsArtificial(std::string_view name)Definition TClassEdit.h:159; TClassEdit::GetNormalizedNamevoid GetNormalizedName(std::string &norm_name, std::string_view name)Return the normalized name.Definition TClassEdit.cxx:854; TClassEdit::kDropTrailStar@ kDropTrailStarDefinition TClassEdit.h:77; TClassEdit::kDropStlDefault@ kDropStlDefaultDefinition TClassEdit.h:82; TClassEdit::IsSTLBitsetbool IsSTLBitset(const char *type)Return true is the name is std::bitset<number> or bitset<number>Definition TClassEdit.cxx:1340; TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:376675,portab,portable,376675,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['portab'],['portable']
Modifiability,"n Rtypes.h:117; ROOT::NewFunc_tvoid *(* NewFunc_t)(void *)Definition Rtypes.h:114; ROOT::MergeFunc_tLong64_t(* MergeFunc_t)(void *, TCollection *, TFileMergeInfo *)Definition Rtypes.h:120; TClassEdit::IsStdPairBasebool IsStdPairBase(std::string_view name)Definition TClassEdit.h:188; TClassEdit::ResolveTypedefstd::string ResolveTypedef(const char *tname, bool resolveAll=false)Definition TClassEdit.cxx:1748; TClassEdit::IsStdArraybool IsStdArray(std::string_view name)Definition TClassEdit.h:183; TClassEdit::IsStdClassbool IsStdClass(const char *type)return true if the class belongs to the std namespaceDefinition TClassEdit.cxx:1418; TClassEdit::IsStdPairbool IsStdPair(std::string_view name)Definition TClassEdit.h:184; TClassEdit::IsInterpreterDetailbool IsInterpreterDetail(const char *type)Return true if the type is one the interpreter details which are only forward declared (ClassInfo_t e...Definition TClassEdit.cxx:1322; TClassEdit::DemangleTypeIdNamechar * DemangleTypeIdName(const std::type_info &ti, int &errorCode)Demangle in a portable way the type id name.Definition TClassEdit.cxx:2148; TClassEdit::IsSTLContROOT::ESTLType IsSTLCont(std::string_view type)type : type name: vector<list<classA,allocator>,allocator> result: 0 : not stl container code of cont...Definition TClassEdit.cxx:1378; TClassEdit::ShortTypestd::string ShortType(const char *typeDesc, int mode)Return the absolute type of typeDesc.Definition TClassEdit.cxx:1305; TClassEdit::IsArtificialbool IsArtificial(std::string_view name)Definition TClassEdit.h:159; TClassEdit::GetNormalizedNamevoid GetNormalizedName(std::string &norm_name, std::string_view name)Return the normalized name.Definition TClassEdit.cxx:854; TClassEdit::kDropTrailStar@ kDropTrailStarDefinition TClassEdit.h:77; TClassEdit::kDropStlDefault@ kDropStlDefaultDefinition TClassEdit.h:82; TClassEdit::IsSTLBitsetbool IsSTLBitset(const char *type)Return true is the name is std::bitset<number> or bitset<number>Definition TClassEdit.cxx:1340; TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:379388,portab,portable,379388,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['portab'],['portable']
Modifiability,"n SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Private Member Functions;  TGCompositeFrame (const TGCompositeFrame &)=delete;  ; TGCompositeFrame & operator= (const TGCompositeFrame &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCompositeFrame.html:25773,inherit,inherited,25773,doc/master/classTGCompositeFrame.html,https://root.cern,https://root.cern/doc/master/classTGCompositeFrame.html,3,['inherit'],['inherited']
Modifiability,"n SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLBEntry(const TGWindow* p = 0, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); Base class entry constructor. void Activate(Bool_t a); Toggle active state of listbox entry. void Toggle(); Toggle active state of listbox entry. void DoRedraw(); { }. void Update(TGLBEntry* ); { }. Int_t EntryId() const; { return fEntryId; }. Bool_t IsActive() const; { return fActive; }. void SetBackgroundColor(Pixel_t col); { TGFrame::SetBackgroundColor(col); fBkcolor = col; }. » Author: Fons Rademakers 12/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-04 16:52; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLBEntry.html:17460,Inherit,Inheritance,17460,root/html534/TGLBEntry.html,https://root.cern,https://root.cern/root/html534/TGLBEntry.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tfOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tfWidthframe width; Int_tfXframe x position; Int_tfYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*fgBckgndGC; static const TGGC*fgBlackGC; static Pixel_tfgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tfgDbw; static Int_tfgDbx; static Int_tfgDby; static Pixel_tfgDefaultFrameBackground; static Pixel_tfgDefaultSelectedBackground; static const TGGC*fgHilightGC; static Bool_tfgInit; static UInt_tfgLastButton; static Time_tfgLastClick; static const TGGC*fgShadowGC; static UInt_tfgUserColor; static const TGGC*fgWhiteGC; static Pixel_tfgWhitePixel; static TGFrame::(anonymous)kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = 0, Pixel_t back = GetDefaultFrameBackground()); Create a TGFrame object. Options is an OR of the EFrameTypes. TGFrame(TGClient* c, Window_t id, const TGWindow* parent = 0); Create a frame using an externally created window. For example; to register the root window (called by TGClient), or a window; created via TVirtualX::InitWindow() (id is obtained with; TVirtualX::GetWindowID()). ~TGFrame(); Destructor. void DeleteWindow(); Delete window. Use single shot timer to call final delete method.; We use this indirect way since deleting the window in its own; execution ""thread"" can cause side effects because frame methods; can still be called while the window object has already been deleted. void ChangeBackground(Pixel_t back); Change frame background color. Pixel_t GetForeground() const; Return frame foreground color. void SetBackgroundColor(Pixel_t back); Set backg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFrame.html:17378,Inherit,Inheritance,17378,root/html602/TGFrame.html,https://root.cern,https://root.cern/root/html602/TGFrame.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n TClass)"", newClass ? newClass->GetName() : ""(could not find the destination TClass)"" );; 1324 } else if (newClass && oldClass) {; 1325 ; 1326 Version_t vClVersion = buf.ReadVersionForMemberWise( oldClass->GetCollectionProxy()->GetValueClass() );; 1327 ; 1328 TVirtualCollectionProxy *newProxy = newClass->GetCollectionProxy();; 1329 TVirtualCollectionProxy *oldProxy = oldClass->GetCollectionProxy();; 1330 ; 1331 int objectSize = newClass->Size();; 1332 char *obj = (char*)addr;; 1333 char *endobj = obj + conf->fLength*objectSize;; 1334 ; 1335 for(; obj<endobj; obj+=objectSize) {; 1336 TVirtualCollectionProxy::TPushPop helper( newProxy, (char*)obj );; 1337 Int_t nobjects;; 1338 buf.ReadInt(nobjects);; 1339 void* alternative = newProxy->Allocate(nobjects,true);; 1340 if (nobjects) {; 1341 TActionSequence *actions = newProxy->GetConversionReadMemberWiseActions( oldProxy->GetValueClass(), vClVersion );; 1342 char startbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1343 char endbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1344 void *begin = &(startbuf[0]);; 1345 void *end = &(endbuf[0]);; 1346 config->fCreateIterators( alternative, &begin, &end, newProxy);; 1347 // We can not get here with a split vector of pointer, so we can indeed assume; 1348 // that actions->fConfiguration != null.; 1349 buf.ApplySequence(*actions, begin, end);; 1350 if (begin != &(startbuf[0])) {; 1351 // assert(end != endbuf);; 1352 config->fDeleteTwoIterators(begin,end);; 1353 }; 1354 }; 1355 newProxy->Commit(alternative);; 1356 }; 1357 }; 1358 }; 1359 ; 1360 INLINE_TEMPLATE_ARGS void ReadSTLObjectWiseFastArray(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t /* vers */, UInt_t /* start */); 1361 {; 1362 TConfigSTL *config = (TConfigSTL*)conf;; 1363 // Idea: This needs to be unrolled, it currently calls the TGenCollectionStreamer ....; 1364 buf.ReadFastArray(addr,config->fNewClass,conf->fLength,(TMemberStreamer*)0,config->fOldClass);; 1365 }; 1366 INLINE_TEMPLATE_ARGS void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:55984,config,config,55984,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"n TFile.cxx:950; TMVA::CrossValidationClass to perform cross validation, splitting the dataloader into folds.Definition CrossValidation.h:124; TMVA::DataLoaderDefinition DataLoader.h:50; TMVA::DataLoader::AddRegressionTreevoid AddRegressionTree(TTree *tree, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)Definition DataLoader.h:103; TMVA::DataLoader::PrepareTrainingAndTestTreevoid PrepareTrainingAndTestTree(const TCut &cut, const TString &splitOpt)prepare the training and test trees -> same cuts for signal and backgroundDefinition DataLoader.cxx:632; TMVA::DataLoader::AddTargetvoid AddTarget(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)user inserts target in data set infoDefinition DataLoader.cxx:512; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Types::kBDT@ kBDTDefinition Types.h:86; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TSystem::AccessPathNamevirtual Bool_t AccessPathName(const char *path, EAccessMode mode=kFileExists)Returns FALSE if one can access a file using the specified access mode.Definition TSystem.cxx:1296; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TMVA::TMVAGuivoid TMVAGui(const char *fName=""TMVA.root"", TString dataset=""""); Factory.h; AuthorKim Albertsson (adapted from code originally by Andreas Hoecker) ; Definition in file TMVACrossValidationRegression.C. tutorialstmvaTMVACrossValidationRegression.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:22706,adapt,adapted,22706,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['adapt'],['adapted']
Modifiability,"n TGWin32VirtualXProxy.cxx:249; UnBinData.h; WrappedFunction.h; FunctionDouble_t(* Function)(Double_t)Definition Functor.C:4; ROOT::Fit::BinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y ...Definition BinData.h:52; ROOT::Fit::FitConfigClass describing the configuration of the fit, options and parameter settings using the ROOT::Fit::Pa...Definition FitConfig.h:47; ROOT::Fit::FitConfig::CreateParamsSettingsvoid CreateParamsSettings(const ROOT::Math::IParamMultiFunctionTempl< T > &func)set the parameter settings from a model function.Definition FitConfig.h:109; ROOT::Fit::FitResultclass containing the result of the fit and all the related information (fitted parameter values,...Definition FitResult.h:47; ROOT::Fit::FitterFitter class, entry point for performing all type of fits.Definition Fitter.h:77; ROOT::Fit::Fitter::LikelihoodFitbool LikelihoodFit(const std::shared_ptr< UnBinData > &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Un-binned Likelihood fit using a shared_ptr for NOT copying the input data.Definition Fitter.h:229; ROOT::Fit::Fitter::LinearFitbool LinearFit(const BinData &data)Do a linear fit copying the input data.Definition Fitter.h:247; ROOT::Fit::Fitter::LeastSquareFitbool LeastSquareFit(const std::shared_ptr< BinData > &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)Fit a binned data set using a least square fit NOT copying the input data.Definition Fitter.h:179; ROOT::Fit::Fitter::EvalFCNbool EvalFCN()Perform a simple FCN evaluation.Definition Fitter.cxx:288; ROOT::Fit::Fitter::fExtObjFunctionconst ROOT::Math::IMultiGenFunction * fExtObjFunction! pointer to an external FCNDefinition Fitter.h:576; ROOT::Fit::Fitter::operator=Fitter & operator=(const Fitter &)=deleteAssignment operator (disabled, class is not copyable); ROOT::Fit::Fitter::FitFCNbool FitFCN()Perform a fit with the previously s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:29378,extend,extended,29378,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,1,['extend'],['extended']
Modifiability,"n TGraphPainter.cxx:4820; TGraphPainter::PaintPolyLineHatchesvoid PaintPolyLineHatches(TGraph *theGraph, Int_t n, const Double_t *x, const Double_t *y)Paint a polyline with hatches on one side showing an exclusion zone.Definition TGraphPainter.cxx:4620; TGraphPainter::DrawPanelHelpervoid DrawPanelHelper(TGraph *theGraph) overrideDisplay a panel with all histogram drawing options.Definition TGraphPainter.cxx:796; TGraphPainter::GetObjectInfoHelperchar * GetObjectInfoHelper(TGraph *theGraph, Int_t px, Int_t py) const overrideDefinition TGraphPainter.cxx:1101; TGraphPainter::ExecuteEventHelpervoid ExecuteEventHelper(TGraph *theGraph, Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TGraphPainter.cxx:821; TGraphPainter::HighlightPointvirtual void HighlightPoint(TGraph *theGraph, Int_t hpoint, Int_t distance)Check on highlight point.Definition TGraphPainter.cxx:1136; TGraphPainter::ComputeLogsvoid ComputeLogs(Int_t npoints, Int_t opt)Compute the logarithm of variables gxwork and gywork according to the value of Options and put the re...Definition TGraphPainter.cxx:690; TGraphPainter::gxworklstd::vector< Double_t > gxworklDefinition TGraphPainter.h:69; TGraphPainter::DistancetoPrimitiveHelperInt_t DistancetoPrimitiveHelper(TGraph *theGraph, Int_t px, Int_t py) overrideCompute distance from point px,py to a graph.Definition TGraphPainter.cxx:717; TGraphPainter::gxworkstd::vector< Double_t > gxworkDefinition TGraphPainter.h:69; TGraphPainter::gyworkstd::vector< Double_t > gyworkDefinition TGraphPainter.h:69; TGraphPainter::PaintScattervoid PaintScatter(TScatter *theScatter, Option_t *option) overridePaint a scatter plot.Definition TGraphPainter.cxx:4392; TGraphPainter::Smoothvoid Smooth(TGraph *theGraph, Int_t npoints, Double_t *x, Double_t *y, Int_t drawtype)Smooth a curve given by N points.Definition TGraphPainter.cxx:4938; TGraphPainter::gyworklstd::vector< Double_t > gyworklInternal buffers for coordinates. Used for graphs pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:199899,variab,variables,199899,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,2,['variab'],['variables']
Modifiability,"n TH2.cxx:380; TH2::DoQuantilesvirtual TH1D * DoQuantiles(bool onX, const char *name, Double_t prob) constImplementation of quantiles for x or y.Definition TH2.cxx:2527; TH2::fTsumwxyDouble_t fTsumwxyTotal Sum of weight*X*Y.Definition TH2.h:36; TH2::SetBinContentvoid SetBinContent(Int_t bin, Double_t content) overrideSet bin content.Definition TH2.cxx:2616; TH2::FillInt_t Fill(const char *, Double_t) overrideIncrement bin with namex with a weight w.Definition TH2.h:58; TH2::BufferEmptyInt_t BufferEmpty(Int_t action=0) overrideFill histogram with all entries in the buffer.Definition TH2.cxx:278; TH2::Integralvirtual Double_t Integral(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Option_t *="""") constDefinition TH2.h:106; TH2::DoFitSlicesvirtual void DoFitSlices(bool onX, TF1 *f1, Int_t firstbin, Int_t lastbin, Int_t cut, Option_t *option, TObjArray *arr)Definition TH2.cxx:814; TH2::QuantilesXTH1D * QuantilesX(Double_t prob=0.5, const char *name=""_qx"") constCompute the X distribution of quantiles in the other variable Y name is the name of the returned hist...Definition TH2.cxx:2505; TH2::SetShowProjectionYvirtual void SetShowProjectionY(Int_t nbins=1)When the mouse is moved in a pad containing a 2-d view of this histogram a second canvas shows the pr...Definition TH2.cxx:2650; TH2::SetBinContentvoid SetBinContent(Int_t binx, Int_t biny, Int_t, Double_t content) overrideDefinition TH2.h:125; TH2::FillRandomvoid FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr) overrideFill histogram following distribution in function fname.Definition TH2.cxx:714; TH2::GetBinErrorUpvirtual Double_t GetBinErrorUp(Int_t binx, Int_t biny)Definition TH2.h:98; TH2::Resetvoid Reset(Option_t *option="""") overrideReset this histogram: contents, errors, etc.Definition TH2.cxx:2600; TH2::fScalefactorDouble_t fScalefactorScale factor.Definition TH2.h:33; TH2::DoProjectionvirtual TH1D * DoProjection(bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) constIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h_source.html:38940,variab,variable,38940,doc/master/TH2_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2_8h_source.html,1,['variab'],['variable']
Modifiability,"n TObject). This method must be overridden in the relevant TClonesArray object class, implementing the reset procedure for pointer objects.; If the objects are added using the placement new then the Clear must deallocate the memory.; If the objects are added using TClonesArray::ConstructedAt then the heap-based memory can stay allocated and reused as the constructor is not called for already constructed/added object.; To reduce memory fragmentation, please make sure that the TClonesArrays are not destroyed and created on every event. They must only be constructed/destructed at the beginning/end of the run. . Definition at line 29 of file TClonesArray.h. Public Types; enum  EStatusBits { kBypassStreamer = (1ULL << ( 12 )); , kForgetBits = (1ULL << ( 15 )); };  Saved copies of pointers to objects. More...;  ;  Public Types inherited from TObjArray; typedef TObjArrayIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TClonesArray ();  Default Constructor. ;  ;  TClonesArray (const char *classname, Int_t size=1000, Bool_t call_dtor=kFALSE);  Create an array of clone objects of classname. ;  ;  TClonesArray (const TClass *cl, Int_t size=1000, Bool_t call_dtor=kFALSE);  Create an array of clone objects of class cl. ;  ;  TClonesArray (const TClones",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClonesArray.html:5198,inherit,inherited,5198,doc/master/classTClonesArray.html,https://root.cern,https://root.cern/doc/master/classTClonesArray.html,3,['inherit'],['inherited']
Modifiability,"n TRandom.cxx:275; TRandom::SetSeedvirtual void SetSeed(ULong_t seed=0)Set the random generator seed.Definition TRandom.cxx:615; TRandom::Uniformvirtual Double_t Uniform(Double_t x1=1)Returns a uniform deviate on the interval (0, x1).Definition TRandom.cxx:682; TStringBasic string class.Definition TString.h:139; TString::Formvoid Form(const char *fmt,...)Formats a string using a printf style format descriptor.Definition TString.cxx:2356; double; int; ptTPaveText * ptDefinition entrylist_figure1.C:7; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; TMath::PowerLongDouble_t Power(LongDouble_t x, LongDouble_t y)Returns x raised to the power y.Definition TMath.h:721; Users Guide ; https://oproject.org/pages/ROOT R Users Guide. Definition at line 136 of file TRInterface.h. Classes; class  Binding;  . Public Member Functions;  ~TRInterface ();  ; template<typename T > ; void Assign (const T &var, const TString &name);  Template method to assign C++ variables into R environment. ;  ; void Assign (const TRDataFrame &df, const TString &name);  Method to assign TRDataFrame in R's environment. ;  ; void Assign (const TRFunctionExport &fun, const TString &name);  Method to assign TRFunctionExport in R's environment. ;  ; TRObject Eval (const TString &code);  Method to eval R code and you get the result in a TRObject. ;  ; Int_t Eval (const TString &code, TRObject &ans);  Method to eval R code and you get the result in a reference to TRObject. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; void Execute (const TString &code);  Method to eval R code. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; Bool_t Install (TString pkg, TString repos=""http://cra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html:6893,variab,variables,6893,doc/master/classROOT_1_1R_1_1TRInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html,1,['variab'],['variables']
Modifiability,"n TSystem.cxx:1857; Let's first review what we exactly mean by ""quadratic programming"" :; We want to minimize the following objective function :; \( c^T x + ( 1/2 ) x^T Q x \) wrt. the vector \( x \); \( c \) is a vector and \( Q \) a symmetric positive definite matrix; You might wonder what is so special about this objective which is quadratic in the unknowns, that can not be done by Minuit/Fumili . Well, we have in addition the following boundary conditions on \( x \):. \[; A x = b \\; clo \le C x \le cup \\; xlo \le x \le xup; \]. where A and C are arbitrary matrices and the rest are vectors; Not all these constraints have to be defined . Our example will only use \( xlo \), \( A \) and \( b \) Still, this could be handled by a general non-linear minimizer like Minuit by introducing so-called ""slack"" variables . However, quadp is tailored to objective functions not more complex than being quadratic . This allows usage of solving techniques which are even stable for problems involving for instance 500 variables, 100 inequality conditions and 50 equality conditions .; Enough said about quadratic programming, let's return to our example . Suppose, after a long day of doing physics, you have a look at your investments and realize that an early retirement is not possible, given the returns of your stocks . So what now ? ROOT to the rescue ...; In 1990 Harry Markowitz was awarded the Nobel prize for economics: "" his work provided new tools; for weighing the risks and rewards of different investments and for valuing corporate stocks and bonds"" . In plain English, he developed the tools to balance greed and fear, we want the maximum return with the minimum amount of risk. Our stock portfolio should be at the ""Efficient Frontier"". To quantify better the risk we are willing to take, we define a utility function \( U(x) \). It describes as a function of our total assets \( x \), our ""satisfaction"" . A common choice is \( 1-exp(-k*x) \) (the reason for the exponent will be c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/portfolio_8C.html:1610,variab,variables,1610,doc/master/portfolio_8C.html,https://root.cern,https://root.cern/doc/master/portfolio_8C.html,1,['variab'],['variables']
Modifiability,"n TSystem.h:269; TSystem::fReadmaskTFdSet * fReadmaskDefinition TSystem.h:275; TSystem::fWdpathTString fWdpathDefinition TSystem.h:284; TSystem::DirNamevirtual const char * DirName(const char *pathname)Return the directory name in pathname.Definition TSystem.cxx:1006; TSystem::FreeDirectoryvirtual void FreeDirectory(void *dirp)Free a directory.Definition TSystem.cxx:845; TSystem::OpenDirectoryvirtual void * OpenDirectory(const char *name)Open a directory. Returns 0 if directory does not exist.Definition TSystem.cxx:836; TSystem::GetPidvirtual int GetPid()Get process id.Definition TSystem.cxx:707; TSystem::fHostnameTString fHostnameDefinition TSystem.h:285; TSystem::NextTimeOutvirtual Long_t NextTimeOut(Bool_t mode)Time when next timer of mode (synchronous=kTRUE or asynchronous=kFALSE) will time-out (in ms).Definition TSystem.cxx:494; TSystem::SetSockOptvirtual int SetSockOpt(int sock, int kind, int val)Set socket option.Definition TSystem.cxx:2436; TSystem::Getenvvirtual const char * Getenv(const char *env)Get environment variable.Definition TSystem.cxx:1665; TSystem::fWritemaskTFdSet * fWritemaskFiles that should be checked for read events.Definition TSystem.h:276; TSystem::fSignalsTFdSet * fSignalsFiles with writes waiting.Definition TSystem.h:279; TSystem::ConcatFileNamevirtual char * ConcatFileName(const char *dir, const char *name)Concatenate a directory and a file name. User must delete returned string.Definition TSystem.cxx:1071; TSystem::IsPathLocalvirtual Bool_t IsPathLocal(const char *path)Returns TRUE if the url in 'path' points to the local file system.Definition TSystem.cxx:1305; TSystem::FindFilevirtual const char * FindFile(const char *search, TString &file, EAccessMode mode=kFileExists)Find location of file in a search path.Definition TSystem.cxx:1538; TSystem::mkdirvirtual int mkdir(const char *name, Bool_t recursive=kFALSE)Make a file system directory.Definition TSystem.cxx:906; TSystem::MakeDirectoryvirtual int MakeDirectory(const char *name)Make ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:195659,variab,variable,195659,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['variab'],['variable']
Modifiability,"n a for loop, the elements get somehow “overridden”; [ROOT-7478] - Generating PCH fails with CXX flags with spaces; [ROOT-7491] - TLatex display issues with root 6.04; [ROOT-7509] - Build Failure on FreeBSD 10.1; [ROOT-7515] - C++14 needs GCC 5.1; [ROOT-7536] - Missing include file; [ROOT-7537] - Root tries to find include files in ROOTINCDIR/include instead of ROOTINCDIR; [ROOT-7575] - ROOT 6 can’t compile with python 3.3; [ROOT-7586] - CMS missing symbol / function body of template; [ROOT-7598] - Size shown in dmg installer is wrong; [ROOT-7602] - CMake: Touching core/meta/inc/Linkdef.h, core/base/G__Base.cxx does not get regenerated; [ROOT-7605] - cmake -Dminimal=ON not working; [ROOT-7606] - cmake -Dfail-on-missing=ON -Dmathmore=ON not consistent; [ROOT-7663] - failure to compile master branch on ubuntu 15.04; [ROOT-7683] - Memory leak in ROOT::TSchemaRuleSet reported in ATLAS job; [ROOT-7706] - thisroot.sh not working properly for zsh. Improvements. [ROOT-7480] - improvement of the occincdir search in configure. Tasks. [ROOT-7583] - Let thisroot add ROOT to CMAKE_PREFIX_PATH. Release 6.04/06; Build. Building ROOT with cmake command not in my PATH now fixed ROOT-7715; Fix builtin_xrootd option that was not working for XROOTD version 4.2.2.; Option gnuinstall also sets RPATH in librries and executables in installation directory; Various fixes for MacOS X 10.11 ROOT-7680. Core. Fix thread safety of the creation of TMethodCall from a TFunction.; Fix dictionary generation of STL collection involving one of ROOT’s core classes when the user header contains only a forward declaration of the class [ROOT-7695]. Bugs. [ROOT-7680] - Can’t build v6-02-12 on MacOS X 10.11; [ROOT-7695] - Segmentation violation in rootcint; [ROOT-7709] - PyROOT not functional with system-default Python version on MacOS X 10.11; [ROOT-7715] - Building ROOT with CMake not in my PATH fails. Release 6.04/08; Build. Add –disable-search-usrlocal to configure/make to be able to avoid conflict with i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:31685,config,configure,31685,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['config'],['configure']
Modifiability,"n a plane; normal - normal of the plane; itsect - output, point of intersection; Returns:; kFALSE if intersection can not be found, kTRUE otherwise. void FillPointSet(TEvePointSet* ps) const; Reset ps and populate it with points in propagation cache. void RebuildTracks(); Rebuild all tracks using this render-style. void SetMagField(Double_t bX, Double_t bY, Double_t bZ); Set constant magnetic field and rebuild tracks. void SetMagFieldObj(TEveMagField* field, Bool_t own_field = kTRUE); Set constant magnetic field and rebuild tracks. void PrintMagField(Double_t x, Double_t y, Double_t z) const. void SetMaxR(Double_t x); Set maximum radius and rebuild tracks. void SetMaxZ(Double_t x); Set maximum z and rebuild tracks. void SetMaxOrbs(Double_t x); Set maximum number of orbits and rebuild tracks. void SetMinAng(Double_t x); Set maximum step angle and rebuild tracks.; WARNING -- this method / variable was mis-named. Double_t GetMinAng() const; Get maximum step angle.; WARNING -- this method / variable was mis-named. void SetMaxAng(Double_t x); Set maximum step angle and rebuild tracks. void SetMaxStep(Double_t x); Set maximum step-size and rebuild tracks. void SetDelta(Double_t x); Set maximum error and rebuild tracks. void SetFitDaughters(Bool_t x); Set daughter creation point fitting and rebuild tracks. void SetFitReferences(Bool_t x); Set track-reference fitting and rebuild tracks. void SetFitDecay(Bool_t x); Set decay fitting and rebuild tracks. void SetFitCluster2Ds(Bool_t x); Set 2D-cluster fitting and rebuild tracks. void SetRnrDecay(Bool_t x); Set decay rendering and rebuild tracks. void SetRnrCluster2Ds(Bool_t x); Set rendering of 2D-clusters and rebuild tracks. void SetRnrDaughters(Bool_t x); Set daughter rendering and rebuild tracks. void SetRnrReferences(Bool_t x); Set track-reference rendering and rebuild tracks. void SetRnrFV(Bool_t x); Set first-vertex rendering and rebuild tracks. void SetProjTrackBreaking(UChar_t x); Set projection break-point mode and re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTrackPropagator.html:28866,variab,variable,28866,root/html530/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html530/TEveTrackPropagator.html,3,['variab'],['variable']
Modifiability,"n a single ioStreamer pass. ;  . #include <RooRealSumPdf.h>. Inheritance diagram for RooRealSumPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRealSumPdf() [1/5]. RooRealSumPdf::RooRealSumPdf ; (; ). Default constructor coverity[UNINIT_CTOR]. ; Definition at line 70 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [2/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title . ). Constructor with name and title. ; Definition at line 75 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [3/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inFuncList, . const RooArgList & ; inCoefList, . bool ; extended = false . ). Constructor for a PDF from a list of functions and coefficients. ; It implements ; \[; \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} \). With extended=true, the coefficients can take any values. With extended=false, there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree of freedom less.; A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes ; \[; \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} - 1 \).; All coefficients and functions are allowed to be negative but the sum (i.e. the PDF) is not, which is enforced at runtime.; Parameters. nameName of the PDF ; titleTitle (for plotting) ; inFuncListList of functions to sum ; inCoefListList of coefficients ; extendedInterpret as extended PDF (requires equal number of functions and coefficients) . Definition at line 127 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [4/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func1, . RooAbsReal & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumPdf.html:78587,extend,extended,78587,doc/master/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/master/classRooRealSumPdf.html,1,['extend'],['extended']
Modifiability,"n a single ioStreamer pass. ;  . #include <RooRealSumPdf.h>. Inheritance diagram for RooRealSumPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRealSumPdf() [1/5]. RooRealSumPdf::RooRealSumPdf ; (; ). Default constructor coverity[UNINIT_CTOR]. ; Definition at line 72 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [2/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title . ). Constructor with name and title. ; Definition at line 77 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [3/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . const RooArgList & ; inFuncList, . const RooArgList & ; inCoefList, . bool ; extended = false . ). Constructor for a PDF from a list of functions and coefficients. ; It implements ; \[; \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} \). With extended=true, the coefficients can take any values. With extended=false, there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree of freedom less.; A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes ; \[; \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; \]. if \( N_\mathrm{coef} = N_\mathrm{func} - 1 \).; All coefficients and functions are allowed to be negative but the sum (i.e. the PDF) is not, which is enforced at runtime.; Parameters. nameName of the PDF ; titleTitle (for plotting) ; inFuncListList of functions to sum ; inCoefListList of coefficients ; extendedInterpret as extended PDF (requires equal number of functions and coefficients) . Definition at line 129 of file RooRealSumPdf.cxx. ◆ RooRealSumPdf() [4/5]. RooRealSumPdf::RooRealSumPdf ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func1, . RooAbsReal & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:79708,extend,extended,79708,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,1,['extend'],['extended']
Modifiability,"n about a; GL-context and alows their proper management in ROOT. Function Members (Methods); public:. virtual~TGLContext(); static TClass*Class(); Bool_tClearCurrent(); static TGLContext*GetCurrent(); TGLContextIdentity*GetIdentity() const; static voidGlewInit(); virtual TClass*IsA() const; Bool_tIsValid() const; Bool_tMakeCurrent(); voidRelease(); voidSetContext(TGLWidget* widget, const TGLContext* shareList); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidSwapBuffers(); TGLContext(TGLWidget* glWidget, Bool_t shareDefault = kTRUE, const TGLContext* shareList = 0). private:. TGLContext&operator=(const TGLContext&); TGLContext(const TGLContext&). Data Members; private:. TGLPaintDevice*fDevice; Bool_tfFromCtorTo prohibit user's calls of SetContext.; TGLContextIdentity*fIdentity; TGLContextPrivate*fPimpl; Bool_tfValid; static Bool_tfgGlewInitDone. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLContext(TGLWidget* glWidget, Bool_t shareDefault = kTRUE, const TGLContext* shareList = 0); TGLContext ctor ""from"" TGLWidget.; Is shareDefault is true, the shareList is set from default; context-identity. Otherwise the given shareList is used (can be; null).; Makes thread switching. void GlewInit(); Initialize GLEW - static private function.; Called immediately after creation of the first GL context. void SetContext(TGLWidget* widget, const TGLContext* shareList); WIN32 gl-context creation. Defined as a member-function (this code removed from ctor); to make WIN32/X11 separation cleaner.; This function is public only for calls via gROOT and called from ctor. Bool_t MakeCurrent(); If context is valid (TGLPaintDevice, for which context was created still exists),; make it current. Bool_t ClearCurrent(); Reset current context. void SwapBuffers(); If context is valid (TGLPaintDevice, for which context was created still exists),; swap buff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLContext.html:1307,Inherit,Inheritance,1307,root/html602/TGLContext.html,https://root.cern,https://root.cern/root/html602/TGLContext.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n adaptive quadrature integration method for multi dimensional functions. It is described in this paper Genz, A.A. Malik, An adaptive algorithm for numerical integration over an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302. It is part of the MathCore library. The user can control the relative and absolute tolerance and the maximum allowed number of function evaluation.; 13.8.3.4 ROOT::Math::GSLMCIntegrator; It is a class for performing numerical integration of a multidimensional function. It uses the numerical integration algorithms of GSL, which reimplements the algorithms used in the QUADPACK, a numerical integration package written in Fortran. Plain MC, MISER and VEGAS integration algorithms are supported for integration over finite (hypercubic) ranges. For a detail description of the GSL methods visit the GSL users guide. Specific configuration options (documented in the GSL user guide) for the ROOT::Math::GSLMCIntegration can be set directly in the class, or when using it via the ROOT::Math::IntegratorMultiDim interface, can be defined using the ROOT::Math::IntegratorMultiDimOptions.; 13.9 Function Derivation; There are in ROOT only two classes to perform numerical derivation. One of them is in the MathCore library while the other is in the MathMore wrapping an integration function from the GSL library. * RichardsonDerivator: Implements the Richardson method for numerical integration. It can calculate up to the third derivative of a function. * GSLDerivator of MathMore based on GSL.; 13.10 Numerical Minimization; The algorithms provided by ROOT for numerical integration are implemented following the hierarchy shown in the next image. The left branch of classes are used for one dimensional minimization, while the right one is used for multidimensional minimization. In the case of multidimensional minimization we have also the classes TMinuitMinimizer implemented using TMinuit, TFumiliMinimizer implemented using TFumili for least squa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:713024,config,configuration,713024,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['config'],['configuration']
Modifiability,"n afterwards with Derivator::SetFunction. explicit Derivator(const IGenFunction &f). Construct using a ROOT::Math::IGenFunction interface. explicit Derivator(const ROOT::Math::Derivator::GSLFuncPointer& f, void* p = 0). Construct using a GSL function pointer type; @param f : free function pointer of the GSL required type; @param p : pointer to the object carrying the function state; (for example the function object itself). virtual ~Derivator(); destructor. Derivator(const Derivator &); disable copying. void SetFunction(const ROOT::Math::IGenFunction& f). Template methods for generic functions; Set the function f for evaluating the derivative.; The function type must implement the assigment operator,; <em> double operator() ( double x ) </em>. SetFunction(const ROOT::Math::Derivator::GSLFuncPointer& f, void* p = 0). double Eval(double x, double h = 1E-8) const. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(double x, double h = 1E-8) const. Computes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numeric",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Derivator.html:3279,adapt,adaptive,3279,root/html526/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Derivator.html,7,['adapt'],['adaptive']
Modifiability,"n amount. ;  . Protected Attributes; std::vector< double > _array;  ! do not persist ;  ; double _binw;  ; Int_t _nbins;  ; double _xhi;  ; double _xlo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooUniformBinning.h>. Inheritance diagram for RooUniformBinning:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooUniformBinning() [1/3]. RooUniformBinning::RooUniformBinning ; (; const char * ; name = nullptr). inline . Definition at line 25 of file RooUniformBinning.h. ◆ RooUniformBin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUniformBinning.html:16292,inherit,inherited,16292,doc/master/classRooUniformBinning.html,https://root.cern,https://root.cern/doc/master/classRooUniformBinning.html,1,['inherit'],['inherited']
Modifiability,"n as M .; If the problem is only one of precision, and not of word length mismatch, an appropriate MnMachinePrecision::setPrecision() may fix it.; Trivial bugs in \(\mbox{FCN}\). The possibilities for bugs are numerous. Probably the most common among physicists inexperienced in is the confusion between double and int types, which you can sometimes get away with, but not always. 3 M can spot some trivial bugs itself, and issues a warning when it detects an unusual \(\mbox{FCN}\) behaviour. Such a warning should be taken seriously.; M also offers some tools (especially \(\mbox{SCAN}\)) which can help the user to find trivial bugs.; An ill–posed problem. For questions of parameter dependence, see the discussion above on postive–definiteness. Other mathematical problems which can arise are: excessive numerical roundoff — be especially careful of exponential and factorial functions which get big very quickly and lose accuracy; starting too far from the solution — the function may have unphysical local minima, especially at infinity in some variables; incorrect normalization — in likelihood functions, the probability distributions must be normalized or at least have an integral which is independent of the values of the variable parameters.; A bug in M . This is unlikely, but it happens. If a bug is suspected, and all other possible causes can be eliminated, please try to save a copy of the input and output files, listing of \(\mbox{FCN}\), and other information that may be relevant, and send them to \(\mbox{fred.james@cern.ch}\). 7 A complete example; [example:example]; Here a full example of a fit is presented, following the example DemoGaussSim.cpp.; 7.1 The user’s \(\mbox{FCN}\); The implementation of FCNBase by the user’s GaussFcn is shown here.; 7.1.1 GaussFunction.h; The user’s model function is a Gaussian.; #ifndef MN_GaussFunction_H_; #define MN_GaussFunction_H_. #include <math.h>. class GaussFunction {. public:. GaussFunction(double mean, double sig, double consta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:79765,variab,variables,79765,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,8,['variab'],"['variable', 'variables']"
Modifiability,"n at line 153 of file VariableTransformBase.h. ◆ fGet. VectorOfCharAndInt TMVA::VariableTransformBase::fGet. protected . get variables/targets/spectators ; Definition at line 143 of file VariableTransformBase.h. ◆ fLogger. MsgLogger* TMVA::VariableTransformBase::fLogger. mutableprotected . ! message logger ; Definition at line 174 of file VariableTransformBase.h. ◆ fNormalise. Bool_t TMVA::VariableTransformBase::fNormalise. private . normalise input variables ; Definition at line 155 of file VariableTransformBase.h. ◆ fNSpectators. UInt_t TMVA::VariableTransformBase::fNSpectators. mutableprivate . number of spectators to be transformed ; Definition at line 165 of file VariableTransformBase.h. ◆ fNTargets. UInt_t TMVA::VariableTransformBase::fNTargets. mutableprivate . number of targets to be transformed ; Definition at line 164 of file VariableTransformBase.h. ◆ fNVariables. UInt_t TMVA::VariableTransformBase::fNVariables. mutableprivate . number of variables to be transformed ; Definition at line 163 of file VariableTransformBase.h. ◆ fNVars. UInt_t TMVA::VariableTransformBase::fNVars. private . number of variables ; Definition at line 156 of file VariableTransformBase.h. ◆ fPut. VectorOfCharAndInt TMVA::VariableTransformBase::fPut. protected . put variables/targets/spectators ; Definition at line 144 of file VariableTransformBase.h. ◆ fSortGet. Bool_t TMVA::VariableTransformBase::fSortGet. private . if true, sort the variables into the order as defined by the user at the var definition if false, sort the variables according to the order given for the var transformation ; Definition at line 167 of file VariableTransformBase.h. ◆ fSpectators. std::vector<TMVA::VariableInfo> TMVA::VariableTransformBase::fSpectators. private . event spectators [saved to weight file --> TODO ] ; Definition at line 160 of file VariableTransformBase.h. ◆ fTargets. std::vector<TMVA::VariableInfo> TMVA::VariableTransformBase::fTargets. private . event targets [saved to weight file --> TODO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:30408,variab,variables,30408,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,1,['variab'],['variables']
Modifiability,n at line 174 of file MethodCuts.h. ◆ fEffSMin. Double_t TMVA::MethodCuts::fEffSMin. private . used to test optimized signal efficiency ; Definition at line 173 of file MethodCuts.h. ◆ fFitMethod. EFitMethodType TMVA::MethodCuts::fFitMethod. private . chosen fit method ; Definition at line 168 of file MethodCuts.h. ◆ fFitMethodS. TString TMVA::MethodCuts::fFitMethodS. private . chosen fit method (string) ; Definition at line 167 of file MethodCuts.h. ◆ fFitParams. std::vector<EFitParameters>* TMVA::MethodCuts::fFitParams. private . vector for series of fit methods ; Definition at line 171 of file MethodCuts.h. ◆ fgMaxAbsCutVal. const Double_t TMVA::MethodCuts::fgMaxAbsCutVal = 1.0e30. static . Definition at line 130 of file MethodCuts.h. ◆ fMeanB. std::vector<Double_t>* TMVA::MethodCuts::fMeanB. private . means of variables (background) ; Definition at line 198 of file MethodCuts.h. ◆ fMeanS. std::vector<Double_t>* TMVA::MethodCuts::fMeanS. private . means of variables (signal) ; Definition at line 197 of file MethodCuts.h. ◆ fNegEffWarning. Bool_t TMVA::MethodCuts::fNegEffWarning. private . flag risen in case of negative efficiency warning ; Definition at line 213 of file MethodCuts.h. ◆ fNpar. Int_t TMVA::MethodCuts::fNpar. private . number of parameters in fit (default: 2*Nvar) ; Definition at line 191 of file MethodCuts.h. ◆ fRandom. TRandom* TMVA::MethodCuts::fRandom. private . random generator for MC optimisation method ; Definition at line 194 of file MethodCuts.h. ◆ fRangeSign. std::vector<Int_t>* TMVA::MethodCuts::fRangeSign. private . used to match cuts to fit parameters (and vice versa) ; Definition at line 193 of file MethodCuts.h. ◆ fRmsB. std::vector<Double_t>* TMVA::MethodCuts::fRmsB. private . RMSs of variables (background) ; Definition at line 200 of file MethodCuts.h. ◆ fRmsS. std::vector<Double_t>* TMVA::MethodCuts::fRmsS. private . RMSs of variables (signal) ; Definition at line 199 of file MethodCuts.h. ◆ fTestSignalEff. Double_t TMVA::MethodCuts,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:50838,variab,variables,50838,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['variab'],['variables']
Modifiability,n at line 291 of file RooSimGenContext.cxx. ◆ setProtoDataOrder(). void RooSimGenContext::setProtoDataOrder ; (; Int_t * ; lut). overridevirtual . Set the traversal order of the prototype data to that in the given lookup table. ; This information is passed to all component generator contexts ; Reimplemented from RooAbsGenContext.; Definition at line 278 of file RooSimGenContext.cxx. ◆ Streamer(). void RooSimGenContext::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsGenContext. ◆ StreamerNVirtual(). void RooSimGenContext::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 63 of file RooSimGenContext.h. ◆ updateFractions(). void RooSimGenContext::updateFractions ; (; ). protected . No action needed if we have a proto index. ; Definition at line 249 of file RooSimGenContext.cxx. Member Data Documentation. ◆ _allVarsPdf. RooArgSet RooSimGenContext::_allVarsPdf {}. protected . All pdf variables. ; Definition at line 61 of file RooSimGenContext.h. ◆ _fracThresh. std::vector<double> RooSimGenContext::_fracThresh. protected . [_numPdf] Fraction threshold array ; Definition at line 58 of file RooSimGenContext.h. ◆ _gcIndex. std::vector<int> RooSimGenContext::_gcIndex. protected . Index value corresponding to component. ; Definition at line 54 of file RooSimGenContext.h. ◆ _gcList. std::vector<std::unique_ptr<RooAbsGenContext> > RooSimGenContext::_gcList. protected . List of component generator contexts. ; Definition at line 53 of file RooSimGenContext.h. ◆ _haveIdxProto. bool RooSimGenContext::_haveIdxProto {false}. protected . Flag set if generation of index is requested. ; Definition at line 55 of file RooSimGenContext.h. ◆ _idxCat. RooAbsCategoryLValue* RooSimGenContext::_idxCat {nullptr}. protected . Clone of index category. ; Definition at line 49 of file RooSimGenContext.h. ◆ _idxCatName. TString RooSimGenContext::_idxCatName {}. protected . Name of index category.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimGenContext.html:22186,variab,variables,22186,doc/master/classRooSimGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimGenContext.html,1,['variab'],['variables']
Modifiability,"n at line 31 of file RooMultiVarGaussian.h. Classes; class  AnaIntData;  ; class  BitBlock;  ; class  GenData;  . Public Member Functions;  RooMultiVarGaussian ();  ;  RooMultiVarGaussian (const char *name, const char *title, const RooArgList &xvec, const RooArgList &mu, const TMatrixDBase &covMatrix);  ;  RooMultiVarGaussian (const char *name, const char *title, const RooArgList &xvec, const RooFitResult &fr, bool reduceToConditional=true);  ;  RooMultiVarGaussian (const char *name, const char *title, const RooArgList &xvec, const TMatrixDBase &covMatrix);  ;  RooMultiVarGaussian (const char *name, const char *title, const RooArgList &xvec, const TVectorD &mu, const TMatrixDBase &covMatrix);  ;  RooMultiVarGaussian (const RooMultiVarGaussian &other, const char *name=nullptr);  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Handle full integral here. ;  ; TObject * clone (const char *newname) const override;  ; const TMatrixDSym & covarianceMatrix () const;  ; void generateEvent (Int_t code) override;  Retrieve generator config from cache. ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const override;  Special case: generate all observables. ;  ; void initGenerator (Int_t code) override;  Clear the GenData cache as its content is not invariant under changes in the mu vector. ;  ; TClass * IsA () const override;  ; const RooArgList & muVec () const;  ; void setAnaIntZ (double z);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const RooArgList & xVec () const;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiVarGaussian.html:1495,config,config,1495,doc/master/classRooMultiVarGaussian.html,https://root.cern,https://root.cern/doc/master/classRooMultiVarGaussian.html,1,['config'],['config']
Modifiability,"n at line 4163 of file TFormula_v5.cxx. ◆ EvalPrimitive4(). Double_t TFormula::EvalPrimitive4 ; (; const Double_t * ; x, . const Double_t * ; params . ). protected . Evaluate primitive formula. ; Definition at line 4173 of file TFormula_v5.cxx. ◆ GetAction(). Short_t ROOT::v5::TFormula::GetAction ; (; Int_t ; code); const. inlineprotected . Definition at line 104 of file TFormula.h. ◆ GetActionOptimized(). Short_t ROOT::v5::TFormula::GetActionOptimized ; (; Int_t ; code); const. inlineprotected . Definition at line 112 of file TFormula.h. ◆ GetActionParam(). Int_t ROOT::v5::TFormula::GetActionParam ; (; Int_t ; code); const. inlineprotected . Definition at line 105 of file TFormula.h. ◆ GetActionParamOptimized(). Int_t ROOT::v5::TFormula::GetActionParamOptimized ; (; Int_t ; code); const. inlineprotected . Definition at line 113 of file TFormula.h. ◆ GetExpFormula(). TString TFormula::GetExpFormula ; (; Option_t * ; option = """"); const. virtual . Reconstruct the formula expression from the internal TFormula member variables. ; This function uses the internal member variables of TFormula to construct the mathematical expression associated with the TFormula instance. This function can be used to get an expanded version of the expression originally assigned to the TFormula instance, i.e. that the string returned by GetExpFormula() doesn't depend on other TFormula object names.; if option contains ""p"" the returned string will contain the formula expression with symbolic parameters, eg [0] replaced by the actual value of the parameter. Example: if expression in formula is: ""[0]*(x>-[1])+[2]*exp(-[3]*x)"" and parameters are 3.25,-4.01,4.44,-0.04, GetExpFormula(""p"") will return: ""(3.25*(x>+4.01))+(4.44*exp(+0.04*x))"" ; Definition at line 3022 of file TFormula_v5.cxx. ◆ GetLinearPart(). const TObject * TFormula::GetLinearPart ; (; Int_t ; i). virtual . Return linear part. ; Definition at line 3212 of file TFormula_v5.cxx. ◆ GetMaxima(). void TFormula::GetMaxima ; (; Int_t & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html:40183,variab,variables,40183,doc/master/classROOT_1_1v5_1_1TFormula.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html,1,['variab'],['variables']
Modifiability,"n at line 42 of file TGeoTabManager.h. Public Member Functions;  TGeoTabManager (TGedEditor *ged);  Ctor. ;  ;  ~TGeoTabManager () override;  Dtor. ;  ; void GetMaterialEditor (TGeoMaterial *material);  Get editor for a material. ;  ; void GetMatrixEditor (TGeoMatrix *matrix);  Get editor for a matrix. ;  ; void GetMediumEditor (TGeoMedium *medium);  Get editor for a medium. ;  ; TVirtualPad * GetPad () const;  ; void GetShapeEditor (TGeoShape *shape);  Get editor for a shape. ;  ; TGTab * GetTab () const;  ; Int_t GetTabIndex () const;  Get index for a given tab element. ;  ; TGeoVolume * GetVolume () const;  ; void GetVolumeEditor (TGeoVolume *vol);  Get editor for a volume. ;  ; TGCompositeFrame * GetVolumeTab () const;  ; void SetModel (TObject *model);  Send the SetModel signal to all editors in the tab TYPE. ;  ; void SetTab ();  Set a given tab element as active one. ;  ; void SetVolTabEnabled (Bool_t flag=kTRUE);  Enable/disable tabs. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTabManager.html:1952,inherit,inherited,1952,doc/master/classTGeoTabManager.html,https://root.cern,https://root.cern/doc/master/classTGeoTabManager.html,1,['inherit'],['inherited']
Modifiability,"n at line 67 of file PDEFoamMultiTarget.h. ◆ GetCellValue() [1/4]. Float_t TMVA::PDEFoam::GetCellValue ; (; const PDEFoamCell * ; cell, . ECellValue ; cv . ). virtual . Returns the cell value of 'cell' corresponding to the given option 'cv'. ; This function should be overridden by the subclass in order to specify which cell elements to return for a given cell value 'cv'. By default kValue returns cell element 0, and kValueError returns cell element 1. ; Reimplemented from TMVA::PDEFoam.; Definition at line 264 of file PDEFoam.cxx. ◆ GetCellValue() [2/4]. std::vector< Float_t > TMVA::PDEFoamMultiTarget::GetCellValue ; (; const std::map< Int_t, Float_t > & ; xvec, . ECellValue ;  . ). virtual . This function is overridden from PDFEFoam. ; It returns all regression targets (in order), given an untransformed event vector 'xvec'. The key of 'xvec' is the dimension and the value (Float_t) is the coordinate.; Note: number of foam dimensions = number of variables + number of targets; Parameters:; xvec - map of event variables (no targets!); cv - cell value to return (ignored!). Return: Targets, ordered by missing dimensions in 'xvec'. The size of the returned vector = foam dimension - size of xvec. ; Reimplemented from TMVA::PDEFoam.; Definition at line 128 of file PDEFoamMultiTarget.cxx. ◆ GetCellValue() [3/4]. std::vector< Float_t > TMVA::PDEFoam::GetCellValue ; (; const std::map< Int_t, Float_t > & ; xvec, . ECellValue ; cv . ). virtual . This function finds all cells, which corresponds to the given (incomplete) untransformed event vector 'xvec' and returns the cell values, according to the parameter 'cv'. ; Parameters:. xvec - map for the untransformed vector. The key (Int_t) is the dimension, and the value (Float_t) is the event coordinate. Note that not all coordinates have to be specified.; cv - cell values to return. Return:; cell values from all cells that were found ; Reimplemented from TMVA::PDEFoam.; Definition at line 261 of file PDEFoam.cxx. ◆ GetCellValue() [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html:24920,variab,variables,24920,doc/master/classTMVA_1_1PDEFoamMultiTarget.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html,2,['variab'],['variables']
Modifiability,"n at line 89 of file RooAbsGenContext.h. ◆ defaultPrintContents(). Int_t RooAbsGenContext::defaultPrintContents ; (; Option_t * ; opt); const. overridevirtual . Define default contents when printing. ; Reimplemented from RooPrintable.; Definition at line 367 of file RooAbsGenContext.cxx. ◆ defaultPrintStyle(). RooPrintable::StyleOption RooAbsGenContext::defaultPrintStyle ; (; Option_t * ; opt); const. overridevirtual . Define default print style. ; Reimplemented from RooPrintable.; Definition at line 377 of file RooAbsGenContext.cxx. ◆ generate(). RooDataSet * RooAbsGenContext::generate ; (; double ; nEvents = 0, . bool ; skipInit = false, . bool ; extendedMode = false . ). virtual . Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ; With nEvents<=0, generate the number of events in the prototype dataset, if available, or else the expected number of events, if non-zero. If extendedMode = true generate according to a Poisson(nEvents) The returned dataset belongs to the caller. Return zero in case of an error. Generation of individual events is delegated to a virtual generateEvent() method. A virtual initGenerator() method is also called just before the first call to generateEvent(). ; Reimplemented in RooSimSplitGenContext, and RooBinnedGenContext.; Definition at line 130 of file RooAbsGenContext.cxx. ◆ generateEvent(). virtual void RooAbsGenContext::generateEvent ; (; RooArgSet & ; theEvent, . Int_t ; remaining . ). pure virtual . Implemented in RooAddGenContext, RooBinnedGenContext, RooConvGenContext, RooEffGenContext, RooGenContext, RooProdGenContext, RooSimGenContext, and RooSimSplitGenContext. ◆ initGenerator(). void RooAbsGenContext::initGenerator ; (; const RooArgSet & ; theEvent). virtual . Interface function to initialize context for generation for given set of observables. ; Reimplemented in RooAddGenContext, RooBinnedGenContext, RooConvGenContext, RooEffGenContext, RooGenContext, RooProdGenCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsGenContext.html:18878,extend,extendedMode,18878,doc/master/classRooAbsGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAbsGenContext.html,1,['extend'],['extendedMode']
Modifiability,"n be changed from the outside.Definition RooRealVar.h:37; RooRealVar::setBinsvoid setBins(Int_t nBins, const char *name=nullptr)Create a uniform binning under name 'name' for this variable.Definition RooRealVar.cxx:396; RooWorkspacePersistable container for RooFit projects.Definition RooWorkspace.h:43; RooWorkspace::pdfRooAbsPdf * pdf(RooStringView name) constRetrieve p.d.f (RooAbsPdf) with given name. A null pointer is returned if not found.Definition RooWorkspace.cxx:1214; RooWorkspace::importbool import(const RooAbsArg &arg, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={})Import a RooAbsArg object, e.g.Definition RooWorkspace.cxx:370; RooWorkspace::factoryRooFactoryWSTool & factory()Return instance to factory tool.Definition RooWorkspace.cxx:2067; RooWorkspace::varRooRealVar * var(RooStringView name) constRetrieve real-valued variable (RooRealVar) with given name. A null pointer is returned if not found.Definition RooWorkspace.cxx:1232; RooWrapperPdfThe RooWrapperPdf is a class that can be used to convert a function into a PDF.Definition RooWrapperPdf.h:24; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SilenceRooCmdArg Silence(bool flag=true)Definition RooGlobalFunc.cxx:892; RooFit::ShiftToZeroRooCmdArg ShiftToZero()Definition RooGlobalFunc.cxx:191; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; RooFit::WARNING@ WARNINGDefinition RooGlobalFunc.h:60; rf616_morphingDefinition rf616_morphing.py:1; xmlio:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf616__morphing_8C.html:11224,variab,variable,11224,doc/master/rf616__morphing_8C.html,https://root.cern,https://root.cern/doc/master/rf616__morphing_8C.html,1,['variab'],['variable']
Modifiability,"n both client and server side. ;  ; RooAbsReal & arg () const;  ; void calculate () const;  Client-side function that instructs server process to start asynchronuous (re)calculation of function value. ;  ; TObject * clone (const char *newname) const override;  ; void enableOffsetting (bool flag) override;  Control verbose messaging related to inter process communication on both client and server side. ;  ; void followAsSlave (RooRealMPFE &master);  ; double getValV (const RooArgSet *nset=nullptr) const override;  If value needs recalculation and calculation has not been started with a call to calculate() start it now. ;  ; void setVerbose (bool clientFlag=true, bool serverFlag=true);  Control verbose messaging related to inter process communication on both client and server side. ;  ; void standby ();  Terminate remote server process and return front-end class to standby mode. ;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:3166,inherit,inherited,3166,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['inherit'],['inherited']
Modifiability,"n by supplying an optional set of dependents to project.; 2214 ; 2215 // Sanity checks; 2216 if (plotSanityChecks(frame)) return frame ;; 2217 ; 2218 // ProjDataVars is either all projData observables, or the user indicated subset of it; 2219 RooArgSet projDataVars ;; 2220 if (o.projData) {; 2221 if (o.projDataSet) {; 2222 std::unique_ptr<RooArgSet> tmp{o.projData->get()->selectCommon(*o.projDataSet)};; 2223 projDataVars.add(*tmp) ;; 2224 } else {; 2225 projDataVars.add(*o.projData->get()) ;; 2226 }; 2227 }; 2228 ; 2229 // Must depend on asymCat; 2230 if (!dependsOn(asymCat)) {; 2231 coutE(Plotting) << ""RooAbsReal::plotAsymOn("" << GetName(); 2232 << "") function doesn't depend on asymmetry category "" << asymCat.GetName() << std::endl ;; 2233 return frame ;; 2234 }; 2235 ; 2236 // asymCat must be a signCat; 2237 if (!asymCat.isSignType()) {; 2238 coutE(Plotting) << ""RooAbsReal::plotAsymOn("" << GetName(); 2239 << "") asymmetry category must have 2 or 3 states with index values -1,0,1"" << std::endl ;; 2240 return frame ;; 2241 }; 2242 ; 2243 // Make list of variables to be projected; 2244 RooArgSet projectedVars ;; 2245 RooArgSet sliceSet ;; 2246 if (o.projSet) {; 2247 makeProjectionSet(frame->getPlotVar(),o.projSet,projectedVars,false) ;; 2248 ; 2249 // Print list of non-projected variables; 2250 if (frame->getNormVars()) {; 2251 RooArgSet sliceSetTmp;; 2252 getObservables(frame->getNormVars(), sliceSetTmp) ;; 2253 sliceSetTmp.remove(projectedVars,true,true) ;; 2254 sliceSetTmp.remove(*frame->getPlotVar(),true,true) ;; 2255 ; 2256 if (o.projData) {; 2257 std::unique_ptr<RooArgSet> tmp{projDataVars.selectCommon(*o.projSet)};; 2258 sliceSetTmp.remove(*tmp,true,true) ;; 2259 }; 2260 ; 2261 if (!sliceSetTmp.empty()) {; 2262 coutI(Plotting) << ""RooAbsReal::plotAsymOn("" << GetName() << "") plot on ""; 2263 << frame->getPlotVar()->GetName() << "" represents a slice in "" << sliceSetTmp << std::endl ;; 2264 }; 2265 sliceSet.add(sliceSetTmp) ;; 2266 }; 2267 } else {; 2268 makeProject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:98563,variab,variables,98563,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"n case of failure.; Note: This is the overloading made in TXNetFile, If ReadBuffers; is supported by xrootd it will try to gt the whole list from one single; call avoiding the latency of multiple calls. Bool_t WriteBuffer(const char* buffer, Int_t BufferLength); Override TNetFile::WriteBuffer to deal with the xrootd server.; Returns kTRUE in case of errors. void Init(Bool_t create); Initialize the file. Makes sure that the file is really open before; calling TFile::Init. It may block. Bool_t IsOpen() const; Return kTRUE if the file is open, kFALSE otherwise. TFile::EAsyncOpenStatus GetAsyncOpenStatus(); Return status of asynchronous request. Int_t ReOpen(Option_t* mode); Re-open the file (see TNetFile::ReOpen() or TFile::ReOpen(); for more details). void Close(Option_t* opt = """"); Close the file (see TNetFile::Close() or TFile::Close(); for more details). void Flush(); Flushes un-written data. Int_t SysStat(Int_t fd, Long_t* id, Long64_t* size, Long_t* flags, Long_t* modtime); Override TNetFile::SysStat (see parent's method for more details). Int_t SysClose(Int_t fd); Override TNetFile::SysClose (see parent's method for more details). Int_t SysOpen(const char* pathname, Int_t flags, UInt_t mode); Override TNetFile::SysOpen (see parent's method for more details). void SetEnv(); Set the relevant environment variables. void SynchronizeCacheSize(); Synchronize the cache size; Alternative purging policy. void ResetCache(); Reset the cache. Int_t GetBytesToPrefetch() const; Max number of bytes to prefetch. void Print(Option_t* option = """") const; Print the local statistics. TXNetFile(const TXNetFile& ); attempts to Init() for this object only; Methods. TXNetFile& operator=(const TXNetFile& ). TXNetFile(); {}. » Last changed: root/netx:$Id: TXNetFile.h 41550 2011-10-24 15:30:04Z rdm $ » Last generated: 2011-12-02 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXNetFile.html:29373,variab,variables,29373,root/html532/TXNetFile.html,https://root.cern,https://root.cern/root/html532/TXNetFile.html,2,['variab'],['variables']
Modifiability,"n case the column to re-define does not already exist.; 594 ///; 595 /// See DefineSlotEntry() for more information.; 596 // clang-format on; 597 template <typename F>; 598 RInterface<Proxied, DS_t> RedefineSlotEntry(std::string_view name, F expression, const ColumnNames_t &columns = {}); 599 {; 600 return DefineImpl<F, RDFDetail::ExtraArgsForDefine::SlotAndEntry>(name, std::move(expression), columns,; 601 ""RedefineSlotEntry"");; 602 }; 603 ; 604 ////////////////////////////////////////////////////////////////////////////; 605 /// \brief Overwrite the value and/or type of an existing column.; 606 /// \param[in] name The name of the column to redefine.; 607 /// \param[in] expression An expression in C++ which represents the defined value; 608 /// \return the first node of the computation graph for which the new quantity is defined.; 609 ///; 610 /// The expression is just-in-time compiled and used to produce the column entries.; 611 /// It must be valid C++ syntax in which variable names are substituted with the names; 612 /// of branches/columns.; 613 ///; 614 /// The old value of the column can be used as an input for the expression.; 615 /// An exception is thrown in case the column to re-define does not already exist.; 616 ///; 617 /// Aliases cannot be overridden. See the corresponding Define() overload for more information.; 618 RInterface<Proxied, DS_t> Redefine(std::string_view name, std::string_view expression); 619 {; 620 constexpr auto where = ""Redefine"";; 621 RDFInternal::CheckValidCppVarName(name, where);; 622 RDFInternal::CheckForDefinition(where, name, fColRegister, fLoopManager->GetBranchNames(),; 623 fDataSource ? fDataSource->GetColumnNames() : ColumnNames_t{});; 624 RDFInternal::CheckForNoVariations(where, name, fColRegister);; 625 ; 626 auto upcastNodeOnHeap = RDFInternal::MakeSharedOnHeap(RDFInternal::UpcastNode(fProxiedPtr));; 627 auto jittedDefine = RDFInternal::BookDefineJit(name, expression, *fLoopManager, fDataSource, fColRegister,; 628 fLoop",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:32242,variab,variable,32242,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['variab'],['variable']
Modifiability,"n cut applied in node splitting ; Definition at line 116 of file MethodDT.h. ◆ fNodePurityLimit. Double_t TMVA::MethodDT::fNodePurityLimit. private . purity limit for sig/bkg nodes ; Definition at line 118 of file MethodDT.h. ◆ fPruneBeforeBoost. Bool_t TMVA::MethodDT::fPruneBeforeBoost. private . ancient variable, only needed for ""CompatibilityOptions"" ; Definition at line 137 of file MethodDT.h. ◆ fPruneMethod. DecisionTree::EPruneMethod TMVA::MethodDT::fPruneMethod. private . method used for pruning ; Definition at line 124 of file MethodDT.h. ◆ fPruneMethodS. TString TMVA::MethodDT::fPruneMethodS. private . prune method option String ; Definition at line 125 of file MethodDT.h. ◆ fPruneStrength. Double_t TMVA::MethodDT::fPruneStrength. private . a parameter to set the ""amount"" of pruning..needs to be adjusted ; Definition at line 123 of file MethodDT.h. ◆ fRandomisedTrees. Bool_t TMVA::MethodDT::fRandomisedTrees. private . choose a random subset of possible cut variables at each node during training ; Definition at line 127 of file MethodDT.h. ◆ fSepType. SeparationBase* TMVA::MethodDT::fSepType. private . the separation used in node splitting ; Definition at line 110 of file MethodDT.h. ◆ fSepTypeS. TString TMVA::MethodDT::fSepTypeS. private . the separation (option string) used in node splitting ; Definition at line 111 of file MethodDT.h. ◆ fTree. DecisionTree* TMVA::MethodDT::fTree. private . the decision tree ; Definition at line 108 of file MethodDT.h. ◆ fUseNvars. Int_t TMVA::MethodDT::fUseNvars. private . the number of variables used in the randomised tree splitting ; Definition at line 128 of file MethodDT.h. ◆ fUsePoissonNvars. Bool_t TMVA::MethodDT::fUsePoissonNvars. private . fUseNvars is used as a poisson mean, and the actual value of useNvars is at each step drawn form that distribution ; Definition at line 129 of file MethodDT.h. ◆ fUseYesNoLeaf. Bool_t TMVA::MethodDT::fUseYesNoLeaf. private . use sig or bkg classification in leave nodes or sig/bkg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:42076,variab,variables,42076,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,1,['variab'],['variables']
Modifiability,"n d P D F; //-----------------------------------------------; // angle theta and the weight to account for the acceptance effect; RooRealVar costheta(""costheta"", ""costheta"", -1.0, 1.0);; RooRealVar weight(""weight"", ""weight"", 0.0, 1000.0);; ; // initialise parameters to fit; RooRealVar c0(""c0"", ""0th-order coefficient"", c0gen, -1.0, 1.0);; RooRealVar c1(""c1"", ""1st-order coefficient"", c1gen, -1.0, 1.0);; c0.setError(0.01);; c1.setError(0.01);; // create simple second-order polynomial as probability density function; RooPolynomial pol(""pol"", ""pol"", costheta, {c0, c1}, 1);; ; double ngen = nstats;; if (acceptancemodel == 1); ngen *= 2.0 / (23.0 / 15.0);; else; ngen *= 2.0 / (16.0 / 15.0);; RooRealVar ntot(""ntot"", ""ntot"", ngen, 0.0, 2.0 * ngen);; RooExtendPdf extended(""extended"", ""extended pdf"", pol, ntot);; int npoisson = rnd->Poisson(nstats);; ; // G e n e r a t e d a t a s e t f o r p s e u d o e x p e r i m e n t i; //-------------------------------------------------------------------------------; RooDataSet data(""data"", ""data"", {costheta, weight}, WeightVar(""weight""));; // generate nstats events; for (std::size_t j = 0; j < npoisson; j++) {; bool finished = false;; // use simple accept/reject for generation; while (!finished) {; costheta = 2.0 * rnd->Rndm() - 1.0;; // efficiency for the specific value of cos(theta); double eff = 1.0;; if (acceptancemodel == 1); eff = 1.0 - 0.7 * costheta.getVal() * costheta.getVal();; else; eff = 0.3 + 0.7 * costheta.getVal() * costheta.getVal();; // use 1/eff as weight to account for acceptance; weight = 1.0 / eff;; // accept/reject; if (10.0 * rnd->Rndm() < eff * pol.getVal()); finished = true;; }; haccepted->Fill(costheta.getVal());; hweighted->Fill(costheta.getVal(), weight.getVal());; data.add({costheta, weight}, weight.getVal());; }; ; auto fillPulls = [&](std::size_t i) {; hc0pull[i]->Fill((c0.getVal() - c0gen) / c0.getError());; hc1pull[i]->Fill((c1.getVal() - c1gen) / c1.getError());; hntotpull[i]->Fill((ntot.getVal() - ngen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf611__weightedfits_8C.html:6805,extend,extended,6805,doc/master/rf611__weightedfits_8C.html,https://root.cern,https://root.cern/doc/master/rf611__weightedfits_8C.html,3,['extend'],['extended']
Modifiability,"n defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:51321,parameteriz,parameterized,51321,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,2,['parameteriz'],['parameterized']
Modifiability,"n derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality than its parent, however, sometimes it is necessary). ;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notificat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMapFile.html:8998,inherit,inherits,8998,doc/master/classTMapFile.html,https://root.cern,https://root.cern/doc/master/classTMapFile.html,1,['inherit'],['inherits']
Modifiability,"n derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; virtual ULong_t Hash () const;  Return hash value for this object. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if object inherits from TClass cl. ;  ; virtual void Inspect () const;  Dump contents of this object in a graphics canvas. ;  ; void InvertBit (UInt_t f);  ; Bool_t IsDestructed () const;  IsDestructed. ;  ; virtual Bool_t IsEqual (const TObject *obj) const;  Default equal comparison (objects are equal if they have the same address in memory). ;  ; virtual Bool_t IsFolder () const;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; R__ALWAYS_INLINE Bool_t IsOnHeap () const;  ; virtual Bool_t IsSortable () const;  ; R__ALWAYS_INLINE Bool_t IsZombie () const;  ; void MayNotUse (const char *method) const;  Use this method to signal that a method (defined in a base class) may not be called in a derived class (in principle against good design since a child class should not provide less functionality th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:27634,inherit,inherits,27634,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,7,['inherit'],['inherits']
Modifiability,"n destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TInetAddress (const char *host, UInt_t addr, Int_t family, Int_t port=-1);  Create TInetAddress. ;  ; void AddAddress (UInt_t addr);  Add alternative address to list of addresses. ;  ; void AddAlias (const char *alias);  Add alias to list of aliases. ;  . Private Attributes; AddressList_t fAddresses;  ; AliasList_t fAliases;  ; Int_t fFamily;  ; TString fHostname;  ; Int_t fPort;  . Friends; class TServerSocket;  ; class TSocket;  ; class TSystem;  ; class TUDPSocket;  ; class TUnixSystem;  ; class TUUID;  ; class TWinNTSystem;  ; class TXSocket;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TInetAddress.h>. Inheritance diagram for TInetAddress:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ AddressList_t. typedef std::vector<UInt_t> TInetAddress::AddressList_t. Definition at line 48 of file TInetAddress.h. ◆ AliasList_t. typedef std::vector<TString> TInetAddress::AliasList_t. Definition at line 49 of file TInetAddress.h. Constructor & Destructor Documentation. ◆ TInetAddress() [1/3]. TInetAddress::TInetAddress ; (; const char * ; host, . UInt_t ; addr, . Int_t ; family, . Int_t ; port = -1 . ). private . Create TInetAddress. ; Private ctor. TInetAddress objects can only be created via the friend classes TSystem, TServerSocket and TSocket. Use the IsValid() method to check the validity of a TInetAddress. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInetAddress.html:11159,inherit,inherited,11159,doc/master/classTInetAddress.html,https://root.cern,https://root.cern/doc/master/classTInetAddress.html,2,['inherit'],['inherited']
Modifiability,"n destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluation. ;  ; void setCoordinate (const RooAbsCollection &observables, std::vector< double > const &observableValues);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyFunc.html:49150,inherit,inherited,49150,doc/master/classRooPolyFunc.html,https://root.cern,https://root.cern/doc/master/classRooPolyFunc.html,1,['inherit'],['inherited']
Modifiability,"n double values !; TH1* hx = h2->ProjectionX(); // ! TH1D, not TH1F; TH1* hy = h2->ProjectionY(); // ! TH1D, not TH1F; 3.2.1 Constant or Variable Bin Width; The histogram classes provide a variety of ways to construct a histogram, but the most common way is to provide the name and title of histogram and for each dimension: the number of bins, the minimum x (lower edge of the first bin) and the maximum x (upper edge of the last bin).; TH2* h = new TH2D(; /* name */ ""h2"",; /* title */ ""Hist with constant bin width"",; /* X-dimension */ 100, 0.0, 4.0,; /* Y-dimension */ 200, -3.0, 1.5);; When employing this constructor, you will create a histogram with constant (fixed) bin width on each axis. For the example above, the interval [0.0, 4.0] is divided into 100 bins of the same width w X = 4.0 - 0.0 100 = 0.04 for the X axis (dimension). Likewise, for the Y axis (dimension), we have bins of equal width w Y = 1.5 - (-3.0) 200 = 0.0225.; If you want to create histograms with variable bin widths, ROOT provides another constructor suited for this purpose. Instead of passing the data interval and the number of bins, you have to pass an array (single or double precision) of bin edges. When the histogram has n bins, then there are n+1 distinct edges, so the array you pass must be of size n+1.; const Int_t NBINS = 5;; Double_t edges[NBINS + 1] = {0.0, 0.2, 0.3, 0.6, 0.8, 1.0};; // Bin 1 corresponds to range [0.0, 0.2]; // Bin 2 corresponds to range [0.2, 0.3] etc... TH1* h = new TH1D(; /* name */ ""h1"",; /* title */ ""Hist with variable bin width"",; /* number of bins */ NBINS,; /* edge array */ edges; );; Each histogram object contains three TAxis objects: fXaxis , fYaxis, and fZaxis, but for one-dimensional histograms only the X-axis is relevant, while for two-dimensional histograms the X-axis and Y-axis are relevant. See the class TAxis for a description of all the access methods. The bin edges are always stored internally in double precision.; You can examine the actual edges / li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:73654,variab,variable,73654,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"n drawing the histogram. action = 1 histogram is filled and buffer is deleted; The buffer is automatically deleted when filling the histogram and the entries is; larger than the buffer size. Int_t BufferFill(Double_t x, Double_t w); accumulate arguments in buffer. When buffer is full, empty the buffer; fBuffer[0] = number of entries in buffer; fBuffer[1] = w of first entry; fBuffer[2] = x of first entry. bool CheckBinLimits(const TAxis* a1, const TAxis* a2). bool CheckAxisLimits(const TAxis* a1, const TAxis* a2); Check that the axis limits of the histograms are the same; if a first and last bin is passed the axis is compared between the given range. bool CheckEqualAxes(const TAxis* a1, const TAxis* a2); Check that the axis are the same. bool CheckConsistentSubAxes(const TAxis* a1, Int_t firstBin1, Int_t lastBin1, const TAxis* a2, Int_t firstBin2 = 0, Int_t lastBin2 = 0); Check that two sub axis are the same; the limits are defined by first bin and last bin; N.B. no check is done in this case for variable bins. bool CheckConsistency(const TH1* h1, const TH1* h2); Check histogram compatibility; returns kTRUE if number of bins and bin limits are identical. Double_t Chi2Test(const TH1* h2, Option_t* option = ""UU"", Double_t* res = 0) const; test for comparing weighted and unweighted histograms. Function: Returns p-value. Other return values are specified by the 3rd parameter <br>. Parameters:. - h2: the second histogram; - option:; o ""UU"" = experiment experiment comparison (unweighted-unweighted); o ""UW"" = experiment MC comparison (unweighted-weighted). Note that; the first histogram should be unweighted; o ""WW"" = MC MC comparison (weighted-weighted); o ""NORM"" = to be used when one or both of the histograms is scaled; but the histogram originally was unweighted; o by default underflows and overlows are not included:; * ""OF"" = overflows included; * ""UF"" = underflows included; o ""P"" = print chi2, ndf, p_value, igood; o ""CHI2"" = returns chi2 instead of p-value; o ""CHI2/NDF"" ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TH1.html:44674,variab,variable,44674,root/html530/TH1.html,https://root.cern,https://root.cern/root/html530/TH1.html,3,['variab'],['variable']
Modifiability,"n entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections can be defined with different colors. It is possible to generate an entry list from a given selection and apply it to the tree using the editor (""Apply to tree"" button). Axes:; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. Candle chart:; TParallelCoord can also be used to display a candle chart. In that mode, every variable is drawn in the same scale. The candle chart can be combined with the parallel coordinates mode, drawing the candle sticks over the axes.; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; f#define f(i)Definition RSha256.hxx:104; kViolet@ kVioletDefinition Rtypes.h:67; gPad#define gPadDefinition TVirtualPad.h:308; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:3099,variab,variable,3099,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variable']
Modifiability,"n errors at the minimum ; Reimplemented in TFumiliMinimizer, ROOT::Math::GeneticMinimizer, ROOT::Math::GSLMinimizer, ROOT::Math::GSLNLSMinimizer, TLinearMinimizer, TMinuitMinimizer, ROOT::Minuit2::Minuit2Minimizer, and ROOT::Math::RMinimizer.; Definition at line 246 of file Minimizer.h. ◆ FixVariable(). bool ROOT::Math::Minimizer::FixVariable ; (; unsigned int ; ivar). virtual . fix an existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 87 of file Minimizer.cxx. ◆ GetCovMatrix(). bool ROOT::Math::Minimizer::GetCovMatrix ; (; double * ; covMat); const. virtual . Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ; The array will be filled as cov[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented in TMinuitMinimizer, ROOT::Minuit2::Minuit2Minimizer, and ROOT::Math::RMinimizer.; Definition at line 135 of file Minimizer.cxx. ◆ GetHessianMatrix(). bool ROOT::Math::Minimizer::GetHessianMatrix ; (; double * ; hMat); const. virtual . Fill the passed array with the Hessian matrix elements The Hessian matrix is the matrix of the second derivatives and is the inverse of the covariance matrix If the variable is fixed or const the values for that variables are zero. ; The array will be filled as h[i *ndim + j] ; Reimplemented in TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 148 of file Minimizer.cxx. ◆ GetMinosError(). bool ROOT::Math::Minimizer::GetMinosError ; (; unsigned int ; ivar, . double & ; errLow, . double & ; errUp, . int ; option = 0 . ). virtual . minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:18203,variab,variable,18203,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variable']
Modifiability,"n every cell; Int_tTMVA::PDEFoam::fNSamplNo. of MC events, when dividing (exploring) cell; TStringTMVA::PDEFoam::fNameName of a given instance of the FOAM class; UInt_tTMVA::PDEFoam::fNminminimal number of events in cell to split cell; Int_tTMVA::PDEFoam::fNoActNumber of active cells; Bool_tTMVA::PDEFoam::fPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*TMVA::PDEFoam::fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDiscriminant(); Default constructor for streamer, user should not use it. PDEFoamDiscriminant(const TString& , UInt_t ); {}. PDEFoamDiscriminant(const TMVA::PDEFoamDiscriminant& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void FillFoamCells(const TMVA::Event* ev, Float_t wt); This function fills an event into the discriminant PDEFoam. The; event weight 'wt' is filled into cell element 0 if the event is; of class fClass, and filled into cell element 1 otherwise. void Finalize(); Calc discriminator and its error for every cell and save it to; the cell. TH2D* Project2(Int_t , Int_t , TMVA::ECellValue , TMVA::PDEFoamKernelBase* , UInt_t ); Project foam variable idim1 and variable idim2 to histogram.; The projection algorithm is modified such that the z axis range; of the returned histogram is [0, 1], as necessary for the; interpretation as a discriminator. This is done by weighting; the cell values (in case of cell_value = kVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDEFoamDiscriminant.html:11855,Inherit,Inheritance,11855,root/html532/TMVA__PDEFoamDiscriminant.html,https://root.cern,https://root.cern/root/html532/TMVA__PDEFoamDiscriminant.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n example in $ROOTSYS/tutorials/fit/fitcont.C ; Definition at line 653 of file TMinuit.cxx. ◆ DeclFileName(). static const char * TMinuit::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 268 of file TMinuit.h. ◆ DefineParameter(). Int_t TMinuit::DefineParameter ; (; Int_t ; parNo, . const char * ; name, . Double_t ; initVal, . Double_t ; initErr, . Double_t ; lowerLimit, . Double_t ; upperLimit . ). virtual . Define a parameter. ; Definition at line 695 of file TMinuit.cxx. ◆ DeleteArrays(). void TMinuit::DeleteArrays ; (; ). virtual . Delete internal Minuit arrays. ; Definition at line 708 of file TMinuit.cxx. ◆ Eval(). Int_t TMinuit::Eval ; (; Int_t ; npar, . Double_t * ; grad, . Double_t & ; fval, . Double_t * ; par, . Int_t ; flag . ). virtual . Evaluate the minimisation function Input parameters: . npar: number of currently variable parameters; par: array of (constant and variable) parameters; flag: Indicates what is to be calculated (see example below); grad: array of gradients Output parameters:; fval: The calculated function value.; grad: The (optional) vector of first derivatives). The meaning of the parameters par is of course defined by the user, who uses the values of those parameters to calculate their function value. The starting values must be specified by the user. Later values are determined by Minuit as it searches for the minimum or performs whatever analysis is requested by the user.; Note that this virtual function may be redefined in a class derived from TMinuit. The default function calls the function specified in SetFCN; Example of Minimisation function: ; Reimplemented in TMVA::MinuitWrapper.; Definition at line 800 of file TMinuit.cxx. ◆ FixParameter(). Int_t TMinuit::FixParameter ; (; Int_t ; parNo). virtual . fix a parameter ; Definition at line 827 of file TMinuit.cxx. ◆ GetMaxIterations(). Int_t TMinuit::GetMaxIterations ; (; ); const. inline . Definition at line 195 of fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:40929,variab,variable,40929,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,2,['variab'],['variable']
Modifiability,"n false; }. int CovMatrixStatus() const; return status of covariance matrix; using Minuit convention {0 not calculated 1 approximated 2 made pos def , 3 accurate}; Minimizer who implements covariance matrix calculation will re-implement the method. { return 0; }. double Correlation(unsigned int i, unsigned int j) const. return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero. double GlobalCC(unsigned int ) const. return global correlation coefficient for variable i; This is a number between zero and one which gives; the correlation between the i-th parameter and that linear combination of all; other parameters which is most strongly correlated with i.; Minimizer must overload method if implemented. { return -1; }. bool GetMinosError(unsigned int , double& errLow, double& errUp, int = 0). minos error for variable i, return false if Minos failed or not supported; and the lower and upper errors are returned in errLow and errUp; An extra flag specifies if only the lower (runopt=-1) or the upper (runopt=+1) error calculation is run; (This feature isnot yet implemented). bool Hesse(). perform a full calculation of the Hessian matrix for error calculation. { return false; }. bool Scan(unsigned int , unsigned int& , double* , double* , double = 0, double = 0). scan function minimum for variable i. Variable and function must be set before using Scan; Return false if an error or if minimizer does not support this functionality. bool Contour(unsigned int , unsigned int , unsigned int& , double* , double* ). find the contour points (xi,xj) of the function for parameter i and j around the minimum; The contour will be find for value of the function = Min + ErrorUp();. void PrintResults(); return reference to the objective function; virtual const ROOT::Math::IGenFunction & Function() const = 0;; print the result according to set level (implemented for TMinuit for mantaining Minuit-style printing). {}. std::string Variable",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Math__Minimizer.html:8420,variab,variable,8420,root/html530/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Math__Minimizer.html,3,['variab'],['variable']
Modifiability,"n flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigma; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLandau(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _mean, RooAbsReal& _sigma). RooLandau(const RooLandau& other, const char* name = 0). Double_t evaluate() const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooLandau(); {}. TObject* clone(const char* newname) const; { return new RooLandau(*this,newname); }. virtual ~RooLandau(); { }. » Last changed: Tue Jun 30 14:33:42 2015 » Last generated: 2015-06-30 14:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooLandau.html:44627,Inherit,Inheritance,44627,root/html602/RooLandau.html,https://root.cern,https://root.cern/root/html602/RooLandau.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n for ROOT.RDF.MakeNumpyDataFrame; [#6421] - Proposal to unify logging in Minuit2; [#7302] - TGraph copy constructor error; [#7212] - TMathText does not display with high value coordinates; [#6997] - Fill attribute is not fully reflected in THStack; [#6360] - [Docs] Missing figures in RDF tutorials 10[5,6,7] on doxygen; [#7093] - Race condition affecting (at least) TEnum::GetEnum; [#7054] - sporadic roottest-python-cmdLineUtils failures; [#6939] - Problems when TFile object is opened and closed on different threads.; [#6715] - [bug] Type overflow in TMessageHandler; [#7281] - Trailing dot dropped in top level branch name. Release 6.24/02; Published on June 28, 2021; RDataFrame. Scaling behavior at high core counts (32+ cores) has been improved (see also PR #8007). Bugs and Issues fixed in this release. [ROOT-9558] - [DF] RDataFrame Snapshot throws for branches with branch name!=variable name; [ROOT-10625] - Issues with RDataFrame if name and leaflist of a TBranch are different; [#6881] - [TTreeReader] Partial leaf/branch names not recognized in cases that TTree::Draw supports; [#7912] - TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; [#7903] - Invalid read in TClassEdit; [#7890] - Memory leak when running FrequentistCalculator scan in RooStats; [#7933] - Memory leak when using MemPoolForRooSets; [#7169] - RDataFrame and CreatePoxy/TTreeReaderValue error for selection on string branch in Filter method; [#8226] - [DF] Crash in multi-thread Snapshot in sub-directory; [#8276] - [DF] Possible use after delete of the functor passed to PassAsVec; [#8071] - Problems compiling root 6.24.00 with gcc 11 on Fedora 34; [#8307] - Issue with RooSimultaneous in 6.24.00 ?; [#8295] - TChain::AddClone failing for sub-branches of branch of type with ClassDef; [#7727] - TChain::CopyAddresses:0 warning in RDataFrame Snapshot of TChain with multiple files with objects; [#6520] - Integer types not available for Bulk API; [#8317] - [DF] Compilation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:47308,variab,variable,47308,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['variab'],['variable']
Modifiability,"n for later usage. ;  ; Int_t RegisterDimensions (Int_t code, TBranchElement *branch);  This method is used internally to decode the dimensions of the variables. ;  ; Int_t RegisterDimensions (Int_t code, TFormLeafInfo *info, TFormLeafInfo *maininfo, bool useCollectionObject);  This method is used internally to decode the dimensions of the variables. ;  ; Int_t RegisterDimensions (Int_t code, TLeaf *leaf);  This method is used internally to decode the dimensions of the variables. ;  ; void ResetDimensions ();  Populate the TTreeFormulaManager with the dimension information. ;  ; bool StringToNumber (Int_t code) override;  Try to 'demote' a string into an array bytes. ;  ; virtual bool SwitchToFormLeafInfo (Int_t code);  Convert the underlying lookup method from the direct technique (dereferencing the address held by the branch) to the method using TFormLeafInfo. ;  ;  Protected Member Functions inherited from ROOT::v5::TFormula; virtual Bool_t CheckOperands (Int_t leftoperand, Int_t rightoperartion, Int_t &err);  Check whether the operands at 'leftoper' and 'oper-1' are compatible with the operation at 'oper'. ;  ; virtual Bool_t CheckOperands (Int_t operation, Int_t &err);  Check whether the operand at 'oper-1' is compatible with the operation at 'oper'. ;  ; void ClearFormula (Option_t *option="""");  Resets the objects. ;  ; Double_t EvalParFast (const Double_t *x, const Double_t *params);  Evaluate this formula. ;  ; Double_t EvalPrimitive (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive0 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive1 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive2 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive3 (const Double_t *x, const Double_t *params);  Evaluate primitive formula. ;  ; Double_t EvalPrimitive4 (const Double_t *x, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:25259,inherit,inherited,25259,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['inherit'],['inherited']
Modifiability,"n forever. With; 19144 * TCP keep-alive, next keep-alive handshake will figure out that; 19145 * the client is down and will close the server end.; 19146 * Thanks to Igor Klopov who suggested the patch. */; 19147 if (setsockopt(so.sock,; 19148 SOL_SOCKET,; 19149 SO_KEEPALIVE,; 19150 (SOCK_OPT_TYPE)&on,; 19151 sizeof(on)); 19152 != 0) {; 19153 mg_cry_ctx_internal(; 19154 ctx,; 19155 ""%s: setsockopt(SOL_SOCKET SO_KEEPALIVE) failed: %s"",; 19156 __func__,; 19157 strerror(ERRNO));; 19158 }; 19159 }; 19160#endif; 19161 ; 19162 /* Disable TCP Nagle's algorithm. Normally TCP packets are coalesced; 19163 * to effectively fill up the underlying IP packet payload and; 19164 * reduce the overhead of sending lots of small buffers. However; 19165 * this hurts the server's throughput (ie. operations per second); 19166 * when HTTP 1.1 persistent connections are used and the responses; 19167 * are relatively small (eg. less than 1400 bytes).; 19168 */; 19169 if ((ctx->dd.config[CONFIG_TCP_NODELAY] != NULL); 19170 && (!strcmp(ctx->dd.config[CONFIG_TCP_NODELAY], ""1""))) {; 19171 if (set_tcp_nodelay(&so, 1) != 0) {; 19172 mg_cry_ctx_internal(; 19173 ctx,; 19174 ""%s: setsockopt(IPPROTO_TCP TCP_NODELAY) failed: %s"",; 19175 __func__,; 19176 strerror(ERRNO));; 19177 }; 19178 }; 19179 ; 19180 /* The ""non blocking"" property should already be; 19181 * inherited from the parent socket. Set it for; 19182 * non-compliant socket implementations. */; 19183 set_non_blocking_mode(so.sock);; 19184 ; 19185 so.in_use = 0;; 19186 produce_socket(ctx, &so);; 19187 }; 19188}; 19189 ; 19190 ; 19191static void; 19192master_thread_run(struct mg_context *ctx); 19193{; 19194 struct mg_workerTLS tls;; 19195 struct mg_pollfd *pfd;; 19196 unsigned int i;; 19197 unsigned int workerthreadcount;; 19198 ; 19199 if (!ctx) {; 19200 return;; 19201 }; 19202 ; 19203 mg_set_thread_name(""master"");; 19204 ; 19205 /* Increase priority of the master thread */; 19206#if defined(_WIN32); 19207 SetThreadPriority(GetCurrentThread(), ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:571450,config,config,571450,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"n forever. With; 19145 * TCP keep-alive, next keep-alive handshake will figure out that; 19146 * the client is down and will close the server end.; 19147 * Thanks to Igor Klopov who suggested the patch. */; 19148 if (setsockopt(so.sock,; 19149 SOL_SOCKET,; 19150 SO_KEEPALIVE,; 19151 (SOCK_OPT_TYPE)&on,; 19152 sizeof(on)); 19153 != 0) {; 19154 mg_cry_ctx_internal(; 19155 ctx,; 19156 ""%s: setsockopt(SOL_SOCKET SO_KEEPALIVE) failed: %s"",; 19157 __func__,; 19158 strerror(ERRNO));; 19159 }; 19160 }; 19161#endif; 19162 ; 19163 /* Disable TCP Nagle's algorithm. Normally TCP packets are coalesced; 19164 * to effectively fill up the underlying IP packet payload and; 19165 * reduce the overhead of sending lots of small buffers. However; 19166 * this hurts the server's throughput (ie. operations per second); 19167 * when HTTP 1.1 persistent connections are used and the responses; 19168 * are relatively small (eg. less than 1400 bytes).; 19169 */; 19170 if ((ctx->dd.config[CONFIG_TCP_NODELAY] != NULL); 19171 && (!strcmp(ctx->dd.config[CONFIG_TCP_NODELAY], ""1""))) {; 19172 if (set_tcp_nodelay(&so, 1) != 0) {; 19173 mg_cry_ctx_internal(; 19174 ctx,; 19175 ""%s: setsockopt(IPPROTO_TCP TCP_NODELAY) failed: %s"",; 19176 __func__,; 19177 strerror(ERRNO));; 19178 }; 19179 }; 19180 ; 19181 /* The ""non blocking"" property should already be; 19182 * inherited from the parent socket. Set it for; 19183 * non-compliant socket implementations. */; 19184 set_non_blocking_mode(so.sock);; 19185 ; 19186 so.in_use = 0;; 19187 produce_socket(ctx, &so);; 19188 }; 19189}; 19190 ; 19191 ; 19192static void; 19193master_thread_run(struct mg_context *ctx); 19194{; 19195 struct mg_workerTLS tls;; 19196 struct mg_pollfd *pfd;; 19197 unsigned int i;; 19198 unsigned int workerthreadcount;; 19199 ; 19200 if (!ctx) {; 19201 return;; 19202 }; 19203 ; 19204 mg_set_thread_name(""master"");; 19205 ; 19206 /* Increase priority of the master thread */; 19207#if defined(_WIN32); 19208 SetThreadPriority(GetCurrentThread(), ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:571483,config,config,571483,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"n gROOT for histograms, canvases, open files ;  ; std::unique_ptr< TFolder > fTopFolder;  ! own top TFolder object, used for registering objects ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Types; enum  { kItemField = (1ULL << ( 21 )); };  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TRootSniffer.h>. Inheritance diagram for TRootSniffer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. private . EnumeratorkItemField . Definition at line 116 of file TRootSniffer.h. Constructor & Destructor Documentation. ◆ TRootSniffer(). TRootSniffer::TRootSniffer ; (; const char * ; name = ""sniff"", . const char * ; objpath = ""Objects"" . ). constructor ; Definition at line 415 of file TRootSniffer.cxx. ◆ ~TRootSniffer(). TRootSniffer::~TRootSniffer ; (; ). virtual . destructor ; Definition at line 424 of file TRootSniffer.cxx. Member Function Documentation. ◆ AccessField(). Bool_t TRootSniffer::AccessField ; (; TFolder * ; parent, . TObject * ; chld, . const char * ; name, . const char * ; value, . TNamed ** ; only_get = nullptr . ). protected . Set or get field for the child. ; each field coded as TNamed objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSniffer.html:19932,inherit,inherited,19932,doc/master/classTRootSniffer.html,https://root.cern,https://root.cern/doc/master/classTRootSniffer.html,1,['inherit'],['inherited']
Modifiability,"n guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Release Checklist. Steps to be followed to produce a new ROOT release are:; Prerequisites. Get the 'green' light from all main developers; Check that all the Jenkins builds / CDash builds are green; Verify that no performance regressions exist in the benchmark system; Update versions in JIRA. 'Release' the version in the project configuration; Create the next development version. root.git. Update the release notes in README/ReleaseNotes/vXXX/index.md. Edit release notes patches section; From the list the versions in JIRA, select the version and then 'release notes'; git commit README/ReleaseNotes/vXXX/index.md. Modify version number and modify all necessary files. edit build/version_number (even patch number for releases); Run from the build directory $ make version. Tag main ROOT repository. $ git tag -a vX-YY-ZZ; Run $ cmake . to update etc/gitinfo.txt. Create the source tarball. Run from the build directory $ make distsrc not on a MacOS machine; $ scp ../root_vX.YY.ZZ.source.tar.gz sftnight@root:/home/www/root/download. Update the release notes in README/ReleaseNotes/vXXX/index.md again. edit README/ReleaseNotes/vXXX/index.md; possibly copying from README/ReleaseNotes/empty.md if this is not a patch release; git commit README/ReleaseNotes/vXXX/index.md. Update to the next development version. edit build/version_nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/release-checklist.html:2197,config,configuration,2197,d/release-checklist.html,https://root.cern,https://root.cern/d/release-checklist.html,1,['config'],['configuration']
Modifiability,"n handler to system handler list. ;  ; virtual EStatus Handle (std::exception &exc)=0;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove std::exception handler from system handler list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStdExceptionHandler.html:2277,inherit,inherited,2277,doc/master/classTStdExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTStdExceptionHandler.html,1,['inherit'],['inherited']
Modifiability,"n image (GIF, JPEG, PNG, XPM, TIFF etc.) ;  CTImagePaletteA class to define a conversion from pixel values to pixel color ;  CTImagePlugin;  ►CTimeStampCounter;  CData;  CTIndArray;  ►CTIndexTable;  Citerator;  CTInetAddressThis class represents an Internet Protocol (IP) address ;  CTInspectCanvasPointer to class of the foreign object ;  CTInspectorImpABC describing GUI independent object inspector (abstraction mainly needed for Win32 ;  CTInstrumentedIsAProxy;  ►CTInterpreterThis class defines an abstract interface to a generic command line interpreter ;  CCallFuncIFacePtr_t;  CSuspendAutoParsing;  CTInterpreterValue;  CTIsAProxyTIsAProxy implementation class ;  CTIter;  CTIteratorIterator abstract base class ;  CTIterCategory;  CTKDEKernel Density Estimation class ;  CTKDEFGT;  CTKDTreeKd-tree ;  CTKDTreeBinning<- TKDTreeBinning - A class providing multidimensional binning -> ;  CTKeyBook space in a file, create I/O buffers, to fill them, (un)compress them ;  CTKeyMapFileUtility class for browsing TMapFile objects ;  CTKeySQLTKeySQL represents metainforamtion about object, which was written to SQL database ;  CTKeyXML;  ►CTKSocket;  CDesc_t;  ►CTLatexTo draw Mathematical Formula ;  CFormSize_tTLatex helper struct holding the dimensions of a piece of text ;  CTextSpec_tTLatex helper struct holding the attributes of a piece of text ;  CTLatexFormSizeTLatex helper class used to compute the size of a portion of a formula ;  CTLDAPAttribute;  CTLDAPEntry;  CTLDAPResult;  CTLDAPServer;  ►CTLeafA TLeaf describes individual elements of a TBranch See TBranch structure in TTree ;  CGetValueHelper;  CGetValueHelper< Long64_t >;  CGetValueHelper< LongDouble_t >;  CGetValueHelper< ULong64_t >;  CTLeafBA TLeaf for an 8 bit Integer data type ;  CTLeafCA TLeaf for a variable length string ;  CTLeafDA TLeaf for a 64 bit floating point data type ;  CTLeafElementA TLeaf for the general case when using the branches created via a TStreamerInfo (i.e ;  CTLeafFA TLeaf for a 32 bit floati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:138861,variab,variable,138861,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['variab'],['variable']
Modifiability,"n in relevant RooHistFunc instance. ;  ; void disableCache (bool flag);  ; bool forceAnalyticalInt (const RooAbsArg &) const override;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integration capabilities of the RooHistFunc that corresponds to the set of observables in allVars. ;  ; Int_t getInterpolationOrder () const;  ; double getValV (const RooArgSet *set=nullptr) const override;  Implementation of getVal() overriding default implementation of RooAbsReal. ;  ; TClass * IsA () const override;  ; virtual bool selfNormalized () const;  ; void setInterpolationOrder (Int_t order);  Set interpolation order of RooHistFunct representing cache histogram. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ;  ; virtual std::list< double > * binBoundaries (RooAbsRealLValue &obs, double xlo, double xhi) const;  Retrieve bin boundaries if this distribution is binned in obs. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedReal.html:2592,inherit,inherited,2592,doc/master/classRooAbsCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedReal.html,1,['inherit'],['inherited']
Modifiability,"n infinite interval. ;  ; double Integral (const std::vector< double > &pts) override;  This method is not implemented. ;  ; double Integral (double a, double b) override;  Returns Integral of function between a and b. ;  ; double IntegralCauchy (double a, double b, double c) override;  This method is not implemented. ;  ; double IntegralLow (double b) override;  Returns Integral of function on a lower semi-infinite interval. ;  ; double IntegralUp (double a) override;  Returns Integral of function on an upper semi-infinite interval. ;  ; double Result () const override;  Returns the result of the last Integral calculation. ;  ; void SetFunction (const IGenFunction &) override;  Set integration function (flag control if function must be copied inside). ;  ; int Status () const override;  return the status of the last integration - 0 in case of success ;  ;  Public Member Functions inherited from ROOT::Math::VirtualIntegratorOneDim;  ~VirtualIntegratorOneDim () override;  destructor: no operation ;  ; virtual ROOT::Math::IntegrationOneDim::Type Type () const;  return type of integrator ;  ;  Public Member Functions inherited from ROOT::Math::VirtualIntegrator; virtual ~VirtualIntegrator ();  destructor: no operation ;  . Protected Attributes; int fNum;  Number of points used in the estimation of the integral. ;  ; double * fW;  Weights of the points used. ;  ; double * fX;  Abscisa of the points used. ;  ;  Protected Attributes inherited from ROOT::Math::GaussIntegrator; double fEpsAbs;  Absolute error. ;  ; double fEpsRel;  Relative error. ;  ; const IGenFunction * fFunction;  Pointer to function used. ;  ; double fLastError;  Error from the last estimation. ;  ; double fLastResult;  Result from the last estimation. ;  ; bool fUsedOnce;  Bool value to check if the function was at least called once. ;  . Private Member Functions; void CalcGaussLegendreSamplingPoints ();  Type: unsafe but fast interface filling the arrays x and w (static method) ;  ; double DoIntegral ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html:3083,inherit,inherited,3083,doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GaussLegendreIntegrator.html,2,['inherit'],['inherited']
Modifiability,"n inheritance tree and so forth. The simple data members are written to the buffer directly. Eventually the buffer contains all simple data members of all the classes that make up this particular object. Data members that are references (as MyClass &fObj;) are never saved, it is always the responsibility of the object’s constructor to set them properly.; 11.3.1 Automatically Generated Streamers; A Streamerusually calls other Streamers: the Streamerof its parents and data members. This architecture depends on all classes having Streamers, because eventually they will be called. To ensure that a class has a Streamer, rootcling automatically creates one in the ClassDef macro that is defined in $ROOTSYS/include/Rtypes.h. ClassDef defines several methods for any class, and one of them is the Streamer. The automatically generated Streameris complete and can be used as long as no customization is needed.; The Event class is defined in $ROOTSYS/test/Event.h. Looking at the class definition, we find that it inherits from TObject. It is a simple example of a class with diverse data members.; class Event : public TObject {; private:; TDirectory *fTransient; //! current directory; Float_t fPt; //! transient value; char fType[20];; Int_t fNtrack;; Int_t fNseg;; Int_t fNvertex;; UInt_t fFlag;; Float_t fTemperature;; EventHeader fEvtHdr; //|| don't split; TClonesArray *fTracks; //->; TH1F *fH; //->; Int_t fMeasures[10];; Float_t fMatrix[4][4];; Float_t *fClosestDistance; //[fNvertex]; ...; The Event class is added to the dictionary by the rootcling utility. This is the rootcling statement in the $ROOTSYS/test/Makefile:; @rootcling -f EventDict.cxx -c Event.h EventLinkDef.h; The EventDict.cxx file contains the automatically generated Streamerfor Event:; void Event::Streamer(TBuffer &R__b){; // Stream an object of class Event.; if (R__b.IsReading()) {; Event::Class()->ReadBuffer(R__b, this);; } else {; Event::Class()->WriteBuffer(R__b, this);; }; }; When writing an Event object, TCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:467742,inherit,inherits,467742,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"n integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyrho1; RooRealProxyrho2; RooRealProxysigp; RooRealProxyx; RooRealProxyxi.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooBukinPdf.html:38443,config,configuration,38443,root/html526/RooBukinPdf.html,https://root.cern,https://root.cern/root/html526/RooBukinPdf.html,1,['config'],['configuration']
Modifiability,"n into dest spectrum. Function parameters:; source-pointer to the vector of source spectrum, its length should; be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; transform. These need 2*size length to supply real and; imaginary coefficients.; destVector-pointer to the vector of dest data, its length should be; size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; need 2*size length to store real and imaginary coefficients. . Example of enhancement;  ; Function:; void TSpectrumTransform::Enhance(const double *fSource,; double; *fDest);  ; This function transforms the; source spectrum (for details see Transform function). Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter functions.; The Enhance function multiplies transformed coefficients in the given region; (fXmin, fXmax) by the given fEnhancCoeff and transforms it back. Enhanced data; are written into dest spectrum.;  ; Example� � script Enhance.c:.  ; Fig. 1 Original spectrum (black; line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024; were multiplied by 2) ;  ; Script:;  ; // Example to illustrate; Enhance function (class TSpectrumTransform).; // To execute this example,; do; // root > .x Enhance.C;  ; void Enhance() {; �� Int_t i;; �� Double_t nbins =; 4096;; �� Double_t xmin� =; 0;; �� Double_t xmax� =; (Double_t)nbins;; �� Double_t * source = new Double_t[nbins];; �� Double_t * dest = new; Double_t[nbins];�� ; �� TH1F *h = new; TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; �� TH1F *d = new; TH1F(""d"","""",nbins,xmin,xmax);�������� ; �� TFile *f = new; TFile(""spectra\\TSpectrum.root"");; �� h=(TH1F*); f->Get(""transform1;1"");�� ; �� for (i = 0; i < nbins;; i++) source[i]=h->GetBinContent(i + 1);���� ; �� TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; �� if (!Transform1); Transform1 = new; TCanvas(""Tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:21560,Enhance,Enhanced,21560,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,2,['Enhance'],['Enhanced']
Modifiability,"n is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TClass * fClass;  ! This is the class of the data pointed to ;  ; TString fClassName;  ; TFormLeafInfo * fCounter;  ; TStreamerElement * fElement;  ! Descriptor of the data pointed to. ;  ; TString fElementName;  ; TFormLeafInfo * fNext;  follow this to grab the inside information ;  ; Longptr_t fOffset;  ! Offset of the data pointed inside the class fClass ;  . Protected Attributes; Int_t fMultiplicity;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormLeafInfo.html:14546,inherit,inherited,14546,doc/master/classTFormLeafInfo.html,https://root.cern,https://root.cern/doc/master/classTFormLeafInfo.html,1,['inherit'],['inherited']
Modifiability,"n is no-op). ;  ; void Print (Option_t *option="""") const override;  This method must be overridden when a class wants to print itself. ;  ; Bool_t Process (Long64_t entry) override;  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; void SetInputList (TList *input) override;  ; void SetObject (TObject *obj) override;  ; void SetOption (const char *option) override;  ; void SlaveBegin (TTree *tree) override;  The SlaveBegin() function is called after the Begin() function. ;  ; void SlaveTerminate () override;  The SlaveTerminate() function is called after all entries or objects have been processed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  The Terminate() function is the last function to be called during a query. ;  ; Int_t Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetStatus (Long64_t status);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelEventGen.html:2062,inherit,inherited,2062,doc/master/classTSelEventGen.html,https://root.cern,https://root.cern/doc/master/classTSelEventGen.html,1,['inherit'],['inherited']
Modifiability,"n itself ;  CTCollectionPropertyBrowsableA tiny browser helper object (and its generator) for adding a virtual (as in ""not actually part of the class"", not in C++ virtual) ""@size()"" method to a collection ;  CTCollectionProxyFactoryTCollectionProxyFactory Interface to collection proxy and streamer generator ;  CTCollectionStreamerClass streamer object to implement TClassStreamer functionality for I/O emulation ;  CTColorThe color creation and management class ;  ►CTColorGradientTColorGradient extends basic TColor ;  CPoint;  CTColorWheelDraw the ROOT Color Wheel ;  CTColumnView;  CTComplex;  CTCondition;  CTConditionImp;  CTCondor;  CTCondorSlave;  CTCONEA conical tube ;  CTConfidenceLevelClass to compute 95% CL limits ;  CTCONSA segment of a conical tube ;  CTContextMenuThis class provides an interface to context sensitive popup menus ;  CTContextMenuImpThis class provides an interface to GUI independent context sensitive popup menus ;  CTControlBarA Control Bar is a fully user configurable tool which provides fast access to frequently used operations ;  CTControlBarButtonCreated by the TControlBar ;  CTControlBarImpABC describing GUI independent control bar ;  CTConvertClonesArrayToProxySmall helper to read a TBuffer containing a TClonesArray into any valid collection ;  CTConvertMapToProxy;  CTCreatePrimitivesCreates new primitives ;  CTCrownTo draw a Crown ;  CTCTUBA cut tube with 11 parameters ;  CTCurlyArcImplements curly or wavy arcs used to draw Feynman diagrams ;  CTCurlyArcEditor;  CTCurlyLineImplements curly or wavy polylines used to draw Feynman diagrams ;  CTCurlyLineEditor;  CTCutA specialized string object used for TTree selections ;  CTCutGGraphical cut class ;  CTDatabasePDG;  CTDataMemberAll ROOT classes may have RTTI (run time type identification) support added ;  CTDataSet;  CTDataSetIter;  CTDataSetManager;  CTDataSetManagerAliEn;  CTDataSetManagerFile;  CTDataTypeBasic data type descriptor (datatype information is obtained from CINT) ;  CTDatime",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:95255,config,configurable,95255,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['config'],['configurable']
Modifiability,"n itself ;  CTCollectionPropertyBrowsableA tiny browser helper object (and its generator) for adding a virtual (as in ""not actually part of the class"", not in C++ virtual) ""@size()"" method to a collection ;  CTCollectionProxyFactoryTCollectionProxyFactory Interface to collection proxy and streamer generator ;  CTCollectionStreamerClass streamer object to implement TClassStreamer functionality for I/O emulation ;  CTColorThe color creation and management class ;  ►CTColorGradientTColorGradient extends basic TColor ;  CPoint;  CTColorWheelDraw the ROOT Color Wheel ;  CTColumnView;  CTComplex;  CTCondition;  CTConditionImp;  CTCondor;  CTCondorSlave;  CTCONEA conical tube ;  CTConfidenceLevelClass to compute 95% CL limits ;  CTCONSA segment of a conical tube ;  CTContextMenuThis class provides an interface to context sensitive popup menus ;  CTContextMenuImpThis class provides an interface to GUI independent context sensitive popup menus ;  CTControlBarA Control Bar is a fully user configurable tool which provides fast access to frequently used operations ;  CTControlBarButtonThis class defines the control bar buttons ;  CTControlBarImpABC describing GUI independent control bar ;  CTConvertClonesArrayToProxySmall helper to read a TBuffer containing a TClonesArray into any valid collection ;  CTConvertMapToProxy;  CTCreatePrimitivesCreates new primitives ;  CTCrownTo draw a Crown ;  CTCTUBA cut tube with 11 parameters ;  CTCurlyArcImplements curly or wavy arcs used to draw Feynman diagrams ;  CTCurlyArcEditor;  CTCurlyLineImplements curly or wavy polylines used to draw Feynman diagrams ;  CTCurlyLineEditor;  CTCutA specialized string object used for TTree selections ;  CTCutGGraphical cut class ;  CTDatabasePDGParticle database manager class ;  CTDataMemberAll ROOT classes may have RTTI (run time type identification) support added ;  CTDataSet;  CTDataSetIter;  CTDataSetManager;  CTDataSetManagerAliEn;  CTDataSetManagerFile;  CTDataTypeBasic data type descriptor (datatyp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:117697,config,configurable,117697,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,5,['config'],['configurable']
Modifiability,"n level and algorithm; TTimeStampTSocket::fLastUsageTime stamp of last usage; TVirtualMutex*TSocket::fLastUsageMtxProtect last usage setting / reading; TInetAddressTSocket::fLocalAddresslocal internet address and port #; TStringTNamed::fNameobject identifier; Int_tTSocket::fRemoteProtocolprotocol of remote daemon; TSecContext*TSocket::fSecContextafter a successful Authenticate call; TSocket::EServiceTypeTSocket::fServTyperemote service type; TStringTSocket::fServicename of service (matches remote port #); Int_tTSocket::fSocketsocket descriptor; Int_tTSocket::fTcpWindowSizeTCP window size (default 65535);; TStringTNamed::fTitleobject title; TList*TSocket::fUUIDslist of TProcessIDs already sent through the socket; TStringTSocket::fUrlneeds this for special authentication options; static ULong64_tTSocket::fgBytesRecvtotal bytes received by all socket objects; static ULong64_tTSocket::fgBytesSenttotal bytes sent by all socket objects; static Int_tTSocket::fgClientProtocolclient ""protocol"" version. private:. list<Int_t>fClientIDs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXUnixSocket(const char* u, Int_t psid = -1, Char_t ver = -1, TXHandler* handler = 0, int fd = -1); Constructor. Int_t Reconnect(); Try reconnection after failure. virtual ~TXUnixSocket(); { fSessionID = -1; }. Int_t GetClientID() const; { return (fClientIDs.size() > 0) ? fClientIDs.front() : -1; }. Int_t GetClientIDSize() const; { return fClientIDs.size(); }. void RemoveClientID(); { if (fClientIDs.size() > 1) fClientIDs.pop_front(); }. void SetClientID(Int_t cid); { fClientIDs.push_front(cid); }. » Author: G. Ganis Oct 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id: TXUnixSocket.h 38922 2011-04-19 13:15:05Z ganis $ » Last generated: 2011-12-02 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXUnixSocket.html:11282,Inherit,Inheritance,11282,root/html532/TXUnixSocket.html,https://root.cern,https://root.cern/root/html532/TXUnixSocket.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n loss: 0.436; [8] val loss: 0.758; [9, 4] train loss: 0.381; [9, 8] train loss: 0.435; [9, 12] train loss: 0.456; [9] val loss: 1.218; [10, 4] train loss: 0.438; [10, 8] train loss: 0.436; [10, 12] train loss: 0.444; [10] val loss: 0.632; Finished Training on 10 Epochs!; running Torch code defining the model....; The PyTorch CNN model is created and saved as PyTorchModelCNN.pt; : Loaded pytorch train function: ; : Loaded pytorch optimizer: ; : Loaded pytorch loss function: ; : Loaded pytorch predict function: ; : Loaded model from file: PyTorchTrainedModelCNN.pt; PyTorch : [dataset] : Evaluation of PyTorch on testing sample (400 events); : Elapsed time for evaluation of 400 events: 0.12 sec ; Factory : ␛[1mEvaluate all methods␛[0m; Factory : Evaluate classifier: BDT; : ; BDT : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 256 , it is larger than 200; Factory : Evaluate classifier: TMVA_DNN_CPU; : ; TMVA_DNN_CPU : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 256 , it is larger than 200; Factory : Evaluate classifier: TMVA_CNN_CPU; : ; TMVA_CNN_CPU : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 256 , it is larger than 200; Factory : Evaluate classifier: PyKeras; : ; PyKeras : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 256 , it is larger than 200; Factory : Evaluate classifier: PyTorch; : ; PyTorch : [dataset] : Loop over test events a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:41675,variab,variable,41675,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,2,['variab'],"['variable', 'variables']"
Modifiability,"n mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; TIterator*_paramIter! Iterator over paramSet; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_t_positiveDefiniteprotect against negative and 0 bins.; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*high",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/PiecewiseInterpolation.html:32985,config,configuration,32985,root/html530/PiecewiseInterpolation.html,https://root.cern,https://root.cern/root/html530/PiecewiseInterpolation.html,1,['config'],['configuration']
Modifiability,"n multi-line collection printing to given amount. ;  . Protected Member Functions; CatVector * addCategory (RooAbsCategory *cat);  ; RealVector * addReal (RooAbsReal *real);  ; RealFullVector * addRealFull (RooAbsReal *real);  ; void forceCacheUpdate () override;  ; bool hasAsymError (RooAbsReal *real);  ; bool hasError (RooAbsReal *real);  ; bool hasFilledCache () const override;  ; bool isFullReal (RooAbsReal *real);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void reserve (Int_t nEvt);  ; void setAllBuffersNative ();  ; RooArgSet varsNoWeight (const RooArgSet &allVars, const char *wgtName);  Utility function for constructors Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. ;  ; RooRealVar * weightVar (const RooArgSet &allVars, const char *wgtName);  Utility function for constructors Return pointer to weight variable if it is defined. ;  . Private Attributes; RooVectorDataStore * _cache = nullptr;  ! Optimization cache ;  ; RooAbsArg * _cacheOwner = nullptr;  ! Cache owner ;  ; std::vector< CatVector * > _catStoreList;  ; ULong64_t _currentWeightIndex {0};  ; const double * _extSumW2Array = nullptr;  ! External sum of weights array ;  ; const double * _extWgtArray = nullptr;  ! External weight array ;  ; const double * _extWgtErrHiArray = nullptr;  ! External weight array - high error ;  ; const double * _extWgtErrLoArray = nullptr;  ! External weight array - low error ;  ; bool _forcedUpdate = false;  ! Request for forced cache update ;  ; std::vector< RealFullVector * > _realfStoreList;  ; std::vector< RealVector * > _realStoreList;  ; double _sumWeight = 0.0;  ; double _sumWeightCarry = 0.0;  ; RooArgSet _varsww;  ; RooRealVar * _wgtVar = nullptr;  Pointer to weight variable (if set) ;  . Friends; class RooAbsCategory;  ; class Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVectorDataStore.html:20179,variab,variable,20179,doc/master/classRooVectorDataStore.html,https://root.cern,https://root.cern/doc/master/classRooVectorDataStore.html,1,['variab'],['variable']
Modifiability,"n must cast the returned object to; the final type, eg; MyClass *obj = (MyClass*)directory->GetObject(""some object of MyClass"");. void * GetObjectChecked(const char* namecycle, const char* classname); See documentation of TDirectoryFile::GetObjectCheck(const char *namecycle, const TClass *cl). void * GetObjectChecked(const char* namecycle, const TClass* cl); return pointer to object identified by namecycle if and only if the actual; object is a type suitable to be stored as a pointer to a ""expectedClass""; If expectedClass is null, no check is performed. namecycle has the format name;cycle; name = * is illegal, cycle = * is illegal; cycle = """" or cycle = 9999 ==> apply to a memory object. VERY IMPORTANT NOTE:; The calling application must cast the returned pointer to; the type described by the 2 arguments (i.e. cl):; MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));. Note: We recommend using the method TDirectoryFile::GetObject:; MyClass *obj = 0;; directory->GetObject(""some object inheriting from MyClass"",obj);; if (obj) { ... we found what we are looking for ... }. Int_t GetBufferSize() const; Return the buffer size to create new TKeys.; If the stored fBufferSize is null, the value returned is the average; buffer size of objects in the file so far. TKey * GetKey(const char* name, Short_t cycle = 9999) const; -*-*-*Return pointer to key with name,cycle; *-* =====================================; if cycle = 9999 returns highest cycle. void ls(Option_t* option = """") const; List Directory contents*-*-; *-* =======================; Indentation is used to identify the directory tree; Subdirectories are listed first, then objects in memory, then objects on the file. The option can has the following format:; [-d |-m][<regexp>]; Option -d means: only list objects in the file; -m means: only list objects in memory; The <regexp> will be used to match the name of the objects.; By default memory and disk objects are listed. TFile * OpenF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDirectoryFile.html:18726,inherit,inheriting,18726,root/html528/TDirectoryFile.html,https://root.cern,https://root.cern/root/html528/TDirectoryFile.html,10,['inherit'],['inheriting']
Modifiability,"n nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxy_stateProxy to hiding state category; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsHiddenReal.html:31807,config,configuration,31807,root/html526/RooAbsHiddenReal.html,https://root.cern,https://root.cern/root/html526/RooAbsHiddenReal.html,2,['config'],['configuration']
Modifiability,"n not be used anymore. ;  ; void RefreshClassInfo (TClass *cl, const clang::NamedDecl *def, bool alias);  Internal function. Actually do the update of the ClassInfo when seeing. ;  ; void RegisterModule (const char *modulename, const char **headers, const char **includePaths, const char *payloadCode, const char *fwdDeclsCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, Bool_t lateRegistration=false, Bool_t hasCxxModule=false) final;  Inject the module named ""modulename"" into cling; load all headers. ;  ; bool RegisterPrebuiltModulePath (const std::string &FullPath, const std::string &ModuleMapName=""module.modulemap"") const final;  ; void RegisterTClassUpdate (TClass *oldcl, DictFuncPtr_t dict) final;  Register classes that already existed prior to their dictionary loading and that already had a ClassInfo (and thus would not be refresh via UpdateClassInfo. ;  ; void RegisterTemporary (const cling::Value &value);  Register value as a temporary, extending its lifetime to that of the interpreter. ;  ; void RegisterTemporary (const TInterpreterValue &value);  ; Int_t ReloadAllSharedLibraryMaps () final;  Reload the library map entries coming from all the loaded shared libraries, after first unloading the current ones. ;  ; void ReportDiagnosticsToErrorHandler (bool enable=true) final;  Report diagnostics to the ROOT error handler (see TError.h). ;  ; Int_t RescanLibraryMap () final;  Scan again along the dynamic path for library maps. ;  ; void Reset () final;  Pressing Ctrl+C should forward here. ;  ; void ResetAll () final;  Reset the Cling state to its initial state. ;  ; void ResetGlobals () final;  Reset in Cling the list of global variables to the state saved by the last call to TCling::SaveGlobalsContext(). ;  ; void ResetGlobalVar (void *obj) final;  Reset the Cling 'user' global objects/variables state to the state saved by the last call to TCling::SaveGlobalsContext(). ;  ; void RewindDictionary () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:28575,extend,extending,28575,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['extend'],['extending']
Modifiability,"n observableOverlaps(depList, testArg);  ;  Protected Types inherited from RooAbsCachedReal; using CacheElem = FuncCacheElem;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCachedReal.h>. Inheritance diagram for RooCachedReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCachedReal() [1/4]. RooCachedReal::RooCachedReal ; (; ). inline . Definition at line 22 of file RooCachedReal.h. ◆ RooCachedReal() [2/4]. RooCachedReal::RooCachedReal ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _func, . const RooArgSet & ; cacheObs . ). Constructor taking name, title and function to be cached and fixed choice of variable to cache. ; To control granularity of the binning of the cache histogram set the desired properties in the binning named ""cache"" in the observables of the function. If the fixed set of cache observables does not match the observables defined in the use context of the p.d.f the cache is still filled completely. Ee.g. when it is specified to cache x and p and only x is a observabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:63015,inherit,inherited,63015,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['inherit'],['inherited']
Modifiability,"n observableOverlaps(depList, testArg);  ;  Protected Types inherited from RooAbsCachedReal; using CacheElem = FuncCacheElem;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooNumRunningInt.h>. Inheritance diagram for RooNumRunningInt:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooNumRunningInt() [1/2]. RooNumRunningInt::RooNumRunningInt ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _func, . RooRealVar & ; _x, . const char * ; bname = ""cache"" . ). Construct running integral of function '_func' over x_print from the lower bound on _x to the present value of _x using a numeric sampling technique. ; The sampling frequency is controlled by the binning named 'bname' and a default second order interpolation is applied to smooth the histogram-based c.d.f. ; Definition at line 51 of file RooNumRunningInt.cxx. ◆ RooNumRunningInt() [2/2]. RooNumRunningInt::RooNumRunningInt ; (; const RooNumRunningInt & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 66 of fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumRunningInt.html:62889,inherit,inherited,62889,doc/master/classRooNumRunningInt.html,https://root.cern,https://root.cern/doc/master/classRooNumRunningInt.html,1,['inherit'],['inherited']
Modifiability,"n of RooAbsReal::createProjection that deals with projections of projections. ; Instead of integrating twice, a new RooProjectedPdf is returned that is configured to perform the complete integration in one step ; Reimplemented from RooAbsPdf.; Definition at line 145 of file RooProjectedPdf.cxx. ◆ DeclFileName(). static const char * RooProjectedPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 73 of file RooProjectedPdf.h. ◆ evaluate(). double RooProjectedPdf::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate projected p.d.f. ; Implements RooAbsReal.; Reimplemented in xRooProjectedPdf.; Definition at line 94 of file RooProjectedPdf.cxx. ◆ expectedEvents(). double RooProjectedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooAbsPdf.; Reimplemented in xRooProjectedPdf.; Definition at line 46 of file RooProjectedPdf.h. ◆ extendMode(). ExtendMode RooProjectedPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Reimplemented in xRooProjectedPdf.; Definition at line 47 of file RooProjectedPdf.h. ◆ forceAnalyticalInt(). bool RooProjectedPdf::forceAnalyticalInt ; (; const RooAbsArg & ; dep); const. overridevirtual . Force RooRealIntegral to relegate integration of all observables to internal logic. ; Reimplemented from RooAbsReal.; Definition at line 157 of file RooProjectedPdf.cxx. ◆ getAnalyticalIntegralWN(). Int_t RooProjectedPdf::getAnalyticalIntegralWN ; (; RooArgSet & ; allVars, . RooArgSet & ; analVar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:77650,extend,extended,77650,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['extend'],['extended']
Modifiability,"n of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the Y axis, followed by a third rotation of an angle psi (roll) about the X axis. More...;  ; struct  RowOffsets;  Static structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix. More...;  ; class  SDeterminant;  Dsfact. More...;  ; class  SinVariableTransformation;  Sin Transformation class for dealing with double bounded variables. More...;  ; class  SInverter;  Dsinv. More...;  ; struct  SkipFunction;  ; struct  SkipFunction< 0 >;  ; class  SMatrix;  SMatrix: a generic fixed size D1 x D2 Matrix class. More...;  ; struct  SMatrixIdentity;  ; struct  SMatrixNoInit;  ; class  Sqr;  Unary Square Operation Class. More...;  ; class  Sqrt;  Unary Square Root Operation Class. More...;  ; class  SqrtLowVariableTransformation;  Sqrt Transformation class for dealing with lower bounded variables. More...;  ; class  SqrtUpVariableTransformation;  Sqrt Transformation class for dealing with upper bounded variables. More...;  ; class  StdEngine;  Class to wrap engines from the C++ standard random library in the ROOT Random interface. More...;  ; struct  StdEngineType;  ; struct  StdEngineType< std::knuth_b >;  ; struct  StdEngineType< std::minstd_rand >;  ; struct  StdEngineType< std::mt19937 >;  ; struct  StdEngineType< std::mt19937_64 >;  ; struct  StdEngineType< std::random_device >;  ; struct  StdEngineType< std::ranlux24 >;  ; struct  StdEngineType< std::ranlux48 >;  ; class  StdRandomEngine;  ; class  SVector;  SVector: a generic fixed size Vector class. More...;  ; class  TDataPoint;  ; class  TDataPointN;  ; class  TensorMulOp;  Class for Tensor Multiplication (outer product) of two vectors giving a matrix. More...;  ; class  TRandomEngine;  ; class  TransposeOp;  Class for Transpose Operations. More...;  ; struct  TranspPolicy;  matrix transpose policy More...;  ; struct  TranspPolicy< T, D1, D2, MatRepSym< T, D1 > >;  ; class  Unary",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:30714,variab,variables,30714,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,2,['variab'],['variables']
Modifiability,"n of an event using the algorithm corresponding to the specified code. ;  ; virtual RooFit::OwningPtr< RooDataSet > generateSimGlobal (const RooArgSet &whatVars, Int_t nEvents);  Special generator interface for generation of 'global observables' – for RooStats tools. ;  ; RooArgSet * getAllConstraints (const RooArgSet &observables, RooArgSet &constrainedParams, bool stripDisconnected=true, bool removeConstraintsFromPdf=false) const;  This helper function finds and collects all constraints terms of all component p.d.f.s and returns a RooArgSet with all those terms. ;  ; virtual RooArgSet * getConstraints (const RooArgSet &, RooArgSet &, bool, bool=false) const;  ; virtual Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitOK=true) const;  Load generatedVars with the subset of directVars that we can generate events for, and return a code that specifies the generator algorithm we will use. ;  ; const RooNumGenConfig * getGeneratorConfig () const;  Return the numeric MC generator configuration used for this object. ;  ; void getLogProbabilities (std::span< const double > pdfValues, double *output) const;  ; virtual double getLogVal (const RooArgSet *set=nullptr) const;  Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ;  ; double getNorm (const RooArgSet &nset) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; virtual double getNorm (const RooArgSet *set=nullptr) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; const RooAbsReal * getNormIntegral (const RooArgSet &nset) const;  ; virtual const RooAbsReal * getNormObj (const RooArgSet *set, const RooArgSet *iset, const TNamed *rangeName=nullptr) const;  Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over obser",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:13108,config,configuration,13108,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['config'],['configuration']
Modifiability,"n of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TSQLFile (const TSQLFile &)=delete;  ; void operator= (const TSQLFile &)=delete;  . Friends; class TBufferSQL2;  ; class TKeySQL;  ; class TSqlCmdsBuffer;  ; class TSqlRawBuffer;  ; class TSqlRegistry;  ; class TSQLStructure;  ; class TSQLTableData;  . Additional Inherited Members;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TFile; static TList * fgAsyncOpenRequests = nullptr;  ; static std::atomic< Long64_t > fgBytesRead {0};  Number of bytes read by all TFile objects. ;  ; static std::atomic< Long64_t > fgBytesWrite {0};  Number of bytes written by all TFile objects. ;  ; static TString fgCacheFileDir;  Directory where to locally stage files. ;  ; static Bool_t fgCacheFileDisconnected = kTRUE;  Indicates, we trust in the files in the cache dir without stat on the cached file. ;  ; static Bool_t fgCacheFileForce = kFALSE;  Indicates, to force all READ to CACHEREAD. ;  ; static std::atomic< Long64_t > fgFileCounter {0};  Counter for all opened files. ;  ; static Bool_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:57791,inherit,inherited,57791,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['inherit'],['inherited']
Modifiability,"n of signals; UInt_tfTHeightheight of tab text; UInt_tfTWidthwidth of tab text; TGString*fTexttext on tab; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTabElement(const TGWindow* p = 0, TGString* text = 0, UInt_t w = 1, UInt_t h = 1, GContext_t norm = TGTab::GetDefaultGC()(), FontStruct_t font = TGTab::GetDefaultFontStruct(), UInt_t options = kRaisedFrame, Pixel_t back = GetDefaultFrameBackground()); Create a tab element. Text is adopted by tab element. ~TGTabElement(); Delete tab element. void DrawBorder(); Draw little tab element. Bool_t HandleButton(Event_t* event); Handle button event in the tab widget. Basically we only handle; button events in the small tabs. TGDimension GetDefaultSize() const; Return default size of tab element. void SetText(TGString* text); Set new tab text. void ShowClose(Bool_t on = kTRUE); Show/hide close icon on the tab element, then apply layout; to compute correct elements size. TGTabLayout& operator=(const TGTabElement& ). void SetEnabled(Int_t tabIndex, Bool_t on = kTRUE). Bool_t IsEnabled(Int_t tabIndex). TGTabElement(const TGTabElement& ). const TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTabElement.html:17864,Inherit,Inheritance,17864,root/html532/TGTabElement.html,https://root.cern,https://root.cern/root/html532/TGTabElement.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,n of the background only channels.; If no background channel is specified a nullptr pointer is returned. The factory owns the object. ; Definition at line 202 of file HLFactory.cxx. ◆ GetTotCategory(). RooCategory * HLFactory::GetTotCategory ; (; ). Get the combined dataset. ; Return the category.; The factory owns the object. ; Definition at line 299 of file HLFactory.cxx. ◆ GetTotDataSet(). RooDataSet * HLFactory::GetTotDataSet ; (; ). Get the combined dataset. ; Return the combination of the datasets.; If no dataset is specified a nullptr pointer is returned. The factory owns the object. ; Definition at line 247 of file HLFactory.cxx. ◆ GetTotSigBkgPdf(). RooAbsPdf * HLFactory::GetTotSigBkgPdf ; (; ). Get the combined signal plus background pdf. ; Return the combination of the signal plus background channels.; The factory owns the object. ; Definition at line 157 of file HLFactory.cxx. ◆ GetWs(). RooWorkspace * RooStats::HLFactory::GetWs ; (; ). inline . Get the RooWorkspace containing the models and variables. ; Definition at line 72 of file HLFactory.h. ◆ IsA(). TClass * RooStats::HLFactory::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 105 of file HLFactory.h. ◆ ProcessCard(). int HLFactory::ProcessCard ; (; const char * ; filename). Process a configuration file. ; Process an additional configuration file. ; Definition at line 316 of file HLFactory.cxx. ◆ Streamer(). void RooStats::HLFactory::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void RooStats::HLFactory::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 105 of file HLFactory.h. Member Data Documentation. ◆ fBkgPdfNames. TList RooStats::HLFactory::fBkgPdfNames. private . List of channels names to combine for the background pdfs. ; Definition at line 97 of file HLFactory.h. ◆ fCombinati,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HLFactory.html:19179,variab,variables,19179,doc/master/classRooStats_1_1HLFactory.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HLFactory.html,1,['variab'],['variables']
Modifiability,"n of the object pointed to.; GetMultiplicity() : Returns info on the variability of the number of elements; GetNdata(TLeaf* leaf) : Returns the number of elements; GetNdata() : Used by GetNdata(TLeaf* leaf); GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; IsString(); ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; Update() : react to the possible loading of a shared library. . Definition at line 58 of file TTreeFormula.h. Classes; struct  RealInstanceCache;  . Public Member Functions;  TTreeFormula ();  ;  TTreeFormula (const char *name, const char *formula, TTree *tree);  Normal TTree Formula Constructor. ;  ;  ~TTreeFormula () override;  Tree Formula default destructor. ;  ; Int_t DefinedVariable (TString &variable, Int_t &action) override;  Check if name is in the list of Tree/Branch leaves. ;  ; virtual TClass * EvalClass () const;  Evaluate the class of this treeformula. ;  ; template<typename T > ; T EvalInstance (Int_t i=0, const char *stringStack[]=nullptr);  Evaluate this treeformula. ;  ; virtual Double_t EvalInstance (Int_t i=0, const char *stringStack[]=nullptr);  Double_t template specialization of EvalInstance. ;  ; virtual Long64_t EvalInstance64 (Int_t i=0, const char *stringStack[]=nullptr);  Long64_t template specialization of EvalInstance. ;  ; virtual LongDouble_t EvalInstanceLD (Int_t i=0, const char *stringStack[]=nullptr);  LongDouble_t template specialization of EvalInstance. ;  ; virtual void * EvalObject (Int_t i=0);  Evaluate this treeformula. ;  ; virtual const char * EvalStringInstance (Int_t i=0);  Eval the instance as a string. ;  ; template<> ; LongDouble_t GetConstant (Int_t k);  ; virtual TLeaf * GetLeaf (Int_t n) const;  Return leaf corresponding to serial number n. ;  ; TFormLea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:2244,variab,variable,2244,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['variab'],['variable']
Modifiability,"n on/off tracking of objects in the TObjectTable. ;  . Private Attributes; TGeoNode const * fNode1 = nullptr;  ; TGeoNode const * fNode2 = nullptr;  ; TGeoOpticalSurface const * fSurface = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGeoOpticalSurface.h>. Inheritance diagram for TGeoBorderSurface:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoBorderSurface() [1/2]. TGeoBorderSurface::TGeoBorderSurface ; (; ). inline . Definition at line 212 of file TGeoOpticalSurface.h. ◆ TGeoBorderSurface() [2/2]. TGeoBorderSurface::TGeoBorderSurface ; (; const char * ; name, . const char * ; ref, . TGeoOpticalSurface const * ; surf, . TGeoNode const * ; node1, . TGeoNode const * ; node2 . ). inline . Definition at line 213 of file TGeoOpticalSurface.h. ◆ ~TGeoBorderSurface(). TGeoBorderSurface::~TGeoBorderSurface ; (; ). inlineoverride . Definition at line 218 of file TGeoOptical",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBorderSurface.html:11248,inherit,inherited,11248,doc/master/classTGeoBorderSurface.html,https://root.cern,https://root.cern/doc/master/classTGeoBorderSurface.html,2,['inherit'],['inherited']
Modifiability,"n on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fA;  ; Int_t fN;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoElement.h>. Inheritance diagram for TGeoIsotope:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoIsotope() [1/2]. TGeoIsotope::TGeoIsotope ; (; ). Dummy I/O constructor. ; Definition at line 336 of file TGeoElement.cxx. ◆ TGeoIsotope() [2/2]. TGeoIsotope::TGeoIsotope ; (; const char * ; name, . Int_t ; z, . Int_t ; n, . Double_t ; a . ). Constructor. ; Definition at line 341 of file TGeoElement.cxx. ◆ ~TGeoIsotope(). TGeoIsotope::~TGeoIsotope ; (; ). inlineoverride . Definition at line 112 of file TGeoElement.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIsotope::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoIsotope::Class_Name ; (; ). static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIsotope.html:11179,inherit,inherited,11179,doc/master/classTGeoIsotope.html,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html,2,['inherit'],['inherited']
Modifiability,"n on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; bool fActive {false};  true when pad is active ;  ; bool fBatchMode {false};  ! if object created for image generation ;  ; bool fHasExecs {false};  if true, more interactive events will be delivered from client ;  ; std::vector< std::unique_ptr< TWebSnapshot > > fPrimitives;  list of all primitives, drawn in the pad ;  ; bool fReadOnly {true};  when canvas or pad are in readonly mode ;  ; bool fSetObjectIds {true};  ! set objects ids ;  ; bool fWithoutPrimitives {false};  true when primitives not send while there are no modifications ;  ;  Protected Attributes inherited from TWebSnapshot; Int_t fKind {0};  kind of snapshots ;  ; std::string fObjectID;  object identifier ;  ; std::string fOption;  object draw option ;  ; Bool_t fOwner {kFALSE};  ! if objected owned ;  ; TObject * fSnapshot {nullptr};  snapshot data ;  . Additional Inherited Members;  Public Types inherited from TWebSnapshot; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TWebSnapshot; void SetKind (Int_t kind);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPadWebSnapshot.html:11221,inherit,inherited,11221,doc/master/classTPadWebSnapshot.html,https://root.cern,https://root.cern/doc/master/classTPadWebSnapshot.html,1,['inherit'],['inherited']
Modifiability,"n on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGGCPool (const TGGCPool &gp);  ; TGGCPool & operator= (const TGGCPool &gp);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void ForceFreeGC (const TGGC *gc);  Force remove graphics context from list. Is only called via ~TGGC(). ;  ; Int_t MatchGC (const TGGC *gc, GCValues_t *values);  Try to find matching graphics context. ;  ; void UpdateGC (TGGC *gc, GCValues_t *values);  Update graphics context with the values spcified in values->fMask. ;  . Private Attributes; THashTable * fList;  . Friends; class TGGC;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  . #include <TGGC.h>. Inheritance diagram for TGGCPool:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGGCPoo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGCPool.html:11106,inherit,inherited,11106,doc/master/classTGGCPool.html,https://root.cern,https://root.cern/doc/master/classTGGCPool.html,1,['inherit'],['inherited']
Modifiability,"n on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TString fCommand;  Command to be executed. ;  ; Int_t fSubTab {0};  Tab element number. ;  ; Int_t fTab {0};  Tab number. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TRootBrowser.h>. Inheritance diagram for TBrowserPlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBrowserPlugin(). TBrowserPlugin::TBrowserPlugin ; (; const char * ; name, . const char * ; cmd = """", . Int_t ; tab = 1, . Int_t ; sub = -1 . ). inline . Definition at line 42 of file TRootBrowser.h. ◆ ~TBrowserPlugin(). TBrowserPlugin::~TBrowserPlugin ; (; ). inlineoverride . Definition at line 45 of file TRootBrowser.h. Member Function Documentation. ◆ Class(). static TClass * TBrowserPlugin::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TBrowserPlugin::Class_Name ; (; ). static . Return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowserPlugin.html:11100,inherit,inherited,11100,doc/master/classTBrowserPlugin.html,https://root.cern,https://root.cern/doc/master/classTBrowserPlugin.html,2,['inherit'],['inherited']
Modifiability,"n on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; double evaluate () const override;  Calculate current value of this object. ;  ;  Protected Member Functions inherited from RooAbsRealLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ; virtual void setValFast (double value);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearVar.html:56892,inherit,inherited,56892,doc/master/classRooLinearVar.html,https://root.cern,https://root.cern/doc/master/classRooLinearVar.html,1,['inherit'],['inherited']
Modifiability,"n one in hp; TProfile *hnew = hp->Rebin(5,""hnew""); // creates a new profile hnew; //merging 5 bins of hp in one bin. NOTE: If ngroup is not an exact divider of the number of bins,; the top limit of the rebinned profile is changed; to the upper edge of the bin=newbins*ngroup and the corresponding; bins are added to the overflow bin.; Statistics will be recomputed from the new bin contents. -case 2 xbins!=0; a new profile is created (you should specify newname).; The parameter ngroup is the number of variable size bins in the created profile; The array xbins must contain ngroup+1 elements that represent the low-edge; of the bins.; The data of the old bins are added to the new bin which contains the bin center; of the old bins. It is possible that information from the old binning are attached; to the under-/overflow bins of the new binning. examples: if hp is an existing TProfile with 100 bins; Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; hp->Rebin(24,""hpnew"",xbins); //creates a new variable bin size profile hpnew. void ExtendAxis(Double_t x, TAxis* axis); Profile histogram is resized along x axis such that x is in the axis range.; The new axis limits are recomputed by doubling iteratively; the current axis range until the specified value x is within the limits.; The algorithm makes a copy of the histogram, then loops on all bins; of the old histogram to fill the extended histogram.; Takes into account errors (Sumw2) if any.; The axis must be extendable before invoking this function.; Ex: h->GetXaxis()->SetCanExtend(kTRUE). void Reset(Option_t* option = """"); -*Reset contents of a Profile histogram; *-* =====================================. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void Scale(Double_t c1 = 1, Option_t* option = """"); *-*-*-*-*Multiply this profile by a constant c1*-*-*-*-*-*-*-*-*; *-* ======================================. this = c1*thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProfile.html:44719,variab,variable,44719,root/html602/TProfile.html,https://root.cern,https://root.cern/root/html602/TProfile.html,4,['variab'],['variable']
Modifiability,"n one in hp; TProfile *hnew = hp->Rebin(5,""hnew""); // creates a new profile hnew; //merging 5 bins of hp in one bin. NOTE: If ngroup is not an exact divider of the number of bins,; the top limit of the rebinned profile is changed; to the upper edge of the bin=newbins*ngroup and the corresponding; bins are added to the overflow bin.; Statistics will be recomputed from the new bin contents. -case 2 xbins!=0; a new profile is created (you should specify newname).; The parameter ngroup is the number of variable size bins in the created profile; The array xbins must contain ngroup+1 elements that represent the low-edge; of the bins.; The data of the old bins are added to the new bin which contains the bin center; of the old bins. It is possible that information from the old binning are attached; to the under-/overflow bins of the new binning. examples: if hp is an existing TProfile with 100 bins; Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; hp->Rebin(24,""hpnew"",xbins); //creates a new variable bin size profile hpnew. void RebinAxis(Double_t x, TAxis* axis); Profile histogram is resized along x axis such that x is in the axis range.; The new axis limits are recomputed by doubling iteratively; the current axis range until the specified value x is within the limits.; The algorithm makes a copy of the histogram, then loops on all bins; of the old histogram to fill the rebinned histogram.; Takes into account errors (Sumw2) if any.; The bit kCanRebin must be set before invoking this function.; Ex: h->SetBit(TH1::kCanRebin);. void Reset(Option_t* option = """"); -*Reset contents of a Profile histogram; *-* =====================================. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void Scale(Double_t c1 = 1, Option_t* option = """"); *-*-*-*-*Multiply this profile by a constant c1*-*-*-*-*-*-*-*-*; *-* ======================================. this = c1*this. This",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile.html:41417,variab,variable,41417,root/html528/TProfile.html,https://root.cern,https://root.cern/root/html528/TProfile.html,6,['variab'],['variable']
Modifiability,"n out stream. ;  ; void SetDefaultWidth (UInt_t w) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTileLayout;  TGTileLayout (TGCompositeFrame *main, Int_t sep=0);  Create a tile layout manager. ;  ; TGDimension GetDefaultSize () const override;  Return default dimension of the tile layout. ;  ; TClass * IsA () const override;  ; Bool_t IsModified () const override;  ; void Layout () override;  Make a tile layout of all frames in the list. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save tile layout manager as a C++ statement(s) on output stream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutManager;  TGLayoutManager ();  ; virtual void SetDefaultHeight (UInt_t);  ; virtual void SetModified (Bool_t flag=kTRUE);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListDetailsLayout.html:1763,inherit,inherited,1763,doc/master/classTGListDetailsLayout.html,https://root.cern,https://root.cern/doc/master/classTGListDetailsLayout.html,2,['inherit'],['inherited']
Modifiability,"n parameter of the Gaussian component. ; sigmaLWidth parameter of the left side of the Gaussian component. ; sigmaRWidth parameter of the right side of the Gaussian component. ; alphaLLocation of transition to a power law on the left, in standard deviations away from the mean. ; nLExponent of power-law tail on the left. ; alphaRLocation of transition to a power law on the right, in standard deviations away from the mean. ; nRExponent of power-law tail on the right. . Definition at line 73 of file RooCrystalBall.cxx. ◆ RooCrystalBall() [3/5]. RooCrystalBall::RooCrystalBall ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . RooAbsReal & ; x0, . RooAbsReal & ; sigmaLR, . RooAbsReal & ; alphaL, . RooAbsReal & ; nL, . RooAbsReal & ; alphaR, . RooAbsReal & ; nR . ). Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like RooDSCBShape). ; Parameters. nameName that identifies the PDF in computations. ; titleTitle for plotting. ; xThe variable of the PDF. ; x0Location parameter of the Gaussian component. ; sigmaLRWidth parameter of the Gaussian component. ; alphaLLocation of transition to a power law on the left, in standard deviations away from the mean. ; nLExponent of power-law tail on the left. ; alphaRLocation of transition to a power law on the right, in standard deviations away from the mean. ; nRExponent of power-law tail on the right. . Definition at line 102 of file RooCrystalBall.cxx. ◆ RooCrystalBall() [4/5]. RooCrystalBall::RooCrystalBall ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . RooAbsReal & ; x0, . RooAbsReal & ; sigmaLR, . RooAbsReal & ; alpha, . RooAbsReal & ; n, . bool ; doubleSided = false . ). Create a crystal ball shape with symmetric Gaussian core and only a tail on one side (just like RooCBShape) or two symmetric tails (like RooSDSCBShape). ; Parameters. nameName that identifies the PDF in computations. ; titleTitle for plotting. ; xThe variable of the PDF. ; x0Location",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCrystalBall.html:76864,variab,variable,76864,doc/master/classRooCrystalBall.html,https://root.cern,https://root.cern/doc/master/classRooCrystalBall.html,1,['variab'],['variable']
Modifiability,"n parameter option. option = ""Q"" Quiet mode (minimum printing); option = ""V"" Verbose mode (default is between Q and V); option = ""E"" Perform better Errors estimation using Minos technique; option = ""M"" More. Improve fit results. You can specify boundary limits for some or all parameters via func->SetParLimits(p_number, parmin, parmax);; if parmin>=parmax, the parameter is fixed; Note that you are not forced to fix the limits for all parameters. For example, if you fit a function with 6 parameters, you can do: func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; func->SetParLimits(4,-10,-4);; func->SetParLimits(5, 1,1);; With this setup:. Parameters 0->3 can vary freely; Parameter 4 has boundaries [-10,-4] with initial value -8; Parameter 5 is fixed to 100. For the fit to be meaningful, the function must be self-normalized.; i.e. It must have the same integral regardless of the parameter settings. Otherwise the fit will effectively just maximize the area.; It is mandatory to have a normalization variable which is fixed for the fit. e.g. TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; f1->SetParameters(1, 3.1, 0.01);; f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TF11-Dim function classDefinition TF1.h:233; TF1::SetParLimitsvirtual void SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax)Set lower and upper limits for parameter ipar.Definition TF1.cxx:3507; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:670; 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; Return status:. The function return the status of the fit in the following form fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; The fitResul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:220832,variab,variable,220832,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,1,['variab'],['variable']
Modifiability,"n parameter option. option = ""Q"" Quiet mode (minimum printing); option = ""V"" Verbose mode (default is between Q and V); option = ""E"" Perform better Errors estimation using Minos technique; option = ""M"" More. Improve fit results. You can specify boundary limits for some or all parameters via func->SetParLimits(p_number, parmin, parmax);; if parmin>=parmax, the parameter is fixed; Note that you are not forced to fix the limits for all parameters. For example, if you fit a function with 6 parameters, you can do: func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; func->SetParLimits(4,-10,-4);; func->SetParLimits(5, 1,1);; With this setup:. Parameters 0->3 can vary freely; Parameter 4 has boundaries [-10,-4] with initial value -8; Parameter 5 is fixed to 100. For the fit to be meaningful, the function must be self-normalized.; i.e. It must have the same integral regardless of the parameter settings. Otherwise the fit will effectively just maximize the area.; It is mandatory to have a normalization variable which is fixed for the fit. e.g. TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; f1->SetParameters(1, 3.1, 0.01);; f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TF11-Dim function classDefinition TF1.h:233; TF1::SetParLimitsvirtual void SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax)Set lower and upper limits for parameter ipar.Definition TF1.cxx:3507; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; Return status:. The function return the status of the fit in the following form fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; The fitResul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree.html:223795,variab,variable,223795,doc/master/classTTree.html,https://root.cern,https://root.cern/doc/master/classTTree.html,1,['variab'],['variable']
Modifiability,"n parameter(s) with given name(s) in category(s) with given names putting remainder fraction formula in state with name ""remainder"" . SplitParamConstrained(var,cat,remainder) Make constrained split in parameter(s) with given name(s) in category(s) with given names putting remainder fraction formula in state with name ""remainder"" . Restrict(catName,stateNameList) Restrict build by only considered listed state names of category with given name. PyROOT; The RooSimWSTool::build() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 173 of file RooSimWSTool.cxx. ◆ executeBuild(). RooSimultaneous * RooSimWSTool::executeBuild ; (; const char * ; simPdfName, . ObjBuildConfig & ; obc, . bool ; verbose = true . ). protected . Internal build driver from validation ObjBuildConfig. ; Definition at line 378 of file RooSimWSTool.cxx. ◆ makeSplitName(). std::string RooSimWSTool::makeSplitName ; (; const RooArgSet & ; splitCatSet). protected . Construct name of composite split. ; Definition at line 612 of file RooSimWSTool.cxx. ◆ validateConfig(). std::unique_ptr< RooSimWSTool::ObjBuildConfig > RooSimWSTool::validateConfig ; (; BuildConfig & ; bc). protected . Validate build configuration. ; If not syntax errors or missing objects are found, return an ObjBuildConfig in which all names are replaced with object pointers. ; Definition at line 206 of file RooSimWSTool.cxx. Member Data Documentation. ◆ _ws. RooWorkspace* RooSimWSTool::_ws. protected . Definition at line 69 of file RooSimWSTool.h. Libraries for RooSimWSTool:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooSimWSTool.h; roofit/roofitcore/src/RooSimWSTool.cxx; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/pyzdoc/_roofit.pyzdoc. RooSimWSTool. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimWSTool.html:8722,config,configuration,8722,doc/master/classRooSimWSTool.html,https://root.cern,https://root.cern/doc/master/classRooSimWSTool.html,1,['config'],['configuration']
Modifiability,"n point belongs to an under-/overflow bin.; See also TH1::GetBin, TAxis::FindBin and TAxis::FindFixBin ; Definition at line 3705 of file TH1.cxx. ◆ FindLastBinAbove(). Int_t TH1::FindLastBinAbove ; (; Double_t ; threshold = 0, . Int_t ; axis = 1, . Int_t ; firstBin = 1, . Int_t ; lastBin = -1 . ); const. virtual . Find last bin with content > threshold for axis (1=x, 2=y, 3=z) if no bins with content > threshold is found the function returns -1. ; The search will occur between the specified first and last bin. Specifying the value of the last bin to search to less than zero will search until the last defined bin. ; Definition at line 3797 of file TH1.cxx. ◆ FindNewAxisLimits(). Bool_t TH1::FindNewAxisLimits ; (; const TAxis * ; axis, . const Double_t ; point, . Double_t & ; newMin, . Double_t & ; newMax . ). protectedvirtual . finds new limits for the axis so that point is within the range and the limits are compatible with the previous ones (see TH1::Merge). ; new limits are put into newMin and newMax variables. axis - axis whose limits are to be recomputed point - point that should fit within the new axis limits newMin - new minimum will be stored here newMax - new maximum will be stored here. false if failed (e.g. if the initial axis limits are wrong or the new range is more than \( 2^{64} \) times the old one). ; Definition at line 6460 of file TH1.cxx. ◆ FindObject() [1/2]. TObject * TH1::FindObject ; (; const char * ; name); const. overridevirtual . Search object named name in the list of functions. ; Reimplemented from TObject.; Definition at line 3857 of file TH1.cxx. ◆ FindObject() [2/2]. TObject * TH1::FindObject ; (; const TObject * ; obj); const. overridevirtual . Search object obj in the list of functions. ; Reimplemented from TObject.; Definition at line 3866 of file TH1.cxx. ◆ Fit() [1/2]. TFitResultPtr TH1::Fit ; (; const char * ; fname, . Option_t * ; option = """", . Option_t * ; goption = """", . Double_t ; xxmin = 0, . Double_t ; xxmax = 0 . ). virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:123055,variab,variables,123055,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variables']
Modifiability,"n pointer to used gradient object function (NULL if gradient is not supported)Definition BasicMinimizer.cxx:325; ROOT::Math::BasicMinimizer::Xconst double * X() const overridereturn pointer to X values at the minimumDefinition BasicMinimizer.h:118; ROOT::Math::IBaseFunctionMultiDimTemplDocumentation for the abstract class IBaseFunctionMultiDim.Definition IFunction.h:61; ROOT::Math::IGradientFunctionMultiDimTemplInterface (abstract class) for multi-dimensional functions providing a gradient calculation.Definition IFunction.h:168; ROOT::Math::IGradientFunctionMultiDimTempl::Gradientvirtual void Gradient(const T *x, T *grad) constEvaluate all the vector of function derivatives (gradient) at a point x.Definition IFunction.h:177; ROOT::Math::Minimizer::Tolerancedouble Tolerance() constabsolute toleranceDefinition Minimizer.h:300; ROOT::Math::Minimizer::MaxIterationsunsigned int MaxIterations() constmax iterationsDefinition Minimizer.h:297; ROOT::Math::Minimizer::PrintLevelint PrintLevel() constminimizer configuration parametersDefinition Minimizer.h:291; ROOT::Math::RMinimizer::HessMatrixdouble HessMatrix(unsigned int i, unsigned int j) constReturns the ith jth component of the Hessian matrix.; ROOT::Math::RMinimizer::fCovMatrixTMatrixD fCovMatrixcovariant matrixDefinition RMinimizer.h:39; ROOT::Math::RMinimizer::fErrorsstd::vector< double > fErrorsvector of parameter errorsDefinition RMinimizer.h:38; ROOT::Math::RMinimizer::Minimizebool Minimize() overrideFunction to find the minimum.Definition RMinimizer.cxx:47; ROOT::Math::RMinimizer::fMethodstd::string fMethodminimizer method to be used, must be of a type listed in R optim or optimx descriptionsDefinition RMinimizer.h:35; ROOT::Math::RMinimizer::NCallsunsigned int NCalls() const overrideReturns the number of function calls.Definition RMinimizer.cxx:44; ROOT::Math::RMinimizer::CovMatrixdouble CovMatrix(unsigned int ivar, unsigned int jvar) const overridereturn covariance matrices element for variables ivar,jvar if the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RMinimizer_8cxx_source.html:9227,config,configuration,9227,doc/master/RMinimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RMinimizer_8cxx_source.html,1,['config'],['configuration']
Modifiability,"n range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooListProxy_x; Double_t_z; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMultiVarGaussian.html:40270,config,configuration,40270,root/html530/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html530/RooMultiVarGaussian.html,2,['config'],['configuration']
Modifiability,"n range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; TF1*func; RooListProxylist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooTFnPdfBinding.html:39238,config,configuration,39238,root/html530/RooTFnPdfBinding.html,https://root.cern,https://root.cern/root/html530/RooTFnPdfBinding.html,2,['config'],['configuration']
Modifiability,"n separate them by ' ' (blank), for instance: ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; Examples: TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; TFile* f3 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; ""TOKEN=AQoDYXdzEM///////////wEa8AHEYmCinjD+TsGEjtgKSMAT6wnY"");; If there is no authentication information in the 'options' argument (i.e. not AUTH=""...."") the values of the environmental variables S3_ACCESS_KEY and S3_SECRET_KEY (if set) are expected to contain the access key id and the secret access key, respectively. You have been provided with these credentials by your S3 service provider.; If neither the AUTH information is provided in the 'options' argument nor the environmental variables are set, we try to open the file without providing any authentication information to the server. This is useful when the file is set an access control that allows for any unidentified user to read the file. ; Definition at line 152 of file TS3WebFile.cxx. ◆ ~TS3WebFile(). virtual TS3WebFile::~TS3WebFile ; (; ). inlinevirtual . Definition at line 93 of file TS3WebFile.h. Member Function Documentation. ◆ Class(). static TClass * TS3WebFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TS3WebFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TS3WebFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 105 of file TS3WebFile.h. ◆ DeclFileName(). static const char * TS3WebFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 105 of file TS3WebFile.h. ◆ GetAccessKey(). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:51174,variab,variables,51174,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['variab'],['variables']
Modifiability,"n set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionMultiDim*funcFunctor; RooListProxyvarsArgument reference; Double_t*xArgument value array.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFunctorPdfBinding.html:40335,config,configuration,40335,root/html532/RooFunctorPdfBinding.html,https://root.cern,https://root.cern/root/html532/RooFunctorPdfBinding.html,2,['config'],['configuration']
Modifiability,"n set with for above integral; TIterator*_obsIter! Iterator over lowSet; RooListProxy_obsSetLow-side variation; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; TIterator*_paramIter! Iterator over paramSet; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooJeffreysPrior.html:44138,config,configuration,44138,root/html602/RooJeffreysPrior.html,https://root.cern,https://root.cern/root/html602/RooJeffreysPrior.html,8,['config'],['configuration']
Modifiability,"n source file; 5159 if (!(sfile = TFile::Open(sURL.GetUrl(), ""READ""))) {; 5160 ::Error(""TFile::Cp"", ""cannot open source file %s"", src);; 5161 } else {; 5162 success = sfile->Cp(dst, progressbar, buffersize);; 5163 }; 5164 ; 5165 if (sfile) {; 5166 sfile->Close();; 5167 delete sfile;; 5168 }; 5169 ; 5170 return success;; 5171}; 5172 ; 5173//______________________________________________________________________________; 5174//The next statement is not active anymore on Linux.; 5175//Using posix_fadvise introduces a performance penalty (10 %) on optimized files; 5176//and in addition it destroys the information of TTreePerfStats; 5177#if defined(R__neverLINUX) && !defined(R__WINGCC); 5178Bool_t TFile::ReadBufferAsync(Long64_t offset, Int_t len); 5179{; 5180 // Read specified byte range asynchronously. Actually we tell the kernel; 5181 // which blocks we are going to read so it can start loading these blocks; 5182 // in the buffer cache.; 5183 ; 5184 // Shortcut to avoid having to implement dummy ReadBufferAsync() in all; 5185 // I/O plugins. Override ReadBufferAsync() in plugins if async is supported.; 5186 if (IsA() != TFile::Class()); 5187 return kTRUE;; 5188 ; 5189 int advice = POSIX_FADV_WILLNEED;; 5190 if (len == 0) {; 5191 // according POSIX spec if len is zero, all data following offset; 5192 // is specified. Nevertheless ROOT uses zero to probe readahead; 5193 // capabilities.; 5194 advice = POSIX_FADV_NORMAL;; 5195 }; 5196 Double_t start = 0;; 5197 if (gPerfStats) start = TTimeStamp();; 5198#if defined(R__SEEK64); 5199 Int_t result = posix_fadvise64(fD, offset, len, advice);; 5200#else; 5201 Int_t result = posix_fadvise(fD, offset, len, advice);; 5202#endif; 5203 if (gPerfStats) {; 5204 gPerfStats->FileReadEvent(this, len, start);; 5205 }; 5206 return (result != 0);; 5207}; 5208#else; 5209Bool_t TFile::ReadBufferAsync(Long64_t, Int_t); 5210{; 5211 // Not supported yet on non Linux systems.; 5212 ; 5213 return kTRUE;; 5214}; 5215#endif; 5216 ; 5217//////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:188599,plugin,plugins,188599,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['plugin'],['plugins']
Modifiability,"n specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:31:31 20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction2PdfBinding_double_unsigned_int_double_.html:45650,Inherit,Inheritance,45650,root/html602/RooCFunction2PdfBinding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction2PdfBinding_double_unsigned_int_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:41:53 201",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction2PdfBinding_double_unsigned_int_double_.html:45650,Inherit,Inheritance,45650,root/html604/RooCFunction2PdfBinding_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction2PdfBinding_double_unsigned_int_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n standard ROOT I/O; auto h1 = (TH1*) f->Get(""histo"");; if (h1!=0) { h1->SetDirectory(0); h1->Draw(); }; auto obj = f->Get(""arr"");; if (obj!=0) obj->Print(""*"");; // close connection to DB; delete f;; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::SetDirectoryvirtual void SetDirectory(TDirectory *dir)By default, when a histogram is created, it is added to the list of histogram objects in the current ...Definition TH1.cxx:8937; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; The ""SQL I/O"" package is currently under development. Any bug reports and suggestions are welcome. Author: S.Linev, GSI Darmstadt, S.Lin.nosp@m.ev@g.nosp@m.si.de ; Definition at line 30 of file TSQLFile.h. Public Types; enum  EIndexesKinds { kIndexesNone = 0; , kIndexesBasic = 1; , kIndexesClass = 2; , kIndexesAll = 3; };  ; enum  ETransactionKinds { kTransactionsOff = 0; , kTransactionsAuto = 1; , kTransactionsUser = 2; };  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:8146,inherit,inherited,8146,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['inherit'],['inherited']
Modifiability,"n string. ;  ; void CreateFunctionGroup ();  Creates the Frame that contains oll the information about the function. ;  ; void CreateGeneralTab ();  Create 'General' tab. ;  ; void CreateMinimizationTab ();  Create 'Minimization' tab. ;  ; void DrawSelection (bool restore=false);  Draws the square around the object showing where the limits for fitting are. ;  ; void FillDataSetList ();  Create a combo box with all the possible objects to be fitted. ;  ; TF1 * FindFunction ();  This method looks among the functions stored by the fitpanel, the one that is currently selected in the fFuncList. ;  ; TF1 * GetFitFunction ();  ; TList * GetFitObjectListOfFunctions ();  ; void GetFunctionsFromSystem ();  ; void GetRanges (ROOT::Fit::DataRange &);  ; TF1 * HasFitFunction ();  Look in the list of function for TF1. ;  ; void MakeTitle (TGCompositeFrame *parent, const char *title);  Create section title in the GUI. ;  ; void ProcessTreeInput (TObject *objSelected, Int_t selected, TString variables, TString cuts);  ; virtual void SetCanvas (TCanvas *c);  Connect to another canvas. ;  ; void SetEditable (Bool_t) override;  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () const;  used in SaveSource() ;  ; TString GetMWMvalueString () const;  used in SaveSource() ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitEditor.html:37744,variab,variables,37744,doc/master/classTFitEditor.html,https://root.cern,https://root.cern/doc/master/classTFitEditor.html,1,['variab'],['variables']
Modifiability,"n style, TString indent="""") constPrint description of object on ostream, printing contents set by contents integer,...Definition RooPrintable.cxx:72; RooProjectedPdfA RooAbsPdf implementation that represent a projection of a given input p.d.f and the object returned...Definition RooProjectedPdf.h:21; RooRandom::integerstatic UInt_t integer(UInt_t max, TRandom *generator=randomGenerator())Return an integer uniformly distributed from [0,n-1].Definition RooRandom.cxx:96; RooRandom::randomGeneratorstatic TRandom * randomGenerator()Return a pointer to a singleton random-number generator implementation.Definition RooRandom.cxx:48; RooRealIntegralPerforms hybrid numerical/analytical integrals of RooAbsReal objects.Definition RooRealIntegral.h:29; RooRealIntegral::numIntRealVarsconst RooArgSet & numIntRealVars() constDefinition RooRealIntegral.h:48; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooRealVar::setBinsvoid setBins(Int_t nBins, const char *name=nullptr)Create a uniform binning under name 'name' for this variable.Definition RooRealVar.cxx:396; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TRandom::Poissonvirtual ULong64_t Poisson(Double_t mean)Generates a random integer N according to a Poisson law.Definition TRandom.cxx:404; TRandom::Uniformvirtual Double_t Uniform(Double_t x1=1)Returns a uniform deviate on the interval (0, x1).Definition TRandom.cxx:682; TRandom::Integervirtual UInt_t Integer(UInt_t imax)Returns a random integer uniformly distributed on the inte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:168608,variab,variable,168608,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['variab'],['variable']
Modifiability,"n term. ;  ; void setDefNormSet (const RooArgSet &nset);  ; void setSelfNormalized (bool flag);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooArgSet &nset=RooArgSet());  Create a cumulative distribution function of this p.d.f in terms of the observables listed in iset. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Construct representation of -log(L) of PDF with given dataset. ;  ; virtual RooAbsPdf * createProjection (const RooArgSet &iset);  Return a p.d.f that represent a projection of this p.d.f integrated over given observables. ;  ; Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:8306,extend,extended,8306,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,1,['extend'],['extended']
Modifiability,"n the MVA value (range [-1;1]) that classifies the; event according to the majority vote from the total number of; decision trees. const std::vector<Float_t>& GetMulticlassValues(); get the multiclass MVA response for the BDT classifier. const std::vector<Float_t> & GetRegressionValues(); get the regression value generated by the BDTs. void WriteMonitoringHistosToFile( void ); Here we could write some histograms created during the processing; to the output file. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); Returns the measure for the variable importance of variable ""ivar""; which is later used in GetVariableImportance() to calculate the; relative variable importances. const TMVA::Ranking* CreateRanking(); Compute ranking of input variables. void GetHelpMessage() const; Get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void MakeClassSpecific(ostream& , const TString& ) const; make ROOT-independent C++ class for classifier response (classifier-specific implementation). void MakeClassSpecificHeader(ostream& , const TString& ) const; specific class header. void MakeClassInstantiateNode(TMVA::DecisionTreeNode* n, ostream& fout, const TString& className) const; recursively descends a tree and writes the node instance to the output streem. const std::vector<TMVA::DecisionTree*>& GetForest() const; { return fForest; }. const std::vector<TMVA::Event*>& GetTrainingEvents() const; { return fEventSample; }. const std::vector<double>& GetBoostWeights() const; { return fBoostWeights; }. void SetMaxDepth(Int_t d); {fMaxDepth = d;}. void SetNodeMinEvents(Int_t d); {fNodeMinEvents = d;}. void SetNTrees(Int_t d); {fNTrees = d;}. voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBDT.html:31368,variab,variables,31368,root/html528/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBDT.html,4,['variab'],['variables']
Modifiability,"n the MVA value (range [-1;1]) that classifies the; event according to the majority vote from the total number of; decision trees. const std::vector<Float_t>& GetMulticlassValues(); get the multiclass MVA response for the BDT classifier. const std::vector<Float_t> & GetRegressionValues(); get the regression value generated by the BDTs. void WriteMonitoringHistosToFile( void ); Here we could write some histograms created during the processing; to the output file. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); Returns the measure for the variable importance of variable ""ivar""; which is later used in GetVariableImportance() to calculate the; relative variable importances. const TMVA::Ranking* CreateRanking(); Compute ranking of input variables. void GetHelpMessage() const; Get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void MakeClassSpecific(ostream& , const TString& ) const; make ROOT-independent C++ class for classifier response (classifier-specific implementation). void MakeClassSpecificHeader(ostream& , const TString& ) const; specific class header. void MakeClassInstantiateNode(TMVA::DecisionTreeNode* n, ostream& fout, const TString& className) const; recursively descends a tree and writes the node instance to the output streem. void DeterminePreselectionCuts(const vector<const TMVA::Event*>& eventSample); find useful preselection cuts that will be applied before; and Decision Tree training.. (and of course also applied; in the GetMVA .. --> -1 for background +1 for Signal; /*. Double_t ApplyPreselectionCuts(const TMVA::Event* ev); aply the preselection cuts before even bothing about any; Decision Trees in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBDT.html:35090,variab,variables,35090,root/html534/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBDT.html,6,['variab'],['variables']
Modifiability,"n the TObjectTable. ;  . Protected Member Functions;  TSecContext (const TSecContext &);  copy constructor ;  ; TSecContext & operator= (const TSecContext &);  assignement operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void Cleanup ();  Cleanup what is still active. ;  ; virtual Bool_t CleanupSecContext (Bool_t all);  Ask remote client to cleanup security context 'ctx' If 'all', all sec context with the same host as ctx are cleaned. ;  . Private Attributes; TList * fCleanup;  ; void * fContext;  ; TDatime fExpDate;  ; TString fHost;  ; TString fID;  ; Int_t fMethod;  ; TString fMethodName;  ; Int_t fOffSet;  ; TString fToken;  ; TString fUser;  . Friends; class TRootSecContext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSecContext.h>. Inheritance diagram for TSecContext:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSecContext() [1/3]. TSecContext::TSecContext ; (; const TSecContext & ; sc). protected . copy constructor ; Definition at line 113 of file TSecConte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSecContext.html:11395,inherit,inherited,11395,doc/master/classTSecContext.html,https://root.cern,https://root.cern/doc/master/classTSecContext.html,1,['inherit'],['inherited']
Modifiability,"n the TObjectTable. ;  . Protected Types; enum  EGeoElement { kElemUsed = (1ULL << ( 17 )); , kElemDefined = (1ULL << ( 18 )); , kElementChecked = (1ULL << ( 19 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Attributes; Double_t fA;  ; Double_t * fAbundances;  ; Double_t fCoulomb;  ; TObjArray * fIsotopes;  ; Int_t fN;  ; Int_t fNisotopes;  ; Double_t fRadTsai;  ; Int_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TGeoElement (const TGeoElement &other)=delete;  ; void ComputeCoulombFactor ();  Compute Coulomb correction factor (Phys Rev. D50 3-1 (1994) page 1254) ;  ; void ComputeLradTsaiFactor ();  Compute Tsai's Expression for the Radiation Length (Phys Rev. D50 3-1 (1994) page 1254) ;  ; TGeoElement & operator= (const TGeoElement &other)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoElement.h>. Inheritance diagram for TGeoElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EGeoElement. enum TGeoElement::E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElement.html:12493,inherit,inherited,12493,doc/master/classTGeoElement.html,https://root.cern,https://root.cern/doc/master/classTGeoElement.html,1,['inherit'],['inherited']
Modifiability,"n the TObjectTable. ;  . Protected Types; enum  { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; virtual void DefVar ()=0;  ; virtual void DoFill (Long64_t entry, Double_t w, const Double_t *v)=0;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Friends; class TProofPlayer;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDraw.html:12246,inherit,inherited,12246,doc/master/classTProofDraw.html,https://root.cern,https://root.cern/doc/master/classTProofDraw.html,1,['inherit'],['inherited']
Modifiability,"n the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void syncCache (const RooArgSet *set=nullptr) override;  Force the internal value cache to be up to date. ;  ;  Protected Member Functions inherited from RooAbsRealLValue; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy cache of another RooAbsArg to our cache. ;  ; bool fitRangeOKForPlotting () const;  Check if fit range is usable as plot range, i.e. ;  ; virtual void setValFast (double value);  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:57482,inherit,inherited,57482,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['inherit'],['inherited']
Modifiability,n the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fVertices [8][3];  ;  Protected Attributes inherited from TEveShape; Bool_t fDrawFrame;  ; Color_t fFillColor;  ; Bool_t fHighlightFrame;  ; Color_t fLineColor;  ; Float_t fLineWidth;  ; Bool_t fMiniFrame;  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass;  ; Color_t fColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protect,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveBox.html:32418,inherit,inherited,32418,doc/master/classTEveBox.html,https://root.cern,https://root.cern/doc/master/classTEveBox.html,3,['inherit'],['inherited']
Modifiability,"n the application a tree is created with all signal and background events where the true class ID and the three classifier outputs are added finally with the application tree, the significance is maximized with the help of the TMVA genetic algrorithm ;  TMVARegression.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVARegressionApplication.C This macro provides a simple example on how to use the trained regression MVAs within an analysis module ;  ► tree;  basic.C Read data from an ascii file and create a root file with an histogram and an ntuple ;  basic2.C Create can ntuple reading data from an ascii file ;  bill.C Benchmark comparing row-wise and column-wise storage performance ;  cernbuild.C Read data (CERN staff) from an ascii file and create a root file with a Tree ;  cernstaff.C Playing with a Tree containing variables of type character ;  circular.C Example of a circular Tree ;  clonesA_Event.CExample to write & read a Tree built with a complex class inheritance tree ;  clonesA_Event.cxx;  clonesA_Event.h;  copytree.C Copy a subset of a Tree to a new Tree ;  copytree2.C Copy a subset of a Tree to a new Tree, one branch in a separate file ;  copytree3.C Example of Root macro to copy a subset of a Tree to a new Tree, selecting entries ;  drawsparse.C Convert a THnSparse to a TTree using efficient iteration through the THnSparse and draw a THnSparse using TParallelCoord ;  h1analysis.C Example of analysis class for the H1 data ;  h1analysis.h;  h1analysisProxy.CExample of analysis class for the H1 data using code generated by MakeProxy ;  h1analysisProxy.h;  h1analysisProxyCut.C;  h1analysisTreeReader.C H1 analysis example expressed in terms of TTreeReader ;  h1analysisTreeReader.h;  h1chain.C Creates a TChain to be used by the h1analysis.C class the symbol H1 must point to a directory where the H1 data sets have been installed ;  hsimpleProxy.C ;  hsimpleProxyDriver.C This is the driver of the hsimpleProxy example It prov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/files.html:167377,inherit,inheritance,167377,doc/v616/files.html,https://root.cern,https://root.cern/doc/v616/files.html,1,['inherit'],['inheritance']
Modifiability,"n the application a tree is created with all signal and background events where the true class ID and the three classifier outputs are added finally with the application tree, the significance is maximized with the help of the TMVA genetic algrorithm ;  TMVARegression.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVARegressionApplication.C This macro provides a simple example on how to use the trained regression MVAs within an analysis module ;  ► tree;  basic.C Read data from an ascii file and create a root file with an histogram and an ntuple ;  basic2.C Create can ntuple reading data from an ascii file ;  bill.C Benchmark comparing row-wise and column-wise storage performance ;  cernbuild.C Read data (CERN staff) from an ascii file and create a root file with a Tree ;  cernstaff.C Playing with a Tree containing variables of type character ;  circular.C Example of a circular Tree ;  clonesA_Event.CExample to write & read a Tree built with a complex class inheritance tree ;  clonesA_Event.cxx;  clonesA_Event.h;  copytree.C Copy a subset of a Tree to a new Tree ;  copytree2.C Copy a subset of a Tree to a new Tree, one branch in a separate file ;  copytree3.C Example of Root macro to copy a subset of a Tree to a new Tree, selecting entries ;  drawsparse.C Convert a THnSparse to a TTree using efficient iteration through the THnSparse and draw a THnSparse using TParallelCoord ;  h1analysis.C Example of analysis class for the H1 data ;  h1analysis.h;  h1analysisProxy.CExample of analysis class for the H1 data using code generated by MakeProxy ;  h1analysisProxy.h;  h1analysisProxyCut.C;  h1analysisTreeReader.C;  h1analysisTreeReader.h;  h1chain.C Creates a TChain to be used by the h1analysis.C class the symbol H1 must point to a directory where the H1 data sets have been installed ;  hsimpleProxy.C ;  hsimpleProxyDriver.C This is the driver of the hsimpleProxy example It provides the infrastructure to run that code on an ntuple T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:155174,inherit,inheritance,155174,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,4,['inherit'],['inheritance']
Modifiability,"n the axis and the axis title. ;  ; virtual void SetTitleSize (Float_t size=0.04);  Set size of axis title. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Member Functions; RooAbsRealLValue * rvar () const;  ; RooAbsLValue * var () const;  . Additional Inherited Members;  Public Types inherited from TAxis; enum  EStatusBits { ;   kDecimals = (1ULL << ( 7 )); , kTickPlus = (1ULL << ( 9 )); , kTickMinus = (1ULL << ( 10 )); , kAxisRange = (1ULL << ( 11 )); , ;   kCenterTitle = (1ULL << ( 12 )); , kCenterLabels = (1ULL << ( 14 )); , kRotateTitle = (1ULL << ( 15 )); , kPalette = (1ULL << ( 16 )); , ;   kNoExponent = (1ULL << ( 17 )); , kLabelsHori = (1ULL << ( 18 )); , kLabelsVert = (1ULL << ( 19 )); , kLabelsDown = (1ULL << ( 20 )); , ;   kLabelsUp = (1ULL << ( 21 )); , kIsInteger = (1ULL << ( 22 )); , kMoreLogLabels = (1ULL << ( 23 )). };  TAxis status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TAxis; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classAxis2.html:18610,inherit,inherited,18610,doc/master/classAxis2.html,https://root.cern,https://root.cern/doc/master/classAxis2.html,1,['inherit'],['inherited']
Modifiability,"n the cache dir without stat on the cached file; static Bool_tTFile::fgCacheFileForceIndicates, to force all READ to CACHEREAD; static atomic<Long64_t>TFile::fgFileCounterCounter for all opened files; static Bool_tTFile::fgOnlyStagedBefore the file is opened, it is checked, that the file is staged, if not, the open fails; static UInt_tTFile::fgOpenTimeoutTimeout for open operations in ms - 0 corresponds to blocking i/o; static atomic<Int_t>TFile::fgReadCallsNumber of bytes read from all TFile objects; static Bool_tTFile::fgReadInfoif true (default) ReadStreamerInfo is called when opening a file; static Int_tTFile::fgReadaheadSizeReadahead buffer size. private:. TArrayC*fClassSentRecord which StreamerInfo we already sent.; TMessagefMessage; Int_tfServerIdxIndex of this socket/file on the server.; TUrlfServerLocationUrl of the server.; Int_tfServerVersionProtocol version used by the server.; TSocket*fSocketSocket to the parallel file merger server. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelMergingFile(const char* filename, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); Constructor.; We do no yet open any connection to the server. This will be done at the; time the first upload will be requested. ~TParallelMergingFile(); Destructor. void Close(Option_t* option = """"). Bool_t UploadAndReset(); Upload the current file data to the merging server.; Reset the file and return true in case of success. Int_t Write(const char* name = 0, Int_t opt = 0, Int_t bufsiz = 0); Write memory objects to this file and upload them to the parallel merge server.; Then reset all the resetable object (those with a ResetAfterMerge routine,; like TTree). Loop on all objects in memory (including subdirectories).; A new key is created in the KEYS linked list for each object.; The list of keys is then saved on the file (via WriteKeys); as a single data record.; For values of opt see TObject::Write().; The directory header",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParallelMergingFile.html:24306,Inherit,Inheritance,24306,root/html602/TParallelMergingFile.html,https://root.cern,https://root.cern/root/html602/TParallelMergingFile.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n the correct leave node. This results in a re-weighed training event sample, with which then a new decision tree can be developed. The boosting can be applied several times (typically 100-500 times) and one ends up with a set of decision trees (a forest). Gradient boosting works more like a function expansion approach, where each tree corresponds to a summand. The parameters for each summand (tree) are determined by the minimization of a error function (binomial log- likelihood for classification and Huber loss for regression). A greedy algorithm is used, which means, that only one tree is modified at a time, while the other trees stay fixed. Bagging:; In this particular variant of the Boosted Decision Trees the boosting is not done on the basis of previous training results, but by a simple stochastic re-sampling of the initial training event sample. Random Trees:; Similar to the ""Random Forests"" from Leo Breiman and Adele Cutler, it uses the bagging algorithm together and bases the determination of the best node-split during the training on a random subset of variables only which is individually chosen for each split. Analysis:; Applying an individual decision tree to a test event results in a classification of the event as either signal or background. For the boosted decision tree selection, an event is successively subjected to the whole set of decision trees and depending on how often it is classified as signal, a ""likelihood"" estimator is constructed for the event being signal or background. The value of this estimator is the one which is then used to select the events from an event sample, and the cut value on this estimator defines the efficiency and purity of the selection. ; Definition at line 63 of file MethodBDT.h. Public Member Functions;  MethodBDT (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  The standard constructor for the ""boosted decision trees"". ;  ;  MethodBDT (DataSetInfo &theData, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:3432,variab,variables,3432,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,1,['variab'],['variables']
Modifiability,"n the current session. ;  ; void OnEnablePackages ();  Enable selected package(s) in the current session. ;  ; void OnMultipleSelection (Bool_t on);  Handle multiple selection check button. ;  ; void OnStartupEnable (Bool_t on);  Handle multiple selection check button. ;  ; void OnUploadPackages ();  Upload selected package(s) to the current session. ;  ; void ProofInfos ();  Display information on current session. ;  ; void SetLocal (Bool_t local=kTRUE);  Switch widgets status/visibility for local/remote sessions. ;  ; void SetLogLevel (Int_t log);  ; void ShutdownSession ();  Shutdown current session. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateListOfDataSets ();  Update list of dataset present on the cluster. ;  ; void UpdatePackages ();  Update list of packages. ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionFrame.html:2848,inherit,inherited,2848,doc/master/classTSessionFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionFrame.html,1,['inherit'],['inherited']
Modifiability,"n the files and fill the meta-information; in the TFileInfo object, including the end-point URL; 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; which is must faster of an TFile::Open); 2 issue a stage request on the files. The int 'ropt' controls which actions are performed:; 0 do the full process: get list of files to process and process them; 1 get the list of files to be scanned and return it in flist; 2 process the files in flist (according to sopt); When defined flist is under the responsability the caller. If avgsz > 0 it is used for the final update of the dataset global counters. If 'mss' is defined use it to initialize the stager (instead of the Url in the; TFileInfo objects). If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2; all files marked as 'staged' are still open or touched). Return code; 1 dataset was not changed; 2 dataset was changed. The number of touched, opened and disappeared files are returned in the respective; variables, if these are defined. Bool_t CheckStagedStatus(TFileInfo* fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager* stager, Bool_t createStager, Bool_t dbg, Bool_t& changed, Bool_t& touched, Bool_t& disappeared); Check stage status of the file described by ""fileInfo"".; fopt is same as ""fopt"" in TDataSetManager::ScanDataSet, which is repeated below:; The int fopt controls which files have to be processed (or added to the list; if ropt is 1 - see below); 'fopt' is defined in term of csopt and fsopt:; fopt = sign(fsopt) * csopt * 100 + fsopt; where 'fsopt' controls the actual selection; -1 all files in the dataset; 0 process only files marked as 'non-staged'; >=1 as 0 but files that are marked 'staged' are open; >=2 as 1 but files that are marked 'staged' are touched; 10 process only files marked as 'staged'; files marked as 'non-staged'; are ignored; and 'csopt' controls if an actual check on the staged status (via TFileStager) is done;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetManager.html:20574,variab,variables,20574,root/html534/TDataSetManager.html,https://root.cern,https://root.cern/root/html534/TDataSetManager.html,6,['variab'],['variables']
Modifiability,"n the files and fill the meta-information; in the TFileInfo object, including the end-point URL; 1 only locate the files, by updating the end-point URL (uses TFileStager::Locate; which is must faster of an TFile::Open); 2 issue a stage request on the files. The int 'ropt' controls which actions are performed:; 0 do the full process: get list of files to process and process them; 1 get the list of files to be scanned and return it in flist; 2 process the files in flist (according to sopt); When defined flist is under the responsability the caller. If avgsz > 0 it is used for the final update of the dataset global counters. If 'mss' is defined use it to initialize the stager (instead of the Url in the; TFileInfo objects). If maxfiles > 0, select for processing a maximum of 'filesmax' files (but if fopt is 1 or 2; all files marked as 'staged' are still open or touched). Return code; 1 dataset was not changed; 2 dataset was changed. The number of touched, opened and disappeared files are returned in the respective; variables, if these are defined. Int_t ScanFile(TFileInfo* fileinfo, Bool_t notify); Open the file described by 'fileinfo' to extract the relevant meta-information.; Return 0 if OK, -2 if the file cannot be open, -1 if it is corrupted. Int_t FillMetaData(TFileInfo* fi, TDirectory* d, const char* rdir = ""/""); Navigate the directory 'd' (and its subdirectories) looking for TTree objects.; Fill in the relevant metadata information in 'fi'. The name of the TFileInfoMeta; metadata entry will be ""/dir1/dir2/.../tree_name"".; Return 0 on success, -1 if any problem happens (object found in keys cannot be read,; for example). TList * ParseDataSetSrvMaps(const TString& srvmaps); Create a server mapping list from the content of 'srvmaps'; Return the list (owned by the caller) or 0 if no valid info could be found). TList * GetDataSetSrvMaps(); Static getter for server mapping list. Bool_t CheckDataSetSrvMaps(TUrl* furl, TString& fn, TList* srvmaplist = 0); Check if the dat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManager.html:20077,variab,variables,20077,root/html528/TDataSetManager.html,https://root.cern,https://root.cern/root/html528/TDataSetManager.html,4,['variab'],['variables']
Modifiability,"n the given volume a maximum number of events can be given ; Definition at line 495 of file BinarySearchTree.cxx. ◆ SetNormalize(). void TMVA::BinarySearchTree::SetNormalize ; (; Bool_t ; norm). inline . Definition at line 135 of file BinarySearchTree.h. ◆ SetPeriode(). void TMVA::BinarySearchTree::SetPeriode ; (; Int_t ; p). inline . Definition at line 97 of file BinarySearchTree.h. ◆ Streamer(). virtual void TMVA::BinarySearchTree::Streamer ; (; TBuffer & ; ). virtual . Reimplemented from TMVA::BinaryTree. ◆ StreamerNVirtual(). void TMVA::BinarySearchTree::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 173 of file BinarySearchTree.h. Member Data Documentation. ◆ fCanNormalize. Bool_t TMVA::BinarySearchTree::fCanNormalize. private . the tree can be normalised ; Definition at line 170 of file BinarySearchTree.h. ◆ fCurrentDepth. UInt_t TMVA::BinarySearchTree::fCurrentDepth. private . internal variable, counting the depth of the tree during insertion ; Definition at line 157 of file BinarySearchTree.h. ◆ fMax. std::vector<Float_t> TMVA::BinarySearchTree::fMax[2]. private . RMS for signal and background for each variable. ; Definition at line 163 of file BinarySearchTree.h. ◆ fMeans. std::vector<Float_t> TMVA::BinarySearchTree::fMeans[2]. private . mean for signal and background for each variable ; Definition at line 160 of file BinarySearchTree.h. ◆ fMin. std::vector<Float_t> TMVA::BinarySearchTree::fMin[2]. private . RMS for signal and background for each variable. ; Definition at line 162 of file BinarySearchTree.h. ◆ fNEventsW. Double_t TMVA::BinarySearchTree::fNEventsW[2]. private . Number of events per class, taking into account event weights. ; Definition at line 166 of file BinarySearchTree.h. ◆ fNormalizeTreeTable. std::vector< std::pair<Double_t,const TMVA::Event*> > TMVA::BinarySearchTree::fNormalizeTreeTable. private . Definition at line 171 of file BinarySearchTree.h. ◆ fPeriod. UInt_t TMVA::BinarySearchTree::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html:16325,variab,variable,16325,doc/master/classTMVA_1_1BinarySearchTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTree.html,1,['variab'],['variable']
Modifiability,"n the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; void DrawPoly (Option_t *options);  Paint the polygon representing the curr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:15417,inherit,inherited,15417,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['inherit'],['inherited']
Modifiability,"n the line width. ;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetLineAttributes ();  Invoke the DialogCanvas Line attributes. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TView * CreateView (Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr);  Create a concrete default 3-d view via the plug-in manager. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Public Types inherited from TObject; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView.html:14662,plug-in,plug-in,14662,doc/master/classTView.html,https://root.cern,https://root.cern/doc/master/classTView.html,1,['plug-in'],['plug-in']
Modifiability,"n the nodes. Int_t Rm(const char* what, const char* how = 0, const char* where = 0); Run 'rm' on the nodes. The user is prompted before removal, unless 'how'; contains ""--force"" or a combination of single letter options including 'f',; e.g. ""-fv"". void Tail(const char* what, const char* how = 0, const char* where = 0); Run 'tail' on the nodes. Int_t Md5sum(const char* what, TString& sum, const char* where = 0); Run 'md5sum' on one of the nodes. Int_t Stat(const char* what, FileStat_t& st, const char* where = 0); Run 'stat' on one of the nodes. TObjString * Exec(Int_t action, const char* what, const char* how, const char* where); Execute 'action' (see EAdminExecType in 'XProofProtocol.h') at 'where'; (default master), with options 'how', on 'what'. The option specified by; 'how' are typically unix option for the relate commands. In addition to; the unix authorizations, the limitations are:. action = kRm limited to the sandbox (but basic dirs cannot be; removed) and on files owned by the user in the; allowed directories; action = kTail option '-f' is not supported and will be ignored. Int_t GetFile(const char* remote, const char* local, const char* opt = 0); Get file 'remote' into 'local' from the master.; If opt contains ""force"", the file, if it exists remotely, is copied in all cases,; otherwise a check is done on the MD5sum.; If opt contains ""silent"" standard notificatons are not printed (errors and; warnings and prompts still are).; Return 0 on success, -1 on error. Int_t PutFile(const char* local, const char* remote, const char* opt = 0); Put file 'local'to 'remote' to the master; If opt is ""force"", the file, if it exists remotely, is copied in all cases,; otherwise a check is done on the MD5sum.; Return 0 on success, -1 on error. void CpProgress(const char* pfx, Long64_t bytes, Long64_t size, TStopwatch* watch, Bool_t cr = kFALSE); Print file copy progress. Int_t Cp(const char* src, const char* dst = 0, const char* opts = 0); Copy files in/out of the sandbox. Eit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXProofMgr.html:14790,sandbox,sandbox,14790,root/html528/TXProofMgr.html,https://root.cern,https://root.cern/root/html528/TXProofMgr.html,10,['sandbox'],['sandbox']
Modifiability,"n the product of states of c and d. Another possibility; is the 'constrained' split which clones the parameter for all but one state; and insert a formula specialization in a chosen state that evaluates; to 1 - sum_i(a_i) where a_i are all other specializations. For example,; given a category c with state ""A"",""B"",""C"",""D"" the specification. SplitParamConstrained(""m"",""c"",""D""). will result in parameters m_A,m_B,m_C and a formula expression m_D; that evaluates to (1-(m_A+m_B+m_C)). Constrained split can also be; specified in product of categories. In that case the name of the; remainder state follows the syntax ""{State1;State2}"" where State1 and; State2 are the state names of the two spitting categories. The examples so far deal with a single prototype p.d.f. It is also; possible to build with multiple prototype p.d.fs by specifying a; mapping between the prototype to use and the names of states of; a 'master' splitting category. To specify these configurations; an intermediate MultiBuildConfig must be composed with all; the necessary specifications. For example, this code. RooSimWSTool::MultiBuildConfig mbc(""mc"") ;; mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c"")) ;; mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d"")) ;. configures a build with two prototype p.d.f.s G and F.; Prototype G is used for state ""I"" of master split category; mc and prototype F is used for states ""II"" and ""III"" of; master split category mc. Furthermore parameters m,s of prototype G are split; in category c while parameter a of prototype F is split in; the product of categories c and d. The actual build is then; performed by passing the build configuration to RooSimWSTool, e.g. wst.build(""MASTER"",mbc) ;. By default, a specialization is built for each permutation of; states of the spitting categories that are used. It is possible; to restrict the building of specialized p.d.f to a subset of states; by adding a restriction on the number of states to build as follows. mbc.restrictBuild(""c"",""A,B"") ;. The restri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimWSTool.html:2334,config,configurations,2334,root/html526/RooSimWSTool.html,https://root.cern,https://root.cern/root/html526/RooSimWSTool.html,66,['config'],['configurations']
Modifiability,"n the proxy list. ;  ; void registerProxy (RooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooListProxy x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUniform.html:66809,inherit,inherited,66809,doc/master/classRooUniform.html,https://root.cern,https://root.cern/doc/master/classRooUniform.html,1,['inherit'],['inherited']
Modifiability,"n the proxy list. ;  ; void registerProxy (RooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooKeysPdf.html:70147,inherit,inherited,70147,doc/master/classRooKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooKeysPdf.html,1,['inherit'],['inherited']
Modifiability,"n the result according to chi2/ndf ; Definition at line 223 of file FitConfig.h. ◆ SetParabErrors(). void ROOT::Fit::FitConfig::SetParabErrors ; (; bool ; on = true). inline . set parabolic errors ; Definition at line 226 of file FitConfig.h. ◆ SetParamsSettings() [1/2]. void ROOT::Fit::FitConfig::SetParamsSettings ; (; const std::vector< ROOT::Fit::ParameterSettings > & ; pars). inline . Definition at line 145 of file FitConfig.h. ◆ SetParamsSettings() [2/2]. void ROOT::Fit::FitConfig::SetParamsSettings ; (; unsigned int ; npar, . const double * ; params, . const double * ; vstep = nullptr . ). set the parameter settings from number of parameters and a vector of values and optionally step values. ; If there are not existing or number of parameters does not match existing one, create a new parameter setting list. ; Definition at line 135 of file FitConfig.cxx. ◆ SetUpdateAfterFit(). void ROOT::Fit::FitConfig::SetUpdateAfterFit ; (; bool ; on = true). inline . Update configuration after a fit using the FitResult. ; Definition at line 243 of file FitConfig.h. ◆ SetWeightCorrection(). void ROOT::Fit::FitConfig::SetWeightCorrection ; (; bool ; on = true). inline . apply the weight correction for error matrix computation ; Definition at line 232 of file FitConfig.h. ◆ UpdateAfterFit(). bool ROOT::Fit::FitConfig::UpdateAfterFit ; (; ); const. inline . Update configuration after a fit using the FitResult. ; Definition at line 211 of file FitConfig.h. ◆ UseWeightCorrection(). bool ROOT::Fit::FitConfig::UseWeightCorrection ; (; ); const. inline . Apply Weight correction for error matrix computation. ; Definition at line 214 of file FitConfig.h. Member Data Documentation. ◆ fMinimizerOpts. ROOT::Math::MinimizerOptions ROOT::Fit::FitConfig::fMinimizerOpts. private . minimizer control parameters including name and algo type ; Definition at line 268 of file FitConfig.h. ◆ fMinosErrors. bool ROOT::Fit::FitConfig::fMinosErrors. private . do full error analysis using Minos ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html:11268,config,configuration,11268,doc/master/classROOT_1_1Fit_1_1FitConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html,1,['config'],['configuration']
Modifiability,"n the testing data and adds the output to the Results in the corresponi...Definition Factory.cxx:1271; TMVA::Factory::TrainAllMethodsForClassificationvoid TrainAllMethodsForClassification(void)Definition Factory.h:115; TMVA::Factory::fVerboseBool_t fVerbose! verbose modeDefinition Factory.h:213; TMVA::Factory::EvaluateAllMethodsvoid EvaluateAllMethods(void)Iterates over all MVAs that have been booked, and calls their evaluation methods.Definition Factory.cxx:1376; TMVA::Factory::EvaluateImportanceRandomTH1F * EvaluateImportanceRandom(DataLoader *loader, UInt_t nseeds, Types::EMVA theMethod, TString methodTitle, const char *theOption="""")Definition Factory.cxx:2473; TMVA::Factory::GetImportanceTH1F * GetImportance(const int nbits, std::vector< Double_t > importances, std::vector< TString > varNames)Definition Factory.cxx:2591; TMVA::Factory::fROCBool_t fROC! enable to calculate ROC valuesDefinition Factory.h:216; TMVA::Factory::EvaluateAllVariablesvoid EvaluateAllVariables(DataLoader *loader, TString options="""")Iterates over all MVA input variables and evaluates them.Definition Factory.cxx:1360; TMVA::Factory::RootBaseDirTDirectory * RootBaseDir()Definition Factory.h:149; TMVA::Factory::fVerboseLevelTString fVerboseLevel! verbosity level, controls granularity of loggingDefinition Factory.h:214; TMVA::Factory::GetROCCurveAsMultiGraphTMultiGraph * GetROCCurveAsMultiGraph(DataLoader *loader, UInt_t iClass, Types::ETreeType type=Types::kTesting)Generate a collection of graphs, for all methods for a given class.Definition Factory.cxx:988; TMVA::Factory::EvaluateImportanceTH1F * EvaluateImportance(DataLoader *loader, VIType vitype, Types::EMVA theMethod, TString methodTitle, const char *theOption="""")Evaluate Variable Importance.Definition Factory.cxx:2217; TMVA::Factory::OptimizeAllMethodsForRegressionvoid OptimizeAllMethodsForRegression(TString fomType=""ROCIntegral"", TString fitType=""FitGA"")Definition Factory.h:111; TMVA::Factory::GetROCIntegralDouble_t GetROCIntegral(Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html:14573,variab,variables,14573,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,1,['variab'],['variables']
Modifiability,"n the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram; In case of a 2-Dim expression, one can generate a TProfile histogram instead of a TH2F histogram by specifying option=prof or option=profs or option=profi or option=profg ; the trailing letter select the way the bin error are computed, See TProfile2D::SetErrorOption for details on the differences. The option=prof is automatically selected in case of y:x>>pf where pf is an existing TProfile histogram. Making a 2D Profile histogram; In case of a 3-Dim expression, one can generate a TProfile2D histogram instead of a TH3F histogram by specifying option=prof or option=profs. or option=profi or option=profg ; the trailing letter select the way the bin error are computed, See TProfile2D::SetErrorOption for details on the differences. The option=prof is automatically selected in case of z:y:x>>pf where pf is an existing TProfile2D histogram. Making a 5D plot using GL; If option GL5D is specified together with 5 variables, a 5D plot is drawn using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot; In case of a 2-Dim or more expression with the option=para, one can generate a parallel coordinates plot. With that option, the number of dimensions is arbitrary. Giving more than 4 variables without the option=para or option=candle or option=goff will produce an error. Making a candle sticks chart; In case of a 2-Dim or more expression with the option=candle, one can generate a candle sticks chart. With that option, the number of dimensions is arbitrary. Giving more than 4 variables without the option=para or option=candle or option=goff will produce an error. Normalizing the output histogram to 1; When option contains ""norm"" the output histogram is normalized to 1. Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; TTree::Draw can be used to fill a TEventList object (list of entry numbers) instead of histogramming one",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:129144,variab,variables,129144,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['variab'],['variables']
Modifiability,"n this branch; 136 Long64_t fTotBytes; ///< Total number of bytes in all leaves before compression; 137 Long64_t fZipBytes; ///< Total number of bytes in all leaves after compression; 138 TObjArray fBranches; ///< -> List of Branches of this branch; 139 TObjArray fLeaves; ///< -> List of leaves of this branch; 140 TObjArray fBaskets; ///< -> List of baskets of this branch; 141 Int_t *fBasketBytes; ///<[fMaxBaskets] Length of baskets on file; 142 Long64_t *fBasketEntry; ///<[fMaxBaskets] Table of first entry in each basket; 143 Long64_t *fBasketSeek; ///<[fMaxBaskets] Addresses of baskets on file; 144 TTree *fTree; ///<! Pointer to Tree header; 145 TBranch *fMother; ///<! Pointer to top-level parent branch in the tree.; 146 TBranch *fParent; ///<! Pointer to parent branch.; 147 char *fAddress; ///<! Address of 1st leaf (variable or object); 148 TDirectory *fDirectory; ///<! Pointer to directory where this branch buffers are stored; 149 TString fFileName; ///< Name of file where buffers are stored ("""" if in same file as Tree header); 150 TBuffer *fEntryBuffer; ///<! Buffer used to directly pass the content without streaming; 151 TBuffer *fTransientBuffer; ///<! Pointer to the current transient buffer.; 152 TList *fBrowsables; ///<! List of TVirtualBranchBrowsables used for Browse(); 153 BulkObj fBulk; ///<! Helper for performing bulk IO; 154 ; 155 bool fSkipZip; ///<! After being read, the buffer will not be unzipped.; 156 ; 157 using CacheInfo_t = ROOT::Internal::TBranchCacheInfo;; 158 CacheInfo_t fCacheInfo; ///<! Hold info about which basket are in the cache and if they have been retrieved from the cache.; 159 ; 160 typedef void (TBranch::*ReadLeaves_t)(TBuffer &b);; 161 ReadLeaves_t fReadLeaves; ///<! Pointer to the ReadLeaves implementation to use.; 162 typedef void (TBranch::*FillLeaves_t)(TBuffer &b);; 163 FillLeaves_t fFillLeaves; ///<! Pointer to the FillLeaves implementation to use.; 164 void ReadLeavesImpl(TBuffer &b);; 165 void ReadLeaves0Impl(TBuffer &b);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8h_source.html:6067,variab,variable,6067,doc/master/TBranch_8h_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8h_source.html,1,['variab'],['variable']
Modifiability,"n this shape. ;  ; Int_t GetId () const;  ; const char * GetName () const override;  Get the shape name. ;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; virtual Bool_t IsAssembly () const;  ; virtual Bool_t IsComposite () const;  ; virtual Bool_t IsReflected () const;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t set);  Equivalent of TObject::SetBit. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numpoints, Int_t px, Int_t py) const;  Returns distance to shape primitive mesh. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCtub.html:10094,inherit,inherited,10094,doc/master/classTGeoCtub.html,https://root.cern,https://root.cern/doc/master/classTGeoCtub.html,13,['inherit'],['inherited']
Modifiability,"n three different ways. The interpretation; 2211/// is controlled by ScaleType; 2212/// ```; 2213/// Relative - Scale factor is applied on top of PDF normalization scale factor; 2214/// NumEvent - Scale factor is interpreted as a number of events. The surface area; 2215/// under the PDF curve will match that of a histogram containing the specified; 2216/// number of event; 2217/// Raw - Scale factor is applied to the raw (projected) probability density.; 2218/// Not too useful, option provided for completeness.; 2219/// ```; 2220// coverity[PASS_BY_VALUE]; 2221RooPlot* RooAbsPdf::plotOn(RooPlot *frame, PlotOpt o) const; 2222{; 2223 ; 2224 // Sanity checks; 2225 if (plotSanityChecks(frame)) return frame ;; 2226 ; 2227 // More sanity checks; 2228 double nExpected(1) ;; 2229 if (o.stype==RelativeExpected) {; 2230 if (!canBeExtended()) {; 2231 coutE(Plotting) << ""RooAbsPdf::plotOn("" << GetName(); 2232 << ""): ERROR the 'Expected' scale option can only be used on extendable PDFs"" << endl ;; 2233 return frame ;; 2234 }; 2235 frame->updateNormVars(*frame->getPlotVar()) ;; 2236 nExpected = expectedEvents(frame->getNormVars()) ;; 2237 }; 2238 ; 2239 // Adjust normalization, if so requested; 2240 if (o.stype != Raw) {; 2241 ; 2242 if (frame->getFitRangeNEvt() && o.stype==Relative) {; 2243 // If non-default plotting range is specified, adjust number of events in fit range; 2244 o.scaleFactor *= frame->getFitRangeNEvt()/nExpected ;; 2245 } else if (o.stype==RelativeExpected) {; 2246 o.scaleFactor *= nExpected ;; 2247 } else if (o.stype==NumEvent) {; 2248 o.scaleFactor /= nExpected ;; 2249 }; 2250 o.scaleFactor *= frame->getFitRangeBinW() ;; 2251 }; 2252 frame->updateNormVars(*frame->getPlotVar()) ;; 2253 ; 2254 return RooAbsReal::plotOn(frame,o) ;; 2255}; 2256 ; 2257 ; 2258 ; 2259 ; 2260////////////////////////////////////////////////////////////////////////////////; 2261/// The following named arguments are supported; 2262/// <table>; 2263/// <tr><th> Type of CmdArg <th> Effect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:108703,extend,extendable,108703,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"n to set/get a referenced object instead of using global variables. Basic concepts of MINUIT; The MINUIT package acts on a multiparameter Fortran function to which one must give the generic name FCN. In the ROOT implementation, the function FCN is defined via the MINUIT SetFCN member function when an Histogram.Fit command is invoked. The value of FCN will in general depend on one or more variable parameters.; To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D) the Fit function defines the Minuit fitting function as being H1FitChisquare or H1FitLikelihood depending on the options selected. H1FitChisquare calculates the chisquare between the user fitting function (gaussian, polynomial, user defined,etc) and the data for given values of the parameters. It is the task of MINUIT to find those values of the parameters which give the lowest value of chisquare. Basic concepts - The transformation for parameters with limits.; For variable parameters with limits, MINUIT uses the following transformation:. \[; P_{\mathrm{int}} = \arcsin; \left( 2\: \frac{P_{\mathrm{ext}}-a}{b-a} - 1 \right); P_{\mathrm{ext}} = a + \frac{b - a}{2} \left( \sin P_{\mathrm{int}} + 1 \right); \]. so that the internal value \(P_{\mathrm{int}}\) can take on any value, while the external value \(P_{\mathrm{ext}}\) can take on values only between the lower limit \(a\) and the upper limit \(b\). Since the transformation is necessarily non-linear, it would transform a nice linear problem into a nasty non-linear one, which is the reason why limits should be avoided if not necessary. In addition, the transformation does require some computer time, so it slows down the computation a little bit, and more importantly, it introduces additional numerical inaccuracy into the problem in addition to what is introduced in the numerical calculation of the FCN value. The effects of non-linearity and numerical roundoff both become more important as the external value gets closer to one of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:2624,variab,variable,2624,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['variab'],['variable']
Modifiability,"n to the of derivative dx_k/dA_ij ;  ; TMatrixDSparse * fDXDtauSquared;  derivative of the result wrt tau squared ;  ; TMatrixDSparse * fDXDY;  derivative of the result wrt dx/dy ;  ; TMatrixDSparse * fE;  matrix E ;  ; TMatrixDSparse * fEinv;  matrix E^(-1) ;  ; Double_t fEpsMatrix;  machine accuracy used to determine matrix rank after eigenvalue analysis ;  ; Int_t fIgnoredBins;  number of input bins which are dropped because they have error=nullptr ;  ; Double_t fLXsquared;  chi**2 contribution from (x-s*x0)TLTL(x-s*x0) ;  ; Int_t fNdf;  number of degrees of freedom ;  ; Double_t fRhoAvg;  average global correlation coefficient ;  ; Double_t fRhoMax;  maximum global correlation coefficient ;  ; TMatrixDSparse * fVxx;  covariance matrix Vxx ;  ; TMatrixDSparse * fVxxInv;  inverse of covariance matrix Vxx-1 ;  ; TMatrixDSparse * fVyyInv;  inverse of the input covariance matrix Vyy-1 ;  ; TMatrixD * fX;  unfolding result x ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TUnfold.h>. Inheritance diagram for TUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EConstraint. enum TUnfold::EConstraint. type of extra constraint . EnumeratorkEConstraintNone use no extra constraint . kEConstraintArea enforce preservation of the area . Definition at line 113 of file TUnfold.h. ◆ EHistMap. enum TUnfold::EHistMap. arrangement of axes for the response matrix (TH2 histogram) . EnumeratorkHistMapOutputHoriz truth level on x-axis of the response matrix . kHistMapOutputVert truth level on y-axis of the response matrix . Definition at line 143 of file TUnfold.h. ◆ ERegMode. enum TUnfold::ERegMode. choice of regularisation scheme . EnumeratorkRegModeNone no regularisation, or defined later by RegularizeXXX() methods . kRegModeSize regularise the amplitude of the output distribution . kRegModeDerivative regularize ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfold.html:23314,inherit,inherited,23314,doc/master/classTUnfold.html,https://root.cern,https://root.cern/doc/master/classTUnfold.html,1,['inherit'],['inherited']
Modifiability,"n transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveWindow*fCurrentWindow; TEveWindow*fDefaultContainer; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Bool_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveWindowManager.html:22473,variab,variable,22473,root/html528/TEveWindowManager.html,https://root.cern,https://root.cern/root/html528/TEveWindowManager.html,1,['variab'],['variable']
Modifiability,"n transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; list<TEveElement*>TEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveWindow*fCurrentWindow; TEveWindow*fDefaultContainer; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveWindowManager.html:22839,variab,variable,22839,root/html530/TEveWindowManager.html,https://root.cern,https://root.cern/root/html530/TEveWindowManager.html,5,['variab'],['variable']
Modifiability,"n transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectableli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSetProjected.html:26110,variab,variable,26110,root/html602/TEvePointSetProjected.html,https://root.cern,https://root.cern/root/html602/TEvePointSetProjected.html,4,['variab'],['variable']
Modifiability,"n used for this object. ;  ; void getLogProbabilities (std::span< const double > pdfValues, double *output) const;  ; virtual double getLogVal (const RooArgSet *set=nullptr) const;  Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ;  ; double getNorm (const RooArgSet &nset) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; const RooAbsReal * getNormIntegral (const RooArgSet &nset) const;  ; virtual const RooAbsReal * getNormObj (const RooArgSet *set, const RooArgSet *iset, const TNamed *rangeName=nullptr) const;  Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over observables nset. ;  ; virtual void initGenerator (Int_t code);  Interface for one-time initialization to setup the generator for the specified code. ;  ; bool mustBeExtended () const;  If true PDF must provide extended likelihood term. ;  ; const char * normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:14182,extend,extended,14182,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['extend'],['extended']
Modifiability,"n used.Definition Compression.h:65; ROOT::RCompressionSetting::ELevel::kInherit@ kInheritSome objects use this value to denote that the compression algorithm should be inherited from the par...Definition Compression.h:68; ROOT::RCompressionSetting::ELevel::kUseMin@ kUseMinCompression level reserved when we are not sure what to use (1 is for the fastest compression)Definition Compression.h:72; ROOT::RCompressionSetting::ELevel::kDefaultOld@ kDefaultOldCompression level reserved for old ROOT compression algorithm.Definition Compression.h:81; ROOT::RCompressionSetting::ELevel::kUncompressed@ kUncompressedCompression level reserved for ""uncompressed state"".Definition Compression.h:70; ROOT::RCompressionSetting::ELevel::kDefaultLZMA@ kDefaultLZMACompression level reserved for LZMA compression algorithm (slowest compression with smallest files)Definition Compression.h:83; ROOT::RCompressionSetting::ELevel::kDefaultZSTD@ kDefaultZSTDCompression level reserved for ZSTD compression algorithm (trade-off between file ratio/decompression...Definition Compression.h:79; ROOT::RCompressionSetting::ELevel::kDefaultZLIB@ kDefaultZLIBCompression level reserved for ZLIB compression algorithm (fastest compression)Definition Compression.h:74; ROOT::RCompressionSetting::ELevel::kDefaultLZ4@ kDefaultLZ4Compression level reserved for LZ4 compression algorithm (trade-off between file ratio/decompression ...Definition Compression.h:76; ROOT::RCompressionSettingThe global settings depend on a global variable named R__ZipMode which can be modified by a global fu...Definition Compression.h:46; ROOT::RCompressionSetting::AlgorithmFromCompressionSettingsstatic EAlgorithm::EValues AlgorithmFromCompressionSettings(int compSettings)Definition Compression.h:110; ROOT::RCompressionSetting::AlgorithmToStringstatic std::string AlgorithmToString(EAlgorithm::EValues algorithm). corezipincCompression.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Compression_8h_source.html:10982,variab,variable,10982,doc/master/Compression_8h_source.html,https://root.cern,https://root.cern/doc/master/Compression_8h_source.html,1,['variab'],['variable']
Modifiability,"n uses marker size; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttMarkerEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of marker attributes GUI. ~TAttMarkerEditor(); Destructor of marker editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the values of used marker attributes. void DoMarkerColor(Pixel_t color); Slot connected to the marker color. void DoMarkerAlphaColor(ULong_t p); Slot connected to the color with alpha. void DoMarkerStyle(Style_t style); Slot connected to the marker type. void DoMarkerSize(); Slot connected to the marker size. void DoAlphaField(); Slot to set the alpha value from the entry field. void DoAlpha(); Slot to set the alpha value. void DoLiveAlpha(Int_t a); Slot to set alpha value online. void GetCurAlpha(); Slot to update alpha value on click on Slider. » Author: Ilka Antcheva 11/05/04 » Copyright (C) 1995-2002, Ren",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttMarkerEditor.html:20306,Inherit,Inheritance,20306,root/html534/TAttMarkerEditor.html,https://root.cern,https://root.cern/root/html534/TAttMarkerEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; bool selfNormalized () const override;  Model is self normalized when used as p.d.f. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooResolutionModel;  RooResolutionModel ()=default;  ;  RooResolutionModel (const char *name, const char *title, RooAbsRealLValue &x);  Constructor with convolution variable 'x'. ;  ;  RooResolutionModel (const RooResolutionModel &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooResolutionModel () override;  Destructor. ;  ; const RooFormulaVar & basis () const;  ; const RooRealVar & basisConvVar () const;  Return the convolution variable of the selection basis function. ;  ; virtual void changeBasis (RooFormulaVar *basis);  Change the basis function we convolute with. ;  ; RooAbsRealLValue & convVar () const;  Return the convolution variable of the resolution model. ;  ; double getNorm (const RooArgSet *nset=nullptr) const override;  Return the integral of this PDF over all elements of 'nset'. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Modified version of RooAbsPdf::getValF(). ;  ; TClass * IsA () const override;  ; bool isBasisSupported (const char *name) const;  ; bool isConvolved () const;  ; virtual RooAbsGenContext * modelGenContext (const RooAbsAnaConvPdf &, const RooArgSet &, const RooDataSet *, const RooArgSet *, bool) const;  ; virtual void normLeafServerList (RooArgSet &list) const;  Floating point error checking and tracing for given float value. ;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Print info about this object to the specified stream. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:5639,variab,variable,5639,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['variab'],['variable']
Modifiability,"n variable as event weight rather than as observable; WeightVar(const RooAbsArg&). StoreError(const RooArgSet&) -- Store symmetric error along with value for given subset of observables; StoreAsymError(const RooArgSet&) -- Store asymmetric error along with value for given subset of observables. RooDataSet(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0); Constructor of an empty data set from a RooArgSet defining the dimensions; of the data space. RooDataSet(const char* name, const char* title, RooDataSet* data, const RooArgSet& vars, const char* cuts = 0, const char* wgtVarName = 0); Constructor of a data set from (part of) an existing data; set. The dimensions of the data set are defined by the 'vars'; RooArgSet, which can be identical to 'dset' dimensions, or a; subset thereof. The 'cuts' string is an optional RooFormula; expression and can be used to select the subset of the data; points in 'dset' to be copied. The cut expression can refer to; any variable in the source dataset. For cuts involving variables; other than those contained in the source data set, such as; intermediate formula objects, use the equivalent constructor; accepting RooFormulaVar reference as cut specification. For most uses the RooAbsData::reduce() wrapper function, which; uses this constructor, is the most convenient way to create a; subset of an existing data. RooDataSet(const char* name, const char* title, RooDataSet* data, const RooArgSet& vars, const RooFormulaVar& cutVar, const char* wgtVarName = 0); Constructor of a data set from (part of) an existing data; set. The dimensions of the data set are defined by the 'vars'; RooArgSet, which can be identical to 'dset' dimensions, or a; subset thereof. The 'cutVar' formula variable is used to select; the subset of data points to be copied. For subsets without; selection on the data points, or involving cuts operating; exclusively and directly on the data set dimensions, the; equivalent constructor with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDataSet.html:20399,variab,variable,20399,root/html528/RooDataSet.html,https://root.cern,https://root.cern/root/html528/RooDataSet.html,10,['variab'],['variable']
Modifiability,"n weight. The Fill functions return the bin number for 1-D histograms or global bin number for 2-D and 3-D histograms. If TH1::Sumw2 has been called before filling, the sum of squares of weights is also stored. One can also increment directly a bin number via TH1::AddBinContent or replace the existing content via TH1::SetBinContent. Passing an out-of-range bin to TH1::AddBinContent leads to undefined behavior. To access the bin content of a given bin, do: Double_t binContent = h->GetBinContent(bin);; By default, the bin number is computed using the current axis ranges. If the automatic binning option has been set via h->SetCanExtend(TH1::kAllAxes);; TH1::kAllAxes@ kAllAxesDefinition TH1.h:76; then, the Fill Function will automatically extend the axis range to accomodate the new value specified in the Fill argument. The method used is to double the bin size until the new value fits in the range, merging bins two by two. This automatic binning options is extensively used by the TTree::Draw function when histogramming Tree variables with an unknown range. This automatic binning option is supported for 1-D, 2-D and 3-D histograms.; During filling, some statistics parameters are incremented to compute the mean value and Root Mean Square with the maximum precision.; In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S a check is made that the bin contents do not exceed the maximum positive capacity (127 or 32767). Histograms of all types may have positive or/and negative bin contents. Associated errors; By default, for each bin, the sum of weights is computed at fill time. One can also call TH1::Sumw2 to force the storage and computation of the sum of the square of weights per bin. If Sumw2 has been called, the error per bin is computed as the sqrt(sum of squares of weights), otherwise the error is set equal to the sqrt(bin content). To return the error for a given bin number, do: Double_t error = h->GetBinError(bin);. Associated functions; One or more object ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:12577,variab,variables,12577,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variables']
Modifiability,"n when a value is requested. ;  ; void setShapeDirty ();  Notify that a shape-like property (e.g. binning) has changed. ;  ; const char * aggregateCacheUniqueSuffix () const;  ; void wireAllCaches ();  ; RooExpensiveObjectCache & expensiveObjectCache () const;  ; virtual void setExpensiveObjectCache (RooExpensiveObjectCache &cache);  ; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED (6, 36, ""Use observableOverlaps()."") inline bool dependentOverlaps(const RooAbsData *dset;  ;  R__DEPRECATED (6, 36, ""Use observableOverlaps()."") inline bool dependentOverlaps(const RooArgSet *depList;  ;  R__DEPRECATED (6, 36, ""Use checkObservables()."") inline bool checkDependents(const RooArgSet *nset) const;  ;  R__DEPRECATED (6, 36, ""Use recursiveCheckObservables()."") inline bool recursiveCheckDependents(const RooArgSet *nset) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:40841,inherit,inherited,40841,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['inherit'],['inherited']
Modifiability,"n where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TCanvas; enum  { ;   kShowEventStatus = (1ULL << ( 15 )); , kAutoExec = (1ULL << ( 16 )); , kMenuBar = (1ULL << ( 17 )); , kShowToolBar = (1ULL << ( 18 )); , ;   kShowEditor = (1ULL << ( 19 )); , kMoveOpaque = (1ULL << ( 20 )); , kResizeOpaque = (1ULL << ( 21 )); , kIsGrayscale = (1ULL << ( 22 )); , ;   kShowToolTips = (1ULL << ( 23 )). };  ;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TCanvas; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInspectCanvas.html:60337,inherit,inherited,60337,doc/master/classTInspectCanvas.html,https://root.cern,https://root.cern/doc/master/classTInspectCanvas.html,1,['inherit'],['inherited']
Modifiability,"n with abscissa X by 1.Definition TH1.cxx:3344; TH1::SetMinimumvirtual void SetMinimum(Double_t minimum=-1111)Definition TH1.h:405; TH1::GetListOfFunctionsTList * GetListOfFunctions() constDefinition TH1.h:244; TH1::Sumw2virtual void Sumw2(Bool_t flag=kTRUE)Create structure to store sum of squares of weights.Definition TH1.cxx:9020; TH1::SetEntriesvirtual void SetEntries(Double_t n)Definition TH1.h:391; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; THbookBranchHBOOK Branch.Definition THbookBranch.h:26; THbookBranch::SetAddressvoid SetAddress(void *addobj) overrideSet address of this branch See important remark in the header of THbookTree.Definition THbookBranch.cxx:75; THbookBranch::SetBlockNamevoid SetBlockName(const char *name)Definition THbookBranch.h:40; THbookFileThis class is an interface to the Hbook objects in Hbook files.Definition THbookFile.h:29; THbookFile::InitLeavesvoid InitLeaves(Int_t id, Int_t var, TTreeFormula *formula)This function is called from the first entry in TTreePlayer::InitLoop It analyzes the list of variabl...Definition THbookFile.cxx:554; THbookFile::fLunInt_t fLunDefinition THbookFile.h:32; THbookFile::GetTObject * Get(Int_t id)import Hbook object with identifier idd in memoryDefinition THbookFile.cxx:445; THbookFile::fgPawInitstatic Bool_t fgPawInitDefinition THbookFile.h:38; THbookFile::fLreclInt_t fLreclDefinition THbookFile.h:33; THbookFile::DeleteIDvoid DeleteID(Int_t id)remove id from file and memoryDefinition THbookFile.cxx:421; THbookFile::GetEntryBranchInt_t GetEntryBranch(Int_t entry, Int_t id)Read in memory only the branch bname.Definition THbookFile.cxx:531; THbookFile::Closevirtual void Close(Option_t *option="""")Close the Hbook file.Definition THbookFile.cxx:398; THbookFile::fCurDirTString fCurDirDefinition THbookFile.h:36; THbookFile::fListTList * fListDefinition THbookFile.h:34; THbookFile::lsvoid ls(const char *path="""") const overrideList contents of Hbook directory.Definition T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THbookFile_8cxx_source.html:38282,variab,variabl,38282,doc/master/THbookFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THbookFile_8cxx_source.html,1,['variab'],['variabl']
Modifiability,"n with install parameter in addition to the --build option tells cmake to build the 'install' target. This is equivalent to make install for Unix systems. ; It is possible to set a different install prefix at installation time by invoking the cmake_install.cmake script generated in the build directory:; $ cmake -DCMAKE_INSTALL_PREFIX=/tmp/root -P cmake_install.cmake. Build Options; Each build option is a boolean variable that can be turned ON or OFF. The current value is recorded in the CMake cache (CMakeCache.txt file on the build directory) and therefore it is not needed to be specified on the cmake command each time. Please note that some of the options might be turned OFF automatically for some platforms or if the required external library or component can not be satisfied. The user can view and edit the full list of options using the ccmake utility or cmake-gui for Windows. Note that some of the options are not yet implemented.; The user can set any CMake variable or option that controls the build process from the cmake command line. The command using the option -D <var>:<type>=<value> creates an entry in the CMake cache. This is the list of the ROOT specific CMake options:. option name; default value; description. afdsmgrd; OFF; Dataset manager for PROOF-based analysis facilities. afs; OFF; AFS support, requires AFS libs and objects. alien; ON; AliEn support, requires libgapiUI from ALICE. all; OFF; Enable all optional components. asimage; ON; Image processing support, requires libAfterImage. astiff; ON; Include tiff support in image processing. bonjour; ON; Bonjour support, requires libdns_sd and/or Avahi. builtin_afterimage; ON; Built included libAfterImage, or use system libAfterImage. builtin_fftw3; OFF; Built the FFTW3 library internally (downloading tarfile from the Web) (ROOT 6 only). builtin_ftgl; ON; Built included libFTGL, or use system libftgl. builtin_freetype; OFF; Built included libfreetype, or use system libfreetype. builtin_glew; ON; Built incl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/building-root.html:6726,variab,variable,6726,d/building-root.html,https://root.cern,https://root.cern/d/building-root.html,1,['variab'],['variable']
Modifiability,"n x; dy: half-length in y; dz: half-length in z; alpha: angle formed by the y axis and by the plane joining the centre of the faces parallel to the z-x plane at -DY and +DY; theta: polar angle of the line joining the centres of the faces at -DZ and +DZ in z; phi: azimuthal angle of the line joining the centres of the faces at -DZ and +DZ in z . Definition at line 30 of file TPARA.h. Public Member Functions;  TPARA ();  PARA shape default constructor. ;  ;  TPARA (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz, Float_t alpha, Float_t theta, Float_t phi);  PARA shape normal constructor. ;  ;  ~TPARA () override;  PARA shape default destructor. ;  ; virtual Float_t GetAlpha () const;  ; virtual Float_t GetPhi () const;  ; virtual Float_t GetTheta () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TBRIK;  TBRIK ();  BRIK shape default constructor. ;  ;  TBRIK (const char *name, const char *title, const char *material, Float_t dx, Float_t dy, Float_t dz);  BRIK shape normal constructor. ;  ;  ~TBRIK () override;  BRIK shape default destructor. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a BRIK. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3D. ;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; void Sizeof3D () const override;  Return total X3D needed by TNode::ls (when called with option ""x"") ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TShape;  TShape ();  Shape default constructor. ;  ;  TShape (const char *name, const char *title, const char *material);  Shape normal constructor. ;  ;  TShape (const TShape &);  copy constructor ;  ;  ~TShape () override;  Sh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPARA.html:1488,inherit,inherited,1488,doc/master/classTPARA.html,https://root.cern,https://root.cern/doc/master/classTPARA.html,1,['inherit'],['inherited']
Modifiability,"n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; RooStats::HeavisideHeaviside(); RooStats::HeavisideHeaviside(const RooStats::Heaviside& other, const char* name = 0); RooStats::HeavisideHeaviside(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _c); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__Heaviside.html:15077,Inherit,InheritsFrom,15077,root/html532/RooStats__Heaviside.html,https://root.cern,https://root.cern/root/html532/RooStats__Heaviside.html,1,['Inherit'],['InheritsFrom']
Modifiability,"n'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static bool getFloorGlobal ();  ; static void setFloorGlobal (bool flag);  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static EvalErrorIter evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged ev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:59648,inherit,inherited,59648,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,1,['inherit'],['inherited']
Modifiability,"n'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static bool getFloorGlobal ();  ; static void setFloorGlobal (bool flag);  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumPdf.html:58418,inherit,inherited,58418,doc/master/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/master/classRooRealSumPdf.html,1,['inherit'],['inherited']
Modifiability,n's RuleFit method; TMVA::SVEvent Event for SVM; TMVA::SdivSqrtSplusB Implementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuron Neuron class used by MethodANNBase derivative ANNs; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions ; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::TSynapse Synapse class used by MethodANNBase and derivatives; TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event ; TMacro Class supporting a collection of lines with C++ code.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:104350,variab,variable,104350,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,1,['variab'],['variable']
Modifiability,"n() const; const double*GetMode() const; const double*GetUpperDomain() const; voidGradient(const double* x, double* grad) const; virtual TClass*IsA() const; boolIsLogPdf() const; unsigned intNDim() const; TUnuranMultiContDist&operator=(const TUnuranMultiContDist& rhs); doublePdf(const double* x) const; voidSetDomain(const double* xmin, const double* xmax); voidSetMode(const double* x); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. boolfIsLogPdfflag to control if function pointer represent log of pdf; vector<double>fModevector representing the x coordinates of the maximum of the pdf ; boolfOwnFuncflag to indicate if class manages the function pointers; const ROOT::Math::IBaseFunctionMultiDim*fPdfpointer to the pdf; vector<double>fXmaxvector with upper x values of the domain ; vector<double>fXminvector with lower x values of the domain. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TUnuranMultiContDist(TF1* func = 0, unsigned int dim = 0, bool isLogPdf = false). Constructor from a TF1 object representing the Probability density function.; The derivatives of the Pdf are estimated, when required by the UNURAN algorithm,; using numerical derivation.; If a value of dim 0 is passed , the dimension of the function is taken from TF1::GetNdim().; This works only for 2D and 3D (for TF2 and TF3 objects). TUnuranMultiContDist(const ROOT::Math::IMultiGenFunction& pdf, bool isLogPdf = false). Constructor as before but from a generic function object interface for multi-dim functions. virtual ~TUnuranMultiContDist(). Destructor. TUnuranMultiContDist(const TUnuranMultiContDist& ). Copy constructor. TUnuranMultiContDist * Clone() const. Clone (required by base class). { return new TUnuranMultiContDist(*this); }. unsigned int NDim() const. get number of dimension of the distribution. void SetDomain(const double* xmin, const double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnuranMultiContDist.html:2663,Inherit,Inheritance,2663,root/html534/TUnuranMultiContDist.html,https://root.cern,https://root.cern/root/html534/TUnuranMultiContDist.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tTWbox::GetLightColor() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTBox::GetX2() const; Double_tTBox::GetY1() const; Double_tTBox::GetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBox::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFrame.html:3203,Inherit,InheritsFrom,3203,root/html532/TFrame.html,https://root.cern,https://root.cern/root/html532/TFrame.html,4,['Inherit'],['InheritsFrom']
Modifiability,"n() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tTWbox::GetLightColor() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTBox::GetX1() const; Double_tTBox::GetX2() const; Double_tTBox::GetY1() const; Double_tTBox::GetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTBox::HideToolTip(Int_t event); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTBox::IsBeingResized() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Int_tTBox::IsInside(Double_t x, Double_t y) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTBox::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFrame.html:3177,Inherit,InheritsFrom,3177,root/html602/TFrame.html,https://root.cern,https://root.cern/root/html602/TFrame.html,4,['Inherit'],['InheritsFrom']
Modifiability,"n() const; virtual voidGetTextAdvance(UInt_t& a, const char* text, const Bool_t kern = kTRUE) const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidGetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual voidGetTextAscentDescent(UInt_t& a, UInt_t& d, const wchar_t* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidGetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual voidGetTextExtent(UInt_t& w, UInt_t& h, const wchar_t* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const void*GetWcsTitle() const; Double_tGetX() const; Double_tGetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TText.html:3924,Inherit,InheritsFrom,3924,root/html534/TText.html,https://root.cern,https://root.cern/root/html534/TText.html,1,['Inherit'],['InheritsFrom']
Modifiability,"n() const; virtual voidGetTextAdvance(UInt_t& a, const char* text, const Bool_t kern = kTRUE) const; virtual Short_tTAttText::GetTextAlign() const; virtual Float_tTAttText::GetTextAngle() const; virtual voidGetTextAscentDescent(UInt_t& a, UInt_t& d, const char* text) const; virtual voidGetTextAscentDescent(UInt_t& a, UInt_t& d, const wchar_t* text) const; virtual Color_tTAttText::GetTextColor() const; virtual voidGetTextExtent(UInt_t& w, UInt_t& h, const char* text) const; virtual voidGetTextExtent(UInt_t& w, UInt_t& h, const wchar_t* text) const; virtual Font_tTAttText::GetTextFont() const; virtual Float_tTAttText::GetTextSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const void*GetWcsTitle() const; Double_tGetX() const; Double_tGetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttText::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TText.html:3816,Inherit,InheritsFrom,3816,root/html602/TText.html,https://root.cern,https://root.cern/root/html602/TText.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooRealVar*_chi2Chi^2 of function w.r.t. data; RooRealVar*_chi2redReduced Chi^2 w.r.t data; RooDataSet*_dataSummary dataset to store results; RooRealVar*_ndofNumber of degrees of freedom; RooRealVar*_probProbability of chi^2,nDOF combination. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooChi2MCSModule(); Constructor of module. RooChi2MCSModule(const RooChi2MCSModule& other); Copy constructor. Bool_t initializeInstance(); Initialize module after attachment to RooMCStudy object. Bool_t initializeRun(Int_t ); Initialize module at beginning of RooCMStudy run. RooDataSet* finalizeRun(); Return auxiliary dataset with results of chi2 analysis; calculations of this module so that it is merged with; RooMCStudy::fitParDataSet() by RooMCStudy. Bool_t processAfterFit(Int_t ); Bin dataset and calculate chi2 of p.d.f w.r.t binned dataset. virtual ~RooChi2MCSModule(). » Last changed: Tue Jun 2 15:29:55 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooChi2MCSModule.html:7838,Inherit,Inheritance,7838,root/html604/RooChi2MCSModule.html,https://root.cern,https://root.cern/root/html604/RooChi2MCSModule.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n(). RooAbsPdf * RooProjectedPdf::createProjection ; (; const RooArgSet & ; iset). overridevirtual . Special version of RooAbsReal::createProjection that deals with projections of projections. ; Instead of integrating twice, a new RooProjectedPdf is returned that is configured to perform the complete integration in one step ; Reimplemented from RooAbsPdf.; Definition at line 145 of file RooProjectedPdf.cxx. ◆ DeclFileName(). static const char * RooProjectedPdf::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 73 of file RooProjectedPdf.h. ◆ evaluate(). double RooProjectedPdf::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate projected p.d.f. ; Implements RooAbsReal.; Reimplemented in xRooProjectedPdf.; Definition at line 94 of file RooProjectedPdf.cxx. ◆ expectedEvents(). double RooProjectedPdf::expectedEvents ; (; const RooArgSet * ; nset); const. inlineoverridevirtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented from RooAbsPdf.; Reimplemented in xRooProjectedPdf.; Definition at line 46 of file RooProjectedPdf.h. ◆ extendMode(). ExtendMode RooProjectedPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Reimplemented in xRooProjectedPdf.; Definition at line 47 of file RooProjectedPdf.h. ◆ forceAnalyticalInt(). bool RooProjectedPdf::forceAnalyticalInt ; (; const RooAbsArg & ; dep); const. overridevirtual . Force RooRealIntegral to relegate integration of all observables to internal logic. ; Reimplemented from RooAbsReal.; Definition at line 157 of file RooProjectedPdf.cxx. ◆ getAnalytic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:77567,extend,extended,77567,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['extend'],['extended']
Modifiability,"n(); TMVA::GeneticPopulation&operator=(const TMVA::GeneticPopulation&); voidPrint(Int_t untilIndex = -1); voidPrint(ostream& out, Int_t utilIndex = -1); voidSetRandomSeed(UInt_t seed = 0); virtual voidShowMembers(TMemberInspector& insp); voidSort(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidTrimPopulation(); vector<Double_t>VariableDistribution(Int_t varNumber); TH1F*VariableDistribution(Int_t varNumber, Int_t bins, Int_t min, Int_t max). private:. TMVA::MsgLogger&Log() const; TMVA::GeneticGenesMakeSex(TMVA::GeneticGenes male, TMVA::GeneticGenes female). Data Members; private:. vector<TMVA::GeneticGenes>fGenePoolthe ""genePool"" where the individuals of the current generation are stored; TMVA::MsgLogger*fLoggermessage logger; Int_tfPopulationSizeLimit; TRandom3*fRandomGeneratorrandom Generator for this population; vector<TMVA::GeneticRange*>fRangescontains the ranges inbetween the values of the coefficients have to be. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticPopulation(const vector<TMVA::Interval*>& ranges, Int_t size, UInt_t seed = 0); Constructor. ~GeneticPopulation(); destructor. void SetRandomSeed(UInt_t seed = 0); the random seed of the random generator. void MakeCopies(int number); produces offspring which is are copies of their parents; Parameters:; int number : the number of the last individual to be copied. void MakeChildren(); does what the name says,... it creates children out of members of the; current generation; children have a combination of the coefficients of their parents. TMVA::GeneticGenes MakeSex(TMVA::GeneticGenes male, TMVA::GeneticGenes female); this function takes two individuals and produces offspring by mixing (recombining) their; coefficients. void Mutate(Double_t probability = 20, Int_t startIndex = 0, Bool_t near = kFALSE, Double_t spread = 0.1, Bool_t mirror = kFALSE); mutates the individuals in the genePool; Parameters:; double probability : gives the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__GeneticPopulation.html:2284,Inherit,Inheritance,2284,root/html532/TMVA__GeneticPopulation.html,https://root.cern,https://root.cern/root/html532/TMVA__GeneticPopulation.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; TList*GetListForObject(const char* name) const; TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRehashLevel() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THashTable.html:3659,Inherit,InheritsFrom,3659,root/html532/THashTable.html,https://root.cern,https://root.cern/root/html532/THashTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; TList*GetListForObject(const char* name) const; TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetRehashLevel() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THashTable.html:3691,Inherit,InheritsFrom,3691,root/html602/THashTable.html,https://root.cern,https://root.cern/root/html602/THashTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n(22); l.SetTextSize(h);; l.DrawLatex((x1+x2)/2, (y1+y2)/2, Form(""%d"",pat));; } . Function Members (Methods); public:. TAttFill(); TAttFill(const TAttFill&); TAttFill(Color_t fcolor, Style_t fstyle); virtual~TAttFill(); static TClass*Class(); voidCopy(TAttFill& attfill) const; virtual Color_tGetFillColor() const; virtual Style_tGetFillStyle() const; virtual TClass*IsA() const; virtual Bool_tIsTransparent() const; virtual voidModify(); TAttFill&operator=(const TAttFill&); virtual voidResetAttFill(Option_t* option = """"); virtual voidSaveFillAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1001); virtual voidSetFillAttributes()MENU ; virtual voidSetFillColor(Color_t fcolor); virtual voidSetFillStyle(Style_t fstyle); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Color_tfFillColorfill area color; Style_tfFillStylefill area style. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttFill(); AttFill default constructor.; Default fill attributes are taking from the current style. TAttFill(Color_t fcolor, Style_t fstyle); AttFill normal constructor.; color Fill Color; style Fill Style. ~TAttFill(); AttFill destructor. void Copy(TAttFill& attfill) const; Copy this fill attributes to a new TAttFill. void Modify(); Change current fill area attributes if necessary. void ResetAttFill(Option_t* option = """"); Reset this fill attributes to default values. void SaveFillAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1001); Save fill attributes as C++ statement(s) on output stream out. void SetFillAttributes(); Invoke the DialogCanvas Fill attributes. Bool_t IsTransparent() const; { return fFillStyle >= 4000 && fFillStyle <= 4100 ? kTRUE : kFALSE; }. TAttFill(). Color_t GetFillColor() const; { return fFillColor; }. Style_t GetFillStyle() const; { return fFillStyle; }. void SetFillColor(Color_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAttFill.html:6580,Inherit,Inheritance,6580,root/html532/TAttFill.html,https://root.cern,https://root.cern/root/html532/TAttFill.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n(Int_t ivar) const; const TString&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<std::vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<std::vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; UInt_tTMVA::MethodBase::GetNEvents() const; Int_tGetNNodes(); Int_tGetNNodesBeforePruning(); UInt_tTMVA::MethodBase::GetNTargets() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual Double_tTMVA::MethodBase::GetProba(const TMVA::Event* ev); virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; Double_tGetPruneStrength(); virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(); const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(const TMVA::Event *const ev); Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1D* histS, TH1D* histB) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; virtual Double_tTMVA::MethodBase::GetSeparation(TH1*, TH1*) const; virtual Double_tTMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:7833,Config,Configurable,7833,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,1,['Config'],['Configurable']
Modifiability,"n(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; virtual bool selfNormalized () const;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenericPdf.html:14313,config,configuration,14313,doc/master/classRooGenericPdf.html,https://root.cern,https://root.cern/doc/master/classRooGenericPdf.html,1,['config'],['configuration']
Modifiability,"n(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const. void AddRegressionOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddMulticlassOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void NoErrorCalc(Double_t *const err, Double_t *const errUpper). Double_t GetMvaValue(const TMVA::Event *const ev, Double_t* err = 0, Double_t* errUpper = 0). Bool_t IsSignalLike(); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event would be selected as signal or background. Bool_t IsSignalLike(Double_t mvaVal); uses a pre-set cut on the MVA output (SetSignalReferenceCut and SetSignalReferenceCutOrientation); for a quick determination if an event with this mva output value would tbe selected as signal or background. void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample. bias = average deviation; dev = average absolute deviation; rms = rms of deviation. void TestMulticlass(); test multiclass classification. void TestClassification(); initialization. void WriteStateToStream(ostream& tf) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void AddInfoItem(void* gi, const TString& name, const TString& value) const; xml writing. void AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType anal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:23611,variab,variable,23611,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,2,['variab'],['variable']
Modifiability,"n(const Double_t* x, Bool_t allocate = kTRUE); Long64_tGetBin(const char** name, Bool_t allocate = kTRUE); Double_tGetBinContent(const Int_t* idx) const; Double_tGetBinContent(Long64_t bin, Int_t* idx = 0) const; Double_tGetBinError(const Int_t* idx) const; Double_tGetBinError(Long64_t linidx) const; Bool_tGetCalculateErrors() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEntries() const; virtual const char*TObject::GetIconName() const; TObjArray*GetListOfAxes(); TList*GetListOfFunctions(); virtual const char*TNamed::GetName() const; Long64_tGetNbins() const; Int_tGetNChunks() const; Int_tGetNdimensions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetRandom(Double_t* rand, Bool_t subBinRandom = kTRUE); Double_tGetSparseFractionBins() const; Double_tGetSparseFractionMem() const; Double_tGetSumw() const; Double_tGetSumw2() const; Double_tGetSumwx(Int_t dim) const; Double_tGetSumwx2(Int_t dim) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetWeightSum() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); voidMultiply(const THnSparse* h); voidMultiply(TF1* f, Double_t c = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THnSparse.html:8473,Inherit,InheritsFrom,8473,root/html532/THnSparse.html,https://root.cern,https://root.cern/root/html532/THnSparse.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fValues.size(); }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total number of free parameters. { return fObjFunc->NDim(); }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLMinimizer.html:7162,variab,variables,7162,root/html528/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLMinimizer.html,4,['variab'],['variables']
Modifiability,"n(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool SetVariableStepSize(unsigned int ivar, double step); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings& varObj) const; get variable settings in a variable object (like ROOT::Fit::Par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html:7653,variab,variables,7653,root/html534/ROOT__Math__BasicMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html,6,['variab'],['variables']
Modifiability,"n(const char* name = """", const char* alias = ""-empty-"", Bool_t cut = kFALSE)MENU ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TTVLVEntry*fItempointer to associated item. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGItemContext(); Constructor. void Draw(Option_t* option = """"); Draw item. void EditExpression(); Edit expression. void Empty(); Empty item. void RemoveItem(); Remove item. void Scan(); Scan item. void SetExpression(const char* name = """", const char* alias = ""-empty-"", Bool_t cut = kFALSE); Set item expression. TGItemContext(). virtual ~TGItemContext(); { }. void Associate(TTVLVEntry* item); { fItem = item; }. void Delete(Option_t* ); { }. » Last changed: root/treeviewer:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGItemContext.html:5447,Inherit,Inheritance,5447,root/html534/TGItemContext.html,https://root.cern,https://root.cern/root/html534/TGItemContext.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n(const char* varexp); voidSyncFormulas(). Data Members; private:. TEntryList*fEntriesCurrently active entries; Long64_tfEntryPresent entry number in fTree.; Long64_tfFirstEntryFirst entry.; Bool_tfForceDimForce dimension.; TList*fFormulasArray of TTreeFormulas to display values; TList*fInputUsed for fSelector.; TTreeFormulaManager*fManagerCoordinator for the formulas.; UInt_tfNColumnsAmount of columns in the data; Long64_tfNEntriesNumber of entries in the tree.; UInt_tfNRowsAmount of rows in the data; TTreeFormula*fSelectSelection condition; TSelectorDraw*fSelectorSelector; TTree*fTreeData in a TTree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeTableInterface(TTree* tree = 0, const char* varexp = 0, const char* selection = 0, Option_t* option = 0, Long64_t nentries = 0, Long64_t firstentry = 0); TTreeTableInterface constructor. ~TTreeTableInterface(); TTreeTableInterface destructor. void SetVariablesExpression(const char* varexp); Compile the variables expression from the given varexp. void SetSelection(const char* selection); Set the selection expression. void SyncFormulas(); Sync the formulas using the TTreeFormulaManager. void InitEntries(); Initialise the TEntryList with the entries that match the; selection criterium. Double_t GetValue(UInt_t row, UInt_t column); Return the value of row,column. If the position does not exist; or does not contain a number, 0 is returned. const char * GetValueAsString(UInt_t row, UInt_t column); Return the content of row,column as string to use in a; TGTableCell label. const char * GetRowHeader(UInt_t row); Return a string to use as a label for rowheader at column. const char * GetColumnHeader(UInt_t column); Return a string to use as a label for columnheader at column. UInt_t GetNColumns(); Return the amount of column available. UInt_t GetNRows(); Return the amount of rows in the Tree. void AddColumn(const char* expression, UInt_t position); Add column according ot expression a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeTableInterface.html:3285,variab,variables,3285,root/html528/TTreeTableInterface.html,https://root.cern,https://root.cern/root/html528/TTreeTableInterface.html,6,['variab'],['variables']
Modifiability,"n) ; Definition at line 987 of file MethodCuts.cxx. ◆ MatchCutsToPars() [2/2]. void TMVA::MethodCuts::MatchCutsToPars ; (; std::vector< Double_t > & ; pars, . Double_t * ; cutMin, . Double_t * ; cutMax . ). private . translates cuts into parameters ; Definition at line 1009 of file MethodCuts.cxx. ◆ MatchParsToCuts() [1/2]. void TMVA::MethodCuts::MatchParsToCuts ; (; const std::vector< Double_t > & ; pars, . Double_t * ; cutMin, . Double_t * ; cutMax . ). private . translates parameters into cuts ; Definition at line 974 of file MethodCuts.cxx. ◆ MatchParsToCuts() [2/2]. void TMVA::MethodCuts::MatchParsToCuts ; (; Double_t * ; , . Double_t * ; , . Double_t * ;  . ). private . ◆ PrintCuts(). void TMVA::MethodCuts::PrintCuts ; (; Double_t ; effS); const. print cuts ; Definition at line 465 of file MethodCuts.cxx. ◆ ProcessOptions(). void TMVA::MethodCuts::ProcessOptions ; (; ). virtual . process user options. ; sanity check, do not allow the input variables to be normalised, because this only creates problems when interpreting the cuts ; Implements TMVA::MethodBase.; Definition at line 363 of file MethodCuts.cxx. ◆ ReadWeightsFromStream() [1/3]. virtual void TMVA::MethodBase::ReadWeightsFromStream ; (; std::istream & ; ). virtual . Implements TMVA::MethodBase. ◆ ReadWeightsFromStream() [2/3]. void TMVA::MethodCuts::ReadWeightsFromStream ; (; std::istream & ; i). virtual . read the cuts from stream ; Implements TMVA::MethodBase.; Definition at line 1217 of file MethodCuts.cxx. ◆ ReadWeightsFromStream() [3/3]. virtual void TMVA::MethodBase::ReadWeightsFromStream ; (; TFile & ; ). inlinevirtual . Reimplemented from TMVA::MethodBase.; Definition at line 266 of file MethodBase.h. ◆ ReadWeightsFromXML(). void TMVA::MethodCuts::ReadWeightsFromXML ; (; void * ; wghtnode). virtual . read coefficients from xml weight file ; Implements TMVA::MethodBase.; Definition at line 1327 of file MethodCuts.cxx. ◆ SetTestSignalEfficiency(). void TMVA::MethodCuts::SetTestSignalEfficiency ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:45995,variab,variables,45995,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['variab'],['variables']
Modifiability,"n). This function sets the direction of the transform: . direction (forward or inverse) . Definition at line 2762 of file TSpectrum2Transform.cxx. ◆ SetEnhanceCoeff(). void TSpectrum2Transform::SetEnhanceCoeff ; (; Double_t ; enhanceCoeff). This function sets the enhancement coefficient: . enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation. . Definition at line 2784 of file TSpectrum2Transform.cxx. ◆ SetFilterCoeff(). void TSpectrum2Transform::SetFilterCoeff ; (; Double_t ; filterCoeff). This function sets the filter coefficient: . filterCoeff - after the transform the filtered region (xmin, xmax, ymin, ymax) is replaced by this coefficient. Applies only for filtereng operation. . Definition at line 2775 of file TSpectrum2Transform.cxx. ◆ SetRegion(). void TSpectrum2Transform::SetRegion ; (; Int_t ; xmin, . Int_t ; xmax, . Int_t ; ymin, . Int_t ; ymax . ). This function sets the filtering or enhancement region: . xmin, xmax, ymin, ymax . Definition at line 2742 of file TSpectrum2Transform.cxx. ◆ SetTransformType(). void TSpectrum2Transform::SetTransformType ; (; Int_t ; transType, . Int_t ; degree . ). This function sets the following parameters for transform: . transType - type of transform (Haar, Walsh, Cosine, Sine, Fourier, Hartley, Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar); degree - degree of mixed transform, applies only for Fourier-Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sine-Walsh, Sine-Haar transforms . Definition at line 2709 of file TSpectrum2Transform.cxx. ◆ Streamer(). void TSpectrum2Transform::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TSpectrum2Transform::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 73 of file TSpectrum2Transform.h. ◆ Tra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:29020,enhance,enhancement,29020,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['enhance'],['enhancement']
Modifiability,"n); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidSetMinNodeSize(Double_t sizeInPercent); voidSetMinNodeSize(TString sizeInPercent); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodDT.html:14928,Config,Configurable,14928,root/html602/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodDT.html,2,['Config'],['Configurable']
Modifiability,"n); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidSetMinNodeSize(Double_t sizeInPercent); voidSetMinNodeSize(TString sizeInPercent); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:14317,Config,Configurable,14317,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,1,['Config'],['Configurable']
Modifiability,"n*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BasicMinimizer(). Default constructor. virtual ~BasicMinimizer(). Destructor. BasicMinimizer(const ROOT::Math::BasicMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool SetVariableStepSize(unsigned int ivar, double step); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html:7137,variab,variable,7137,root/html534/ROOT__Math__BasicMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__BasicMinimizer.html,6,['variab'],['variable']
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoBBoxEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for volume editor. ~TGeoBBoxEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Update editor for a new selected box. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current parameters. void DoModified(); Slot for modifying current parameters. void DoUndo(); Slot for undoing last operation. void DoDx(); Slot for Dx modification. void DoDy(); Slot for Dy modification. void DoDz(); Slot for Dz modification. void DoOx(); Slot for Ox modification. void DoOy(); Slot for Oy modification. void DoOz(); Slot for Oz modification. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoBBoxEditor.html:20806,Inherit,Inheritance,20806,root/html534/TGeoBBoxEditor.html,https://root.cern,https://root.cern/root/html534/TGeoBBoxEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoBBoxEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for volume editor. ~TGeoBBoxEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Update editor for a new selected box. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current parameters. void DoModified(); Slot for modifying current parameters. void DoUndo(); Slot for undoing last operation. void DoDx(); Slot for Dx modification. void DoDy(); Slot for Dy modification. void DoDz(); Slot for Dz modification. void DoOx(); Slot for Ox modification. void DoOy(); Slot for Oy modification. void DoOz(); Slot for Oz modification. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoBBoxEditor.h 20882 2007",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoBBoxEditor.html:20787,Inherit,Inheritance,20787,root/html532/TGeoBBoxEditor.html,https://root.cern,https://root.cern/root/html532/TGeoBBoxEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoCombiTransEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for combi matrix editor. ~TGeoCombiTransEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected combi matrix. void DoName(); Slot for name. void DoRotPhi(); Slot for phi (Euler X convention). void DoRotTheta(); Slot for theta (Euler X convention). void DoRotPsi(); Slot for psi (Euler X convention). void DoRotAngle(); Slot for additional rotation about one axis. Bool_t DoParameters(); Slot for checking parameters. void DoApply(); Slot for applying modifications. void DoCancel(); Slot for cancelling last un-applied operations. void DoModified(); Slot for notifying changes. void DoUndo(); Slot for undoing last changes. void DoDx(); Slot for X. void DoDy(); Slot for Y. void DoDz(); Slot for Z. » Autho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCombiTransEditor.html:21357,Inherit,Inheritance,21357,root/html532/TGeoCombiTransEditor.html,https://root.cern,https://root.cern/root/html532/TGeoCombiTransEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoConeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for volume editor. ~TGeoConeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current parameters. void DoModified(); Slot for modifing current parameters. void DoUndo(); Slot for undoing current operation. void DoRmin1(); Slot for Rmin1. void DoRmax1(); Slot for Rmax1. void DoRmin2(); Slot for Rmin2. void DoRmax2(); Slot for Rmax2. void DoDz(); Slot for Dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:38; This page has been automatically generated. For comments or suggestions reg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoConeEditor.html:20966,Inherit,Inheritance,20966,root/html534/TGeoConeEditor.html,https://root.cern,https://root.cern/root/html534/TGeoConeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoConeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for volume editor. ~TGeoConeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current parameters. void DoModified(); Slot for modifing current parameters. void DoUndo(); Slot for undoing current operation. void DoRmin1(); Slot for Rmin1. void DoRmax1(); Slot for Rmax1. void DoRmin2(); Slot for Rmin2. void DoRmax2(); Slot for Rmax2. void DoDz(); Slot for Dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoConeEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:16; This page has been automa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoConeEditor.html:20947,Inherit,Inheritance,20947,root/html532/TGeoConeEditor.html,https://root.cern,https://root.cern/root/html532/TGeoConeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoEltuEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for para editor. ~TGeoEltuEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. void DoName(); Slot for name. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoA(); Slot for A. void DoB(); Slot for B. void DoDz(); Slot for Z. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoEltuEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoEltuEditor.html:20619,Inherit,Inheritance,20619,root/html532/TGeoEltuEditor.html,https://root.cern,https://root.cern/root/html532/TGeoEltuEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoHypeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for Hype editor. ~TGeoHypeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoRin(); Slot for Rin. void DoRout(); Slot for Rout. void DoDz(); Slot for Z. void DoStIn(); Slot for StIn. void DoStOut(); Slot for StOut. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:39; This page has been automatically generated. For comments or suggestions regarding the documenta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHypeEditor.html:20844,Inherit,Inheritance,20844,root/html534/TGeoHypeEditor.html,https://root.cern,https://root.cern/root/html534/TGeoHypeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoHypeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for Hype editor. ~TGeoHypeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoRin(); Slot for Rin. void DoRout(); Slot for Rout. void DoDz(); Slot for Z. void DoStIn(); Slot for StIn. void DoStOut(); Slot for StOut. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoHypeEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:16; This page has been automatically generated. F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoHypeEditor.html:20825,Inherit,Inheritance,20825,root/html532/TGeoHypeEditor.html,https://root.cern,https://root.cern/root/html532/TGeoHypeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoMediumEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for medium editor. ~TGeoMediumEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. void DoEditMaterial(); Edit selected material. void DoMedName(); Slot for medium name. void DoMedId(); Slot for medium id. void DoSelectMaterial(); Select the material component. void DoToggleSensitive(); Slot for sensitivity. void DoMagfldSelect(Int_t ientry); Slot for mag. field. void DoFieldm(); Slot for max field. void DoTmaxfd(); Slot for tmaxfd. void DoStemax(); Slot for the max allowed step. void DoDeemax(); Slot for the maximum allowed dedx. void DoEpsil(); Slot for tracking precision. void DoStmin(); Slot for min. step. void DoApply(); Slot for applying modifications. void DoUndo(); Slot for undoing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMediumEditor.html:21116,Inherit,Inheritance,21116,root/html532/TGeoMediumEditor.html,https://root.cern,https://root.cern/root/html532/TGeoMediumEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNodeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for node editor. ~TGeoNodeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to a editable object. void DoSelectMother(); Select the mother volume. void DoSelectVolume(); Select the volume. void DoSelectMatrix(); Select the matrix. void DoEditMother(); Edit the mother volume. void DoEditVolume(); Edit selected volume. void DoEditMatrix(); Edit selected material. void DoNodeName(); Change node name. void DoNodeNumber(); Change node copy number. void DoApply(); Slot for applying modifications. void DoUndo(); Slot for undoing last operation. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:39; This page has been automatically generat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNodeEditor.html:21026,Inherit,Inheritance,21026,root/html534/TGeoNodeEditor.html,https://root.cern,https://root.cern/root/html534/TGeoNodeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoNodeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for node editor. ~TGeoNodeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to a editable object. void DoSelectMother(); Select the mother volume. void DoSelectVolume(); Select the volume. void DoSelectMatrix(); Select the matrix. void DoEditMother(); Edit the mother volume. void DoEditVolume(); Edit selected volume. void DoEditMatrix(); Edit selected material. void DoNodeName(); Change node name. void DoNodeNumber(); Change node copy number. void DoApply(); Slot for applying modifications. void DoUndo(); Slot for undoing last operation. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoNodeEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoNodeEditor.html:21007,Inherit,Inheritance,21007,root/html532/TGeoNodeEditor.html,https://root.cern,https://root.cern/root/html532/TGeoNodeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoRotationEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for rotation editor. ~TGeoRotationEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected rotation. void DoName(); Slot for name. void DoRotPhi(); Slot for phi (Euler X convention). void DoRotTheta(); Slot for theta (Euler X convention). void DoRotPsi(); Slot for psi (Euler X convention). void DoRotAngle(); Slot for additional rotation about one axis. Bool_t DoParameters(); Slot for checking parameters. void DoApply(); Slot for applying modifications. void DoCancel(); Slot for cancelling last un-applied operations. void DoModified(); Slot for notifying changes. void DoUndo(); Slot for undoing last changes. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoRotationEditor.html:21098,Inherit,Inheritance,21098,root/html532/TGeoRotationEditor.html,https://root.cern,https://root.cern/root/html532/TGeoRotationEditor.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoSphereEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for sphere editor. ~TGeoSphereEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to a given sphere. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoRmin(); Slot for Rmin. void DoRmax(); Slot for Rmax. void DoPhi1(); Slot for phi1. void DoPhi2(); Slot for phi2. void DoPhi(); Slot for phi slider. void DoTheta1(); Slot for theta1. void DoTheta2(); Slot for theta2. void DoTheta(); Slot for theta slider. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoSphereEditor.html:21087,Inherit,Inheritance,21087,root/html534/TGeoSphereEditor.html,https://root.cern,https://root.cern/root/html534/TGeoSphereEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoSphereEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for sphere editor. ~TGeoSphereEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to a given sphere. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoRmin(); Slot for Rmin. void DoRmax(); Slot for Rmax. void DoPhi1(); Slot for phi1. void DoPhi2(); Slot for phi2. void DoPhi(); Slot for phi slider. void DoTheta1(); Slot for theta1. void DoTheta2(); Slot for theta2. void DoTheta(); Slot for theta slider. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoSphereEditor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoSphereEditor.html:21068,Inherit,Inheritance,21068,root/html532/TGeoSphereEditor.html,https://root.cern,https://root.cern/root/html532/TGeoSphereEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTorusEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for torus editor. ~TGeoTorusEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoR(); Slot for R. void DoRmin(); Slot for Rmin. void DoRmax(); Slot for Rmax. void DoPhi1(); Slot for phi. void DoDphi(); Slot for Dphi. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the document",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTorusEditor.html:20807,Inherit,Inheritance,20807,root/html534/TGeoTorusEditor.html,https://root.cern,https://root.cern/root/html534/TGeoTorusEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTorusEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for torus editor. ~TGeoTorusEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoR(); Slot for R. void DoRmin(); Slot for Rmin. void DoRmax(); Slot for Rmax. void DoPhi1(); Slot for phi. void DoDphi(); Slot for Dphi. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTorusEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:17; This page has been automatically generated.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTorusEditor.html:20788,Inherit,Inheritance,20788,root/html532/TGeoTorusEditor.html,https://root.cern,https://root.cern/root/html532/TGeoTorusEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTranslationEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for translation editor. ~TGeoTranslationEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the new matrix. void DoName(); Slot for name. Bool_t DoParameters(); Slot for checking parameters. void DoApply(); Slot for applying changes. void DoCancel(); Slot for cancelling last modifications non-applied. void DoModified(); Slot for notifying changes. void DoUndo(); Slot for undoing last operation. void DoDx(); Slot for dx. void DoDy(); Slot for dx. void DoDz(); Slot for dx. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTranslationEditor.html:20718,Inherit,Inheritance,20718,root/html534/TGeoTranslationEditor.html,https://root.cern,https://root.cern/root/html534/TGeoTranslationEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTranslationEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for translation editor. ~TGeoTranslationEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the new matrix. void DoName(); Slot for name. Bool_t DoParameters(); Slot for checking parameters. void DoApply(); Slot for applying changes. void DoCancel(); Slot for cancelling last modifications non-applied. void DoModified(); Slot for notifying changes. void DoUndo(); Slot for undoing last operation. void DoDx(); Slot for dx. void DoDy(); Slot for dx. void DoDz(); Slot for dx. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoMatrixEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTranslationEditor.html:20699,Inherit,Inheritance,20699,root/html532/TGeoTranslationEditor.html,https://root.cern,https://root.cern/root/html532/TGeoTranslationEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTrapEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for para editor. ~TGeoTrapEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoH1(); Slot for H1. void DoBl1(); Slot for Bl1. void DoTl1(); Slot for Tl1. void DoDz(); Slot for Z. void DoSc1(); Slot for H2. void DoSc2(); Slot for H2. void DoAlpha1(); Slot for alpha1. void DoTheta(); Slot for theta. void DoPhi(); Slot for phi. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 201",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTrapEditor.html:21367,Inherit,Inheritance,21367,root/html534/TGeoTrapEditor.html,https://root.cern,https://root.cern/root/html534/TGeoTrapEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTrapEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for para editor. ~TGeoTrapEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current settings. void DoModified(); Slot for notifying modifications. void DoUndo(); Slot for undoing last operation. void DoH1(); Slot for H1. void DoBl1(); Slot for Bl1. void DoTl1(); Slot for Tl1. void DoDz(); Slot for Z. void DoSc1(); Slot for H2. void DoSc2(); Slot for H2. void DoAlpha1(); Slot for alpha1. void DoTheta(); Slot for theta. void DoPhi(); Slot for phi. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTrapEditor.h 2088",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTrapEditor.html:21348,Inherit,Inheritance,21348,root/html532/TGeoTrapEditor.html,https://root.cern,https://root.cern/root/html532/TGeoTrapEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTrd1Editor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for trd1 editor. ~TGeoTrd1Editor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoDx1(); Slot for dx1. void DoDx2(); Slot for dx2. void DoDy(); Slot for dy. void DoDz(); Slot for dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please sen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTrd1Editor.html:20658,Inherit,Inheritance,20658,root/html534/TGeoTrd1Editor.html,https://root.cern,https://root.cern/root/html534/TGeoTrd1Editor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTrd1Editor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for trd1 editor. ~TGeoTrd1Editor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoDx1(); Slot for dx1. void DoDx2(); Slot for dx2. void DoDy(); Slot for dy. void DoDz(); Slot for dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTrd1Editor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regardi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTrd1Editor.html:20639,Inherit,Inheritance,20639,root/html532/TGeoTrd1Editor.html,https://root.cern,https://root.cern/root/html532/TGeoTrd1Editor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTrd2Editor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for trd2 editor. ~TGeoTrd2Editor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoDx1(); Slot for dx1. void DoDx2(); Slot for dx2. void DoDy1(); Slot for dy1. void DoDy2(); Slot for dy2. void DoDz(); Slot for dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTrd2Editor.html:20743,Inherit,Inheritance,20743,root/html534/TGeoTrd2Editor.html,https://root.cern,https://root.cern/root/html534/TGeoTrd2Editor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTrd2Editor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for trd2 editor. ~TGeoTrd2Editor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoDx1(); Slot for dx1. void DoDx2(); Slot for dx2. void DoDy1(); Slot for dy1. void DoDy2(); Slot for dy2. void DoDz(); Slot for dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTrd2Editor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTrd2Editor.html:20724,Inherit,Inheritance,20724,root/html532/TGeoTrd2Editor.html,https://root.cern,https://root.cern/root/html532/TGeoTrd2Editor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTubeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for tube editor. ~TGeoTubeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoRmin(); Slot for rmin. void DoRmax(); Slot for rmax. void DoDz(); Slot for dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-03-14 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT suppo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTubeEditor.html:20736,Inherit,Inheritance,20736,root/html534/TGeoTubeEditor.html,https://root.cern,https://root.cern/root/html534/TGeoTubeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fUndoUndo-Button; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTubeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for tube editor. ~TGeoTubeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Perform name change. void DoApply(); Slot for applying modifications. void DoModified(); Slot for signaling modifications. void DoUndo(); Slot for undoing last operation. void DoRmin(); Slot for rmin. void DoRmax(); Slot for rmax. void DoDz(); Slot for dz. » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id: TGeoTubeEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTubeEditor.html:20717,Inherit,Inheritance,20717,root/html532/TGeoTubeEditor.html,https://root.cern,https://root.cern/root/html532/TGeoTubeEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n*fpSysIncFiles; TSeqCollection*fpUsers. Class Charts. Inheritance Chart:. TTabCom. Function documentation; TTabCom(); Default constructor. ~TTabCom(); Destructor. void ClearClasses(); Clear classes and namespace collections. void ClearCppDirectives(); Forget all Cpp directives seen so far. void ClearEnvVars(); Forget all environment variables seen so far. void ClearFiles(); Close all files. void ClearGlobalFunctions(); Forget all global functions seen so far.; Not needed anymore. Use gROOT->GetListOfGlobalFunctions(). void ClearGlobals(); Forget all global variables seen so far.; With teh new implamentation the list is gROOT->GetListOfGlobals(true). void ClearPragmas(); Forget all pragmas seen so far. void ClearSysIncFiles(); Close system files. void ClearUsers(); Forget all user seen so far. void ClearAll(); clears all lists; except for user names and system include files. void RehashClasses(); Do the class rehash. void RehashCppDirectives(); Cpp rehashing. void RehashEnvVars(); Environemnt variables rehashing. void RehashFiles(); Close files. void RehashGlobalFunctions(); Reload global functions. void RehashGlobals(); Reload globals. void RehashPragmas(); Reload pragmas. void RehashSysIncFiles(); Reload system include files. void RehashUsers(); Reload users. void RehashAll(); clears and then rebuilds all lists; except for user names and system include files. const TSeqCollection * GetListOfClasses(); Return the list of classes. const TSeqCollection * GetListOfCppDirectives(); Return the list of CPP directives. const TSeqCollection * GetListOfFilesInPath(const char[] path); ""path"" should be initialized with a colon separated list of; system directories. const TSeqCollection * GetListOfEnvVars(); Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. const TSeqCollection * GetListOfGlobals(); Return the list of globals. TCollection * GetListOfGlobalFunctions(); Return the list of global functions. const TSeqCollection * GetListOfPragmas(); Return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTabCom.html:8437,variab,variables,8437,root/html602/TTabCom.html,https://root.cern,https://root.cern/root/html602/TTabCom.html,4,['variab'],['variables']
Modifiability,"n, Bool_t sparse, Int_t chunkSize=1024 *16);  Create a THnSparse (if ""sparse"") or THn from ""hn"", possibly converting THn <-> THnSparse. ;  . Protected Attributes; TObjArray fAxes;  Axes of the histogram. ;  ; TObjArray fBrowsables;  ! Browser-helpers for each axis ;  ; Double_t fEntries;  Number of entries, spread over chunks. ;  ; std::vector< Double_t > fIntegral;  ! vector with bin weight sums ;  ; enum THnBase:: { ... }  fIntegralStatus;  ! status of integral ;  ; Int_t fNdimensions;  Number of dimensions. ;  ; Double_t fTsumw;  Total sum of weights. ;  ; Double_t fTsumw2;  Total sum of weights squared; -1 if no errors are calculated. ;  ; TArrayD fTsumwx;  Total sum of weight*X for each dimension. ;  ; TArrayD fTsumwx2;  Total sum of weight*X*X for each dimension. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class THnIter;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <THnBase.h>. Inheritance diagram for THnBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. protected . EnumeratorkNoInt ; kValidInt ; kInvalidInt . Definition at line 54 of file THnBase.h. Constructor & Destructor Documentation. ◆ THnBase() [1/5]. THnBase::THnBase ; (; ). inlineprotected . Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnBase.html:19962,inherit,inherited,19962,doc/master/classTHnBase.html,https://root.cern,https://root.cern/doc/master/classTHnBase.html,1,['inherit'],['inherited']
Modifiability,"n, Double_t xmax, Int_t nbinsy, Double_t ymin, Double_t ymax) override;; 146 void SetBins(Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins) override;; 147 void SetBinsLength(Int_t n=-1) override;; 148 void SetBuffer(Int_t buffersize, Option_t *option="""") override;; 149 virtual void SetErrorOption(Option_t *option=""""); // *MENU*; 150 void Sumw2(Bool_t flag = kTRUE) override;; 151 Double_t GetNumberOfBins() { return fBinEntries.GetSize(); }; 152 ; 153 ClassDefOverride(TProfile2D,8) //Profile2D histogram class; 154};; 155 ; 156#endif; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; Long64_tlong long Long64_tDefinition RtypesCore.h:69; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; MayNotUsevoid MayNotUse(const char *method)This function can be used in classes that should override a certain function, but in the inherited cl...Definition TError.cxx:168; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; namechar name[80]Definition TGX11.cxx:110; TH2.h; xminfloat xminDefinition THbookFile.cxx:95; yminfloat yminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; ymaxfloat ymaxDefinition THbookFile.cxx:95; TProfile.h; EErrorTypeEErrorTypeDefinition TProfile.h:28; TArrayDArray of doubles (64 bits per element).Definition TArrayD.h:27; TArrayD::fArrayDouble_t * fArrayDefinition TArrayD.h:30; TArrayD::Resetvoid Reset()Definition TArrayD.h:47; TArray::fNInt_t fNDefinition TArray.h:38; TArray::GetSizeInt_t GetSize() constDefinition TArray.h:47; TAxisClass to manage histogram axis.Definition TAxis.h:31; TCollectionCollection abstract base class.Definition TCollection.h:65; TF11-Dim function classDefinition TF1.h:233; TH1MergerDefinition TH1Merger.h:20; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8h_source.html:9533,inherit,inherited,9533,doc/master/TProfile2D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8h_source.html,1,['inherit'],['inherited']
Modifiability,"n, Float_t ymax, Float_t zmin, Float_t zmax); Bool_tTGLObject::SetModelCheckClass(TObject* obj, TClass* cls). private:. TEveTrackProjectedGL(const TEveTrackProjectedGL&); TEveTrackProjectedGL&operator=(const TEveTrackProjectedGL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TEveTrackProjected*fMModel object.; TEveLine*TEveLineGL::fMfModel dynamic-casted to TEveLineGL; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); TEveTrack*TEveTrackGL::fTrackModel object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackProjectedGL(); Constructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void DirectDraw(TGLRnrCtx& rnrCtx) const; Draw track with GL. TEveTrackProjectedGL(const TEveTrackProjectedGL& ). TEveTrackProjectedGL& operator=(const TEveTrackProjectedGL& ). virtual ~TEveTrackProjectedGL(); {}. » Last changed: root/eve:$Id: TEveTrackProjectedGL.h 21252 2007-12-07 01:39:32Z matevz $ » Last generated: 2011-11-03 20:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTrackProjectedGL.html:4138,Inherit,Inheritance,4138,root/html532/TEveTrackProjectedGL.html,https://root.cern,https://root.cern/root/html532/TEveTrackProjectedGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n, Int_t m, Double_t& a1, Double_t& a2, Double_t nSigma = 1) const; Bool_tgetBinomialIntervalEff(Int_t n, Int_t m, Double_t& a1, Double_t& a2, Double_t nSigma = 1) const; Bool_tgetInterval(const RooAbsFunc* Qu, const RooAbsFunc* Ql, Double_t pointEstimate, Double_t stepSize, Double_t& lo, Double_t& hi, Double_t nSigma) const; Bool_tgetPoissonInterval(Int_t n, Double_t& mu1, Double_t& mu2, Double_t nSigma = 1) const; static const RooHistError&instance(); virtual TClass*IsA() const; RooHistError&operator=(const RooHistError&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. RooHistError(); Bool_tgetPoissonIntervalCalc(Int_t n, Double_t& mu1, Double_t& mu2, Double_t nSigma = 1) const; Double_tseek(const RooAbsFunc& f, Double_t startAt, Double_t step, Double_t value) const. Data Members; private:. Double_t_poissonHiLUT[1000]; Double_t_poissonLoLUT[1000]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const RooHistError & instance(); Return a reference to a singleton object that is created the; first time this method is called. Only one object will be; constructed per ROOT session. RooHistError(); Construct our singleton object. Bool_t getPoissonInterval(Int_t n, Double_t& mu1, Double_t& mu2, Double_t nSigma = 1) const; Return a confidence interval for the expected number of events given n; observed (unweighted) events. The interval will contain the same probability; as nSigma of a Gaussian. Uses a central interval unless this does not enclose; the point estimate n (ie, for small n) in which case the interval is adjusted; to start at n. This method uses a lookup table to return precalculated results; for n<1000. Bool_t getPoissonIntervalCalc(Int_t n, Double_t& mu1, Double_t& mu2, Double_t nSigma = 1) const; Calculate a confidence interval for the expected number of events given n; observed (unweighted) events. The interval will cont",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooHistError.html:1736,Inherit,Inheritance,1736,root/html534/RooHistError.html,https://root.cern,https://root.cern/root/html534/RooHistError.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n, ItWeight itWeightEnd) const;  ; void dE ();  ; template<typename WeightsType , typename DropProbabilities > ; void dropOutWeightFactor (WeightsType &weights, const DropProbabilities &drops, bool inverse=false);  set the drop out configuration ;  ; double E ();  ; template<typename Container , typename ItWeight > ; double errorFunction (LayerData &layerData, Container truth, ItWeight itWeight, ItWeight itWeightEnd, double patternWeight, double factorWeightDecay, EnumRegularization eRegularization) const;  computes the error of the DNN ;  ; template<typename OutputContainer > ; void fetchOutput (const LayerData &lastLayerData, OutputContainer &outputContainer) const;  ; template<typename OutputContainer > ; void fetchOutput (const std::vector< LayerData > &layerPatternData, OutputContainer &outputContainer) const;  ; template<typename LayerContainer , typename PassThrough , typename ItWeight , typename ItGradient , typename OutContainer > ; double forward_backward (LayerContainer &layers, PassThrough &settingsAndBatch, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t trainFromLayer, OutContainer &outputContainer, bool fetchOutput) const;  main NN computation function ;  ; template<typename LayerContainer , typename LayerPatternContainer > ; void forwardBatch (const LayerContainer &_layers, LayerPatternContainer &layerPatternData, std::vector< double > &valuesMean, std::vector< double > &valuesStdDev, size_t trainFromLayer) const;  ; template<typename LayerContainer > ; void forwardPattern (const LayerContainer &_layers, std::vector< LayerData > &layerData) const;  ; template<typename OutIterator > ; void initializeWeights (WeightInitializationStrategy eInitStrategy, OutIterator itWeight);  initialize the weights with the given strategy ;  ; size_t inputSize () const;  input size of the DNN ;  ; std::vector< Layer > & layers ();  returns the layers (structure) ;  ; const std::vector< Layer > & layers () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:2454,layers,layers,2454,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['layers'],['layers']
Modifiability,"n, TCanvas* canvas); virtual~TQCanvasMenu(); static TClass*Class(); char*CreateArgumentTitle(TMethodArg* argument); char*CreateDialogTitle(TObject* object, TMethod* method); voidDialog(TObject* obj, TMethod* method); voidExecute(int id); virtual TClass*IsA() const; voidPopup(TObject* obj, double x, double y, QMouseEvent* e); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). private:. TQCanvasMenu(const TQCanvasMenu& c); TQCanvasMenu&operator=(const TQCanvasMenu&). Data Members; protected:. TObject*fCurrObjcurrent selected object; TQRootDialog*fDialogthe TQRootDialog which is used to prompt for; TListfMethodslist of Root metheds associated with the selected object; doublefMousePosXmouse position in user coordinate; doublefMousePosYmouse position in user coordinate; QWidget*fParent; QPopupMenu*fPopupQt popup menu; QWidget*fTabWinparents widgets; TCanvas*fcpointer to the ROOT canvas. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQCanvasMenu(QWidget* parent = 0, TCanvas* canvas = 0); ctor, create the popup menu. TQCanvasMenu(QWidget* parent, QWidget* tabWin, TCanvas* canvas); ctor, create the popup menu. ~TQCanvasMenu(); dtor. char * CreateDialogTitle(TObject* object, TMethod* method); Create title for dialog box retrieving argument values. char * CreateArgumentTitle(TMethodArg* argument); Create string describing argument (for use in dialog box). void Popup(TObject* obj, double x, double y, QMouseEvent* e); Perform the corresponding selected TObject popup; in the position defined; by x, y coordinates (in user coordinate system).; @param obj (TObject*); @param p (QPoint&). void Execute(int id); Slot defined to execute a method from a selected TObject; using TObject::Execute() function. void Dialog(TObject* obj, TMethod* method); Create dialog object with OK and Cancel buttons. This dialog; prompts for the arguments of ""method"". TQCanvasMenu(const TQCanvasMenu&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQCanvasMenu.html:1409,Inherit,Inheritance,1409,root/html532/TQCanvasMenu.html,https://root.cern,https://root.cern/root/html532/TQCanvasMenu.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n, const char* rangeName = 0); virtual voidRooAbsRealLValue::setBin(Int_t ibin, const RooAbsBinning& binning); virtual voidRooAbsRealLValue::setBinFast(Int_t ibin, const RooAbsBinning& binning); voidsetBinning(const RooAbsBinning& binning, const char* name = 0); voidsetBins(Int_t nBins, const char* name = 0); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidRooAbsRealLValue::setConstant(Bool_t value = kTRUE); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetError(Double_t value); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetMax(Double_t value); voidsetMax(const char* name, Double_t value); voidsetMin(Double_t value); voidsetMin(const char* name, Double_t value); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidsetRange(Double_t min, Double_t max); voidsetRange(RooAbsReal& min, RooAbsReal& max); voidsetRange(const char* name, Double_t min, Double_t max); voidsetRange(const char* name, RooAbsReal& min, RooAbsReal& max); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealVar.html:28386,config,config,28386,root/html532/RooRealVar.html,https://root.cern,https://root.cern/root/html532/RooRealVar.html,2,['config'],['config']
Modifiability,"n, const char* rangeName = 0); virtual voidRooAbsRealLValue::setBin(Int_t ibin, const RooAbsBinning& binning); virtual voidRooAbsRealLValue::setBinFast(Int_t ibin, const RooAbsBinning& binning); voidsetBinning(const RooAbsBinning& binning, const char* name = 0); voidsetBins(Int_t nBins, const char* name = 0); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidRooAbsRealLValue::setConstant(Bool_t value = kTRUE); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetError(Double_t value); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetMax(Double_t value); voidsetMax(const char* name, Double_t value); voidsetMin(Double_t value); voidsetMin(const char* name, Double_t value); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidsetRange(Double_t min, Double_t max); voidsetRange(RooAbsReal& min, RooAbsReal& max); voidsetRange(const char* name, Double_t min, Double_t max); voidsetRange(const char* name, RooAbsReal& min, RooAbsReal& max); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooRealVar.html:27891,config,config,27891,root/html530/RooRealVar.html,https://root.cern,https://root.cern/root/html530/RooRealVar.html,1,['config'],['config']
Modifiability,"n, if specified ;  ; Int_t fNy0 {0};  size of the fY0 dataset ;  ; Double_t fXq1 {0.};  x1 coordinate of the interquartile line ;  ; Double_t fXq2 {0.};  x2 coordinate of the interquartile line ;  ; Double_t * fY0 {nullptr};  ! second dataset, if specified ;  ; Double_t fYq1 {0.};  y1 coordinate of the interquartile line ;  ; Double_t fYq2 {0.};  y2 coordinate of the interquartile line ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphQQ.html:32942,inherit,inherited,32942,doc/master/classTGraphQQ.html,https://root.cern,https://root.cern/doc/master/classTGraphQQ.html,2,['inherit'],['inherited']
Modifiability,"n,; 6171 selectionFileName,; 6172 targetLibName,; 6173 multidict,; 6174 pcmsNames,; 6175 includes,; 6176 preprocDefines,; 6177 preprocUndefines,; 6178 warnings,; 6179 rootmapFileName,; 6180 rootmapLibName,; 6181 interpreteronly,; 6182 doSplit,; 6183 isCxxmodule,; 6184 writeEmptyRootPCM,; 6185 selSyntaxOnly,; 6186 noIncludePaths,; 6187 noGlobalUsingStd,; 6188 headersNames,; 6189 failOnWarnings,; 6190 printRootclingInvocation,; 6191 ofileName);; 6192 } else {; 6193 // Here ofilename is either """" or a directory: this is irrelevant.; 6194 returnValue = invokeManyRootCling(verbosityOption,; 6195 selectionFileName,; 6196 targetLibName,; 6197 multidict,; 6198 pcmsNames,; 6199 includes,; 6200 preprocDefines,; 6201 preprocUndefines,; 6202 warnings,; 6203 rootmapFileName,; 6204 rootmapLibName,; 6205 interpreteronly,; 6206 doSplit,; 6207 isCxxmodule,; 6208 writeEmptyRootPCM,; 6209 selSyntaxOnly,; 6210 noIncludePaths,; 6211 noGlobalUsingStd,; 6212 headersNames,; 6213 failOnWarnings,; 6214 printRootclingInvocation,; 6215 ofileName);; 6216 }; 6217 ; 6218 return returnValue;; 6219}; 6220 ; 6221 ; 6222////////////////////////////////////////////////////////////////////////////////; 6223 ; 6224extern ""C""; 6225int ROOT_rootcling_Driver(int argc, char **argv, const ROOT::Internal::RootCling::DriverConfig& config); 6226{; 6227 ; 6228 assert(!gDriverConfig && ""Driver configuration already set!"");; 6229 gDriverConfig = &config;; 6230 ; 6231 gBuildingROOT = config.fBuildingROOTStage1; // gets refined later; 6232 ; 6233 std::string exeName = ExtractFileName(GetExePath());; 6234#ifdef __APPLE__; 6235 // _dyld_get_image_name() on macOS11 and later sometimes returns ""rootcling"" for ""genreflex"".; 6236 // Fix that (while still initializing the binary path, needed for ROOTSYS) by updating the; 6237 // exeName to argv[0]:; 6238 exeName = ExtractFileName(argv[0]);; 6239#endif; 6240 ; 6241 // Select according to the name of the executable the procedure to follow:; 6242 // 1) RootCling; 6243 // 2) G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:244400,config,config,244400,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,4,['config'],"['config', 'configuration']"
Modifiability,"n. ; Definition at line 1419 of file TApplication.cxx. ◆ ProcessFile(). Longptr_t TApplication::ProcessFile ; (; const char * ; file, . Int_t * ; error = nullptr, . Bool_t ; keep = kFALSE . ). virtual . Process a file containing a C++ macro. ; Definition at line 1720 of file TApplication.cxx. ◆ ProcessLine(). Longptr_t TApplication::ProcessLine ; (; const char * ; line, . Bool_t ; sync = kFALSE, . Int_t * ; err = nullptr . ). virtual . Process a single command line, either a C++ statement or an interpreter command starting with a ""."". ; Return the return value of the command cast to a long. ; Reimplemented in TApplicationServer, and TApplicationRemote.; Definition at line 1565 of file TApplication.cxx. ◆ ProcessRemote(). Longptr_t TApplication::ProcessRemote ; (; const char * ; line, . Int_t * ; error = nullptr . ). protectedvirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is. ; [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; The variable 'dir' is the remote directory to be used as working dir. The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented in TRint.; Definition at line 1485 of file TApplication.cxx. ◆ QuitOpt(). Bool_t TApplication::QuitOpt ; (; ); const. inline . Definition at line 145 of file TApplication.h. ◆ Raise(). virtual void TApplication::Raise ; (; ). inlinevirtual . Definition at line 133 of file TApplication.h. ◆ RemoveIdleTimer(). void TApplication::RemoveIdleTimer ; (; ). virtual . Remove idle timer. Normally called via TROOT::Idle(0). ; Definition at line 1885 of file TApplication.cxx. ◆ ReturnFromRun(). Bool_t TApplication::ReturnFromRun ; (; ); const. inline . Definition at line 153 of file TApplication.h. ◆ ReturnPressed(). void TApplication::ReturnPressed ; (; char * ; text). virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication.html:35805,variab,variable,35805,doc/master/classTApplication.html,https://root.cern,https://root.cern/doc/master/classTApplication.html,1,['variab'],['variable']
Modifiability,"n. ;  ; Int_t fMinW;  ; Int_t fNewH;  new MDI win position and dimension ;  ; Int_t fNewW;  ; Int_t fNewX;  ; Int_t fNewY;  ; Int_t fOldH;  old MDI win position and dimension ;  ; Int_t fOldW;  ; Int_t fOldX;  ; Int_t fOldY;  ; Int_t fPos;  position of the resizer ;  ; Bool_t fRightButPressed;  ; Int_t fWinH;  MDI win position and dimension. ;  ; Int_t fWinW;  ; Int_t fWinX;  ; Int_t fWinY;  ; Int_t fX0;  ; Int_t fY0;  initial position of the mouse click ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiCornerWinResizer.html:28184,inherit,inherited,28184,doc/master/classTGMdiCornerWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiCornerWinResizer.html,4,['inherit'],['inherited']
Modifiability,"n. TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); create 2-dimensional TEfficiency object with fixed bin size. constructor creates two new and empty histograms with a fixed binning. Input: name - the common part of the name for both histograms(no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common part of the title for both histogram; fTotalHistogram has title: title + "" (total)""; fPassedHistogram has title: title + "" (passed)""; It is possible to label the axis by passing a title with; the following format: ""title;xlabel;ylabel;zlabel"".; nbinsx - number of bins on the x-axis; xlow - lower edge of first x-bin; xup - upper edge of last x-bin; nbinsy - number of bins on the y-axis; ylow - lower edge of first y-bin; yup - upper edge of last y-bin. TEfficiency(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins); create 2-dimensional TEfficiency object with variable bin size. constructor creates two new and empty histograms with a given binning. Input: name - the common part of the name for both histograms(no blanks); fTotalHistogram has name: name + ""_total""; fPassedHistogram has name: name + ""_passed""; title - the common part of the title for both histogram; fTotalHistogram has title: title + "" (total)""; fPassedHistogram has title: title + "" (passed)""; It is possible to label the axis by passing a title with; the following format: ""title;xlabel;ylabel;zlabel"".; nbinsx - number of bins on the x-axis; xbins - array of length (nbins + 1) with low-edges for each bin; xbins[nbinsx] ... lower edge for overflow x-bin; nbinsy - number of bins on the y-axis; ybins - array of length (nbins + 1) with low-edges for each bin; ybins[nbinsy] ... lower edge for overflow y-bin. TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEfficiency.html:35781,variab,variable,35781,root/html528/TEfficiency.html,https://root.cern,https://root.cern/root/html528/TEfficiency.html,10,['variab'],['variable']
Modifiability,"n. ◆ Rule() [1/4]. TMVA::Rule::Rule ; (; RuleEnsemble * ; re, . const std::vector< const TMVA::Node * > & ; nodes . ). the main constructor for a Rule ; Definition at line 66 of file Rule.cxx. ◆ Rule() [2/4]. TMVA::Rule::Rule ; (; RuleEnsemble * ; re). the simple constructor ; Definition at line 94 of file Rule.cxx. ◆ Rule() [3/4]. TMVA::Rule::Rule ; (; const Rule & ; other). inline . Definition at line 64 of file Rule.h. ◆ Rule() [4/4]. TMVA::Rule::Rule ; (; ). the simple constructor ; Definition at line 112 of file Rule.cxx. ◆ ~Rule(). TMVA::Rule::~Rule ; (; ). virtual . destructor ; Definition at line 130 of file Rule.cxx. Member Function Documentation. ◆ AddXMLTo(). void * TMVA::Rule::AddXMLTo ; (; void * ; parent); const. Definition at line 398 of file Rule.cxx. ◆ CalcImportance(). void TMVA::Rule::CalcImportance ; (; ). inline . Definition at line 99 of file Rule.h. ◆ ContainsVariable(). Bool_t TMVA::Rule::ContainsVariable ; (; UInt_t ; iv); const. check if variable in node ; Definition at line 139 of file Rule.cxx. ◆ Copy(). void TMVA::Rule::Copy ; (; const Rule & ; other). private . copy function ; Definition at line 284 of file Rule.cxx. ◆ Equal(). Bool_t TMVA::Rule::Equal ; (; const Rule & ; other, . Bool_t ; useCutValue, . Double_t ; mindist . ); const. Compare two rules. . useCutValue:; true -> calculate a distance between the two rules based on the cut values if the rule cuts are not equal, the distance is < 0 (-1.0) return true if d<mindist; false-> ignore mindist, return true if rules are equal, ignoring cut values. mindist: min distance allowed between rules; if < 0 => set useCutValue=false; . Definition at line 172 of file Rule.cxx. ◆ EvalEvent(). Bool_t TMVA::Rule::EvalEvent ; (; const Event & ; e); const. inline . Definition at line 191 of file Rule.h. ◆ GetCoefficient(). Double_t TMVA::Rule::GetCoefficient ; (; ); const. inline . Definition at line 141 of file Rule.h. ◆ GetImportance(). Double_t TMVA::Rule::GetImportance ; (; ); const. inline . De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Rule.html:4770,variab,variable,4770,doc/master/classTMVA_1_1Rule.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Rule.html,1,['variab'],['variable']
Modifiability,"n. ◆ TQpLinSolverBase() [1/3]. TQpLinSolverBase::TQpLinSolverBase ; (; ). Default constructor. ; Definition at line 58 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [2/3]. TQpLinSolverBase::TQpLinSolverBase ; (; TQpProbBase * ; factory, . TQpDataBase * ; data . ). Constructor. ; Definition at line 74 of file TQpLinSolverBase.cxx. ◆ TQpLinSolverBase() [3/3]. TQpLinSolverBase::TQpLinSolverBase ; (; const TQpLinSolverBase & ; another). Copy constructor. ; Definition at line 105 of file TQpLinSolverBase.cxx. ◆ ~TQpLinSolverBase(). TQpLinSolverBase::~TQpLinSolverBase ; (; ). inlineoverride . Definition at line 98 of file TQpLinSolverBase.h. Member Function Documentation. ◆ ComputeDiagonals(). void TQpLinSolverBase::ComputeDiagonals ; (; TVectorD & ; dd, . TVectorD & ; omega, . TVectorD & ; t, . TVectorD & ; lambda, . TVectorD & ; u, . TVectorD & ; pi, . TVectorD & ; v, . TVectorD & ; gamma, . TVectorD & ; w, . TVectorD & ; phi . ). virtual . Computes the diagonal matrices in the augmented system from the current set of variables. ; Definition at line 140 of file TQpLinSolverBase.cxx. ◆ Factor(). void TQpLinSolverBase::Factor ; (; TQpDataBase * ; prob, . TQpVar * ; vars . ). virtual . Sets up the matrix for the main linear system in ""augmented system"" form. ; The actual factorization is performed by a routine specific to either the sparse or dense case ; Reimplemented in TQpLinSolverDens, and TQpLinSolverSparse.; Definition at line 117 of file TQpLinSolverBase.cxx. ◆ JoinRHS(). void TQpLinSolverBase::JoinRHS ; (; TVectorD & ; rhs_out, . TVectorD & ; rhs1_in, . TVectorD & ; rhs2_in, . TVectorD & ; rhs3_in . ). virtual . Assembles a single vector object from three given vectors . ; rhs_out (output) final joined vector rhs1_in (input) first part of rhs rhs2_in (input) middle part of rhs rhs3_in (input) last part of rhs . ; Definition at line 288 of file TQpLinSolverBase.cxx. ◆ operator=(). TQpLinSolverBase & TQpLinSolverBase::operator= ; (; const TQpLinSolverBase & ; so",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpLinSolverBase.html:12673,variab,variables,12673,doc/master/classTQpLinSolverBase.html,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html,1,['variab'],['variables']
Modifiability,n.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; TEveCaloData::vCellId_tTEveCaloData::fCellsHighlighted; TEveCaloData::vCellId_tTEveCaloData::fCellsSelected; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Float_tTEveCaloData::fEps; TAxis*TEveCaloData::fEtaAxis; Float_tfEtaMax; Float_tfEtaMin; TEveCaloData::vCellGeom_tfGeomVec; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Float_tTEveCaloData::fMaxValEcached; Float_tTEveCaloData::fMaxValEtcached; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; TAxis*TEveCaloData::fPhiAxis; Float_tfPhiMax; Float_tfPhiMin; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TEveCaloData::vSliceInfo_tTEveCaloData::fSliceInfos; TEveCaloDataVec::vvFloat_tfSliceVec; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Int_tfTowercurrent tower; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElemen,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCaloDataVec.html:20020,variab,variable,20020,root/html602/TEveCaloDataVec.html,https://root.cern,https://root.cern/root/html602/TEveCaloDataVec.html,4,['variab'],['variable']
Modifiability,"n.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_tfVertices[8][3]; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query Vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBox.html:20809,variab,variable,20809,root/html528/TEveBox.html,https://root.cern,https://root.cern/root/html528/TEveBox.html,6,['variab'],['variable']
Modifiability,"n.; For a more detailed description of the method see References. Notes:. 1.Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2.Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. References:. 1.A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2.A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. @ingroup Integration. Function Members (Methods); public:. virtual~AdaptiveIntegratorMultiDim(); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::AdaptiveIntegratorMultiDim&); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxpts = 100000, unsigned int size = 0); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.0000000000000001E-9, double relTol = 1.0000000000000001E-9, unsigned int maxcall = 100000, unsigned int size = 0); virtual doubleError() const; virtual doubleIntegral(const double* xmin, const double* xmax); doubleIntegral(const ROOT::Math::IMultiGenFunction& f, const double* xmin, const double* xmax); virtual intNEval() const; ROOT::Math::AdaptiveIntegratorMultiDim&operator=(const ROOT::Math::AdaptiveIntegratorMultiDim&); virtual ROOT::Math::IntegratorMultiDimOptionsOptions() const; doubleRelError() const; virtual doubleResult() const; virtual voidSetAbsTolerance(double absTol); virtual voidSetFunction(const ROOT::Math::IMultiGenFunction",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html:2762,Adapt,AdaptiveIntegratorMultiDim,2762,root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__AdaptiveIntegratorMultiDim.html,8,['Adapt'],"['AdaptiveIntegratorMultiDim', 'AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim']"
Modifiability,"n.; For a more detailed description of the method see References. Notes:. 1.Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2.Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. References:. 1.A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2.A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. @ingroup Integration. Function Members (Methods); public:. virtual~AdaptiveIntegratorMultiDim(); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::AdaptiveIntegratorMultiDim&); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxpts = 100000, unsigned int size = 0); ROOT::Math::AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxcall = 100000, unsigned int size = 0); virtual doubleError() const; virtual doubleIntegral(const double* xmin, const double* xmax); doubleIntegral(const ROOT::Math::IMultiGenFunction& f, const double* xmin, const double* xmax); virtual intNEval() const; ROOT::Math::VirtualIntegratorMultiDim&ROOT::Math::VirtualIntegratorMultiDim::operator=(const ROOT::Math::VirtualIntegratorMultiDim&); virtual ROOT::Math::IntegratorMultiDimOptionsOptions() const; doubleRelError() const; virtual doubleResult() const; virtual voidSetAbsTolerance(double absTol); virtual voidSetFunction(const ROOT::Math::IMultiGenFunction& f); voidSetMaxPts(unsigned ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html:2762,Adapt,AdaptiveIntegratorMultiDim,2762,root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,4,['Adapt'],"['AdaptiveIntegratorMultiDim', 'AdaptiveIntegratorMultiDimAdaptiveIntegratorMultiDim']"
Modifiability,"n/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ;  ; FuncCacheElem * createCache (const RooArgSet *nset) const override;  Interface function to create an internal cache object that represent each cached function configuration. ;  ; double evaluate () const override;  Dummy evaluate, it is never called. ;  ; void fillCacheObject (FuncCacheElem &cacheFunc) const override;  Update contents of cache histogram by resampling the input function. ;  ; const char * inputBaseName () const override;  Return base name for caches, i.e. the name of the cached function. ;  ; void operModeHook () override;  ; const char * payloadUniqueSuffix () const override;  ;  Protected Member Functions inherited from RooAbsCachedReal; virtual const char * binningName () const;  ; TString cacheNameSuffix (const RooArgSet &nset) const;  Construct unique suffix name for cache p.d.f object. ;  ; FuncCacheElem * getCache (const RooArgSet *nset) const;  Retrieve cache corres",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:49495,variab,variables,49495,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['variab'],['variables']
Modifiability,"n/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooFit::OwningPtr< RooArgSet > actualObservables (const RooArgSet &nset) const override;  If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void fillCacheObject (PdfCacheElem &cachePdf) const override;  Update contents of cache histogram by resampling the input p.d.f. ;  ; const char * inputBaseName () const override;  Return the base name for cache objects, in this case the name of the cached p.d.f. ;  ; const char * payloadUniqueSuffix () const override;  ;  Protected Member Functions inherited from RooAbsCachedPdf; virtual const char * binningName () const;  ; std::string cacheNameSuffix (const RooArgSet &nset) const;  Construct string with unique suffix for cache objects based on observable names that define cache configuration. ;  ; virtual PdfCacheElem * createCache (const RooArgSet *nset) const;  ; void disableCache (bool flag);  ; void doEval (RooFit::EvalContext &) const override;  Base func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:60957,variab,variables,60957,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,1,['variab'],['variables']
Modifiability,"n32VirtualXProxy.cxx:168; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; namechar name[80]Definition TGX11.cxx:110; nentriesint nentriesDefinition THbookFile.cxx:91; TLeaf.h; TNtuple.h; TTree.h; TreeUtils.h; TBranchA TTree is a list of TBranches.Definition TBranch.h:93; TBranch::SetAddressvirtual void SetAddress(void *add)Set address of this branch.Definition TBranch.cxx:2682; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TCollection::Browsevoid Browse(TBrowser *b) overrideBrowse this collection (called by TBrowser).Definition TCollection.cxx:248; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TNtuple::ReadStreamLong64_t ReadStream(std::istream &inputStream, const char *branchDescriptor="""", char delimiter=' ') overrideRead from filename as many columns as variables in the ntuple the function returns the number of rows...Definition TNtuple.cxx:220; TNtuple::~TNtuple~TNtuple() overrideDefault destructor for an Ntuple.Definition TNtuple.cxx:103; TNtuple::IsATClass * IsA() const overrideDefinition TNtuple.h:61; TNtuple::ResetBranchAddressesvoid ResetBranchAddresses() overrideReset the branch addresses to the internal fArgs array.Definition TNtuple.cxx:147; TNtuple::fNvarInt_t fNvarNumber of columns.Definition TNtuple.h:31; TNtuple::ResetBranchAddressvoid ResetBranchAddress(TBranch *) overrideReset the branch addresses to the internal fArgs array.Definition TNtuple.cxx:133; TNtuple::Classstatic TClass * Class(); TNtuple::Browsevoid Browse(TBrowser *b) overrideBrowse content of the ntuple.Definition TNtuple.cxx:158; TNtuple::TNtupleTNtuple()Default constructor for Ntuple.Definition TNtuple.cxx:46; TNtuple::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TNtuple.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNtuple_8cxx_source.html:10085,variab,variables,10085,doc/master/TNtuple_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TNtuple_8cxx_source.html,1,['variab'],['variables']
Modifiability,"n3D& t) const; ROOT::Math::Translation3D&operator*=(const ROOT::Math::Translation3D& t); ROOT::Math::Translation3D&operator=(const ROOT::Math::Translation3D&); ROOT::Math::Translation3D&operator=(ROOT::Math::Translation3D&&); booloperator==(const ROOT::Math::Translation3D& rhs) const; voidSetComponents(double dx, double dy, double dz); voidSetXYZ(double dx, double dy, double dz); ROOT::Math::Translation3DTranslation3D(); ROOT::Math::Translation3DTranslation3D(const ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag>& v); ROOT::Math::Translation3DTranslation3D(const ROOT::Math::Translation3D&); ROOT::Math::Translation3DTranslation3D(ROOT::Math::Translation3D&&); ROOT::Math::Translation3DTranslation3D(double dx, double dy, double dz); const ROOT::Math::Translation3D::Vector&Vect() const. Data Members; private:. ROOT::Math::Translation3D::VectorfVectinternal 3D vector representing the translation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Translation3D(). Default constructor ( zero translation ). {}. Translation3D(IT begin, IT end). Construct given a pair of pointers or iterators defining the; beginning and end of an array of 3 Scalars representing the z,y,z of the translation vector. Translation3D(double dx, double dy, double dz). Construct from x,y,z values representing the translation. { }. explicit Translation3D( const DisplacementVector3D<CoordSystem,Tag> & v). Construct from any Displacement vector in ant tag and coordinate system. { }. Translation3D(const PositionVector3D<CoordSystem,Tag> & p1, const PositionVector3D<CoordSystem,Tag> & p2 ). Construct transformation from one coordinate system defined one point (the origin); to a new coordinate system defined by other point (origin ); @param p1 point defining origin of original reference system; @param p2 point defining origin of transformed reference system. { }. void SetComponents(IT begin, IT end). Set the 3 co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Translation3D.html:2136,Inherit,Inheritance,2136,root/html602/ROOT__Math__Translation3D.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Translation3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n3D<double>::Scalar zz); voidSetEta(ROOT::Math::Cartesian3D<double>::Scalar eta); voidSetPhi(ROOT::Math::Cartesian3D<double>::Scalar phi); voidSetR(ROOT::Math::Cartesian3D<double>::Scalar r); voidSetRho(ROOT::Math::Cartesian3D<double>::Scalar rho); voidSetTheta(ROOT::Math::Cartesian3D<double>::Scalar theta); voidSetX(ROOT::Math::Cartesian3D<double>::Scalar xx); voidSetXYZ(ROOT::Math::Cartesian3D<double>::Scalar xx, ROOT::Math::Cartesian3D<double>::Scalar yy, ROOT::Math::Cartesian3D<double>::Scalar zz); voidSetY(ROOT::Math::Cartesian3D<double>::Scalar yy); voidSetZ(ROOT::Math::Cartesian3D<double>::Scalar zz); ROOT::Math::Cartesian3D<double>::ScalarTheta() const; ROOT::Math::Cartesian3D<double>::ScalarX() const; doublex() const; ROOT::Math::Cartesian3D<double>::ScalarY() const; doubley() const; ROOT::Math::Cartesian3D<double>::ScalarZ() const; doublez() const. Data Members; private:. doublefXx coordinate; doublefYy coordinate; doublefZz coordinate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Cartesian3D & operator=(const ROOT::Math::Cartesian3D<double>& v). assignment operator. void SetCoordinates(const ROOT::Math::Cartesian3D<double>::Scalar* src). Set internal data based on an array of 3 Scalar numbers. { fX=src[0]; fY=src[1]; fZ=src[2]; }. void GetCoordinates(ROOT::Math::Cartesian3D<double>::Scalar* dest) const. get internal data into an array of 3 Scalar numbers. { dest[0] = fX; dest[1] = fY; dest[2] = fZ; }. void SetCoordinates(ROOT::Math::Cartesian3D<double>::Scalar xx, ROOT::Math::Cartesian3D<double>::Scalar yy, ROOT::Math::Cartesian3D<double>::Scalar zz). Set internal data based on 3 Scalar numbers. { fX=xx; fY=yy; fZ=zz; }. void GetCoordinates(ROOT::Math::Cartesian3D<double>::Scalar& xx, ROOT::Math::Cartesian3D<double>::Scalar& yy, ROOT::Math::Cartesian3D<double>::Scalar& zz) const. get internal data into 3 Scalar numbers. {xx=fX; yy=fY; zz=fZ;}. Scalar X() const; { return fX;}. Scalar Y() const; { return fY;}. Sc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__Cartesian3D_double_.html:4448,Inherit,Inheritance,4448,root/html532/ROOT__Math__Cartesian3D_double_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__Cartesian3D_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n::EPType_eTEveProjection::kPT_End; static TEveProjection::EPType_eTEveProjection::kPT_RPhi; static TEveProjection::EPType_eTEveProjection::kPT_RhoZ; static TEveProjection::EPType_eTEveProjection::kPT_Unknown. protected:. TEveVectorTEveProjection::fCentercenter of distortionprivate:; boolTEveProjection::fDisplaceOrigindisplace point before projection; Float_tTEveProjection::fDistortiondistortion; Float_tTEveProjection::fFixRradius from which scaling remains constant; Float_tTEveProjection::fFixZz-coordinate from which scaling remains constant; TEveProjection::EGeoMode_eTEveProjection::fGeoModestrategy of polygon projection (what to try first); Float_tTEveProjection::fMaxTrackStepmaximum distance between two points on a track; TStringTEveProjection::fNamename; Float_tTEveProjection::fPastFixRFacrelative scaling factor beyond fFixR as 10^x; Float_tTEveProjection::fPastFixRScalerelative scaling beyond fFixR; Float_tTEveProjection::fPastFixZFacrelative scaling factor beyond fFixZ as 10^x; Float_tTEveProjection::fPastFixZScalerelative scaling beyond fFixZ; TEveProjection::vPreScale_tTEveProjection::fPreScales[3]scaling before the distortion; Float_tTEveProjection::fScaleRscale factor to keep projected radius at fFixR fixed; Float_tTEveProjection::fScaleZscale factor to keep projected z-coordinate at fFixZ fixed; TEveProjection::EPType_eTEveProjection::fTypetype; Bool_tTEveProjection::fUsePreScaleuse pre-scaling. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveRPhiProjection(); Constructor. void ProjectPoint(Float_t& x, Float_t& y, Float_t& z, Float_t d, TEveProjection::EPProc_e proc = kPP_Full); Project point. Bool_t Is2D() const. Bool_t Is3D() const. TEveRPhiProjection(). virtual ~TEveRPhiProjection(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveRPhiProjection.html:5987,Inherit,Inheritance,5987,root/html604/TEveRPhiProjection.html,https://root.cern,https://root.cern/root/html604/TEveRPhiProjection.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n::EPType_eTEveProjection::kPT_End; static TEveProjection::EPType_eTEveProjection::kPT_RPhi; static TEveProjection::EPType_eTEveProjection::kPT_RhoZ; static TEveProjection::EPType_eTEveProjection::kPT_Unknown. protected:. TEveVectorTEveProjection::fCentercenter of distortionprivate:; boolTEveProjection::fDisplaceOrigindisplace point before projection; Float_tTEveProjection::fDistortiondistortion; Float_tTEveProjection::fFixRradius from which scaling remains constant; Float_tTEveProjection::fFixZz-coordinate from which scaling remains constant; TEveProjection::EGeoMode_eTEveProjection::fGeoModestrategy of polygon projection (what to try first); Float_tTEveProjection::fMaxTrackStepmaximum distance between two points on a track; TStringTEveProjection::fNamename; Float_tTEveProjection::fPastFixRFacrelative scaling factor beyond fFixR as 10^x; Float_tTEveProjection::fPastFixRScalerelative scaling beyond fFixR; Float_tTEveProjection::fPastFixZFacrelative scaling factor beyond fFixZ as 10^x; Float_tTEveProjection::fPastFixZScalerelative scaling beyond fFixZ; TEveProjection::vPreScale_tTEveProjection::fPreScales[3]scaling before the distortion; Float_tTEveProjection::fScaleRscale factor to keep projected radius at fFixR fixed; Float_tTEveProjection::fScaleZscale factor to keep projected z-coordinate at fFixZ fixed; TEveProjection::EPType_eTEveProjection::fTypetype; Bool_tTEveProjection::fUsePreScaleuse pre-scaling. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveRPhiProjection(); Constructor. void ProjectPoint(Float_t& x, Float_t& y, Float_t& z, Float_t d, TEveProjection::EPProc_e proc = kPP_Full); Project point. Bool_t Is2D() const. Bool_t Is3D() const. TEveRPhiProjection(). virtual ~TEveRPhiProjection(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveRPhiProjection.html:5987,Inherit,Inheritance,5987,root/html602/TEveRPhiProjection.html,https://root.cern,https://root.cern/root/html602/TEveRPhiProjection.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n::GetYPhi ; (; void ; ); const. Return YPhi. ; Definition at line 624 of file TRotation.cxx. ◆ GetYPsi(). Double_t TRotation::GetYPsi ; (; void ; ); const. Return YPsi. ; Definition at line 691 of file TRotation.cxx. ◆ GetYTheta(). Double_t TRotation::GetYTheta ; (; void ; ); const. Return YTheta. ; Definition at line 638 of file TRotation.cxx. ◆ Inverse(). TRotation TRotation::Inverse ; (; ); const. inline . Definition at line 271 of file TRotation.h. ◆ Invert(). TRotation & TRotation::Invert ; (; ). inline . Definition at line 275 of file TRotation.h. ◆ IsA(). TClass * TRotation::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 185 of file TRotation.h. ◆ IsIdentity(). Bool_t TRotation::IsIdentity ; (; ); const. inline . Definition at line 245 of file TRotation.h. ◆ MakeBasis(). void TRotation::MakeBasis ; (; TVector3 & ; xAxis, . TVector3 & ; yAxis, . TVector3 & ; zAxis . ); const. Make the Z axis into a unit variable. ; Definition at line 767 of file TRotation.cxx. ◆ operator!=(). Bool_t TRotation::operator!= ; (; const TRotation & ; m); const. inline . Definition at line 239 of file TRotation.h. ◆ operator()(). Double_t TRotation::operator() ; (; int ; i, . int ; j . ); const. Dereferencing operator const. ; Definition at line 219 of file TRotation.cxx. ◆ operator*() [1/2]. TRotation TRotation::operator* ; (; const TRotation & ; b); const. Multiplication operator. ; Definition at line 242 of file TRotation.cxx. ◆ operator*() [2/2]. TVector3 TRotation::operator* ; (; const TVector3 & ; p); const. inline . Definition at line 257 of file TRotation.h. ◆ operator*=(). TRotation & TRotation::operator*= ; (; const TRotation & ; m). inline . Definition at line 263 of file TRotation.h. ◆ operator=(). TRotation & TRotation::operator= ; (; const TRotation & ; m). inline . Definition at line 220 of file TRotation.h. ◆ operator==(). Bool_t TRotation::operator== ; (; const TRotation & ; m); c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRotation.html:22946,variab,variable,22946,doc/master/classTRotation.html,https://root.cern,https://root.cern/doc/master/classTRotation.html,1,['variab'],['variable']
Modifiability,"n::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TClass*fClass!Pointer to the class; TObject**TObjArray::fCont!Array contents; TObjArray*fKeep!Saved copies of pointers to objects; Int_tTObjArray::fLastLast element in array containing an object; Int_tTObjArray::fLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TClonesArray(); Default Constructor. TClonesArray(const char *classname, Int_t s, Bool_t); Create an array of clone objects of classname. The class must inherit from; TObject. If the class defines its own operator delete(), make sure that; it looks like this:. void MyClass::operator delete(void *vp); {; if ((Long_t) vp != TObject::GetDtorOnly()); ::operator delete(vp); // delete space; else; TObject::SetDtorOnly(0);; }. The second argument s indicates an approximate number of objects; that will be entered in the array. If more than s objects are entered,; the array will be automatically expanded. The third argument is not used anymore and only there for backward; compatibility reasons. TClonesArray(const TClass *cl, Int_t s, Bool_t); Create an array of clone objects of class cl. The class must inherit from; TObject. If the class defines an own operator delete(), make sure that; it looks like this:. void MyClass::operator delete(void *vp); {; if ((Long_t) vp != TObject::GetDtorOnly()); ::operator delete(vp); // delete space; else; TObject::SetDtorOnly(0);; }. The second argument, s, indicates an approximate number of objects; that will be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClonesArray.html:11401,inherit,inherit,11401,root/html526/TClonesArray.html,https://root.cern,https://root.cern/root/html526/TClonesArray.html,1,['inherit'],['inherit']
Modifiability,"n::evaluate ; (; ); const. overrideprivatevirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 99 of file RooJohnson.cxx. ◆ generateEvent(). void RooJohnson::generateEvent ; (; Int_t ; code). overridevirtual . Generate events based on code obtained by getGenerator(). ; So far, only generating mass values is supported. Others will have to be generated by the slower accept/reject method. ; Reimplemented from RooAbsPdf.; Definition at line 218 of file RooJohnson.cxx. ◆ getAnalyticalIntegral(). int RooJohnson::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 126 of file RooJohnson.cxx. ◆ getGenerator(). Int_t RooJohnson::getGenerator ; (; const RooArgSet & ; directVars, . RooArgSet & ; generateVars, . bool ; staticInitOK = true . ); const. overridevirtual . Advertise which kind of direct event generation is supported. ; So far, only generating mass values is supported. ; Reimplemented from RooAbsPdf.; Definition at line 204 of file RooJohnson.cxx. ◆ IsA(). TClass * RooJohnson::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 61 of file RooJohnson.h. ◆ Streamer(). void RooJohnson::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooJohnson::StreamerNVirtual ; (; TBuf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJohnson.html:78353,config,configuration,78353,doc/master/classRooJohnson.html,https://root.cern,https://root.cern/doc/master/classRooJohnson.html,1,['config'],['configuration']
Modifiability,"n::structureTag(); TNamed*RooAbsCollection::typedStructureTag(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. Bool_tRooAbsCollection::_allRRVAll contents are RRV; RooLinkedListRooAbsCollection::_listActual object store; TStringRooAbsCollection::_nameOur name.; static Int_tRooPrintable::_nameLength; Bool_tRooAbsCollection::_ownContFlag to identify a list that owns its contents.; TNamed*RooAbsCollection::_structureTag! Structure tag; TNamed*RooAbsCollection::_typedStructureTag! Typed structure tag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooArgList(); Default constructor. RooArgList(const RooArgSet& set); Constructor from a RooArgSet. RooArgList(const char* name); Empty list constructor. RooArgList(const RooAbsArg& var1, const char* name = """"); Constructor for list containing 1 initial object. RooArgList(const RooAbsArg& var1, const RooAbsArg& var2, const char* name = """"); Constructor for set containing 2 initial objects. RooArgList(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const char* name = """"); Constructor for set containing 3 initial objects. RooArgList(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const char* name = """"); Constructor for set containing 4 initial objects. RooArgList(const RooAbsArg& var1, const RooAbsArg& var2, const RooAbsArg& var3, const RooAbsArg& var4, const RooAbsArg& var5, const char* name = """"); Constructor for set containing 5 initial objects. RooArgList(const RooAbsArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooArgList.html:13147,Inherit,Inheritance,13147,root/html534/RooArgList.html,https://root.cern,https://root.cern/root/html534/RooArgList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; 2004 // if specified in the option (by default they considered); 2005 Double_t totcont = 0;; 2006 ; 2007 Int_t out1min = out1->GetFirst();; 2008 Int_t out1max = out1->GetLast();; 2009 // GetFirst(), GetLast() can return (0,0) when the range bit is set artificially (see TAxis::SetRange); 2010 //if (out1min == 0 && out1max == 0) { out1min = 1; out1max = out1->GetNbins(); }; 2011 // correct for underflow/overflows; 2012 if (useUF && !out1->TestBit(TAxis::kAxisRange) ) out1min -= 1;; 2013 if (useOF && !out1->TestBit(TAxis::kAxisRange) ) out1max += 1;; 2014 Int_t out2min = out2->GetFirst();; 2015 Int_t out2max = out2->GetLast();; 2016// if (out2min == 0 && out2max == 0) { out2min = 1; out2max = out2->GetNbins(); }; 2017 if (useUF && !out2->TestBit(TAxis::kAxisRange) ) out2min -= 1;; 2018 if (useOF && !out2->TestBit(TAxis::kAxisRange) ) out2max += 1;; 2019 ; 2020 // if the out axis has labels and is extendable, temporary make it non-extendable to avoid adding extra bins; 2021 Bool_t extendable = projX->CanExtend();; 2022 if ( labels && extendable ) h1->GetXaxis()->SetCanExtend(kFALSE);; 2023 for (ixbin=0;ixbin<=1+projX->GetNbins();ixbin++) {; 2024 if ( projX->TestBit(TAxis::kAxisRange) && ( ixbin < ixmin || ixbin > ixmax )) continue;; 2025 ; 2026 Double_t cont = 0;; 2027 Double_t err2 = 0;; 2028 ; 2029 // loop on the bins to be integrated (outbin should be called inbin); 2030 for (out1bin = out1min; out1bin <= out1max; out1bin++) {; 2031 for (out2bin = out2min; out2bin <= out2max; out2bin++) {; 2032 ; 2033 Int_t bin = GetBin(*refX, *refY, *refZ);; 2034 ; 2035 // sum the bin contents and errors if needed; 2036 cont += RetrieveBinContent(bin);; 2037 if (computeErrors) {; 2038 Double_t exyz = GetBinError(bin);; 2039 err2 += exyz*exyz;; 2040 }; 2041 }; 2042 }; 2043 Int_t ix = h1->FindBin( projX->GetBinCenter(ixbin) );; 2044 h1->SetBinContent(ix ,cont);; 2045 if (computeErrors) h1->SetBinError(ix, TMath::Sqrt(err2) );; 2046 // sum all content; 2047 totcont += cont;; 2048 ; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:80008,extend,extendable,80008,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"n; 281 ; 282 // Set individual event weights (the variables must exist in the original TTree); 283 // - for signal : `dataloader->SetSignalWeightExpression (""weight1*weight2"");`; 284 // - for background: `dataloader->SetBackgroundWeightExpression(""weight1*weight2"");`; 285 dataloader->SetBackgroundWeightExpression( ""weight"" );; 286 ; 287 // Apply additional cuts on the signal and background samples (can be different); 288 TCut mycuts = """"; // for example: TCut mycuts = ""abs(var1)<0.5 && abs(var2-0.5)<1"";; 289 TCut mycutb = """"; // for example: TCut mycutb = ""abs(var1)<0.5"";; 290 ; 291 // Tell the dataloader how to use the training and testing events; 292 //; 293 // If no numbers of events are given, half of the events in the tree are used; 294 // for training, and the other half for testing:; 295 //; 296 // dataloader->PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; 297 //; 298 // To also specify the number of testing events, use:; 299 //; 300 // dataloader->PrepareTrainingAndTestTree( mycut,; 301 // ""NSigTrain=3000:NBkgTrain=3000:NSigTest=3000:NBkgTest=3000:SplitMode=Random:!V"" );; 302 dataloader->PrepareTrainingAndTestTree( mycuts, mycutb,; 303 ""nTrain_Signal=1000:nTrain_Background=1000:SplitMode=Random:NormMode=NumEvents:!V"" );; 304 ; 305 // ### Book MVA methods; 306 //; 307 // Please lookup the various method configuration options in the corresponding cxx files, eg:; 308 // src/MethoCuts.cxx, etc, or here: http://tmva.sourceforge.net/old_site/optionRef.html; 309 // it is possible to preset ranges in the option string in which the cut optimisation should be done:; 310 // ""...:CutRangeMin[2]=-1:CutRangeMax[2]=1""..."", where [2] is the third input variable; 311 ; 312 // Cut optimisation; 313 if (Use[""Cuts""]); 314 factory->BookMethod( dataloader, TMVA::Types::kCuts, ""Cuts"",; 315 ""!H:!V:FitMethod=MC:EffSel:SampleSize=200000:VarProp=FSmart"" );; 316 ; 317 if (Use[""CutsD""]); 318 factory->BookMethod( dataloader, TMVA::Types::kCuts, ""CutsD"",; 319 ""!H:!V:FitMethod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C_source.html:13643,config,configuration,13643,doc/master/TMVAClassification_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C_source.html,1,['config'],['configuration']
Modifiability,"n; Double_tfTyErrerror value of t parameter for 1D ridges in y direction; Double_tfTyInitinitial value of t parameter for 1D ridges in y direction (relative amplitude of tail), for details see html manual and references; Double_t*fVolume[fNPeaks] array of calculated volumes of 2D peaks, output parameters; Double_t*fVolumeErr[fNPeaks] array of volumes errors of 2D peaks, output parameters; Int_tfXmaxlast fitted channel in x direction; Int_tfXminfirst fitted channel in x direction; Int_tfYmaxlast fitted channel in y direction; Int_tfYminfirst fitted channel in y direction. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSpectrum2Fit. Function documentation; TSpectrum2Fit(); default constructor. TSpectrum2Fit(Int_t numberPeaks); numberPeaks: number of fitted peaks (must be greater than zero); the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class. . Shape function of the fitted; peaks contains the two-dimensional symmetrical Gaussian two one-dimensional; symmetrical Gaussian ridges as well as nonsymmetrical terms and background. ~TSpectrum2Fit(); destructor. Double_t Erfc(Double_t x). AUXILIARY FUNCTION. This function calculates error function of x. Double_t Derfc(Double_t x). AUXILIARY FUNCTION. This function calculates derivative of error function of x. Double_t Ourpowl(Double_t a, Int_t pw); power function. void StiefelInversion(Double_t** a, Int_t size). AUXILIARY FUNCTION. This function calculates solution of the system of linear equations.; The matrix a should have a dimension size*(size+4); The calling function should fill in the matrix, the column size should; contain vector y (right side of the system of equations). The result is; placed into size+1 column of the matrix.; according to sigma of peaks.; Function parameters:; -a-matrix with dimension size*(size+4) //; -size-number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Fit.html:23395,variab,variables,23395,root/html602/TSpectrum2Fit.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Fit.html,4,['variab'],['variables']
Modifiability,"n; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define conditional observables; Verbose() -- Verbose output of GOF framework classes; CloneData() -- Clone input dataset for internal use (default is kTRUE). RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_t interleave = kFALSE, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, const RooArgSet& projDeps, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_t interleave = kFALSE, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const RooNLLVar& other, const char* name = 0); Copy constructor. ~RooNLLVar(); Destructor. Double_t evaluatePartition(Int_t firstEvent, Int_t lastEvent, Int_t stepSize) const; Calculate and return likelihood on subset of data from firstEvent to lastEvent; processed with a step size of 'stepSize'. If this an extended likelihood and; and the zero event is processed the extended term is added to the return; likelihood. RooNLLVar(); Constructors, assignment etc. { _first = kTRUE ; }. TObject* clone(const char* newname) const; { return new RooNLLVar(*this,newname); }. RooAbsTestStatistic* create(const char* name, const char* title, RooAbsReal& pdf, RooAbsData& adata, const RooArgSet& projDeps, const char* rangeName, const char* addCoefRangeName = 0, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNLLVar.html:40342,extend,extended,40342,root/html532/RooNLLVar.html,https://root.cern,https://root.cern/root/html532/RooNLLVar.html,2,['extend'],['extended']
Modifiability,"n; NumCPU() -- Activate parallel processing feature; Range() -- Fit only selected region; SumCoefRange() -- Set the range in which to interpret the coefficients of RooAddPdf components; SplitRange() -- Fit range is split by index catory of simultaneous PDF; ConditionalObservables() -- Define conditional observables; Verbose() -- Verbose output of GOF framework classes; CloneData() -- Clone input dataset for internal use (default is kTRUE). RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_t interleave = kFALSE, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const char* name, const char* title, RooAbsPdf& pdf, RooAbsData& data, const RooArgSet& projDeps, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_t interleave = kFALSE, Bool_t verbose = kTRUE, Bool_t splitRange = kFALSE, Bool_t cloneData = kTRUE); Construct likelihood from given p.d.f and (binned or unbinned dataset); For internal use. RooNLLVar(const RooNLLVar& other, const char* name = 0); Copy constructor. ~RooNLLVar(); Destructor. Double_t evaluatePartition(Int_t firstEvent, Int_t lastEvent, Int_t stepSize) const; Calculate and return likelihood on subset of data from firstEvent to lastEvent; processed with a step size of 'stepSize'. If this an extended likelihood and; and the zero event is processed the extended term is added to the return; likelihood. RooNLLVar(); Constructors, assignment etc. {}. TObject* clone(const char* newname) const; { return new RooNLLVar(*this,newname); }. RooAbsTestStatistic* create(const char* name, const char* title, RooAbsReal& pdf, RooAbsData& adata, const RooArgSet& projDeps, const char* rangeName, const char* addCoefRangeName = 0, Int_t nCPU = 1, Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNLLVar.html:38391,extend,extended,38391,root/html528/RooNLLVar.html,https://root.cern,https://root.cern/root/html528/RooNLLVar.html,2,['extend'],['extended']
Modifiability,"n; Numerical Monte Carlo Integration Classes; Numerical Differentiation; One-dimensional Root-Finding; One-dimensional Minimization; Multi-dimensional Minimization. Interpolation Classes; Function Approximation (ChebyshevApprox), based on Chebyshev polynomials; Interface classes for Random number generation. The mathematical functions are implemented as a set of free functions in the namespace ROOT::Math. The naming used for the special functions is the same proposed for the C++ standard (see C++ standard extension proposal document). The MathMore library is implemented wrapping in C++ the GNU Scientific Library (GSL). To build MathMore you need to have first GSL installed somewhere in your system. A version of GSL larger or equal 1.8 is required. A tar file of GSL can be downloaded from the GSL Web site, or (for version 1.8) from here. Windows binaries, compiled using Visual Studio 7.1 can be downloaded from this location.; MathMore (and its ROOT CINT dictionary) can be built within ROOT whenever a GSL library is found in the system. Optionally the GSL library and header file location can be specified in the ROOT configure script with configure –with-gsl-incdir=... –with-gsl-libdir=... MathMore links with the GSL static libraries. On some platform (like Linux x86-64) GSL needs to be compiled with the option –with-pic. The source code of MathMore is distributed under the GNU General Public License . Modules;  Numerical Algorithms;  Numerical Algorithm classes from the MathCore and MathMore libraries. ;  ;  Statistical functions;  Probability density functions, cumulative distribution functions and their inverses (quantiles) for various statistical distributions (continuous and discrete). ;  ;  Special functions;  Special mathematical functions. ;  ;  QuasiRandom number generators and distributions;  Classes for generating QuasiRandom numbers and based on GSL. ;  . ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:10:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/group__MathMore.html:1869,config,configure,1869,doc/v632/group__MathMore.html,https://root.cern,https://root.cern/doc/v632/group__MathMore.html,2,['config'],['configure']
Modifiability,n; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooProdPdf PDF representing a product of PDFs; RooProduct Product of RooAbsReal and/or RooAbsCategory terms; RooProfileLL Real-valued function representing profile likelihood of external (likelihood) function; RooProjectedPdf Operator p.d.f calculating projection of another p.d.f; RooProofDriverSelector ; RooPullVar Calculation of pull of measurement w.r.t a truth value; RooQuasiRandomGenerator Quasi-random number generator; RooRandom Random number generator interface; RooRandomizeParamMCSModule MCStudy module to vary one or more input parameters during fit/generation cycle; RooRangeBinning Binning that only defines the total range; RooRangeBoolean Polynomial function; RooRealAnalytic Function binding to an analytical integral of a RooAbsReal; RooRealBinding Function binding to RooAbsReal object; RooRealConstant RooRealVar constants factory; RooRealIntegral Real-valued function representing an integral over a RooAbsReal object; RooRealMPFE Multi-process front-end for parallel calculation of a real valued function ; RooRealProxy Proxy for a RooAbsReal object; RooRealSumPdf PDF constructed from a sum of (non-pdf) functions; RooRealVar Real-valued variable ; RooRealVarSharedProperties Shared properties of a RooRealVar clone set; RooRecursiveFraction Recursive fraction formula f1*(1-f2)*(1-f3) etc...; RooRefArray Helper class for proxy lists; RooRefCountList RooLinkedList with reference counting; RooResolutionModel Abstract Resolution Model; RooScaledFunc Function binding applying scaling to another function binding; RooSecondMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:42958,variab,variable,42958,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['variab'],['variable']
Modifiability,n; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooProdPdf PDF representing a product of PDFs; RooProduct Product of RooAbsReal and/or RooAbsCategory terms; RooProfileLL Real-valued function representing profile likelihood of external (likelihood) function; RooProjectedPdf Operator p.d.f calculating projection of another p.d.f; RooProofDriverSelector ; RooPullVar Calculation of pull of measurement w.r.t a truth value; RooQuasiRandomGenerator Quasi-random number generator; RooRandom Random number generator interface; RooRandomizeParamMCSModule MCStudy module to vary one or more input parameters during fit/generation cycle; RooRangeBinning Binning that only defines the total range; RooRangeBoolean Polynomial function; RooRealAnalytic Function binding to an analytical integral of a RooAbsReal; RooRealBinding Function binding to RooAbsReal object; RooRealConstant RooRealVar constants factory; RooRealIntegral Real-valued function representing an integral over a RooAbsReal object; RooRealMPFE Multi-process front-end for parallel calculation of a real valued function ; RooRealProxy Proxy for a RooAbsReal object; RooRealSumPdf PDF constructed from a sum of (non-pdf) functions; RooRealVar Real-valued variable ; RooRealVarSharedProperties Shared properties of a RooRealVar clone set; RooRecursiveFraction Recursive fraction formula f1*(1-f2)*(1-f3) etc...; RooRefCountList RooLinkedList with reference counting; RooResolutionModel Abstract Resolution Model; RooScaledFunc Function binding applying scaling to another function binding; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of RooArgSet pointers; RooSetProxy Proxy class for a RooArgSet; RooSharedProperties Abstract interface for shared property im,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:41770,variab,variable,41770,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,3,['variab'],['variable']
Modifiability,"n; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigmaL; RooRealProxysigmaR; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBifurGauss(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _mean, RooAbsReal& _sigmaL, RooAbsReal& _sigmaR). RooBifurGauss(const RooBifurGauss& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooBifurGauss(); {}. TObject* clone(const char* newname) const; { return new RooBifurGauss(*this,newname); }. virtual ~RooBifurGauss(); { }. » Last changed: Tue Mar 10 17:14:36 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBifurGauss.html:43109,Inherit,Inheritance,43109,root/html534/RooBifurGauss.html,https://root.cern,https://root.cern/root/html534/RooBifurGauss.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyfuncProxy to functions whose running integral is calculated; RooRealProxyxIntergrated observable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooNumRunningInt(const char* name, const char* title, RooAbsReal& _func, RooRealVar& _x, const char* binningName = ""cache""); Construct running integral of function '_func' over x_print from; the lower bound on _x to the present value of _x using a numeric; sampling technique. The sampling frequency is controlled by the; binning named 'bname' and a default second order interpolation; is applied to smooth the histogram-based c.d.f. RooNumRunningInt(const RooNumRunningInt& other, const char* name = 0); Copy constructor. ~RooNumRunningInt(); Destructor. const char* inputBaseName() const; Return unique name for RooAbsCachedPdf cache components; constructed from input function name. void fillCacheObject(RooAbsCachedReal::FuncCacheElem& cacheFunc) const; Fill the cache object by calling its calculate() method. RooArgSet* actualObservables(const RooArgSet& nset) const; Return observable in nset to be cached by RooAbsCachedPdf; this is always t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNumRunningInt.html:38913,Inherit,Inheritance,38913,root/html602/RooNumRunningInt.html,https://root.cern,https://root.cern/root/html602/RooNumRunningInt.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; TDirectory*TBranch::fDirectory! Pointer to directory where this branch buffers are stored; Long64_tTBranch::fEntriesNumber of entries; TBuffer*TBranch::fEntryBuffer! Buffer used to directly pass the content without streaming; Long64_tTBranch::fEntryNumberCurrent entry number (last one filled in this branch); Int_tTBranch::fEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TStringTBranch::fFileNameName of file where buffers are stored ("""" if in same file as Tree header); Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Long64_tTBranch::fFirstEntryNumber of the first entry in this branch; Int_tfIDelement serial number in fInfo; vector<Int_t>fIDs! List of the serial number of all the StreamerInfo to be used.; TStreamerInfo*fInfo! Pointer to StreamerInfo; Bool_tfInit! Initialization flag for branch assignment; Bool_tfInitOffsets! Initialization flag to not endlessly recalculate offsets; TObjArrayTBranch::fLeaves-> List of leaves of this branch; Int_tTBranch::fMaxBasketsMaximum number of Baskets so far; Int_tfMaximumMaximum entries for a TClonesArray or variable array; TBranch*TBranch::fMother! Pointer to top-level parent branch in the tree.; TStringTNamed::fNameobject identifier; Int_tfNdata! Number of data in this branch; Int_tTBranch::fNleaves! Number of leaves; char*fObject! Pointer to object at *fAddress; Int_tTBranch::fOffsetOffset of this branch; TVirtualArray*fOnfileObject! Place holder for the onfile representation of data members.; TBranch*TBranch::fParent! Pointer to parent branch.; TClassReffParentClass! Reference to class definition in fParentName; TStringfParentNameName of parent class; Int_tTBranch::fReadBasket! Current basket number when reading; Long64_tTBranch::fReadEntry! Current entry number when reading; Int_tfSTLtype! STL container type; Bool_tTBranch::fSkipZip!After being read, the buffer will not be unziped.; Int_tTBranch::fSplitLevelBranch split level; Int_tfStreamerTypebranch stre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranchElement.html:14624,variab,variable,14624,root/html526/TBranchElement.html,https://root.cern,https://root.cern/root/html526/TBranchElement.html,1,['variab'],['variable']
Modifiability,"n; TGCheckButton*fRnrSelf; TGCheckButton*fRnrState; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveTransSubEditor*fTrans; TGNumberEntry*fTransparency; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoRnrSelf(); Slot for RnrSelf. void DoRnrChildren(); Slot for RnrChildren. void DoRnrState(); Slot for RnrState. void DoMainColor(Pixel_t color); Slot for MainColor. void DoTransparency(); Slot for Transparency. TEveElementEditor(const TEveElementEditor& ). TEveElementEditor& operator=(const TEveElementEditor& ). virtual ~TEveElementEditor(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveElementEditor.html:20049,Inherit,Inheritance,20049,root/html534/TEveElementEditor.html,https://root.cern,https://root.cern/root/html534/TEveElementEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; TTreeIndex(); Default constructor for TTreeIndex. TTreeIndex(const TTree* T, const char* majorname, const char* minorname); Normal constructor for TTreeIndex. Build an index table using the leaves of Tree T with major & minor names; The index is built with the expressions given in ""majorname"" and ""minorname"". a Long64_t array fIndexValues is built with:; major = the value of majorname converted to an integer; minor = the value of minorname converted to an integer; fIndexValues[i] = major<<31 + minor; This array is sorted. The sorted fIndex[i] contains the serial number; in the Tree corresponding to the pair ""major,minor"" in fIndexvalues[i]. Once the index is computed, one can retrieve one entry via; T->GetEntryWithIndex(majornumber, minornumber); Example:; tree.BuildIndex(""Run"",""Event""); //creates an index using leaves Run and Event; tree.GetEntryWithIndex(1234,56789); //reads entry corresponding to; Run=1234 and Event=56789. Note that majorname and minorname may be expressions using original; Tree variables eg: ""run-90000"", ""event +3*xx"". However the result; must be integer.; In case an expression is specified, the equivalent expression must be computed; when calling GetEntryWithIndex. To build an index with only majorname, specify minorname=""0"" (default). TreeIndex and Friend Trees. Assuming a parent Tree T and a friend Tree TF, the following cases are supported:; CASE 1: T->GetEntry(entry) is called; In this case, the serial number entry is used to retrieve; the data in both Trees.; CASE 2: T->GetEntry(entry) is called, TF has a TreeIndex; the expressions given in major/minorname of TF are used; to compute the value pair major,minor with the data in T.; TF->GetEntryWithIndex(major,minor) is then called (tricky case!); CASE 3: T->GetEntryWithIndex(major,minor) is called.; It is assumed that both T and TF have a TreeIndex built using; the same major and minor name. Saving the TreeIndex. Once the index is built, it can be saved with the TTree object; with tree.Wr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeIndex.html:7880,variab,variables,7880,root/html528/TTreeIndex.html,https://root.cern,https://root.cern/root/html528/TTreeIndex.html,10,['variab'],['variables']
Modifiability,"n; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGotoDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, Long_t* ret_code = 0, UInt_t options = kVerticalFrame); Create a dialog to GoTo a specific line number. Returns -1 in; ret_code in case no valid line number was given or in case; cancel was pressed. If on input *ret_code is > 0 then this value; will be used as default value. ~TGGotoDialog(); Clean up goto dialog. void CloseWindow(); Close the dialog. On close the dialog will be deleted and cannot be; re-used. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process goto dialog widget messages. » Author: Fons Rademakers 10/7/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGGotoDialog.html:22306,Inherit,Inheritance,22306,root/html534/TGGotoDialog.html,https://root.cern,https://root.cern/root/html534/TGGotoDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. private:. TGLSAViewer&fViewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLSAFrame(TGLSAViewer& viewer); Construct GUI frame, bound to passed 'viewer'. TGLSAFrame(const TGWindow* parent, TGLSAViewer& viewer); Construct GUI frame, bound to passed 'viewer'. ~TGLSAFrame(); Destroy the GUI frame. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process GUI message - defered back up to TGLSAViewer::ProcessFrameMessage(). void CloseWindow(); Close the GUI frame. TGLSAFrame(const TGLSAFrame& ); non-copyable class. » Author: Richard Maunder 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLSAFrame.html:22295,Inherit,Inheritance,22295,root/html604/TGLSAFrame.html,https://root.cern,https://root.cern/root/html604/TGLSAFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; UInt_tTGFrame::fWidthframe width; TStringTGMainFrame::fWindowNamewindow name; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. private:. TGLSAViewer&fViewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLSAFrame(TGLSAViewer& viewer); Construct GUI frame, bound to passed 'viewer'. TGLSAFrame(const TGWindow* parent, TGLSAViewer& viewer); Construct GUI frame, bound to passed 'viewer'. ~TGLSAFrame(); Destroy the GUI frame. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process GUI message - defered back up to TGLSAViewer::ProcessFrameMessage(). void CloseWindow(); Close the GUI frame. TGLSAFrame(const TGLSAFrame& ); non-copyable class. » Author: Richard Maunder 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLSAFrame.html:22295,Inherit,Inheritance,22295,root/html602/TGLSAFrame.html,https://root.cern,https://root.cern/root/html602/TGLSAFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; UInt_tfNEventsData's number of events; Bool_tfNewDataflag to control when new data are given; TF1*fPDFOutput Kernel Density Estimation PDF function; Double_tfRhoAdjustment factor for sigma; vector<Bool_t>fSettedOptionsUser input options flag; Double_tfSigmaData std deviation; Double_tfSigmaRobData std deviation (robust estimation); TF1*fUpperPDFOutput Kernel Density Estimation upper confidence interval PDF function; Bool_tfUseBins; UInt_tfUseBinsNEventsIf the algorithm is allowed to use binning this is the minimum number of events to do so; Bool_tfUseMinMaxFromDataflag top control if min and max must be used from data; Bool_tfUseMirroring; Double_tfWeightSizeCaches the weight size; Double_tfXMaxData maximum value; Double_tfXMinData minimum value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TKDE(UInt_t events = 0, const Double_t* data = 0, Double_t xMin = 0.0, Double_t xMax = 0.0, Option_t* option = ""KernelType:Gaussian;Iteration:Adaptive;Mirror:noMirror;Binning:RelaxedBinning"", Double_t rho = 1.0); Class constructor. ~TKDE(); Class destructor. void Instantiate(TKDE::KernelFunction_Ptr kernfunc, UInt_t events, const Double_t* data, Double_t xMin, Double_t xMax, Option_t* option, Double_t rho); Template's constructor surrogate. void SetOptions(Option_t* option, Double_t rho); Sets User defined construction options. void SetDrawOptions(Option_t* option, TString& plotOpt, TString& drawOpt); Sets User defined drawing options. void GetOptions(string optionType, string option); Gets User defined KDE construction options. void AssureOptions(); Sets missing construction options to default ones. void CheckOptions(Bool_t isUserDefinedKernel = kFALSE); Sets User global options. void SetKernelType(TKDE::EKernelType kern); Sets User option for the choice of kernel estimator. void SetIteration(TKDE::EIteration iter); Sets User option for fixed or adaptive iteration. void SetMirror(TKDE::EMirror mir); Sets User option for mirroring ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKDE.html:11051,Adapt,Adaptive,11051,root/html532/TKDE.html,https://root.cern,https://root.cern/root/html532/TKDE.html,2,['Adapt'],['Adaptive']
Modifiability,"n; is safer than kOverwrite but it is slower.; The ""SingleKey"" option is only used by TCollection::Write() to write; a container with a single key instead of each object in the container; with its own key. An object is read from this directory via TDirectoryFile::Get. The function returns the total number of bytes written to the directory.; It returns 0 if the object cannot be written. WARNING: in name avoid special characters like '^','$','.' that are used; by the regular expression parser (see TRegexp). Int_t WriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); Write object from pointer of class classname in this directory; obj may not derive from TObject; see TDirectoryFile::WriteTObject for comments. VERY IMPORTANT NOTE:; The value passed as 'obj' needs to be from a pointer to the type described by classname; For example with:; TopClass *top;; BottomClass *bottom;; top = bottom;; you can do:; directory->WriteObjectAny(top,""top"",""name of object"");; directory->WriteObjectAny(bottom,""bottom"",""name of object"");; BUT YOU CAN NOT DO (it will fail in particular with multiple inheritance):; directory->WriteObjectAny(top,""bottom"",""name of object"");. We STRONGLY recommend to use; TopClass *top = ....;; directory->WriteObject(top,""name of object""). see laso remarks in TDirectoryFile::WriteTObject. Int_t WriteObjectAny(const void* obj, const TClass* cl, const char* name, Option_t* option = """", Int_t bufsize = 0); Write object of class with dictionary cl in this directory; obj may not derive from TObject; To get the TClass* cl pointer, one can use; TClass *cl = TClass::GetClass(""classname"");; An alternative is to call the function WriteObjectAny above.; see TDirectoryFile::WriteTObject for comments. void WriteDirHeader(); -*-*Overwrite the Directory header record; *-* =====================================. void WriteKeys(); -*-*-*-*Write KEYS linked list on the file ; *-* ==================================; The li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDirectoryFile.html:27619,inherit,inheritance,27619,root/html528/TDirectoryFile.html,https://root.cern,https://root.cern/root/html528/TDirectoryFile.html,10,['inherit'],['inheritance']
Modifiability,"n; o Ctrl-V - paste action; o Ctrl-R - replace action; o Ctrl-L - compact layout; o Ctrl-B - break layout; o Ctrl-H - switch horizontal-vertical layout; o Ctrl-G - switch on/off grid; o Ctrl-S - save action; o Ctrl-O - open and execute a ROOT macro file. GUI components created; after macro execution will be emebedded to currently edited; design area.; o Ctrl-N - create new main frame. /*. */. Function Members (Methods); public:. TGuiBuilder(); TGuiBuilder(const TGuiBuilder&); virtual~TGuiBuilder(); virtual voidAddAction(TGuiBldAction*, const char*); virtual voidAddSection(const char*); static TClass*Class(); virtual TGFrame*ExecuteAction(); TGuiBldAction*GetAction() const; virtual voidHide(); static TGuiBuilder*Instance(); virtual TClass*IsA() const; virtual Bool_tIsExecutable() const; TGuiBuilder&operator=(const TGuiBuilder&); virtual voidSetAction(TGuiBldAction* act); virtual voidShow(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. TGuiBldAction*fActioncurrent action. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGuiBuilder(); constructor. ~TGuiBuilder(); destructor. TGuiBuilder * Instance(); return an instance of TGuiBuilder object. TGuiBuilder(). void AddAction(TGuiBldAction* , const char* ); {}. void AddSection(const char* ); {}. TGFrame * ExecuteAction(); { return 0; }. void SetAction(TGuiBldAction* act); { fAction = act; }. TGuiBldAction * GetAction() const; { return fAction; }. Bool_t IsExecutable() const; { return fAction && !fAction->fAct.IsNull(); }. void Show(); {}. void Hide(); {}. » Author: Valeriy Onuchin 12/08/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGuiBuilder.html:3308,Inherit,Inheritance,3308,root/html534/TGuiBuilder.html,https://root.cern,https://root.cern/root/html534/TGuiBuilder.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n; this case, the number of cycles should be reduced, or the size; of the training sample increased. MethodCFMlpANN(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t ); CFMlpANN can handle classification with 2 classes. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options: NCycles=xx :the number of training cycles; HiddenLayser=""N-1,N-2"" :the specification of the hidden layers. void ProcessOptions(); decode the options in the option string. void Init( void ); default initialisation called by all constructors. ~MethodCFMlpANN( void ); destructor. void Train( void ); training of the Clement-Ferrand NN classifier. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns CFMlpANN output (normalised within [0,1]). Double_t EvalANN(vector<Double_t>& , Bool_t& isOK); evaluates NN value as function of input variables. void NN_ava(Double_t* ); auxiliary functions. Double_t NN_fonc(Int_t , Double_t ) const; activation function. void ReadWeightsFromStream(istream& istr); read back the weight from the training from file (stream). Int_t DataInterface(Double_t* , Double_t* , Int_t* , Int_t* , Int_t* , Int_t* , Double_t* , Int_t* , Int_t* ); data interface function. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); read weights from xml file. void PrintWeights(ostream& o) const; write the weights of the neural net. TMVA::MethodCFMlpANN* This( void ); static pointer to this object (required for external functions. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void MakeClassSpecificHeader(ostream& , const TString& = """") const; write specific classifier response for header. void GetHelpMessage() const; get help message text. typical length of text line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodCFMlpANN.html:22651,variab,variables,22651,root/html528/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodCFMlpANN.html,6,['variab'],['variables']
Modifiability,"n; void cleanup(); Function called by atexit() handler installed by RooSentinel to; cleanup global objects at end of job. RooNumIntConfig& defaultConfig(); Return reference to instance of default numeric integrator configuration object. RooNumIntConfig(); Constructor. ~RooNumIntConfig(); Destructor. RooNumIntConfig(const RooNumIntConfig& other); Copy constructor. RooNumIntConfig& operator=(const RooNumIntConfig& other); Assignment operator from other RooNumIntConfig. Bool_t addConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); Add a configuration section for a particular integrator. Integrator name and capabilities are; automatically determined from instance passed as 'proto'. The defaultConfig object is associated; as the default configuration for the integrator. RooArgSet& getConfigSection(const char* name); Return section with configuration parameters for integrator with given (class) name. const RooArgSet& getConfigSection(const char* name) const; Retrieve configuration information specific to integrator with given name. void setEpsAbs(Double_t newEpsAbs); Set absolute convergence criteria (convergence if abs(Err)<newEpsAbs). RooPrintable::StyleOption defaultPrintStyle(Option_t* opt) const. void setEpsRel(Double_t newEpsRel); Set relative convergence criteria (convergence if abs(Err)/abs(Int)<newEpsRel). void printMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; Detailed printing interface. RooCategory& method1D(); Return selected integration techniques for 1,2,N dimensional integrals. { return _method1D ; }. RooCategory& method2D(); { return _method2D ; }. RooCategory& methodND(); { return _methodND ; }. const RooCategory& method1D() const; { return _method1D ; }. const RooCategory& method2D() const; { return _method2D ; }. const RooCategory& methodND() const; { return _methodND ; }. RooCategory& method1DOpen(); Return selected integration techniques for 1,2,N dimensional open-ended integrals. { return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumIntConfig.html:9140,config,configuration,9140,root/html528/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html528/RooNumIntConfig.html,10,['config'],['configuration']
Modifiability,n;  ! Action type ;  ; bool fCleanElist;  True if original Tree elist must be saved. ;  ; Long64_t fCurrentSubEntry;  Current subentry when fSelectMultiple is true. Used to fill TEntryListArray. ;  ; Int_t fDimension;  Dimension of the current expression. ;  ; Long64_t fDraw;  ! Last entry loop number when object was drawn ;  ; Int_t fForceRead;  Force Read flag. ;  ; TTreeFormulaManager * fManager;  Pointer to the formula manager. ;  ; Int_t fMultiplicity;  Indicator of the variability of the size of entries. ;  ; Int_t * fNbins;  ![fDimension] Number of bins per dimension ;  ; Int_t fNfill;  ! Total number of histogram fills ;  ; bool fObjEval;  True if fVar1 returns an object (or pointer to). ;  ; Long64_t fOldEstimate;  Value of Tree fEstimate when selector is called. ;  ; TH1 * fOldHistogram;  ! Pointer to previously used histogram ;  ; TTreeFormula * fSelect;  Pointer to selection formula. ;  ; Long64_t fSelectedRows;  Number of selected entries. ;  ; bool fSelectMultiple;  True if selection has a variable index. ;  ; TTree * fTree;  Pointer to current Tree. ;  ; TObject * fTreeElist;  Pointer to Tree Event list. ;  ; TEntryListArray * fTreeElistArray;  ! Pointer to Tree Event list array ;  ; Double_t ** fVal;  ![fSelectedRows][fDimension] Local buffer for the variables ;  ; Int_t fValSize;  ; TTreeFormula ** fVar;  ![fDimension] Array of pointers to variables formula ;  ; bool * fVarMultiple;  ![fDimension] True if fVar[i] has a variable index ;  ; Double_t * fVmax;  ![fDimension] Maxima of varexp columns ;  ; Double_t * fVmin;  ![fDimension] Minima of varexp columns ;  ; Double_t * fW;  ![fSelectedRows]Local buffer for weights ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html:15679,variab,variable,15679,doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,5,['variab'],['variable']
Modifiability,"n;  Minimal bound of the range of the convolution. ;  . Static Private Attributes; static Double_t fgExtraRangeFraction = 0.1;  ! Additional default fraction of the range used for FFT convolution ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TF1Convolution.h>. Inheritance diagram for TF1Convolution:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TF1Convolution() [1/6]. TF1Convolution::TF1Convolution ; (; ). constructor without arguments. ; Definition at line 137 of file TF1Convolution.cxx. ◆ TF1Convolution() [2/6]. TF1Convolution::TF1Convolution ; (; TF1 * ; function1, . TF1 * ; function2, . Bool_t ; useFFT = true . ). constructor from the two function pointer and a flag is using FFT. ; Definition at line 145 of file TF1Convolution.cxx. ◆ TF1Convolution() [3/6]. TF1Convolution::TF1Convolution ; (; TF1 * ; function1, . TF1 * ; function2, . Double_t ; xmin, . Double_t ; xmax, . Bool_t ; useFFT = true . ). Constructor from the two function pointer and the convol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1Convolution.html:14346,inherit,inherited,14346,doc/master/classTF1Convolution.html,https://root.cern,https://root.cern/doc/master/classTF1Convolution.html,2,['inherit'],['inherited']
Modifiability,"n="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TF2; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TF1; static void AbsValue (Bool_t reject=kTRUE);  Static function: set the fgAbsValue flag. ;  ; static void CalcGaussLegendreSamplingPoints (Int_t num, Double_t *x, Double_t *w, Double_t eps=3.0e-11);  Type safe interface (static method) The number of sampling points are taken from the TGraph. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t DefaultAddToGlobalList (Bool_t on=kTRUE);  Static method to add/avoid to add automatically functions to the global list (gROOT->GetListOfFunctions() ) After having called this static method, all the functions created afterwards will follow the desired behaviour. ;  ; static Double_t DerivativeError ();  Static function returning the error of the last ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF3.html:42026,inherit,inherited,42026,doc/master/classTF3.html,https://root.cern,https://root.cern/doc/master/classTF3.html,2,['inherit'],['inherited']
Modifiability,"n="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMemFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TFile; static TFileOpenHandle * AsyncOpen (const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0);  Submit an asynchronous open request. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Cp (const char *src, const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000);  Allows to copy file from src to dst URL. ;  ; static TFile *& CurrentFile ();  Return the current ROOT file if any. ;  ; static const char * DeclFileName ();  ; static EAsyncOpenStatus GetAsyncOpenStatus (const char *name);  Get status of the async open request related to 'name'. ;  ; static EAsyncOpenStatus GetAsyncOpenStatus (TFileOpenHandle *handle);  Get status of the async open request related to 'handle'. ;  ; static const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html:25803,inherit,inherited,25803,doc/v632/classROOT_1_1TBufferMergerFile.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TBufferMergerFile.html,6,['inherit'],['inherited']
Modifiability,"n="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static void BuildParallelCoord (TSelectorDraw *selector, bool candle);  Call constructor and add the variables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SetEntryList (TParallelCoord *para, TEntryList *enlist);  Set the entry lists of ""para"". ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:19949,variab,variables,19949,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variables']
Modifiability,"n="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Process a data set (TDSet) using the specified selector object. ;  ; Long64_t Process (TFileCollection *fc, const char *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0) override;  Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ;  ; Long64_t Process (TFileCollection *fc, TSelector *sel, Option_t *o="""", Long64_t nent=-1, Long64_t fst=0) override;  Process a data set (TFileCollection) using the specified selector object The default tree is analyzed (i.e. ;  ; Long64_t Process (TSelector *sel, Long64_t nent, Option_t *o="""") override;  Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProof;  TProof (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Create a PROOF environment. ;  ;  ~TProof () override;  Clean up PROOF environment. ;  ; Int_t ActivateWorker (const char *ord, Bool_t save=kTRUE);  Make sure that the worker identified by the ordinal number 'ord' is in the active list. ;  ; void AddChain (TChain *chain);  Add chain to data set. ;  ; Int_t AddDynamicPath (const char *libpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'libpath' to the lib path search. ;  ; void AddFeedback (const char *name);  Add object to feedback list. ;  ; Int_t AddIncludePath (const char *incpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'incpath' to the inc path search. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofSuperMaster.html:2588,inherit,inherited,2588,doc/master/classTProofSuperMaster.html,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html,1,['inherit'],['inherited']
Modifiability,"n=""TEveCalo2D"", const char *t="""");  Constructor. ;  ;  ~TEveCalo2D () override;  Destructor. ;  ; void CellSelectionChanged () override;  Sort selected cells in eta or phi bins for selection and highlight. ;  ; void ComputeBBox () override;  Fill bounding-box information of the base-class TAttBBox (virtual method). ;  ; const TEveCalo2D::vBinCells_t & GetBinLists () const;  ; Float_t GetValToHeight () const override;  Virtual function of TEveCaloViz. ;  ; TClass * IsA () const override;  ; void SetProjection (TEveProjectionManager *proj, TEveProjectable *model) override;  Set projection manager and model object. ;  ; void SetScaleAbs (Bool_t) override;  Set absolute scale in projected calorimeter. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  This is virtual method from base-class TEveProjected. ;  ;  Public Member Functions inherited from TEveCaloViz;  TEveCaloViz (TEveCaloData *data=nullptr, const char *n=""TEveCaloViz"", const char *t="""");  ;  ~TEveCaloViz () override;  Destructor. ;  ; Bool_t AssertCellIdCache () const;  Assert cell id cache is ok. ;  ; TEveRGBAPalette * AssertPalette ();  Make sure the TEveRGBAPalette pointer is not null. ;  ; Bool_t CellInEtaPhiRng (TEveCaloData::CellData_t &) const;  Returns true if given cell is in the ceta phi range. ;  ; void DataChanged ();  Update setting and cache on data changed. ;  ; TEveElement * ForwardEdit () override;  Management of selection state and ownership of selected cell list is done in TEveCaloData. ;  ; TEveElement * ForwardSelection () override;  Management of selection state and ownership of selected cell list is done in TEveCaloData. ;  ; Bool_t GetAutoRange () const;  ; Float_t GetBackwardEndCapPos () const;  ; Float_t GetBarrelRadius () const;  ; TEveCaloData * GetData () const;  ; Color_t GetDataSliceColor (Int_t slice) const;  Get slice color from data. ;  ; Float_t GetDataSliceThreshold (Int_t slice) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCalo2D.html:3139,inherit,inherited,3139,doc/master/classTEveCalo2D.html,https://root.cern,https://root.cern/doc/master/classTEveCalo2D.html,1,['inherit'],['inherited']
Modifiability,"n>fFunc! copy of the fitted function containing on output the fit result; shared_ptr<ROOT::Math::Minimizer>fMinimizer! pointer to used minimizer; shared_ptr<ROOT::Math::IMultiGenFunction>fObjFunction! pointer to used objective function; shared_ptr<ROOT::Fit::FitResult>fResult! pointer to the object containing the result of the fit; boolfUseGradientflag to indicate if using gradient or not. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). bool SetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fitter(). Default constructor. Fitter(const std::shared_ptr<FitResult> & result). Constructor from a result. ~Fitter(). Destructor. Fitter(const Fitter &). Copy constructor (disabled, class is not copyable). bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(data). bool Fit(const BinData & data). Fit a binned data set using a least square fit (default method). SetData(const ROOT::Fit::FitData& data). return DoLeastSquareFit(). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. return DoUnbinnedLikelihoodFit(bool extended = false). bool LikelihoodFit(const BinData & data, bool extended = true). Binned Likelihood fit. Default is extended. return DoBinnedLikelihoodFit(bool extended = true). bool LikelihoodFit(const std::shared_ptr<BinData> & data, bool extended = true). bool LikelihoodFit(const UnBinData & data, bool extended = false). Unbinned Likeli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__Fitter.html:5931,extend,extended,5931,root/html604/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__Fitter.html,2,['extend'],['extended']
Modifiability,"nAllMethodsForRegressionvoid TrainAllMethodsForRegression(void)Definition Factory.h:116; TMVA::Factory::EvaluateImportanceAllTH1F * EvaluateImportanceAll(DataLoader *loader, Types::EMVA theMethod, TString methodTitle, const char *theOption="""")Definition Factory.cxx:2246; TMVA::Factory::SetVerbosevoid SetVerbose(Bool_t v=kTRUE)Definition Factory.cxx:343; TMVA::Factory::fgTargetFileTFile * fgTargetFile! ROOT output fileDefinition Factory.h:205; TMVA::Factory::fDefaultTrfsstd::vector< TMVA::VariableTransformBase * > fDefaultTrfs! list of transformations on default DataSetDefinition Factory.h:208; TMVA::Factory::GetMethodIMethod * GetMethod(const TString &datasetname, const TString &title) constReturns pointer to MVA that corresponds to given method title.Definition Factory.cxx:566; TMVA::Factory::DeleteAllMethodsvoid DeleteAllMethods(void)Delete methods.Definition Factory.cxx:324; TMVA::Factory::fTransformationsTString fTransformations! list of transformations to testDefinition Factory.h:212; TMVA::Factory::Greetingsvoid Greetings()Print welcome message.Definition Factory.cxx:295; TMVA::IMethodInterface for all concrete MVA method implementations.Definition IMethod.h:53; TMVA::MethodBaseVirtual base Class for all MVA method.Definition MethodBase.h:111; TMVA::ROCCurveDefinition ROCCurve.h:46; TMVA::Types::EMVAEMVADefinition Types.h:76; TMVA::Types::EAnalysisTypeEAnalysisTypeDefinition Types.h:126; TMVA::Types::ETreeTypeETreeTypeDefinition Types.h:142; TMVA::Types::kTesting@ kTestingDefinition Types.h:144; TMultiGraphA TMultiGraph is a collection of TGraph (or derived) objects.Definition TMultiGraph.h:34; TStringBasic string class.Definition TString.h:139; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; bool; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; v@ vDefinition rootcling_impl.cxx:3699; Types.h. tmvatmvaincTMVAFactory.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:40 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html:20089,variab,variable,20089,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,1,['variab'],['variable']
Modifiability,"nCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; TDirectory*RooDirItem::_dir! Associated directory; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; map<string,RooAbsData*>RooAbsData::_ownedComponentsOwned external components; static char*_poolBegin! Start of memory pool; static char*_poolCur! Next free slot in memory pool; static char*_poolEnd! End of memory pool; RooArgSetRooAbsData::_varsDimensions of this data set; RooArgSet_varsNoWgtVars without weight variable; RooRealVar*_wgtVarPointer to weight variable (if set); static RooAbsData::StorageTypeRooAbsData::defaultStorageType; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Clear memoery pool on exit to avoid reported memory leaks. void* operator new(size_t bytes); Overloaded new operator guarantees that all RooDataSets allocated with new; have a unique address, a property that is exploited in several places; in roofit to quickly index contents on normalization set pointers.; The memory pool only allocates space for the class itself. The elements; stored in the set are stored outside the pool. void operator delete(vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooDataSet.html:18379,variab,variables,18379,root/html602/RooDataSet.html,https://root.cern,https://root.cern/root/html602/RooDataSet.html,20,['variab'],"['variable', 'variables']"
Modifiability,"nClass ; (; void ; ). private . the matrix of covariance 'within class' reflects the dispersion of the events relative to the center of gravity of their own class ; Definition at line 351 of file MethodFisher.cxx. ◆ GetDiscrimPower(). void TMVA::MethodFisher::GetDiscrimPower ; (; void ; ). private . computation of discrimination power indicator for each variable small values of ""fWith"" indicates little compactness of sig & of backgd big values of ""fBetw"" indicates large separation between sig & backgd ; we want signal & backgd classes as compact and separated as possible the discriminating power is then defined as the ration ""fBetw/fWith"" ; Definition at line 528 of file MethodFisher.cxx. ◆ GetFisherCoeff(). void TMVA::MethodFisher::GetFisherCoeff ; (; void ; ). private . Fisher = Sum { [coeff]*[variables] }. ; let Xs be the array of the mean values of variables for signal evts let Xb be the array of the mean values of variables for backgd evts let InvWith be the inverse matrix of the 'within class' correlation matrix; then the array of Fisher coefficients is [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith ; Definition at line 457 of file MethodFisher.cxx. ◆ GetFisherMethod(). EFisherMethod TMVA::MethodFisher::GetFisherMethod ; (; void ; ). inline . Definition at line 87 of file MethodFisher.h. ◆ GetHelpMessage(). void TMVA::MethodFisher::GetHelpMessage ; (; ); const. protectedvirtual . get help message text ; typical length of text line: ""|--------------------------------------------------------------|"" ; Implements TMVA::IMethod.; Definition at line 702 of file MethodFisher.cxx. ◆ GetMean(). void TMVA::MethodFisher::GetMean ; (; void ; ). private . compute mean values of variables in each sample, and the overall means ; Definition at line 302 of file MethodFisher.cxx. ◆ GetMvaValue(). Double_t TMVA::MethodFisher::GetMvaValue ; (; Double_t * ; err = nullptr, . Double_t * ; errUpper = nullptr . ). virtual . returns the Fisher value (no fixed range) ; Imple",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:36279,variab,variables,36279,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,2,['variab'],['variables']
Modifiability,"nClass>.C, e.g.:; TFile/P10_TRFIOFile.C, TSQLServer/P20_TMySQLServer.C, etc.; to allow easy sorting and grouping. If the BaseClass is in a namespace; the directory must have the name NameSpace@@BaseClass as : is a reserved; pathname character on some operating systems. Macros not beginning with; 'P' and ending with "".C"" are ignored. If base is specified only plugin; macros for that base class are loaded. The macros typically; should look like:; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; }; In general these macros should not cause side effects, by changing global; ROOT state via, e.g. gSystem calls, etc. However, in specific cases; this might be useful, e.g. adding a library search path, adding a specific; dependency, check on some OS or ROOT capability or downloading; of the plugin. void AddHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor = 0, const char* origin = 0); Add plugin handler to the list of handlers. If there is already a; handler defined for the same base and regexp it will be replaced. void RemoveHandler(const char* base, const char* regexp = 0); Remove handler for the specified base class and the specified; regexp. If regexp=0 remove all handlers for the specified base. TPluginHandler * FindHandler(const char* base, const char* uri = 0); Returns the handler if there exists a handler for the specified URI.; The uri can be 0 in which case the first matching plugin handler; will be returned. Returns 0 in case handler is not found. void Print(Option_t* opt = """") const; Print list of registered plugin handlers. If option is ""a"" print; also the ctor's that will be used. Int_t WritePluginMacros(const char* dir, const char* plugin = 0) const; Write in the specified directory the plugin macros. If plugin is specified; and if it is a base class all macros for that base will be written. If it; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginManager.html:10804,plugin,pluginName,10804,root/html528/TPluginManager.html,https://root.cern,https://root.cern/root/html528/TPluginManager.html,20,['plugin'],"['plugin', 'pluginName']"
Modifiability,"nCode;  ! Registry of composite direct generator codes ;  ; RooListProxy _pdfList;  List of PDF components. ;  ; std::vector< std::unique_ptr< RooArgSet > > _pdfNSetList;  List of PDF component normalization sets. ;  ; TNamed * _refRangeName = nullptr;  Reference range name for interpretation of conditional products. ;  ; bool _selfNorm = true;  Is self-normalized. ;  ; bool _useDefaultGen = false;  Use default or distributed event generator. ;  . Friends; class RooFixedProdPdf;  ; class RooProdGenContext;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProdPdf.html:66793,inherit,inherited,66793,doc/master/classRooProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooProdPdf.html,4,['inherit'],['inherited']
Modifiability,"nColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveWindow*fCurrentWindow; TEveWindow*fDefaultContainer; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent au",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveWindowManager.html:23101,variab,variable,23101,root/html602/TEveWindowManager.html,https://root.cern,https://root.cern/root/html602/TEveWindowManager.html,4,['variab'],['variable']
Modifiability,"nConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooResolutionModel::xDependent/convolution variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddModel(). RooAddModel(const char* name, const char* title, const RooArgList& pdfList, const RooArgList& coefList, Bool_t ownPdfList = kFALSE); Generic constructor from list of PDFs and list of coefficients.; Each pdf list element (i) is paired with coefficient list element (i).; The number of coefficients must be either equal to the number of PDFs,; in which case extended MLL fitting is enabled, or be one less. All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal. RooAddModel(const RooAddModel& other, const char* name = 0); Copy constructor. ~RooAddModel(); Destructor. void fixCoefNormalization(const RooArgSet& refCoefNorm); By default the interpretation of the fraction coefficients is; performed in the contextual choice of observables. This makes the; shape of the p.d.f explicitly dependent on the choice of; observables. This method instructs RooAddPdf to freeze the; interpretation of the coefficien",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddModel.html:46487,Inherit,Inheritance,46487,root/html534/RooAddModel.html,https://root.cern,https://root.cern/root/html534/RooAddModel.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooResolutionModel::xDependent/convolution variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooTruthModel(const char* name, const char* title, RooRealVar& x); Constructor of a truth resolution model, i.e. a delta function in observable 'xIn'. RooTruthModel(const RooTruthModel& other, const char* name = 0); Copy constructor. ~RooTruthModel(); Destructor. Int_t basisCode(const char* name) const; Return basis code for given basis definition string. Return special; codes for 'known' bases for which compiled definition exists. Return; generic bases code if implementation relies on TFormula interpretation; of basis name. void changeBasis(RooFormulaVar* basis); Changes associated bases function to 'inBasis'. Double_t evaluate() const; Evaluate the truth model: a delta function when used as PDF,; the basis function itself, when convoluted with a basis function. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Advertise analytical integrals for compiled basis functions and when use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooTruthModel.html:44942,Inherit,Inheritance,44942,root/html534/RooTruthModel.html,https://root.cern,https://root.cern/root/html534/RooTruthModel.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionMultiDim*funcFunctor; RooListProxyvarsArgument reference; Double_t*xArgument value array. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFunctorPdfBinding(const char* name, const char* title, const ROOT::Math::IBaseFunctionMultiDim& ftor, const RooArgList& vars); Check that function dimension and number of variables match. RooFunctorPdfBinding(const RooFunctorPdfBinding& other, const char* name = 0); Copy constructor. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. TObject* clone(const char* newname) const; { return new RooFunctorBinding(*this,newname); }. RooFunctorPdfBinding(); Default constructor. virtual ~RooFunctorPdfBinding(); { delete[] x ; }. » Last changed: Tue Jun 2 13:09:48 2015 » Last generated: 2015-06-02 13:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFunctorPdfBinding.html:45571,variab,variables,45571,root/html602/RooFunctorPdfBinding.html,https://root.cern,https://root.cern/root/html602/RooFunctorPdfBinding.html,6,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable', 'variables']"
Modifiability,"nConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionMultiDim*funcFunctor; RooListProxyvarsArgument reference; Double_t*xArgument value array. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFunctorPdfBinding(const char* name, const char* title, const ROOT::Math::IBaseFunctionMultiDim& ftor, const RooArgList& vars); Check that function dimension and number of variables match. RooFunctorPdfBinding(const RooFunctorPdfBinding& other, const char* name = 0); Copy constructor. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. TObject* clone(const char* newname) const; { return new RooFunctorBinding(*this,newname); }. RooFunctorPdfBinding(); Default constructor. virtual ~RooFunctorPdfBinding(); { delete[] x ; }. » Last changed: Tue Jun 2 15:31:05 2015 » Last generated: 2015-06-02 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFunctorPdfBinding.html:45571,variab,variables,45571,root/html604/RooFunctorPdfBinding.html,https://root.cern,https://root.cern/root/html604/RooFunctorPdfBinding.html,6,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable', 'variables']"
Modifiability,"nDefinition legend1.C:16; is more efficient than if (fEventNumber<10 || fEventNumber>10); Access to TClonesArray.; If a branch (or member) is a TClonesArray (let's say fTracks), you can access the TClonesArray itself by using ->: fTracks->GetLast();; However this will load the full TClonesArray object and its content. To quickly read the size of the TClonesArray use (note the dot): fTracks.GetEntries();; This will read only the size from disk if the TClonesArray has been split. To access the content of the TClonesArray, use the [] operator: float px = fTracks[i].fPx; // fPx of the i-th track; Warning:; The variable actually use for access are 'wrapper' around the real data type (to add autoload for example) and hence getting to the data involves the implicit call to a C++ conversion operator. This conversion is automatic in most case. However it is not invoked in a few cases, in particular in variadic function (like printf). So when using printf you should either explicitly cast the value or use any intermediary variable: fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; Also, optionally, the generated selector will also call methods named macrofilename_methodname in each of 6 main selector methods if the method macrofilename_methodname exist (Where macrofilename is stripped of its extension).; Concretely, with the script named h1analysisProxy.C,. The method calls the method (if it exist); Begin -> void h1analysisProxy_Begin(TTree*);; SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; Notify -> bool h1analysisProxy_Notify();; Process -> bool h1analysisProxy_Process(Long64_t);; SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; Terminate -> void h1analysisProxy_Terminate();. If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist it is included before the declaration of the proxy class. This can be used in particular to insure that the include files needed by the macro file are properly loaded.; The default histogram is accessible via the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePlayer.html:34721,variab,variable,34721,doc/master/classTTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTTreePlayer.html,1,['variab'],['variable']
Modifiability,"nDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawListOfPolyMarkers3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawListOfPolyMarkers3D.html:7699,variab,variable,7699,root/html530/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html530/TProofDrawListOfPolyMarkers3D.html,1,['variab'],['variable']
Modifiability,"nDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t>*fPoints; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SlaveBegin(TTree* ); See TProofDraw::SlaveBegin(). void DoFill(Long64_t entry, Double_t w, const Double_t* v); Fills the scatter plot with the given values. void Terminate(void); See TProofDraw::Terminate(). void DefVar(). TProofDrawListOfPolyMarkers3D(); { }. » Author: Maarten Ballintijn 24/09/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofDraw.h 39173 2011-05-12 18:04:44Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofDrawListOfPolyMarkers3D.html:7699,variab,variable,7699,root/html532/TProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/root/html532/TProofDrawListOfPolyMarkers3D.html,2,['variab'],['variable']
Modifiability,"nDone = false;  Flag to keep trace of the status of the combination. ;  ; RooAbsPdf * fComboBkgPdf = nullptr;  The background model combination. ;  ; RooCategory * fComboCat = nullptr;  The category of the combination. ;  ; RooDataSet * fComboDataset = nullptr;  The datasets combination. ;  ; RooAbsPdf * fComboSigBkgPdf = nullptr;  The signal plus background model combination. ;  ; TList fDatasetsNames;  List of channels names to combine for the datasets. ;  ; int fInclusionLevel = 0;  Keep trace of the inclusion deepness. ;  ; TList fLabelsNames;  List of channels names to combine for the datasets. ;  ; bool fOwnWs = false;  Owns workspace. ;  ; TList fSigBkgPdfNames;  List of channels names to combine for the signal plus background pdfs. ;  ; bool fVerbose = false;  The verbosity flag. ;  ; RooWorkspace * fWs = nullptr;  The RooWorkspace containing the models and variables. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/HLFactory.h>. Inheritance diagram for R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HLFactory.html:12678,inherit,inherited,12678,doc/master/classRooStats_1_1HLFactory.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HLFactory.html,1,['inherit'],['inherited']
Modifiability,"nEntries(); virtual TTreeCache::EPrefillTypeGetLearnPrefill() const; virtual const char*TObject::GetName() const; virtual Long64_tTFileCacheRead::GetNoCacheBytesRead() const; virtual Int_tTFileCacheRead::GetNoCacheReadCalls() const; Int_tTFileCacheRead::GetNseek() const; Int_tTFileCacheRead::GetNtot() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTFileCacheRead::GetPrefetchedBlocks() const; virtual TFilePrefetch*TFileCacheRead::GetPrefetchObj(); virtual Int_tTFileCacheRead::GetReadCalls() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTFileCacheRead::GetUnzipBuffer(char**, Long64_t, Int_t, Bool_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFileCacheRead::IsAsyncReading() const; Bool_tIsAutoCreated() const; virtual Bool_tIsEnabled() const; virtual Bool_tTFileCacheRead::IsEnablePrefetching() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLearning() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLearnPrefill(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeCache.html:12726,Inherit,InheritsFrom,12726,root/html534/TTreeCache.html,https://root.cern,https://root.cern/root/html534/TTreeCache.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nEntries(); virtual TTreeCache::EPrefillTypeGetLearnPrefill() const; virtual const char*TObject::GetName() const; virtual Long64_tTFileCacheRead::GetNoCacheBytesRead() const; virtual Int_tTFileCacheRead::GetNoCacheReadCalls() const; Int_tTFileCacheRead::GetNseek() const; Int_tTFileCacheRead::GetNtot() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tTFileCacheRead::GetPrefetchedBlocks() const; virtual TFilePrefetch*TFileCacheRead::GetPrefetchObj(); virtual Int_tTFileCacheRead::GetReadCalls() const; virtual const char*TObject::GetTitle() const; TTree*GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTFileCacheRead::GetUnzipBuffer(char**, Long64_t, Int_t, Bool_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFileCacheRead::IsAsyncReading() const; Bool_tIsAutoCreated() const; virtual Bool_tIsEnabled() const; virtual Bool_tTFileCacheRead::IsEnablePrefetching() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLearning() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidLearnPrefill(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeCache.html:12689,Inherit,InheritsFrom,12689,root/html602/TTreeCache.html,https://root.cern,https://root.cern/root/html602/TTreeCache.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nEvent(TFile* file, const char* filename, Double_t start); virtual voidFileReadEvent(TFile* file, Int_t len, Double_t start); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetBytesRead() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualPerfStats&opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualPerfStats.html:3016,Inherit,InheritsFrom,3016,root/html534/TVirtualPerfStats.html,https://root.cern,https://root.cern/root/html534/TVirtualPerfStats.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nEvent(TFile* file, const char* filename, Double_t start); virtual voidFileReadEvent(TFile* file, Int_t len, Double_t start); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetBytesRead() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual Long64_tGetNumEvents() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualPerfStats&operator=(const TVirtualPerfStats",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPerfStats.html:3040,Inherit,InheritsFrom,3040,root/html602/TVirtualPerfStats.html,https://root.cern,https://root.cern/root/html602/TVirtualPerfStats.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nGradient&Grad() const; boolHasAccurateCovar() const; boolHasCovariance() const; boolHasMadePosDefCovar() const; boolHasPosDefCovar() const; boolHasReachedCallLimit() const; boolHasValidCovariance() const; boolHasValidParameters() const; boolHesseFailed() const; boolIsAboveMaxEdm() const; boolIsValid() const; intNFcn() const; ROOT::Minuit2::FunctionMinimum&operator=(const ROOT::Minuit2::FunctionMinimum& min); const ROOT::Minuit2::MinimumParameters&Parameters() const; const ROOT::Minuit2::MinimumSeed&Seed() const; voidSetErrorDef(double up); const ROOT::Minuit2::MinimumState&State() const; const vector<ROOT::Minuit2::MinimumState>&States() const; doubleUp() const; const ROOT::Minuit2::MnUserCovariance&UserCovariance() const; const ROOT::Minuit2::MnUserParameters&UserParameters() const; const ROOT::Minuit2::MnUserParameterState&UserState() const. Data Members; private:. ROOT::Minuit2::FunctionMinimum::MnRefCountedPointer<BasicFunctionMinimum>fData. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, double up); constructor from only MinimumSeed. Minimum is only from seed result not full minimization. {}. FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, const vector<MinimumState>& states, double up); constructor at the end of a successfull minimization from seed and vector of states. {}. FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, const vector<MinimumState>& states, double up, ROOT::Minuit2::FunctionMinimum::MnReachedCallLimit ); constructor at the end of a failed minimization due to exceeding function call limit. {}. FunctionMinimum(const ROOT::Minuit2::MinimumSeed& seed, const vector<MinimumState>& states, double up, ROOT::Minuit2::FunctionMinimum::MnAboveMaxEdm ); constructor at the end of a failed minimization due to edm above maximum value. {}. FunctionMinimum(const ROOT::Minuit2::FunctionMinimum& min); copy constructo. {}. FunctionMinimum& operator=(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__FunctionMinimum.html:2463,Inherit,Inheritance,2463,root/html532/ROOT__Minuit2__FunctionMinimum.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__FunctionMinimum.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nHeader(Option_t* option) const. private:. Bool_tCheckDuplicateName(TObject* obj); Bool_tUnsetDirectory(TObject* obj). Data Members; public:. enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTList::fAscending! sorting order (when calling Sort() or for TSortedList); TObjLink*TList::fCache! cache to speedup sequential calling of Before() and After() functions; TObjLink*TList::fFirst! pointer to first entry in linked list; TObjLink*TList::fLast! pointer to last entry in linked list; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t UnsetDirectory(TObject* obj); If the class of obj has the SetDirectory(TDirectory*) method; call it to unset the directory assiciation. The objects in the; selector list or owned by the list and not by the directory that; was active when they were created. Returns true in case of success. Bool_t CheckDuplicateName(TObject* obj); Check for duplicate object names in the list. If an object with; the same name is added then the merge function will fail that will; look up objects in different output lists by name. Returns true; in case name is unique. void AddFirst(TObject* obj); Add at the start of the list. void AddFirst(TObject* obj, Option_t* opt); Add at the start of the list. void AddLast(TObject* obj); Add at the end of the list. void AddLast(TObject* obj, Option_t* opt); Add at the end of the list. void AddAt(TObject* obj, Int_t idx); Add to the list. void AddAfter(const TObject* after, TObject* obj); Add to the list. void Ad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelectorList.html:10137,Inherit,Inheritance,10137,root/html532/TSelectorList.html,https://root.cern,https://root.cern/root/html532/TSelectorList.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nHeader(Option_t* option) const. private:. voidInit(Int_t i); voidRootIsEmpty(); voidRootIsFull(). Data Members; public:. enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. private:. Int_tfInnerLowWaterMarkinner node low water mark; Int_tfInnerMaxIndexmaximum inner node index; Int_tfLeafLowWaterMarkleaf low water mark; Int_tfLeafMaxIndexmaximum leaf index; Int_tfOrderthe order of the tree (should be > 2); Int_tfOrder2order*2+1 (assumes a memory access is; TBtNode*fRootroot node of btree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBtree(Int_t ordern = 3); Create a B-tree of certain order (by default 3). ~TBtree(); Delete B-tree. Objects are not deleted unless the TBtree is the; owner (set via SetOwner()). void Add(TObject* obj); Add object to B-tree. TObject * After(const TObject* obj) const; Cannot use this method since B-tree decides order. TObject * Before(const TObject* obj) const; May not use this method since B-tree decides order. void Clear(Option_t* option = """"); Remove all objects from B-tree. Does NOT delete objects unless the TBtree; is the owner (set via SetOwner()). void Delete(Option_t* option = """"); Remove all objects from B-tree AND delete all heap based objects. TObject * FindObject(const char* name) const; Find object using its name (see object's GetName()). Requires sequential; search of complete tree till object is found. TObject * FindObject(const TObject* obj) const; Find object using the objects Compare() member function. Int_t IdxAdd(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBtree.html:16311,Inherit,Inheritance,16311,root/html532/TBtree.html,https://root.cern,https://root.cern/root/html532/TBtree.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTSpline::fDeltaDistance between equidistant knots; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TGraph*TSpline::fGraphGraph for drawing the knots; TH1F*TSpline::fHistogramTemporary histogram; Bool_tTSpline::fKstepTrue of equidistant knots; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTSpline::fNpNumber of knots; Int_tTSpline::fNpxNumber of points used for graphical representation; TStringTNamed::fTitleobject title; Double_tTSpline::fXmaxMaximum value of abscissa; Double_tTSpline::fXminMinimum value of abscissa. private:. TGraph*fGraphgraph that is splined. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpline2(const TString& title, TGraph* theGraph); constructor from TGraph; TSpline is a TNamed object. ~TSpline2( void ); destructor. Double_t Eval(Double_t x) const; returns quadratically interpolated TGraph entry around x. void BuildCoeff( void ); no coefficients to precompute. void GetKnot(Int_t i, Double_t& x, Double_t& y) const; no knots. Double_t Quadrax(Float_t dm, Float_t dm1, Float_t dm2, Float_t dm3, Float_t cos1, Float_t cos2, Float_t cos3) const; quadratic interpolation; Revised and checked by Francois Nov, 16th, 2000; Note the beautiful non-spontaneous symmetry breaking ...; It was checked that the old routine gave exactly the same answers. TSpline2(const TString& title, TGraph* theGraph). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__TSpline2.html:8760,Inherit,Inheritance,8760,root/html534/TMVA__TSpline2.html,https://root.cern,https://root.cern/root/html534/TMVA__TSpline2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTSpline::fDeltaDistance between equidistant knots; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TGraph*TSpline::fGraphGraph for drawing the knots; TH1F*TSpline::fHistogramTemporary histogram; Bool_tTSpline::fKstepTrue of equidistant knots; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; TStringTNamed::fNameobject identifier; Int_tTSpline::fNpNumber of knots; Int_tTSpline::fNpxNumber of points used for graphical representation; TStringTNamed::fTitleobject title; Double_tTSpline::fXmaxMaximum value of abscissa; Double_tTSpline::fXminMinimum value of abscissa. private:. TGraph*fGraphgraph that is splined. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpline2(const TString& title, TGraph* theGraph); constructor from TGraph; TSpline is a TNamed object. ~TSpline2( void ); destructor. Double_t Eval(Double_t x) const; returns quadratically interpolated TGraph entry around x. void BuildCoeff( void ); no coefficients to precompute. void GetKnot(Int_t i, Double_t& x, Double_t& y) const; no knots. Double_t Quadrax(Float_t dm, Float_t dm1, Float_t dm2, Float_t dm3, Float_t cos1, Float_t cos2, Float_t cos3) const; quadratic interpolation; Revised and checked by Francois Nov, 16th, 2000; Note the beautiful non-spontaneous symmetry breaking ...; It was checked that the old routine gave exactly the same answers. TSpline2(const TString& title, TGraph* theGraph). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id: TSpline2.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:20; This page has been automatically g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__TSpline2.html:8518,Inherit,Inheritance,8518,root/html532/TMVA__TSpline2.html,https://root.cern,https://root.cern/root/html532/TMVA__TSpline2.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fDecorrMatrices! Decorrelation matrix [class0/class1/.../all classes]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableDecorrTransform( DataSetInfo& dsi ); constructor. ~VariableDecorrTransform(); destructor. void Initialize(); initialisation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the decorrelation matrix and the normalization. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; apply the decorrelation transformation. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const; apply the inverse decorrelation transformation ...; TODO : this is only a copy of the transform method... build the inverse transformation. void CalcSQRMats(const vector<TMVA::Event*,allocator<TMVA::Event*> >& , Int_t maxCls); compute square-root matrices for signal and background. void WriteTransformationToStream(ostream& ) const; write the decorrelation matrix to the stream. void AttachXMLTo(void* parent); node attachment to parent. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void ReadTransformationFromStream(istream& , const TString& ); Read the decorellation matrix from an input stream. void PrintTransformation(ostream& o); prints the transformation matrix. void MakeFunction(ostream& fout, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__VariableDecorrTransform.html:8400,variab,variable,8400,root/html528/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html528/TMVA__VariableDecorrTransform.html,1,['variab'],['variable']
Modifiability,"nHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TDictionary::ESTLTypekList; static TDictionary::ESTLTypekMap; static TDictionary::ESTLTypekMultimap; static TDictionary::ESTLTypekMultiset; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TDictionary::ESTLTypekNone; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TDictionary::ESTLTypekSet; static TObject::(anonymous)TObject::kSingleKey; static TDictionary::ESTLTypekVector; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TDictAttributeMap*fAttributeMappointer to a class attribute map; ULong64_tfUpdatingTransactionCount!the Cling ID of the transaction that last updated the object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDictionary(const TDictionary& dict); Copy constructor, cloning fAttributeMap. ~TDictionary(); Destruct a TDictionary, delete the attribute map. TDictionary & operator=(const TDictionary& other); Assignment op, cloning fAttributeMap. void CreateAttributeMap(); Create a TDictAttributeMap for a TClass to be able to add attribute pairs; key-value to the TClass. TDictionary* GetDictionary(const char* name); Retrieve the type (class, fundamental type, typedef etc); named ""name"". Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. TDictionary* GetDictionary(const type_info& typeinfo); Retrieve the type (class, fundamental type, typedef etc); with typeid typeinfo. Returned object is either a TClass or TDataType.; Returns 0 if the type is unknown. Bool_t UpdateInterpreterStateMarker(); Return true if there were any transactions that could have changed the; state of the object. TDictionary(); { }. TDictionary(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDictionary.html:7412,Inherit,Inheritance,7412,root/html602/TDictionary.html,https://root.cern,https://root.cern/root/html602/TDictionary.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidWriteStateToFile() const. protected:. virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidTMVA::IMethod::GetHelpMessage() const; const TString&GetInternalVarName(Int_t ivar) const; const TString&GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*GetThisBase(); const TString&GetWeightFileDir() const; Bool_tHasTrainingTree() const; Bool_tHelp() const; Bool_tIgnoreEventsWithNegWeightsInTraining() const; Bool_tIsConstructedFromWeightFile() const; Bool_tIsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString& = """") const; virtual voidMakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidNoErrorCalc(Double_t *const err, Double_t *const errUpper); virtual voidReadWeightsFromStream(istream&); virtual voidReadWeightsFromStream(TFile&); virtual voidReadWeightsFromXML(void* wghtnode); voidTMVA::Configurable::ResetSetFlag(); voidSetNormalised(Bool_t norm); voidSetWeightFileDir(TString fileDir); voidSetWeightFileName(TString); voidStatistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTxtWeightsOnly() const; Bool_tVerbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidAddClassesXMLTo(void* parent) const; virtual voidAddClassifierOutput(TMVA::Types::ETreeType type); virtual voidAddClassifierOutputProb(TMVA::Types::ETreeType type); voidAddInfoItem(void* gi, const TString& name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:12672,Config,Configurable,12672,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,6,['Config'],['Configurable']
Modifiability,"nInfo; static UInt_tfgTmva_Version_Codeset only when read from weightfile. protected:. Bool_tfCutTypetrue: if event variable > cutValue ==> signal , false otherwise; Float_tfCutValuecut value appplied on this node to discriminate bkg against sig; UInt_tTMVA::Node::fDepthdepth of the node within the tree (seen from root node); vector<Double_t>fFisherCoeffthe fisher coeff (offset at the last element); Bool_tfIsTerminalNode! flag to set node as terminal (i.e., without deleting its descendants); TMVA::Node*TMVA::Node::fLeftpointers to the two ""daughter"" nodes; Int_tfNodeTypeType of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal; TMVA::Node*TMVA::Node::fParentthe previous (parent) node; TMVA::BinaryTree*TMVA::Node::fParentTreepointer to the parent tree to which the Node belongs; charTMVA::Node::fPosposition, i.e. it is a left (l) or right (r) daughter; Float_tfPuritythe node purity; Float_tfRMSresponse RMS of the regression node; Float_tfResponseresponse value in case of regression; TMVA::Node*TMVA::Node::fRightpointers to the two ""daughter"" nodes; Short_tfSelectorindex of variable used in node selection (decision tree); TMVA::DTNodeTrainingInfo*fTrainInfo. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; DecisionTreeNode(); constructor of an essentially ""empty"" node floating in space. DecisionTreeNode(TMVA::Node* p, char pos); constructor of a daughter node as a daughter of 'p'. DecisionTreeNode(const TMVA::DecisionTreeNode& n, TMVA::DecisionTreeNode* parent = __null); copy constructor of a node. It will result in an explicit copy of; the node and recursively all it's daughters. ~DecisionTreeNode(); destructor. Bool_t GoesRight(const TMVA::Event& ) const; test event if it decends the tree at this node to the right. Bool_t GoesLeft(const TMVA::Event& ) const; test event if it decends the tree at this node to the left. void SetPurity( void ); return the S/(S+B) (purity) for the node; REM: even if nodes with purity 0.01 are ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTreeNode.html:6266,variab,variable,6266,root/html602/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTreeNode.html,4,['variab'],['variable']
Modifiability,"nLayers=""N+5"",; TestRate=5,; UseRegulator=False,; ); ; ## Here we book the new DNN of TMVA if we have support in ROOT. We will use GPU version if ROOT is enabled with GPU; ; ; ## Booking Deep Neural Network; ; # Here we define the option string for building the Deep Neural network model.; ; #### 1. Define DNN layout; ; # The DNN configuration is defined using a string. Note that whitespaces between characters are not allowed.; ; # We define first the DNN layout:; ; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); ; # *(note the use of the character `|` as separator of input parameters for DNN layout)*; ; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; ; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); ; # *the different layers are separated by the ``"",""`` *; ; #### 2. Define Training Strategy; ; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; ; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the sa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:63303,variab,variables,63303,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['variab'],['variables']
Modifiability,nList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; TEveShape::vVector2_tfDebugPoints; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveShape::vVector2_tfPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and contr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveBoxProjected.html:21447,variab,variable,21447,root/html602/TEveBoxProjected.html,https://root.cern,https://root.cern/root/html602/TEveBoxProjected.html,4,['variab'],['variable']
Modifiability,"nMaxvoid CalcMinMax(DataSet *, DataSetInfo &dsi)compute covariance matrixDefinition DataSetFactory.cxx:479; TMVA::DataSetFactory::ValuePerClassstd::vector< Double_t > ValuePerClassDefinition DataSetFactory.h:123; TMVA::DataSetFactory::BuildDynamicDataSetDataSet * BuildDynamicDataSet(DataSetInfo &)Definition DataSetFactory.cxx:149; TMVA::DataSetFactory::EvtStatsPerClassstd::vector< EventStats > EvtStatsPerClassDefinition DataSetFactory.h:155; TMVA::DataSetFactory::CheckTTreeFormulaBool_t CheckTTreeFormula(TTreeFormula *ttf, const TString &expression, Bool_t &hasDollar)checks a TTreeFormula for problemsDefinition DataSetFactory.cxx:251; TMVA::DataSetFactory::RenormEventsvoid RenormEvents(DataSetInfo &dsi, EventVectorOfClassesOfTreeType &eventsmap, const EvtStatsPerClass &eventCounts, const TString &normMode)renormalisation of the TRAINING event weightsDefinition DataSetFactory.cxx:1488; TMVA::DataSetFactory::CalcCorrelationMatrixTMatrixD * CalcCorrelationMatrix(DataSet *, const UInt_t classNumber)computes correlation matrix for variables ""theVars"" in tree; ""theType"" defines the required event ""ty...Definition DataSetFactory.cxx:548; TMVA::DataSetFactory::CalcCovarianceMatrixTMatrixD * CalcCovarianceMatrix(DataSet *, const UInt_t classNumber)compute covariance matrixDefinition DataSetFactory.cxx:579; TMVA::DataSetFactory::EventVectorstd::vector< Event * > EventVectorDefinition DataSetFactory.h:118; TMVA::DataSetInfoClass that contains all the data information.Definition DataSetInfo.h:62; TMVA::DataSetInfo::GetVariableInfosstd::vector< VariableInfo > & GetVariableInfos()Definition DataSetInfo.h:103; TMVA::DataSetInfo::HasCutsBool_t HasCuts() constDefinition DataSetInfo.cxx:186; TMVA::DataSetInfo::GetNVariablesUInt_t GetNVariables() constDefinition DataSetInfo.h:127; TMVA::DataSetInfo::GetNSpectatorsUInt_t GetNSpectators(bool all=kTRUE) constDefinition DataSetInfo.cxx:511; TMVA::DataSetInfo::GetVarArraySizeInt_t GetVarArraySize(const TString &expression) constDefinition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:86764,variab,variables,86764,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variables']
Modifiability,"nMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; const RooArgSet*_projDepsPointer to set with projected observables; TListRooAbsArg::_proxyListlist of proxies; string_rangeNameName of range in which to calculate test statistic; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_t_simCountTotal number of component p.d.f.s in RooSimultaneous (if any); RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Bool_t_splitRangeSplit rangeName in RooSimultaneous index labels if true; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verboseVerbose messaging if true; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooAbsTestStatistic**_gofArray! Array of sub-contexts representing part of the combined test statistic; RooAbsTestStatistic::GOFOpMode_gofOpModeOperation mode of test statistic instance ; Bool_t_init! Is object initialized ; RooRealMPFE**_mpfeArray! Array of parallel execution frond ends; Bool_t_mpinterlUse interleaving strategy rather than N-wise split for partioning of dataset for multiprocessor-split; Int_t_nCPUNumber of processors to use in parallel calculation mode; Int_t_nEventsTotal number of events in test statistic calculation; Int_t_nGofNumber of sub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsTestStatistic.html:33695,config,configuration,33695,root/html526/RooAbsTestStatistic.html,https://root.cern,https://root.cern/root/html526/RooAbsTestStatistic.html,1,['config'],['configuration']
Modifiability,"nMultiDim>(const ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>&); ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>(int dim, int npoint); virtual ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::BaseFunction*Clone() const; virtual const ROOT::Fit::UnBinData&Data() const; virtual doubleDataElement(const double* x, unsigned int i, double* g) const; virtual voidGradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(); ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(const ROOT::Math::IBaseFunctionMultiDim&); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>(const ROOT::Fit::UnBinData& data, const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = false); virtual const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&ModelFunction() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeightSquare(bool on = true).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__LogLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:1990,extend,extended,1990,root/html602/ROOT__Fit__LogLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__LogLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,2,['extend'],['extended']
Modifiability,"nName() const; virtual TVirtualStreamerInfo*GetInfo(); virtual TProcessID*GetLastProcessID(TRefTable* reftable) const; virtual Int_tGetMapCount() const; virtual voidGetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetParent() const; virtual UShort_tGetPidOffset() const; ReAllocCharFun_tGetReAllocFunc() const; virtual const char*TObject::GetTitle() const; virtual UInt_tGetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidIncrementLevel(TVirtualStreamerInfo* info); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsWriting() const; Bool_tTObject::IsZombie() const; Int_tLength() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMapObject(const TObject* obj, UInt_t offset = 1); virtual voidMapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBuffer.html:4216,Inherit,InheritsFrom,4216,root/html532/TBuffer.html,https://root.cern,https://root.cern/root/html532/TBuffer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nName() const; virtual TVirtualStreamerInfo*GetInfo(); virtual TProcessID*GetLastProcessID(TRefTable* reftable) const; virtual Int_tGetMapCount() const; virtual voidGetMappedObject(UInt_t tag, void*& ptr, TClass*& ClassPtr) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetParent() const; virtual UShort_tGetPidOffset() const; ReAllocCharFun_tGetReAllocFunc() const; virtual const char*TObject::GetTitle() const; virtual UInt_tGetTRefExecId(); virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetVersionOwner() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidIncrementLevel(TVirtualStreamerInfo* info); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitMap(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReading() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsWriting() const; Bool_tTObject::IsZombie() const; Int_tLength() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMapObject(const TObject* obj, UInt_t offset = 1); virtual voidMapObject(const void* obj, const TClass* cl, UInt_t offset = 1); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBuffer.html:4216,Inherit,InheritsFrom,4216,root/html602/TBuffer.html,https://root.cern,https://root.cern/root/html602/TBuffer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nName.Length() + (isNormalized ? 1 : 0);; 1186 Int_t closingBracketPos = kNPOS;; 1187 if (openingBracketPos > formula.Length() || formula[openingBracketPos] != '[') {; 1188 dim = funDim;; 1189 variables.resize(dim);; 1190 for (Int_t idim = 0; idim < dim; ++idim); 1191 variables[idim] = defaultVariableNames[idim];; 1192 defaultVariables = true;; 1193 } else {; 1194 // in case of [..] found, assume they specify all the variables. Use it to get function dimension; 1195 closingBracketPos = formula.Index(']', openingBracketPos);; 1196 varList = formula(openingBracketPos + 1, closingBracketPos - openingBracketPos - 1);; 1197 dim = varList.CountChar(',') + 1;; 1198 variables.resize(dim);; 1199 Int_t Nvar = 0;; 1200 TString varName = """";; 1201 for (Int_t i = 0; i < varList.Length(); ++i) {; 1202 if (IsFunctionNameChar(varList[i])) {; 1203 varName.Append(varList[i]);; 1204 }; 1205 if (varList[i] == ',') {; 1206 variables[Nvar] = varName;; 1207 varName = """";; 1208 Nvar++;; 1209 }; 1210 }; 1211 if (varName != """") // we will miss last variable; 1212 {; 1213 variables[Nvar] = varName;; 1214 }; 1215 }; 1216 // check if dimension obtained from [...] is compatible with what is defined in existing pre-defined functions; 1217 // std::cout << "" Found dim = "" << dim << "" and function dimension is "" << funDim << std::endl;; 1218 if (dim != funDim) {; 1219 pair<TString, Int_t> key = make_pair(funName, dim);; 1220 if (functions.find(key) == functions.end()) {; 1221 Error(""PreProcessFormula"", ""Dimension of function %s is detected to be of dimension %d and is not ""; 1222 ""compatible with existing pre-defined function which has dim %d"",; 1223 funName.Data(), dim, funDim);; 1224 return;; 1225 }; 1226 // skip the particular function found - we might find later on the corresponding pre-defined function; 1227 funPos = formula.Index(funName, lastFunPos);; 1228 continue;; 1229 }; 1230 // look now for the (..) brackets to get the parameter counter (e.g. gaus(0) + gaus(3) ); 1231 // need to start fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:45207,variab,variables,45207,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,3,['variab'],"['variable', 'variables']"
Modifiability,"nNegWeightsDefinition DataSetFactory.h:136; TMVA::DataSetFactory::EventStats::nTestingEventsRequestedInt_t nTestingEventsRequestedDefinition DataSetFactory.h:129; TMVA::DataSetFactoryClass that contains all the data information.Definition DataSetFactory.h:116; TMVA::DataSetFactory::~DataSetFactory~DataSetFactory()destructorDefinition DataSetFactory.cxx:107; TMVA::DataSetFactory::fSpectatorFormulasstd::vector< TTreeFormula * > fSpectatorFormulasspectatorsDefinition DataSetFactory.h:233; TMVA::DataSetFactory::fWeightFormulastd::vector< TTreeFormula * > fWeightFormulaweightsDefinition DataSetFactory.h:232; TMVA::DataSetFactory::fCurrentTreeTTree * fCurrentTreethe tree, events are currently read fromDefinition DataSetFactory.h:224; TMVA::DataSetFactory::VerboseBool_t Verbose()Definition DataSetFactory.h:209; TMVA::DataSetFactory::LogMsgLogger & Log() constDefinition DataSetFactory.h:236; TMVA::DataSetFactory::BuildInitialDataSetDataSet * BuildInitialDataSet(DataSetInfo &, TMVA::DataInputHandler &)if no entries, than create a DataSet with one Event which uses dynamic variables (pointers to variabl...Definition DataSetFactory.cxx:202; TMVA::DataSetFactory::DataSetFactoryDataSetFactory()constructorDefinition DataSetFactory.cxx:93; TMVA::DataSetFactory::EventVectorOfClassesOfTreeTypestd::map< Types::ETreeType, EventVectorOfClasses > EventVectorOfClassesOfTreeTypeDefinition DataSetFactory.h:120; TMVA::DataSetFactory::fCurrentEvtIdxUInt_t fCurrentEvtIdxthe current event (to avoid reading of the same event)Definition DataSetFactory.h:225; TMVA::DataSetFactory::ChangeToNewTreevoid ChangeToNewTree(TreeInfo &, const DataSetInfo &)While the data gets copied into the local training and testing trees, the input tree can change (for ...Definition DataSetFactory.cxx:293; TMVA::DataSetFactory::EventVectorOfTreeTypestd::map< Types::ETreeType, EventVector > EventVectorOfTreeTypeDefinition DataSetFactory.h:121; TMVA::DataSetFactory::fScaleWithPreselEffBool_t fScaleWithPreselEffhow to deal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8h_source.html:10492,variab,variables,10492,doc/master/DataSetFactory_8h_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8h_source.html,2,['variab'],"['variabl', 'variables']"
Modifiability,"nOneDim BaseParamFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IGradientFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ; typedef IGradientFunctionOneDim BaseGrad;  . Public Member Functions;  WrappedTF1 (const WrappedTF1 &rhs);  Copy constructor. ;  ;  WrappedTF1 (TF1 &f);  constructor from a TF1 function pointer. ;  ;  ~WrappedTF1 () override;  Destructor (no operations). ;  ; WrappedTF1 & operator= (const WrappedTF1 &rhs);  Assignment operator. ;  ; interface inherited from IFunction; ROOT::Math::IGenFunction * Clone () const override;  Clone the wrapper but not the original function. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricGradFunctionOneDim;  ~IParametricGradFunctionOneDim () override;  Virtual Destructor (no operations) ;  ; double ParameterDerivative (const double *x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter Compatibility interface with multi-dimensional functions. ;  ; double ParameterDerivative (const double *x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values (multi-dim like interface) ;  ; double ParameterDerivative (double x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter. ;  ; double ParameterDerivative (double x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values. ;  ; void ParameterGradient (const double *x, const double *p, double *grad) const;  Compatibility interface with multi-dimensional functions. ;  ; void ParameterGradient (const double *x, double *grad) const;  Evaluate all derivatives using cached parameter values (multi-dim like interface) ;  ; void ParameterGradient (double x, double *grad) const;  Evaluate all derivatives using ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedTF1.html:1974,inherit,inherited,1974,doc/master/classROOT_1_1Math_1_1WrappedTF1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedTF1.html,1,['inherit'],['inherited']
Modifiability,"nPercent); voidSetMinNodeSize(TString sizeInPercent); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); Double_tTestTreeQuality(TMVA::DecisionTree* dt); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:16028,Config,Configurable,16028,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,1,['Config'],['Configurable']
Modifiability,"nPlot(); The default constructor initializes default settings for the text window size.; 5.9.2 operator(); MnPlot::operator()(const std::vector\(<\)std::pair\(<\)double,double\(>\) \(>\)&) prints a vector of (x,y) points on the text terminal. operator()(double xmin, double ymin, const std::vector\(<\)std::pair\(<\)double,double\(>\) \(>\)&) prints in addition the coordinates of the (x,y) values at the minimum.; 5.10 MnScan and ScanMinimizer; [api:scan]; MnScan scans the value of the user function by varying one parameter. It is sometimes useful for debugging the user function or finding a reasonable starting point. Constructor arguments, methods arguments and names of methods are the same as for MnMigrad and VariableMetricMinimizer.; 5.10.1 scan(unsigned int par, unsigned int npoint, double low, double high); Scans the value of the user function by varying parameter number \(\mbox{par}\), leaving all other parameters fixed at the current value. If \(\mbox{par}\) is not specified, all variable parameters are scanned in sequence. The number of points \(\mbox{npoints}\) in the scan is 40 by default, and cannot exceed 100. The range of the scan is by default 2 standard deviations on each side of the current best value, but can be specified as from \(\mbox{low}\) to \(\mbox{high}\). After each scan, if a new minimum is found, the best parameter values are retained as start values for future scans or minimizations. The curve resulting from each scan can be plotted on the output terminal using MnPlot [api:plot] in order to show the approximate behaviour of the function.; 5.10.2 ScanMinimizer; Although the \(\mbox{SCAN}\) method is not intended for minimization it can be used as a minimizer in its most primitive form.; 5.11 MnSimplex and SimplexMinimizer; [api:simplex]; \(\mbox{SIMPLEX}\) is a function minimization method using the simplex method of Nelder and Mead. MnSimplex provides minimization of the function by the method of \(\mbox{SIMPLEX}\) and the functionality for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:52778,variab,variable,52778,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,4,['variab'],['variable']
Modifiability,"nPointer to function binding of integrand; Int_t_nsegNumber of segments; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_t_range; Bool_t_useIntegrandLimits; Bool_t_valid; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t_xmax; Double_t_xmin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooSegmentedIntegrator1D, its parameters, dependencies and capabilities with RooNumIntFactory. RooSegmentedIntegrator1D(); Constructor. coverity[UNINIT_CTOR]. RooSegmentedIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor of integral on given function binding and with given configuration. The; integration limits are taken from the definition in the function binding. RooSegmentedIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Constructor integral on given function binding, with given configuration and; explicit definition of integration range. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Virtual constructor with given function and configuration. Needed by RooNumIntFactory. Bool_t initialize(); One-time integrator initialization. ~RooSegmentedIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Double_t integral(const Double_t* yvec = 0); Evaluate integral at given function binding parameter values. RooSegmentedIntegrator1D(); Constructors, assignment etc. Bool_t setUseIntegrandLimits(Bool_t fla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSegmentedIntegrator1D.html:7953,config,config,7953,root/html602/RooSegmentedIntegrator1D.html,https://root.cern,https://root.cern/root/html602/RooSegmentedIntegrator1D.html,8,['config'],"['config', 'configuration']"
Modifiability,"nPolicy::kSequential . ). inline . Fit a binned data set using a least square fit NOT copying the input data. ; Definition at line 179 of file Fitter.h. ◆ LikelihoodFit() [1/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const BinData & ; data, . bool ; extended = true, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Binned Likelihood fit copying the input data. ; Default is extended. ; Definition at line 203 of file Fitter.h. ◆ LikelihoodFit() [2/5]. template<class Data , class Function > . bool ROOT::Fit::Fitter::LikelihoodFit ; (; const Data & ; data, . const Function & ; func, . bool ; extended . ). inline . Likelihood fit given a data set (Binned or Un-binned) using any generic model function. ; This interface copies the input data and the model function object ; Definition at line 239 of file Fitter.h. ◆ LikelihoodFit() [3/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const std::shared_ptr< BinData > & ; data, . bool ; extended = true, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Binned Likelihood fit using a shared_ptr for NOT copying the input data. ; Default is extended. ; Definition at line 212 of file Fitter.h. ◆ LikelihoodFit() [4/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const std::shared_ptr< UnBinData > & ; data, . bool ; extended = false, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Un-binned Likelihood fit using a shared_ptr for NOT copying the input data. ; Default is NOT extended ; Definition at line 229 of file Fitter.h. ◆ LikelihoodFit() [5/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const UnBinData & ; data, . bool ; extended = false, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Un-binned Likelihood fit copying the input data Default is NOT extended. ; Definition at line 221 of file Fitter.h. ◆ LinearFit() [1/2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:29584,extend,extended,29584,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['extend'],['extended']
Modifiability,"nProxy *proxy, Bool_t read) : TLoopConfiguration(proxy), fNext(0), fCopyIterator(0), fDeleteIterator(0); 1098 {; 1099 Init(read);; 1100 }; 1101 ~TGenericLoopConfig() override {};; 1102 void Print() const override; 1103 {; 1104 printf(""TGenericLoopConfig: proxy=%s\n"",fProxy->GetCollectionClass()->GetName());; 1105 }; 1106 TLoopConfiguration* Copy() const override { return new TGenericLoopConfig(*this); }; 1107 ; 1108 void* GetFirstAddress(void *start_collection, const void *end_collection) const override; 1109 {; 1110 // Return the address of the first element of the collection.; 1111 ; 1112 char iterator[TVirtualCollectionProxy::fgIteratorArenaSize];; 1113 void *iter = fCopyIterator(&iterator,start_collection);; 1114 void *arr0 = fNext(iter,end_collection);; 1115 if (iter != &iterator[0]) {; 1116 fDeleteIterator(iter);; 1117 }; 1118 return arr0;; 1119 }; 1120 };; 1121 ; 1122 INLINE_TEMPLATE_ARGS void ReadSTLMemberWiseSameClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers); 1123 {; 1124 // Collection was saved member-wise; 1125 ; 1126 TConfigSTL *config = (TConfigSTL*)conf;; 1127 vers &= ~( TBufferFile::kStreamedMemberWise );; 1128 ; 1129 if( vers >= 8 ) {; 1130 ; 1131 TClass *oldClass = config->fOldClass;; 1132 ; 1133 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1134 if (!oldProxy) {; 1135 // Missing information, broken file ... give up; 1136 return;; 1137 }; 1138 TClass *valueClass = oldProxy->GetValueClass();; 1139 Version_t vClVersion = buf.ReadVersionForMemberWise( valueClass );; 1140 ; 1141 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)addr );; 1142 Int_t nobjects;; 1143 buf.ReadInt(nobjects);; 1144 void* alternative = oldProxy->Allocate(nobjects,true);; 1145 if (nobjects) {; 1146 TActionSequence *actions = oldProxy->GetReadMemberWiseActions( vClVersion );; 1147 ; 1148 char startbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1149 char endbuf[TVirtualCollectionProxy::fgIterator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:46911,config,config,46911,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"nProxy(*fCollectionProxy);; 2457 }; 2458 copy->SetClassSize(fSizeof);; 2459 if (fRefProxy) {; 2460 copy->AdoptReferenceProxy( fRefProxy->Clone() );; 2461 }; 2462 TClass::AddClass(const_cast<TClass*>(this));; 2463 return copy;; 2464}; 2465 ; 2466////////////////////////////////////////////////////////////////////////////////; 2467/// Replaces the collection proxy for this class. The provided object is cloned; 2468/// and the copy is then owned by `TClass`.; 2469 ; 2470void TClass::CopyCollectionProxy(const TVirtualCollectionProxy &orig); 2471{; 2472// // This code was used too quickly test the STL Emulation layer; 2473// Int_t k = TClassEdit::IsSTLCont(GetName());; 2474// if (k==1||k==-1) return;; 2475 ; 2476 delete fCollectionProxy;; 2477 fCollectionProxy = orig.Generate();; 2478}; 2479 ; 2480////////////////////////////////////////////////////////////////////////////////; 2481/// Draw detailed class inheritance structure.; 2482/// If a class B inherits from a class A, the description of B is drawn; 2483/// on the right side of the description of A.; 2484/// Member functions overridden by B are shown in class A with a blue line; 2485/// erasing the corresponding member function; 2486 ; 2487void TClass::Draw(Option_t *option); 2488{; 2489 if (!HasInterpreterInfo()) return;; 2490 ; 2491 TVirtualPad::TContext ctxt(kTRUE);; 2492 ; 2493 // Should we create a new canvas?; 2494 TString opt = option;; 2495 if (!ctxt.GetSaved() || !opt.Contains(""same"")) {; 2496 TVirtualPad *padclass = (TVirtualPad*)(gROOT->GetListOfCanvases())->FindObject(""R__class"");; 2497 if (!padclass) {; 2498 gROOT->ProcessLine(""new TCanvas(\""R__class\"",\""class\"",20,20,1000,750);"");; 2499 } else {; 2500 padclass->cd();; 2501 }; 2502 }; 2503 ; 2504 if (gPad); 2505 gPad->DrawClassObject(this,option);; 2506}; 2507 ; 2508////////////////////////////////////////////////////////////////////////////////; 2509/// Dump contents of object on stdout.; 2510/// Using the information in the object dictionary; 2511/// e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:93388,inherit,inherits,93388,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"nProxy(*fCollectionProxy);; 2524 }; 2525 copy->SetClassSize(fSizeof);; 2526 if (fRefProxy) {; 2527 copy->AdoptReferenceProxy( fRefProxy->Clone() );; 2528 }; 2529 TClass::AddClass(const_cast<TClass*>(this));; 2530 return copy;; 2531}; 2532 ; 2533////////////////////////////////////////////////////////////////////////////////; 2534/// Replaces the collection proxy for this class. The provided object is cloned; 2535/// and the copy is then owned by `TClass`.; 2536 ; 2537void TClass::CopyCollectionProxy(const TVirtualCollectionProxy &orig); 2538{; 2539// // This code was used too quickly test the STL Emulation layer; 2540// Int_t k = TClassEdit::IsSTLCont(GetName());; 2541// if (k==1||k==-1) return;; 2542 ; 2543 delete fCollectionProxy;; 2544 fCollectionProxy = orig.Generate();; 2545}; 2546 ; 2547////////////////////////////////////////////////////////////////////////////////; 2548/// Draw detailed class inheritance structure.; 2549/// If a class B inherits from a class A, the description of B is drawn; 2550/// on the right side of the description of A.; 2551/// Member functions overridden by B are shown in class A with a blue line; 2552/// erasing the corresponding member function; 2553 ; 2554void TClass::Draw(Option_t *option); 2555{; 2556 if (!HasInterpreterInfo()) return;; 2557 ; 2558 TVirtualPad::TContext ctxt(kTRUE);; 2559 ; 2560 // Should we create a new canvas?; 2561 TString opt = option;; 2562 if (!ctxt.GetSaved() || !opt.Contains(""same"")) {; 2563 TVirtualPad *padclass = (TVirtualPad*)(gROOT->GetListOfCanvases())->FindObject(""R__class"");; 2564 if (!padclass) {; 2565 gROOT->ProcessLine(""new TCanvas(\""R__class\"",\""class\"",20,20,1000,750);"");; 2566 } else {; 2567 padclass->cd();; 2568 }; 2569 }; 2570 ; 2571 if (gPad); 2572 gPad->DrawClassObject(this,option);; 2573}; 2574 ; 2575////////////////////////////////////////////////////////////////////////////////; 2576/// Dump contents of object on stdout.; 2577/// Using the information in the object dictionary; 2578/// e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:96139,inherit,inherits,96139,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"nProxyFactory(); static TClassStreamer*GenEmulatedClassStreamer(const char* class_name, Bool_t silent); static TMemberStreamer*GenEmulatedMemberStreamer(const char* class_name, Bool_t silent); static TVirtualCollectionProxy*GenEmulatedProxy(const char* class_name, Bool_t silent); static TClassStreamer*GenExplicitClassStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); static TMemberStreamer*GenExplicitMemberStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); static TCollectionProxyFactory::Proxy_t*GenExplicitProxy(const ROOT::TCollectionProxyInfo& info, TClass* cl); static TGenCollectionStreamer*GenExplicitStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); TCollectionProxyFactory&operator=(const TCollectionProxyFactory&); TCollectionProxyFactory&operator=(TCollectionProxyFactory&&); TCollectionProxyFactory(); TCollectionProxyFactory(const TCollectionProxyFactory&); TCollectionProxyFactory(TCollectionProxyFactory&&). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GenEmulatedProxy(const char* class_name, Bool_t silent); Generate emulated collection proxy for a given class. GenEmulatedClassStreamer(const char* class_name, Bool_t silent); Generate emulated class streamer for a given collection class. GenEmulatedMemberStreamer(const char* class_name, Bool_t silent); Generate emulated member streamer for a given collection class. GenExplicitProxy(const ROOT::TCollectionProxyInfo& info, TClass* cl); Generate proxy from static functions. GenExplicitStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); Generate streamer from static functions. GenExplicitClassStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); Generate class streamer from static functions. GenExplicitMemberStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); Generate member streamer from static functions. TCollectionStreamer& operator=(const TCollectionStreamer&). TCollectionClassStreamer & operator=(const TCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCollectionProxyFactory.html:1890,Inherit,Inheritance,1890,root/html602/TCollectionProxyFactory.html,https://root.cern,https://root.cern/root/html602/TCollectionProxyFactory.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nProxyInfo::EnvironBase*> >fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >fProxyListStack of recursive proxies; TObjArray*fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*fResizeContainer accessors: resize container; intfSTL_typeSTL container type; TGenCollectionProxy::MethodfSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >fStagedOptimization: Keep staged array once they were created; type_info&fTypeinfoType information; TGenCollectionProxy::Value*fValDescriptor of the Value_type; intfValDiffOffset between two consecutive value_types (memory layout).; intfValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DeleteItem(void* ptr); Delete individual item from STL container. s. Streamer(TBuffer& refBuffer). s. Streamer(TBuffer& refBuffer). else s-> Clear(). Method & operator=(const TGenCollectionProxy& ); { call = m.call; return *this; }. void Resize(size_t nelement). TGenCollectionProxy* Initialize(Bool_t silent) const; Late initialization of collection proxy. TGenCollectionProxy* InitializeEx(Bool_t silent); Some hack to avoid const-ness. void CheckFunctions() const; Allow to check function pointers. TGenCollectionProxy(). TVirtualCollectionProxy* Generate() const; Virtual copy constructor. TGenCollectionProxy(const TGenCollectionProxy& copy); Copy constructor. TGenCollectionProxy(TGenCollectionProxy::Info_t typ, size_t iter_size); Initializing constructor. TGenCollectionProxy(const ROOT::TCollectionProxyInfo& info, TClass* cl). virtual ~TGenCollectionProxy(); Standard destructor. TClass * GetCollectionClass() const; Return a pointer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGenCollectionProxy.html:6137,Inherit,Inheritance,6137,root/html534/TGenCollectionProxy.html,https://root.cern,https://root.cern/root/html534/TGenCollectionProxy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nProxyInfo::EnvironBase*> >fProxyKeptOptimization: Keep proxies once they were created; vector<ROOT::TCollectionProxyInfo::EnvironBase*,allocator<ROOT::TCollectionProxyInfo::EnvironBase*> >fProxyListStack of recursive proxies; TObjArray*fReadMemberWiseArray of bundle of TStreamerInfoActions to stream out (read); void*fResizeContainer accessors: resize container; intfSTL_typeSTL container type; TGenCollectionProxy::MethodfSizeContainer accessors: size of container; vector<TGenCollectionProxy::TStaging*,allocator<TGenCollectionProxy::TStaging*> >fStagedOptimization: Keep staged array once they were created; type_info&fTypeinfoType information; TGenCollectionProxy::Value*fValDescriptor of the Value_type; intfValDiffOffset between two consecutive value_types (memory layout).; intfValOffsetOffset from key to value (in maps); TGenCollectionProxy::Value*fValueDescriptor of the container value type; TStreamerInfoActions::TActionSequence*fWriteMemberWise. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void DeleteItem(void* ptr); Delete individual item from STL container. s. Streamer(TBuffer& refBuffer). s. Streamer(TBuffer& refBuffer). else s-> Clear(). void Resize(size_t nelement). TGenCollectionProxy* Initialize(Bool_t silent) const; Late initialization of collection proxy. TGenCollectionProxy* InitializeEx(Bool_t silent); Some hack to avoid const-ness. void CheckFunctions() const; Allow to check function pointers. TGenCollectionProxy(). TVirtualCollectionProxy* Generate() const; Virtual copy constructor. TGenCollectionProxy(const TGenCollectionProxy& copy); Copy constructor. TGenCollectionProxy(TGenCollectionProxy::Info_t typ, size_t iter_size); Initializing constructor. TGenCollectionProxy(const ROOT::TCollectionProxyInfo& info, TClass* cl). virtual ~TGenCollectionProxy(); Standard destructor. TClass * GetCollectionClass(); Return a pointer to the TClass representing the container. Int_t GetCollectionType(); Return the type of c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGenCollectionProxy.html:5966,Inherit,Inheritance,5966,root/html532/TGenCollectionProxy.html,https://root.cern,https://root.cern/root/html532/TGenCollectionProxy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nSettings(ROOT::kLZMA, 1); will build an integer which will set the compression to use; the LZMA algorithm and compression level 1. These are defined; in the header file Compression.h. Note that the compression settings may be changed at any time.; The new compression settings will only apply to branches created; or attached after the setting is changed and other objects written; after the setting is changed. In case the file does not exist or is not a valid ROOT file,; it is made a Zombie. One can detect this situation with a code like:; TFile f(""file.root"");; if (f.IsZombie()) {; std::cout << ""Error opening file"" << std::endl;; exit(-1);; }. When opening the file, the system checks the validity of this directory.; If something wrong is detected, an automatic Recovery is performed. In; this case, the file is scanned sequentially reading all logical blocks; and attempting to rebuild a correct directory (see TFile::Recover).; One can disable the automatic recovery procedure when reading one; or more files by setting the environment variable ""TFile.Recover: 0""; in the system.rootrc file. TFile(const TFile& ); TFile objects can not be copied. ~TFile(); File destructor. void Init(Bool_t create); Initialize a TFile object.; TFile implementations providing asynchronous open functionality need to; override this method to run the appropriate checks before calling this; standard initialization part. See TXNetFile::Init for an example. void Close(Option_t* option = """"); Close a file.; If option == ""R"", all TProcessIDs referenced by this file are deleted.; Calling TFile::Close(""R"") might be necessary in case one reads a long list; of files having TRef, writing some of the referenced objects or TRef; to a new file. If the TRef or referenced objects of the file being closed; will not be referenced again, it is possible to minimize the size; of the TProcessID data structures in memory by forcing a delete of; the unused TProcessID. TKey* CreateKey(TDirectory* mother, const TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFile.html:28632,variab,variable,28632,root/html602/TFile.html,https://root.cern,https://root.cern/root/html602/TFile.html,4,['variab'],['variable']
Modifiability,"nSource (std::ostream &out);  Given fCurrentClass, look for methods in its source file, and extract documentation to out, while beautifying the source file in parallel. ;  ; virtual Bool_t ProcessComment ();  Parse the current line as a comment, handling directives and re-formatting the comment: remove ""/*"", ""*&zwj;/"", ""//"", similar characters surrounding lines, etc. ;  ; void RemoveCommentContext (Bool_t cxxcomment);  remove the top-most comment context that matches cxxcomment, ;  ; void WriteClassDoc (std::ostream &out, Bool_t first=kTRUE);  Write the class description depending (among others) on fClassDocState. ;  ; void WriteMethod (std::ostream &out, TString &ret, TString &name, TString &params, Bool_t isconst, const char *file, TString &anchor, TString &codeOneLiner);  Write a method, forwarding to TClassDocOutput. ;  ; void WriteSourceLine (std::ostream &out);  Write fLineSource to out. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fAllowDirectives;  ; Bool_t fCheckForMethod;  ; TString fClassDescrTag;  ; enum TDocParser:: { ... }  fClassDocState;  ; TString fComment;  ; Bool_t fCommentAtBOL;  ; TClass * fCurrentClass;  ; TString fCurrentFile;  ; TString fCurrentMethodTag;  ; TString fCurrentModule;  ; TList fDataMembers [6];  ; Int_t fDirectiveCount;  ; TList fDirectiveHandlers;  ; EDocContext fDocContext;  ; TDocOutput * fDocOutput;  ; std::set< UInt_t > fExtraLinesWithAnchor;  ; TString fFirstClassDoc;  ; THtml * fHtml;  ; TString fLastClassDoc;  ; TString fLineComment;  ; UInt_t fLineNo;  ; Long_t fLineNumber;  ; TString fLineRaw;  ; TString fLineSource;  ; TString fLineStripped;  ; std::map< std::string, Int_t > fMethodCounts;  ; THashList fMethods [3];  ; std::list< UInt_t > fParseContext;  ; TClass * fRecentClass;  ; TString fSourceInfo [kNumSourceInfos];  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocParser.html:15543,inherit,inherited,15543,doc/master/classTDocParser.html,https://root.cern,https://root.cern/doc/master/classTDocParser.html,1,['inherit'],['inherited']
Modifiability,"nState GetState () const;  ; virtual UInt_t GetStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; virtual void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetEnabled (Bool_t e=kTRUE);  Set enabled or disabled state of button. ;  ; virtual void SetGroup (TGButtonGroup *gr);  Sets new button-group for this button. ;  ; virtual void SetOn (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetStyle (const char *style);  Set the button style (modern or classic). ;  ; virtual void SetStyle (UInt_t newstyle);  Set the button style (modern or classic). ;  ; virtual void SetToolTipText (const char *text, Long_t delayms=400);  Set tool tip text associated with this button. ;  ; virtual void SetUserData (void *userData);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Toggle (Bool_t emit=kFALSE);  ; virtual void Toggled (Bool_t on);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRadioButton.html:7247,inherit,inherited,7247,doc/master/classTGRadioButton.html,https://root.cern,https://root.cern/doc/master/classTGRadioButton.html,1,['inherit'],['inherited']
Modifiability,"nString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static const TGGC & GetLineGC ();  Get graphics context for line drawing. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; Bool_t fBdown;  ; TGCanvas * fCanvas;  pointer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainer.html:31661,inherit,inherited,31661,doc/master/classTGContainer.html,https://root.cern,https://root.cern/doc/master/classTGContainer.html,1,['inherit'],['inherited']
Modifiability,"nTest of the most significant principal components p,...Definition TPrincipal.cxx:1074; double; int; xDouble_t x[n]Definition legend1.C:17; which does the same as TPrincipal::X2P and TPrincipal::P2X respectively. Please refer to these methods.; Further, the static variables: Int_t gNVariables; Double_t gEigenValues[]; Double_t gEigenVectors[]; Double_t gMeanValues[]; Double_t gSigmaValues[]; are initialized. The only ROOT header file needed is Rtypes.h; See TPrincipal::MakeRealCode for a list of options ; Definition at line 562 of file TPrincipal.cxx. ◆ MakeHistograms(). void TPrincipal::MakeHistograms ; (; const char * ; name = ""pca"", . Option_t * ; opt = ""epsdx"" . ). virtual . Make histograms of the result of the analysis. ; The option string say which histograms to create; X Histogram original data; P Histogram principal components corresponding to original data; D Histogram the difference between the original data and the projection of principal unto a lower dimensional subspace (2D histograms); E Histogram the eigenvalues; S Histogram the square of the residues (see TPrincipal::SumOfSquareResiduals) The histograms will be named <name>_<type><number>, where <name> is the first argument, <type> is one of X,P,D,E,S, and <number> is the variable. . Definition at line 587 of file TPrincipal.cxx. ◆ MakeMethods(). void TPrincipal::MakeMethods ; (; const char * ; classname = ""PCA"", . Option_t * ; opt = """" . ). virtual . Generate the file <classname>PCA.cxx which contains the implementation of two methods: ; void <classname>::X2P(Double_t *x, Double *p); void <classname>::P2X(Double_t *p, Double *x, Int_t nTest); which does the same as TPrincipal::X2P and TPrincipal::P2X respectively. Please refer to these methods.; Further, the public static members: Int_t <classname>::fgNVariables; Double_t <classname>::fgEigenValues[]; Double_t <classname>::fgEigenVectors[]; Double_t <classname>::fgMeanValues[]; Double_t <classname>::fgSigmaValues[]; are initialized, and assumed to ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPrincipal.html:28365,variab,variable,28365,doc/master/classTPrincipal.html,https://root.cern,https://root.cern/doc/master/classTPrincipal.html,1,['variab'],['variable']
Modifiability,"nTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCompoundProjected(); Constructor. void SetMainColor(Color_t color); Revert back to the behaviour of TEveElement as color; is propagated:; a) from projectable -> projected; b) from compound -> compound elements; and we do not need to do this twice for projected-compound-elements. TEveCompound& operator=(const TEveCompoundProjected& ). TEveCompoundProjected(const TEveCompoundProjected& ). virtual ~TEveCompoundProjected(); {}. void UpdateProjection(); {}. TEveElement* GetProjectedAsElement(); { return this; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveCompoundProjected.html:20563,Inherit,Inheritance,20563,root/html534/TEveCompoundProjected.html,https://root.cern,https://root.cern/root/html534/TEveCompoundProjected.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nType >; kLogLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kPoissonLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kUndefined enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; ModelFunction() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; ModelFunctionPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; NCalls() constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; NDim() const overrideROOT::Math::BasicFitMethodFunction< DerivFunType >inline; NFitPoints() constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; NPoints() constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; operator=(const PoissonLikelihoodFCN &rhs)ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inline; PoissonLikelihoodFCN(const std::shared_ptr< BinData > &data, const std::shared_ptr< IModelFunction > &func, int weight=0, bool extended=true, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inline; PoissonLikelihoodFCN(const BinData &data, const IModelFunction &func, int weight=0, bool extended=true, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inline; PoissonLikelihoodFCN(const PoissonLikelihoodFCN &f)ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inline; ResetNCalls()ROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; SetData(const std::shared_ptr< DataType > &data)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; SetModelFunction(const std::shared_ptr< IModelFunction > &func)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; T typedefROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >; Type() constROOT::Fit::PoissonLikelihoodFCN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html:4170,extend,extended,4170,doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html,1,['extend'],['extended']
Modifiability,"nUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; ROOT::Minuit2::SimplexMinimizer&operator=(const ROOT::Minuit2::SimplexMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const; ROOT::Minuit2::SimplexMinimizerSimplexMinimizer(); ROOT::Minuit2::SimplexMinimizerSimplexMinimizer(const ROOT::Minuit2::SimplexMinimizer&). Data Members; private:. ROOT::Minuit2::SimplexBuilderfBuilder; ROOT::Minuit2::SimplexSeedGeneratorfSeedGenerator. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SimplexMinimizer(); {}. ~SimplexMinimizer(); {}. » Last changed: root/minuit2:$Id: SimplexMinimizer.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__SimplexMinimizer.html:3909,Inherit,Inheritance,3909,root/html532/ROOT__Minuit2__SimplexMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__SimplexMinimizer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nVector_exception;  ; class  GlobalCoordinateSystemTag;  Tag for identifying vectors based on a global coordinate system. More...;  ; class  GoFTest;  GoFTest class implementing the 1 sample and 2 sample goodness of fit tests for uni-variate distributions and data. More...;  ; class  GradFunctor;  GradFunctor class for Multidimensional gradient functions. More...;  ; class  GradFunctor1D;  GradFunctor1D class for one-dimensional gradient functions. More...;  ; class  GSL1DMinimizerWrapper;  wrapper class for gsl_min_fminimizer structure More...;  ; class  GSLChebSeries;  wrapper class for C struct gsl_cheb_series More...;  ; class  GSLDerivator;  Class for computing numerical derivative of a function based on the GSL numerical algorithm This class is implemented using the numerical derivatives algorithms provided by GSL (see GSL Online Manual ). More...;  ; class  GSLError;  class to change GSL Error handler to use ROOT one. More...;  ; class  GSLFunctionAdapter;  Class for adapting any C++ functor class to C function pointers used by GSL. More...;  ; class  GSLFunctionDerivWrapper;  class to wrap a gsl_function_fdf (with derivatives) More...;  ; class  GSLFunctionWrapper;  Wrapper class to the gsl_function C structure. More...;  ; class  GSLIntegrationWorkspace;  ; class  GSLIntegrator;  Class for performing numerical integration of a function in one dimension. More...;  ; class  GSLInterpolator;  Interpolation class based on GSL interpolation functions. More...;  ; class  GSLMCIntegrationWorkspace;  ; class  GSLMCIntegrator;  ; class  GSLMinimizer;  GSLMinimizer class. More...;  ; class  GSLMinimizer1D;  Minimizer for arbitrary one dimensional functions. More...;  ; class  GSLMiserIntegrationWorkspace;  Workspace for MISER. More...;  ; struct  GSLMonteFunctionAdapter;  ; class  GSLMonteFunctionWrapper;  wrapper to a multi-dim function withtout derivatives for Monte Carlo multi-dimensional integration algorithm More...;  ; class  GSLMultiFit;  GSLMultiFit, internal ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:9289,adapt,adapting,9289,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,2,['adapt'],['adapting']
Modifiability,"n[fNcols] Minimum value of the variables.; UInt_tfNcolsNumber of variables.; Long64_tfNentriesNumber of entries.; UInt_tfNxNumber of horizontal spider plots.; UInt_tfNyNumber of vertical spider plots.; TGraphPolargram*fPolargramPolar graph.; TList*fPolyListPolygons representing the variables.; Bool_tfSegmentDisplayTrue if displaying a segment plot.; TTreeFormula*fSelectSelection condition; TSelectorDraw*fSelector! Selector.; Bool_tfShowRangeShow range of variables or not.; TList*fSuperposedSuperposed spider plots.; TTree*fTreePointer to the TTree to represent. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSpider(); Default constructor. TSpider(TTree* tree, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = 0, Long64_t firstentry = 0); Normal constructor. Options are:. ~TSpider(); Destructor. void AddSuperposed(TSpider* sp); Allow to superpose several spider views. void AddVariable(const char* varexp); Add a variable to the plot from its expression. void DeleteVariable(const char* varexp); Delete a variable from its expression. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute the distance to the spider. void Draw(Option_t* options = """"); Draw the spider. void DrawPolyAverage(Option_t* options); Paint the Polygon representing the average value of the variables. void DrawPoly(Option_t* options); Paint the polygon representing the current entry. void DrawSlices(Option_t* options); Draw the slices of the segment plot. void DrawSlicesAverage(Option_t* options); Draw the slices representing the average for the segment plot. Style_t GetAverageLineStyle() const; Get the LineStyle of the average. Color_t GetAverageLineColor() const; Get the LineColor of the average. Width_t GetAverageLineWidth() const; Get the LineWidth of the average. Color_t GetAverageFillColor() const; Get the FillColor of the average. Style_t GetAverageFillStyle() const; Get the FillStyle of the average. void ExecuteEve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpider.html:11002,variab,variable,11002,root/html530/TSpider.html,https://root.cern,https://root.cern/root/html530/TSpider.html,5,['variab'],['variable']
Modifiability,"n[itgt] = v;; 508 if (v>tgmax[itgt]) tgmax[itgt] = v;; 509 }; 510 for (UInt_t ivis=0; ivis<nvis; ivis++) {; 511 Double_t v = ev->GetSpectator(ivis);; 512 if (v<vmin[ivis]) vmin[ivis] = v;; 513 if (v>vmax[ivis]) vmax[ivis] = v;; 514 }; 515 }; 516 ; 517 for (UInt_t ivar=0; ivar<nvar; ivar++) {; 518 dsi.GetVariableInfo(ivar).SetMin(min[ivar]);; 519 dsi.GetVariableInfo(ivar).SetMax(max[ivar]);; 520 if( TMath::Abs(max[ivar]-min[ivar]) <= FLT_MIN ); 521 Log() << kWARNING << Form(""Dataset[%s] : "",dsi.GetName()) << ""Variable "" << dsi.GetVariableInfo(ivar).GetExpression().Data() << "" is constant. Please remove the variable."" << Endl;; 522 }; 523 for (UInt_t ivar=0; ivar<ntgts; ivar++) {; 524 dsi.GetTargetInfo(ivar).SetMin(tgmin[ivar]);; 525 dsi.GetTargetInfo(ivar).SetMax(tgmax[ivar]);; 526 if( TMath::Abs(tgmax[ivar]-tgmin[ivar]) <= FLT_MIN ); 527 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName()) << ""Target "" << dsi.GetTargetInfo(ivar).GetExpression().Data() << "" is constant. Please remove the variable."" << Endl;; 528 }; 529 for (UInt_t ivar=0; ivar<nvis; ivar++) {; 530 dsi.GetSpectatorInfo(ivar).SetMin(vmin[ivar]);; 531 dsi.GetSpectatorInfo(ivar).SetMax(vmax[ivar]);; 532 // if( TMath::Abs(vmax[ivar]-vmin[ivar]) <= FLT_MIN ); 533 // Log() << kWARNING << ""Spectator variable "" << dsi.GetSpectatorInfo(ivar).GetExpression().Data() << "" is constant."" << Endl;; 534 }; 535 delete [] min;; 536 delete [] max;; 537 delete [] tgmin;; 538 delete [] tgmax;; 539 delete [] vmin;; 540 delete [] vmax;; 541}; 542 ; 543////////////////////////////////////////////////////////////////////////////////; 544/// computes correlation matrix for variables ""theVars"" in tree;; 545/// ""theType"" defines the required event ""type""; 546/// (""type"" variable must be present in tree); 547 ; 548TMatrixD* TMVA::DataSetFactory::CalcCorrelationMatrix( DataSet* ds, const UInt_t classNumber ); 549{; 550 // first compute variance-covariance; 551 TMatrixD* mat = CalcCovarianceMatrix( ds, classNumber );; 552 ; 553 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:21928,variab,variable,21928,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"n_Code=262657);  re-create a new tree (decision tree or search tree) from XML ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::BinaryTree; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; Double_t SamplePurity (EventList eventSample);  calculates the purity S/(S+B) of a given event sample ;  . Private Attributes; Types::EAnalysisType fAnalysisType;  kClassification(=0=false) or kRegression(=1=true) ;  ; DataSetInfo * fDataSetInfo;  ; UInt_t fMaxDepth;  max depth ;  ; Double_t fMinLinCorrForFisher;  the minimum linear correlation between two variables demanded for use in fisher criterium in node splitting ;  ; Double_t fMinNodeSize;  min fraction of training events in node ;  ; Double_t fMinSepGain;  min number of separation gain to perform node splitting ;  ; Double_t fMinSize;  min number of events in node ;  ; TRandom3 * fMyTrandom;  random number generator for randomised trees ;  ; Int_t fNCuts;  number of grid point in variable cut scans ;  ; Int_t fNNodesBeforePruning;  remember this one (in case of pruning, it allows to monitor the before/after ;  ; Double_t fNodePurityLimit;  purity limit to decide whether a node is signal ;  ; UInt_t fNvars;  number of variables used to separate S and B ;  ; EPruneMethod fPruneMethod;  method used for pruning ;  ; Double_t fPruneStrength;  a parameter to set the ""amount"" of pruning..needs to be adjusted ;  ; Bool_t fRandomisedTree;  choose at each node splitting a random set of variables ;  ; RegressionVariance * fRegType;  the separation criteria used in Regression ;  ; SeparationBase * fSepType;  the separation criteria ;  ; UInt_t fSigClass;  class which is treated as signal when building the tree ;  ; Int_t fTreeID;  just an ID number given to the tree.. makes debugging easier as tree knows who he is. ;  ; Bool_t fUseExclusiveVars;  individual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:10340,variab,variables,10340,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,3,['variab'],"['variable', 'variables']"
Modifiability,"n_const<float>& c); voidoperator=(float val); voidoperator=(const TMatrixTColumn_const<float>& c); TMatrixTColumn<float>&operator=(const TMatrixTColumn<float>& c); voidoperator=(const TVectorT<float>& vec); const float&operator[](Int_t i) const; float&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTColumn<float>(); TMatrixTColumn<float>(const TMatrixTColumn<float>& mc); TMatrixTColumn<float>(TMatrixT<float>& matrix, Int_t col); TMatrixTColumn<float>(TMatrixTSym<float>& matrix, Int_t col). Data Members; protected:. Int_tTMatrixTColumn_const<float>::fColIndeffective column index; Int_tTMatrixTColumn_const<float>::fIncif ptr = @a[i,col], then ptr+inc = @a[i+1,col]; TMatrixTBase<float>*TMatrixTColumn_const<float>::fMatrixthe matrix I am a column of; const float*TMatrixTColumn_const<float>::fPtrpointer to the a[0,col] column. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TMatrixTColumn<Element> operator=(Element val); Assign val to every element of the matrix column. void TMatrixTColumn<Element> operator+=(Element val); Add val to every element of the matrix column. void TMatrixTColumn<Element> operator*=(Element val); Multiply every element of the matrix column with val. void TMatrixTColumn<Element> operator=(const TMatrixTColumn_const<Element> &mc); Assignment operator. void TMatrixTColumn<Element> operator=(const TVectorT<Element> &vec); Assign a vector to a matrix column. void TMatrixTColumn<Element> operator+=(const TMatrixTColumn_const<Element> &mc); Add to every element of the matrix row the corresponding element of row mc. void TMatrixTColumn<Element> operator*=(const TMatrixTColumn_const<Element> &mc); Multiply every element of the matrix column with the; corresponding element of column mc. TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. const Element * GetP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTColumn_float_.html:2323,Inherit,Inheritance,2323,root/html602/TMatrixTColumn_float_.html,https://root.cern,https://root.cern/root/html602/TMatrixTColumn_float_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"n_in->Draw("""");� ; };  ;  . Int_t SearchHighRes(const Double_t*** source, Double_t*** dest, Int_t ssizex, Int_t ssizey, Int_t ssizez, Double_t sigma, Double_t threshold, Bool_t backgroundRemove, Int_t deconIterations, Bool_t markov, Int_t averWindow). THREE-DIMENSIONAL HIGH-RESOLUTION PEAK SEARCH FUNCTION; This function searches for peaks in source spectrum; It is based on deconvolution method. First the background is; removed (if desired), then Markov spectrum is calculated; (if desired), then the response function is generated; according to given sigma and deconvolution is carried out.; It returns number of found peaks. Function parameters:; source-pointer to the matrix of source spectrum; dest-pointer to the matrix of resulting deconvolved spectrum; ssizex-x length of source spectrum; ssizey-y length of source spectrum; ssizez-z length of source spectrum; sigma-sigma of searched peaks, for details we refer to manual; threshold-threshold value in % for selected peaks, peaks with; amplitude less than threshold*highest_peak/100; are ignored, see manual; backgroundRemove-logical variable, set if the removal of; background before deconvolution is desired; deconIterations-number of iterations in deconvolution operation; markov-logical variable, if it is true, first the source spectrum; is replaced by new spectrum calculated using Markov; chains method.; averWindow-averanging window of searched peaks, for details; we refer to manual (applies only for Markov method). . Peaks searching;  ; Goal: to identify; automatically the peaks in spectrum with the presence of the continuous; background, one- and two-fold coincidences (ridges) and statistical; fluctuations - noise. ;  ; The common problems connected; with correct peak identification in three-dimensional coincidence spectra are. non-sensitivity to noise, i.e.,; only statistically relevant peaks should be identified; non-sensitivity of the; algorithm to continuous background; non-sensitivity to one-fold coincidences; (c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum3.html:31600,variab,variable,31600,root/html602/TSpectrum3.html,https://root.cern,https://root.cern/root/html602/TSpectrum3.html,8,['variab'],['variable']
Modifiability,"n_t *goption, Axis_t rxmin, Axis_t rxmax); 700{; 701 // internal multigraph fitting methods; 702 Foption_t fitOption;; 703 ROOT::Fit::FitOptionsMake(ROOT::Fit::EFitObjectType::kGraph,option,fitOption);; 704 ; 705 // create range and minimizer options with default values; 706 ROOT::Fit::DataRange range(rxmin,rxmax);; 707 ROOT::Math::MinimizerOptions minOption;; 708 return ROOT::Fit::FitObject(this, f1 , fitOption , minOption, goption, range);; 709 ; 710}; 711 ; 712////////////////////////////////////////////////////////////////////////////////; 713/// Display a panel with all histogram fit options.; 714/// See class TFitPanel for example; 715 ; 716void TMultiGraph::FitPanel(); 717{; 718 if (!gPad); 719 gROOT->MakeDefCanvas();; 720 ; 721 if (!gPad) {; 722 Error(""FitPanel"", ""Unable to create a default canvas"");; 723 return;; 724 }; 725 ; 726 // use plugin manager to create instance of TFitEditor; 727 TPluginHandler *handler = gROOT->GetPluginManager()->FindHandler(""TFitEditor"");; 728 if (handler && handler->LoadPlugin() != -1) {; 729 if (handler->ExecPlugin(2, gPad, this) == 0); 730 Error(""FitPanel"", ""Unable to crate the FitPanel"");; 731 }; 732 else; 733 Error(""FitPanel"", ""Unable to find the FitPanel plug-in"");; 734}; 735 ; 736////////////////////////////////////////////////////////////////////////////////; 737/// Return the draw option for the TGraph `gr` in this TMultiGraph.; 738/// The return option is the one specified when calling TMultiGraph::Add(gr,option).; 739 ; 740Option_t *TMultiGraph::GetGraphDrawOption(const TGraph *gr) const; 741{; 742 if (!fGraphs || !gr) return """";; 743 TListIter next(fGraphs);; 744 TObject *obj;; 745 while ((obj = next())) {; 746 if (obj == (TObject*)gr) return next.GetOption();; 747 }; 748 return """";; 749}; 750 ; 751 ; 752////////////////////////////////////////////////////////////////////////////////; 753/// Compute Initial values of parameters for a gaussian.; 754 ; 755void TMultiGraph::InitGaus(Double_t xmin, Double_t xmax); 756{; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMultiGraph_8cxx_source.html:24001,plugin,plugin,24001,doc/master/TMultiGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMultiGraph_8cxx_source.html,2,"['plug-in', 'plugin']","['plug-in', 'plugin']"
Modifiability,"n_t *opt="""") override;  If the HDU is an image, draw the first layer of the primary array To set a title to the canvas, pass it in ""opt"". ;  ; TVectorD * GetArrayColumn (UInt_t col);  Get a column from the image HDU when it's a 2D array. ;  ; TVectorD * GetArrayRow (UInt_t row);  Get a row from the image HDU when it's a 2D array. ;  ; const TString & GetColumnName (Int_t colnum);  Get the name of a column given its index (column>=0). ;  ; Int_t GetColumnNumber (const char *colname);  Get column number given its name. ;  ; TString & GetKeywordValue (const char *keyword);  Get the value of a given keyword. Return """" if not found. ;  ; struct HDURecord * GetRecord (const char *keyword);  Get record by keyword. ;  ; Int_t GetRecordNumber () const;  ; Int_t GetTabNColumns () const;  ; Int_t GetTabNRows () const;  ; TVectorD * GetTabRealVectorCell (Int_t rownum, const char *colname);  Get a real vector embedded in a cell given by (row>=0, column name) ;  ; TVectorD * GetTabRealVectorCell (Int_t rownum, Int_t colnum);  Get a real array (with fixed or variable-length) embedded in a cell given by (row>=0, column>=0) ;  ; TObjArray * GetTabRealVectorCells (const char *colname);  Get a collection of real vectors embedded in cells along a given column from a table HDU by name. ;  ; TObjArray * GetTabRealVectorCells (Int_t colnum);  Get a collection of real vectors embedded in cells along a given column from a table HDU. colnum >= 0. ;  ; TVectorD * GetTabRealVectorColumn (const char *colname);  Get a real number-typed column from a table HDU given its name. ;  ; TVectorD * GetTabRealVectorColumn (Int_t colnum);  Get a real number-typed column from a table HDU given its column index (>=0). ;  ; TObjArray * GetTabStringColumn (const char *colname);  Get a string-typed column from a table HDU given its name. ;  ; TObjArray * GetTabStringColumn (Int_t colnum);  Get a string-typed column from a table HDU given its column index (>=0). ;  ; TArrayD * GetTabVarLengthVectorCell (Int_t ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFITSHDU.html:3154,variab,variable-length,3154,doc/master/classTFITSHDU.html,https://root.cern,https://root.cern/doc/master/classTFITSHDU.html,1,['variab'],['variable-length']
Modifiability,"n_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; onOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void onDefinition TGWin32VirtualXProxy.cxx:106; RooAbsReal::NumEvent@ NumEventDefinition RooAbsReal.h:276; RooAbsReal::Relative@ RelativeDefinition RooAbsReal.h:276; RooAbsReal::Raw@ RawDefinition RooAbsReal.h:276. Reimplemented from RooAbsPdf.; Definition at line 305 of file RooAbsPdf.cxx. ◆ plotOn() [4/5]. RooPlot * RooAbsPdf::plotOn ; (; RooPlot * ; frame, . RooLinkedList & ; cmdList . ); const. overridevirtual . Plot (project) PDF on specified frame. . If a PDF is plotted in an empty frame, it will show a unit-normalized curve in the frame variable. When projecting a multi- dimensional PDF onto the frame axis, hidden parameters are taken are taken at their current value.; If a PDF is plotted in a frame in which a dataset has already been plotted, it will show a projection integrated over all variables that were present in the shown dataset (except for the one on the x-axis). The normalization of the curve will be adjusted to the event count of the plotted dataset. An informational message will be printed for each projection step that is performed.; If a PDF is plotted in a frame showing a dataset after a fit, the above happens, but the PDF will be drawn and normalised only in the fit range. If this is not desired, plotting and normalisation range can be overridden using Range() and NormRange() as documented in the table below. This function takes the following named arguments (for more arguments, see also RooAbsReal::plotOn(RooPlot*,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; const RooCmdArg&) const ). Type of argument Controlling normalisation . NormRange(const char* name) Calculate curve normalization w.r.t. specified range[s]. See the tuto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:90954,variab,variables,90954,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['variab'],['variables']
Modifiability,"n_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t id) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode=0) override;  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t id=0) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t id) override;  Tells WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual Int_t AddPixmap (ULongptr_t pixid, UInt_t w, UInt_t h);  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window. ;  ; virtual void CreateOpenGLContext (Int_t wid=0);  Creates OpenGL context for window ""wid"". ;  ; virtual Handle_t CreateOpenGLContext (Window_t windowID, Handle_t sharedContext);  Creates OpenGL context for window ""windowID"". ;  ; virtual Window_t CreateOpenGLWindow (Window_t parentID, UInt_t width, UInt_t height, const std::vector< std::pair< UInt_t, Int_t > > &format);  Create window with special pixel format. Noop everywhere except Cocoa. ;  ; virtual void DeleteOpenGLContext (Int_t wid=0);  Deletes OpenGL context for window ""wid"". ;  ; virtual void DispatchClientMessage (UInt_t messageID);  Force processing of event, sent by SendEvent before. ;  ; virtual UI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:29161,inherit,inherited,29161,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['inherit'],['inherited']
Modifiability,"n_t vers)Definition TStreamerInfoActions.cxx:1188; TStreamerInfoActions::HandleReferencedTObjectvoid HandleReferencedTObject(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:214; TStreamerInfoActions::PopDataCacheGenericCollectionInt_t PopDataCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *, const TConfiguration *)Definition TStreamerInfoActions.cxx:1546; TStreamerInfoActions::WriteStreamerLoopInt_t WriteStreamerLoop(TBuffer &buf, void *addr, const TConfiguration *config)Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text st...Definition TStreamerInfoActions.cxx:505; TStreamerInfoActions::PushDataCacheGenericCollectionInt_t PushDataCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *loopconfig, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1520; TStreamerInfoActions::ReadTextTObjectBaseInt_t ReadTextTObjectBase(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:327; TStreamerInfoActions::SelectLooperESelectLooper SelectLooper(TVirtualCollectionProxy &proxy)Definition TStreamerInfoActions.cxx:1699; TStreamerInfoActions::ReadSTLpInt_t ReadSTLp(TBuffer &buf, void *addr, const TConfiguration *config)Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text st...Definition TStreamerInfoActions.cxx:408; TStreamerInfoActions::ReadTStringInt_t ReadTString(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:930; TStreamerInfoActions::UseCacheGenericCollectionInt_t UseCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *loopconfig, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:1656; TStreamerInfoActions::Next_tTVirtualCollectionProxy::Next_t Next_tDefinition TStreamerInfoActions.h:68; v@ vDefinition rootcling_impl.cxx:3699; TStreamerInfoAction",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:261055,config,config,261055,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"n_t versionkey;; 1620 frombuf(buffer, &versionkey);; 1621 frombuf(buffer, &objlen);; 1622 frombuf(buffer, &datime);; 1623 frombuf(buffer, &keylen);; 1624 frombuf(buffer, &cycle);; 1625 if (versionkey > 1000) {; 1626 frombuf(buffer, &seekkey);; 1627 frombuf(buffer, &seekpdir);; 1628 } else {; 1629 Int_t skey,sdir;; 1630 frombuf(buffer, &skey); seekkey = (Long64_t)skey;; 1631 frombuf(buffer, &sdir); seekpdir = (Long64_t)sdir;; 1632 }; 1633 frombuf(buffer, &nwhc);; 1634 if ( ((buffer-header) + nwhc) > nwheader ) // Don't read past the end of the part of the key we have read.; 1635 nwhc = nwheader - (buffer-header);; 1636 for (int i = 0;i < nwhc; i++) frombuf(buffer, &classname[i]);; 1637 classname[(int)nwhc] = '\0'; //cast to avoid warning with gcc3.4; 1638 if (idcur == fSeekFree) strlcpy(classname,""FreeSegments"",512);; 1639 if (idcur == fSeekInfo) strlcpy(classname,""StreamerInfo"",512);; 1640 if (idcur == fSeekKeys) strlcpy(classname,""KeysList"",512);; 1641 ; 1642 if (extended) {; 1643 if ( (buffer-header) >= nwheader ); 1644 nwhc = 0;; 1645 else {; 1646 frombuf(buffer, &nwhc);; 1647 if (nwhc < 0); 1648 nwhc = 0;; 1649 else if ( ((buffer-header) + nwhc) > nwheader ) // Don't read past the end of the part of the key we have read.; 1650 nwhc = nwheader - (buffer-header);; 1651 }; 1652 for (int i = 0;i < nwhc; i++) frombuf(buffer, &keyname[i]);; 1653 keyname[(int)nwhc] = '\0'; //cast to avoid warning with gcc3.4; 1654 ; 1655 if ( (buffer-header) >= nwheader ); 1656 nwhc = 0;; 1657 else {; 1658 frombuf(buffer, &nwhc);; 1659 if (nwhc < 0); 1660 nwhc = 0;; 1661 else if ( ((buffer-header) + nwhc) > nwheader ) // Don't read past the end of the part of the key we have read.; 1662 nwhc = nwheader - (buffer-header);; 1663 }; 1664 for (int i = 0;i < nwhc; i++) frombuf(buffer, &keytitle[i]);; 1665 keytitle[(int)nwhc] = '\0'; //cast to avoid warning with gcc3.4; 1666 ; 1667 extrainfo.Form("" name: %-16s title: %s"", keyname, keytitle);; 1668 }; 1669 ; 1670 TDatime::GetDateTime(datime, d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:59863,extend,extended,59863,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['extend'],['extended']
Modifiability,"n_t* opt = """"); virtual const char*TEntryList::GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tTEntryList::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual TEntryListArray*GetSubListForEntry(Long64_t entry, TTree* tree = 0); virtual TList*GetSubLists() const; virtual const char*TNamed::GetTitle() const; virtual const char*TEntryList::GetTreeName() const; virtual Int_tTEntryList::GetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTEntryList::Merge(TCollection* list); virtual Long64_tTEntryList::Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEntryListArray.html:6144,Inherit,InheritsFrom,6144,root/html532/TEntryListArray.html,https://root.cern,https://root.cern/root/html532/TEntryListArray.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n_t* opt = """"); virtual const char*TEntryList::GetFileName() const; virtual const char*TObject::GetIconName() const; virtual TList*TEntryList::GetLists() const; virtual Long64_tTEntryList::GetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tTEntryList::GetReapplyCut() const; virtual TEntryListArray*GetSubListForEntry(Long64_t entry, TTree* tree = 0); virtual TList*GetSubLists() const; virtual const char*TNamed::GetTitle() const; virtual const char*TEntryList::GetTreeName() const; virtual Int_tTEntryList::GetTreeNumber() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTEntryList::Merge(TCollection* list); virtual Long64_tTEntryList::Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEntryListArray.html:5773,Inherit,InheritsFrom,5773,root/html602/TEntryListArray.html,https://root.cern,https://root.cern/root/html602/TEntryListArray.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidRooAbsReal::enableOffsetting(Bool_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tevalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_texpectedEvents(const RooArgSet* nset) const; virtual Double_texpectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_textendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeextendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:14548,Extend,ExtendModeextendMode,14548,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,3,['Extend'],['ExtendModeextendMode']
Modifiability,"n_t* option = """"); voidRooAbsOptTestStatistic::seal(const char* notice = """"); const char*RooAbsOptTestStatistic::sealNotice() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsTestStatistic::setData(RooAbsData& data, Bool_t cloneData = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNLLVar.html:24841,config,config,24841,root/html532/RooNLLVar.html,https://root.cern,https://root.cern/root/html532/RooNLLVar.html,2,['config'],['config']
Modifiability,"n_t* option = ""0"")MENU ; virtual voidExecuteTasks(Option_t* option); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBreakin() const; Int_tGetBreakout() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfTasks() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = ""*"") constMENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTask.html:5453,Inherit,InheritsFrom,5453,root/html532/TTask.html,https://root.cern,https://root.cern/root/html532/TTask.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n_t* option = ""0"")MENU ; virtual voidExecuteTasks(Option_t* option); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBreakin() const; Int_tGetBreakout() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfTasks() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActive() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = ""*"") constMENU ; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTask.html:5398,Inherit,InheritsFrom,5398,root/html602/TTask.html,https://root.cern,https://root.cern/root/html602/TTask.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n_t* option = ""lpf""). Add a new entry to this legend. ""obj"" is the object to be represented.; ""label"" is the text you wish to associate with obj in the legend.; If ""label"" is null or empty, the title of the object will be used.; ; Options are:; ; L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified; ; . TLegendEntry * AddEntry(const char* name, const char* label = """", Option_t* option = ""lpf""). Add a new entry to this legend. ""name"" is the name of an object in the pad to; be represented label is the text you wish to associate with obj in the legend; if label is null or empty, the title of the object will be used.; ; Options are:; ; L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified; ; . void Clear(Option_t* option = """"). Clear all entries in this legend, including the header.; ; . void Copy(TObject& obj) const. Copy this legend into ""obj"".; ; . void DeleteEntry(). Delete entry at the mouse position.; ; . void Draw(Option_t* option = """"). Draw this legend with its current attributes.; ; . void EditEntryAttFill(). Edit the fill attributes for the entry pointed by the mouse.; ; . void EditEntryAttLine(). Edit the line attributes for the entry pointed by the mouse.; ; . void EditEntryAttMarker(). Edit the marker attributes for the entry pointed by the mouse.; ; . void EditEntryAttText(). Edit the text attributes for the entry pointed by the mouse.; ; . TLegendEntry * GetEntry() const. Get entry pointed to by the mouse.; This method is mostly a tool for other methods inside this class.; ; . const char * GetHeader() const. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLegend.html:16211,inherit,inherits,16211,root/html528/TLegend.html,https://root.cern,https://root.cern/root/html528/TLegend.html,30,['inherit'],['inherits']
Modifiability,"n_t* option); Check time of finding ""Where am I"" for n points. void TestOverlaps(const char* path); --- Geometry overlap checker based on sampling. Bool_t TestVoxels(TGeoVolume* vol); Check voxels efficiency per volume. void UnbombTranslation(const Double_t* tr, Double_t* bombtr); get the new 'unbombed' translation vector according current exploded view mode. Double_t Weight(Double_t precision, Option_t* option = ""v""); Compute weight [kg] of the current volume. TGeoPainter(TGeoManager* manager). void GetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; {bombx=fBombX; bomby=fBombY; bombz=fBombZ; bombr=fBombR;}. Int_t GetBombMode() const; {return fExplodedView;}. TGeoNode * GetCheckedNode(); {return fCheckedNode;}. const char * GetDrawPath() const; {return fVisBranch.Data();}. TGeoVolume * GetTopVolume() const; {return fTopVolume;}. Int_t GetVisLevel() const; {return fVisLevel;}. Int_t GetVisOption() const; {return fVisOption;}. Int_t GetNsegments() const; {return fNsegments;}. Double_t * GetViewBox(); {return &fCheckedBox[0];}. Bool_t IsExplodedView() const; {return ((fExplodedView==kGeoVisDefault)?kFALSE:kTRUE);}. Bool_t IsRaytracing() const; {return fIsRaytracing;}. Bool_t IsPaintingShape() const; {return fIsPaintingShape;}. void Lock(Bool_t flag = kTRUE); {fVisLock = flag;}. void SetClippingShape(TGeoShape* shape); {fClippingShape = shape;}. void SetGeoManager(TGeoManager* geom); {fGeoManager=geom;}. void SetIteratorPlugin(TGeoIteratorPlugin* plugin); {fPlugin = plugin; ModifiedPad();}. void SetRaytracing(Bool_t flag = kTRUE); {fIsRaytracing = flag;}. void SetTopVolume(TGeoVolume* vol); {fTopVolume = vol;}. » Author: Andrei Gheata 05/03/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: Sat Mar 14 16:39:35 2015 » Last generated: 2015-03-14 16:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPainter.html:22240,plugin,plugin,22240,root/html534/TGeoPainter.html,https://root.cern,https://root.cern/root/html534/TGeoPainter.html,4,['plugin'],['plugin']
Modifiability,"n_t* option); Check time of finding ""Where am I"" for n points. void TestOverlaps(const char* path); --- Geometry overlap checker based on sampling. Bool_t TestVoxels(TGeoVolume* vol); Check voxels efficiency per volume. void UnbombTranslation(const Double_t* tr, Double_t* bombtr); get the new 'unbombed' translation vector according current exploded view mode. Double_t Weight(Double_t precision, Option_t* option = ""v""); Compute weight [kg] of the current volume. TGeoPainter(TGeoManager* manager). void GetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; {bombx=fBombX; bomby=fBombY; bombz=fBombZ; bombr=fBombR;}. Int_t GetBombMode() const; {return fExplodedView;}. TGeoNode * GetCheckedNode(); {return fCheckedNode;}. const char * GetDrawPath() const; {return fVisBranch.Data();}. TGeoVolume * GetTopVolume() const; {return fTopVolume;}. Int_t GetVisLevel() const; {return fVisLevel;}. Int_t GetVisOption() const; {return fVisOption;}. Int_t GetNsegments() const; {return fNsegments;}. Double_t * GetViewBox(); {return &fCheckedBox[0];}. Bool_t IsExplodedView() const; {return ((fExplodedView==kGeoVisDefault)?kFALSE:kTRUE);}. Bool_t IsRaytracing() const; {return fIsRaytracing;}. Bool_t IsPaintingShape() const; {return fIsPaintingShape;}. void Lock(Bool_t flag = kTRUE); {fVisLock = flag;}. void SetClippingShape(TGeoShape* shape); {fClippingShape = shape;}. void SetGeoManager(TGeoManager* geom); {fGeoManager=geom;}. void SetIteratorPlugin(TGeoIteratorPlugin* plugin); {fPlugin = plugin; ModifiedPad();}. void SetRaytracing(Bool_t flag = kTRUE); {fIsRaytracing = flag;}. void SetTopVolume(TGeoVolume* vol); {fTopVolume = vol;}. » Author: Andrei Gheata 05/03/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: Tue Jun 30 15:02:21 2015 » Last generated: 2015-06-30 15:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPainter.html:23205,plugin,plugin,23205,root/html602/TGeoPainter.html,https://root.cern,https://root.cern/root/html602/TGeoPainter.html,4,['plugin'],['plugin']
Modifiability,"n_t* type = """"); virtual TVirtualPad*GetVirtCanvas() const; virtual UInt_tGetWh() const; virtual Double_tGetWNDC() const; virtual UInt_tGetWw() const; virtual Double_tGetX1() const; virtual Double_tGetX2() const; Float_tTAttPad::GetXfile() const; virtual Double_tGetXlowNDC() const; Float_tTAttPad::GetXstat() const; virtual Double_tGetY1() const; virtual Double_tGetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tGetYlowNDC() const; Float_tTAttPad::GetYstat() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tHasCrosshair() const; virtual Bool_tHasFixedAspectRatio() const; virtual ULong_tHash() const; virtual Bool_tHasViewer3D() const; virtual voidHighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tIsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tIsVertical() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidModified(Bool_t flag = 1)SIGNAL ; virtual voidTAttLine:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPad.html:11875,Inherit,InheritsFrom,11875,root/html532/TPad.html,https://root.cern,https://root.cern/root/html532/TPad.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n_t* type = """"); virtual TVirtualPad*GetVirtCanvas() const; virtual UInt_tGetWh() const; virtual Double_tGetWNDC() const; virtual UInt_tGetWw() const; virtual Double_tGetX1() const; virtual Double_tGetX2() const; Float_tTAttPad::GetXfile() const; virtual Double_tGetXlowNDC() const; Float_tTAttPad::GetXstat() const; virtual Double_tGetY1() const; virtual Double_tGetY2() const; Float_tTAttPad::GetYfile() const; virtual Double_tGetYlowNDC() const; Float_tTAttPad::GetYstat() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual Bool_tHasCrosshair() const; virtual Bool_tHasFixedAspectRatio() const; virtual ULong_tHash() const; virtual Bool_tHasViewer3D() const; virtual voidHighLight(Color_t col = kRed, Bool_t set = kTRUE); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsBatch() const; Bool_tTVirtualPad::IsBeingResized() const; virtual Bool_tIsEditable() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tIsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsRetained() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; virtual Bool_tIsVertical() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidModified(Bool_t flag = 1)SIGNAL ; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Noti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPad.html:11892,Inherit,InheritsFrom,11892,root/html602/TPad.html,https://root.cern,https://root.cern/root/html602/TPad.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static TGeoElementTable*TGeoElement::GetElementTable(); virtual const char*TObject::GetIconName() const; TGeoIsotope*TGeoElement::GetIsotope(Int_t i) const; virtual const char*TNamed::GetName() const; Int_tGetNdecays() const; Int_tTGeoElement::GetNisotopes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoElement::GetRelativeAbundance(Int_t i) const; virtual Double_tGetSpecificActivity() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tHalfLife() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoElement::HasIsotopes() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoElement::IsDefined() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Int_tIsoNo() const; virtual Bool_tIsRadioNuclide() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoElement::IsUsed() const; Bool_tTObject::IsZombie() const; Double_tLevel() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMassEx() const; Int_tMassNo() const; voidTObject::MayNotUse(const char* method) const; Int_tTGeoElement::N() const; Double_tNatAbun() const; Double_tTGeoElement::Neff() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoElementRN.html:3711,Inherit,InheritsFrom,3711,root/html534/TGeoElementRN.html,https://root.cern,https://root.cern/root/html534/TGeoElementRN.html,1,['Inherit'],['InheritsFrom']
Modifiability,"n_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static TGeoElementTable*TGeoElement::GetElementTable(); virtual const char*TObject::GetIconName() const; TGeoIsotope*TGeoElement::GetIsotope(Int_t i) const; virtual const char*TNamed::GetName() const; Int_tGetNdecays() const; Int_tTGeoElement::GetNisotopes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTGeoElement::GetRelativeAbundance(Int_t i) const; virtual Double_tGetSpecificActivity() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tHalfLife() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoElement::HasIsotopes() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoElement::IsDefined() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Int_tIsoNo() const; virtual Bool_tIsRadioNuclide() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoElement::IsUsed() const; Bool_tTObject::IsZombie() const; Double_tLevel() const; virtual voidTNamed::ls(Option_t* option = """") const; Double_tMassEx() const; Int_tMassNo() const; voidTObject::MayNotUse(const char* method) const; Int_tTGeoElement::N() const; Double_tNatAbun() const; Double_tTGeoElement::Neff() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoElementRN.html:3490,Inherit,InheritsFrom,3490,root/html602/TGeoElementRN.html,https://root.cern,https://root.cern/root/html602/TGeoElementRN.html,2,['Inherit'],['InheritsFrom']
Modifiability,"n_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGouraudFunction(Int_t ia, Int_t ib, Double_t* f, Double_t* t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; voidImplicitFunction(Double_t* rmin, Double_t* rmax, Int_t nx, Int_t ny, Int_t nz, const char* chopt); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitMoveScreen(Double_t xmin, Double_t xmax); voidInitRaster(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Int_t nx, Int_t ny); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; voidIsoSurface(Int_t ns, Double_t* s, Int_t nx, Int_t ny, Int_t nz, Double_t* x, Double_t* y, Double_t* z, const char* chopt); virtual Bool_tTObject::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; voidLegoCartesian(Double_t ang, Int_t nx, Int_t ny, const char* chopt); voidLegoCylindrical(Int_t iordr, Int_t na, Int_t nb, const char* chopt); voidLegoFunction(Int_t ia, Int_t ib, Int_t& nv, Double_t* ab, Double_t* vv, Double_t* t); voidLegoPolar(Int_t iordr, Int_t na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPainter3dAlgorithms.html:4663,Inherit,InheritsFrom,4663,root/html532/TPainter3dAlgorithms.html,https://root.cern,https://root.cern/root/html532/TPainter3dAlgorithms.html,4,['Inherit'],['InheritsFrom']
Modifiability,"n_t*TObject::GetOption() const; virtual TObject*TProofPlayer::GetOutput(const char* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tHistoSameAxis(TH1* h0, TH1* h1); Int_tIncorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMergeOutput(); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofPlayerRemote.html:7385,Inherit,InheritsFrom,7385,root/html532/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html532/TProofPlayerRemote.html,1,['Inherit'],['InheritsFrom']
Modifiability,"n_t*TObject::GetOption() const; virtual TObject*TProofPlayer::GetOutput(const char* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tHistoSameAxis(TH1* h0, TH1* h1); Int_tIncorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tJoinProcess(TList* workers); static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMergeOutput(Bool_t savememvalues = kFALSE); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPlayerRemote.html:7385,Inherit,InheritsFrom,7385,root/html534/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html534/TProofPlayerRemote.html,1,['Inherit'],['InheritsFrom']
Modifiability,"n_t*TObject::GetOption() const; virtual TObject*TProofPlayer::GetOutput(const char* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tHistoSameAxis(TH1* h0, TH1* h1); Int_tIncorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tJoinProcess(TList* workers); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMergeOutput(); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofPlayerRemote.html:7347,Inherit,InheritsFrom,7347,root/html602/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html602/TProofPlayerRemote.html,1,['Inherit'],['InheritsFrom']
Modifiability,"n_t*TObject::GetOption() const; virtual TObject*TProofPlayer::GetOutput(const char* name) const; virtual TList*TProofPlayer::GetOutputList() const; virtual TVirtualPacketizer*GetPacketizer() const; virtual TProofProgressStatus*TProofPlayer::GetProgressStatus() const; virtual TQueryResult*TProofPlayer::GetQueryResult(const char* ref); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual voidTProofPlayer::HandleGetTreeHeader(TMessage* mess); TObject*HandleHistogram(TObject* obj, Bool_t& merged); virtual voidTProofPlayer::HandleRecvHisto(TMessage* mess); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); Bool_tHistoSameAxis(TH1* h0, TH1* h1); Int_tIncorporate(TObject* obj, TList* out, Bool_t& merged); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsClient() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Bool_tJoinProcess(TList* workers); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidMergeOutput(Bool_t savememvalues = kFALSE); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* remo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofPlayerRemote.html:7347,Inherit,InheritsFrom,7347,root/html604/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html604/TProofPlayerRemote.html,1,['Inherit'],['InheritsFrom']
Modifiability,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw text listbox entry. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; FontStruct_t fFontStruct;  font used t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextLBEntry.html:22832,inherit,inherited,22832,doc/master/classTGTextLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGTextLBEntry.html,1,['inherit'],['inherited']
Modifiability,"n_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TFileHandler;  TFileHandler ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASInputHandler.html:14689,inherit,inherited,14689,doc/master/classTASInputHandler.html,https://root.cern,https://root.cern/doc/master/classTASInputHandler.html,21,['inherit'],['inherited']
Modifiability,"n_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fLength;  size of column in bytes, -1 if not defing ;  ; Bool_t fNullable;  if datatype signed or not, 0 - kFALSE, 1 - kTRUE, -1 - unknown ;  ; Int_t fScale;  datatype length definition, for instance VARCHAR(len) or FLOAT(len), -1 if not defined ;  ; Int_t fSigned;  datatype scale factor, used for instance in NUMBER(len,scale) definition. -1 if not defined ;  ; Int_t fSize;  datatype code (see TSQLServer::ESQLDataTypes constants), -1 if not defeined ;  ; Int_t fSQLType;  sql type name, as reported by DB. Should be as much as close to declaration of column in CREATE TABLE query ;  ; TString fTypeName;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interfac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLColumnInfo.html:11090,inherit,inherited,11090,doc/master/classTSQLColumnInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLColumnInfo.html,1,['inherit'],['inherited']
Modifiability,"n_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTable.html:12457,inherit,inherited,12457,doc/master/classRooTable.html,https://root.cern,https://root.cern/doc/master/classRooTable.html,2,['inherit'],['inherited']
Modifiability,"n_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooCFunction1Map< VO, VI > & fmap ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Types; typedef VO(* func_t) (VI);  . Static Private Member Functions; static VO dummyFunction (VI);  . Private Attributes; func_t _ptr;  . Static Private Attributes; static RooCFunction1Map< VO, VI > * _fmap = nullptr;  Pointer to embedded function. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooCFunction1Binding.h>. Inheritance diagram for RooCFunction1Ref< VO, VI >:. This browser is not able to show SVG: try Firefox, C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Ref.html:9578,inherit,inherited,9578,doc/master/classRooCFunction1Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Ref.html,1,['inherit'],['inherited']
Modifiability,"n_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual Bool_t ShouldImport (TEveElement *el);  Returns true if element el should be imported. ;  ; virtual void UpdateDependentElsAndScenes (TEveElement *root);  Update dependent elements' bounding box and mark scenes containing element root or its children as requiring a repaint. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  . Protected Attributes; TEveVector fCenter;  ; Float_t fCurrentDepth;  ; List_t fDependentEls;  ; Bool_t fImportEmpty;  ; TEveProjection * fProjection;  ; TEveProjection * fProjections [TEveProjection::kPT_End];  ;  Protected Attributes inherited from TEveElementList; TClass * fChildClass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionManager.html:31975,inherit,inherited,31975,doc/master/classTEveProjectionManager.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionManager.html,1,['inherit'],['inherited']
Modifiability,"n_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Private Attributes; std::vector< Double_t > fX;  ; std::vector< Double_t > fY;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSpline;  TSpline (const TSpline &);  Copy constructor. ;  ; TSpline & operator= (const TSpline &);  Assignment operator. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TSpline1.html:16272,inherit,inherited,16272,doc/master/classTMVA_1_1TSpline1.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TSpline1.html,1,['inherit'],['inherited']
Modifiability,n_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fAutoLighting;  ; Float_t fExtrude;  ; Int_t fFontFile;  ; Int_t fFontMode;  ; Int_t fFontSize;  ; Bool_t fLighting;  ; Float_t fPolygonOffset [2];  ; TString fText;  ; Color_t fTextColor;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMai,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveText.html:27870,inherit,inherited,27870,doc/master/classTEveText.html,https://root.cern,https://root.cern/doc/master/classTEveText.html,2,['inherit'],['inherited']
Modifiability,n_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Color_t fColor;  ; Float_t fConeL;  ; Float_t fConeR;  ; Int_t fDrawQuality;  ; TEveVector fOrigin;  ; Float_t fTubeR;  ; TEveVector fVector;  ;  Protected Attributes inherited from TEveElement; Bool_t fCanEditMainColor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChil,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveArrow.html:27599,inherit,inherited,27599,doc/master/classTEveArrow.html,https://root.cern,https://root.cern/doc/master/classTEveArrow.html,2,['inherit'],['inherited']
Modifiability,"nable span values are 0.2 to 0.4.''. References:; Friedman, J. H. (1984) SMART User's Guide.; Laboratory for Computational Statistics,; Stanford University Technical Report No. 1. Friedman, J. H. (1984) A variable span scatterplot smoother.; Laboratory for Computational Statistics,; Stanford University Technical Report No. 5. void BDRsupsmu(Int_t n, Double_t* x, Double_t* y, Double_t* w, Int_t iper, Double_t span, Double_t alpha, Double_t* smo, Double_t* sc); Friedmann�s super smoother *-*-*-*-*-. super smoother (Friedman, 1984). version 10/10/84. coded and copywrite (c) 1984 by:. Jerome H. Friedman; department of statistics; and; stanford linear accelerator center; stanford university. all rights reserved. input:; n : number of observations (x,y - pairs).; x(n) : ordered abscissa values.; y(n) : corresponding ordinate (response) values.; w(n) : weight for each (x,y) observation.; iper : periodic variable flag.; iper=1 => x is ordered interval variable.; iper=2 => x is a periodic variable with values; in the range (0.0,1.0) and period 1.0.; span : smoother span (fraction of observations in window).; span=0.0 => automatic (variable) span selection.; alpha : controls high frequency (small span) penality; used with automatic span selection (bass tone control).; (alpha.le.0.0 or alpha.gt.10.0 => no effect.); output:; smo(n) : smoothed ordinate (response) values.; scratch:; sc(n,7) : internal working storage. note:; for small samples (n < 40) or if there are substantial serial; correlations between observations close in x - value, then; a prespecified fixed span smoother (span > 0) should be; used. reasonable span values are 0.2 to 0.4. current implementation:; Based on R function supsmu: Translated to C++ by C. Stratowa; (R source file: ppr.f by B.D.Ripley Copyright (C) 1994-97). -. void BDRsmooth(Int_t n, Double_t* x, Double_t* y, Double_t* w, Double_t span, Int_t iper, Double_t vsmlsq, Double_t* smo, Double_t* acvr); Function for super smoother *-*-*-. Based on R func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphSmooth.html:12801,variab,variable,12801,root/html528/TGraphSmooth.html,https://root.cern,https://root.cern/root/html528/TGraphSmooth.html,10,['variab'],['variable']
Modifiability,"nableImplicitMT();; ; // Create the RDataFrame from the spec json file. The df106_HiggsToFourLeptons_spec.json is provided in the same; // folder as this tutorial; std::string dataset_spec = gROOT->GetTutorialsDir() + std::string(""/dataframe/df106_HiggsToFourLeptons_spec.json"");; ROOT::RDataFrame df = ROOT::RDF::Experimental::FromSpec(dataset_spec);; ; // Add the ProgressBar feature; ROOT::RDF::Experimental::AddProgressBar(df);; ; #ifndef __CLING__; // If this tutorial is compiled, rather than run as a ROOT macro, the interpreter needs to be fed the signatures; // of all the functions we want to JIT in our analysis, as well as any type used in those signatures.; // clang-format off; gInterpreter->Declare(; ""using ROOT::RVecF;""; ""bool GoodElectronsAndMuons(const ROOT::RVecI &type, const RVecF &pt, const RVecF &eta, const RVecF &phi, const RVecF &e,""; ""const RVecF &trackd0pv, const RVecF &tracksigd0pv, const RVecF &z0);""; ""float ComputeInvariantMass(const RVecF &pt, const RVecF &eta, const RVecF &phi, const RVecF &e);""; );; // clang-format on; #endif; ; // Perform the analysis; // Access metadata information that is stored in the JSON config file of the RDataFrame; // The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo`; // class; auto df_analysis =; df.DefinePerSample(""xsecs"", [](unsigned int slot, const RSampleInfo &id) { return id.GetD(""xsecs""); }); .DefinePerSample(""lumi"", [](unsigned int slot, const RSampleInfo &id) { return id.GetD(""lumi""); }); .DefinePerSample(""sumws"", [](unsigned int slot, const RSampleInfo &id) { return id.GetD(""sumws""); }); .DefinePerSample(""sample_category"",; [](unsigned int slot, const RSampleInfo &id) { return id.GetS(""sample_category""); }); // Apply an MC correction for the ZZ decay due to missing gg->ZZ process; .DefinePerSample(""scale"",; [](unsigned int slot, const ROOT::RDF::RSampleInfo &id) {; return id.Contains(""mc_363490.llll.4lep.root"") ? 1.3f : 1.0f;; }); // Select electr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html:4229,config,config,4229,doc/master/df106__HiggsToFourLeptons_8C.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html,1,['config'],['config']
Modifiability,"nadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.); TMVA::KDEKernel&operator=(const TMVA::KDEKernel&); voidSetKernelType(TMVA::KDEKernel::EKernelType ktype = kGauss); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TMVA::MsgLogger&Log() const. Data Members; public:. enum EKernelType { kNone; kGauss; };; enum EKernelIter { kNonadaptiveKDE; kAdaptiveKDE; };; enum EKernelBorder { kNoTreatment; kKernelRenorm; kSampleMirror; };. private:. Float_tfFineFactorfine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function; TH1F*fFirstIterHisthistogram to be filled in the hidden iteration; Bool_tfHiddenIterationDefines if whats currently running is the ; TH1F*fHistcopy of input histogram; TMVA::KDEKernel::EKernelIterfIteriteration number; TMVA::KDEKernel::EKernelBorderfKDEborderThe method to take care about ""border"" effects; TF1*fKernel_integthe integral of the Kernel function; TMVA::MsgLogger*fLoggermessage logger; Float_tfLowerEdgethe lower edge of the PDF; Float_tfSigmaWidth of the Kernel function; TH1F*fSigmaHistcontains the Sigmas Widths for adaptive KDE ; Float_tfUpperEdgethe upper edge of the PDF. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; KDEKernel(TMVA::KDEKernel::EKernelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.); constructor; sanity check. ~KDEKernel(); destructor. void SetKernelType(TMVA::KDEKernel::EKernelType ktype = kGauss); fIter == 1 ---> nonadaptive KDE; fIter == 2 ---> adaptive KDE. Float_t GetBinKernelIntegral(Float_t lowr, Float_t highr, Float_t mean, Int_t binnum); calculates the integral of the Kernel. KDEKernel(TMVA::KDEKernel::EKernel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__KDEKernel.html:1913,adapt,adaptive,1913,root/html534/TMVA__KDEKernel.html,https://root.cern,https://root.cern/root/html534/TMVA__KDEKernel.html,3,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,"nager & operator= (const TPluginManager &)=delete;  . Private Attributes; THashTable * fBasesLoaded;  ; TList * fHandlers;  ; Bool_t fReadingDirs;  table of base classes already checked or loaded ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPluginManager.h>. Inheritance diagram for TPluginManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPluginManager() [1/2]. TPluginManager::TPluginManager ; (; const TPluginManager & ; ). privatedelete . true if we are running LoadHandlersFromPluginDirs . ◆ TPluginManager() [2/2]. TPluginManager::TPluginManager ; (; ). Constructor. ; Definition at line 368 of file TPluginManager.cxx. ◆ ~TPluginManager(). TPluginManager::~TPluginManager ; (; ). Clean up the plugin manager. ; Definition at line 377 of file TPluginManager.cxx. Member Function Documentation. ◆ AddHandler(). void TPluginManager::AddHandler ; (; const char * ; base, . const char * ; regexp, . const char * ; className, . const char * ; pluginName, . const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:14884,inherit,inherited,14884,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,2,['inherit'],['inherited']
Modifiability,"nager () const;  ; TEveProjectable * GetProjectable () const;  ; virtual void SetDepth (Float_t d);  Set depth coordinate for the element. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UnRefProjectable (TEveProjectable *assumed_parent, bool notifyParent=true);  Remove reference to projectable. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveStraightLineSet; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:34539,inherit,inherited,34539,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,5,['inherit'],['inherited']
Modifiability,"nager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Private Member Functions; void DefVar1D ();  Define vars for 1D Histogram. ;  ; void DefVar2D ();  Define variables for 2D histogram. ;  ; void DefVar3D ();  Define variables for 3D histogram. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TProofDraw; enum  { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TProofDraw.h>. Inheritance diagram for TProofDrawHist:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TProofDrawH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawHist.html:13908,inherit,inherited,13908,doc/master/classTProofDrawHist.html,https://root.cern,https://root.cern/doc/master/classTProofDrawHist.html,2,['inherit'],['inherited']
Modifiability,"nager or will create one:; TGeoManager *geom = new TGeoManager(""myGeom"", """");; TGeoVolume *top = geom->MakeBox(...);; geom->SetTopVolume(top);; //name of volume or key (depending on export usage); TGeoVolume *module1 = TGeoVolume::Import(""file.root"", ""MOD1"");; TGeoVolume *module2 = TGeoVolume::Import(""file.root"", ""MOD2"");; top->AddNode(module1, 1, new TGeoTranslation(0,0,100));; top->AddNode(module2, 1, new TGeoTranslation(0,0,-100));; // One should close oneself the geometry; geom->CloseGeometry();; 18.9.1 GDML; Few lines above word GDML was used. GDML stands for Geometry Description Markup Language. It is an application-independent geometry description format based on XML. It is mainly used for geometry interchange between ROOT and Geant4 framework. More details about this project can be found http://gdml.web.cern.ch. This feature (importing/exporting from/to gdml file format) is disabled by default in ROOT installation. To enable this feature add --enable-gdml option to ./configure script call.; 18.10 Navigation Algorithms; This section will describe the main methods and algorithms used for implementing the navigation features within the geometrical modeller. This includes navigation queries at shape level, global geometrical queries and optimization mechanisms.; 18.10.1 Finding the State Corresponding to a Location (x,y,z); For reminder, a geometry state is a ‘touchable’ object in the geometry hierarchy. It is represented by a path like: /TOP_1/A_1/B_3/C_1, where B_3 for instance is a copy of volume B positioned inside volume A. A state is always associated to a transformation matrix M of the touchable with respect to the global reference frame (obtained by piling-up all local transformations of nodes in the branch with respect to their containers). The current state and the corresponding global matrix are updated whenever the geometry depth is modified. The global transformations corresponding to all nodes in the current branch are kept in an array: (MTOP_1, MA_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1021681,config,configure,1021681,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['config'],['configure']
Modifiability,"nager& pm). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. THashTable*fBasesLoaded! table of base classes already checked or loaded; TList*fHandlerslist of plugin handlers; Bool_tfReadingDirs! true if we are running LoadHandlersFromPluginDirs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TPluginManager(); Clean up the plugin manager. void LoadHandlersFromEnv(TEnv* env); Load plugin handlers specified in config file, like:; Plugin.TFile: ^rfio: TRFIOFile RFIO ""TRFIOFile(...)""; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""TMySQLServer(...)""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""TPgSQLServer(...)""; The + allows the extension of an already defined resource (see TEnv). void LoadHandlerMacros(const char* path); Load all plugin macros from the specified path/base directory. void LoadHandlersFromPluginDirs(const char* base = 0); Load plugin handlers specified via macros in a list of plugin; directories. The $ROOTSYS/etc/plugins is the default top plugin directory; specified in $ROOTSYS/etc/system.rootrc. The macros must have names; like <BaseClass>/PX0_<PluginClass>.C, e.g.:; TFile/P10_TRFIOFile.C, TSQLServer/P20_TMySQLServer.C, etc.; to allow easy sorting and grouping. If the BaseClass is in a namespace; the dir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPluginManager.html:9490,Inherit,Inheritance,9490,root/html602/TPluginManager.html,https://root.cern,https://root.cern/root/html602/TPluginManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nager(); Char_t*Atom(Int_t idx) const; Int_tCapacity() const; Char_t*Chunk(Int_t chk) const; static TClass*Class(); virtual TClass*IsA() const; Int_tN() const; Int_tNAtoms(Int_t chk) const; Char_t*NewAtom(); Char_t*NewChunk(); voidRefit(); voidReset(Int_t atom_size, Int_t chunk_size); Int_tS() const; virtual voidShowMembers(TMemberInspector& insp) const; Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TEveChunkManager(); TEveChunkManager(Int_t atom_size, Int_t chunk_size); Int_tVecSize() const. protected:. voidReleaseChunks(). private:. TEveChunkManager&operator=(const TEveChunkManager&); TEveChunkManager(const TEveChunkManager&). Data Members; protected:. Int_tfCapacityAvailable capacity within the chunks; vector<TArrayC*>fChunksMemory blocks; Int_tfNNumber of atoms in a chunk; Int_tfSSize of atom; Int_tfSizeSize of container, number of atoms; Int_tfVecSizeNumber of allocated chunks. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ReleaseChunks(); Release all memory chunks. TEveChunkManager(); Default constructor.; Call reset for initialization. TEveChunkManager(Int_t atom_size, Int_t chunk_size); Constructor. ~TEveChunkManager(); Destructor. void Reset(Int_t atom_size, Int_t chunk_size); Empty the container and reset it with given atom and chunk sizes. void Refit(); Refit the container so that all current data fits into a single; chunk. Char_t* NewChunk(); Allocate a new memory chunk and register it. Char_t* NewAtom(). TEveChunkManager(const TEveChunkManager& ). TEveChunkManager& operator=(const TEveChunkManager& ). Int_t S() const; { return fS; }. Int_t N() const; { return fN; }. Int_t Size() const; { return fSize; }. Int_t VecSize() const; { return fVecSize; }. Int_t Capacity() const; { return fCapacity; }. Char_t* Atom(Int_t idx) const; { return fChunks[idx/fN]->fArray + idx%fN*fS; }. Char_t* Chunk(Int_t chk) const; { return fChunks[chk]->fArray; }. Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveChunkManager.html:1661,Inherit,Inheritance,1661,root/html602/TEveChunkManager.html,https://root.cern,https://root.cern/root/html602/TEveChunkManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,nager* TSpider::fManager. private . Coordinator for the formulas. ; Definition at line 60 of file TSpider.h. ◆ fMax. Double_t* TSpider::fMax. private . [fNcols] Maximum value of the variables. ; Definition at line 51 of file TSpider.h. ◆ fMin. Double_t* TSpider::fMin. private . [fNcols] Minimum value of the variables. ; Definition at line 52 of file TSpider.h. ◆ fNcols. UInt_t TSpider::fNcols. private . Number of variables. ; Definition at line 44 of file TSpider.h. ◆ fNentries. Long64_t TSpider::fNentries. private . Number of entries. ; Definition at line 47 of file TSpider.h. ◆ fNx. UInt_t TSpider::fNx. private . Number of horizontal spider plots. ; Definition at line 42 of file TSpider.h. ◆ fNy. UInt_t TSpider::fNy. private . Number of vertical spider plots. ; Definition at line 43 of file TSpider.h. ◆ fPolargram. TGraphPolargram* TSpider::fPolargram. private . Polar graph. ; Definition at line 61 of file TSpider.h. ◆ fPolyList. TList* TSpider::fPolyList. private . Polygons representing the variables. ; Definition at line 62 of file TSpider.h. ◆ fSegmentDisplay. bool TSpider::fSegmentDisplay. private . True if displaying a segment plot. ; Definition at line 68 of file TSpider.h. ◆ fSelect. TTreeFormula* TSpider::fSelect. private . Selection condition. ; Definition at line 63 of file TSpider.h. ◆ fSelector. TSelectorDraw* TSpider::fSelector. private . ! Selector. ; Definition at line 64 of file TSpider.h. ◆ fShowRange. bool TSpider::fShowRange. private . Show range of variables or not. ; Definition at line 69 of file TSpider.h. ◆ fSuperposed. TList* TSpider::fSuperposed. private . Superposed spider plots. ; Definition at line 53 of file TSpider.h. ◆ fTree. TTree* TSpider::fTree. private . Pointer to the TTree to represent. ; Definition at line 54 of file TSpider.h. Libraries for TSpider:. [legend]; The documentation for this class was generated from the following files:; tree/treeviewer/inc/TSpider.h; tree/treeviewer/src/TSpider.cxx. TSpider. ROOT master - Referenc,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:33444,variab,variables,33444,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variables']
Modifiability,"nager*TGeoVolume::fGeoManager! pointer to TGeoManager owning this volume; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TGeoMedium*TGeoVolume::fMediumtracking medium; TStringTNamed::fNameobject identifier; TObjArray*TGeoVolume::fNodesarray of nodes inside this volume; Int_tTGeoVolume::fNtotaltotal number of physical nodes; Int_tTGeoVolume::fNumbervolume serial number in the list of volumes; TStringTGeoVolume::fOption! option - if any; Int_tTGeoVolume::fRefCountreference counter; TGeoShape*TGeoVolume::fShapeshape; vector<TGeoVolumeAssembly::ThreadData_t*>fThreadData! Thread specific data vector; Int_tfThreadSize! Thread vector size; TStringTNamed::fTitleobject title; TGeoExtension*TGeoVolume::fUserExtension! Transient user-defined extension to volumes; TGeoVoxelFinder*TGeoVolume::fVoxelsfinder object for bounding boxes; static TGeoMedium*TGeoVolume::fgDummyMedium! dummy medium. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ClearThreadData() const. void CreateThreadData(Int_t nthreads). Int_t GetCurrentNodeIndex() const. Int_t GetNextNodeIndex() const. void SetCurrentNodeIndex(Int_t index). void SetNextNodeIndex(Int_t index). TGeoVolumeAssembly(); Default constructor. TGeoVolumeAssembly(const char* name); Constructor. Just the name has to be provided. Assemblies does not have their own; shape or medium. ~TGeoVolumeAssembly(); Destructor. The assembly is owner of its ""shape"". void AddNode(TGeoVolume* vol, Int_t copy_no, TGeoMatrix* mat = 0, Option_t* option = """"); Add a component to the assembly. void AddNodeOverlap(TGeoVolume* vol, Int_t copy_no, TGeoMatrix* mat, Option_t* option); Add an overlapping node - not allowed for assemblies. TGeoVolume * CloneVolume() const; Clone this volume.; build a volume with same name, shape and medium. TGeoVolume * Divide(const char* divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step, Int_t numed = 0, Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoVolumeAssembly.html:35462,Inherit,Inheritance,35462,root/html602/TGeoVolumeAssembly.html,https://root.cern,https://root.cern/root/html602/TGeoVolumeAssembly.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nager;  ; TEveProjectable * fProjectable;  . Private Member Functions;  TEveTrackProjected (const TEveTrackProjected &)=delete;  ; Int_t GetBreakPointIdx (Int_t start);  Find index of the last point that lies within the same segment of projected space. ;  ; TEveTrackProjected & operator= (const TEveTrackProjected &)=delete;  . Private Attributes; TEveVector * fOrigPnts;  . Friends; class TEveTrackProjectedGL;  . Additional Inherited Members;  Public Types inherited from TEveTrack; enum  EBreakProjectedTracks_e { kBPTDefault; , kBPTAlways; , kBPTNever; };  ; typedef vPathMark_t::const_iterator vPathMark_ci;  ; typedef vPathMark_t::iterator vPathMark_i;  ; typedef std::vector< TEvePathMarkD > vPathMark_t;  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackProjected.html:51227,inherit,inherited,51227,doc/master/classTEveTrackProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackProjected.html,3,['inherit'],['inherited']
Modifiability,"nagerRooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2PdfBinding_double_int_int_.html:38589,config,configuration,38589,root/html526/RooCFunction2PdfBinding_double_int_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2PdfBinding_double_int_int_.html,1,['config'],['configuration']
Modifiability,"nagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooListProxy_x; Double_t_z; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMultiVarGaussian.html:43179,config,configuration,43179,root/html534/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html534/RooMultiVarGaussian.html,4,['config'],['configuration']
Modifiability,"nal = 0.0;  ; RooListProxy _paramList;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html:56787,inherit,inherited,56787,doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,1,['inherit'],['inherited']
Modifiability,"nal Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::PDEFoamDensityBase; Double_t GetBoxVolume ();  Returns the volume of range searching box fBox. ;  ; MsgLogger & Log () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/PDEFoamDecisionTreeDensity.h>. Inheritance diagram for TMVA::PDEFoamDecisionTreeDensity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamDecisionTreeDensity() [1/3]. TMVA::PDEFoamDecisionTreeDensity::PDEFoamDecisionTreeDensity ; (; ). Definition at line 60 of file PDEFoamDecisionTreeDensity.cxx. ◆ PDEFoamDecisionTreeDensity() [2/3]. TMVA::PDEFoamDecisionTreeDensity::PDEFoamDecisionTreeDensity ; (; std::vector< Double_t > ; box, . UInt_t ; cls . ). User constructor: ; Parameters:. box - size of the range-searching box (n-dimensional std::vector); cls - event class used for the range-searching . Definition at line 75 of file PDEFoamDecisionTreeDensity.cxx. ◆ PDEFoamDecisionTreeDensity() [3/3]. TMVA::PDEFoamDecisionTreeDensity::PDEFoamDecision",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTreeDensity.html:11702,inherit,inherited,11702,doc/master/classTMVA_1_1PDEFoamDecisionTreeDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDecisionTreeDensity.html,1,['inherit'],['inherited']
Modifiability,"nal Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::PDEFoamDensityBase; Double_t GetBoxVolume ();  Returns the volume of range searching box fBox. ;  ; MsgLogger & Log () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/PDEFoamDiscriminantDensity.h>. Inheritance diagram for TMVA::PDEFoamDiscriminantDensity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamDiscriminantDensity() [1/3]. TMVA::PDEFoamDiscriminantDensity::PDEFoamDiscriminantDensity ; (; ). Definition at line 61 of file PDEFoamDiscriminantDensity.cxx. ◆ PDEFoamDiscriminantDensity() [2/3]. TMVA::PDEFoamDiscriminantDensity::PDEFoamDiscriminantDensity ; (; std::vector< Double_t > ; box, . UInt_t ; cls . ). User constructor: ; Parameters:. box - size of the range-searching box (n-dimensional std::vector); cls - event class used for the range-searching . Definition at line 76 of file PDEFoamDiscriminantDensity.cxx. ◆ PDEFoamDiscriminantDensity() [3/3]. TMVA::PDEFoamDiscriminantDensity::PDEFoamDiscrimi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDiscriminantDensity.html:11469,inherit,inherited,11469,doc/master/classTMVA_1_1PDEFoamDiscriminantDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDiscriminantDensity.html,1,['inherit'],['inherited']
Modifiability,"nal Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::PDEFoamDensityBase; Double_t GetBoxVolume ();  Returns the volume of range searching box fBox. ;  ; MsgLogger & Log () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/PDEFoamTargetDensity.h>. Inheritance diagram for TMVA::PDEFoamTargetDensity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamTargetDensity() [1/3]. TMVA::PDEFoamTargetDensity::PDEFoamTargetDensity ; (; ). Definition at line 58 of file PDEFoamTargetDensity.cxx. ◆ PDEFoamTargetDensity() [2/3]. TMVA::PDEFoamTargetDensity::PDEFoamTargetDensity ; (; std::vector< Double_t > ; box, . UInt_t ; target . ). User constructor. ; Parameters:. box - size of the range-searching box (n-dimensional std::vector); target - the target number to calculate the density for . Definition at line 73 of file PDEFoamTargetDensity.cxx. ◆ PDEFoamTargetDensity() [3/3]. TMVA::PDEFoamTargetDensity::PDEFoamTargetDensity ; (; const PDEFoamTargetDensity & ; distr). Copy const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamTargetDensity.html:11358,inherit,inherited,11358,doc/master/classTMVA_1_1PDEFoamTargetDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamTargetDensity.html,1,['inherit'],['inherited']
Modifiability,"nal Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::PDEFoamDensityBase; Double_t GetBoxVolume ();  Returns the volume of range searching box fBox. ;  ; MsgLogger & Log () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TMVA::PDEFoamDensityBase; BinarySearchTree * fBst;  Binary tree to find events within a volume. ;  ; MsgLogger * fLogger;  ! message logger ;  . #include <TMVA/PDEFoamEventDensity.h>. Inheritance diagram for TMVA::PDEFoamEventDensity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamEventDensity() [1/3]. TMVA::PDEFoamEventDensity::PDEFoamEventDensity ; (; ). Definition at line 60 of file PDEFoamEventDensity.cxx. ◆ PDEFoamEventDensity() [2/3]. TMVA::PDEFoamEventDensity::PDEFoamEventDensity ; (; std::vector< Double_t > ; box). User constructor. ; Parameters:. box - size of sampling box . Definition at line 71 of file PDEFoamEventDensity.cxx. ◆ PDEFoamEventDensity() [3/3]. TMVA::PDEFoamEventDensity::PDEFoamEventDensity ; (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamEventDensity.html:11071,inherit,inherited,11071,doc/master/classTMVA_1_1PDEFoamEventDensity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamEventDensity.html,1,['inherit'],['inherited']
Modifiability,nal models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf ;  ; file  rf316_llratioplot.py;   Multidimensional models: using the likelihood ratio technique to construct a signal enhanced one-dimensional projection of a multi-dimensional pdf ;  ; file  rf401_importttreethx.C;   Data and categories: advanced options for importing data from ROOT TTree and THx histograms ;  ; file  rf401_importttreethx.py;   'DATA AND CATEGORIES' RooFit tutorial macro #401 ;  ; file  rf402_datahandling.C;   Data and categories: tools for manipulation of (un)binned datasets ;  ; file  rf402_datahandling.py;   Data and categories: tools for manipulation of (un)binned datasets ;  ; file  rf403_weightedevts.C;   Data and categories: using weights in unbinned datasets ;  ; file  rf403_weightedevts.py;   'DATA AND CATEGORIES' RooFit tutorial macro #403 ;  ; file  rf404_categories.C;   Data and categories: working with RooCategory objects to describe discrete variables ;  ; file  rf404_categories.py;   Data and categories: working with ROOT.RooCategory objects to describe discrete variables ;  ; file  rf405_realtocatfuncs.C;   Data and categories: demonstration of real-->discrete mapping functions ;  ; file  rf405_realtocatfuncs.py;   Data and categories: demonstration of real-discrete mapping functions ;  ; file  rf406_cattocatfuncs.C;   Data and categories: demonstration of discrete-->discrete (invertible) functions ;  ; file  rf406_cattocatfuncs.py;   Data and categories: demonstration of discrete-discrete (invertable) functions ;  ; file  rf407_latextables.C;   Data and categories: latex printing of lists and sets of RooArgSets ;  ; file  rf407_latextables.py;   Data and categories: latex printing of lists and sets of RooArgSets ;  ; file  rf408_RDataFrameToRooFit.C;   Fill RooDataSet/RooDataHist in RDataFrame. ;  ; file  rf408_RDataFrameToRooFit.py;   Fill RooDataSet/RooDataHist in RDataFrame. ;  ; file  rf409_NumP,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:10921,variab,variables,10921,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['variab'],['variables']
Modifiability,"nal node with just one point minimum and maximum for each; dimension are the same.; Boundaries can be retrieved by calling GetBoundaryExact(inode) function that would; return an array of boundaries for the specified node, or GetBoundaries() function; that would return the complete array. void TKDTree<Index, Value> FindBNodeA(float* point, float* delta, Int_t& inode). find the smallest node covering the full range - start. Value* TKDTree<Index, Value> GetBoundaries(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundariesExact(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundary(const Int_t node); Get a boundary. Value* TKDTree<Index, Value> GetBoundaryExact(const Int_t node); Get a boundary. Int_t GetLeft(Int_t inode) const; Get indexes of left and right daughter nodes. {return inode*2+1;}. Int_t GetRight(Int_t inode) const; {return (inode+1)*2;}. Int_t GetParent(Int_t inode) const. Other getters. {return (inode-1)/2;}. UChar_t GetNodeAxis(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fAxis[id];}. Value GetNodeValue(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fValue[id];}. Int_t GetNNodes() const; {return fNNodes;}. Int_t GetTotalNodes() const; {return fTotalNodes;}. Index GetNPoints(); { return fNPoints; }. Index GetNDim(); { return fNDim; }. Int_t GetRowT0(); Getters for internal variables. {return fRowT0;}. Int_t GetCrossNode(); {return fCrossNode;}. Int_t GetOffset(); {return fOffset;}. Index* GetIndPoints(); {return fIndPoints;}. Index GetBucketSize(); {return fBucketSize;}. Bool_t IsTerminal(int inode) const; {return (inode>=fNNodes);}. Int_t IsOwner(); { return fDataOwner; }. void SetOwner(Int_t owner); { fDataOwner = owner; }. TKDTree<Index, Value>& operator=(const TKDTree<int,float>& ). » Last changed: Mon Dec 13 17:53:03 2010 » Last generated: 2010-12-13 17:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TKDTree_int_float_.html:23964,variab,variables,23964,root/html528/TKDTree_int_float_.html,https://root.cern,https://root.cern/root/html528/TKDTree_int_float_.html,1,['variab'],['variables']
Modifiability,"nal node with just one point minimum and maximum for each; dimension are the same.; Boundaries can be retrieved by calling GetBoundaryExact(inode) function that would; return an array of boundaries for the specified node, or GetBoundaries() function; that would return the complete array. void TKDTree<Index, Value> FindBNodeA(float* point, float* delta, Int_t& inode). find the smallest node covering the full range - start. Value* TKDTree<Index, Value> GetBoundaries(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundariesExact(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundary(const Int_t node); Get a boundary. Value* TKDTree<Index, Value> GetBoundaryExact(const Int_t node); Get a boundary. Int_t GetLeft(Int_t inode) const; Get indexes of left and right daughter nodes. {return inode*2+1;}. Int_t GetRight(Int_t inode) const; {return (inode+1)*2;}. Int_t GetParent(Int_t inode) const. Other getters. {return (inode-1)/2;}. UChar_t GetNodeAxis(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fAxis[id];}. Value GetNodeValue(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fValue[id];}. Int_t GetNNodes() const; {return fNNodes;}. Int_t GetTotalNodes() const; {return fTotalNodes;}. Index GetNPoints(); { return fNPoints; }. Index GetNDim(); { return fNDim; }. Int_t GetRowT0(); Getters for internal variables. {return fRowT0;}. Int_t GetCrossNode(); {return fCrossNode;}. Int_t GetOffset(); {return fOffset;}. Index* GetIndPoints(); {return fIndPoints;}. Index GetBucketSize(); {return fBucketSize;}. Bool_t IsTerminal(int inode) const; {return (inode>=fNNodes);}. Int_t IsOwner(); { return fDataOwner; }. void SetOwner(Int_t owner); { fDataOwner = owner; }. TKDTree<Index, Value>& operator=(const TKDTree<int,float>& ). » Last changed: Sat Mar 14 16:42:48 2015 » Last generated: 2015-03-14 16:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TKDTree_int_float_.html:24304,variab,variables,24304,root/html534/TKDTree_int_float_.html,https://root.cern,https://root.cern/root/html534/TKDTree_int_float_.html,2,['variab'],['variables']
Modifiability,"nal node with just one point minimum and maximum for each; dimension are the same.; Boundaries can be retrieved by calling GetBoundaryExact(inode) function that would; return an array of boundaries for the specified node, or GetBoundaries() function; that would return the complete array. void TKDTree<Index, Value> FindBNodeA(float* point, float* delta, Int_t& inode). find the smallest node covering the full range - start. Value* TKDTree<Index, Value> GetBoundaries(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundariesExact(); Get the boundaries. Value* TKDTree<Index, Value> GetBoundary(const Int_t node); Get a boundary. Value* TKDTree<Index, Value> GetBoundaryExact(const Int_t node); Get a boundary. Int_t GetLeft(Int_t inode) const; Get indexes of left and right daughter nodes. {return inode*2+1;}. Int_t GetRight(Int_t inode) const; {return (inode+1)*2;}. Int_t GetParent(Int_t inode) const. Other getters. {return (inode-1)/2;}. UChar_t GetNodeAxis(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fAxis[id];}. Value GetNodeValue(Int_t id) const; {return (id < 0 || id >= fNNodes) ? 0 : fValue[id];}. Int_t GetNNodes() const; {return fNNodes;}. Int_t GetTotalNodes() const; {return fTotalNodes;}. Index GetNPoints(); { return fNPoints; }. Index GetNDim(); { return fNDim; }. Int_t GetRowT0(); Getters for internal variables. {return fRowT0;}. Int_t GetCrossNode(); {return fCrossNode;}. Int_t GetOffset(); {return fOffset;}. Index* GetIndPoints(); {return fIndPoints;}. Index GetBucketSize(); {return fBucketSize;}. Bool_t IsTerminal(int inode) const; {return (inode>=fNNodes);}. Int_t IsOwner(); { return fDataOwner; }. void SetOwner(Int_t owner); { fDataOwner = owner; }. TKDTree<Index, Value>& operator=(const TKDTree<int,float>& ). » Last changed: Tue Jun 30 15:13:41 2015 » Last generated: 2015-06-30 15:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKDTree_int_float_.html:24674,variab,variables,24674,root/html602/TKDTree_int_float_.html,https://root.cern,https://root.cern/root/html602/TKDTree_int_float_.html,2,['variab'],['variables']
Modifiability,"nal numerical integration engine; RooMCStudy A general purpose toy Monte Carlo study manager; RooMPSentinel Singleton class that terminate MP server processes when parent exists; RooMapCatEntry Utility class, holding a map expression from a index label regexp to a RooCatType; RooMappedCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGaussian Multivariate Gaussian PDF with correlations; RooNDKeysPdf General N-dimensional non-parametric kernel estimation p.d.f; RooNLLVar Function representing (extended) -log(L) of p.d.f and dataset; RooNameReg String name registry; RooNameSet A sterile version of RooArgSet, containing only the names of the contained RooAbsArgs; RooNonCPEigenDecay PDF to model CP-violating decays to final states which are not CP eigenstates; RooNormSetCache Management tool for tracking sets of similar integration/normalization sets; RooNovosibirsk Novosibirsk PDF; RooNumCdf Numeric calculator for CDF for a given PDF; RooNumConvPdf Operator PDF implementing numeric convolution of 2 input PDFs; RooNumConvolution Operator PDF implementing numeric convolution of 2 input functions; RooNumGenConfig Numeric (MC) Event generator configuration ; RooNumGenFactory Numeric Generator factory; RooNumIntConfig Numeric Integrator configuration ; RooNumIntFactory Numeric Integrator factory; RooNumRunningInt Numeric calculator for running integral of a given function; RooNumber wrapper class for portable numerics; RooObjCacheManager Cache manager for generic caches that ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:37365,extend,extended,37365,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,1,['extend'],['extended']
Modifiability,"nal objects.; Bool_tTEveDigitSet::fDisableLightingDisable lighting for rendering.; Bool_tfDrawConeCap; Bool_tTEveDigitSet::fEmitSignalsEmit signals on secondary-select.; TEveFrameBox*TEveDigitSet::fFramePointer to frame structure.; Bool_tTEveDigitSet::fHighlightFrameHighlight frame when object is selected.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tTEveDigitSet::fHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*TEveDigitSet::fLastDigit! The last / current digit added to collection.; Int_tTEveDigitSet::fLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveDigitSet::fOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*TEveDigitSet::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerTEveDigitSet::fPlexContainer of digit data.; TEveDigitSet::ERenderMode_eTEveDigitSet::fRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveDigitSet::fSelectViaFrameAllow selection via frame.; Bool_tTEveElement::f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveBoxSet.html:27247,variab,variable,27247,root/html532/TEveBoxSet.html,https://root.cern,https://root.cern/root/html532/TEveBoxSet.html,4,['variab'],['variable']
Modifiability,"nal observables ;  ; std::string fConstrParamsName;  name for RooArgSet specifying constrained parameters ;  ; std::string fDataName;  name of data set in workspace ;  ; std::string fExtConstraintsName;  name for RooArgSet specifying external constraints ;  ; std::string fGlobalObsName;  name for RooArgSet specifying global observables ;  ; std::string fNuisParamsName;  name for RooArgSet specifying nuisance parameters ;  ; std::string fObservablesName;  name for RooArgSet specifying observable parameters. ;  ; std::string fPdfName;  name of PDF in workspace ;  ; std::string fPOIName;  name for RooArgSet specifying parameters of interest ;  ; std::string fPriorPdfName;  name for RooAbsPdf specifying a prior on the parameters ;  ; std::string fProtoDataName;  name for RooArgSet specifying dataset that should be used as proto-data ;  ; TRef fRefWS;  WS reference used in the file. ;  ; std::string fSnapshotName;  name for RooArgSet that specifies a particular hypothesis ;  ; std::string fWSName;  name of the WS ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList) const;  ; std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html:19847,inherit,inherited,19847,doc/master/classRooStats_1_1ModelConfig.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html,1,['inherit'],['inherited']
Modifiability,"nal plot (if it is to be reused); TTreeDrawArgsParser::EOutputTypefOutputTypetype of the output; Bool_tfParameterGiven[9]true if the parameter was given, otherwise false; Double_tfParameters[9]parameters in brackets; TStringfSelectionselection expression; Bool_tfShouldDrawif to draw the plot; TStringfVarExp[4]variable expression 0 - X, 1 - Y, 2 - Z, 3 - W. Class Charts. Inheritance Chart:. TObject. ←; TTreeDrawArgsParser. Function documentation; TTreeDrawArgsParser(); Constructor - cleans all the class variables. ~TTreeDrawArgsParser(); Destructor. Int_t GetMaxDimension(); return fgMaxDimension (cannot be inline). void ClearPrevious(); Resets all the variables of the class. Bool_t SplitVariables(TString variables); Parse expression [var1 [:var2 [:var3] ...]],; number of variables cannot be greater than fgMaxDimension.; A colon which is followed by (or that follows) another semicolon; is not regarded as a separator.; If there are more separating : than fgMaxDimension - 1 then; all characters after (fgMaxDimension - 1)th colon is put into; the last variable.; fDimension := <number of variables>; fVarExp[0] := <first variable string>; fVarExp[1] := <second variable string>; ..; Returns kFALSE in case of an error. Bool_t ParseName(TString name); Syntax:; [' '*][[\+][' '*]name[(num1 [, [num2] ] [, [num3] ] ...)]]; num's are floating point numbers; sets the fileds fNoParameters, fParameterGiven, fParameters, fAdd, fName; to apropriate values.; Returns kFALSE in case of an error. Bool_t ParseVarExp(); Split variables and parse name and parameters in brackets. Bool_t ParseOption(); Check if options contain some data important for choosing the type of the; drawn object. Bool_t Parse(const char* varexp, const char* selection, Option_t* option); Parses parameters from TTree::Draw().; varexp - Variable expression; see TTree::Draw(); selection - selection expression; see TTree::Draw(); option - Drawnig option; see TTree::Draw. TString GetProofSelectorName() const; Returns apropr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeDrawArgsParser.html:8811,variab,variable,8811,root/html602/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html602/TTreeDrawArgsParser.html,4,['variab'],['variable']
Modifiability,"nal plot (if it is to be reused); TTreeDrawArgsParser::EOutputTypefOutputTypetype of the output; Bool_tfParameterGiven[9]true if the parameter was given, otherwise false; Double_tfParameters[9]parameters in brackets; TStringfSelectionselection expression; Bool_tfShouldDrawif to draw the plot; TStringfVarExp[4]variable expression 0 - X, 1 - Y, 2 - Z, 3 - W. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTreeDrawArgsParser(); Constructor - cleans all the class variables. ~TTreeDrawArgsParser(); Destructor. Int_t GetMaxDimension(); return fgMaxDimension (cannot be inline). void ClearPrevious(); Resets all the variables of the class. Bool_t SplitVariables(TString variables); Parse expression [var1 [:var2 [:var3] ...]],; number of variables cannot be greater than fgMaxDimension.; A colon which is followed by (or that follows) another semicolon; is not regarded as a separator.; If there are more separating : than fgMaxDimension - 1 then; all characters after (fgMaxDimension - 1)th colon is put into; the last variable.; fDimension := <number of variables>; fVarExp[0] := <first variable string>; fVarExp[1] := <second variable string>; ..; Returns kFALSE in case of an error. Bool_t ParseName(TString name); Syntax:; [' '*][[\+][' '*]name[(num1 [, [num2] ] [, [num3] ] ...)]]; num's are floating point numbers; sets the fileds fNoParameters, fParameterGiven, fParameters, fAdd, fName; to apropriate values.; Returns kFALSE in case of an error. Bool_t ParseVarExp(); Split variables and parse name and parameters in brackets. Bool_t ParseOption(); Check if options contain some data important for choosing the type of the; drawn object. Bool_t Parse(const char* varexp, const char* selection, Option_t* option); Parses parameters from TTree::Draw().; varexp - Variable expression; see TTree::Draw(); selection - selection expression; see TTree::Draw(); option - Drawnig option; see TTree::Draw. TString GetProofSelectorName() const; Returns apropr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeDrawArgsParser.html:7788,variab,variable,7788,root/html528/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html528/TTreeDrawArgsParser.html,6,['variab'],['variable']
Modifiability,"nal scheduler, setting a value for 'numthreads' might not have any effect.; NoteUse DisableImplicitMT() to disable multi-threading (some locks will remain in place as described in EnableThreadSafety()). EnableImplicitMT(1) creates a thread-pool of size 1. ; Definition at line 527 of file TROOT.cxx. ◆ EnableThreadSafety(). void ROOT::EnableThreadSafety ; (; ). Enables the global mutex to make ROOT thread safe/aware. ; The following becomes safe:; concurrent construction and destruction of TObjects, including the ones registered in ROOT's global lists (e.g. gROOT->GetListOfCleanups(), gROOT->GetListOfFiles()); concurrent usage of different ROOT objects from different threads, including ones with global state (e.g. TFile, TTree, TChain) with the exception of graphics classes (e.g. TCanvas); concurrent calls to ROOT's type system classes, e.g. TClass and TEnum; concurrent calls to the interpreter through gInterpreter; concurrent loading of ROOT plug-ins. In addition, gDirectory, gFile and gPad become a thread-local variable. In all threads, gDirectory defaults to gROOT, a singleton which supports thread-safe insertion and deletion of contents. gFile and gPad default to nullptr, as it is for single-thread programs.; The ROOT graphics subsystem is not made thread-safe by this method. In particular drawing or printing different canvases from different threads (and analogous operations such as invoking Draw on a TObject) is not thread-safe.; Note that there is no DisableThreadSafety(). ROOT's thread-safety features cannot be disabled once activated. ; Definition at line 493 of file TROOT.cxx. ◆ FindEndSymbol(). static std::string::size_type ROOT::FindEndSymbol ; (; std::string & ; command). static . Definition at line 62 of file RConversionRuleParser.cxx. ◆ FromHumanReadableSize() [1/2]. template<typename T > . EFromHumanReadableSize ROOT::FromHumanReadableSize ; (; ROOT::Internal::TStringView ; str, . T & ; value . ). Definition at line 158 of file StringConv.hxx. ◆ FromHu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v626/namespaceROOT.html:25064,variab,variable,25064,doc/v626/namespaceROOT.html,https://root.cern,https://root.cern/doc/v626/namespaceROOT.html,1,['variab'],['variable']
Modifiability,"nal transforms. Set the point #ipoint ;  ; void SetPoint (Int_t ipoint, Double_t re, Double_t im=0) override;  Set the point #ipoint ;  ; void SetPointComplex (Int_t ipoint, TComplex &c) override;  Sets the point #ipoint (only the real part of the argument is taken) ;  ; void SetPoints (const Double_t *data) override;  Set all input points. ;  ; void SetPointsComplex (const Double_t *re, const Double_t *im) override;  Set all points. Only the real array is used. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Transform () override;  Computes the transform, specified in Init() function. ;  ;  Public Member Functions inherited from TVirtualFFT;  TVirtualFFT ();  ; virtual ~TVirtualFFT ();  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTRealComplex.html:4907,inherit,inherited,4907,doc/master/classTFFTRealComplex.html,https://root.cern,https://root.cern/doc/master/classTFFTRealComplex.html,1,['inherit'],['inherited']
Modifiability,"nal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void LoadLib ();  Dummy static function, used to load plugin. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shado",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManagerEditor.html:27117,plugin,plugin,27117,doc/master/classTGeoManagerEditor.html,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html,1,['plugin'],['plugin']
Modifiability,"nal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:29751,inherit,inherited,29751,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['inherit'],['inherited']
Modifiability,"nal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGTableCell; static const TGFont * fgDefaultFont = 0;  Default font. ;  ; static const TGGC * fgDefaultGC = 0;  Default graphics context. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static Pixel_t fgDefaultFrameBackground = 0;  ; static Pixel_t fgDefaultSelectedBackground = 0;  ; static const TGGC * fgHilightGC = nullptr;  ; static Bool_t fgInit = kFALSE;  ; static UInt_t fgLastButton = 0;  ; static Time_t fgLastClick = 0;  ; static const TGGC * fgShadowGC = nullptr;  ; static UInt_t fgUserColor = 0;  ; static const TGGC * fgWhiteGC = nullptr;  ; static Pixel_t fgWhitePixel = 0;  ;  Static Protected Attributes inherited from TGWindow; static Int_t fgCounter = 0;  counter of created windows in SavePrimitive ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGTableHeader.h>. Inheritance diagram for TGTableHeader:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGTableHeader() [1/2]. TGTableHeader::TGTableHeader ; (; const TGWindow * ; p = nullptr, . TGTable * ; table = nullptr, . TGString * ; label = nullptr, . UInt_t ; position = 0, . EHeaderType ; type = kColumnHeader, . UInt_t ; width = 80, . UInt_t ; height = 25, . GContext_t ; norm = GetDefaultGC()(), . FontStruct_t ; f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableHeader.html:30977,inherit,inherited,30977,doc/master/classTGTableHeader.html,https://root.cern,https://root.cern/doc/master/classTGTableHeader.html,3,['inherit'],['inherited']
Modifiability,"nal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveRefCnt;  TEveRefCnt ();  ;  TEveRefCnt (const TEveRefCnt &);  ; virtual ~TEveRefCnt ();  ; void DecRefCount ();  ; void IncRefCount ();  ; TEveRefCnt & operator= (const TEveRefCnt &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bool_t AreAllSignalsBlocked ();  Returns true if all signals are blocked. ;  ; static Bool_t BlockAllSignals (Bool_t b);  Block or unblock all signals. Returns the previous block status. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRGBAPalette.html:14846,inherit,inherited,14846,doc/master/classTEveRGBAPalette.html,https://root.cern,https://root.cern/doc/master/classTEveRGBAPalette.html,1,['inherit'],['inherited']
Modifiability,"nal::RDF::RemoveFirstParameterIf_t = typedef typename RemoveFirstParameterIf<MustRemove, TypeList>::type. Definition at line 151 of file Utils.hxx. ◆ RemoveFirstTwoParametersIf_t. template<bool MustRemove, typename TypeList > . using ROOT::Internal::RDF::RemoveFirstTwoParametersIf_t = typedef typename RemoveFirstTwoParametersIf<MustRemove, TypeList>::type. Definition at line 165 of file Utils.hxx. ◆ SnapshotPtr_t. using ROOT::Internal::RDF::SnapshotPtr_t = typedef ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void> >. Definition at line 62 of file RResultPtr.hxx. Function Documentation. ◆ AddSizeBranches(). std::pair< std::vector< std::string >, std::vector< std::string > > ROOT::Internal::RDF::AddSizeBranches ; (; const std::vector< std::string > & ; branches, . TTree * ; tree, . std::vector< std::string > && ; colsWithoutAliases, . std::vector< std::string > && ; colsWithAliases . ). Return copies of colsWithoutAliases and colsWithAliases with size branches for variable-sized array branches added in the right positions (i.e. ; before the array branches that need them). ; Definition at line 1001 of file RDFInterfaceUtils.cxx. ◆ AssignResults() [1/2]. template<typename T > . void ROOT::Internal::RDF::AssignResults ; (; ROOT::RVec< T > & ; resStorage, . ROOT::RVec< T > && ; tmpResults . ). Assign into fLastResults[slot] without changing the addresses of its elements (we gave those addresses away in GetValuePtr) The callee is responsible of making sure that resStorage has the correct size. ; Definition at line 71 of file RVariation.hxx. ◆ AssignResults() [2/2]. template<typename T > . void ROOT::Internal::RDF::AssignResults ; (; std::vector< ROOT::RVec< T > > & ; resStorage, . ROOT::RVec< ROOT::RVec< T > > && ; tmpResults . ). Definition at line 112 of file RVariation.hxx. ◆ AtLeastOneEmptyString(). bool ROOT::Internal::RDF::AtLeastOneEmptyString ; (; const std::vector< std::string_view > ; strings). Definition at line 896 of file RDFInt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1RDF.html:19847,variab,variable-sized,19847,doc/master/namespaceROOT_1_1Internal_1_1RDF.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Internal_1_1RDF.html,1,['variab'],['variable-sized']
Modifiability,"nal;  Returns a reference to the collection of the dataset's column names. ;  ; std::vector< std::pair< ULong64_t, ULong64_t > > GetEntryRanges () final;  Return ranges of entries to distribute to tasks. ;  ; std::string GetLabel () final;  Return a string representation of the datasource type. ;  ; std::size_t GetNFiles () const final;  Returns the number of files from which the dataset is constructed. ;  ; std::string GetTypeName (std::string_view colName) const final;  Type of a column as a string, e.g. ;  ; bool HasColumn (std::string_view colName) const final;  Checks if the dataset has a certain column. ;  ; bool SetEntry (unsigned int slot, ULong64_t entry) final;  Advance the ""cursors"" returned by GetColumnReaders to the selected entry for a particular slot. ;  ; void SetNSlots (unsigned int nSlots) final;  Inform RDataSource of the number of processing slots (i.e. ;  ;  Public Member Functions inherited from ROOT::RDF::RDataSource; virtual ~RDataSource ()=default;  ; virtual void FinalizeSlot (unsigned int);  Convenience method called at the end of the data processing associated to a slot. ;  ; template<typename T > ; std::vector< T ** > GetColumnReaders (std::string_view columnName);  Called at most once per column by RDF. ;  ; virtual std::unique_ptr< ROOT::Detail::RDF::RColumnReaderBase > GetColumnReaders (unsigned int, std::string_view, const std::type_info &);  If the other GetColumnReaders overload returns an empty vector, this overload will be called instead. ;  ; virtual void Initialize ();  Convenience method called before starting an event-loop. ;  ; virtual void InitSlot (unsigned int, ULong64_t);  Convenience method called at the start of the data processing associated to a slot. ;  . Protected Member Functions; std::string AsString () final;  . Private Types; using ColType_t = char;  . Private Member Functions; void FillHeaders (const std::string &);  ; void FillRecord (const std::string &, Record_t &);  ; void FreeRecords ();  ; void GenerateH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCsvDS.html:4407,inherit,inherited,4407,doc/master/classROOT_1_1RDF_1_1RCsvDS.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCsvDS.html,1,['inherit'],['inherited']
Modifiability,"nalBranch () const override;  Return true if this leaf is does not have any sub-branch/leaf. ;  ; void PrintValue (Int_t i=0) const override;  ; bool ReadBasketFast (TBuffer &, Long64_t) override;  Deserialize N events from an input buffer. ;  ; void SetLeafCount (TLeaf *leaf) override;  Set the leaf count of this leaf. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual void Export (TClonesArray *, Int_t);  ; virtual void FillBasket (TBuffer &b);  Pack leaf elements in Basket output buffer. ;  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, Long64_t len);  If this branch is a branch count, return the set of collection size for the entry range requested start: first entry to read and return information about len: number of entries to read. ;  ; virtual Int_t GetLenStatic () const;  Return the fixed length of this leaf. ;  ; virtual Int_t GetLenType () const;  ; virtual Int_t GetMinimum () const;  ; virtual Int_t GetOffset () const;  ; template<typename T > ; T GetTypedValue (Int_t i=0) const;  ; virtual void Import (TClonesArray *, Int_t);  ; virtual bool IsRange () const;  ; virtual bool IsUnsigned () const;  ; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafElement.html:3019,variab,variable-sized,3019,doc/master/classTLeafElement.html,https://root.cern,https://root.cern/doc/master/classTLeafElement.html,2,['variab'],"['variable', 'variable-sized']"
Modifiability,"nalNode;  ! flag to set node as terminal (i.e., without deleting its descendants) ;  ; Int_t fNodeType;  Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal. ;  ; Float_t fPurity;  the node purity ;  ; Float_t fResponse;  response value in case of regression ;  ; Float_t fRMS;  response RMS of the regression node ;  ; Short_t fSelector;  index of variable used in node selection (decision tree) ;  ; DTNodeTrainingInfo * fTrainInfo;  ;  Protected Attributes inherited from TMVA::Node; UInt_t fDepth;  depth of the node within the tree (seen from root node) ;  ; Node * fLeft;  pointers to the two ""daughter"" nodes ;  ; Node * fParent;  the previous (parent) node ;  ; BinaryTree * fParentTree;  pointer to the parent tree to which the Node belongs ;  ; char fPos;  position, i.e. it is a left (l) or right (r) daughter ;  ; Node * fRight;  pointers to the two ""daughter"" nodes ;  . Static Protected Attributes; static bool fgIsTraining = false;  static variable to flag training phase in which we need fTrainInfo ;  ; static UInt_t fgTmva_Version_Code = 0;  set only when read from weightfile ;  . #include <TMVA/DecisionTreeNode.h>. Inheritance diagram for TMVA::DecisionTreeNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ DecisionTreeNode() [1/3]. TMVA::DecisionTreeNode::DecisionTreeNode ; (; ). constructor of an essentially ""empty"" node floating in space ; Definition at line 67 of file DecisionTreeNode.cxx. ◆ DecisionTreeNode() [2/3]. TMVA::DecisionTreeNode::DecisionTreeNode ; (; TMVA::Node * ; p, . char ; pos . ). constructor of a daughter node as a daughter of 'p' ; Definition at line 91 of file DecisionTreeNode.cxx. ◆ DecisionTreeNode() [3/3]. TMVA::DecisionTreeNode::DecisionTreeNode ; (; const DecisionTreeNode & ; n, . DecisionTreeNode * ; parent = nullptr . ). copy constructor of a node. ; It will result in an explicit copy of the node and recursively all it's daughters ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html:14126,variab,variable,14126,doc/master/classTMVA_1_1DecisionTreeNode.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html,1,['variab'],['variable']
Modifiability,"nalToExternal(double x) const; boolIsFixed() const; boolIsLimited() const; doubleLowerBound() const; ROOT::Math::MinimTransformVariableMinimTransformVariable(); ROOT::Math::MinimTransformVariableMinimTransformVariable(double value); ROOT::Math::MinimTransformVariableMinimTransformVariable(const ROOT::Math::MinimTransformVariable& rhs); ROOT::Math::MinimTransformVariableMinimTransformVariable(double lower, ROOT::Math::SqrtLowVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double upper, ROOT::Math::SqrtUpVariableTransformation* trafo); ROOT::Math::MinimTransformVariableMinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); ROOT::Math::MinimTransformVariable&operator=(const ROOT::Math::MinimTransformVariable& rhs); doubleUpperBound() const. Data Members; private:. boolfBoundshas double bound; boolfFixfix variable; boolfLowBoundhas lower bound; doublefLowerlower parameter limit; auto_ptr<ROOT::Math::MinimizerVariableTransformation>fTransformpointer to the minimizer transformation; boolfUpBoundhas uppper bound param; doublefUpperupper parameter limit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinimTransformVariable(). Default Constructor for an unlimited variable. {}. MinimTransformVariable(double value); constructor for fixed variable. {}. MinimTransformVariable(double lower, double upper, ROOT::Math::SinVariableTransformation* trafo); constructor for double bound variable. { }. MinimTransformVariable(double lower, SqrtLowVariableTransformation * trafo); constructor for lower bound variable. {}. MinimTransformVariable(double upper, SqrtUpVariableTransformation * trafo); constructor for upper bound variable. {}. MinimTransformVariable(const ROOT::Math::MinimTransformVariable& rhs); copy constructor. MinimTransformVariable & operator=(const ROOT::Math::MinimTransformVariable& rhs); assignment. bool IsFixed() const; { return fFix; }. bool IsLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__MinimTransformVariable.html:1461,variab,variable,1461,root/html602/ROOT__Math__MinimTransformVariable.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__MinimTransformVariable.html,4,['variab'],['variable']
Modifiability,"nalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooErrorVar.h>. Inheritance diagram for RooErrorVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooErrorVar() [1/3]. RooErrorVar::RooErrorVar ; (; ). inline . Default constructor. ; Definition at line 32 of file RooErrorVar.h. ◆ RooErrorVar() [2/3]. RooErrorVar::RooErrorVar ; (; const char * ; name, . const char * ; title, . const RooRealVar & ; input . ). Construct an lvalue variable representing the error of RooRealVar input. ; Definition at line 44 of file RooErrorVar.cxx. ◆ RooErrorVar() [3/3]. RooErrorVar::RooErrorVar ; (; const RooErrorVar & ; other, . const char * ; name = nullptr . ). Definition at line 55 of file RooErrorVar.cxx. ◆ ~RooErrorVar(). RooErrorVar::~RooErrorVar ; (; ). overridedefault . Member Function Documentation. ◆ Class(). static TClass * RooErrorVar::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooErrorVar::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooErrorVar::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 101 of file RooErrorVar.h. ◆ clone(). TObject * RooErrorVar::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 36 of file RooErrorVar.h. ◆ DeclFileName(). static const char * RooErrorVar::DeclFileName ; (; ). inlinestatic . Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:70021,variab,variable,70021,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['variab'],['variable']
Modifiability,nals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTextLBEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use for a text listbox entry. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use for a text listbox entry. ;  ;  Static Public Member Functions inherited from TGLBEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIconLBEntry.html:20547,inherit,inherited,20547,doc/master/classTGIconLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGIconLBEntry.html,4,['inherit'],['inherited']
Modifiability,"nals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTextLBEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use for a text listbox entry. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use for a text listbox entry. ;  ;  Static Public Member Functions inherited from TGLBEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIconLBEntry.html:20108,inherit,inherited,20108,doc/master/classTGIconLBEntry.html,https://root.cern,https://root.cern/doc/master/classTGIconLBEntry.html,2,['inherit'],['inherited']
Modifiability,"nals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; Cursor_t fCursor;  Current cursor. ;  ; Cursor_t fDefaultCursor;  Default cursor. ;  ; TList * fExpressionList;  List of user defined expression widgets. ;  ; TGListView * fListView;  Associated list view. ;  ; TTreeViewer * fViewer;  Pointer to tree viewer. ;  . Friends; class TGClient;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGLVContainer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGContainer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVContainer.html:29161,inherit,inherited,29161,doc/master/classTTVLVContainer.html,https://root.cern,https://root.cern/doc/master/classTTVLVContainer.html,1,['inherit'],['inherited']
Modifiability,"nals; TList*TProof::fSlaveslist of all slave servers as in config file; TList*TProof::fTerminatedSlaveInfoslist of unique infos of terminated slaves; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. private:. TStringfCacheDirDirectory containing cache of user files; TProofLockPath*fCacheLockCache dir locker; TStringfDataSetDirDirectory containing info about known data sets; TDataSetManager*fDataSetManagerDataset manager; TDataSetManagerFile*fDataSetStgRepoDataset manager for staging requests; Int_tfDynamicStartupNMaxDyn Startup simulation: max number of workers; Int_tfDynamicStartupStepDyn Startup simulation: increment at each call; Bool_tfForkStartupStartup N-1 workers forking the first worker; Int_tfNWorkersNumber of workers; TQueryResultManager*fQMgrQuery-result manager; TStringfQueryDirDirectory containing query results and status; TProofLockPath*fQueryLockQuery dir locker; TPMERegexp*fReInvalidRegular expression matching invalid dataset URIs; TStringfSandboxPROOF sandbox root dir; TStringfSelectionInternal variable to pass drawing options; TServerSocket*fServSockServer socket to accept call backs; TStringfSockPathUNIX socket path for communication with workers; TStringfVarExpInternal variable to pass drawing options; static Int_tfgWrksMaxMax number of workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofLite(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Create a PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofLite.html:27418,sandbox,sandbox,27418,root/html534/TProofLite.html,https://root.cern,https://root.cern/root/html534/TProofLite.html,6,"['sandbox', 'variab']","['sandbox', 'variable']"
Modifiability,"nals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveCompositeFrameInMainFrame (const TEveCompositeFrameInMainFrame &);  ; TEveCompositeFrameInMainFrame & operator= (const TEveCompositeFrameInMainFrame &);  . Additional Inherited Members;  Public Types inherited from TEveCompositeFrame; typedef TGFrame *(* IconBarCreator_foo) (TEveCompositeFrame *, TGCompositeFrame *, Int_t);  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html:29907,inherit,inherited,29907,doc/master/classTEveCompositeFrameInMainFrame.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html,1,['inherit'],['inherited']
Modifiability,"nalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGLVEntry*fEntryTmpused to transfer to feedback; TGLVContainer*fLVContaineroutput list view; TSessionViewer*fViewerpointer on the main viewer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSessionOutputFrame(TGWindow* parent, Int_t w, Int_t h); Constructor. ~TSessionOutputFrame(); Destructor. void Build(TSessionViewer* gui); Build query output information frame. void OnElementClicked(TGLVEntry* entry, Int_t btn, Int_t x, Int_t y); Handle mouse clicks on list view items. void OnElementDblClicked(TGLVEntry* entry, Int_t btn, Int_t x, Int_t y); Handle double-clicks on list view items. void AddObject(TObject* obj); Add object to output list view. TGLVContainer * GetLVContainer(); { return fLVContainer; }. void RemoveAll(); { fLVContainer->RemoveAll(); }. » Author: Marek Biskup, Jakub Madejczyk, Bertrand Bellenot 10/08/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TSessionViewer.h 40088 2011-06-30 15:10:06Z bellenot $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSessionOutputFrame.html:19001,Inherit,Inheritance,19001,root/html532/TSessionOutputFrame.html,https://root.cern,https://root.cern/root/html532/TSessionOutputFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nalsEmit signals on secondary-select.; TEveFrameBox*TEveDigitSet::fFramePointer to frame structure.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tTEveDigitSet::fHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*TEveDigitSet::fLastDigit! The last / current digit added to collection.; Int_tTEveDigitSet::fLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveDigitSet::fOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*TEveDigitSet::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerTEveDigitSet::fPlexContainer of digit data.; TEveDigitSet::ERenderMode_eTEveDigitSet::fRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelected indices.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveDigitSet::fSingleColorUse the same color for all digits.; TRefTEveElement::fSourceExternal object that is represent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBoxSet.html:26918,variab,variable,26918,root/html528/TEveBoxSet.html,https://root.cern,https://root.cern/root/html528/TEveBoxSet.html,2,['variab'],['variable']
Modifiability,"nalsEmit signals on secondary-select.; TEveFrameBox*TEveDigitSet::fFramePointer to frame structure.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tTEveDigitSet::fHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*TEveDigitSet::fLastDigit! The last / current digit added to collection.; Int_tTEveDigitSet::fLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveDigitSet::fOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*TEveDigitSet::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerTEveDigitSet::fPlexContainer of digit data.; TEveQuadSet::EQuadType_efQuadType; TEveDigitSet::ERenderMode_eTEveDigitSet::fRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; set<int>TEveSecondarySelectable::fSelectedSetSelected indices.; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveDigitSet::fSingleColorUse the same color for all digits.; TRefTEveElement::fSour",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveQuadSet.html:26684,variab,variable,26684,root/html528/TEveQuadSet.html,https://root.cern,https://root.cern/root/html528/TEveQuadSet.html,2,['variab'],['variable']
Modifiability,"nalysis on; ; , to get linear; indenpendent (among themselves, but not independent of; ; ) quantities . For each component ; make a mutlidimensional fit,; using ; as the variables, thus determing a set of; coefficents ; .; . To process data, using this parameterisation, do; ; Test wether the observation ; within the domain of; the parameterization, using the result from the Principal Component; Analysis.; ; Determine ; as before.; ; Detetmine ; as before.; ; Use the result of the fit to determind ; .; ; Transform back to ; from ; , using; the result from the Principal Component Analysis.; . Testing the parameterization; . The class also provides functionality for testing the, over the; training sample, found parameterization; (TMultiDimFit::Fit). This is done by passing; the class a test sample of tuples of the form ; , where ; are the independent; variables, the known, dependent quantity, and is; the square error in ; (TMultiDimFit::AddTestRow).; ; The parameterization is then evaluated at every ; in the; test sample, and; . is evaluated. The relative error over the test sample; . should not be to low or high compared to from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representive of; the problem. A large difference in the reduced over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced.; ; It's possible to use Minuit; [4] to further improve the fit, using the test sample.; . Christian Holm; November 2000, NBI; . Bibliography; 1. Philip R. Bevington and D. Keith Robinson.; Data Reduction and Error Analysis for the Physical Sciences.; McGraw-Hill, 2 edition, 1992.; 2. René Brun et al.; Mudifi.; Long writeup DD/75-23, CERN, 1980.; 3. Gene H. Golub and Charles F. van Loan.; Matrix Computations.; John Hopkins Univeristy Press, Baltimore, 3 edition, 1996.; 4. F. James.; Minuit.; Long writeup D506, CERN, 1998.; 5. H",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:12204,parameteriz,parameterization,12204,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,6,['parameteriz'],['parameterization']
Modifiability,"nalysis; phase, when one wants to histogram some attributes of an object (entry); without reading all the attributes. ==> TTree *tree = new TTree(name, title); Creates a Tree with name and title. Various kinds of branches can be added to a tree:; A - simple structures or list of variables. (may be for C or Fortran structures); B - any object (inheriting from TObject). (we expect this option be the most frequent); C - a ClonesArray. (a specialized object for collections of same class objects). ==> Case A. TBranch *branch = tree->Branch(branchname, address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a 16 bit signed integer (Short_t); - s : a 16 bit unsigned integer (UShort_t); - I : a 32 bit signed integer (Int_t); - i : a 32 bit unsigned integer (UInt_t); - F : a 32 bit floating point (Float_t); - D : a 64 bit floating point (Double_t); - L : a 64 bit signed integer (Long64_t); - l : a 64 bit unsigned integer (ULong64_t); - O : a boolean (Bool_t); * If the address points to a single numerical variable, the leaflist is optional:; int value;; tree->Branch(branchname, &value);; * If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable (even between CINT and compiled code on the platform); TTree (i.e. you will not be ab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:2234,variab,variable,2234,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,1,['variab'],['variable']
Modifiability,"nalysisTypekMaxAnalysisType; static TMVA::Types::EMVAkMaxMethod; static TMVA::Types::ESBTypekMaxSBType; static TMVA::Types::ETreeTypekMaxTreeType; static TMVA::Types::EVariableTransformkMaxVariableTransform; static TMVA::Types::EAnalysisTypekMulticlass; static TMVA::Types::EAnalysisTypekNoAnalysisType; static TMVA::Types::EVariableTransformkNormalized; static TMVA::Types::EVariableTransformkPCA; static TMVA::Types::EMVAkPDEFoam; static TMVA::Types::EMVAkPDERS; static TMVA::Types::EMVAkPlugins; static TMVA::Types::EVariableTransformkRearranged; static TMVA::Types::EAnalysisTypekRegression; static TMVA::Types::EMVAkRuleFit; static TMVA::Types::ESBTypekSBBoth; static TMVA::Types::EMVAkSVM; static TMVA::Types::ESBTypekSignal; static TMVA::Types::EMVAkTMlpANN; static TMVA::Types::ETreeTypekTesting; static TMVA::Types::ETreeTypekTraining; static TMVA::Types::ETreeTypekTrainingOriginal; static TMVA::Types::ESBTypekTrueType; static TMVA::Types::EVariableTransformkUniform; static TMVA::Types::ETreeTypekValidation; static TMVA::Types::EMVAkVariable. private:. TMVA::MsgLogger*fLoggermessage logger; map<TString,TMVA::Types::EMVA>fStr2typetypes-to-text map; static atomic<TMVA::Types*>fgTypesPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Types(); constructor. ~Types(); destructor. TMVA::Types& Instance(); the the single instance of ""Types"" if existin already, or create it (Signleton). void DestroyInstance(); ""destructor"" of the single instance. Bool_t AddTypeMapping(TMVA::Types::EMVA method, const TString& methodname). TString GetMethodName(TMVA::Types::EMVA method) const. Types::EMVA GetMethodType(const TString& method) const. Types(). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Types.html:2901,Inherit,Inheritance,2901,root/html602/TMVA__Types.html,https://root.cern,https://root.cern/root/html602/TMVA__Types.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nalysisTypekMaxAnalysisType; static TMVA::Types::EMVAkMaxMethod; static TMVA::Types::ESBTypekMaxSBType; static TMVA::Types::ETreeTypekMaxTreeType; static TMVA::Types::EVariableTransformkMaxVariableTransform; static TMVA::Types::EAnalysisTypekMulticlass; static TMVA::Types::EAnalysisTypekNoAnalysisType; static TMVA::Types::EVariableTransformkNormalized; static TMVA::Types::EVariableTransformkPCA; static TMVA::Types::EMVAkPDEFoam; static TMVA::Types::EMVAkPDERS; static TMVA::Types::EMVAkPlugins; static TMVA::Types::EVariableTransformkRearranged; static TMVA::Types::EAnalysisTypekRegression; static TMVA::Types::EMVAkRuleFit; static TMVA::Types::ESBTypekSBBoth; static TMVA::Types::EMVAkSVM; static TMVA::Types::ESBTypekSignal; static TMVA::Types::EMVAkTMlpANN; static TMVA::Types::ETreeTypekTesting; static TMVA::Types::ETreeTypekTraining; static TMVA::Types::ETreeTypekTrainingOriginal; static TMVA::Types::ESBTypekTrueType; static TMVA::Types::EVariableTransformkUniform; static TMVA::Types::ETreeTypekValidation; static TMVA::Types::EMVAkVariable. private:. TMVA::MsgLogger*fLoggermessage logger; map<TString,TMVA::Types::EMVA>fStr2typetypes-to-text map; static atomic<TMVA::Types*>fgTypesPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Types(); constructor. ~Types(); destructor. TMVA::Types& Instance(); the the single instance of ""Types"" if existin already, or create it (Signleton). void DestroyInstance(); ""destructor"" of the single instance. Bool_t AddTypeMapping(TMVA::Types::EMVA method, const TString& methodname). TString GetMethodName(TMVA::Types::EMVA method) const. Types::EMVA GetMethodType(const TString& method) const. Types(). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-09-08 17:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__Types.html:2909,Inherit,Inheritance,2909,root/html604/TMVA__Types.html,https://root.cern,https://root.cern/root/html604/TMVA__Types.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"name = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tselfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpolationOrder(Int_t order); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsCachedReal.html:23862,config,config,23862,root/html532/RooAbsCachedReal.html,https://root.cern,https://root.cern/root/html532/RooAbsCachedReal.html,1,['config'],['config']
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TStringfNameIdentfier for this object; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStatsFeedback(TProof* proof = 0); Constructor. ~TStatsFeedback(); Destructor. void Feedback(TList* objs); Display feedback. const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. » Author: G. Ganis May 2012 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-03-14 16:50; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStatsFeedback.html:8835,Inherit,Inheritance,8835,root/html534/TStatsFeedback.html,https://root.cern,https://root.cern/root/html534/TStatsFeedback.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStreamerInfoActions::TStreamerInfoAction_tfAction; TStreamerInfoActions::TConfiguration*fConfiguration; TStreamerInfoActions::TStreamerInfoLoopAction_tfLoopAction; TStreamerInfoActions::TStreamerInfoVecPtrLoopAction_tfVecPtrLoopAction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void PrintDebug(TBuffer& buffer, void* object) const. TConfiguredAction(); {}. TConfiguredAction(const TStreamerInfoActions::TConfiguredAction& rval); Technically this is a move constructor ... TConfiguredAction(TStreamerInfoActions::TStreamerInfoLoopAction_t action, TStreamerInfoActions::TConfiguration* conf); Usual constructor. ~TConfiguredAction(); Usual destructor.; Idea: the configuration ownership might be moved to a single list so that; we can shared them between the optimized and non-optimized list of actions. Int_t operator()(TBuffer& buffer, void* object) const. Int_t operator()(TBuffer& buffer, void* start_collection, const void* end_collection) const. Int_t operator()(TBuffer& buffer, void* start_collection, const void* end_collection, const TStreamerInfoActions::TLoopConfiguration* loopconf) const. » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfoActions.h 36169 2010-10-07 16:06:18Z pcanal $ » Last generated: 2010-10-07 22:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerInfoActions__TConfiguredAction.html:6459,config,configuration,6459,root/html528/TStreamerInfoActions__TConfiguredAction.html,https://root.cern,https://root.cern/root/html528/TStreamerInfoActions__TConfiguredAction.html,1,['config'],['configuration']
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStreamerInfoActions::TStreamerInfoAction_tfAction; TStreamerInfoActions::TConfiguration*fConfiguration; TStreamerInfoActions::TStreamerInfoLoopAction_tfLoopAction; TStreamerInfoActions::TStreamerInfoVecPtrLoopAction_tfVecPtrLoopAction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void PrintDebug(TBuffer& buffer, void* object) const. TConfiguredAction(); {}. TConfiguredAction(const TStreamerInfoActions::TConfiguredAction& rval); Technically this is a move constructor ... TConfiguredAction(TStreamerInfoActions::TStreamerInfoLoopAction_t action, TStreamerInfoActions::TConfiguration* conf); Usual constructor. ~TConfiguredAction(); Usual destructor.; Idea: the configuration ownership might be moved to a single list so that; we can shared them between the optimized and non-optimized list of actions. Int_t operator()(TBuffer& buffer, void* object) const. Int_t operator()(TBuffer& buffer, void* start_collection, const void* end_collection) const. Int_t operator()(TBuffer& buffer, void* start_collection, const void* end_collection, const TStreamerInfoActions::TLoopConfiguration* loopconf) const. » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfoActions.h 36169 2010-10-07 16:06:18Z pcanal $ » Last generated: 2011-07-04 15:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TStreamerInfoActions__TConfiguredAction.html:6530,config,configuration,6530,root/html530/TStreamerInfoActions__TConfiguredAction.html,https://root.cern,https://root.cern/root/html530/TStreamerInfoActions__TConfiguredAction.html,1,['config'],['configuration']
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TStreamerInfoActions::TStreamerInfoAction_tfAction; TStreamerInfoActions::TConfiguration*fConfiguration; TStreamerInfoActions::TStreamerInfoLoopAction_tfLoopAction; TStreamerInfoActions::TStreamerInfoVecPtrLoopAction_tfVecPtrLoopAction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void PrintDebug(TBuffer& buffer, void* object) const. TConfiguredAction(); {}. TConfiguredAction(const TStreamerInfoActions::TConfiguredAction& rval); Technically this is a move constructor ... TConfiguredAction(TStreamerInfoActions::TStreamerInfoLoopAction_t action, TStreamerInfoActions::TConfiguration* conf); Usual constructor. ~TConfiguredAction(); Usual destructor.; Idea: the configuration ownership might be moved to a single list so that; we can shared them between the optimized and non-optimized list of actions. Int_t operator()(TBuffer& buffer, void* object) const. Int_t operator()(TBuffer& buffer, void* start_collection, const void* end_collection) const. Int_t operator()(TBuffer& buffer, void* start_collection, const void* end_collection, const TStreamerInfoActions::TLoopConfiguration* loopconf) const. » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id: TStreamerInfoActions.h 40872 2011-09-13 21:33:33Z pcanal $ » Last generated: 2011-11-03 20:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerInfoActions__TConfiguredAction.html:6530,config,configuration,6530,root/html532/TStreamerInfoActions__TConfiguredAction.html,https://root.cern,https://root.cern/root/html532/TStreamerInfoActions__TConfiguredAction.html,2,['config'],['configuration']
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TMergerInfo(const TMergerInfo&); TMergerInfo&operator=(const TMergerInfo&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIsActiveMerger state; Int_tfMergedObjectsTotal number of objects it must accept from other workers; Int_tfMergedWorkersCurrent number of already merged workers; TSlave*fMergerSlave that acts as merger; Int_tfPortPort number, on which it accepts outputs from other workers; TList*fWorkersList of already assigned workers; Int_tfWorkersToMergeNumber of workers that are merged on this merger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofInterruptHandler& operator=(const TMergerInfo& ). TMergerInfo(const TMergerInfo& ). TMergerInfo(TSlave* t, Int_t port, Int_t forHowManyWorkers); { }. virtual ~TMergerInfo(). void AddWorker(TSlave* sl). TList * GetWorkers(); { return fWorkers; }. TSlave * GetMerger(); { return fMerger; }. Int_t GetPort(); { return fPort; }. Int_t GetWorkersToMerge(); { return fWorkersToMerge; }. Int_t GetMergedWorkers(); { return fMergedWorkers; }. Int_t GetMergedObjects(); { return fMergedObjects; }. void SetMergedWorker(). void AddMergedObjects(Int_t objects); { fMergedObjects += objects; }. Bool_t AreAllWorkersAssigned(). Bool_t AreAllWorkersMerged(). void Deactivate(); { fIsActive = kFALSE; }. Bool_t IsActive(); { return fIsActive; }. » Author: Fons Rademakers 13/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMergerInfo.html:6113,Inherit,Inheritance,6113,root/html534/TMergerInfo.html,https://root.cern,https://root.cern/root/html534/TMergerInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TMergerInfo(const TMergerInfo&); TMergerInfo&operator=(const TMergerInfo&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfIsActiveMerger state; Int_tfMergedObjectsTotal number of objects it must accept from other workers; Int_tfMergedWorkersCurrent number of already merged workers; TSlave*fMergerSlave that acts as merger; Int_tfPortPort number, on which it accepts outputs from other workers; TList*fWorkersList of already assigned workers; Int_tfWorkersToMergeNumber of workers that are merged on this merger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofInterruptHandler& operator=(const TMergerInfo& ). TMergerInfo(const TMergerInfo& ). TMergerInfo(TSlave* t, Int_t port, Int_t forHowManyWorkers); { }. virtual ~TMergerInfo(). void AddWorker(TSlave* sl). TList * GetWorkers(); { return fWorkers; }. TSlave * GetMerger(); { return fMerger; }. Int_t GetPort(); { return fPort; }. Int_t GetWorkersToMerge(); { return fWorkersToMerge; }. Int_t GetMergedWorkers(); { return fMergedWorkers; }. Int_t GetMergedObjects(); { return fMergedObjects; }. void SetMergedWorker(). void AddMergedObjects(Int_t objects); { fMergedObjects += objects; }. Bool_t AreAllWorkersAssigned(). Bool_t AreAllWorkersMerged(). void Deactivate(); { fIsActive = kFALSE; }. Bool_t IsActive(); { return fIsActive; }. » Author: Fons Rademakers 13/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id: TProof.h 39178 2011-05-13 10:30:30Z ganis $ » Last generated: 2011-11-03 20:20; This",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMergerInfo.html:6094,Inherit,Inheritance,6094,root/html532/TMergerInfo.html,https://root.cern,https://root.cern/root/html532/TMergerInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGNumberEntryLayout&operator=(const TGNumberEntryLayout&); TGNumberEntryLayout(const TGNumberEntryLayout&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGNumberEntry*fBoxpointer to numeric control box; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Layout(); Layout the internal GUI elements in use. TGDimension GetDefaultSize() const; Return the default size of the numeric control box. TGNumberEntry& operator=(const TGNumberEntryLayout& ). TGNumberEntryLayout(const TGNumberEntryLayout& ). TGNumberEntryLayout(TGNumberEntry* box); { }. » Author: Daniel Sigg 03/09/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:55; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGNumberEntryLayout.html:8600,Inherit,Inheritance,8600,root/html604/TGNumberEntryLayout.html,https://root.cern,https://root.cern/root/html604/TGNumberEntryLayout.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGNumberEntryLayout&operator=(const TGNumberEntryLayout&); TGNumberEntryLayout(const TGNumberEntryLayout&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TGNumberEntry*fBoxpointer to numeric control box; Bool_tTGLayoutManager::fModifiedkTRUE if positions of subframes changed after layout. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Layout(); Layout the internal GUI elements in use. TGDimension GetDefaultSize() const; Return the default size of the numeric control box. TGNumberEntry& operator=(const TGNumberEntryLayout& ). TGNumberEntryLayout(const TGNumberEntryLayout& ). TGNumberEntryLayout(TGNumberEntry* box); { }. » Author: Daniel Sigg 03/09/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:56; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGNumberEntryLayout.html:8600,Inherit,Inheritance,8600,root/html602/TGNumberEntryLayout.html,https://root.cern,https://root.cern/root/html602/TGNumberEntryLayout.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"name TTraits::CallableTraits<AccFun>::ret_type, typename ArgTypes = typename TTraits::CallableTraits<AccFun>::arg_types, typename U = TTraits::TakeFirstParameter_t<ArgTypes>, typename T = TTraits::TakeFirstParameter_t<TTraits::RemoveFirstParameter_t<ArgTypes>>> . RResultPtr< U > ROOT::RDF::RInterface< Proxied, DataSource >::Aggregate ; (; AccFun ; aggregator, . MergeFun ; merger, . std::string_view ; columnName = """" . ). inline . Execute a user-defined accumulation operation on the processed column values in each processing slot. ; Template Parameters. FThe type of the aggregator callable. Automatically deduced. ; UThe type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced. ; TThe type of the column to apply the reduction to. Automatically deduced. . Parameters. [in]aggregatorA callable with signature U(U,T) or void(U,T), where T is the type of the column, U is the type of the aggregator variable ; [in]mergerA callable with signature U(U,U) or void(std::vector<U>&) used to merge the results of the accumulations of each thread ; [in]columnNameThe column to be aggregated. If omitted, the first default column is used instead. . Returnsthe result of the aggregation wrapped in a RResultPtr.; See previous Aggregate overload for more information. ; Definition at line 2913 of file RInterface.hxx. ◆ Alias(). template<typename Proxied , typename DataSource = void> . RInterface< Proxied, DS_t > ROOT::RDF::RInterface< Proxied, DataSource >::Alias ; (; std::string_view ; alias, . std::string_view ; columnName . ). inline . Allow to refer to a column with a different name. ; Parameters. [in]aliasname of the column alias ; [in]columnNameof the column to be aliased . Returnsthe first node of the computation graph for which the alias is available.; Aliasing an alias is supported. Example usage:; auto df_with_alias = df.Alias(""simple_name"", ""very_long&complex_name!!!"");. Definition at line 1214 of file RInterface.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:35840,variab,variable,35840,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['variab'],['variable']
Modifiability,"name and title of this Node. ;  ; virtual void SetParent (TNode *parent);  Set the pointer to the parent, keep parents informed about who they have. ;  ; virtual void SetPosition (Double_t x=0, Double_t y=0, Double_t z=0);  ; virtual void SetVisibility (Int_t vis=1);  Set visibility for this node and its sons. ;  ; void Sizeof3D () const override;  Return total size of this 3-D Node with its attributes. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void UpdateMatrix ();  Update global rotation matrix/translation vector for this node this function must be called before invoking Local2Master. ;  ; virtual void UpdateTempMatrix (const Double_t *dx1, const Double_t *rmat1, Double_t x, Double_t y, Double_t z, Double_t *matrix, Double_t *dxnew, Double_t *rmatnew);  Compute new translation vector and global matrix. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNode.html:4613,inherit,inherited,4613,doc/master/classTNode.html,https://root.cern,https://root.cern/doc/master/classTNode.html,1,['inherit'],['inherited']
Modifiability,"name is determined via. TClass::GetDeclFileName();; leading parts are removed if they match any of the ':' separated entries in; THtml::GetIncludePath().; II.5 Author, copyright, etc.; During the conversion,; THtml will look for; some strings (""tags"") in the source file, which have to appear right in; front of e.g. the author's name, copyright notice, etc. These tags can be; defined with the following environment variables: Root.Html.Author,; Root.Html.LastUpdate and Root.Html.Copyright, or with; SetAuthorTag(), SetLastUpdateTag(), SetCopyrightTag().; If the LastUpdate tag is not found, the current date and time are used.; This is useful when using; THtml::MakeAll()'s; default option force=kFALSE, in which case; THtml generates; documentation only for changed classes.; Authors can be a comma separated list of author entries. Each entry has; one of the following two formats; Name (non-alpha).; THtml will generate an; HTML link for Name, taking the Root.Html.XWho configuration; variable (defaults to ""http://consult.cern.ch/xwho/people?"") and adding; all parts of the name with spaces replaces by '+'. Non-alphanumerical; characters are printed out behind Name.; Example:; // Author: Enrico Fermi appears in the source file.; THtml will generate the link; http://consult.cern.ch/xwho/people?Enrico+Fermi. This works well for; people at CERN.; Name <link> Info.; THtml will generate; an HTML link for Name as specified by link and print; Info behind Name.; Example:; // Author: Enrico Fermi <http://www.enricos-home.it> or; // Author: Enrico Fermi <mailto:enrico@fnal.gov> in the; source file. That's world compatible. Example (with defaults given):; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?; II.6 Header and footer; THtml generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Foote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml.html:5344,config,configuration,5344,root/html528/THtml.html,https://root.cern,https://root.cern/root/html528/THtml.html,36,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"name is modified. ;  ; virtual Bool_t IsTransient () const;  Return kTRUE if the element represent an entity that is not written to the disk (transient members, cache allocator/deallocator, etc.) ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; virtual void SetMaxIndex (Int_t dim, Int_t max);  set maximum index for array with dimension dim ;  ; virtual void SetNewClass (TClass *cl);  ; virtual void SetNewType (Int_t dtype);  ; virtual void SetOffset (Int_t offset);  ; virtual void SetSize (Int_t dsize);  ; virtual void SetStreamer (TMemberStreamer *streamer);  set pointer to Streamer function for this element ;  ; virtual void SetTObjectOffset (Int_t tobjoffset);  ; virtual void SetType (Int_t dtype);  ; virtual void SetTypeName (const char *name);  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerElement. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerBasicPointer.html:4702,inherit,inherited,4702,doc/master/classTStreamerBasicPointer.html,https://root.cern,https://root.cern/doc/master/classTStreamerBasicPointer.html,1,['inherit'],['inherited']
Modifiability,"name of the model; Double_tRooStats::ToyMCSampler::fSize; vector<TestStatistic*>RooStats::ToyMCSampler::fTestStatistics; Double_tRooStats::ToyMCSampler::fToysInTails; RooStats::toysStrategiesfToysStrategy; Bool_tRooStats::ToyMCSampler::fUseMultiGenUse PrepareMultiGen?; static Bool_tRooStats::ToyMCSampler::fgAlwaysUseMultiGenUse PrepareMultiGen always. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~ToyMCImportanceSampler(). void ClearCache(void). RooDataSet* GetSamplingDistributionsSingleWorker(RooArgSet& paramPoint). RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight) const. RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight, vector<double>& impNLLs, double& nullNLL) const. RooAbsData* GenerateToyData(vector<double>& weights) const. RooAbsData* GenerateToyData(vector<double>& weights, vector<double>& nullNLLs, vector<double>& impNLLs) const; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. int CreateImpDensitiesForOnePOIAdaptively(RooAbsPdf& pdf, const RooArgSet& allPOI, RooRealVar& poi, double nStdDevOverlap = 0.5, double poiValueForBackground = 0.0); these might not necessarily be the same thing. int CreateNImpDensitiesForOnePOI(RooAbsPdf& pdf, const RooArgSet& allPOI, RooRealVar& poi, int n, double poiValueForBackground = 0.0); n is the number of importance densities. ToyMCImportanceSampler(); Proof constructor. Do not use. ToyMCImportanceSampler(RooStats::TestStatistic& ts, Int_t ntoys). void SetDensityToGenerateFromByIndex(unsigned int i, bool fromNull = false); specifies the pdf to sample from. void AddImportanceDensity(RooAbsPdf* p, const RooArgSet* s); For importance sampling with multiple desnities/snapshots:; This is used to check the current Likelihood against Likelihoods from; other importance densities apart from the one given as imp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html:9097,variab,variables,9097,root/html534/RooStats__ToyMCImportanceSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html,2,['variab'],['variables']
Modifiability,"name of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTriangleSetEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. TEveTriangleSetEditor(const TEveTriangleSetEditor& ). TEveTriangleSetEditor& operator=(const TEveTriangleSetEditor& ). virtual ~TEveTriangleSetEditor(); {}. » Last changed: root/eve:$Id: TEveTriangleSetEditor.h 26034 2008-10-31 14:01:05Z matevz $ » Last generated: 2011-11-03 20:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveTriangleSetEditor.html:19784,Inherit,Inheritance,19784,root/html532/TEveTriangleSetEditor.html,https://root.cern,https://root.cern/root/html532/TEveTriangleSetEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"name"". ;  ; static TDictionary * GetDictionary (const std::type_info &typeinfo);  ; static bool WantsRegularMembers (EMemberSelection sel);  ; static bool WantsUsingDecls (EMemberSelection sel);  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClass * fClass;  ; FuncTempInfo_t * fInfo;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFunctionTemplate.html:12138,inherit,inherited,12138,doc/master/classTFunctionTemplate.html,https://root.cern,https://root.cern/doc/master/classTFunctionTemplate.html,1,['inherit'],['inherited']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TH2D*GetAdetCovMatrix(Int_t ntoys, Int_t seed = 1); TH2D*GetBCov() const; TH1D*GetD() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetKReg() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1D*GetSV() const; virtual const char*TObject::GetTitle() const; TH2D*GetUnfoldCovMatrix(const TH2D* cov, Int_t ntoys, Int_t seed = 1); virtual UInt_tTObject::GetUniqueID() const; TH2D*GetXinv() const; TH2D*GetXtau() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSVDUnfold.html:5568,Inherit,InheritsFrom,5568,root/html534/TSVDUnfold.html,https://root.cern,https://root.cern/root/html534/TSVDUnfold.html,1,['Inherit'],['InheritsFrom']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TH2D*GetAdetCovMatrix(Int_t ntoys, Int_t seed = 1); TH2D*GetBCov() const; TH1D*GetD() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetKReg() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1D*GetSV() const; virtual const char*TObject::GetTitle() const; TH2D*GetUnfoldCovMatrix(const TH2D* cov, Int_t ntoys, Int_t seed = 1); virtual UInt_tTObject::GetUniqueID() const; TH2D*GetXinv() const; TH2D*GetXtau() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSVDUnfold&operator=(const TSVDUnfold&); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSVDUnfold.html:5375,Inherit,InheritsFrom,5375,root/html602/TSVDUnfold.html,https://root.cern,https://root.cern/root/html602/TSVDUnfold.html,2,['Inherit'],['InheritsFrom']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTGeoMatrix::GetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMatrix::GetPointerName() const; TGeoRotation*GetRotation() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; Bool_tTGeoMatrix::IsShared() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidTGeoMatrix::LocalToMaster(const Double_t* local, Double_t* master) const; virtual voidTGeoMatrix::LocalToMasterBomb(const Double_t* local, Double_t* master) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoCombiTrans.html:9676,Inherit,InheritsFrom,9676,root/html534/TGeoCombiTrans.html,https://root.cern,https://root.cern/root/html534/TGeoCombiTrans.html,3,['Inherit'],['InheritsFrom']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTGeoMatrix::GetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); voidTGeoMatrix::GetHomogenousMatrix(Double_t* hmat) const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*TGeoMatrix::GetPointerName() const; TGeoRotation*GetRotation() const; virtual const Double_t*GetRotationMatrix() const; virtual const Double_t*GetScale() const; virtual const char*TNamed::GetTitle() const; virtual const Double_t*GetTranslation() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TGeoMatrix&Inverse() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTGeoMatrix::IsCombi() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGeoMatrix::IsGeneral() const; Bool_tTGeoMatrix::IsIdentity() const; Bool_tTObject::IsOnHeap() const; Bool_tTGeoMatrix::IsReflection() const; Bool_tTGeoMatrix::IsRegistered() const; Bool_tTGeoMatrix::IsRotAboutZ() const; Bool_tTGeoMatrix::IsRotation() const; Bool_tTGeoMatrix::IsScale() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTGeoMatrix::IsTranslation() const; Bool_tTObject::IsZombie() const; virtual voidTGeoMatrix::LocalToMaster(const Double_t* local, Double_t* master) const; virtual voidTGeoMatrix::LocalToMasterBomb(const Double_t* local, Double_t* master) const; virtual voidTGeoMatrix::LocalToMaste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCombiTrans.html:9676,Inherit,InheritsFrom,9676,root/html532/TGeoCombiTrans.html,https://root.cern,https://root.cern/root/html532/TGeoCombiTrans.html,1,['Inherit'],['InheritsFrom']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPoint() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX() const; Double_t*GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual voidTAttMarker::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPolyMarker.html:3070,Inherit,InheritsFrom,3070,root/html532/TPolyMarker.html,https://root.cern,https://root.cern/root/html532/TPolyMarker.html,2,['Inherit'],['InheritsFrom']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPoint() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual Int_tGetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*GetX() const; Double_t*GetY() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* list); virtual voidTAttMarker::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPolyMarker.html:2826,Inherit,InheritsFrom,2826,root/html602/TPolyMarker.html,https://root.cern,https://root.cern/root/html602/TPolyMarker.html,2,['Inherit'],['InheritsFrom']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGL5DPainter*GetRealPainter() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const Rgl::Range_t&GetV4Range() const; TAxis*GetXAxis() const; const Rgl::Range_t&GetXRange() const; TAxis*GetYAxis() const; const Rgl::Range_t&GetYRange() const; TAxis*GetZAxis() const; const Rgl::Range_t&GetZRange() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidPaint(Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGL5DDataSet.html:2605,Inherit,InheritsFrom,2605,root/html532/TGL5DDataSet.html,https://root.cern,https://root.cern/root/html532/TGL5DDataSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TGL5DPainter*GetRealPainter() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const Rgl::Range_t&GetV4Range() const; TAxis*GetXAxis() const; const Rgl::Range_t&GetXRange() const; TAxis*GetYAxis() const; const Rgl::Range_t&GetYRange() const; TAxis*GetZAxis() const; const Rgl::Range_t&GetZRange() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidPaint(Option_t* option); virtual voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGL5DDataSet.html:2580,Inherit,InheritsFrom,2580,root/html602/TGL5DDataSet.html,https://root.cern,https://root.cern/root/html602/TGL5DDataSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"name) const;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooArgSet &nset=RooArgSet());  Create a cumulative distribution function of this p.d.f in terms of the observables listed in iset. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; virtual std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:3334,extend,extended,3334,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,1,['extend'],['extended']
Modifiability,"name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGVerticalFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLClipSetSubEditor.html:21659,inherit,inherited,21659,doc/master/classTGLClipSetSubEditor.html,https://root.cern,https://root.cern/doc/master/classTGLClipSetSubEditor.html,3,['inherit'],['inherited']
Modifiability,"name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tRun(vector<Double_t>& pars); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetParameters(Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); TMVA::SimulatedAnnealingFitterSimulatedAnnealingFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html:6195,Config,Configurable,6195,root/html532/TMVA__SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__SimulatedAnnealingFitter.html,1,['Config'],['Configurable']
Modifiability,"name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TMVA::ReaderThe Reader class serves to use the MVAs in a specific analysis context.Definition Reader.h:64; TMVA::Reader::EvaluateMVADouble_t EvaluateMVA(const std::vector< Float_t > &, const TString &methodTag, Double_t aux=0)Evaluate a std::vector<float> of input data for a given method The parameter aux is obligatory for th...Definition Reader.cxx:468; TMVA::Reader::BookMVAIMethod * BookMVA(const TString &methodTag, const TString &weightfile)read method name from weight fileDefinition Reader.cxx:368; TMVA::Reader::AddSpectatorvoid AddSpectator(const TString &expression, Float_t *)Add a float spectator or expression to the reader.Definition Reader.cxx:321; TMVA::Reader::AddVariablevoid AddVariable(const TString &expression, Float_t *)Add a float variable or expression to the reader.Definition Reader.cxx:303; TStopwatchStopwatch class.Definition TStopwatch.h:28; TStopwatch::Startvoid Start(Bool_t reset=kTRUE)Start the stopwatch.Definition TStopwatch.cxx:58; TStopwatch::Stopvoid Stop()Stop the stopwatch.Definition TStopwatch.cxx:77; TStopwatch::Printvoid Print(Option_t *option="""") const overridePrint the real and cpu time passed between the start and stop events.Definition TStopwatch.cxx:219; TStringBasic string class.Definition TString.h:139; TSystem::AccessPathNamevirtual Bool_t AccessPathName(const char *path, EAccessMode mode=kFileExists)Returns FALSE if one can access a file using the specified access mode.Definition TSystem.cxx:1296; TSystem::GetDirNamevirtual TString GetDirName(const char *pathname)Return the directory name in pathname.Definition TSystem.cxx:1032; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::GetEntryvirtual Int_t GetEntry(Long64_t entry, Int_t get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategoryApplication_8C.html:9613,variab,variable,9613,doc/master/TMVAClassificationCategoryApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategoryApplication_8C.html,1,['variab'],['variable']
Modifiability,"name, TString methodtitle);  Allow to get result for an specific ml method. ;  ; TMVA::ROCCurve * GetROC (TMVA::MethodBase *method, UInt_t iClass=0, TMVA::Types::ETreeType type=TMVA::Types::kTesting);  Method to get TMVA::ROCCurve Object. ;  ; TMVA::ROCCurve * GetROC (TString methodname, TString methodtitle, UInt_t iClass=0, TMVA::Types::ETreeType type=TMVA::Types::kTesting);  Method to get TMVA::ROCCurve Object. ;  ; Double_t GetROCIntegral (TString methodname, TString methodtitle, UInt_t iClass=0);  Method to get ROC-Integral value from mvas. ;  ; Bool_t HasMethodObject (TString methodname, TString methodtitle, Int_t &index);  Allows to check if the TMVA::MethodBase was created and return the index in the vector. ;  ; Bool_t IsCutsMethod (TMVA::MethodBase *method);  Allows to check if the ml method is a Cuts method. ;  ; void MergeFiles ();  ;  Protected Member Functions inherited from TMVA::Envelope;  Envelope (const TString &name, DataLoader *dataloader=nullptr, TFile *file=nullptr, const TString options="""");  Constructor for the initialization of Envelopes, differents Envelopes may needs differents constructors then this is a generic one protected. ;  ; DataInputHandler & GetDataLoaderDataInput ();  Utility method to get TMVA::DataInputHandler reference from the DataLoader. ;  ; DataSetInfo & GetDataLoaderDataSetInfo ();  Utility method to get TMVA::DataSetInfo reference from the DataLoader. ;  ; DataSetManager * GetDataLoaderDataSetManager ();  Utility method to get TMVA::DataSetManager pointer from the DataLoader. ;  ; TDirectory * RootBaseDir ();  Utility method to get base dir directory from current file. ;  ; void WriteDataInformation (TMVA::DataSetInfo &fDataSetInfo, TMVA::Types::EAnalysisType fAnalysisType);  method to save Train/Test information into the output file. ;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html:16224,inherit,inherited,16224,doc/master/classTMVA_1_1Experimental_1_1Classification.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html,1,['inherit'],['inherited']
Modifiability,"name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the TGTableCell. ;  ; void DrawBorder () override;  Draw the cell border. ;  ; virtual void DrawBorder (Handle_t id, Int_t x, Int_t y);  DrawBorder called from DrawCopy. ;  ; virtual void Highlight ();  Highlight the this TGTableCell. ;  ; void Init (Bool_t resize);  Initialise the TGTableCell. ;  ; virtual void MoveDraw (Int_t x, Int_t y);  Move the TGTableCell and redraw it. ;  ; void Resize (TGDimension newsize) override;  Resize the TGTableCell. ;  ; void Resize (UInt_t width, UInt_t height) override;  Resize the TGTableCell. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; UInt_t fColumn;  Column this cell belo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableCell.html:23488,inherit,inherited,23488,doc/master/classTGTableCell.html,https://root.cern,https://root.cern/doc/master/classTGTableCell.html,1,['inherit'],['inherited']
Modifiability,"name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color gr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockButton.html:20533,inherit,inherited,20533,doc/master/classTGDockButton.html,https://root.cern,https://root.cern/doc/master/classTGDockButton.html,2,['inherit'],['inherited']
Modifiability,"name, const char* title, map<string,RooAbsPdf*> pdfMap, RooAbsCategoryLValue& inIndexCat). void initialize(RooAbsCategoryLValue& inIndexCat, map<string,RooAbsPdf*> pdfMap); First see if there are any RooSimultaneous input components. RooSimultaneous(const RooSimultaneous& other, const char* name = 0); Copy constructor. ~RooSimultaneous(); Destructor. RooAbsPdf* getPdf(const char* catName) const; Return the p.d.f associated with the given index category name. Bool_t addPdf(const RooAbsPdf& pdf, const char* catLabel); Associate given PDF with index category state label 'catLabel'.; The names state must be already defined in the index category. RooSimultaneous can function without having a PDF associated; with every single state. The normalization in such cases is taken; from the number of registered PDFs, but getVal() will assert if; when called for an unregistered index state. PDFs may not overlap (i.e. share any variables) with the index category (function). RooAbsPdf::ExtendMode extendMode() const; WVE NEEDS FIX. Double_t evaluate() const; Return the current value:; the value of the PDF associated with the current index category state. Double_t expectedEvents(const RooArgSet* nset) const; Return the number of expected events: If the index is in nset,; then return the sum of the expected events of all components,; otherwise return the number of expected events of the PDF; associated with the current index category state. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Forward determination of analytical integration capabilities to component p.d.f.s; A unique code is assigned to the combined integration capabilities of all associated; p.d.f.s. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integration defined by given code. RooPlot* plotOn(RooPlot* frame, RooLinkedList& cmdList) const; Back-end for plotOn() implemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimultaneous.html:48035,extend,extendMode,48035,root/html602/RooSimultaneous.html,https://root.cern,https://root.cern/root/html602/RooSimultaneous.html,6,"['Extend', 'extend']","['ExtendMode', 'extendMode']"
Modifiability,"name; TObjArray*fMembersMembers in this archive. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TArchiveFile(const char* archive, const char* member, TFile* file); Specify the archive name and member name. The member can be a decimal; number which allows to access the n-th sub-file. This method is; normally only called via TFile. ~TArchiveFile(); Dtor. Long64_t GetMemberFilePosition() const; Return position in archive of current member. Int_t GetNumberOfMembers() const; Returns number of members in archive. Int_t SetMember(const char* member); Explicitely make the specified member the current member.; Returns -1 in case of error, 0 otherwise. Int_t SetMember(Int_t idx); Explicitely make the member with the specified index the current member.; Returns -1 in case of error, 0 otherwise. TArchiveFile * Open(const char* url, TFile* file); Return proper archive file handler depending on passed url.; The handler is loaded via the plugin manager and is triggered by; the extension of the archive file. In case no handler is found 0; is returned. The file argument is used to access the archive.; The archive should be specified as url with the member name as the; anchor, e.g. ""root://pcsalo.cern.ch/alice/event_1.zip#tpc.root"",; where tpc.root is the file in the archive to be opened.; Alternatively the sub-file can be specified via its index number,; e.g. ""root://pcsalo.cern.ch/alice/event_1.zip#3"".; This function is normally only called via TFile::Open(). Bool_t ParseUrl(const char* url, TString& archive, TString& member, TString& type); Try to determine if url contains an anchor specifying an archive member.; Returns kFALSE in case of an error. TArchiveFile(const TArchiveFile& ). TArchiveFile& operator=(const TArchiveFile& ). TArchiveFile(); { }. Int_t OpenArchive(). Int_t SetCurrentMember(). TArchiveMember * GetMember() const; { return fCurMember; }. TObjArray * GetMembers() const; { return fMembers; }. const char * GetArchiveName()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TArchiveFile.html:7611,plugin,plugin,7611,root/html602/TArchiveFile.html,https://root.cern,https://root.cern/root/html602/TArchiveFile.html,4,['plugin'],['plugin']
Modifiability,"name="""",; Option_t *opt=""""); Example:; // Writing to a file geometry definition ending with:; root[] gGeoManager->CloseGeometry();; // geometry is ready; root[] gGeoManager->Export(""MyGeom.root"");; // file MyGeom.root produced; root[] gGeoManager->Export(""MyGeom.C"");; // C++ macro MyGeom.C produced; root[] gGeoManager->Export(""MyGeom.gdml"");; // GDML file MyGeom.gdml produced; root[] myVolume->SaveAs(""MyVolume.C"");; // C++ macro for the branch starting; // with MyVolume; // Reading from a file; root[] gSystem->Load(""libGeom"");; root[] TGeoManager::Import(""MyGeom.root""); // geometry is ready; Note that not all-current information held by the modeller is written on the file. For instance, the painter and checker objects are not written, as well as the temporary current navigation properties: current node path, point or direction. On the other hand, all objects belonging to the geometrical hierarchy will always be written. The idea is to be able to retrieve the geometry in a ready state, ignoring what the state variables that can be always re-initialized. When the code is generated for a given TGeoVolume in the geometry, just the branch starting with that volume will be saved in the file. Executing the generated code will create a geometry that has MyVolume as top volume. In this case, only the materials/media/matrices used effectively in the MyVolume branch are exported to file.; Volumes can be made persistent in the same way the full geometry is. Exporting is straightforward (module1, 2 are pointers to TGeoVolume objects):; module1->Export(""file.root"");; // by default file is overwritten; module2->Export(""file.root"","""",""update"");; // to the same file; Importing will append the volume to the current TGeoManager or will create one:; TGeoManager *geom = new TGeoManager(""myGeom"", """");; TGeoVolume *top = geom->MakeBox(...);; geom->SetTopVolume(top);; //name of volume or key (depending on export usage); TGeoVolume *module1 = TGeoVolume::Import(""file.root"", ""MOD1"");; TGeoVol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1019982,variab,variables,1019982,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variables']
Modifiability,"name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; const TGPicture * fLarge;  ; TString fName;  ; const TGPicture * fSmall;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Inheritance diagram for TIconBoxThumb:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TIconBoxThumb(). TIconBoxThumb::TIconBoxThumb ; (; const char * ; name, . const TGPicture * ; spic, . const TGPicture * ; pic . ). inline ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIconBoxThumb.html:8866,inherit,inherited,8866,doc/master/classTIconBoxThumb.html,https://root.cern,https://root.cern/doc/master/classTIconBoxThumb.html,1,['inherit'],['inherited']
Modifiability,"name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGeoTessellated * ImportFromObjFormat (const char *objfile, bool check=false, bool verbose=false);  Reader from .obj format. ;  ;  Static Public Member Functions inherited from TGeoBBox; static Bool_t AreOverlapping (const TGeoBBox *box1, const TGeoMatrix *mat1, const TGeoBBox *box2, const TGeoMatrix *mat2) R__DEPRECATED(6;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Contains (const Double_t *point, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin);  ; static const char * DeclFileName ();  ; static Double_t DistFromInside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ; static Double_t DistFromOutside (const Double_t *point, const Double_t *dir, Double_t dx, Double_t dy, Double_t dz, const Double_t *origin, Double_t stepmax=TGeoShape::Big());  ;  Static Public Member Functions inherited from TGeoShape; static Double_t Big ();  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Double_t ComputeEpsMch ();  Compute machine round-off double precision error as the smallest number that if added to 1.0 is different than 1.0. ;  ; static const char * DeclFileName ();  ; static Double_t DistToPhiMin (const Double_t *point, const Double_t *dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in=kTRUE);  compute distance from point (inside phi) to both phi planes. Return minimum. ;  ; static Double_t EpsMch ();  static function returning the machine round-off error ;  ; static TGeoM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTessellated.html:18384,inherit,inherited,18384,doc/master/classTGeoTessellated.html,https://root.cern,https://root.cern/doc/master/classTGeoTessellated.html,2,['inherit'],['inherited']
Modifiability,"namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class RooHistConstraint;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParamHistFunc.html:57698,inherit,inherited,57698,doc/master/classRooParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooParamHistFunc.html,3,['inherit'],['inherited']
Modifiability,"nameVariable(const char* inputName, const char* outputName) -- Rename variable as specified upon import.; RecycleConflictNodes() -- If any of the function objects to be imported already exist in the name space, connect the; imported expression to the already existing nodes. WARNING: use with care! If function definitions; do not match, this alters the definition of your function upon import; Silence() -- Do not issue any info message. The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with; two comma separated lists. Bool_t import(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg()); Import a dataset (RooDataSet or RooDataHist) into the work space. The workspace will contain a copy of the data; The dataset and its variables can be renamed upon insertion with the options below. Accepted arguments. Rename(const char* suffix) -- Rename dataset upon insertion; RenameVariable(const char* inputName, const char* outputName) -- Change names of observables in dataset upon insertion. Bool_t defineSet(const char* name, const RooArgSet& aset, Bool_t importMissing = kFALSE); Define a named RooArgSet with given constituents. If importMissing is true, any constituents; of aset that are not in the workspace will be imported, otherwise an error is returned; for missing components. Bool_t defineSet(const char* name, const char* contentList); Define a named set in the work space through a comma separated list of; names of objects already in the workspace. Bool_t extendSet(const char* name, const char* newContents); Define a named set in the work space through a comma separated list of; names of objects already in the workspace. const RooArgSet* set(const char* name); Return pointer to previously defined named se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooWorkspace.html:14772,variab,variables,14772,root/html528/RooWorkspace.html,https://root.cern,https://root.cern/root/html528/RooWorkspace.html,4,['variab'],['variables']
Modifiability,"named] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. const RooArgList*fAllTestStatisticsDatafor the case of multiple test statistics, holds all the results; RooDataSet*fAltDetailedOutput; RooStats::SamplingDistribution*fAltDistr; Double_tfAlternatePValuep-value for the alternate hypothesis (small number means disfavored); Double_tfAlternatePValueErrorerror of p-value for the alternate hypothesis (small number means disfavored); Bool_tfBackgroundIsAlt; RooDataSet*fFitInfo; TStringTNamed::fNameobject identifier; RooDataSet*fNullDetailedOutput; RooStats::SamplingDistribution*fNullDistr; Double_tfNullPValuep-value for the null hypothesis (small number means disfavored); Double_tfNullPValueErrorerror of p-value for the null hypothesis (small number means disfavored); Bool_tfPValueIsRightTail; Double_tfTestStatisticDataresult of the test statistic evaluated on data; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestResult(const char* name = 0); Default constructor. HypoTestResult(const char* name, Double_t nullp, Double_t altp); Alternate constructor. HypoTestResult(const RooStats::HypoTestResult& other); copy constructor. ~HypoTestResult(); Destructor. HypoTestResult & operator=(const RooStats::HypoTestResult& other); assignment operator. void Append(const RooStats::HypoTestResult* other); Add additional toy-MC experiments to the current results.; Use the data test statistics of the added object if it is not already; set (otherwise, ignore the new one). void SetAltDistribution(RooStats::SamplingDistribution* alt). void SetNullDistribution(RooStats::SamplingDistribution* null). void SetTestStatisticData(const Double_t tsd). void SetAllTestStatisticsData(const RooArgList* tsd). void SetPValueIsRightTail(Bool_t pr). Bool_t HasTestStatisticData(void). Double_t NullPValueError() const; compute error on Null pvalue. Double_t CLbError() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HypoTestResult.html:8472,Inherit,Inheritance,8472,root/html534/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HypoTestResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"namely ""1111""; std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; In case of error returns the ""!"" string. TString UItoa(UInt_t value, Int_t base); Converts a UInt_t (twice the range of an Int_t) to a TString with respect; to the base specified (2-36). Thus it is an enhanced version of sprintf; (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString LLtoa(Long64_t value, Int_t base); Converts a Long64_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString ULLtoa(ULong64_t value, Int_t base); Converts a ULong64_t (twice the range of an Long64_t) to a TString with; respect to the base specified (2-36). Thus it is an enhanced version of; sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Converts string from base base_in to base base_out. Supported bases; are 2-36. At most 64 bit data can be converted. Bool_t EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Return true if string ends with the specified string. TObjArray * Tokenize(const TString& delim) const; This function is used to isolate sequential tokens in a TString.; These tokens are separated in the string by at least one of the; characters in delim. The returned array contains the tokens; as TObjString's. The returned array is the owner of the objects,; and must be deleted by the user. void FormImp(const char* fmt, va_list ap); Formats a string using a printf style format descriptor.; Existing string contents will be overwritten. void Form(const char *va_(fmt), ...); Formats a string using a p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TString.html:19464,enhance,enhanced,19464,root/html602/TString.html,https://root.cern,https://root.cern/root/html602/TString.html,8,"['adapt', 'enhance']","['adapted', 'enhanced']"
Modifiability,"namespace with the same name. RooWorkspace(const RooWorkspace& other); Workspace copy constructor. ~RooWorkspace(); Workspace destructor. Bool_t import(const char* fileSpec, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg()); Import a RooAbsArg or RooAbsData set from a workspace in a file. Filespec should be constructed as ""filename:wspacename:objectname""; The arguments will be passed on to the relevant RooAbsArg& or RooAbsData& import call. Bool_t import(const RooArgSet& args, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg()); Import multiple RooAbsArg objects into workspace. For details on arguments see documentation; of import() method for single RooAbsArg. Bool_t import(const RooAbsArg& arg, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg()); Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; Several optional arguments can be provided to modify the import procedure. Accepted arguments. RenameConflictNodes(const char* suffix) -- Add suffix to branch node name if name conflicts with existing node in workspace; RenameAllNodes(const char* suffix) -- Add suffix to all branch node names including top level node; RenameAllVariables(const char* suffix) -- Add suffix to all variables names; RenameAllVariablesExce",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooWorkspace.html:12647,variab,variable,12647,root/html528/RooWorkspace.html,https://root.cern,https://root.cern/root/html528/RooWorkspace.html,4,['variab'],['variable']
Modifiability,"napsesarray of pointers to synapses, no structural data; boolTMVA::MethodANNBase::fUseRegulatorzjh; TRandom3*TMVA::MethodANNBase::frgenrandom number generator for various uses. private:. TMVA::MethodMLP::EBPTrainingModefBPModebackprop learning mode (sequential or batch); Int_tfBatchSizebatch size, only matters if in batch learning mode; TStringfBpModeSbackprop learning mode option string (sequential or batch); boolfCalculateErrorscompute inverse hessian matrix at the end of the training; Double_tfDecayRatedecay rate for above learning rate; Bool_tfEpochMoncreate and fill epoch-wise monitoring histograms (makes outputfile big!); Double_tfGA_SC_factorGA settings: SC_factor; Int_tfGA_SC_rateGA settings: SC_rate; Int_tfGA_SC_stepsGA settings: SC_steps; Int_tfGA_nstepsGA settings: number of steps; Int_tfGA_preCalcGA settings: number of pre-calc steps; Double_tfLastAlphaline search variable; Double_tfLearnRatelearning rate for synapse weight adjustments; Double_tfPriorzjh; vector<Double_t>fPriorDevzjh; Int_tfResetStepreset time (how often we clear hessian matrix); Float_tfSamplingEpochfraction of epochs where sampling is used; Float_tfSamplingFractionfraction of events which is sampled for training; Bool_tfSamplingTestingThe testing sample is sampled; Bool_tfSamplingTrainingThe training sample is sampled; Float_tfSamplingWeightchanging factor for event weights when sampling is turned on; Double_tfTauline search variable; Int_tfTestRatetest for overtraining performed at each #th epochs; TStringfTrainMethodStraining method option param; TMVA::MethodMLP::ETrainingMethodfTrainingMethodmethod of training, BP or GA; Int_tfUpdateLimitzjh; boolfUseRegulatorzjh; static const Bool_tfgPRINT_BATCHdebug flags; static const Int_tfgPRINT_ESTIMATOR_INCdebug flags; static const Bool_tfgPRINT_SEQdebug flags. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodMLP(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodMLP.html:20725,variab,variable,20725,root/html528/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodMLP.html,2,['variab'],['variable']
Modifiability,"nary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfMethodArgs(); virtual const char*GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tGetNargs() const; Int_tGetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetPrototype() const; const char*GetReturnTypeName() const; stringGetReturnTypeNormalizedName() const; const char*GetSignature(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; void*InterfaceMethod() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFunction.html:3080,Inherit,InheritsFrom,3080,root/html534/TFunction.html,https://root.cern,https://root.cern/root/html534/TFunction.html,1,['Inherit'],['InheritsFrom']
Modifiability,"nary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfMethodArgs(); virtual const char*GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tGetNargs() const; Int_tGetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetPrototype() const; const char*GetReturnTypeName() const; stringGetReturnTypeNormalizedName() const; const char*GetSignature(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; void*InterfaceMethod() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid(); Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFunction.html:3080,Inherit,InheritsFrom,3080,root/html602/TFunction.html,https://root.cern,https://root.cern/root/html602/TFunction.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nary::GetAttributeMap() const; static TDataType*GetDataType(EDataType type); static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; Int_tGetType() const; static EDataTypeGetType(const type_info& typeinfo); TStringGetTypeName(); static const char*GetTypeName(EDataType type); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataType.html:3063,Inherit,InheritsFrom,3063,root/html602/TDataType.html,https://root.cern,https://root.cern/root/html602/TDataType.html,2,['Inherit'],['InheritsFrom']
Modifiability,"nate system with respect to the; 182 initial one. This construction allows definition of malformed rotations,; 183 e.g. not orthogonal. A check is performed and an error message is issued; 184 in this case.; 185 ; 186 Specific utilities : determinant, inverse.; 187 ; 188#### Scale transformations; 189 Represent a scale shrinking/enlargement. Data; 190 members :Double_t fScale[3]. Not fully implemented yet.; 191 ; 192#### Combined transformations; 193Represent a rotation followed by a translation.; 194Data members: Double_t fTranslation[3], TGeoRotation *fRotation.; 195 ; 196~~~ {.cpp}; 197 TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; 198 TGeoTranslation trans;; 199 ...; 200 TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; 201 TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); 202~~~; 203 ; 204 ; 205#### TGeoGenTrans; 206Combined transformations including a scale. Not implemented.; 207 ; 208#### TGeoIdentity; 209A generic singleton matrix representing a identity transformation; 210 NOTE: identified by the global variable gGeoIdentity.; 211*/; 212 ; 213#include <iostream>; 214#include ""TObjArray.h""; 215 ; 216#include ""TGeoManager.h""; 217#include ""TGeoMatrix.h""; 218#include ""TMath.h""; 219 ; 220TGeoIdentity *gGeoIdentity = nullptr;; 221const Int_t kN3 = 3 * sizeof(Double_t);; 222const Int_t kN9 = 9 * sizeof(Double_t);; 223 ; 224// statics and globals; 225 ; 226ClassImp(TGeoMatrix);; 227 ; 228////////////////////////////////////////////////////////////////////////////////; 229/// dummy constructor; 230 ; 231TGeoMatrix::TGeoMatrix(); 232{; 233 ResetBit(kGeoMatrixBits);; 234}; 235 ; 236////////////////////////////////////////////////////////////////////////////////; 237/// copy constructor; 238 ; 239TGeoMatrix::TGeoMatrix(const TGeoMatrix &other) : TNamed(other); 240{; 241 ResetBit(kGeoRegistered);; 242}; 243 ; 244////////////////////////////////////////////////////////////////////////////////; 245/// Constructor; 246 ; 247TGeoMatrix::TGeoMatri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html:8357,variab,variable,8357,doc/master/TGeoMatrix_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::Cartesian3D<Double32_t>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PositionVector3D & operator=(const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>& ). Assignment from a foreign 3D vector type, for example, Hep3Vector; Precondition: v must implement methods x(), y() and z(). SetXYZ(ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalar a, ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalar c). const CoordSystem & Coordinates() const. Retrieve a copy of the coordinates object. PositionVector3D<CoordSystem, Tag>& SetCoordinates(const ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::LocalCoordinateSystemTag>::Scalar* src). Set internal data based on a C-style array of 3 Scalar numbers. { fCoordin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1Cartesian3D_Double32_t__-p1LocalCoordinateSystemTag_.html:9754,Inherit,Inheritance,9754,root/html532/ROOT__Math__PositionVector3D_-p1Cartesian3D_Double32_t__-p1LocalCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__PositionVector3D_-p1Cartesian3D_Double32_t__-p1LocalCoordinateSystemTag_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nation with grad boost on/off; TStringfBoostTypestring specifying the boost type; Double_tfBoostWeightntuple var: boost weight; vector<double>fBoostWeightsthe weights applied in the individual boosts; Bool_tfDoBoostMonitorcreate control plot with ROC integral vs tree number; Double_tfErrorFractionntuple var: misclassification error fraction; vector<TMVA::Event*>fEventSamplethe training events; Double_tfFValidationEventsfraction of events to use for pruning; vector<TMVA::DecisionTree*,allocator<TMVA::DecisionTree*> >fForestthe collection of decision trees; Int_tfITreentuple var: ith tree; Bool_tfInverseBoostNegWeightsboost ev. with neg. weights with 1/boostweight rathre than boostweight; UInt_tfMaxDepthmax depth; Double_tfMinLinCorrForFisherthe minimum linear correlation between two variables demanded for use in fisher criterium in node splitting; TTree*fMonitorNtuplemonitoring ntuple; Int_tfNCutsgrid used in cut applied in node splitting; UInt_tfNNodesMaxmax # of nodes; Int_tfNTreesnumber of decision trees requested; TStringfNegWeightTreatmentvariable that holds the option of how to treat negative event weights in training; Bool_tfNoNegWeightsInTrainingignore negative event weights in the training; Int_tfNodeMinEventsmin number of events in node; Double_tfNodePurityLimitpurity limit for sig/bkg nodes; Bool_tfPairNegWeightsGlobalpair ev. with neg. and pos. weights in traning sample and ""annihilate"" them ; Bool_tfPairNegWeightsInNoderandomly pair miscl. ev. with neg. and pos. weights in node and don't boost them; Bool_tfPruneBeforeBoostflag to prune before boosting; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; Bool_tfRenormByClassindividually re-normalize each event class to the original size after boosting; map<T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBDT.html:22272,variab,variables,22272,root/html530/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBDT.html,3,['variab'],['variables']
Modifiability,"nav = gGeoManager->AddNavigator(navig);; // Make its own navigator the active one; gGeoManager->SetCurrentNavigator(inav);; // Switch between navigators; gGeoManager->SetCurrentNavigator(0);; TGeoManager::AddNavigatorTGeoNavigator * AddNavigator()Add a navigator in the list of navigators.Definition TGeoManager.cxx:789; TGeoManager::SetCurrentNavigatorBool_t SetCurrentNavigator(Int_t index)Switch to another existing navigator for the calling thread.Definition TGeoManager.cxx:849; TGeoNavigatorClass providing navigation API for TGeo geometries.Definition TGeoNavigator.h:32; A navigator holds several variables describing the current navigation state: current point position, current direction distance to next boundary, isotropic safety, pointer to current and next nods as well as several tracking flags related to volume boundary conditions or other properties required for track propagation in geometry. Each geometry query affects these variables, so the only way in testing several navigation alternatives and remembering the active navigation state is to use parallel navigation. The following paragraphs will describe the usage of a single navigator. All setters/getters for navigation state parameters as well as navigation queries provided by TGeoNavigator are interfaced by TGeoManager and will act on the current navigator. Initializing the Starting Point; The current point (x,y,z) known by the modeller is stored as Double_t fCurrentPoint[3] by the navigator class. This array of the three coordinates is defined in the current global reference system and can be retrieved any time:; Const Double_t *cpoint = gGeoManager->GetCurrentPoint();; TGeoManager::GetCurrentPointconst Double_t * GetCurrentPoint() constDefinition TGeoManager.h:501; Initializing this point can be done like:; gGeoManager->SetCurrentPoint(x,y,z);; // or:; gGeoManager->SetCurrentPoint(Double_t *point[3]);; TGeoManager::SetCurrentPointvoid SetCurrentPoint(Double_t *point)Definition TGeoManager.h:515. Initiali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:68524,variab,variables,68524,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['variab'],['variables']
Modifiability,"ncPtr_tGetDict(const char* cname); static DictFuncPtr_tGetDict(const type_info& info); static DictFuncPtr_tGetDictNorm(const char* cname); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static Version_tGetID(const char* cname); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; static Int_tGetPragmaBits(const char* name); static TProtoClass*GetProto(const char* cname); static TProtoClass*GetProtoNorm(const char* cname); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static char*Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TClassTable&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassTable.html:3219,Inherit,InheritsFrom,3219,root/html602/TClassTable.html,https://root.cern,https://root.cern/root/html602/TClassTable.html,2,['Inherit'],['InheritsFrom']
Modifiability,nce = 0.1897; : Cut 1 : var3 < 0.256; : Cut 2 : var4 < -0.708; : Rule 9 : Importance = 0.1689; : Cut 1 : myvar1 < -2.85; : Rule 10 : Importance = 0.1611; : Cut 1 : -2.85 < myvar1 < 2.68; : Skipping the next 42 rules; : ================================================================; : ; <WARNING> : No input variable directory found - BUG?; : Elapsed time for training with 2000 events: 3.48 sec ; RuleFit : [dataset] : Evaluation of RuleFit on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.00449 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_RuleFit.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_RuleFit.class.C␛[0m; : TMVAC.root:/dataset/Method_RuleFit/RuleFit; Factory : Training finished; : ; : Ranking input variables (method specific)...; : No variable ranking supplied by classifier: Cuts; : No variable ranking supplied by classifier: CutsD; Likelihood : Ranking result (top variable is best ranked); : -------------------------------------; : Rank : Variable : Delta Separation; : -------------------------------------; : 1 : var4 : 5.959e-02; : 2 : myvar1 : 3.033e-04; : 3 : myvar2 : -2.045e-02; : 4 : var3 : -2.655e-02; : -------------------------------------; LikelihoodPCA : Ranking result (top variable is best ranked); : -------------------------------------; : Rank : Variable : Delta Separation; : -------------------------------------; : 1 : var4 : 2.888e-01; : 2 : myvar1 : 6.310e-02; : 3 : var3 : 1.768e-02; : 4 : myvar2 : 1.165e-02; : -------------------------------------; : No variable ranking supplied by classifier: PDERS; PDEFoam : Ranking result (top variable is best ranked); : ----------------------------------------; : Rank : Variable : Variable Importance; : ----------------------------------------; : 1 : var4 : 3.830e-01; : 2 : myvar1 : 2.979e-01; : 3 : var3 : 1.915e-01; : 4 : myvar2 : 1.277e-01; : ----------------------------------------; : No variable ran,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:60390,variab,variable,60390,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,3,['variab'],['variable']
Modifiability,"nce Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TMethodCall Class Reference. ; Method or function calling interface. ; Objects of this class contain the (CINT) environment to call a global function or a method for an object of a specific class with the desired arguments. This class is especially useful when a method has to be called more times for different objects and/or with different arguments. If a function or method needs to be called only once one better uses TInterpreter::Execute().; A limitation is known with the present implementation: failures can occur if parameters involve temporary object construction. ; Definition at line 37 of file TMethodCall.h. Public Types; using EReturnType = TInterpreter::EReturnType;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMethodCall ();  Default TMethodCall ctor. ;  ;  TMethodCall (const char *function, const char *params);  Create a global function invocation environment. ;  ;  TMethodCall (const TFunction *func);  Create a global function invocation environment base on a TFunction object. ;  ;  TMethodCall (const TMethodCall &org);  Copy ctor. ;  ;  TMethodCall (TClass *cl, CallFunc_t *callfunc, Longptr_t of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMethodCall.html:1018,inherit,inherited,1018,doc/master/classTMethodCall.html,https://root.cern,https://root.cern/doc/master/classTMethodCall.html,1,['inherit'],['inherited']
Modifiability,"nce etc.; 26 ; 27 ; 28//- data ---------------------------------------------------------------------; 29static PyObject* gMainDict = nullptr;; 30 ; 31namespace CPyCppyy {; 32 extern PyObject* gThisModule;; 33}; 34 ; 35 ; 36//- private helpers ----------------------------------------------------------; 37namespace {; 38 ; 39static bool Initialize(); 40{; 41// Private initialization method: setup the python interpreter and load the; 42// cppyy module.; 43 static bool isInitialized = false;; 44 if (isInitialized); 45 return true;; 46 ; 47 if (!Py_IsInitialized()) {; 48 // this happens if Cling comes in first; 49#if PY_VERSION_HEX < 0x03020000; 50 PyEval_InitThreads();; 51#endif; 52#if PY_VERSION_HEX < 0x03080000; 53 Py_Initialize();; 54#else; 55 PyConfig config;; 56 PyConfig_InitPythonConfig(&config);; 57 PyConfig_SetString(&config, &config.program_name, L""cppyy"");; 58 Py_InitializeFromConfig(&config);; 59#endif; 60#if PY_VERSION_HEX >= 0x03020000; 61#if PY_VERSION_HEX < 0x03090000; 62 PyEval_InitThreads();; 63#endif; 64#endif; 65 ; 66 // try again to see if the interpreter is initialized; 67 if (!Py_IsInitialized()) {; 68 // give up ...; 69 std::cerr << ""Error: python has not been initialized; returning."" << std::endl;; 70 return false;; 71 }; 72 ; 73 // set the command line arguments on python's sys.argv; 74#if PY_VERSION_HEX < 0x03000000; 75 char* argv[] = {const_cast<char*>(""cppyy"")};; 76#elif PY_VERSION_HEX < 0x03080000; 77 wchar_t* argv[] = {const_cast<wchar_t*>(L""cppyy"")};; 78#endif; 79#if PY_VERSION_HEX < 0x03080000; 80 PySys_SetArgv(sizeof(argv)/sizeof(argv[0]), argv);; 81#endif; 82 ; 83 // force loading of the cppyy module; 84 PyRun_SimpleString(const_cast<char*>(""import cppyy""));; 85 }; 86 ; 87 if (!gMainDict) {; 88 // retrieve the main dictionary; 89 gMainDict = PyModule_GetDict(; 90 PyImport_AddModule(const_cast<char*>(""__main__"")));; 91 // The gMainDict is borrowed, i.e. we are not calling Py_INCREF(gMainDict).; 92 // Like this, we avoid unexpectedly affe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/API_8cxx_source.html:1901,config,config,1901,doc/master/API_8cxx_source.html,https://root.cern,https://root.cern/doc/master/API_8cxx_source.html,1,['config'],['config']
Modifiability,"nce interval PDF function; Double_tfMeanData mean; TKDE::EMirrorfMirror; Bool_tfMirrorLeft; Bool_tfMirrorRight; UInt_tfNBinsNumber of bins for binned data option; UInt_tfNEventsData's number of events; Bool_tfNewDataflag to control when new data are given; TF1*fPDFOutput Kernel Density Estimation PDF function; Double_tfRhoAdjustment factor for sigma; vector<Bool_t>fSettedOptionsUser input options flag; Double_tfSigmaData std deviation; Double_tfSigmaRobData std deviation (robust estimation); Double_tfSumOfCountsData sum of weights; TF1*fUpperPDFOutput Kernel Density Estimation upper confidence interval PDF function; Bool_tfUseBins; UInt_tfUseBinsNEventsIf the algorithm is allowed to use binning this is the minimum number of events to do so; Bool_tfUseMinMaxFromDataflag top control if min and max must be used from data; Bool_tfUseMirroring; Double_tfWeightSizeCaches the weight size; Double_tfXMaxData maximum value; Double_tfXMinData minimum value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TKDE(); Class destructor. void Instantiate(TKDE::KernelFunction_Ptr kernfunc, UInt_t events, const Double_t* data, const Double_t* weight, Double_t xMin, Double_t xMax, const Option_t* option, Double_t rho); Template's constructor surrogate. void SetOptions(const Option_t* option, Double_t rho); Sets User defined construction options. void SetDrawOptions(const Option_t* option, TString& plotOpt, TString& drawOpt); Sets User defined drawing options. void GetOptions(string optionType, string option); Gets User defined KDE construction options. void AssureOptions(); Sets missing construction options to default ones. void CheckOptions(Bool_t isUserDefinedKernel = kFALSE); Sets User global options. void SetKernelType(TKDE::EKernelType kern); Sets User option for the choice of kernel estimator. void SetIteration(TKDE::EIteration iter); Sets User option for fixed or adaptive iteration. void SetMirror(TKDE::EMirror mir); Sets User option for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TKDE.html:12191,Inherit,Inheritance,12191,root/html604/TKDE.html,https://root.cern,https://root.cern/root/html604/TKDE.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nce intervals); RooStats::TestStatistic Interface for tools setting limits (producing confidence intervals); RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStreamParser Utility class that parses iostream data into tokens; RooStringVar String-valued variable ; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int_t; RooTable Abstract interface for tables; RooThreshEntry Utility class for RooThresholdCategory, holding a threshold/category state pair; RooThresholdCategory Real-to-Category function defined by series of threshold; RooTrace Memory tracer utility for RooFit objects; RooTreeData Dummy class for legacy RooDataSet support; RooTreeDataStore TTree-based Data Storage class; RooTruthModel Truth resolution model (delta function); RooUnblindCPAsymVar CP-Asymmetry unblinding transformation; RooUnblindOffset Offset unblinding transformation; RooUnblindPrecision Precision unblinding transformation; RooUnblindUniform Uniform unblinding transformation; RooUniformBinning Uniform binning specification; RooVoigtian Voigtian PDF (Gauss (x) BreitWigner); RooWorkspace Persistable project container for (composite) pdfs, functions, variables and datasets; RooWorkspace::CodeRepo Code repository for RooWorkspace; RooWorkspace::WSDir TDirectory representation of RooWorkspace; RooXYChi2Var Chi^2 function of p.d.f w.r.t a unbinned dataset with X and Y values; Segment_t ; SetWindowAttributes_t ; SysInfo_t System information - OS, CPU, RAM.; TASImage image processing class; TASImagePlugin asimage plugin; TASPaletteEditor GUI to edit a color palette; TASPluginGS PS/EPS/PDF plugin based on GhostScript interpreter; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:44929,variab,variable,44929,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,2,['variab'],"['variable', 'variables']"
Modifiability,"nce matrix must be provided in compressed form (row-major ordered upper traingular part); 24*/; 25bool Minimizer::SetCovariance(std::span<const double> cov, unsigned int nrow); 26{; 27 MATH_UNUSED(cov);; 28 MATH_UNUSED(nrow);; 29 return false;; 30}; 31 ; 32/// set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited; 33/// variable; 34bool Minimizer::SetLimitedVariable(unsigned int ivar, const std::string &name, double val, double step, double lower,; 35 double upper); 36{; 37 MATH_WARN_MSG(""Minimizer::SetLimitedVariable"", ""Setting of limited variable not implemented - set as unlimited"");; 38 MATH_UNUSED(lower);; 39 MATH_UNUSED(upper);; 40 return SetVariable(ivar, name, val, step);; 41}; 42 ; 43/// set a new fixed variable (override if minimizer supports them ); 44bool Minimizer::SetFixedVariable(unsigned int ivar, const std::string &name, double val); 45{; 46 MATH_ERROR_MSG(""Minimizer::SetFixedVariable"", ""Setting of fixed variable not implemented"");; 47 MATH_UNUSED(ivar);; 48 MATH_UNUSED(name);; 49 MATH_UNUSED(val);; 50 return false;; 51}; 52/// set the value of an already existing variable; 53bool Minimizer::SetVariableValue(unsigned int ivar, double value); 54{; 55 MATH_ERROR_MSG(""Minimizer::SetVariableValue"", ""Set of a variable value not implemented"");; 56 MATH_UNUSED(ivar);; 57 MATH_UNUSED(value);; 58 return false;; 59}; 60 ; 61/// set the step size of an already existing variable; 62bool Minimizer::SetVariableStepSize(unsigned int ivar, double value); 63{; 64 MATH_ERROR_MSG(""Minimizer::SetVariableStepSize"", ""Setting an existing variable step size not implemented"");; 65 MATH_UNUSED(ivar);; 66 MATH_UNUSED(value);; 67 return false;; 68}; 69/// set the lower-limit of an already existing variable; 70bool Minimizer::SetVariableLowerLimit(unsigned int ivar, double lower); 71{; 72 MATH_ERROR_MSG(""Minimizer::SetVariableLowerLimit"", ""Setting an existing variable limit not implemented"");; 73 MATH_UNUSED(ivar);; 74",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:1630,variab,variable,1630,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nce or maximum weight optimization; Int_tfOptPRDOption switch for predefined division, for quick check; Int_tfOptRejSwitch =0 for weighted events; =1 for unweighted events in MC; Double_t*fPrimAcu[fNoAct] Array of cumulative probability of all active cells; Double_tfPrimePrimary integral R' (R=R'<wt>); TRandom*fPseRanPointer to user-defined generator of pseudorandom numbers; Int_tfRNmaxMaximum No. of the rand. numb. requested at once; TFoamIntegrand*fRho! Pointer to the user-defined integrand function/distribution; Double_t*fRvec[fRNmax] random number vector from r.n. generator fDim+1 maximum elements; Double_tfSumOveTotal Sum of overveighted events; Double_tfSumWtTotal sum of wt and wt^2; Double_tfSumWt2Total sum of wt and wt^2; TStringfVersionActual version of the FOAM like (1.01m); Double_tfWtMaxMaximum/Minimum MC weight; Double_tfWtMinMaximum/Minimum MC weight; TFoamVect**fXdivPRD! Lists of division values encoded in one vector per direction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFoam(); Default constructor for streamer, user should not use it. TFoam(const Char_t* ); User constructor, to be employed by the user. ~TFoam(); Default destructor; std::cout<<"" DESTRUCTOR entered ""<<std::endl;. TFoam(const TFoam& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). void Initialize(TRandom* , TFoamIntegrand* ); Basic initialization of FOAM invoked by the user. Mandatory!. This method starts the process of the cell build-up.; User must invoke Initialize with two arguments or Initialize without arguments.; This is done BEFORE generating first MC event and AFTER allocating FOAM object; and reseting (optionally) its internal parameters/switches.; The overall operational scheme of the FOAM is the following:. . This method invokes several other methods:. InitCells initializes memory storage for cells and begins exploration process; from the root cell. The empty cells are allocated/filled using CellFill.; The procedure Grow whi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoam.html:14590,Inherit,Inheritance,14590,root/html602/TFoam.html,https://root.cern,https://root.cern/root/html602/TFoam.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nce parameters are defined as all parameters; of the function except the stated paramsOfInterest. RooAbsReal* createIntegral(const RooArgSet& iset, const RooCmdArg arg1, const RooCmdArg arg2 = RooCmdArg::none(), const RooCmdArg arg3 = RooCmdArg::none(), const RooCmdArg arg4 = RooCmdArg::none(), const RooCmdArg arg5 = RooCmdArg::none(), const RooCmdArg arg6 = RooCmdArg::none(), const RooCmdArg arg7 = RooCmdArg::none(), const RooCmdArg arg8 = RooCmdArg::none()) const; Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. The following named arguments are accepted. NormSet(const RooArgSet&) -- Specify normalization set, mostly useful when working with PDFS; NumIntConfig(const RooNumIntConfig&) -- Use given configuration for any numeric integration, if necessary; Range(const char* name) -- Integrate only over given range. Multiple ranges may be specified; by passing multiple Range() arguments. RooAbsReal* createIntegral(const RooArgSet& iset, const RooArgSet* nset, 				 const RooNumIntConfig* cfg, const char* rangeName); Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. If nset is specified the integrand is request; to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified; the integral is performed over the named range, otherwise it is performed over the domain of each; integrated observable. If cfg is specified it will be used to c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:35419,config,configuration,35419,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,1,['config'],['configuration']
Modifiability,"nce to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtual bool Scan (unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0);  scan function minimum for variable i. ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivatives ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ; void SetExtraOptions (const IOptions &extraOptions);  set only the extra options ;  ; virtual void SetHessianFunction (std::function< bool(std::span< const double >, double *)>);  set the function implementing Hessian computation (re-implemented by Minimizer using it) ;  ; virtual bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower);  set a new lower limit variable (override if minimizer supports them ) ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; virtual bool SetUpperLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double upper);  set a new upper limit variable ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:7628,variab,variable,7628,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,2,['variab'],['variable']
Modifiability,"nce(const TMVA::Event& base_event, const TMVA::BinarySearchTreeNode& sample_event, Double_t* dim_normalization); We use Euclidian metric here. Might not be best or most efficient. Double_t NormSinc(Double_t x); NormSinc. Double_t LanczosFilter(Int_t level, Double_t x); Lanczos Filter. Float_t GetError(Float_t countS, Float_t countB, Float_t sumW2S, Float_t sumW2B) const; statistical error estimate for RS estimator. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode). void ReadWeightsFromStream(istream& istr); read weight info from file. void WriteWeightsToStream(TFile& rf) const; write training sample (TTree) to file. void ReadWeightsFromStream(TFile& istr); read training sample from file. TMVA::MethodPDERS* ThisPDERS( void ); static pointer to this object. void UpdateThis( void ); update static this pointer. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodPDERS(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* theTargetDir = 0). BinarySearchTree* GetBinaryTree( void ); accessors. { return fBinaryTree; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. MethodPDERS*& GetMethodPDERSThreadLocal(); This is a workaround for OSx where static thread_local data members are; not supported. The C++ solution would indeed be the following:. {TTHREAD_TLS(MethodPDERS*) fgThisPDERS(nullptr); return fgThisPDERS;}. » Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodPDERS.html:27043,variab,variables,27043,root/html604/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodPDERS.html,2,['variab'],['variables']
Modifiability,"nce(const TMVA::Event& base_event, const TMVA::BinarySearchTreeNode& sample_event, Double_t* dim_normalization); We use Euclidian metric here. Might not be best or most efficient. Double_t NormSinc(Double_t x); NormSinc. Double_t LanczosFilter(Int_t level, Double_t x); Lanczos Filter. Float_t GetError(Float_t countS, Float_t countB, Float_t sumW2S, Float_t sumW2B) const; statistical error estimate for RS estimator. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode). void ReadWeightsFromStream(istream& istr); read weight info from file. void WriteWeightsToStream(TFile& rf) const; write training sample (TTree) to file. void ReadWeightsFromStream(TFile& istr); read training sample from file. TMVA::MethodPDERS* ThisPDERS( void ); static pointer to this object. void UpdateThis( void ); update static this pointer. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodPDERS(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption, TDirectory* theTargetDir = 0). BinarySearchTree* GetBinaryTree( void ); accessors. { return fBinaryTree; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. MethodPDERS*& GetMethodPDERSThreadLocal(); This is a workaround for OSx where static thread_local data members are; not supported. The C++ solution would indeed be the following:. {TTHREAD_TLS(MethodPDERS*) fgThisPDERS(nullptr); return fgThisPDERS;}. » Author: Andreas Hoecker, Yair Mahalalel, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodPDERS.html:27035,variab,variables,27035,root/html602/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodPDERS.html,2,['variab'],['variables']
Modifiability,"nce. . Definition at line 168 of file RooWorkspace.h. Classes; class  ClassFiles;  ; class  ClassRelInfo;  ; class  ExtraHeader;  . Public Member Functions;  CodeRepo (const CodeRepo &other, RooWorkspace *wspace=nullptr);  ;  CodeRepo (RooWorkspace *wspace=nullptr);  ; bool autoImportClass (TClass *tc, bool doReplace=false);  Import code of class 'tc' into the repository. ;  ; bool compileClasses ();  For all classes in the workspace for which no class definition is found in the ROOT class table extract source code stored in code repository into temporary directory set by setClassFileExportDir(), compile classes and link them with current ROOT session. ;  ; bool compiledOK () const;  ; TClass * IsA () const override;  ; std::string listOfClassNames () const;  Return STL string with last of class names contained in the code repository. ;  ; void Streamer (TBuffer &) override;  Custom streamer for the workspace. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html:1324,inherit,inherited,1324,doc/master/classRooWorkspace_1_1CodeRepo.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1CodeRepo.html,1,['inherit'],['inherited']
Modifiability,"nce. ; If force, replace existing output file. This routine does nothing if fHtml->HaveDot() is true - use ClassDotCharts() instead! ; Definition at line 1285 of file TClassDocOutput.cxx. ◆ Streamer(). void TClassDocOutput::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TClassDocOutput::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 67 of file TClassDocOutput.h. ◆ WriteClassDescription(). void TClassDocOutput::WriteClassDescription ; (; std::ostream & ; out, . const TString & ; description . ). protectedvirtual . Called by TDocParser::LocateMethods(), this hook writes out the class description found by TDocParser. ; It's even called if none is found, i.e. if the first method has occurred before a class description is found, so missing class descriptions can be handled. For HTML, its creates the description block, the list of functions and data members, and the inheritance tree or, if Graphviz's dot is found, the class charts. ; Definition at line 1338 of file TClassDocOutput.cxx. ◆ WriteClassDocHeader(). void TClassDocOutput::WriteClassDocHeader ; (; std::ostream & ; classFile). protectedvirtual . Write out the introduction of a class description (shortcuts and links) ; Definition at line 1429 of file TClassDocOutput.cxx. ◆ WriteMethod(). void TClassDocOutput::WriteMethod ; (; std::ostream & ; out, . TString & ; ret, . TString & ; name, . TString & ; params, . const char * ; filename, . TString & ; anchor, . TString & ; comment, . TString & ; codeOneLiner, . TDocMethodWrapper * ; guessedMethod . ). protectedvirtual . Write method name with return type ret and parameters param to out. ; Build a link using file and anchor. Cooment it with comment, and show the code codeOneLiner (set if the func consists of only one line of code, immediately surrounded by ""{"",""}""). Also updates fMethodNames's count of method names. ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocOutput.html:26370,inherit,inheritance,26370,doc/master/classTClassDocOutput.html,https://root.cern,https://root.cern/doc/master/classTClassDocOutput.html,1,['inherit'],['inheritance']
Modifiability,"nced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TCut>fCategoryCuts; vector<UInt_t>fCategorySpecIdx; TMVA::MethodBase*TMVA::MethodCompositeBase::fCurrentMethod; UInt_tTMVA::MethodCompositeBase::fCurrentMethodIdx; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Double_t>TMVA::MethodCompositeBase::fMethodWeight; vector<IMethod*>fMethods; vector<IMethod*>TMVA::MethodCompositeBase::fMethodsvector of all classifiers; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class; vector<std::vector<UInt_t> >fVarMaps; vector<TString>fVars. private:. vector<TTreeFormula*>fCatFormulas; TTree*fCatTree! needed in conjunction with TTreeFormulas for evaluation category expressions; TMVA::DataSetManager*fDataSetManagerDSMTEST. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodCategory(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodCategory.html:16515,variab,variables,16515,root/html534/TMVA__MethodCategory.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodCategory.html,4,['variab'],"['variable', 'variables']"
Modifiability,"nced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TProofResourcesStatic::EInfoTypekNodeType; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TProofResourcesStatic::EInfoTypekOption; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTProofResources::fValidkTRUE if resource information was processed correctly. private:. TStringfFileNameConfig file name; Bool_tfFoundMasterkTRUE if config file has master info; TProofNodeInfo*fMasterMaster node info; TList*fSubmasterListNode info list with all submasters; TList*fWorkerListNode info list with all workers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResourcesStatic(); This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); for a quick scan of the config file to retrieve the work directory. TProofResourcesStatic(const char* confDir, const char* fileName); Using this ctor will retrieve all information in the config file; and store it in fMaster, fSubmasterList and fWorkerList,; condorworkers will be stored in the fWorkerList. ~TProofResourcesStatic(); Destructor. void InitResources(); Create master node info and submaster/worker lists,; and set default values. TProofNodeInfo * GetMaster(); Get the master node. Only return the master info if it was set; in the config file. TList * GetSubmasters(); Get the list of submaster nodes. TList * GetWorkers(void); Get the list of worker nodes. Bool_t ReadConfigFile(const char* confDir, const char* fileName); Read the PROOF config file and fill the master and worker list. void SetOption(TProofNodeInfo* nodeinfo, const TString& option, const TString& value); Static method to set the node info options. TProofNodeInfo * CreateNodeInfo(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofResourcesStatic.html:7403,config,config,7403,root/html602/TProofResourcesStatic.html,https://root.cern,https://root.cern/root/html602/TProofResourcesStatic.html,4,['config'],['config']
Modifiability,"ncetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_tTMVA::FitterBase::EstimatorFunction(vector<Double_t>& parameters); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::GeneticFitterGeneticFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__GeneticFitter.html:2129,Config,Configurable,2129,root/html532/TMVA__GeneticFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__GeneticFitter.html,2,['Config'],['Configurable']
Modifiability,"ncetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(Double_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/Roo2DKeysPdf.html:10279,extend,extendedTerm,10279,root/html532/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html532/Roo2DKeysPdf.html,3,['extend'],['extendedTerm']
Modifiability,"ncetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; static Bool_tRooAbsPdf::evalError(); static RooAbsReal::EvalErrorIterRooAbsReal::evalErrorIter(); static RooAbsReal::ErrorLoggingModeRooAbsReal::evalErrorLoggingMode(); virtual Double_tevaluate() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet* nset) const; virtual Double_tRooAbsPdf::expectedEvents(const RooArgSet& nset) const; RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual Double_tRooAbsPdf::extendedTerm(UInt_t observedEvents, const RooArgSet* nset = 0) const; virtual RooAbsPdf::ExtendModeRooAbsPdf::extendMode() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); RooDataHist*RooAbsReal::fillDataHist(RooDataHist* hist, const RooArgSet* nset, Double_t scaleFactor, Bool_t correctForBinVolume = kFALSE, Bool_t showProgress = kFALSE) const; TH1*RooAbsReal::fillHistogram(TH1* hist, const RooArgList& plotVars, Double_t scaleFactor = 1, const RooArgSet* projectedVars = 0, Bool_t scaling = kTRUE, const RooArgSet* condObs = 0, Bool_t setError = kTRUE) const; Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Roo2DKeysPdf.html:10161,extend,extendedTerm,10161,root/html528/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html528/Roo2DKeysPdf.html,4,['extend'],['extendedTerm']
Modifiability,"nch with the method's discriminating variable. void NoErrorCalc(Double_t *const err, Double_t *const errUpper). Double_t GetMvaValue(const TMVA::Event *const ev, Double_t* err = 0, Double_t* errUpper = 0). void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample. bias = average deviation; dev = average absolute deviation; rms = rms of deviation. void TestMulticlass(); test multiclass classification. void TestClassification(); initialization. void WriteStateToStream(ostream& tf) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void AddInfoItem(void* gi, const TString& name, const TString& value) const; xml writing. void AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType). void WriteStateToXML(void* parent) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void ReadStateFromStream(TFile& rf); write reference MVA distributions (and other information); to a ROOT type weight file. void WriteStateToFile() const; write options and weights to file; note that each one text file for the main configuration information; and one ROOT file for ROOT objects are created. void ReadStateFromFile(); Function to write options and weights to file. void ReadStateFromXMLString(const char* xmlstr); for reading from memory. void ReadStateFromXML(void* parent). void ReadStateFromStream(istream& tf); read the header f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:22643,variab,variables,22643,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,2,['variab'],"['variable', 'variables']"
Modifiability,"nch::fParent! Pointer to parent branch.; Int_tTBranch::fReadBasket! Current basket number when reading; Long64_tTBranch::fReadEntry! Current entry number when reading; TBranch::ReadLeaves_tTBranch::fReadLeaves! Pointer to the ReadLeaves implementation to use.; TRefTable*fRefTablepointer to the TRefTable; Bool_tTBranch::fSkipZip! After being read, the buffer will not be unziped.; Int_tTBranch::fSplitLevelBranch split level; TStringTNamed::fTitleobject title; Long64_tTBranch::fTotBytesTotal number of bytes in all leaves before compression; TTree*TBranch::fTree! Pointer to Tree header; Int_tTBranch::fWriteBasketLast basket number written; Long64_tTBranch::fZipBytesTotal number of bytes in all leaves after compression; static Int_tTBranch::fgCount! branch counter; static TBranch::EStatusBitsTBranch::kAutoDelete; static TBranch::EStatusBitsTBranch::kDoNotUseBufferMap. private:. Long64_tfRequestedEntry! Cursor indicating which entry is being requested. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBranchRef(); Default constructor. TBranchRef(TTree* tree); Main constructor called by TTree::BranchRef. ~TBranchRef(); Typical destructor. void Clear(Option_t* option = """"); Clear entries in the TRefTable. Int_t Fill(); Fill the branch basket with the referenced objects parent numbers. Bool_t Notify(); This function is called by TRefTable::Notify, itself called by; TRef::GetObject.; The function reads the branch containing the object referenced; by the TRef. void Print(Option_t* option = """") const; Print the TRefTable branch. void ReadLeavesImpl(TBuffer& b); This function called by TBranch::GetEntry overloads TBranch::ReadLeaves. void FillLeavesImpl(TBuffer& b); This function called by TBranch::Fill overloads TBranch::FillLeaves. void Reset(Option_t* option = """"); Existing buffers are deleted; Entries, max and min are reset; TRefTable is cleared. void ResetAfterMerge(TFileMergeInfo* ); Reset a Branch after a Merge operation (drop data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBranchRef.html:14553,Inherit,Inheritance,14553,root/html602/TBranchRef.html,https://root.cern,https://root.cern/root/html602/TBranchRef.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,nchAddressStatus { kMissingBranch; kInternalError; kMissingCompiledCollectionProxy; kMismatch; kClassMismatch; kMatch; kMatchConversion; kMatchConversionCollection; kMakeClass; kVoidPtr; kNoCheck; };; enum TTree::[unnamed] { kForceRead; kCircular; kSplitCollectionOfPointers; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*TTree::fAliasesList of aliases for expressions based on the tree branches.; Float_t*fArgs! [fNvar] Array of variables; Long64_tTTree::fAutoFlushAutoflush tree when fAutoFlush entries written; Long64_tTTree::fAutoSaveAutosave tree when fAutoSave bytes produced; TBranchRef*TTree::fBranchRefBranch supporting the TRefTable (if any); TObjArrayTTree::fBranchesList of Branches; Bool_tTTree::fCacheDoAutoInit! true if cache auto creation or resize check is needed; Long64_tTTree::fCacheSize! Maximum size of file buffers; Bool_tTTree::fCacheUserSet! true if the cache setting was explicitly given by user; Long64_tTTree::fChainOffset! Offset of 1st entry of this Tree in a TChain; TList*TTree::fClones! List of cloned trees which share our addresses; Long64_t*TTree::fClusterRangeEnd[fNClusterRange] Last entry of a cluster range.; Long64_t*TTree::fClusterSize[fNClusterRange] Number of entries in each cluster for a given range.; Int_tTTree::fDebug! Debug level; Long64_tTTree::fDebugMax! Last entry number to debug; Long64_tTTree::fDebugMin! First entry number to debug; Int_tTTree::fDefaultEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TDirectory*TTree::fDirectory! Pointer to directory holding this tree; Long64_tTTree::fEntriesNumber of entries; TEntryList*TTree::fEntryList! Pointer to event selection list (if one); Long64_tTTree::fEstimateNumber of entries to estimate histogram limits; TEventList*TTree::fEventList! Po,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNtuple.html:22283,variab,variables,22283,root/html534/TNtuple.html,https://root.cern,https://root.cern/root/html534/TNtuple.html,2,['variab'],['variables']
Modifiability,nchAddressStatusTTree::kNoCheck; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TTree::(anonymous)TTree::kSplitCollectionOfPointers; static TTree::ESetBranchAddressStatusTTree::kVoidPtr; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TTree::fAliasesList of aliases for expressions based on the tree branches.; Double_t*fArgs! [fNvar] Array of variables; Long64_tTTree::fAutoFlushAutoflush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced; Long64_tTTree::fAutoSaveAutosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced; TBranchRef*TTree::fBranchRefBranch supporting the TRefTable (if any); TObjArrayTTree::fBranchesList of Branches; Bool_tTTree::fCacheDoAutoInit! true if cache auto creation or resize check is needed; Long64_tTTree::fCacheSize! Maximum size of file buffers; Bool_tTTree::fCacheUserSet! true if the cache setting was explicitly given by user; Long64_tTTree::fChainOffset! Offset of 1st entry of this Tree in a TChain; TList*TTree::fClones! List of cloned trees which share our addresses; Long64_t*TTree::fClusterRangeEnd[fNClusterRange] Last entry of a cluster range.; Long64_t*TTree::fClusterSize[fNClusterRange] Number of entries in each cluster for a given range.; Int_tTTree::fDebug! Debug level; Long64_tTTree::fDebugMax! Last entry number to debug; Long64_tTTree::fDebugMin! First entry number to debug; Int_tTTree::fDefaultEntryOffsetLenInitial Length of fEntryOffset table in the basket buffers; TDirectory*TTree::fDirectory! Pointer to directory holding this tree; Long64_tTTree::fEntriesNumber of entries; TEntryList*TTree::fEntryList! Pointer to event selection list (if one); Long64_tTTree::fEstimateNumber of entries to estimate histog,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNtupleD.html:23232,variab,variables,23232,root/html604/TNtupleD.html,https://root.cern,https://root.cern/root/html604/TNtupleD.html,2,['variab'],['variables']
Modifiability,"nclude ""TMVA/Reader.h""; #include ""TMVA/MethodCuts.h""; ; using namespace TMVA;; ; void TMVAClassificationApplication( TString myMethodList = """" ); {; ; //---------------------------------------------------------------; // This loads the library; TMVA::Tools::Instance();; ; // Default MVA methods to be trained + tested; std::map<std::string,int> Use;; ; // Cut optimisation; Use[""Cuts""] = 1;; Use[""CutsD""] = 1;; Use[""CutsPCA""] = 0;; Use[""CutsGA""] = 0;; Use[""CutsSA""] = 0;; //; // 1-dimensional likelihood (""naive Bayes estimator""); Use[""Likelihood""] = 1;; Use[""LikelihoodD""] = 0; // the ""D"" extension indicates decorrelated input variables (see option strings); Use[""LikelihoodPCA""] = 1; // the ""PCA"" extension indicates PCA-transformed input variables (see option strings); Use[""LikelihoodKDE""] = 0;; Use[""LikelihoodMIX""] = 0;; //; // Mutidimensional likelihood and Nearest-Neighbour methods; Use[""PDERS""] = 1;; Use[""PDERSD""] = 0;; Use[""PDERSPCA""] = 0;; Use[""PDEFoam""] = 1;; Use[""PDEFoamBoost""] = 0; // uses generalised MVA method boosting; Use[""KNN""] = 1; // k-nearest neighbour method; //; // Linear Discriminant Analysis; Use[""LD""] = 1; // Linear Discriminant identical to Fisher; Use[""Fisher""] = 0;; Use[""FisherG""] = 0;; Use[""BoostedFisher""] = 0; // uses generalised MVA method boosting; Use[""HMatrix""] = 0;; //; // Function Discriminant analysis; Use[""FDA_GA""] = 1; // minimisation of user-defined function using Genetics Algorithm; Use[""FDA_SA""] = 0;; Use[""FDA_MC""] = 0;; Use[""FDA_MT""] = 0;; Use[""FDA_GAMT""] = 0;; Use[""FDA_MCMT""] = 0;; //; // Neural Networks (all are feed-forward Multilayer Perceptrons); Use[""MLP""] = 0; // Recommended ANN; Use[""MLPBFGS""] = 0; // Recommended ANN with optional training method; Use[""MLPBNN""] = 1; // Recommended ANN with BFGS training method and bayesian regulator; Use[""CFMlpANN""] = 0; // Depreciated ANN from ALEPH; Use[""TMlpANN""] = 0; // ROOT's own ANN; Use[""DNN_CPU""] = 0; // CUDA-accelerated DNN training.; Use[""DNN_GPU""] = 0; // Multi-core accelerated DN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationApplication_8C.html:5601,variab,variables,5601,doc/master/TMVAClassificationApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationApplication_8C.html,2,['variab'],['variables']
Modifiability,"nclude <exception>; 52#include <stdexcept>; 53#include <set>; 54 ; 55////////////////////////////////////////////////////////////////////////////////; 56/// create variable transformations; 57 ; 58namespace TMVA {; 59void CreateVariableTransforms(const TString& trafoDefinitionIn,; 60 TMVA::DataSetInfo& dataInfo,; 61 TMVA::TransformationHandler& transformationHandler,; 62 TMVA::MsgLogger& log); 63{; 64 TString trafoDefinition(trafoDefinitionIn);; 65 if (trafoDefinition == ""None"") return; // no transformations; 66 ; 67 // workaround for transformations to complicated to be handled by makeclass; 68 // count number of transformations with incomplete set of variables; 69 TString trafoDefinitionCheck(trafoDefinitionIn);; 70 int npartial = 0;; 71 for (Int_t pos = 0, siz = trafoDefinition.Sizeof(); pos < siz; ++pos) {; 72 TString ch = trafoDefinition(pos,1);; 73 if ( ch == ""("" ) npartial++;; 74 }; 75 if (npartial>1) {; 76 log << kWARNING; 77 << ""The use of multiple partial variable transformations during the ""; 78 ""application phase can be properly invoked via the \""Reader\"", but ""; 79 ""it is not yet implemented in \""MakeClass\"", the creation mechanism ""; 80 ""for standalone C++ application classes. The standalone C++ class ""; 81 ""produced by this training job is thus INCOMPLETE AND MUST NOT BE USED! ""; 82 ""The transformation in question is: "" << trafoDefinitionIn << Endl;; 83 // ToDo make info and do not write the standalone class; 84 //; 85 // this does not work since this function is static; 86 // fDisableWriting=true; // disable creation of stand-alone class; 87 // ToDo we need to tell the transformation that it cannot write itself; 88 }; 89 // workaround end; 90 ; 91 Int_t parenthesisCount = 0;; 92 for (Int_t position = 0, size = trafoDefinition.Sizeof(); position < size; ++position) {; 93 TString ch = trafoDefinition(position,1);; 94 if (ch == ""("") ++parenthesisCount;; 95 else if (ch == "")"") --parenthesisCount;; 96 else if (ch == "","" && parenthesisCount == 0) trafoDefin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/VariableTransform_8cxx_source.html:2991,variab,variable,2991,doc/master/VariableTransform_8cxx_source.html,https://root.cern,https://root.cern/doc/master/VariableTransform_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ncludePath $SourceFile; /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLOGO; $LinkedLibs -entry:_DllMainCRTStartup@12 -dll /out:$SharedLib""). void AddIncludePath(const char* includePath); Add includePath to the already set include path. void AddLinkedLibs(const char* linkedLib); Add linkedLib to already set linked libs. void SetIncludePath(const char* includePath); IncludePath should contain the list of compiler flags to indicate where; to find user defined header files. It is used to expand $IncludePath in; the directives given to SetMakeSharedLib() and SetMakeExe(), e.g.:; gSystem->SetInclude(""-I$ROOTSYS/include -Imydirectory/include"");; the default value of IncludePath on Unix is:; ""-I$ROOTSYS/include ""; and on Windows:; ""/I%ROOTSYS%/include "". void SetLinkedLibs(const char* linkedLibs); LinkedLibs should contain the library directory and list of libraries; needed to recreate the current executable. It is used to expand $LinkedLibs; in the directives given to SetMakeSharedLib() and SetMakeExe(); The default value on Unix is: root-config --glibs. void SetLinkdefSuffix(const char* suffix); The 'suffix' will be appended to the name of a script loaded by ACLiC; and used to locate any eventual additional linkdef information that; ACLiC should used to produce the dictionary.; So by default, when doing .L MyScript.cxx, ACLiC will look; for a file name MyScript_linkdef and having one of the .h (.hpp,; etc.) extensions. If such a file exist, it will be added to; the end of the linkdef file used to created the ACLiC dictionary.; This effectively enable the full customization of the creation; of the dictionary. It should be noted that the file is intended; as a linkdef 'fragment', so usually you would not list the; typical '#pragma link off ...."". void SetSoExt(const char* soExt); Set shared library extension, should be either .so, .sl, .a, .dll, etc. void SetObjExt(const char* objExt); Set object files extension, should be either .o, .obj, etc. TString SplitAclic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:48089,config,config,48089,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,10,['config'],['config']
Modifiability,"ncludeRange (TLeaf *) override;  Copy/set fMinimum and fMaximum to include/be wide than those of the parameter. ;  ; TClass * IsA () const override;  ; void PrintValue (Int_t i=0) const override;  Prints leaf value. ;  ; void ReadBasket (TBuffer &) override;  Read leaf elements from Basket input buffer. ;  ; void ReadBasketExport (TBuffer &, TClonesArray *list, Int_t n) override;  Read leaf elements from Basket input buffer and export buffer to TClonesArray objects. ;  ; bool ReadBasketFast (TBuffer &, Long64_t) override;  ; void ReadValue (std::istream &s, Char_t delim=' ') override;  Read a 8 bit integer from std::istream s and store it into the branch buffer. ;  ; void SetAddress (void *addr=nullptr) override;  Set value buffer address. ;  ; virtual void SetMaximum (Char_t max);  ; virtual void SetMinimum (Char_t min);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual bool CanGenerateOffsetArray ();  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual TString GetFullName () const;  Return the full name (including the parent's branch names) of the leaf. ;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, Long64_t len);  If this branch is a branch count, return the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafB.html:2175,inherit,inherited,2175,doc/master/classTLeafB.html,https://root.cern,https://root.cern/doc/master/classTLeafB.html,1,['inherit'],['inherited']
Modifiability,"ncludes; Libraries. Function documentation; TEveProjection(); Constructor. void ProjectPointfv(Float_t* v, Float_t d); Project float array. void ProjectPointdv(Double_t* v, Float_t d); Project double array.; This is a bit piggish as we convert the doubles to floats and back. void ProjectVector(TEveVector& v, Float_t d); Project TEveVector. void ProjectPointfv(const TEveTrans* t, const Float_t* p, Float_t* v, Float_t d); Project float array, converting it to global coordinate system first if; transformation matrix is set. void ProjectPointdv(const TEveTrans* t, const Double_t* p, Double_t* v, Float_t d); Project double array, converting it to global coordinate system first if; transformation matrix is set.; This is a bit piggish as we convert the doubles to floats and back. void ProjectVector(const TEveTrans* t, TEveVector& v, Float_t d); Project TEveVector, converting it to global coordinate system first if; transformation matrix is set. void PreScaleVariable(Int_t dim, Float_t& v); Pre-scale single variable with pre-scale entry dim. void PreScalePoint(Float_t& x, Float_t& y); Pre-scale point (x, y) in projected coordinates for 2D projections:; RhoZ ~ (rho, z); RPhi ~ (r, phi), scaling phi doesn't make much sense. void PreScalePoint(Float_t& x, Float_t& y, Float_t& z); Pre-scale point (x, y, z) in projected coordinates for 3D projection. void AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); Add new scaling range for given coordinate.; Arguments:; coord 0 ~ x, 1 ~ y, 2 ~ z; value value of input coordinate from which to apply this scale;; scale the scale to apply from value onwards. NOTE: If pre-scaling is combined with center-displaced then; the scale of the central region should be 1. This limitation; can be removed but will cost CPU. void ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); Change scale for given entry and coordinate. NOTE: If the first entry you created used other value than 0,; one entry (covering range from 0 to this v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveProjection.html:5955,variab,variable,5955,root/html602/TEveProjection.html,https://root.cern,https://root.cern/root/html602/TEveProjection.html,4,['variab'],['variable']
Modifiability,"ncluding the buffer). void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the; product operator construction. void calcParams(); (Re)calculate effective parameters of this p.d.f. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); calcParams() ;. RooFFTConvPdf(); coverity[UNINIT_CTOR]. TObject* clone(const char* newname) const; { return new RooFFTConvPdf(*this,newname); }. void setShift(Double_t val1, Double_t val2); { _shift1 = val1 ; _shift2 = val2 ; }. void setCacheObservables(const RooArgSet& obs); { _cacheObs.removeAll() ; _cacheObs.add(obs) ; }. const RooArgSet& cacheObservables() const; { return _cacheObs ; }. Double_t bufferFraction() const; Return value of buffer fraction applied in FFT calculation array beyond either; end of the observable domain to reduce cyclical effects. BufStrat bufferStrategy() const; Return the strategy currently used to fill the buffer:; 'Extend' means is that the input p.d.f convolution observable range is widened to include the buffer range; 'Flat' means that the buffer is filled with the p.d.f. value at the boundary of the observable range; 'Mirror' means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary. Int_t getMaxVal(const RooArgSet& vars) const; Propagate maximum value estimate of pdf1 as convolution can only result in lower max values. { return _pdf1.arg().getMaxVal(vars) ; }. Double_t maxVal(Int_t code) const; { return _pdf1.arg().maxVal(code) ; }. Double_t evaluate() const; { RooArgSet dummy(_x.arg()) ; return getVal(&dummy) ; }. PdfCacheElem* createCache(const RooArgSet* nset) const. » Last changed: Tue Jun 30 14:32:52 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFFTConvPdf.html:57545,Extend,Extend,57545,root/html602/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html602/RooFFTConvPdf.html,1,['Extend'],['Extend']
Modifiability,"ncluding the buffer). void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the; product operator construction. void calcParams(); (Re)calculate effective parameters of this p.d.f. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); calcParams() ;. RooFFTConvPdf(); coverity[UNINIT_CTOR]. TObject* clone(const char* newname) const; { return new RooFFTConvPdf(*this,newname); }. void setShift(Double_t val1, Double_t val2); { _shift1 = val1 ; _shift2 = val2 ; }. void setCacheObservables(const RooArgSet& obs); { _cacheObs.removeAll() ; _cacheObs.add(obs) ; }. const RooArgSet& cacheObservables() const; { return _cacheObs ; }. Double_t bufferFraction() const; Return value of buffer fraction applied in FFT calculation array beyond either; end of the observable domain to reduce cyclical effects. BufStrat bufferStrategy() const; Return the strategy currently used to fill the buffer:; 'Extend' means is that the input p.d.f convolution observable range is widened to include the buffer range; 'Flat' means that the buffer is filled with the p.d.f. value at the boundary of the observable range; 'Mirror' means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary. Int_t getMaxVal(const RooArgSet& vars) const; Propagate maximum value estimate of pdf1 as convolution can only result in lower max values. { return _pdf1.arg().getMaxVal(vars) ; }. Double_t maxVal(Int_t code) const; { return _pdf1.arg().maxVal(code) ; }. Double_t evaluate() const; { RooArgSet dummy(_x.arg()) ; return getVal(&dummy) ; }. PdfCacheElem* createCache(const RooArgSet* nset) const. » Last changed: Tue Mar 10 17:16:43 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFFTConvPdf.html:55799,Extend,Extend,55799,root/html534/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html534/RooFFTConvPdf.html,1,['Extend'],['Extend']
Modifiability,"ncmode=kTRUE);  normal constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/gui/webdisplay/src/RWebWindowWSHandler.hxx>. Inheritance diagram for ROOT::RWebWindowWSHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RWebWindowWSHandler(). ROOT::RWebWindowWSHandler::RWebWindowWSHandler ; (; RWebWindow & ; wind, . const char * ; name . ). inline . constructor ; Definition at line 126 of file RWebWindowWSHandler.hxx. ◆ ~RWebWindowWSHandler(). ROOT::RWebWindowWSHandler::~RWebWindowWSHandler ; (; ). overridedefault . Member Function Documentation. ◆ AllowMTProcess(). Bool_t ROOT::RWebWindowWSHandler::AllowMTProcess ; (; ); const. inlineoverridevirtual . Allow processing of WS actions in arbitrary thread. ; Reimplemented from THttpWSHandler.; Definition at line 149 of file RWebWindowWSHandler.hxx. ◆ Al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindowWSHandler.html:14104,inherit,inherited,14104,doc/master/classROOT_1_1RWebWindowWSHandler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindowWSHandler.html,2,['inherit'],['inherited']
Modifiability,"ncmode=kTRUE);  normal constructor ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/gui/webdisplay/src/RWebWindowWSHandler.hxx>. Inheritance diagram for ROOT::RWebWindowWSHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RWebWindowWSHandler(). ROOT::RWebWindowWSHandler::RWebWindowWSHandler ; (; RWebWindow & ; wind, . const char * ; name . ). inline . constructor ; Definition at line 126 of file RWebWindowWSHandler.hxx. ◆ ~RWebWindowWSHandler(). ROOT::RWebWindowWSHandler::~RWebWindowWSHandler ; (; ). overridedefault . Member Function Documentation. ◆ AllowMTProcess(). Bool_t ROOT::RWebWindowWSHandler::AllowMTProcess ; (; ); const. inlineoverridevirtual . Allow processing of WS actions in arbitrary thread. ; Reimplemented from THttpWSHandler.; Definition at line 149 of file RWebWindowWSHandler.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindowWSHandler.html:14103,inherit,inherited,14103,doc/v632/classROOT_1_1RWebWindowWSHandler.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindowWSHandler.html,2,['inherit'],['inherited']
Modifiability,"nction = Relu; Layer 6 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 13.2274; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 1.28042 0.721714 1.40039 0.112743 931.931 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.744775 0.695682 1.39558 0.112793 935.465 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.694124 0.686492 1.40809 0.112179 925.986 0; : 4 | 0.679848 0.699399 1.40006 0.109116 929.552 1; : 5 Minimum Test error found - save the configuration ; : 5 | 0.670651 0.682024 1.40299 0.112234 929.685 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.652355 0.665731 1.40537 0.11341 928.823 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.647198 0.663594 1.40991 0.11661 927.858 0; : 8 | 0.624112 0.674678 1.40336 0.112656 929.728 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.597489 0.647076 1.41653 0.119736 925.361 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.561268 0.630455 1.40233 0.116045 932.919 0; : ; : Elapsed time for training with 1600 events: 14.2 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_CNN_CPU : [dataset] : Evaluation of TMVA_CNN_CPU on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.629 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_CNN_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:14799,config,configuration,14799,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['config'],['configuration']
Modifiability,"nction TCandle::SetWhiskerRange(double) the whisker definition w=1 will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of the lower whisker to the upper whisker in order to cover 95% of the distribution inside that candle. The static function will affect all candle-charts in the running program. Default is 1.; If the distribution is large enough and gaussian shaped, the maximum length of the whisker will be located at \( \pm 2.698 \sigma \) (when using the 1.5*iqr-definition (w=2), where \( \sigma \) is the standard deviation (see picture above). In that case 99.3% of the total distribution will be covered by the box and the whiskers, whereas 0.7% are represented by the outliers.; The Anchors; The anchors have no special meaning in terms of statistical calculation. They mark the end of the whiskers and they have the width of the box. Both representation with and without anchors are common.; The Points; Depending on the configuration the points can have different meanings:; If p=1 the points represent the outliers. If they are shown, it means some parts of the underlying distribution are not covered by the whiskers. This can only occur when the whiskers are set to option w=2. Here the whiskers can have a maximum length of \( 1.5 \times iqr \). So any points outside the whiskers will be drawn as outliers. The outliers will be represented by crosses.; If p=2 all points in the distribution will be painted as crosses. This is useful for small datasets only (up to 10 or 20 points per candle). The outliers are shown along the candle. Because the underlying distribution is binned, is frequently occurs that a bin contains more than one value. Because of this the points will be randomly scattered within their bin along the candle axis. If the bin content for a bin is exactly 1 (usually this happens for the outliers) if will be drawn in the middle of the bin along the candle axis. As the maximum number of points per candle is limited by kNMax/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter.html:63410,config,configuration,63410,doc/master/classTHistPainter.html,https://root.cern,https://root.cern/doc/master/classTHistPainter.html,1,['config'],['configuration']
Modifiability,"nction binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t* xvector) const; Load the vector of variable values into the RooRealVars associated; as variables with the bound RooAbsReal function. Double_t operator()(const Double_t* xvector) const; Evaluate the bound RooAbsReal at the variable values provided in xvector. Double_t getMinLimit(UInt_t dimension) const; Return lower limit on i-th variable. Double_t getMaxLimit(UInt_t dimension) const; Return upper limit on i-th variable. const char* getName() const; Return name of function. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& , Double_t , Double_t ) const. std::list<Double_t>* binBoundaries(Int_t ) const. » Last changed: Fri Dec 2 14:26:59 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT sup",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealBinding.html:3179,variab,variables,3179,root/html532/RooRealBinding.html,https://root.cern,https://root.cern/root/html532/RooRealBinding.html,2,['variab'],['variables']
Modifiability,"nction binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t* xvector) const; Load the vector of variable values into the RooRealVars associated; as variables with the bound RooAbsReal function. Double_t operator()(const Double_t* xvector) const; Evaluate the bound RooAbsReal at the variable values provided in xvector. Double_t getMinLimit(UInt_t dimension) const; Return lower limit on i-th variable. Double_t getMaxLimit(UInt_t dimension) const; Return upper limit on i-th variable. const char* getName() const; Return name of function. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& , Double_t , Double_t ) const. std::list<Double_t>* binBoundaries(Int_t ) const. » Last changed: Tue Mar 10 17:18:43 2015 » Last generated: 2015-03-10 17:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealBinding.html:3273,variab,variables,3273,root/html534/RooRealBinding.html,https://root.cern,https://root.cern/root/html534/RooRealBinding.html,2,['variab'],['variables']
Modifiability,"nction binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t[] xvector) const; Load the vector of variable values into the RooRealVars associated; as variables with the bound RooAbsReal function. Double_t operator()(const Double_t[] xvector) const; Evaluate the bound RooAbsReal at the variable values provided in xvector. Double_t getMinLimit(UInt_t dimension) const; Return lower limit on i-th variable. Double_t getMaxLimit(UInt_t dimension) const; Return upper limit on i-th variable. const char* getName() const; Return name of function. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& , Double_t , Double_t ) const. std::list<Double_t>* binBoundaries(Int_t ) const. » Last changed: Tue Jun 2 15:33:19 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooRealBinding.html:3282,variab,variables,3282,root/html604/RooRealBinding.html,https://root.cern,https://root.cern/root/html604/RooRealBinding.html,2,['variab'],['variables']
Modifiability,"nction binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. RooRealBinding(const RooRealBinding& other, const RooArgSet* nset = 0); Construct a lightweight function binding of RooAbsReal func to; variables 'vars'. Use the provided nset as normalization set to; be passed to RooAbsReal::getVal() If rangeName is not null, use; the range of with that name as range associated with the; variables of this function binding. If clipInvalid is true,; values requested to the function binding that are outside the; defined range of the variables are clipped to fit in the defined; range. ~RooRealBinding(); Destructor. void saveXVec() const; Save value of all variables. void restoreXVec() const; Restore value of all variables to previously; saved values by saveXVec(). void loadValues(const Double_t[] xvector) const; Load the vector of variable values into the RooRealVars associated; as variables with the bound RooAbsReal function. Double_t operator()(const Double_t[] xvector) const; Evaluate the bound RooAbsReal at the variable values provided in xvector. Double_t getMinLimit(UInt_t dimension) const; Return lower limit on i-th variable. Double_t getMaxLimit(UInt_t dimension) const; Return upper limit on i-th variable. const char* getName() const; Return name of function. std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& , Double_t , Double_t ) const. std::list<Double_t>* binBoundaries(Int_t ) const. » Last changed: Tue Jun 30 14:35:16 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRealBinding.html:3282,variab,variables,3282,root/html602/RooRealBinding.html,https://root.cern,https://root.cern/root/html602/RooRealBinding.html,2,['variab'],['variables']
Modifiability,"nction defines the analytical integral translation for the class. ;  ; TObject * clone (const char *newname) const override;  ; RooArgList const & coefList () const;  Get the coefficient list. ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Advertise to RooFit that this function can be analytically integrated. ;  ; TClass * IsA () const override;  ; bool isReducerNode () const override;  ; int lowestOrder () const;  Return the order for the first coefficient in the list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ; RooAbsReal const & x () const;  Get the x variable. ;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::uni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolynomial.html:2660,inherit,inherited,2660,doc/master/classRooPolynomial.html,https://root.cern,https://root.cern/doc/master/classRooPolynomial.html,1,['inherit'],['inherited']
Modifiability,"nction members; data members; class charts. ROOT; » GRAF3D; » GL; » TGLPShapeRef. class TGLPShapeRef. Base class for references to TGLPysicalShape that need to be notified; when the shape is destroyed.; Could also deliver 'change' notifications. Function Members (Methods); public:. virtual~TGLPShapeRef(); static TClass*Class(); TGLPhysicalShape*GetPShape() const; virtual TClass*IsA() const; virtual voidPShapeModified(); virtual voidSetPShape(TGLPhysicalShape* shape); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGLPShapeRef(); TGLPShapeRef(TGLPhysicalShape* shape). private:. TGLPShapeRef&operator=(const TGLPShapeRef&); TGLPShapeRef(const TGLPShapeRef&). Data Members; protected:. TGLPhysicalShape*fPShapePointer to referenced physical shape. private:. TGLPShapeRef*fNextPSRefInternal pointer to the next reference (used by TGLPhysicalShape directly). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPShapeRef(); Default contructor. TGLPShapeRef(TGLPhysicalShape* shape); Constructor with known shape - reference it. ~TGLPShapeRef(); Destructor - unreference the shape if set. void SetPShape(TGLPhysicalShape* shape); Set the shape. Unreference the old and reference the new.; This is virtual so that sub-classes can perform other tasks; on change. This function should be called first from there. This is also called from destructor of the refereced physical; shape with 0 argument. void PShapeModified(); This is called from physical shape when it is modified.; Sub-classes can override and take appropriate action. TGLPShapeRef(const TGLPShapeRef& ). TGLPShapeRef& operator=(const TGLPShapeRef& ). TGLPhysicalShape * GetPShape() const; { return fPShape; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:52; This page has been automati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLPShapeRef.html:1154,Inherit,Inheritance,1154,root/html604/TGLPShapeRef.html,https://root.cern,https://root.cern/root/html604/TGLPShapeRef.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nction members; data members; class charts. ROOT; » GRAF3D; » GL; » TGLPShapeRef. class TGLPShapeRef. Base class for references to TGLPysicalShape that need to be notified; when the shape is destroyed.; Could also deliver 'change' notifications. Function Members (Methods); public:. virtual~TGLPShapeRef(); static TClass*Class(); TGLPhysicalShape*GetPShape() const; virtual TClass*IsA() const; virtual voidPShapeModified(); virtual voidSetPShape(TGLPhysicalShape* shape); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGLPShapeRef(); TGLPShapeRef(TGLPhysicalShape* shape). private:. TGLPShapeRef&operator=(const TGLPShapeRef&); TGLPShapeRef(const TGLPShapeRef&). Data Members; protected:. TGLPhysicalShape*fPShapePointer to referenced physical shape. private:. TGLPShapeRef*fNextPSRefInternal pointer to the next reference (used by TGLPhysicalShape directly). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPShapeRef(); Default contructor. TGLPShapeRef(TGLPhysicalShape* shape); Constructor with known shape - reference it. ~TGLPShapeRef(); Destructor - unreference the shape if set. void SetPShape(TGLPhysicalShape* shape); Set the shape. Unreference the old and reference the new.; This is virtual so that sub-classes can perform other tasks; on change. This function should be called first from there. This is also called from destructor of the refereced physical; shape with 0 argument. void PShapeModified(); This is called from physical shape when it is modified.; Sub-classes can override and take appropriate action. TGLPShapeRef(const TGLPShapeRef& ). TGLPShapeRef& operator=(const TGLPShapeRef& ). TGLPhysicalShape * GetPShape() const; { return fPShape; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:53; This page has been automati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLPShapeRef.html:1154,Inherit,Inheritance,1154,root/html602/TGLPShapeRef.html,https://root.cern,https://root.cern/root/html602/TGLPShapeRef.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nction members; data members; class charts. ROOT; » GUI; » GUI; » TGPasswdDialog. class TGPasswdDialog. TGPasswdDialog. Graphic dialog to enter passwords. Usage:. {; Buffer for the passwd; char pwdbuf[128]. Open the dialog box; TGPasswdDialog dialog(""My prompt"", pwdbuf, 128);. Wait until the user is done; while (gROOT->IsInterrupted()); gSystem->DispatchOneEvent(kFALSE);. Password is now in pwdbuf. }. Function Members (Methods); public:. TGPasswdDialog(const TGPasswdDialog&); TGPasswdDialog(const char* prompt, char* pwdbuf, Int_t pwdlenmax, UInt_t w = 400, UInt_t h = 400); virtual~TGPasswdDialog(); static TClass*Class(); voidCloseWindow(); voidDoClose(); virtual TClass*IsA() const; TGPasswdDialog&operator=(const TGPasswdDialog&); voidReturnPressed(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. TGTransientFrame*fDialogmain frame of this widget; TGTextButton*fOkOk button; TGTextEntry*fPasswdPassword TextEntry; TGTextBuffer*fPasswdTextPasswd Buffer; char*fPwdBufbuffer where to store the passwd; Int_tfPwdLenMaxpasswd buffer length. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGPasswdDialog(const char* prompt, char* pwdbuf, Int_t pwdlenmax, UInt_t w = 400, UInt_t h = 400); Create an editor in a dialog. ~TGPasswdDialog(); Delete log window. void DoClose(); Handle close button. void CloseWindow(); Called when closed via window manager action. void ReturnPressed(); Handle return. TGPasswdDialog(const char* prompt, char* pwdbuf, Int_t pwdlenmax, UInt_t w = 400, UInt_t h = 400). » Author: G. Ganis 10/10/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id: TGPasswdDialog.h 23115 2008-04-10 13:35:37Z rdm $ » Last generated: 2011-11-03 20:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGPasswdDialog.html:1336,Inherit,Inheritance,1336,root/html532/TGPasswdDialog.html,https://root.cern,https://root.cern/root/html532/TGPasswdDialog.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nction members; data members; class charts. ROOT; » TMVA; » TMVA::SdivSqrtSplusB. class TMVA::SdivSqrtSplusB: public TMVA::SeparationBase. Function Members (Methods); public:. virtual~SdivSqrtSplusB(); static TClass*Class(); const TString&TMVA::SeparationBase::GetName(); virtual Double_tGetSeparationGain(const Double_t& nSelS, const Double_t& nSelB, const Double_t& nTotS, const Double_t& nTotB); virtual Double_tGetSeparationIndex(const Double_t& s, const Double_t& b); virtual TClass*IsA() const; TMVA::SdivSqrtSplusB&operator=(const TMVA::SdivSqrtSplusB&); TMVA::SdivSqrtSplusBSdivSqrtSplusB(); TMVA::SdivSqrtSplusBSdivSqrtSplusB(const TMVA::SdivSqrtSplusB& g); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; protected:. TStringTMVA::SeparationBase::fNamename of the concrete Separation Index impementation; Double_tTMVA::SeparationBase::fPrecisionCut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Double_t GetSeparationIndex(const Double_t& s, const Double_t& b); Index = S/sqrt(S+B) (statistical significance). Double_t GetSeparationGain(const Double_t& nSelS, const Double_t& nSelB, const Double_t& nTotS, const Double_t& nTotB); Separation Gain:; the measure of how the quality of separation of the sample increases; by splitting the sample e.g. into a ""left-node"" and a ""right-node""; (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right); this is then the quality crition which is optimized for when trying; to increase the information in the system (making the best selection. SdivSqrtSplusB(); constructor for the ""statistical significance"" index. { fName = ""StatSig""; }. SdivSqrtSplusB(const TMVA::SdivSqrtSplusB& g); copy constructor. {}. virtual ~SdivSqrtSplusB(); destructor. {}. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__SdivSqrtSplusB.html:1162,Inherit,Inheritance,1162,root/html534/TMVA__SdivSqrtSplusB.html,https://root.cern,https://root.cern/root/html534/TMVA__SdivSqrtSplusB.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nction p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFIter ; RooFactoryWSTool RooFit class code and instance factory ; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGamma Gaussian PDF; RooGaussKro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ClassIndex.html:35308,extend,extended,35308,root/html532/ClassIndex.html,https://root.cern,https://root.cern/root/html532/ClassIndex.html,1,['extend'],['extended']
Modifiability,"nction p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFactoryWSTool RooFit class code and instance factory ; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGamma Gaussian PDF; RooGaussKronrodIntegra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:34775,extend,extended,34775,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,2,['extend'],['extended']
Modifiability,"nction p.d.f ; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass difference background PDF; RooEffGenContext Context for generating a dataset from a PDF; RooEffProd Product operator p.d.f of (PDF x efficiency) implementing optimized generator context; RooEfficiency Generic PDF defined by string expression and list of variables; RooEllipse 2-dimensional contour; RooErrorVar RooAbsRealLValue representation of an error of a RooRealVar; RooExpensiveObjectCache Singleton class that serves as session repository for expensive objects; RooExpensiveObjectCache::ExpensiveObject Cache element containing expensive object and parameter values for which object is valid; RooExponential Exponential PDF; RooExtendPdf Wrapper p.d.f adding an extended likelihood term to an existing p.d.f; RooExtendedTerm Meta-p.d.f flat in all observables introducing only extended ML term; RooFFTConvPdf Convolution operator p.d.f based on numeric Fourier transforms; RooFactoryWSTool RooFit class code and instance factory ; RooFit ; RooFitResult Container class for fit result; RooFitShortHand ; RooFoamGenerator Context for generating a dataset from a PDF using the TFoam class; RooFormula TFormula derived class interfacing with RooAbsArg objects; RooFormulaVar Real-valued function of other RooAbsArgs calculated by a TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGaussKronrodIntegrator1D 1-dimensional Gau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:33576,extend,extended,33576,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,2,['extend'],['extended']
Modifiability,"nction typedefROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; IModelFunction typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; IsAGradFCN()ROOT::Math::BasicFitMethodFunction< DerivFunType >inlinestatic; IsAGradFCN()ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; kLeastSquare enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kLogLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kPoissonLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kUndefined enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; LogLikelihoodFCN(const std::shared_ptr< UnBinData > &data, const std::shared_ptr< IModelFunction > &func, int weight=0, bool extended=false, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inline; LogLikelihoodFCN(const UnBinData &data, const IModelFunction &func, int weight=0, bool extended=false, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inline; LogLikelihoodFCN(const LogLikelihoodFCN &f)ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inline; ModelFunction() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; ModelFunctionPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; NCalls() constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; NDim() const overrideROOT::Math::BasicFitMethodFunction< DerivFunType >inline; NFitPoints() constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; NPoints() constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; operator=(const LogLikelihoodFCN &rhs)ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inline; ResetNCalls()ROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; SetData(const std::shared_ptr< Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html:3656,extend,extended,3656,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,1,['extend'],['extended']
Modifiability,"nction& f); voidSetOptions(const ROOT::Math::IntegratorMultiDimOptions& opt); voidSetRelTolerance(double relTol); intStatus() const. protected:. ROOT::Math::VirtualIntegratorMultiDim*CreateIntegrator(ROOT::Math::IntegrationMultiDim::Type type, double absTol, double relTol, unsigned int ncall). private:. ROOT::Math::IntegratorMultiDimIntegratorMultiDim(const ROOT::Math::IntegratorMultiDim&); ROOT::Math::IntegratorMultiDim&operator=(const ROOT::Math::IntegratorMultiDim&). Data Members; private:. auto_ptr<ROOT::Math::IBaseFunctionMultiDim>fFuncpointer to owned function; ROOT::Math::VirtualIntegratorMultiDim*fIntegratorpointer to multi-dimensional integrator base class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; IntegratorMultiDim(ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int ncall = 0); Generic constructor of multi dimensional Integrator. By default uses the Adaptive integration method. @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. In case no parameter values are passed the default ones used in IntegratorMultiDimOptions are used. IntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int ncall = 0); Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon methods). SetFunction(const ROOT::Math::IMultiGenFunction& f). virtual ~IntegratorMultiDim(); remove template constru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IntegratorMultiDim.html:2685,Adapt,Adaptive,2685,root/html532/ROOT__Math__IntegratorMultiDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IntegratorMultiDim.html,2,['Adapt'],['Adaptive']
Modifiability,"nction(const ROOT::Fit::Fitter::IModelFunction& func, bool useGrad); voidDoUpdateFitConfig(); intGetNCallsFromFCN(). private:. ROOT::Fit::FitterFitter(const ROOT::Fit::Fitter&); ROOT::Fit::Fitter&operator=(const ROOT::Fit::Fitter& rhs). Data Members; private:. boolfBinFitflag to indicate if fit is binned ; ROOT::Fit::FitConfigfConfigfitter configuration (options and parameter settings); intfDataSizesize of data sets (need for Fumili or LM fitters); intfFitTypetype of fit (0 undefined, 1 least square, 2 likelihood); ROOT::Fit::Fitter::IModelFunction*fFunccopy of the fitted function containing on output the fit result (managed by FitResult); auto_ptr<ROOT::Math::Minimizer>fMinimizer! pointer to used minimizer; auto_ptr<ROOT::Math::IMultiGenFunction>fObjFunction! pointer to used objective function; auto_ptr<ROOT::Fit::FitResult>fResult! pointer to the object containing the result of the fit; boolfUseGradientflag to indicate if using gradient or not. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). bool SetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fitter(). Default constructor. ~Fitter(). Destructor. Fitter(const ROOT::Fit::Fitter& ). Copy constructor (disabled, class is not copyable). bool Fit( const Data & data, const Function & func ). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(const ROOT::Fit::BinData& data). bool Fit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit (default method). return DoLeastSquareFit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__Fitter.html:5796,Inherit,Inheritance,5796,root/html532/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__Fitter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nction. ; Definition at line 50 of file TMultiDimFit.h. ◆ fMinQuantity. Double_t TMultiDimFit::fMinQuantity. protected . Min value of dependent quantity. ; Definition at line 32 of file TMultiDimFit.h. ◆ fMinRelativeError. Double_t TMultiDimFit::fMinRelativeError. protected . Min relative error accepted. ; Definition at line 53 of file TMultiDimFit.h. ◆ fMinResidual. Double_t TMultiDimFit::fMinResidual. protected . Min residual value. ; Definition at line 74 of file TMultiDimFit.h. ◆ fMinResidualRow. Int_t TMultiDimFit::fMinResidualRow. protected . Row giving min residual. ; Definition at line 76 of file TMultiDimFit.h. ◆ fMinVariables. TVectorD TMultiDimFit::fMinVariables. protected . min value of independent variables ; Definition at line 40 of file TMultiDimFit.h. ◆ fNCoefficients. Int_t TMultiDimFit::fNCoefficients. protected . Dimension of model coefficients. ; Definition at line 79 of file TMultiDimFit.h. ◆ fNVariables. Int_t TMultiDimFit::fNVariables. protected . Number of independent variables. ; Definition at line 37 of file TMultiDimFit.h. ◆ fOrthCoefficients. TVectorD TMultiDimFit::fOrthCoefficients. protected . The model coefficients. ; Definition at line 80 of file TMultiDimFit.h. ◆ fOrthCurvatureMatrix. TMatrixD TMultiDimFit::fOrthCurvatureMatrix. protected . Model matrix. ; Definition at line 81 of file TMultiDimFit.h. ◆ fOrthFunctionNorms. TVectorD TMultiDimFit::fOrthFunctionNorms. protected . Norm of the evaluated functions. ; Definition at line 65 of file TMultiDimFit.h. ◆ fOrthFunctions. TMatrixD TMultiDimFit::fOrthFunctions. protected . As above, but orthogonalised. ; Definition at line 64 of file TMultiDimFit.h. ◆ fParameterisationCode. Int_t TMultiDimFit::fParameterisationCode. protected . Exit code of parameterisation. ; Definition at line 86 of file TMultiDimFit.h. ◆ fPolyType. EMDFPolyType TMultiDimFit::fPolyType. protected . Fit object (MINUIT) ; Type of polynomials to use ; Definition at line 103 of file TMultiDimFit.h. ◆ fPowerIndex. Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:65881,variab,variables,65881,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['variab'],['variables']
Modifiability,"nction; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is deallocated. void * AllocHook(size_t size, const void* ); AllocHook - a static function; A glibc memory allocation hook. void FreeHook(void* ptr, const void* ); FreeHook - a static function; A glibc memory deallocation hook. Int_t generateBTID(UChar_t* CRCdigest, Int_t stackEntries, void** stackPointers); An internal function, which returns a bitid for a corresponding CRC digest; cache variables. void AddPointer(void* ptr, Int_t size); Add pointer to table.; This method is called every time when any of the hooks are triggered.; The memory de-/allocation information will is recorded. void FillTree(); loop on all entries in the buffer and fill the output Tree; entries with alloc and free in the buffer are eliminated. TMemStatMng(). void SetUseGNUBuiltinBacktrace(Bool_t newVal); stack data members. » Author: Anar Manafov (A.Manafov@gsi.de) 2008-03-02 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/memstat:$Id: TMemStatMng.h 36382 2010-10-20 12:27:40Z brun $ » Last generated: 2010-11-27 09:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/memstat__TMemStatMng.html:8389,variab,variables,8389,root/html528/memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html528/memstat__TMemStatMng.html,1,['variab'],['variables']
Modifiability,"nction; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is deallocated. void * AllocHook(size_t size, const void* ); AllocHook - a static function; A glibc memory allocation hook. void FreeHook(void* ptr, const void* ); FreeHook - a static function; A glibc memory deallocation hook. Int_t generateBTID(UChar_t* CRCdigest, Int_t stackEntries, void** stackPointers); An internal function, which returns a bitid for a corresponding CRC digest; cache variables. void AddPointer(void* ptr, Int_t size); Add pointer to table.; This method is called every time when any of the hooks are triggered.; The memory de-/allocation information will is recorded. void FillTree(); loop on all entries in the buffer and fill the output Tree; entries with alloc and free in the buffer are eliminated. TMemStatMng(). void SetUseGNUBuiltinBacktrace(Bool_t newVal); stack data members. » Author: Anar Manafov (A.Manafov@gsi.de) 2008-03-02 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/memstat:$Id: TMemStatMng.h 36382 2010-10-20 12:27:40Z brun $ » Last generated: 2011-07-04 15:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/memstat__TMemStatMng.html:8458,variab,variables,8458,root/html530/memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html530/memstat__TMemStatMng.html,1,['variab'],['variables']
Modifiability,"nction; This method stops the manager,; flashes all the buffered data and closes the output tree. void SetBufferSize(Int_t buffersize); Set the maximum number of alloc/free calls to be buffered.; if the alloc and free are in the buffer, the corresponding entries; are not saved tio the Tree, reducing considerably the Tree output size. void SetMaxCalls(Int_t maxcalls); Set the maximum number of new/delete registered in the output Tree. void Enable(); Enable memory hooks. void Disable(); Disble memory hooks. void MacAllocHook(void* ptr, size_t size); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is allocated. void MacFreeHook(void* ptr); AllocHook - a static function; a special memory hook for Mac OS X memory zones.; Triggered when memory is deallocated. void * AllocHook(size_t size, const void* ); AllocHook - a static function; A glibc memory allocation hook. void FreeHook(void* ptr, const void* ); FreeHook - a static function; A glibc memory deallocation hook. Int_t generateBTID(UChar_t* CRCdigest, Int_t stackEntries, void** stackPointers); An internal function, which returns a bitid for a corresponding CRC digest; cache variables. void AddPointer(void* ptr, Int_t size); Add pointer to table.; This method is called every time when any of the hooks are triggered.; The memory de-/allocation information will is recorded. void FillTree(); loop on all entries in the buffer and fill the output Tree; entries with alloc and free in the buffer are eliminated. TMemStatMng(). void SetUseGNUBuiltinBacktrace(Bool_t newVal); stack data members. » Author: Anar Manafov (A.Manafov@gsi.de) 2008-03-02 » Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; » Last changed: root/memstat:$Id: TMemStatMng.h 36382 2010-10-20 12:27:40Z brun $ » Last generated: 2011-11-03 20:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/memstat__TMemStatMng.html:8458,variab,variables,8458,root/html532/memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html532/memstat__TMemStatMng.html,1,['variab'],['variables']
Modifiability,"nctionMultiDimTempl< T > Class Template ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::IParametricGradFunctionMultiDimTempl< T >Interface (abstract class) for parametric gradient multi-dimensional functions providing in addition to function evaluation with respect to the coordinates also the gradient with respect to the parameters, via the method ParameterGradient. ; It is a derived class from ROOT::Math::IParametricFunctionMultiDim.; The pure private virtual method DoParameterGradient must be implemented by the derived classes in addition to those inherited by the base abstract classes. ; Definition at line 227 of file IParamFunction.h. Public Types; using BaseFunc = typename IParametricFunctionMultiDimTempl< T >::BaseFunc;  ; using BaseGradFunc = IGradientFunctionMultiDimTempl< T >;  ; using BaseParamFunc = IParametricFunctionMultiDimTempl< T >;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  ~IParametricGradFunctionMultiDimTempl () override;  Virtual Destructor (no operations) ;  ; virtual bool HasParameterHessian () const;  ; T operator() (const T *x) const;  ; T operator() (const T *x, const double *p) const;  ; T ParameterDerivative (const T *x, const double *p, unsigned int ipar=0) const;  Evaluate the partial derivative w.r.t a parameter ipar from values and parameters. ;  ; T ParameterDerivative (const T *x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values. ;  ; virtual bool ParameterG2 (const T *, const double *, T *) const;  Evaluate all the second derivatives (diagonal ones) of the function with respect to the parameters at a point x. ;  ; virtual void P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html:1295,inherit,inherited,1295,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,2,['inherit'],['inherited']
Modifiability,"nctionOneDim&operator=(const ROOT::Math::IParametricGradFunctionOneDim&); doubleParameterDerivative(double x, unsigned int ipar = 0) const; doubleParameterDerivative(const double* x, unsigned int ipar = 0) const; doubleParameterDerivative(double x, const double* p, unsigned int ipar = 0) const; doubleParameterDerivative(const double* x, const double* p, unsigned int ipar = 0) const; voidParameterGradient(double x, double* grad) const; voidParameterGradient(const double* x, double* grad) const; virtual voidParameterGradient(double x, const double* p, double* grad) const; voidParameterGradient(const double* x, const double* p, double* grad) const; virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*ROOT::Math::IBaseParam::Parameters() const; virtual voidROOT::Math::IBaseParam::SetParameters(const double* p). private:. virtual doubleDoParameterDerivative(double x, const double* p, unsigned int ipar) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void ParameterGradient(const double* x, const double* p, double* grad) const. Evaluate the all the derivatives (gradient vector) of the function with respect to the parameters at a point x.; It is optional to be implemented by the derived classes for better efficiency. double ParameterDerivative(const double* x, const double* p, unsigned int ipar = 0) const. Evaluate the partial derivative w.r.t a parameter ipar from values and parameters. return DoParameterDerivative(x, p, ipar). void ParameterGradient(const double* x, double* grad) const. Evaluate all derivatives using cached parameter values. return ParameterGradient(x, Parameters(), grad). double ParameterDerivative(const double* x, unsigned int ipar = 0) const. Evaluate partial derivative using cached parameter values. virtual ~IParametricGradFunctionOneDim(). Virtual Destructor (no operations). {}. void ParameterGradient(double x, const double* p, double* grad) const. Evaluate th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IParametricGradFunctionOneDim.html:2534,Inherit,Inheritance,2534,root/html532/ROOT__Math__IParametricGradFunctionOneDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IParametricGradFunctionOneDim.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nctionTemplates()Definition TROOT.cxx:1771; TROOT::SetExecutingMacrovoid SetExecutingMacro(Bool_t flag=kTRUE)Definition TROOT.h:324; TROOT::RegisterModulestatic void RegisterModule(const char *modulename, const char **headers, const char **includePaths, const char *payLoadCode, const char *fwdDeclCode, void(*triggerFunc)(), const FwdDeclArgsToKeepCollection_t &fwdDeclsArgToSkip, const char **classesHeaders, bool hasCxxModule=false)Called by static dictionary initialization to register clang modules for headers.Definition TROOT.cxx:2535; TROOT::FindObjectTObject * FindObject(const char *name) const overrideReturns address of a ROOT object if it exists.Definition TROOT.cxx:1313; TROOT::fClassesTCollection * fClassesList of classes definition.Definition TROOT.h:140; TROOT::SetInterruptvoid SetInterrupt(Bool_t flag=kTRUE)Definition TROOT.h:326; TROOT::fEditHistogramsBool_t fEditHistogramsTrue if histograms can be edited with the mouse.Definition TROOT.h:130; TROOT::fGlobalsTListOfDataMembers * fGlobalsList of global variables.Definition TROOT.h:143; TROOT::fFuncTemplateTListOfFunctionTemplates * fFuncTemplateList of global function templates.Definition TROOT.h:142; TROOT::GetClipboardTSeqCollection * GetClipboard() constDefinition TROOT.h:254; TROOT::fTimerInt_t fTimerTimer flag.Definition TROOT.h:123; TROOT::fDataSetsTSeqCollection * fDataSetsList of data sets (TDSet or TChain)Definition TROOT.h:164; TROOT::fConfigOptionsTString fConfigOptionsROOT ./configure set build options.Definition TROOT.h:111; TROOT::GetStyleTStyle * GetStyle(const char *name) constReturn pointer to style with name.Definition TROOT.cxx:1579; TROOT::GetListOfEnumsTCollection * GetListOfEnums(Bool_t load=kFALSE)Definition TROOT.cxx:1754; TROOT::ProcessLineSyncLongptr_t ProcessLineSync(const char *line, Int_t *error=nullptr)Process interpreter command via TApplication::ProcessLine().Definition TROOT.cxx:2390; TROOT::InitInterpretervoid InitInterpreter()Initialize interpreter (cling)Definition TROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:36292,variab,variables,36292,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,2,['variab'],['variables']
Modifiability,"nction_v typedefROOT::Fit::Fitter; IModelFunctionTempl typedefROOT::Fit::Fitter; IsBinFit() constROOT::Fit::Fitterinline; LeastSquareFit(const BinData &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LeastSquareFit(const std::shared_ptr< BinData > &data, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const BinData &data, bool extended=true, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const std::shared_ptr< BinData > &data, bool extended=true, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const UnBinData &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const std::shared_ptr< UnBinData > &data, bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterinline; LikelihoodFit(const Data &data, const Function &func, bool extended)ROOT::Fit::Fitterinline; LinearFit(const BinData &data)ROOT::Fit::Fitterinline; LinearFit(const std::shared_ptr< BinData > &data)ROOT::Fit::Fitterinline; MinuitFCN_t typedefROOT::Fit::Fitter; ObjFunction() constROOT::Fit::Fitterinlineprotected; operator=(const Fitter &)=deleteROOT::Fit::Fitter; Result() constROOT::Fit::Fitterinline; SetData(const std::shared_ptr< Data > &data)ROOT::Fit::Fitterinlineprotected; SetData(const Data &data)ROOT::Fit::Fitterinlineprotected; SetFCN(unsigned int npar, Function &fcn, const double *params=nullptr, unsigned int dataSize=0, int fitType=0)ROOT::Fit::Fitter; SetFCN(const ROOT::Math::IMultiGenFunction &fcn, const double *params=nullptr, unsigned int dataSize=0, int fitType=0)ROOT::Fit::Fitter; SetFCN(const ROOT::Math::IMultiGenFunction &fcn, const IModelFunction &func,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html:5133,extend,extended,5133,doc/master/classROOT_1_1Fit_1_1Fitter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html,1,['extend'],['extended']
Modifiability,"nctions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPave.h>. Inheritance diagram for TPave:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPave.html:17932,inherit,inherited,17932,doc/master/classTPave.html,https://root.cern,https://root.cern/doc/master/classTPave.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Bool_t fConstrained;  kTRUE if pointer is constrained to slider edges ;  ; Int_t fCz;  horizontal pointer position in pixel coordinates ;  ; const TGPicture * fPointerPic;  picture to draw pointer ;  ; Bool_t fRelative;  kTRUE if pointer position is relative to slider ;  ; Double_t fSCz;  vertical pointer position ;  ;  Protected Attributes inherited from TGDoubleHSlider; Int_t fXp;  horizontal slider x position in pixel coordinates ;  ;  Protected Attributes inherited from TGDoubleSlider; Bool_t fMarkEnds;  lines marking where stretch zones begin ;  ; Int_t fMove;  1: move min value 2: move max value 3: move min and max value 0: don't move any value ;  ; Double_t fPos;  logical position between fVmin and fVmax ;  ; Int_t fPressPoint;  mouse position at button press event ;  ; Double_t fPressSmax;  logical max position at button press event ;  ; Double_t fPressSmin;  logical min position at button press event ;  ; Int_t fRelPos;  slider position in pixel coordinates ;  ; Bool_t fReversedScale;  reverse which end is min and max ;  ; Int_t fScale;  tick mark scale ;  ; Int_t fScaleType;  tick mark scale type (no, downright, both) ;  ; const TGPicture * fSliderPic;  picture to draw slider ends ;  ; Double_t fSmax;  logical position of max value of Slider ;  ; Double_t fSmin;  logical position of min value of Slider ;  ; Double_t fVmax;  logical upper limit of slider ;  ; Double_t fVmin;  logical lower limit of slider ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame he",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTripleHSlider.html:28491,inherit,inherited,28491,doc/master/classTGTripleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGTripleHSlider.html,3,['inherit'],['inherited']
Modifiability,"nctions inherited from TGeoPatternFinder; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPatternSphPhi (const TGeoPatternSphPhi &pfc)=delete;  Sincos table. ;  ; Double_t * CreateSinCos ();  Create the sincos table if it does not exist. ;  ; TGeoPatternSphPhi & operator= (const TGeoPatternSphPhi &pfc)=delete;  ;  Protected Member Functions inherited from TGeoPatternFinder;  TGeoPatternFinder (const TGeoPatternFinder &);  Mutex for thread data. ;  ; TGeoPatternFinder & operator= (const TGeoPatternFinder &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; Double_t * fSinCos = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternSphPhi.html:11902,inherit,inherited,11902,doc/master/classTGeoPatternSphPhi.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternSphPhi.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fMaximum;  Maximum value if leaf range is specified. ;  ; Int_t fMinimum;  Minimum value if leaf range is specified. ;  ; Char_t ** fPointer;  ! Address of pointer to data buffer ;  ; Char_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafC.html:14336,inherit,inherited,14336,doc/master/classTLeafC.html,https://root.cern,https://root.cern/doc/master/classTLeafC.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void CreateSignature () override;  Using the CINT method arg information create a complete signature string. ;  ; void SetMenuItem (const char *docstring);  Set the menu item as prescribed in the doctstring. ;  . Private Attributes; TClass * fClass;  ; TString fGetter;  ; TMethodCall * fGetterMethod;  ; EMenuItemKind fMenuItem;  ; TMethodCall * fSetterMethod;  . Additional Inherited Members;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMethod.html:14841,inherit,inherited,14841,doc/master/classTMethod.html,https://root.cern,https://root.cern/doc/master/classTMethod.html,1,['inherit'],['inherited']
Modifiability,"nctions inherited from TProofBenchRun; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; Int_t DeleteParameters ();  Delete parameters set for this run. ;  ; void FillPerfStatPerfPlots (TTree *t, Int_t nactive);  ; Int_t SetParameters ();  Set parameters. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void BuildHistos (Int_t start, Int_t stop, Int_t step, Bool_t nx);  Build histograms, profiles and graphs needed for this run. ;  . Private Attributes; TCanvas * fCanvas;  ; Int_t fDebug;  ; TDirectory * fDirProofBench;  ; Int_t fDraw;  ; TH2 * fHist_perfstat_event;  ; TPBHistType * fHistType;  ; TList * fListPerfPlots;  ; TString fName;  ; Long64_t fNEvents;  ; Int_t fNHists;  ; TProofNodes * fNodes;  ; TProfile * fNorm_perfstat_evtmax;  ; TProfile * fNorm_queryresult_event;  ; TLegend * fNormLegend;  ; Int_t fNTries;  ; TProfile * fProfile_cpu_eff;  ; TProfile * fProfile_perfstat_event;  ; TProfile * fProfile_perfstat_evtmax;  ; TProfile * fProfile_queryresult_event;  ; TLegend * fProfLegend;  ; Int_t fStart;  ; Int_t fStep;  ; Int_t fStop;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBenchRunCPU.html:11364,inherit,inherited,11364,doc/master/classTProofBenchRunCPU.html,https://root.cern,https://root.cern/doc/master/classTProofBenchRunCPU.html,1,['inherit'],['inherited']
Modifiability,"nctions |; Protected Attributes |; List of all members ; TF2 Class ReferenceHistogram Library » Function classes. ; A 2-Dim function with parameters. ; The following types of functions can be created:. Expression using variables x and y; Expression using a user defined function; Lambda Expression with x and y variables and parameters. Expression using variables x and y; {; auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; f2->Draw();; }; TF2::TF2TF2()TF2 default constructor.Definition TF2.cxx:83. Expression using a user defined function; Double_t func(Double_t *val, Double_t *par); {; Float_t x = val[0];; Float_t y = val[1];; Double_t f = x*x-y*y;; return f;; }; ; void fplot(); {; auto f = new TF2(""f"",func,-1,1,-1,1);; f->Draw(""surf1"");; }; f#define f(i)Definition RSha256.hxx:104; Float_tfloat Float_tDefinition RtypesCore.h:57; double; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17. Lambda Expression with x and y variables and parameters; root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1); (TF2 &) Name: f2 Title: f2; root [1] f2.SetParameter(0, 1.); root [2] f2.Eval(1., 2.); (double) 3.0000000; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; TF2A 2-Dim function with parameters.Definition TF2.h:29; See TF1 class for the list of functions formats ; Definition at line 29 of file TF2.h. Public Member Functions;  TF2 ();  TF2 default constructor. ;  ;  TF2 (const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Option_t *opt=nullptr);  F2 constructor using a formula definition. ;  ; template<class PtrObj , typename MemFn > ;  TF2 (const char *name, const PtrObj &p, MemFn memFn, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Int_t npar, const char *, const char *);  Backward compatible ctor. ;  ; template<class PtrObj , typename MemFn > ;  TF2 (const char *name, const PtrObj &p, MemFn memFn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2.html:1176,variab,variables,1176,doc/master/classTF2.html,https://root.cern,https://root.cern/doc/master/classTF2.html,1,['variab'],['variables']
Modifiability,"nctions->Remove(thisAsFunctionInList);; 2655 }; 2656 TNamed::SetName(name);; 2657 if (thisAsFunctionInList) listOfFunctions->Add(thisAsFunctionInList);; 2658 }; 2659}; 2660 ; 2661////////////////////////////////////////////////////////////////////////////////; 2662///; 2663/// Sets multiple variables.; 2664/// First argument is an array of pairs<TString,Double>, where; 2665/// first argument is name of variable,; 2666/// second argument represents value.; 2667/// size - number of variables passed in first argument; 2668 ; 2669void TFormula::SetVariables(const pair<TString,Double_t> *vars, const Int_t size); 2670{; 2671 for(Int_t i = 0; i < size; ++i); 2672 {; 2673 auto &v = vars[i];; 2674 if (fVars.find(v.first) != fVars.end()) {; 2675 fVars[v.first].fValue = v.second;; 2676 fClingVariables[fVars[v.first].fArrayPos] = v.second;; 2677 } else {; 2678 Error(""SetVariables"", ""Variable %s is not defined."", v.first.Data());; 2679 }; 2680 }; 2681}; 2682 ; 2683////////////////////////////////////////////////////////////////////////////////; 2684/// Returns variable value.; 2685 ; 2686Double_t TFormula::GetVariable(const char *name) const; 2687{; 2688 const auto nameIt = fVars.find(name);; 2689 if (fVars.end() == nameIt) {; 2690 Error(""GetVariable"", ""Variable %s is not defined."", name);; 2691 return -1;; 2692 }; 2693 return nameIt->second.fValue;; 2694}; 2695 ; 2696////////////////////////////////////////////////////////////////////////////////; 2697/// Returns variable number (positon in array) given its name.; 2698 ; 2699Int_t TFormula::GetVarNumber(const char *name) const; 2700{; 2701 const auto nameIt = fVars.find(name);; 2702 if (fVars.end() == nameIt) {; 2703 Error(""GetVarNumber"", ""Variable %s is not defined."", name);; 2704 return -1;; 2705 }; 2706 return nameIt->second.fArrayPos;; 2707}; 2708 ; 2709////////////////////////////////////////////////////////////////////////////////; 2710/// Returns variable name given its position in the array.; 2711 ; 2712TString TFormula:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:103427,variab,variable,103427,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['variab'],['variable']
Modifiability,"nctions; Set the function f for evaluating the derivative.; The function type must implement the assigment operator,; <em> double operator() ( double x ) </em>. SetFunction(const ROOT::Math::Derivator::GSLFuncPointer& f, void* p = 0). double Eval(double x, double h = 1.0E-8) const. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(double x, double h = 1.0E-8) const. Computes the numerical derivative at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(double x, double h = 1.0E-8) const. Computes the numerical derivative at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(double x, double h = 1.0E-8) const. Computes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1.0E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(const ROOT::Math::IGenFunction& f, double x, double h = 1.0E-8). Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1.0E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Derivator.html:3889,adapt,adaptive,3889,root/html602/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Derivator.html,4,['adapt'],['adaptive']
Modifiability,"nctions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fMatrix [9];  ; Int_t fNumber;  ; Double_t fPhi;  ; Double_t fPsi;  ; Double_t fTheta;  ; Int_t fType;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; virtual void SetReflection ();  Checks whether the determinant of this matrix defines the reflection transformation and set the ""reflection"" flag if any. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TRotMatrix.h>. Inheritance diagram for TRotMatrix:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkReflection . Definition at line 42 of file TRotMatrix.h. Constructor & Destructor Documentation. ◆ TRotMatrix() [1/4]. TRotMatrix::TRotMatr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRotMatrix.html:12259,inherit,inherited,12259,doc/master/classTRotMatrix.html,https://root.cern,https://root.cern/doc/master/classTRotMatrix.html,1,['inherit'],['inherited']
Modifiability,"nctions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TGFrame * fFrame;  ; TGLayoutHints * fLayout;  ; Int_t fState;  . Private Member Functions;  TGFrameElement (const TGFrameElement &);  ; TGFrameElement & operator= (const TGFrameElement &);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGLayout.h>. Inheritance diagram for TGFrameElement:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrameElement.html:9199,inherit,inherited,9199,doc/master/classTGFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGFrameElement.html,1,['inherit'],['inherited']
Modifiability,"nctions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Public Attributes; TString fDataDir;  ; TString fHostName;  ; TString fMsd;  ; TString fOrdinal;  ; Int_t fPerfIndex;  ; ESlaveStatus fStatus;  ; SysInfo_t fSysInfo;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TProof.h>. Inheritance diagram for TSlaveInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESlaveStatus. enum TSlaveInfo::ESlaveStatus. EnumeratorkActive ; kNotActive ; kBad . Definition at line 214 of file TProof.h. Constructor & Destructor Documentation. ◆ TSlaveInfo(). TSlaveInfo::TSlaveInfo ; (; const char * ; ordinal = """", . const char * ; host = """", . Int_t ; perfidx = 0, . const char * ; msd = """", . const char * ; datadir = """" . ). inline . Definition at line 224 of file TProof.h. Member Function Documentation. ◆ Class(). static TClass * TSlaveInfo::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSlaveInfo::Class_Name ; (; ). static . ReturnsName of this cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlaveInfo.html:10036,inherit,inherited,10036,doc/master/classTSlaveInfo.html,https://root.cern,https://root.cern/doc/master/classTSlaveInfo.html,2,['inherit'],['inherited']
Modifiability,"nctions;  TEveWindowPack (TGPack *p, const char *n=""TEveWindowPack"", const char *t="""");  Constructor. ;  ;  ~TEveWindowPack () override;  Destructor. ;  ; Bool_t CanMakeNewSlots () const override;  ; void EqualizeFrames ();  Refit existing frames so that their lengths are equal. ;  ; void FlipOrientation ();  Flip orientation of the pack (vertical / horizontal). ;  ; TGFrame * GetGUIFrame () override;  Return top-frame of this eve-window - the pack. ;  ; TGPack * GetPack () const;  ; TClass * IsA () const override;  ; TEveWindowSlot * NewSlot () override;  Create a new frame-slot at the last position of the pack. ;  ; virtual TEveWindowSlot * NewSlotWithWeight (Float_t w);  Create a new weighted frame-slot at the last position of the pack. ;  ; void SetHorizontal ();  ; void SetVertical (Bool_t x=kTRUE);  Set orientation of the pack (vertical / horizontal). ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveWindow;  TEveWindow (const char *n=""TEveWindow"", const char *t="""");  ;  ~TEveWindow () override;  Destructor. ;  ; void ClearEveFrame ();  Clears eve-frame associated with this window. ;  ; virtual void DestroyWindow ();  Destroy eve-window - replace it with an empty frame-slot. ;  ; virtual void DestroyWindowAndSlot ();  Destroy eve-window and its frame-slot. ;  ; void FlipShowTitleBar ();  ; TEveCompositeFrame * GetEveFrame ();  ; Bool_t GetShowTitleBar () const;  ; Bool_t IsAncestorOf (TEveWindow *win);  Returns true if this is an ancestor of win. ;  ; Bool_t IsCurrent () const;  Returns true if this window is the current one. ;  ; void MakeCurrent ();  Make this window current. ;  ; void NameTitleChanged () override;  Name or title of the window changed - propagate to frames. ;  ; void PopulateEmptyFrame (TEveCompositeFrame *ef);  Populate given frame-slot - intended for initial population of a new slot or low-level window-swapping. ;  ; virtual void PostDock ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowPack.html:1497,inherit,inherited,1497,doc/master/classTEveWindowPack.html,https://root.cern,https://root.cern/doc/master/classTEveWindowPack.html,1,['inherit'],['inherited']
Modifiability,"nctions;  TViewTimer (const TViewTimer &)=delete;  ; TViewTimer & operator= (const TViewTimer &)=delete;  . Private Attributes; TGView * fView;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TQObject; static Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewTimer.html:13094,inherit,inherited,13094,doc/master/classTViewTimer.html,https://root.cern,https://root.cern/doc/master/classTViewTimer.html,1,['inherit'],['inherited']
Modifiability,"nctor.C for a running example.; . Function Members (Methods); public:. virtual~TF1(); voidTObject::AbstractMethod(const char* method) const; static voidAbsValue(Bool_t reject = kTRUE); virtual voidTFormula::Analyze(const char* schain, Int_t& err, Int_t offset = 0); virtual Bool_tTFormula::AnalyzeFunction(TString& chaine, Int_t& err, Int_t offset = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static voidCalcGaussLegendreSamplingPoints(Int_t num, Double_t* x, Double_t* w, Double_t eps = 3.0E-11); virtual Double_tCentralMoment(Double_t n, Double_t a, Double_t b, const Double_t* params = 0, Double_t epsilon = 9.9999999999999995E-7); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTFormula::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tTFormula::Compile(const char* expression = """"); virtual voidCopy(TObject& f1) const; virtual char*TFormula::DefinedString(Int_t code); virtual Double_tTFormula::DefinedValue(Int_t code); virtual Int_tTFormula::DefinedVariable(TString& variable, Int_t& action); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Double_tDerivative(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; virtual Double_tDerivative2(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; virtual Double_tDerivative3(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; static Double_tDerivativeError(); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TF1*DrawCopy(Option_t* option = """") const; virtual TObject*DrawDerivative(Option_t* option = ""al"")MEN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF1.html:6421,variab,variable,6421,root/html602/TF1.html,https://root.cern,https://root.cern/root/html602/TF1.html,2,['variab'],['variable']
Modifiability,"ncurred once. RooDataSet * generate(const RooArgSet& whatVars, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Int_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a; number of events to generate that will override the default. The result is a; copy of the prototype dataset with only variables in whatVars; randomized. Variables in whatVars that are not in the prototype; will be added as new columns to the generated dataset. Returns; zero in case of an error. The caller takes ownership of the; returned dataset. Int_t* randomizeProtoOrder(Int_t nProto, Int_t nGen, Bool_t resample = kFALSE) const; Return lookup table with randomized access order for prototype events,; given nProto prototype data events and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsPdf.html:65217,variab,variables,65217,root/html532/RooAbsPdf.html,https://root.cern,https://root.cern/root/html532/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"ncy of this helper with the one required by 'path' or 'dirptr'. ;  ; virtual void FreeDirectory (void *dirp);  Free a directory. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual Int_t GetPathInfo (const char *path, FileStat_t &buf);  Get info about a file. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsPathLocal (const char *path);  Returns TRUE if the url in 'path' points to the local file system. ;  ; virtual Int_t Locate (const char *path, TString &endurl);  ; virtual Int_t MakeDirectory (const char *dir);  Make a directory. ;  ; virtual void * OpenDirectory (const char *dir);  Open a directory. Returns 0 if directory does not exist. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Unlink (const char *path);  Unlink, i.e. ;  ;  Public Member Functions inherited from TSystem;  TSystem (const char *name=""Generic"", const char *title=""Generic System"");  Create a new OS interface. ;  ; virtual ~TSystem ();  Delete the OS interface. ;  ; virtual void Abort (int code=0);  Abort the application. ;  ; virtual int AcceptConnection (int sock);  Accept a connection. ;  ; virtual Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists);  Returns FALSE if one can access a file using the specified access mode. ;  ; virtual void AddDynamicPath (const char *pathname);  Add a new directory to the dynamic path. ;  ; virtual void AddFileHandler (TFileHandler *fh);  Add a file handler to the list of system file handlers. ;  ; virtual void AddIncludePath (const char *includePath);  Add a directory to the already set include path. ;  ; virtual void AddLinkedLibs (const char *linkedLib);  Add linkedLib to already set linked libs. ;  ; virtual void AddSignalHandler (TSignalHandler *sh);  Add a signal handler to list of system signal handlers. ;  ; virtual void AddStdExceptionHandler (TStdEx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixSystem.html:1468,inherit,inherited,1468,doc/master/classTDavixSystem.html,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html,1,['inherit'],['inherited']
Modifiability,"ncyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElemen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveLineProjected.html:27379,variab,variable,27379,root/html602/TEveLineProjected.html,https://root.cern,https://root.cern/root/html602/TEveLineProjected.html,4,['variab'],['variable']
Modifiability,"ncyMain-transparency variable.; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Float_tfVertices[8][3]; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveBox(const char* n = ""TEveBox"", const char* t = """"); Constructor. ~TEveBox(); Destructor. void SetVertex(Int_t i, Float_t x, Float_t y, Float_t z); Set vertex 'i'. void SetVertex(Int_t i, const Float_t* v); Set vertex 'i'. void SetVertices(const Float_t* vs); Set vertices. void ComputeBBox(); Compute bounding-box of the data. TClass* ProjectedClass(const TEveProjection* p) const; Virtual from TEveProjectable, return TEveBoxProjected class. TEveBox(const TEveBox& ). TEveBox& operator=(const TEveBox& ). const Float_t* GetVertex(Int_t i) const; { return fVertices[i]; }. » Author: Matevz Tadel, 2010 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveBox.html:21962,Inherit,Inheritance,21962,root/html534/TEveBox.html,https://root.cern,https://root.cern/root/html534/TEveBox.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nd () const =0;  ; virtual RooAbsReal * highBoundFunc () const;  Return pointer to RooAbsReal parameterized upper bound, if any. ;  ; virtual void insertHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon insertion into a RooAbsRealLValue. ;  ; TClass * IsA () const override;  ; virtual bool isParameterized () const;  Interface function. ;  ; virtual bool isShareable () const;  If true (default), the range definition can be shared across clones of a RooRealVar. ;  ; virtual bool isUniform () const;  ; virtual double lowBound () const =0;  ; virtual RooAbsReal * lowBoundFunc () const;  Return pointer to RooAbsReal parameterized lower bound, if any. ;  ; Int_t numBins () const;  Return number of bins. ;  ; virtual Int_t numBoundaries () const =0;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print binning arguments (the RooAbsReal objects represening the variable bin boundaries for parameterized binning implementations. ;  ; void printClassName (std::ostream &os) const override;  Print binning class name. ;  ; void printName (std::ostream &os) const override;  Print binning name. ;  ; void printTitle (std::ostream &os) const override;  Print binning title. ;  ; void printValue (std::ostream &os) const override;  Print binning value, i.e the bin boundary positions. ;  ; virtual void removeHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon removal from a RooAbsRealLValue. ;  ; virtual void setMax (double xhi);  Change upper bound to xhi. ;  ; virtual void setMin (double xlo);  Change lower bound to xlo. ;  ; virtual void setRange (double xlo, double xhi)=0;  ; void Streamer (TBuffer &) override;  Custom streamer implementing schema evolution between V1 and V2 persistent binnings. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsBinning.html:2372,variab,variable,2372,doc/master/classRooAbsBinning.html,https://root.cern,https://root.cern/doc/master/classRooAbsBinning.html,2,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,nd - save the configuration ; : 1 | 0.605916 0.542204 0.0761789 0.00657979 45977.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.477495 0.458718 0.0776312 0.00665553 45085.9 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.438338 0.418147 0.0780597 0.00669006 44837 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.333122 0.322325 0.0804981 0.00689735 43477.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.326577 0.317097 0.0800716 0.00688531 43724 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.320979 0.311994 0.080369 0.00694962 43585.2 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.316442 0.305918 0.0803736 0.00690045 43553.3 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.311672 0.301667 0.0807629 0.00695777 43357.4 0; : 17 Minimum Test error found - save the configuration ; : 17 | 0.306787 0.297289 0.0804752 0.00690149 43493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:15840,config,configuration,15840,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['config'],['configuration']
Modifiability,nd - save the configuration ; : 31 | 24122.8 22810.9 0.0196876 0.00176879 44645.9 0; : 32 Minimum Test error found - save the configuration ; : 32 | 23919.8 22612.5 0.01973 0.00178692 44585.4 0; : 33 Minimum Test error found - save the configuration ; : 33 | 23719.7 22413.7 0.019891 0.00182506 44282.2 0; : 34 Minimum Test error found - save the configuration ; : 34 | 23516.3 22222.5 0.0206631 0.00186547 42558.4 0; : 35 Minimum Test error found - save the configuration ; : 35 | 23322.1 22028.2 0.0200826 0.00177554 43698.9 0; : 36 Minimum Test error found - save the configuration ; : 36 | 23123.9 21840 0.0197735 0.00177073 44437.6 0; : 37 Minimum Test error found - save the configuration ; : 37 | 22932.1 21651.2 0.0197273 0.00177446 44561.1 0; : 38 Minimum Test error found - save the configuration ; : 38 | 22740.7 21464.4 0.0197166 0.00177193 44581.5 0; : 39 Minimum Test error found - save the configuration ; : 39 | 22549.1 21282.9 0.0197213 0.00177445 44576 0; : 40 Minimum Test error found - save the configuration ; : 40 | 22363.6 21100 0.0197729 0.00177445 44448.2 0; : 41 Minimum Test error found - save the configuration ; : 41 | 22176.6 20921.1 0.0197131 0.00176514 44573.2 0; : 42 Minimum Test error found - save the configuration ; : 42 | 21994.9 20740.9 0.0197264 0.00176834 44548.1 0; : 43 Minimum Test error found - save the configuration ; : 43 | 21811.7 20564.6 0.0197476 0.00176764 44494 0; : 44 Minimum Test error found - save the configuration ; : 44 | 21631.5 20390.5 0.0198172 0.00177793 44347.7 0; : 45 Minimum Test error found - save the configuration ; : 45 | 21453.9 20217 0.0197313 0.00176795 44535.1 0; : 46 Minimum Test error found - save the configuration ; : 46 | 21277.2 20045.6 0.0197489 0.00176953 44495.5 0; : 47 Minimum Test error found - save the configuration ; : 47 | 21102.5 19876.1 0.0197499 0.00176859 44490.7 0; : 48 Minimum Test error found - save the configuration ; : 48 | 20931.2 19705.9 0.0197403 0.00176149 44496.7 0; : 49 Minimum Test error ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:15562,config,configuration,15562,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,nd - save the configuration ; : 43 | 21811.7 20564.6 0.0197476 0.00176764 44494 0; : 44 Minimum Test error found - save the configuration ; : 44 | 21631.5 20390.5 0.0198172 0.00177793 44347.7 0; : 45 Minimum Test error found - save the configuration ; : 45 | 21453.9 20217 0.0197313 0.00176795 44535.1 0; : 46 Minimum Test error found - save the configuration ; : 46 | 21277.2 20045.6 0.0197489 0.00176953 44495.5 0; : 47 Minimum Test error found - save the configuration ; : 47 | 21102.5 19876.1 0.0197499 0.00176859 44490.7 0; : 48 Minimum Test error found - save the configuration ; : 48 | 20931.2 19705.9 0.0197403 0.00176149 44496.7 0; : 49 Minimum Test error found - save the configuration ; : 49 | 20758.9 19539.2 0.0199993 0.00178715 43926.8 0; : 50 Minimum Test error found - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - save the configuration ; : 52 | 20255.7 19051.4 0.0197679 0.00177721 44467.5 0; : 53 Minimum Test error found - save the configuration ; : 53 | 20090.6 18891.7 0.0197461 0.00177488 44515.6 0; : 54 Minimum Test error found - save the configuration ; : 54 | 19926.4 18735.4 0.0197628 0.00177559 44476 0; : 55 Minimum Test error found - save the configuration ; : 55 | 19766 18579 0.0197479 0.00177128 44502.3 0; : 56 Minimum Test error found - save the configuration ; : 56 | 19606.6 18423 0.0198259 0.00178958 44354.9 0; : 57 Minimum Test error found - save the configuration ; : 57 | 19448.2 18266.7 0.0197832 0.00177932 44434.9 0; : 58 Minimum Test error found - save the configuration ; : 58 | 19286.3 18101.7 0.0200637 0.00195508 44177.8 0; : 59 Minimum Test error found - save the configuration ; : 59 | 19133.8 17932.7 0.0198394 0.00178813 44318.1 0; : 60 Minimum Test error found - save the configuration ; : 60 | 18976.4 17813.4 0.0198417 0.00178241 44298.6 0; : 61 Minimum Test error fou,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:16897,config,configuration,16897,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"nd Spaces. ClangFormat; Astyle; Where to go from here. Naming conventions; For naming conventions we follow the Taligent rules. They have written a very large body of C++ and their rules seem well thought out. No need to invent something new. The only addition/change we made is to append an _t to typedefs and simple structs, e.g.:; typedef int Int_t ; struct Simple_t { ..... } ; ; Addherence to the rules is mandatory. After a while one really gets used to the fact that all class fields start with an f followed by a capitalized word, fEnergy, or that TStreamerInfo is a class. If the convention is sporadically violated debugging becomes a nightmare. The usage of a standard begin letter or token for the different types also makes it easy to parse and search the code using simple tools.; Class definition conventions; Also here the Taligent guide is quite reasonable. Of course, no class data member should ever be public. Make the data fields always private. Or protected, if you want to grant an inherited class direct access.; Inline; Add trivial get or setters directly in the class definition. This improves reading time since one does not have to look for it somewhere else. Add more complex inlines (longer than one line) at the bottom of the .h file. Creating separate .icc files increases the build time, the complexity of the build system and, more importantly, increases the number of files one possibly has to scan to find a piece of code.; Declaration Order; In the class definition we first declare all private data members, followed by the private static members, the private methods and the private static methods. Then the protected members and methods and finally the public methods (no public data members). We put private members first since that is the language default and it gives the developer a quick view on what data members are used in a class.; Avoid raw C types; Avoid the use of raw C types like int, long, float, double when using data that might be written to d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/coding-conventions.html:3178,inherit,inherited,3178,d/coding-conventions.html,https://root.cern,https://root.cern/d/coding-conventions.html,1,['inherit'],['inherited']
Modifiability,nd and communicate best axis limits; TProofLite PROOF-Lite control class; TProofLog PROOF session log handler; TProofLogElem PROOF session log element; TProofMgr Abstract PROOF manager interface; TProofMgrLite XrdProofd PROOF manager interface; TProofMonSender Interface for PROOF monitoring; TProofMonSenderML Interface for PROOF monitoring; TProofMonSenderSQL Interface for PROOF monitoring; TProofNodeInfo Class describing a PROOF node; TProofNodes Node and worker information; TProofOutputFile Wrapper class to steer the merging of files produced on workers; TProofOutputList Output list specific TList derivation; TProofPlayer Basic PROOF player; TProofPlayerLite PROOF player running in PROOF-Lite; TProofPlayerLocal PROOF player running on client; TProofPlayerRemote PROOF player running on master server; TProofPlayerSlave PROOF player running on slave server; TProofPlayerSuperMaster PROOF player running on super master; TProofProgressDialog PROOF progress dialog; TProofProgressInfo Progress information; TProofProgressLog Class implementing a log graphic box; TProofProgressMemoryPlot PROOF progress memory plots; TProofProgressStatus Proof progress status class; TProofQueryResult Class describing a PROOF query; TProofResources Abstract class describing PROOF resources; TProofResourcesStatic Class to handle PROOF static config; TProofServ PROOF Server Application Interface; TProofServLite PROOF-Lite Server Application Interface; TProofSuperMaster PROOF control class for making submasters; TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t> Class describing a vector container; TProofVectorContainer<TProofDrawListOfPolyMarkers3D::Point4D_t> Class describing a vector container; TPyDispatcher Python dispatcher class; TPyMultiGenFunction Python for Math::IMultiGenFunction equivalent; TPyMultiGradFunction Python for Math::IMultiGradFunction equivalent; TPyReturn Python morphing return object; TPySelector Python equivalent base class for PROOF; TPythia6 Interface to Pythia6.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ClassIndex.html:119408,config,config,119408,root/html532/ClassIndex.html,https://root.cern,https://root.cern/root/html532/ClassIndex.html,1,['config'],['config']
Modifiability,"nd argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 1210 of file RooAbsPdf.cxx. ◆ generate() [2/6]. RooFit::OwningPtr< RooDataSet > RooAbsPdf::generate ; (; const RooArgSet & ; whatVars, . const RooDataSet & ; prototype, . Int_t ; nEvents = 0, . bool ; verbose = false, . bool ; randProtoOrder = false, . bool ; resampleProto = false . ); const. Generate a new dataset using a prototype dataset as a model, with values of the variables in whatVars sampled from our distribution. ; Parameters. [in]whatVarsGenerate for these variables. ; [in]prototypeUse this dataset as a prototype: the new dataset will contain the same number of events as the prototype (by default), and any prototype variables not in whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters. The user can specify a number of events to generate that will override the default. The result is a copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that are not in the prototype will be added as new columns to the generated dataset. ; [in]nEventsNumber of events to generate. Defaults to 0, which means number of event in prototype dataset. ; [in]verboseShow which generator strategies are being used. ; [in]randProtoOrderRandomise order of retrieval of events from proto dataset. ; [in]resampleProtoResample from the proto dataset. . ReturnsThe new dataset. Returns zero in case of an error. The caller takes ownership of the returned dataset. ; Definition at line 1469 of file RooAbsPdf.cxx. ◆ generate() [3/6]. RooFit::OwningPtr< RooDataSet > RooAbsPdf::generate ; (; const RooArgSet & ; whatVars, . double ; nEvents = 0, . bool ; verbose = false, . bool ; autoBinned = true, . const char * ; binnedTag = """", . bool ; expectedData = false, . bool ; extended = false . ); const. Generate a new dataset containing the specified variables with events sampled from our distribution",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:117439,variab,variables,117439,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['variab'],['variables']
Modifiability,"nd box; Int_tfYpprevious pointer position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static TGGC*fgLineGC; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGContainer(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kSunkenFrame, Pixel_t back = GetDefaultFrameBackground()); Create a canvas container. This is the (large) frame that contains; all the list items. It will be shown through a TGViewPort (which is; created by the TGCanvas). TGContainer(TGCanvas* p, UInt_t options = kSunkenFrame, Pixel_t back = GetDefaultFrameBackground()); Create a canvas container. This is the (large) frame that contains; all the list items. It will be shown through a TGViewPort (which is; created by the TGCanvas). ~TGContainer(); Delete canvas container. void Layout(); Layout container entries. void CurrentChanged(Int_t x, Int_t y); Emit signal when current position changed. void CurrentChanged(TGFrame* f); Emit signal when current selected frame changed. void KeyPressed(TGFrame* , UInt_t keysym, UInt_t mask); Signal emitted when keyboard key pressed. frame - activated frame; keysym - defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGContainer.html:24194,Inherit,Inheritance,24194,root/html602/TGContainer.html,https://root.cern,https://root.cern/root/html602/TGContainer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"nd call it with your object as argument:; LineDraw(firstline);; In C++, we would not do that. We would instead define a class like this:; class TLine {; Double_t x1;; Double_t y1;; Double_t x2;; Double_t y2;; TLine(int x1, int y1, int x2, int y2);; void Draw();; }; Here we added two functions, that we will call methods or member functions, to the TLine class. The first method is used for initializing the line objects we would build. It is called a constructor. The second one is the Draw method itself. Therefore, to build and draw a line, we have to do:; TLine l(0.2,0.2,0.8,0.9);; l.Draw();; The first line builds the object l by calling its constructor. The second line calls the TLine::Draw() method of this object. You don’t need to pass any parameters to this method since it applies to the object l, which knows the coordinates of the line. These are internal variables x1, y1, x2, y2 that were initialized by the constructor.; 6.2 Inheritance and Data Encapsulation; We have defined a TLine class that contains everything necessary to draw a line. If we want to draw an arrow, is it so different from drawing a line? We just have to draw a triangle at one end. It would be very inefficient to define the class TArrow from scratch. Fortunately, inheritance allows a class to be defined from an existing class. We would write something like:; class TArrow : public TLine {; int ArrowHeadSize;; void Draw();; void SetArrowSize(int arrowsize);; }; The keyword “public” will be explained later. The class TArrow now contains everything that the class TLine does, and a couple of more things, the size of the arrowhead and a function that can change it. The Draw method of TArrow will draw the head and call the draw method of TLine. We just have to write the code for drawing the head!; 6.2.1 Method Overriding; Giving the same name to a method (remember: method = member function of a class) in the child class (TArrow) as in the parent (TLine) does not give any problem. This is called overr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:243668,Inherit,Inheritance,243668,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Inherit'],['Inheritance']
Modifiability,"nd class RWebDisplayHandle. friend . Definition at line 56 of file RWebWindow.hxx. ◆ RWebWindowsManager. friend class RWebWindowsManager. friend . Definition at line 54 of file RWebWindow.hxx. ◆ RWebWindowWSHandler. friend class RWebWindowWSHandler. friend . Definition at line 55 of file RWebWindow.hxx. Member Data Documentation. ◆ fCallbacksThrdId. std::thread::id ROOT::RWebWindow::fCallbacksThrdId. private . ! thread id where callbacks should be invoked ; Definition at line 160 of file RWebWindow.hxx. ◆ fCallbacksThrdIdSet. bool ROOT::RWebWindow::fCallbacksThrdIdSet {false}. private . ! flag indicating that thread id is assigned ; Definition at line 161 of file RWebWindow.hxx. ◆ fClearOnClose. std::shared_ptr<void> ROOT::RWebWindow::fClearOnClose. private . ! entry which is cleared when last connection is closed ; Definition at line 176 of file RWebWindow.hxx. ◆ fClientVersion. std::string ROOT::RWebWindow::fClientVersion. private . ! configured client version, used as prefix in scripts URL ; Definition at line 169 of file RWebWindow.hxx. ◆ fConn. ConnectionsList_t ROOT::RWebWindow::fConn. private . ! list of all accepted connections ; Definition at line 150 of file RWebWindow.hxx. ◆ fConnCallback. WebWindowConnectCallback_t ROOT::RWebWindow::fConnCallback. private . ! callback for connect event ; Definition at line 157 of file RWebWindow.hxx. ◆ fConnCnt. unsigned ROOT::RWebWindow::fConnCnt {0}. private . ! counter of new connections to assign ids ; Definition at line 148 of file RWebWindow.hxx. ◆ fConnLimit. unsigned ROOT::RWebWindow::fConnLimit {1}. private . ! number of allowed active connections ; Definition at line 152 of file RWebWindow.hxx. ◆ fConnMutex. std::mutex ROOT::RWebWindow::fConnMutex. mutableprivate . ! mutex used to protect connection list ; Definition at line 151 of file RWebWindow.hxx. ◆ fConnToken. std::string ROOT::RWebWindow::fConnToken. private . ! value of ""token"" URL parameter which should be provided for connecting window ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:53873,config,configured,53873,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,1,['config'],['configured']
Modifiability,"nd class RWebDisplayHandle. friend . Definition at line 58 of file RWebWindow.hxx. ◆ RWebWindowsManager. friend class RWebWindowsManager. friend . Definition at line 56 of file RWebWindow.hxx. ◆ RWebWindowWSHandler. friend class RWebWindowWSHandler. friend . Definition at line 57 of file RWebWindow.hxx. Member Data Documentation. ◆ fCallbacksThrdId. std::thread::id ROOT::RWebWindow::fCallbacksThrdId. private . ! thread id where callbacks should be invoked ; Definition at line 163 of file RWebWindow.hxx. ◆ fCallbacksThrdIdSet. bool ROOT::RWebWindow::fCallbacksThrdIdSet {false}. private . ! flag indicating that thread id is assigned ; Definition at line 164 of file RWebWindow.hxx. ◆ fClearOnClose. std::shared_ptr<void> ROOT::RWebWindow::fClearOnClose. private . ! entry which is cleared when last connection is closed ; Definition at line 179 of file RWebWindow.hxx. ◆ fClientVersion. std::string ROOT::RWebWindow::fClientVersion. private . ! configured client version, used as prefix in scripts URL ; Definition at line 172 of file RWebWindow.hxx. ◆ fConn. ConnectionsList_t ROOT::RWebWindow::fConn. private . ! list of all accepted connections ; Definition at line 153 of file RWebWindow.hxx. ◆ fConnCallback. WebWindowConnectCallback_t ROOT::RWebWindow::fConnCallback. private . ! callback for connect event ; Definition at line 160 of file RWebWindow.hxx. ◆ fConnCnt. unsigned ROOT::RWebWindow::fConnCnt {0}. private . ! counter of new connections to assign ids ; Definition at line 151 of file RWebWindow.hxx. ◆ fConnLimit. unsigned ROOT::RWebWindow::fConnLimit {1}. private . ! number of allowed active connections ; Definition at line 155 of file RWebWindow.hxx. ◆ fConnMutex. std::mutex ROOT::RWebWindow::fConnMutex. mutableprivate . ! mutex used to protect connection list ; Definition at line 154 of file RWebWindow.hxx. ◆ fConnToken. std::string ROOT::RWebWindow::fConnToken. private . ! value of ""token"" URL parameter which should be provided for connecting window ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindow.html:52757,config,configured,52757,doc/master/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindow.html,1,['config'],['configured']
Modifiability,"nd controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackListProjected(); Default constructor. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); This is virtual method from base-class TEveProjected. void SetDepthLocal(Float_t d); This is not needed for functionality as SetDepth(Float_t d); is overriden -- but SetDepthLocal() is abstract.; Just emits a warning if called. void SetDepth(Float_t d); Set depth of all children inheriting from TEveTrackProjected. void SetDepth(Float_t d, TEveElement* el); Set depth of all children of el inheriting from TEveTrackProjected. TEveTrackProjected& operator=(const TEveTrackListProjected& ). void UpdateProjection(). TEveElement* GetProjectedAsElement(); { return this; }. TEveTrackListProjected(const TEveTrackListProjected& ). virtual ~TEveTrackListProjected(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveTrackListProjected.html:26000,inherit,inheriting,26000,root/html604/TEveTrackListProjected.html,https://root.cern,https://root.cern/root/html604/TEveTrackListProjected.html,4,['inherit'],['inheriting']
Modifiability,"nd controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackListProjected(); Default constructor. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); This is virtual method from base-class TEveProjected. void SetDepthLocal(Float_t d); This is not needed for functionality as SetDepth(Float_t d); is overriden -- but SetDepthLocal() is abstract.; Just emits a warning if called. void SetDepth(Float_t d); Set depth of all children inheriting from TEveTrackProjected. void SetDepth(Float_t d, TEveElement* el); Set depth of all children of el inheriting from TEveTrackProjected. TEveTrackProjected& operator=(const TEveTrackListProjected& ). void UpdateProjection(). TEveElement* GetProjectedAsElement(); { return this; }. TEveTrackListProjected(const TEveTrackListProjected& ). virtual ~TEveTrackListProjected(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrackListProjected.html:26000,inherit,inheriting,26000,root/html602/TEveTrackListProjected.html,https://root.cern,https://root.cern/root/html602/TEveTrackListProjected.html,4,['inherit'],['inheriting']
