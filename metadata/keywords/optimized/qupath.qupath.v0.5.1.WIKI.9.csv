quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Safety,"eters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the prima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35653,detect,detections,35653,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['detect'],['detections']
Safety,"ethod in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getURIs() - Method in interface qupath.opencv.ops.ImageOp. Default implementation returns an empty list; classes should override this if necessary. getUrlString() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the URL for the main repo. getUseAlwaysExtensions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:546361,avoid,avoid,546361,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"ethod in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777458,predict,prediction,777458,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"ethod. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static fina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1211,detect,detections,1211,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['detect'],['detections']
Safety,"ethod. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.NormalBayesClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1317,predict,predict,1317,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['predict'],['predict']
Safety,"ethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static final PathObjectFilter ROI_POINT; Accept any object that has a points ROI. Method Details. values; public static PathObjectFilter[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2632,detect,detection,2632,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['detect'],['detection']
Safety,"eton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:4397,avoid,avoid,4397,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['avoid'],['avoid']
Safety,"etrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6161,predict,predictWithLock,6161,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['predictWithLock']
Safety,"eturns:. isMac; public static boolean isMac(); Return true if running on macOS. Returns:. isLinux; public static boolean isLinux(); Return true if running on Linux. Returns:. isWindows; public static boolean isWindows(); Return true if running on Windows. Returns:. deleteFile; public static boolean deleteFile(File fileToDelete,; boolean preferTrash); Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted.; ; Note that the behavior of this method is system-dependent, and there is no guarantee the file will ; indeed be moved to the trash. Parameters:; fileToDelete - ; preferTrash - ; Returns:; true if the file is successfully deleted, false otherwise. readURLAsString; public static String readURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:19750,timeout,timeoutMillis,19750,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['timeout'],['timeoutMillis']
Safety,"ew.GridDisplaySize;  ; SMALL - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; smartEditing - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; smartEditingAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; smartStringComparator() - Static method in class qupath.lib.common.GeneralTools. Comparator for smart String sorting. smartStringSort(Collection<T>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection using the Object.toString() method applied to each element. smartStringSort(Collection<T>, Function<T, String>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection after extracting a String representation of each element. SMOOTHED_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SmoothFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SmoothFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Default constructor. smoothImage(BufferedImage) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). smoothMeasurements(List<PathObject>, List<String>, double, String, boolean, boolean) - Static method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. smoothPoints(List<Point2>) - Static method in class qupath.lib.roi.ShapeSimplifier. Apply a simple 3-point moving average to a list of points. SNAPSHOT_VIEWER_CONTENT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:983690,detect,detection,983690,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,ewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (imple,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6305,detect,detect,6305,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"e coord,; STRtree tree). Compute the distance to the nearest coordinate stored within an STRtree. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator). Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator,; boolean signedDistance). Compute the shortest distance from a coordinate to a target geometry. static STRtree; createCoordinateCache(Collection<Coordinate> coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3039,detect,detectionToAnnotationDistances,3039,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"e readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel); Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint.; ; Note that ImageJ uses 1-based indices for z and t! Therefore these should be >= 1.; ; A ColorModel can optionally be provided; otherwise, a default ColorModel will be ; created for the image (with may not be particularly suitable). Parameters:; imp2 - ; z - ; t - ; colorModel - ; Returns:. getServerType; public String getServerType(); Description copied from in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:5813,avoid,avoid,5813,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['avoid'],['avoid']
Safety,"f a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13743,detect,detectionToAnnotationDistances,13743,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"f all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33167,detect,detection,33167,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"f another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:6755,detect,detection,6755,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['detect'],['detection']
Safety,"f the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.Choice",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:400081,hazard,hazard,400081,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hazard'],['hazard']
Safety,"face qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMaxDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the max display value for this channel. setMaxHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max height property for the specified regions. setMaxThreads(int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the maximum number of threads that may be used during live prediction. setMaxWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max width property for the specified regions. setMeasurementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. setMemoizationTimeMillis(int) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the number of milliseconds that must elapse when opening an image before a memoization file is generated. setMemoryThreshold(double) - Static method in class qupath.imagej.tools.IJTools;  ; setMetadata(ImageServerMetadata) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Not allowed - throws an UnsupportedOperationException. setMetadata(ImageServerMetadata) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Throws an exception - metadata should not be set for a hierarchy image server directly. setMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; setMetadata(ImageServerMetadata) - Method in interface qupath.lib.images.servers.ImageServer. Set the metadata to use, e.g. setMetadata(ImageServerMetadata) - Method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:934794,detect,detections,934794,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"ferNucleus); BiPredicate that returns true for objects with ROI centroids within a specified distance. Parameters:; maxDistance - maximum separation between ROI centroids; preferNucleus - if true, prefer nucleus centroids for cell objects; Returns:; true for object pairs with close centroids. boundaryDistancePredicate; public static BiPredicate<PathObject,PathObject> boundaryDistancePredicate(double maxDistance,; boolean preferNucleus); BiPredicate that returns true for objects with ROI boundaries within a specified distance. Parameters:; maxDistance - maximum separation between ROI boundaries; preferNucleus - if true, prefer nucleus ROIs for cell objects; Returns:; true for object pairs with close boundaries. createAnnotationsFromSubdivision; public static List<PathObject> createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI bounds); Create annotations surrounding objects within a specified subdivision based on Voronoi faces.; This can be used to create annotations based upon existing detections. Parameters:; subdivision - subdivision representing object relationships; bounds - if provided, clip the annotations to fit within the ROI; Returns:; a list of annotations, one for each classification represented by objects within the subdivision within the bounds. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Colle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:6769,detect,detections,6769,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['detect'],['detections']
Safety,"fficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject cr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:6535,detect,detection,6535,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety,"fied detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7102,detect,detection,7102,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety,"fierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6756,predict,prediction,6756,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,"final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; public String getFramework(); Get the name of the deep learning framework that may be used.; If null, consumers may try to infer this from any URIs. Returns:. getURIs; public List<URI> getURIs(); Get the URIs associated with the model (e.g. weights and/or config files). Returns:. getInputs; public Map<String,DnnShape> getInputs(); Get the requested inputs and their shapes. Returns:; the inputs, if known, or null otherwise. getOutputs; public Map<String,DnnShape> getOutputs(); Get the expected outputs and their shapes. Returns:; the outputs, if known, or null otherwise. getLayout; public String getLayout(); Get a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Returns:. requestLazyInitialize; public boolean requestLazyInitialize(); Request that any model is loaded lazily on demand.; ; This can be useful to avoid blocking at some inopportune point in the code, ; but means that any exceptions associated with model initialization will ; probably not be thrown until the model is used. Returns:. builder; public static DnnModelParams.Builder builder(DnnModelParams params); Create a new params builder, initialized with the values from existing ; params. Parameters:; params - ; Returns:; a new builder. builder; public static DnnModelParams.Builder builder(); Create a new params builder, with default values. Returns:; a new builder. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:4346,avoid,avoid,4346,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,1,['avoid'],['avoid']
Safety,"from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static PathObject; createFullImageAnnotation(boolean setSelected). Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(boolean setSelected,; int z,; int t). Create an annotation around the full image for the current image, on the specified z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected). Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t). Create an annotation around the f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:10794,detect,detection,10794,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"fyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:3365,predict,predict,3365,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,2,['predict'],['predict']
Safety,"g notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255401,detect,detections,255401,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"g.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.NormalBayesClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on NormalBayesClassifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1411,predict,predictWithLock,1411,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['predict'],['predictWithLock']
Safety,"g.QP. Add measurements from pixel classification to the selected objects. addPropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Add a new property change listener. addPropertyPreference(Property<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; addRunnableTasks(ImageData<T>, PathO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:26210,detect,detect,26210,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"geCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:423155,detect,detect,423155,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"geServer using cached tiles. boolean; getLivePrediction(). Query whether live prediction is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:3746,predict,prediction,3746,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
Safety,"geServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); throws IOException; Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; server - the image; request - the region within which detection should be applied; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects; Throws:; IOException - if the image could not be read. detect; public static List<PathObject> detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects. blobFromImages; public static Mat blobFromImages(Mat... mats); Create an OpenCV blob from one or more mats. Parameters:; mats - ; Returns:. blobFromImage; public static Mat blobFromImage(Mat mat); Create an OpenCV blob from a single mat. Parameters:; mat - ; Returns:. blobFromImages; public static Mat blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. Parameters:; mat - input image; scaleFactor - scale factor; size - input width and height; mean - mean values for subtraction; swapRB - swap red and blue of the mean values; crop - center crop after resizing if needed; Returns:; a blob with axis order NCHW. blobFromImages; public static Mat b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:14054,detect,detection,14054,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['detect'],"['detected', 'detection']"
Safety,"geServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:55714,detect,detection,55714,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be included or not. getCachedColor(Integer, boolean) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color, explicitly stating whether alpha should be included or not. getCachedMea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:344225,avoid,avoid,344225,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:12953,detect,detectionCentroidDistances,12953,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['detect'],['detectionCentroidDistances']
Safety,"gin,; double downsampleFactor,; ImagePlane plane); Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, ImagePlus). convertToDetection; public static PathObject convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:14536,detect,detection,14536,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['detect'],['detection']
Safety,"h is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; public static void findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map for the current image. Parameters:; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:134202,avoid,avoid,134202,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avoid'],['avoid']
Safety,"h() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for workin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805534,detect,detection,805534,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"h.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:254868,detect,detection,254868,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"h.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2211,predict,predict,2211,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['predict'],['predict']
Safety,"h; downsample - the requested downsample at which classification should be applied; width - the fixed input size; height - the fixed input size; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read; IllegalArgumentException - if the patch width or height are invalid. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement); Apply a classification model to an existing image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; input - image patch; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise. segment; public static Mat segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Apply a segmentation model to an image region. Parameters:; model - the segmentation model; server - the image; request - the region; Returns:; a Mat containing the segmentation results; Throws:; IOException - if the input image could not be read. segment; public static Mat segment(SegmentationModel model,; Mat input,; Mat output); Apply a segmentation model to an image region. Parameters:; model - the segmentation model; input - the input image; output - the output image; Returns:; a Mat containing the segmentation results (the same as output, if provided). detect; public static List<PathObject> det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:12011,predict,prediction,12011,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,3,['predict'],"['prediction', 'predictionMeasurement']"
Safety,"hClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to avoid excessive memory use. Overrides:; getMetadata in class PathObject; Returns:; Since:; v0.5.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:3145,detect,detection,3145,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,3,"['avoid', 'detect']","['avoid', 'detection']"
Safety,"hClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:9230,detect,detection,9230,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detection']
Safety,"hClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postproce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6336,predict,prediction,6336,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,"he comparator, the 'first' object is the one that will be kept.; overlapTolerance - amount of overlap to permit; Returns:; collection of objects, which should have smaller overlapping objects removed. mergeObjects; public static PathObject mergeObjects(Collection<? extends PathObject> pathObjects); Merge objects by calculating the union of their ROIs. Parameters:; pathObjects - a collection of annotations, cells, detections or tiles. Note that all objects must be of the same type.; Returns:; a single object with ROI(s) determined by union. The classification and name will be taken from the first ROI in the collection.; Throws:; IllegalArgumentException - if no objects are provided (either null or empty list). mergeObjects; public static <K> List<PathObject> mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier); Merge objects that share a property in common.; ; Note that objects must all be of the same type (e.g. cells, detections, annotations). Parameters:; pathObjects - ; classifier - function extracting the shared property, e.g. p -> p.getName(); Returns:; a new list of objects generated by merging grouped objects.; See Also:. mergeObjects(Collection). createLike; public static PathObject createLike(PathObject pathObject,; ROI roiNew); Create a new object with the same type and classification as the input object, but a new ROI and ID.; ; Note that TMA core objects are not supported. Parameters:; pathObject - the template object; roiNew - the new ROI; Returns:; a new object with the same type and classification as the input object, but different ROI and ID.; Since:; v0.5.0. createLike; public static PathObject createLike(PathObject pathObject,; ROI roiNew,; ROI roiNucleus); Create a new object with the same type and classification as the input object, but a new ROI and ID.; This version of the method supports cell objects with a nucleus ROI.; ; Note that TMA core objects are not supported. Parameters:; pathO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:49703,detect,detections,49703,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['detect'],['detections']
Safety,"he image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally channel numbers of the output ; (zero-based), or could be labels in a single-channel labeled image. Returns:. getPreprocessing; public List<ImageOp> getPreprocessing(); Get any preprocessing steps that should be applied. Returns:. getPredictionOp; public ImageOp getPredictionOp(); Get the image op used for prediction only.; This is applied after any preprocessing steps, but before ; any postprocessing steps. Returns:. getPostprocessing; public List<ImageOp> getPostprocessing(); Get any postprocessing steps that should be applied after prediction. Returns:. buildPixelClassifier; public static PixelClassifier buildPixelClassifier(PatchClassifierParams params); Build a pixel classifier using these parameters. Parameters:; params - ; Returns:. builder; public static PatchClassifierParams.Builder builder(); Create a builder to generate new patch classifier params. Returns:. builder; public static PatchClassifierParams.Builder builder(PatchClassifierParams params); Create a builder to generate new patch classifier params, ; initialized with the values from an existing parameter object. Parameters:; params - the existing parameters, used to initialize the builder; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:3772,predict,prediction,3772,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,2,['predict'],['prediction']
Safety,"he image data for which to show measurements. promptToEstimateStainVectors; public static void promptToEstimateStainVectors(ImageData<BufferedImage> imageData); Prompt to estimate stain vectors for the specified image, using any current region of interest. Parameters:; imageData - the image data for which stain vectors should be estimated. promptToExportImageRegion; public static void promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage); Prompt to export the current image region selected in the viewer. Parameters:; viewer - the viewer containing the image to export; renderedImage - if true, export the rendered (RGB) image rather than original pixel values. showInstalledExtensions; public static void showInstalledExtensions(QuPathGUI qupath); Show a dialog displaying the extensions installed for a specified QuPath instance. Parameters:; qupath - the QuPath instance. showDetectionMeasurementManager; public static void showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData); Show a simple dialog for viewing (and optionally removing) detection measurements. Parameters:; qupath - ; imageData - . resetTMAMetadata; public static boolean resetTMAMetadata(ImageData<?> imageData); Reset TMA metadata, if available. Parameters:; imageData - ; Returns:; true if changes were made, false otherwise. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier); Create a command that generates a persistent single dialog on demand.; A reference to the dialog can be retained, so that if the command is called again ; either the original dialog is shown and/or brought to the front. Parameters:; supplier - supplier function to generate the dialog on demand; Returns:; the action. createSingleStageAction; public static org.controlsfx.control.action.Action createSingleStageAction(Supplier<Stage> supplier,; String name); Create a named command that generates a persistent single dialog on deman",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:14518,detect,detection,14518,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detection']
Safety,"he model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getName() - Method in class qupath.imagej.gui.IJExtension;  ; getName() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getName() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:447187,detect,detect,447187,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"hen storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing featur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:2830,avoid,avoiding,2830,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,1,['avoid'],['avoiding']
Safety,"hether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set whether Bio-Formats should support only local files (rather than any URL). setFillAnnotations(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show annotation objects 'filled' in viewers. setFillDetections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show detection objects 'filled' in viewers. setFillHeight(Boolean, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setFillHeight(Node, Boolean) property for specified nodes. setFillWidth(Boolean, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. setFontSize(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the requested font size for the 'Show names' option. setGamma(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the gamma value for this viewer. setGridLines(GridLines) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the GridLines object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:926378,detect,detection,926378,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"hod in class qupath.lib.objects.PathObjectTools. Get a list of objects with point ROIs from a collection of objects. getPoolSizeProp() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager;  ; getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:488174,predict,prediction,488174,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"hod in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1069144,avoid,avoid,1069144,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1690,predict,predictWithLock,1690,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"hy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object, omitting the alpha component. getRGBThumb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:499800,hazard,hazard,499800,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hazard'],['hazard']
Safety,"ib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection; qupath.imagej.detect.cells.PositiveCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:1520,detect,detector,1520,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['detect'],['detector']
Safety,"ic BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColor. Color to paint behind any image. static DoubleProperty; viewerGamma. Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinear. Request that images are displayed in viewers using bilinear interpolation. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. static enum ; PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. static enum ; PathPrefs.FontSize. Enum to control font size. static enum ; PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. Constructor Summary; Constructors. Constructor; Description; PathPrefs();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static DoubleProperty; allredMinPercentagePositiveProperty(). The minimum positive percentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjectsProperty(). Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThicknessProperty(). Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercentProperty(). Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:10119,detect,detections,10119,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detections']
Safety,"ic method in class qupath.lib.scripting.QP. Clear the selection, so that no objects of any kind are selected. deselectObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure that the specified object is removed from the selection. deselectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are deselected. DETACH_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; DETACH_VIEWER - Variable in class qupath.lib.gui.actions.ViewerActions;  ; detachActiveViewerFromGrid() - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the currently active viewer from the viewer grid, if possible. detachViewerFromGrid(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the specified viewer from the viewer grid, if possible. detect(DetectionModel, Mat, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use inste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:251838,detect,detect,251838,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"icating the image type (Train, Validation, Test or None). trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. trainWithLock(TrainData) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement trainWithLock rather than train directly to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1048076,predict,prediction,1048076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"ication in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:30050,detect,detections,30050,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"ich the specified measurement has a value above the threshold. above(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1456,detect,detected,1456,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detected']
Safety,"id, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14573,detect,detection,14573,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detection']
Safety,"idDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:253960,detect,detections,253960,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,idProperty; public BooleanProperty showTMAGridProperty(). Returns:; the boolean property indicating whether any current TMA grid should be displayed; See Also:. getShowTMAGrid(); setShowTMAGrid(boolean). showPixelClassificationProperty; public BooleanProperty showPixelClassificationProperty(). Returns:; the boolean property indicating whether any active pixel classification should be displayed; See Also:. getShowPixelClassification(); setShowPixelClassification(boolean). pixelClassificationFilterRegionProperty; public ObjectProperty<RegionFilter> pixelClassificationFilterRegionProperty(). Returns:; the filter used to determine whether a pixel classification should be computed for a specified region. setPixelClassificationRegionFilter; public void setPixelClassificationRegionFilter(RegionFilter region); Control where pixel classifications should be calculated during live prediction. Parameters:; region - . getPixelClassificationRegionFilter; public RegionFilter getPixelClassificationRegionFilter(). Returns:; a filter used to determine whether a pixel classification should be computed for a specified region. showDetectionsProperty; public BooleanProperty showDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed; See Also:. getShowDetections(); setShowDetections(boolean). fillDetectionsProperty; public BooleanProperty fillDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed 'filled'; See Also:. getFillDetections(); setFillDetections(boolean). fillAnnotationsProperty; public BooleanProperty fillAnnotationsProperty(). Returns:; the boolean property indicating whether annotations should be displayed 'filled'; See Also:. getFillAnnotations(); setFillAnnotations(boolean). showGridProperty; public BooleanProperty showGridProperty(). Returns:; the boolean property indicating whether a counting grid should be shown over the viewer; See Also:. getShowGrid(); setShowGrid(boolean). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:19516,detect,detections,19516,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,2,['detect'],['detections']
Safety,"ied object is removed from the selection. deselectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are deselected. DETACH_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; DETACH_VIEWER - Variable in class qupath.lib.gui.actions.ViewerActions;  ; detachActiveViewerFromGrid() - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the currently active viewer from the viewer grid, if possible. detachViewerFromGrid(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the specified viewer from the viewer grid, if possible. detect(DetectionModel, Mat, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:252065,detect,detect,252065,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ield; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat mat). Prediction function that takes a single input and gives a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default input layer name. This should be used when the input layer name is known or ; unimportant (e.g. the common case of a single input). See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default output layer name. This should be used when the output layer name is known or ; unimportant (e.g. the common case of a single output). See Also:. Constant Field Values. Method Details. predict; Map<String,Mat> predict(Map<String,Mat> blobs); Prediction function that can take multiple inputs. Parameters:; blobs - ; Returns:. predict; default Mat predict(Mat mat); Prediction function that takes a single input and gives a single output. Parameters:; mat - ; Returns:. batchPredict; default List<Mat> batchPredict(List<? extends Mat> mats); Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs.; Each input is expected to have a single output. Parameters:; mats - ; Returns:. close; default void close(); throws Exception; Close this model if it will not be needed again.; Subclasses that require cleanup may override this.; The default implementation does nothing. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:2774,predict,predict,2774,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,4,['predict'],['predict']
Safety,"ierData object with the specified display name and events. Parameters:; name - ; events - . Method Details. addEvents; public KaplanMeierData addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events); Add a collection of events. Parameters:; events - ; Returns:. addEvent; public KaplanMeierData addEvent(double time,; boolean censored); Insert a new event. Parameters:; time - the time of the event (units are not specified, but should be consistent for all events added); censored - if true the event is censored, if false the event is observed.; Returns:. getName; public String getName(); Get the name of this data, generally used for display. Returns:. isEmpty; public boolean isEmpty(); Returns true if there are no events included. Returns:. getEvents; public List<KaplanMeierData.KaplanMeierEvent> getEvents(); Get an unmodifiable list of all events. Returns:. getAllTimes; public double[] getAllTimes(); Retrieve a sorted array containing all times where 'something happened' (observed or censored). Returns:; See Also:. getStatistic(). getStatistic; public double[] getStatistic(); Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). Returns:; See Also:. getAllTimes(). getMaxTime; public double getMaxTime(); Get the time of the last event, or -1 if there are no events. Returns:. getAtRisk; public int getAtRisk(double t); Get the number at risk at a specified time. This includes events that occur precisely at the time specified. Parameters:; t - ; Returns:. getEventsAtTime; public int getEventsAtTime(double t); Get the number of events at a specified time (exactly). Parameters:; t - ; Returns:. nEvents; public int nEvents(); Get the number of events, either observed or censored. Returns:. nObserved; public int nObserved(); Get the number of observed (not censored) events. Returns:. nCensored; public int nCensored(); Get the number of censored events. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:4154,risk,risk,4154,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,1,['risk'],['risk']
Safety,"ierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest anno",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13280,detect,detection,13280,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,['detect'],['detection']
Safety,"ierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects). Get the objects overlapping or close to a specified region. Collection<PathObject>; getObjectsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:4967,detect,detection,4967,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['detect'],"['detection', 'detections']"
Safety,"ierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13919,detect,detectionToAnnotationDistances,13919,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; task",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:3175,detect,detected,3175,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['detect'],['detected']
Safety,iewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6357,detect,detect,6357,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"if the coordinate occurs ; within. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator,; boolean signedDistance). Compute the shortest distance from a coordinate to a target geometry. static STRtree; createCoordinateCache(Collection<Coordinate> coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3316,detect,detectionToAnnotationDistances,3316,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-paddi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:2790,detect,detection,2790,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['detect'],['detection']
Safety,"ifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:5045,predict,predictions,5045,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['predict'],['predictions']
Safety,"ifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. CroppedImageServer. ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. CssLanguage. Class for representing CSS in QuPath. DefaultAutoCompletor. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultImageRegionStore. An ImageRegionStore suitable for either Swing or JavaFX applications. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptEditor. Default multilingual script editor. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. DefaultTMAGrid. Default implementation of a TMAGrid. DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Comma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:12172,predict,predictable,12172,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['predict'],['predictable']
Safety,"ifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:5627,predict,predict,5627,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,12,['predict'],['predict']
Safety,"ild the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:2715,predict,prediction,2715,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['predict'],['prediction']
Safety,"ilestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:256699,detect,detectionToAnnotationDistances,256699,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ilter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? ext",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:3790,avoid,avoiding,3790,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['avoid'],['avoiding']
Safety,"ilter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). tryToClassify; protected int tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:3911,avoid,avoiding,3911,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['avoid'],['avoiding']
Safety,"ilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all dete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255819,detect,detectionToAnnotationDistances,255819,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:20434,detect,detections,20434,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detections']
Safety,"in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776334,predict,predict,776334,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"ing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:2381,detect,detect,2381,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['detect'],['detect']
Safety,"ing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1522,predict,predict,1522,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['predict']
Safety,"ing; identifier (e.g. PathClass.StandardPathClasses - Class in qupath.lib.objects.classes. Enum representing standard classifications. PathClassFactory - Class in qupath.lib.objects.classes. Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses - Enum Class in qupath.lib.objects.classes. Deprecated.; Enum representing standard classifications. PathClassTools - Class in qupath.lib.objects.classes. Static methods for use with PathClass objects. PathDetectionObject - Class in qupath.lib.objects. A detection PathObject. PathDetectionObject() - Constructor for class qupath.lib.objects.PathDetectionObject. Default constructor. PathDetectionObject(ROI, PathClass) - Constructor for class qupath.lib.objects.PathDetectionObject. Create a new PathDetectionObject with a float measurement list. PathHierarchyImageServer - Class in qupath.lib.gui.images.servers. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathHierarchyImageServer(ImageData<BufferedImage>, OverlayOptions) - Constructor for class qupath.lib.gui.images.servers.PathHierarchyImageServer. Constructor. PathImage<T> - Interface in qupath.lib.images. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T> - Interface in qupath.lib.plugins. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO - Class in qupath.lib.io. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions - Enum Class in qupath.lib.io. Options to customize the export of PathObjects as GeoJSON. pathMemoization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; PathObject - Class in qupath.lib.objects. Fundamental object of interest in QuPath. PathObject() - Constructor for c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:753318,detect,detection,753318,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ing hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13198,detect,detectionCentroidDistances,13198,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety,"ining multiple parts (or 'dots'). static boolean; isValidFilename(String name). Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. static boolean; isWindows(). Return true if running on Windows. static final String; micrometerSymbol(). Get a string to represent um (but with the proper 'mu' symbol). static int; numNaNs(double[] vals). Count the number of NaN values in an array. static Map<String,String>; parseArgStringValues(String s). Parse the contents of a JSON String. static String; readFileAsString(File file). Read the entire contents of a file into a single String. static String; readFileAsString(String path). Read the entire contents of a file given by the specified path into a single String. static String; readInputStreamAsString(InputStream stream). Read the entire contents of an InputStream into a single String. static String; readURLAsString(URL url,; int timeoutMillis). Read URL as String, with specified timeout in milliseconds. static String; replaceCurlyQuotes(String text). Replace different kinds of 'curly quote' in a String with straight quotes. static String; replaceGremlins(String text,; CharSequence replacement). Replace non-printable characters from a String with a specified replacement (may be null). static Comparator<String>; smartStringComparator(). Comparator for smart String sorting. static <T> void; smartStringSort(Collection<T> collection). Smart-sort a collection using the Object.toString() method applied to each element. static <T> void; smartStringSort(Collection<T> collection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:5248,timeout,timeout,5248,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['timeout'],['timeout']
Safety,"inuous, creating a copy of the data if necessary. ensureCursorType(Cursor) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Ensure that the specified cursor is set in the current viewer. ensureCursorType(Cursor) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Ensure that the specified cursor is set in the current viewer. ensureCursorType(Cursor) - Method in class qupath.process.gui.WandToolEventHandler. Ensure that the specified cursor is set in the current viewer. ensureDuplicatableGlyph(Glyph) - Static method in class qupath.lib.gui.tools.GuiTools. Ensure that a Glyph is 'duplicatable', without losing its key properties. ensureDuplicatableGlyph(Glyph, boolean) - Static method in class qupath.lib.gui.tools.GuiTools. Ensure that a Glyph is 'duplicatable', optionally retaining any fill. ensureHandlesUpdated() - Method in class qupath.lib.roi.RoiEditor. In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. ensurePolygonal(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Strip non-polygonal parts from a GeometryCollection (non-recursive). ensureType(PixelType) - Static method in class qupath.opencv.ops.ImageOps.Core. Convert the Mat to match a specified pixel type. entrySet() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap;  ; envelopToRegion(Envelope, int, int) - Static method in class qupath.lib.roi.GeometryTools. Convert an Envelope to an ImageRegion. EOSIN - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. Eosin. EOSIN - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for eosin stain. Eosin_H_E - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit - Enum constant in enum class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:279604,avoid,avoid,279604,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"ion, typically used with a deep learning framework.; ; The primary intention of this interface is to provide a means to integrate machine learning libraries ; into existing QuPath pipelines that use OpenCV for processing (e.g. object or pixel classification).; ; Note that, where possible, implementations should support JSON serialization via Gson if they are ; intended to support serialization. Author:; Pete Bankhead; See Also:. BlobFunction; DnnModel; GsonTools. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default name to use for single input. static final String; DEFAULT_OUTPUT_NAME. Default name to use for single output. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T> predict(Map<String,T> input); Call a function that takes one or more inputs to produce zero or more outputs. Parameters:; input - map of input names and blobs; Returns:; map of output names and blobs. predict; T predict(T input); Call a function that takes a single input and provides a single output. Parameters:; input - input to the function; Returns:; output of the function. getInputs; Map<String,DnnShape> getInputs(); Get the required inputs.; ; Often, this is a si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html:1471,predict,predict,1471,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,1,['predict'],['predict']
Safety,"ionMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:5875,detect,detection,5875,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"ional windows if needed. getDefaultExtension() - Method in interface qupath.lib.images.writers.ImageWriter. Get the default extension. getDefaultFactory() - Static method in class qupath.lib.roi.GeometryTools. Get the default GeometryFactory to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpix",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370198,detect,detect,370198,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ions that interact with one or more viewers. ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:61063,detect,detection,61063,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"is.stats.Histogram. Get the index of the bin that should contain the specified value. getBinLeftEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the lower edge for a specified bin. getBinRightEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the upper edge for a specified bin. getBinWidth(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the width of a bin, which is the difference between its upper and lower edges. getBitsPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bits per pixel. getBlobFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. getBlobFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getBlobFunction(String) - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. getBlobFunction(String) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getBlue() - Method in class qupath.lib.color.StainVector. Get the blue component of the (normalized) stain vector. getBlue() - Method in class qupath.lib.display.settings.ChannelColor. Get the blue value. getBlueOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getBooleanParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a boolean parameter value (or its default) for the specified key. getBorderColor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the border color set for this viewer. getBoundaryClass(PathClass) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy. Get the classification to be used for the annotation boundary,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:336559,predict,prediction,336559,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"issing; public static IntegerProperty colorTMAMissingProperty; The default color used to display missing TMA core objects. See Also:. colorTMAMissingProperty(). colorTile; public static IntegerProperty colorTileProperty; The default color used to display tile objects. See Also:. colorTileProperty(). autoSetAnnotationClass; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38491,detect,detectionTreeDisplayMode,38491,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionTreeDisplayMode']
Safety,"isticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1512,predict,predictWithLock,1512,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"itClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109672,detect,detection,109672,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detection']
Safety,"jects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public boolean hasROI(); Returns true if this object has a ROI.; ; In general, objects are expected to have ROIs unless they are root objects. Returns:. isAnnotation; public boolean isAnnotation(); Returns true if the object is an annotation. Returns:; See Also:. PathAnnotationObject. isDetection; public boolean isDetection(); Returns true if the object is a detection.; ; Note that this returns true also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object has a ROI this should not be moved or resized ; (e.g. because child objects depend upon it). Returns:. getChildObjects; public Collection<PathObject> getChildObjects(); Get a collection of child objects.; ; In the current implementation, this is immutable - it cannot be modified directly. Returns:. getChild",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:13560,detect,detection,13560,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['detect'],['detection']
Safety,"kExtensions; public static boolean checkExtensions(String path,; String... extensions); Check whether a path ends with one of a number of specified extensions (case insensitive). Parameters:; path - ; extensions - ; Returns:. isMac; public static boolean isMac(); Return true if running on macOS. Returns:. isLinux; public static boolean isLinux(); Return true if running on Linux. Returns:. isWindows; public static boolean isWindows(); Return true if running on Windows. Returns:. deleteFile; public static boolean deleteFile(File fileToDelete,; boolean preferTrash); Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted.; ; Note that the behavior of this method is system-dependent, and there is no guarantee the file will ; indeed be moved to the trash. Parameters:; fileToDelete - ; preferTrash - ; Returns:; true if the file is successfully deleted, false otherwise. readURLAsString; public static String readURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; rec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:19533,timeout,timeoutMillis,19533,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,2,['timeout'],"['timeout', 'timeoutMillis']"
Safety,"kip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1094,predict,predictably,1094,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['predict'],['predictably']
Safety,"l classification in an object collection. static void; replaceClassification(PathClass originalClass,; PathClass newClass). Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29617,detect,detection,29617,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"l selected (detection) objects in the specified hierarchy. setInterpolation(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; setInterpolation(ImageInterpolation) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Set the preferred method of interpolation to use for display. setIsInteractive(boolean) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Sets the value of ChartThresholdPane.isInteractiveProperty(). setLastSavedPath(String, boolean) - Method in class qupath.lib.images.ImageData. Set the last path used to save this object;. setLineChartLegendLines(Chart, double) - Static method in class qupath.lib.gui.charts.ChartTools. Charts tend to show their legends with circular/square markers... setLineWidth(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the threshold line width. setLivePrediction(boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Turn on or off live prediction. setLocationStringFunction(AbstractOverlay.LocationStringFunction) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a custom function to calculate a location string for the overlay. setLocked(boolean) - Method in class qupath.lib.objects.PathObject. Set locked status, if possible. setLocked(boolean) - Method in class qupath.lib.objects.PathROIObject. Set locked flag, indicating that the object ROI should not be modified. setLUTColor(int, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo. Set the 'maximum' color, which defines the lookup table to use. setMagnification(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor based upon magnification values. setMaskImageNames(boolean) - Method in interface qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:933021,predict,prediction,933021,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"l, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3554,avoid,avoid,3554,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['avoid'],['avoid']
Safety,"l; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6086,predict,prediction,6086,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['prediction']
Safety,"l; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1507,predict,predict,1507,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['predict']
Safety,"l; qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:1445,predict,predictWithLock,1445,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). structureTensorEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the eigenvalues of the structure tensor (not yet implemented!). SubcellularDetection - Class in qupath.imagej.detect.cells. Experimental plugin to help with the quantification of subcellular structures. SubcellularDetection() - Constructor for class qupath.imagej.detect.cells.SubcellularDetection;  ; Subcommand - Interface in qupath.lib.gui.extensions. A subcommand for the command line interface. submitShortTask(Runnable) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). submitShortTask(Runnable) - Method in class qupath.lib.gui.SharedThreadPoolManager. Submit a short task to a shared thread pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1000689,detect,detect,1000689,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"lass for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositivePixelCounterIJ. Simple command to detect regions with positive staining. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; Prefs. Core QuPath preferences. Preprocessing. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing.PCAProjector. Helper class to apply PCA projection. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:44714,detect,detect,44714,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detect']
Safety,"lass qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog content text. ContextHelpViewer - Class in qupath.lib.gui.commands. Help window providing context-dependent help. ContourTracing - Class in qupath.lib.analysis.images. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing() - Constructor for class qupath.lib.analysis.images.ContourTracing;  ; ContourTracing.ChannelThreshold - Class in qupath.lib.analysis.images. Helper class defining global thresholds to apply to a single image channel. CONTRAST - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ConvertCommand - Class in qupath.lib.images.writers.ome. Allows command line option to convert an input image to OME-TIFF. ConvertCommand() - Constructor for class qupath.lib.images.writers.ome.ConvertCommand;  ; convertDetectionsToPoints(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Convert detection objects to point annotations based upon their ROI centroids. convertLabelsToCells(ImageProcessor, ImageProcessor, double, double, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Convert integer labeled images into cell objects. convertLabelsToCells(ImageProcessor, ImageProcessor, Calibration, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Convert integer labeled images into cell objects. convertPixelsToOpticalDensities(float[], double, boolean) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. For originally-8-bit images, optical densities can usually be computed faster by preallocating a LUT with the 0-255 required values. convertToAnnotation(Roi, double, double, double, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToAnnotation(Roi, double, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:140502,detect,detection,140502,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"lass qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255451,detect,detectionStrokeThicknessProperty,255451,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionStrokeThicknessProperty']
Safety,"lassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6527,predict,predictionOp,6527,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['predictionOp']
Safety,"lder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCells; public LabeledImageServer.Builder useCells(); Use cells rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCellNuclei; public LabeledImageServer.Builder useCellNuclei(); Use cells rather than annotations for labels, requesting the nucleus ROI where available.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useAnnotations; public LabeledImageServer.Builder useAnnotations(); Use annotations for labels. This is the default. Returns:; See Also:. useDetections(). useFilter; public LabeledImageServer.Builder useFilter(Predicate<PathObject> filter); Use a custom method of selecting objects for inclusion.; The default is to use annotations. Parameters:; filter - the filter that determines whether an object will be included or not; Returns:; See Also:. useAnnotations(). grayscale; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:6226,detect,detections,6226,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['detect'],['detections']
Safety,"lder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> threshold(double threshold); Set the threshold value used for the classification. Parameters:; threshold - ; Returns:; this builder. above; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> above(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). aboveEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> aboveEquals(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). belowEquals; public ObjectClassifiers.ClassifyByM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:4724,detect,detections,4724,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,1,['detect'],['detections']
Safety,"lean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert labeled images to annotation objects, determining the region from the filename if possible. labelsToCells(Path, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a 2-channel labeled image to cell objects. labelsToCells(Collection<Path>, boolean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. labelsToConnectedROIs(ImageProcessor, int) - Static method in class qupath.imagej.processing.RoiLabeling. Create ROIs from labels in an image. labelsToDetections(Path, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a labeled image to detection objects. labelsToDetections(Collection<Path>, boolean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert labeled images to detection objects, determining the region from the filename if possible. labelsToFilledRoiList(ImageProcessor, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a labelled image into a list of PolygonRois by tracing. labelsToFilledROIs(ImageProcessor, int) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a labelled image into a list of PolygonRois by tracing. labelsToObjects(Path, RegionRequest, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a labeled image to objects. labelText(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. LAPLACIAN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Laplacian of Gaussian filter. laplacianOfGaussian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the Laplacian of Gaussian image. L",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:646155,detect,detection,646155,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"least 10 pixels between ROIs to intersect to be considered an overlap,; while overlapTolerance == 0.01 will require at least 1% of the area of the smaller ROI to intersect.; ; It is recommended to keep overlapTolerance == 0 in most instances to remove all overlaps.; This is also less computationally expensive because it means intersection areas do not need to be calculated. Parameters:; pathObjects - input object collection, which may contain overlapping objects; comparator - comparator, which determines which object is retained when overlaps are found.; Considering the collection to be sorted by the comparator, the 'first' object is the one that will be kept.; overlapTolerance - amount of overlap to permit; Returns:; collection of objects, which should have smaller overlapping objects removed. mergeObjects; public static PathObject mergeObjects(Collection<? extends PathObject> pathObjects); Merge objects by calculating the union of their ROIs. Parameters:; pathObjects - a collection of annotations, cells, detections or tiles. Note that all objects must be of the same type.; Returns:; a single object with ROI(s) determined by union. The classification and name will be taken from the first ROI in the collection.; Throws:; IllegalArgumentException - if no objects are provided (either null or empty list). mergeObjects; public static <K> List<PathObject> mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier); Merge objects that share a property in common.; ; Note that objects must all be of the same type (e.g. cells, detections, annotations). Parameters:; pathObjects - ; classifier - function extracting the shared property, e.g. p -> p.getName(); Returns:; a new list of objects generated by merging grouped objects.; See Also:. mergeObjects(Collection). createLike; public static PathObject createLike(PathObject pathObject,; ROI roiNew); Create a new object with the same type and classification as the input object,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:49128,detect,detections,49128,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['detect'],['detections']
Safety,"lection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:5546,detect,detection,5546,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"leusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static boolean; createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static PixelClassificationMeasurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:3293,detect,detection,3293,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['detect'],['detection']
Safety,"lib.gui.images.stores.DefaultImageRegionStore;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Paint an image region. paintRegionARGB(int[], long, long, int, int, int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Similar to ImageRegionRenderer.paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). paintSelectedBoundsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether the bounding box of selected objects should be painted. paintShape(Shape, Graphics2D, Color, Stroke, Color) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified shape with specified stroke and fill colors. paintSpecifiedObjects(Graphics2D, Collection<? extends PathObject>, OverlayOptions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified objects. paintTileBorders - Static variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; paintTMAGrid(Graphics2D, TMAGrid, OverlayOptions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified tissue microarray grid. paintViewer(Graphics, int, int) - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:742348,abort,abort,742348,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['abort'],['abort']
Safety,"lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of floats. FLOAT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit floating point. FLOAT64 - Enum constant in enum class qupath.lib.images.servers.PixelType. 64-bit floating point. floor() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that floors floating point values. floor(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Floor values in a floating point Mat. FLUORESCENCE - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Fluorescence image. FLUORESCENCE - Static variable in class qupath.lib.scripting.QP. Fluorescence image type. fontProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current selected font. fontSizeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; forceOverlayUpdate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Force the overlay displaying detections and annotations to be repainted. formatNumber(double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:312392,detect,detections,312392,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"lic static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109416,detect,detectionToAnnotationDistances,109416,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detectionToAnnotationDistances']
Safety,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:5976,predict,predict,5976,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,4,['predict'],['predict']
Safety,"limiter - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Locale locale,; double[] array,; int nDecimalPlaces); Convert a double array to a String using a space as a delimiter. Parameters:; locale - ; array - ; nDecimalPlaces - ; Returns:. arrayToString; public static String arrayToString(Object[] array,; String delimiter); Convert a String array to a single string, with a specified delimiter string. Parameters:; array - ; delimiter - ; Returns:. splitLines; public static String[] splitLines(String s); Split new lines (in a cross-platform way... i.e. not with s.split(""\n""), which is asking for trouble). Parameters:; s - ; Returns:. createFormatter; public static NumberFormat createFormatter(int nDecimalPlaces); Create a new DecimalFormat that may be used to convert a number to have a maximum of nDecimalPlaces; (trailing zeros are not shown).; ; Important note: this always formats as 1.234 rather than 1,234 - regardless of Locale.; Consequently its results are more predictable... but may not be consistent with other number formatting on ; the specified platform. Parameters:; nDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using the default Locale. Parameters:; value - ; maxDecimalPlaces - ; Returns:. formatNumber; public static String formatNumber(Locale locale,; double value,; int maxDecimalPlaces); Format a value with a maximum number of decimal places, using a specified Locale. Parameters:; locale - ; value - ; maxDecimalPlaces - ; Returns:. parseArgStringValues; public static Map<String,String> parseArgStringValues(String s); Parse the contents of a JSON String.; ; Note that this is pretty unsophisticated... also, no localization is performed (using Java's Locales, for example) -; so that decimal values should be provided in the form 1.234 (and not e.g. 1,234). Parameters:; s - ; Returns:. micrometerSymbol; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:16439,predict,predictable,16439,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['predict'],['predictable']
Safety,"ll, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; pathObject - ; list - ; Returns:. getConnectedClusters; public List<Set<PathObject>> getConnectedClusters(); Get a list of PathObjects that are connected to each other in this triangulation.; ; Warning: This list is recomputed on every call, therefore references should be cached by the caller if necessary; to avoid too much recomputation. Returns:. addClusterMeasurements; public void addClusterMeasurements(); Compute mean measurements from clustering all connected objects. addNodeMeasurements; public void addNodeMeasurements(); Add Delaunay measurements to each pathObject. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:4544,avoid,avoid,4544,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,1,['avoid'],['avoid']
Safety,"llection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7659,detect,detection,7659,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety,"lls - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; distance - distance (in pixels) by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:4211,avoid,avoids,4211,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['avoid'],['avoids']
Safety,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63386,detect,detectionStrokeThicknessProperty,63386,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,3,['detect'],"['detectionStrokeThicknessProperty', 'detections']"
Safety,"lobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:2262,predict,predictionMeasurement,2262,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['predict'],['predictionMeasurement']
Safety,"lorTMAMissingProperty; public static IntegerProperty colorTMAMissingProperty(); The default color used to display missing TMA core objects. Returns:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> sca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59088,detect,detectionTreeDisplayModeProperty,59088,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,2,['detect'],"['detectionTreeDisplayModeProperty', 'detections']"
Safety,"ls.Parameters.Builder. Optionally set a temporary object to use as a parent. parse(byte[][], int, int, int, ColorModel) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser. Creates a BufferedImage from a 2-dimensional byte array. parse(String) - Static method in class qupath.lib.common.Version. Parse a Version object representing a semantic version number from a String. parseAnnotations(Action, AnnotatedElement) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action. parseAnnotations(Action, AnnotatedElement, String) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action with an optional base menu. parseArgStringValues(String) - Static method in class qupath.lib.common.GeneralTools. Parse the contents of a JSON String. parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.opencv.CellCountsCV;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. parseColorDeconvolutionStainsArg(String) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. parseDisplaySettings(JsonElement) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object, if possible. parseDisplaySettings(Path) - Static method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:747706,detect,detect,747706,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"lt extension. getDefaultFactory() - Static method in class qupath.lib.roi.GeometryTools. Get the default GeometryFactory to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeatureP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370319,detect,detect,370319,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"lt implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777286,predict,prediction,777286,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"ltaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3370,predict,predictWithLock,3370,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,5,['predict'],"['predict', 'predictWithLock']"
Safety,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:61176,detect,detection,61176,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"ly for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14765,detect,detectionToAnnotationDistancesSigned,14765,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety,"lygon (if valid), an adjusted polygon (if attempted fixes helped),; or an empty polygon if the situation could not be resolved. refineAreas; public static Geometry refineAreas(Geometry geometry,; double minSizePixels,; double minHoleSizePixels); Remove small fragments and fill small interior rings within a Geometry.; ; Note that any modifications to the geometry will result in points and lines being stripped away, ; leaving only polygons. Parameters:; geometry - input geometry to refine; minSizePixels - minimum area of a fragment to keep (the area of interior rings for polygons will be ignored); minHoleSizePixels - minimum size of an interior hole to keep; Returns:; the refined geometry (possibly the original unchanged), or empty geometry if the changes resulted in the Geometry disappearing; See Also:. removeFragments(Geometry, double); removeInteriorRings(Geometry, double). splitGeometryByLineStrings; public static List<Geometry> splitGeometryByLineStrings(Geometry polygon,; Collection<? extends Geometry> splitLines); throws IllegalArgumentException; Split an input polygonal geometry using a collection of split lines.; ; The main input must be polygonal, but the split lines can be any geometry type; their linestrings will be; extracted and used for splitting.; ; Important! This will also split a MultiPolygon into its constituent; Polygon objects as a side effect. This is to ensure consistency and avoid; cases where linestrings may span multiple polygons within the same multipolygon.; The output may be combined to form a new multipolygon later if required. Parameters:; polygon - the polygonal geometry to split; splitLines - a collection of geometries, whose union will be used to split the input geometry; Returns:; a list of polygons formed by the splitting. This may return the original geometry, or geometries within; an original collection, if these do not need to be split.; Throws:; IllegalArgumentException - if the input geometry is not polygonal; Since:; v0.5.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:11527,avoid,avoid,11527,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['avoid'],['avoid']
Safety,"m representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:2147,predict,prediction,2147,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['predict'],['prediction']
Safety,"mage into a list of PolygonRois by tracing.; ; Unlike labelsToFilledROIs, the order in which ROIs are returned is arbitrary.; ; Also, the multiple Rois may be created for the same label, if unconnected regions are used. Parameters:; ipLabels - ; conn8 - ; Returns:. labelsToConnectedROIs; public static Roi[] labelsToConnectedROIs(ImageProcessor ipLabels,; int n); Create ROIs from labels in an image. Parameters:; ipLabels - the labeled image; generally this should be a ByteProcessor or ShortProcessor; n - the total number of labels; often this is equal to the maximum value in the image; Returns:; an array of length n; output[i] is the ROI for label i+1, or null if no Roi is found; with that label. getFilledPolygonROIsFromLabels; public static Map<Float,PolygonRoi> getFilledPolygonROIsFromLabels(ImageProcessor ip,; int wandMode); Get filled Polygon ROIs using distinct labels, creating a map between labels and ROIs.; ; Note that discontinuous ROIs are not supported; if labelled regions are discontinuous,; then ROIs detected earlier will be discarded from the map. Parameters:; ip - ; wandMode - ; Returns:. getFilledPolygonROIs; public static List<PolygonRoi> getFilledPolygonROIs(ImageProcessor ip,; int wandMode); Get filled PolygonRois for connected pixels with the same value in an image.; Because this uses ImageJ's Wand tool, holes will be filled.; ; Note that this command applies any thresholds that were set in the ImageProcessor, returning ; only Rois for values within these limits. Therefore to identify only non-zero pixels in a labelled image; you may need to first call ip.setThreshold(0.5, Double.POSITIVE_INFINITY, ImageProcessor.NO_LUT_UPDATE);. Parameters:; ip - ; wandMode - ; Returns:. wandToRoi; public static PolygonRoi wandToRoi(Wand wand); Convert a traced outline from the ImageJ Wand into a PolygonRoi. Parameters:; wand - ; Returns:. fillHoles; public static void fillHoles(ByteProcessor bp); Fill holes in a binary image.; ; Assumes 255 is foreground, 0 is ba",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:6271,detect,detected,6271,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,1,['detect'],['detected']
Safety,"mage that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static PixelClassificationOverlay; createFeatureDisplayOverlay(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. static String; getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t). Default method for getting a location string from an ImageServer using cached tiles. boolean; getLivePrediction(). Query whether live prediction is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:2819,predict,prediction,2819,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
Safety,"mage(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create the default (blank) RGB image for this server. createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:173830,detect,detection,173830,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"mage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:2932,timeout,timeoutMilliseconds,2932,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['timeout'],['timeoutMilliseconds']
Safety,"mages.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDefa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370691,detect,detect,370691,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"maps.DensityMaps.DensityMapType. No normalization; maps provide raw object counts in a defined radius. sumFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image, with symmetric boundary padding. sumFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image. summarize(Net, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Create a (multiline) summary String for a Net, given the specified image input dimensions. summarizeCheckpoints() - Method in class qupath.lib.common.Timeit. Request that checkpoints are summarized in the Timeit.toString() method. summarizeCheckpoints(boolean) - Method in class qupath.lib.common.Timeit. Optionally request that checkpoints are summarized in the Timeit.toString() method. SummaryMeasurementTableCommand - Class in qupath.lib.gui.commands. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SummaryMeasurementTableCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Command to show a summary measurement table, for PathObjects of a specified type (e.g. supports2D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 2D images. supports3D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 3D images (z-stacks). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1004069,detect,detection,1004069,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ments, clearMeasurements, clearMeasurements, clearMeasurements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7724,detect,detectionCentroidDistances,7724,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionCentroidDistances']
Safety,"mes on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProperty(). measurementMapper; public ObjectProperty<MeasurementMapper> measurementMapperProperty. See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper); measurementMapperProperty(). hiddenClasses; public ObservableSet<PathClass> hiddenClassesProperty.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6514,detect,detectionDisplayMode,6514,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detectionDisplayMode']
Safety,"meterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:474863,detect,detect,474863,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"meters.Builder<S,T>. Builder class for Parameters. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathClass. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses. Enum representing standard classifications. PathClassFactory; Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses. Enum representing standard classifications. PathClassTools. Static methods for use with PathClass objects. PathDetectionObject. A detection PathObject. PathHierarchyImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; PathO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:38600,detect,detection,38600,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:174870,detect,detection,174870,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775824,predict,predict,775824,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"mmary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1182,detect,detections,1182,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['detect'],['detections']
Safety,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1194,hazard,hazard,1194,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,5,['hazard'],['hazard']
Safety,"mpts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:7080,detect,detection,7080,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"n Delaunay triangulation. DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. DelaunayTriangulation. Compute Delaunay triangulation using OpenCV. DensityMapCommand. Command for generating density maps from detections on an image. DensityMapDialog. Dialog for interactively generating a custom density map. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. DensityMapUI. UI elements associated with density maps. DetectCytokeratinCV. Simple command to detect tumor regions stained with cytokeratin. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. Dialogs; Deprecated.; since v0.5.0. Dialogs.Builder; Deprecated.; Dialogs.DialogButton. Possible buttons pressed in a yes/no/cancel dialog. DilateAnnotationPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. DirectServerChannelInfo. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:13944,detect,detection,13944,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"n class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399908,hazard,hazard,399908,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hazard'],['hazard']
Safety,"n of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This wil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:4540,detect,detection,4540,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['detect'],['detection']
Safety,"n the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4617,detect,detections,4617,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"n) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258026,detect,detections,258026,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"n, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. PathAnnotationObject. An annotation PathObject. PathCellObject. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathDetectionObject. A detection PathObject. PathObject. Fundamental object of interest in QuPath. PathObjectConnectionGroup. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections. Data structure for storing multiple PathObjectConnectionGroups. PathObjectFilter. Enumeration of filters (predicates) that can be used to select objects based on their type. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1961,predict,predictable,1961,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['predict'],['predictable']
Safety,"nCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1616,predict,predictWithLock,1616,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['predict'],['predictWithLock']
Safety,"nCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getName() - Method in class qupath.imagej.gui.IJExtension;  ; getName() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getName() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:447026,detect,detect,447026,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"nager. Detach the specified viewer from the viewer grid, if possible. detect(DetectionModel, Mat, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:252738,detect,detectionCentroidDistances,252738,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionCentroidDistances']
Safety,"nal) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:525098,detect,detect,525098,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14533,detect,detectionTreeDisplayModeProperty,14533,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionTreeDisplayModeProperty']
Safety,"navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNavigationSpeed(). Get navigation speed scaled as a proportion and forced to be in the range 0-1. static double; getScaledScrollSpeed(). Get scroll speed scaled as a proportion and forced to be in the range 0-1. static String; getSerializationExtension(). File extension used for serialization of ImageData (without the dot). static boolean; getShowAllRGBTransforms(). Request that all available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. static Preferences; getUserPreferences(). Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). static BooleanProperty; gridScaleMicronsProperty(). Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingXProperty(). Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingYProperty(). Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartXProperty(). Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartYProperty(). Starting y coordinate for any counting grid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:16354,avoid,avoid,16354,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avoid'],['avoid']
Safety,"ncv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp preprocessor(FeaturePreprocessor preprocessor); Apply a FeaturePreprocessor to pixels, considering each channel as features. Parameters:; preprocessor - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1516,predict,prediction,1516,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,2,['predict'],['prediction']
Safety,"nd Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion regio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:1849,detect,detections,1849,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['detect'],['detections']
Safety,"nds.Commands. Select all objects (excluding the root object) in the imageData. selectAllObjects(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all objects in the specified hierarchy, excluding the root object. selectAllObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain all objects. selectAnnotations() - Static method in class qupath.lib.scripting.QP. Select all annotation objects in the current hierarchy. selectAnnotations(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all annotation objects in the specified hierarchy. selectCells() - Static method in class qupath.lib.scripting.QP. Select all cell objects in the current hierarchy. selectCells(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all cell objects in the specified hierarchy. selectDetections() - Static method in class qupath.lib.scripting.QP. Select all detection objects in the current hierarchy. selectDetections(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all detection objects in the specified hierarchy. selected(boolean) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the selected property of the action. selected(ObservableValue<Boolean>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the selected property of the action to an ObservableValue, bidirectionally if possible. selectedChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. The channel to which the sliders are applied. selectedChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently selected for display. selectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; SelectedMeasurementTableView - Class in qupath.lib.gui.panes. Component to show measurements for a currently-selected o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:894634,detect,detection,894634,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ned distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258424,detect,detectVendor,258424,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectVendor']
Safety,"ner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stride); Test method for rearranging a collection so that entries are interleaved with a regularity given by stride.; ; It can be used to rearrange tasks to try to make better use of cached image regions, by helping to ensure that; all available processors are operating on distinct parts of the image - rather than all in the same region,; where image tile requests could become a bottleneck.; ; Intended use would be something like the following:; ; int n = tasks.size();; Runnable[] tasks2 = new Runnable[n];; if (rearrangeByStride(tasks, tasks2, Runtime.getRuntime().availableProcessors())); tasks = Arrays.asList(tasks2);; . Parameters:; input - ; output - ; stride - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:6369,avoid,avoid,6369,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['avoid'],['avoid']
Safety,"ner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775324,predict,predict,775324,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"nes before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyTitledPane(TitledPane, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:977759,detect,detect,977759,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ng based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. static void; setWandSensitivity(double sensitivity). Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static void; setWandSigmaPixels(double sigma). Set the Gaussian sigma value used to smooth the image when applying the wand. static void; setWandUseOverlays(boolean useOverlays). Set whether the wand tool should be influenced by pixel values painted on image overlays. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. static DoubleProperty; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, pref",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:4373,avoid,avoid,4373,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,1,['avoid'],['avoid']
Safety,"ng objects recursively; to get the number of direct child object only ; see nChildObjects(). Returns:; the number of child objects, plus the number of each child object's descendants; See Also:. nChildObjects(). hasChildObjects; public boolean hasChildObjects(); Check if this object has children, or if its child object list is empty. Returns:; Since:; v0.4.0, replaces hasChildren() for more consistent naming. hasChildren; @Deprecated; public boolean hasChildren(); Deprecated.; since v0.4.0, replaced by hasChildObjects(). Legacy method to check for child objects. Returns:. hasROI; public boolean hasROI(); Returns true if this object has a ROI.; ; In general, objects are expected to have ROIs unless they are root objects. Returns:. isAnnotation; public boolean isAnnotation(); Returns true if the object is an annotation. Returns:; See Also:. PathAnnotationObject. isDetection; public boolean isDetection(); Returns true if the object is a detection.; ; Note that this returns true also if the object is a subclass of a detection, ; e.g. a tile or cell. Returns:; See Also:. isCell(); PathDetectionObject; PathCellObject; PathTileObject. isCell; public boolean isCell(); Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). Returns:; See Also:. isDetection(); PathDetectionObject; PathCellObject; PathTileObject. hasMeasurements; public boolean hasMeasurements(); Returns true if the measurement list for this object is not empty. Returns:. isTMACore; public boolean isTMACore(); Returns true if this object represents a TMA core. Returns:; See Also:. TMACoreObject. isTile; public boolean isTile(); Returns true if this object represents an image tile. Returns:; See Also:. PathTileObject. isEditable; public abstract boolean isEditable(); Flag indicating that the object is editable.; ; If this returns false, this indicates the object has a ROI this should not be moved or resized ; (e.g. because child objects depend upon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:13346,detect,detection,13346,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['detect'],['detection']
Safety,"ng, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; createDetector(ImageDa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:176081,detect,detection,176081,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:3914,detect,detected,3914,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['detect'],['detected']
Safety,"not be modified. setLUTColor(int, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo. Set the 'maximum' color, which defines the lookup table to use. setMagnification(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor based upon magnification values. setMaskImageNames(boolean) - Method in interface qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMaxDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the max display value for this channel. setMaxHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max height property for the specified regions. setMaxThreads(int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the maximum number of threads that may be used during live prediction. setMaxWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max width property for the specified regions. setMeasurementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. setMemoizationTimeMillis(int) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the number of milliseconds that must elapse when opening an image before a memoization file is generated. setMemoryThreshold(double) - Static method in class qupath.imagej.tools.IJTools;  ; setMetadata(ImageServerMetadata) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Not allowed - throws an UnsupportedOperationException. setMetadata(ImageServerMetadata) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Throws ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:934488,predict,prediction,934488,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is recommended to; use either tab (\t), comma (,) or ; semicolon (;). Parameters:; sep - ; Returns:; this exporter. imageList; public MeasurementExporter imageList(List<ProjectImageEntry<BufferedImage>> imageList); Specify the list of images (ProjectImageEntry) to export. Parameters:; imageList - ; Returns:; this exporter. filter; public MeasurementExporter filter(Predicate<PathObject> filter); Filter the PathObjects before export (objects returning true for the predicate will be exported). Parameters:; filter - ; Returns:; this exporter; Since:; v0.3.2. getImageList; public List<ProjectImageEntry<BufferedImage>> getImageList(); Returns the list of images (ProjectImageEntry). Returns:; imageList. getExcludeColumns; public List<String> getExcludeColumns(); Returns the list of columns to exclude from export. Returns:; list of column names. getIncludeColumns; public List<String> getIncludeColumns(); Returns the list of columns to include in the export. Returns:; list of column names. getSeparator; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:3272,avoid,avoid,3272,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['avoid'],['avoid']
Safety,"nput. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; blobs - ; Returns:. predict; public Mat predict(Mat mat); Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat.; ; Note that this o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:3247,predict,prediction,3247,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['predict'],['prediction']
Safety,"ns for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1594,detect,detection,1594,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['detect'],['detection']
Safety,"ns true if TMA cores are available. isToolSwitchingEnabled() - Method in class qupath.lib.gui.ToolManager. Returns true if the user is able to activate another PathTool, false otherwise. isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier has already been trained and is ready to predict. isTranslating() - Method in class qupath.lib.roi.RoiEditor. Query if a ROI is currently being translated through this editor. isTransparent() - Method in class qupath.lib.images.servers.ImageChannel. Check if the color is 'transparent'; this is used for background/ignored channels. isTwoPlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this neither a lower nor an upper bound constraining valid values. isUndoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isUndoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'undo' can be applied to the control. isUndoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isUnknown() - Method in class qupath.opencv.dnn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:635624,predict,predict,635624,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"nsity map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107864,detect,detectionCentroidDistances,107864,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety,"nt image in the viewer, while keeping the same downsample factor. centerROI(ROI) - Method in class qupath.lib.gui.viewer.QuPathViewer. Center the specified ROI in the viewer. centroidDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI centroids within a specified distance. centroids() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI centroids. centroids(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects in pixel units. centroids(Collection<? extends PathObject>, PixelCalibration) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects using a fixed pixel calibration. CENTROIDS - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only detection centroids, not boundaries. CENTROIDS_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; centroidToBoundsDistance2D(Collection<PathObject>, Collection<PathObject>, double, double, String) - Static method in class qupath.lib.analysis.DistanceTools. Calculate the distance between source object centroids and the boundary of specified target objects, adding the result to the measurement list of the source objects. centroidToBoundsDistance2D(Collection<PathObject>, Collection<PathObject>, double, double, String, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Calculate the (optionally signed) distance between source object centroids and the boundary of specified target objects, adding the result to the measurement list of the source objects. centroidToCentroidDistance2D(Collection<PathObject>, Collection<PathObject>, double, double, String) - Static method in class qupath.lib.analysis.DistanceTools. Calculate the distance between source object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:88468,detect,detection,88468,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"nt to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:53147,avoid,avoid,53147,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['avoid'],['avoid']
Safety,"nt; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; parentObject - ; tasks - . runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:4536,detect,detection,4536,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['detect'],['detection']
Safety,"ntTableCommand; qupath.lib.extension.svg.SvgExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.extension.svg.SvgExtension.SvgActions; qupath.lib.extension.svg.SvgTools; qupath.lib.extension.svg.SvgTools.SvgBuilder; qupath.lib.gui.prefs.SystemMenuBar; qupath.lib.plugins.TaskRunnerUtils; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.opencv.tools.Thinning; qupath.lib.common.ThreadTools; java.lang.Throwable (implements java.io.Serializable). java.lang.Exception. java.lang.RuntimeException. qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException. qupath.imagej.images.writers.TiffWriterIJ; qupath.lib.images.writers.TileExporter; qupath.lib.objects.utils.Tiler; qupath.lib.objects.utils.Tiler.Builder; qupath.lib.images.servers.TileRequest; qupath.lib.common.Timeit; qupath.lib.common.Timeit.Checkpoint; qupath.lib.gui.commands.TMACommands; qupath.lib.gui.tma.TMADataIO; qupath.imagej.detect.dearray.TMADearrayer; qupath.lib.gui.tma.TMAExplorer (implements java.lang.Runnable); qupath.lib.gui.actions.menus.TMAMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.TMAMenuActions.Actions; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions; qupath.lib.io.TMAScoreImporter; qupath.lib.gui.tma.TMASummaryViewer; qupath.lib.gui.ToolManager; qupath.lib.images.servers.TransformedServerBuilder; com.google.gson.TypeAdapter<T>. qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter<T>. qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.extensions.UpdateChecker; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion; qupath.lib.gui.commands.UpdateUr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:35648,detect,detect,35648,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"nterface qupath.lib.images.servers.ImageServer. Get the image for a given associated image name. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a named associated image. getAssociatedImage(String) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getAssociatedImageList() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getAssociatedImageList() - Method in interface qupath.lib.images.servers.ImageServer. Get a list of 'associated images', e.g. getAssociatedImageList() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getAssociatedImages() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get a list of all associated image names. getAtRisk(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number at risk at a specified time. getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.CssLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.JsonLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PlainLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PropertiesLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.XmlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.YamlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the ScriptAutoCompletor object that takes care of this language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the aut",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:331700,risk,risk,331700,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['risk'],['risk']
Safety,"nt tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:3024,abort,abort,3024,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['abort'],['abort']
Safety,"n splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108439,detect,detectionCentroidDistances,108439,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,5,['detect'],"['detection', 'detectionCentroidDistances']"
Safety,"o determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:7567,detect,detection,7567,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"o prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any cou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:2969,detect,detections,2969,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detections']
Safety,"o the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; Since:; v0.4.0; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; signedDistances - optionally calculate signed distances, i.e. negative values for source centroids that occur inside target objects representing the distance to the target object boundary; Since:; v0.4.0. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:5363,detect,detectionToAnnotationDistances,5363,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"oUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis - package qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms - package qupath.lib.analysis.algorithms. Clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805825,detect,detection,805825,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane() - Constructor for class qupath.lib.gui.panes.PreferencePane;  ; PreferencePane.AppearancePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.DrawingPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ExtensionPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.GeneralPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.InputOutputPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.LocalePreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.MeasurementPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ObjectPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.ScriptingPreferences - Class in qupath.lib.gui.panes;  ; PreferencePane.UndoRedoPreferences - Class in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778973,predict,predictWithLock,778973,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety,"od Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Map<String,DnnShape>; getInputs(). Get the required inputs. Map<String,DnnShape>; getOutputs(DnnShape... inputShapes). Get the output names mapped to the output shapes. default Map<String,T>; predict(Map<String,T> input). Call a function that takes one or more inputs to produce zero or more outputs. T; predict(T input). Call a function that takes a single input and provides a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default name to use for single input. See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default name to use for single output. See Also:. Constant Field Values. Method Details. predict; default Map<String,T> predict(Map<String,T> input); Call a function that takes one or more inputs to produce zero or more outputs. Parameters:; input - map of input names and blobs; Returns:; map of output names and blobs. predict; T predict(T input); Call a function that takes a single input and provides a single output. Parameters:; input - input to the function; Returns:; output of the function. getInputs; Map<String,DnnShape> getInputs(); Get the required inputs.; ; Often, this is a singleton map with key DEFAULT_INPUT_NAME for functions that take a single input.; ; If the shape is known, the axis order is typically NCHW.; NCHW is used by OpenCV https://docs.opencv.org/4.5.2/d6/d0f/group__dnn.html#ga29f34df9376379a603acd8df581ac8d7; and also by PyTorch; for TensorFlow some rearrangement may be needed. Returns:. getOutputs; Map<String,DnnShape> getOutputs(DnnShape... inputShapes); Get the output names mapped to the output shapes.; ; Often, this is a singleton map with key DEFAULT_OUTPUT_NAME for functions that provide a single output. Parameters:; inputShapes - optional input shapes; if not provided, the output shapes are generally DnnShape.UNKNOWN_SHAPE; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html:2203,predict,predict,2203,javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/PredictionFunction.html,2,['predict'],['predict']
Safety,"od. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.DTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:1274,predict,predict,1274,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,1,['predict'],['predict']
Safety,"odel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException; Apply a classification model to an image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException,; IllegalArgumentException; Apply a classification model to an image patch to classify an object.; If a patch width and height both > 0, the patch is cropped around the ROI centroid and padded if necessary.; If a patch width and height both < 0, the bounding box of hte ROI is used directly and the model is assumed able to ; resize if needed.; If the patch width and height are anything else, an IllegalArgumentException is thrown. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; width - the fixed input size; height - the fixed input size; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:10547,predict,predictionMeasurement,10547,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['predict'],['predictionMeasurement']
Safety,"of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.XmlLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.YamlLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.UserDirectoryManager. Get the singleton instance of the UserDirectoryManager. getInstance() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the static instance of BioFormatsServerOptions, available to servers being constructed. getInstance() - Static method in class qupath.lib.io.GsonTools. Get default Gson, capable of serializing/deserializing some key QuPath classes. getInstance() - Static method in class qupath.lib.objects.DefaultPathObjectComparator. Get shared comparator instance to sort PathObjects repeatably. getInstance() - Static method in class qupath.lib.roi.DefaultROIComparator. Get a static instance of this comparator, to avoid needing to construct it. getInstance(boolean) - Static method in class qupath.lib.io.GsonTools. Get default Gson, optionally with pretty printing enabled. getInstance(int, int) - Static method in class qupath.lib.geom.ImmutableDimension. Get an ImmutableDimension representing the specified width and height. getInstance(String) - Static method in class qupath.lib.objects.classes.PathClass;  ; getInstance(String, Integer) - Static method in class qupath.lib.images.servers.ImageChannel. Get a channel instance with the specified name and color. getInstance(String, Integer) - Static method in class qupath.lib.objects.classes.PathClass. Get a base PathClass instance, without any parent PathClass. getInstance(QuPathGUI) - Static method in class qupath.lib.gui.commands.ContextHelpViewer. Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. getInstance(QuPathGUI) - Static method in class qupath.lib.gui.WelcomeStage;  ; getInstance(PathClass, Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:417101,avoid,avoid,417101,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"okeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:253374,detect,detection,253374,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety,"olean addObjects(Collection<? extends PathObject> pathObjects); Add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:; Since:; v0.4.0; replaces addPathObjects(Collection). addPathObjects; @Deprecated; public boolean addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0; use addObjects(Collection) instead. Legacy method to add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:. clearAll; public void clearAll(); Remove all objects from the hierarchy. getPointObjects; public Collection<PathObject> getPointObjects(Class<? extends PathObject> cls); Get objects that contain Point ROIs. Parameters:; cls - ; Returns:. getCellObjects; public Collection<PathObject> getCellObjects(); Get all cell objects in the hierarchy. Returns:. getTileObjects; public Collection<PathObject> getTileObjects(); Get all tile objects in the hierarchy. Returns:. getDetectionObjects; public Collection<PathObject> getDetectionObjects(); Get all detection objects in the hierarchy (including sub-classes of detections). Returns:. getAnnotationObjects; public Collection<PathObject> getAnnotationObjects(); Get all annotation objects in the hierarchy. Returns:. getObjects; public Collection<PathObject> getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class.; Note that this method returns the root object, unless it has been filtered out. Parameters:; pathObjects - ; cls - ; Returns:. updateObject; public void updateObject(PathObject pathObject,; boolean isChanging); Update an object that is already in the hierarchy (e.g. because its ROI has changed). Parameters:; pathObject - the object to update; isChanging - if true, indicate that the object is still being changed.; Some listeners may delay processing in expectation of an update event where isChanging is false. getFlattenedObjectList;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:16096,detect,detection,16096,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['detect'],"['detection', 'detections']"
Safety,"olean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2937,avoid,avoid,2937,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['avoid'],['avoid']
Safety,"olor; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; scaleColor(Color color,; double factor). Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb,; boolean hasAlpha); Get cached color, explicitly stating whether alpha should be included or not. Parameters:; rgb - ; hasAlpha - ; Returns:. getIndexColorModel; public static IndexColorModel getIndexColorModel(StainVector stain,; boolean whiteBackground); Get an IndexColorModel representing a color deconvolution stain.; The color is just an approximation for visualization purposes, it does not perfectly match the stain itself. Parameters:; stain - the stain to use; whiteBackground - if true, the color model will have a white background; if false, it will have a black background; Returns:. createIndexColorModel; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:3575,avoid,avoid,3575,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['avoid'],['avoid']
Safety,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6582,predict,predict,6582,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,4,['predict'],['predict']
Safety,"om class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; Since:; v0.4.0; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:4750,detect,detectionToAnnotationDistancesSigned,4750,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,4,['detect'],"['detection', 'detectionToAnnotationDistancesSigned']"
Safety,"om the input. createObjectsChangedEvent(Object, PathObjectHierarchy, PathObjectHierarchyEvent.HierarchyEventType, Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. createObjectsFromPixelClassifier(ImageServer<BufferedImage>, Map<Integer, PathClass>, ROI, Function<ROI, ? extends PathObject>, double, double, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects based upon an ImageServer that provides classification or probability output. createObjectsFromPredictions(ImageServer<BufferedImage>, PathObjectHierarchy, Collection<PathObject>, Function<ROI, ? extends PathObject>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. createObjectsFromROIs(ImagePlus, Collection<? extends Roi>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. createObjectTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a TreeTableView showing the names and values of object fields, accessed via reflection. createPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; createPane() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. createPane(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:205086,predict,predictions,205086,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictions']
Safety,"on copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:5826,detect,detection,5826,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['detect'],['detection']
Safety,"on links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. Direct Known Subclasses:; PositiveCellDetection. public class WatershedCellDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining.; ; To automatically classify cells as positive or negative along with detection, see PositiveCellDetection.; ; To quantify membranous staining see WatershedCellMembraneDetection. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; parametersInitialized;  . Constructor Summary; Constructors. Constructor; Description; WatershedCellDetection();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. static boolean; getDebugMode(). Get whether debug mode is on or off. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:1116,detect,detection,1116,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['detect'],['detection']
Safety,"on-8-bit image that should be saturated when applying auto contrast settings. SAVE_DATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; SAVE_DATA_AS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; saveAnnotationMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save annotation measurements for the current image. saveAnnotationMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save annotation measurements for the specified image. saveChannelColorProperties() - Method in class qupath.lib.display.ImageDisplay. Save color channels in the ImageData properties. saveDetectionMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the current image. saveDetectionMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the specified image. savedName(StringProperty) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Property to store the saved name; this is useful if the name is required externally. saveImageData(ImageData<T>) - Method in interface qupath.lib.projects.ProjectImageEntry. Save the ImageData for this entry using the default storage location for the project. saveImageMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the current image. saveImageMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the specified image. saveMeasurements(Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the current image for objects of a fixed type. saveMeasurements(ImageData<?>, Class<? extends PathObject>, String, String...) - Static method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:881330,detect,detection,881330,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"on.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:22424,detect,detected,22424,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detected']
Safety,"on; static PathObject; createAnnotationObject(ROI roi). Create an unclassified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurement list. static PathObject; createTileObject(ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:1817,detect,detection,1817,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety,"onConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:174522,detect,detection,174522,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"onObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus. PathCellObject() - Constructor for class qupath.lib.objects.PathCellObject. Default constructor. PathClass - Class in qupath.lib.objects.classes. Representation of an object's classification - which can be defined using any unique string; identifier (e.g. PathClass.StandardPathClasses - Class in qupath.lib.objects.classes. Enum representing standard classifications. PathClassFactory - Class in qupath.lib.objects.classes. Deprecated.; since v0.4.0 in favor of methods added to PathClass directly. PathClassFactory.StandardPathClasses - Enum Class in qupath.lib.objects.classes. Deprecated.; Enum representing standard classifications. PathClassTools - Class in qupath.lib.objects.classes. Static methods for use with PathClass objects. PathDetectionObject - Class in qupath.lib.objects. A detection PathObject. PathDetectionObject() - Constructor for class qupath.lib.objects.PathDetectionObject. Default constructor. PathDetectionObject(ROI, PathClass) - Constructor for class qupath.lib.objects.PathDetectionObject. Create a new PathDetectionObject with a float measurement list. PathHierarchyImageServer - Class in qupath.lib.gui.images.servers. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathHierarchyImageServer(ImageData<BufferedImage>, OverlayOptions) - Constructor for class qupath.lib.gui.images.servers.PathHierarchyImageServer. Constructor. PathImage<T> - Interface in qupath.lib.images. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T> - Interface in qupath.lib.plugins. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO - Cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:752811,detect,detection,752811,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"onOverlay. createFeatureDisplayOverlay; @Deprecated; public static PixelClassificationOverlay createFeatureDisplayOverlay(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer); Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. Create an overlay to display a live image that can be created from an existing ImageData. Parameters:; options - options to control the overlay display; fun - function to create an ImageServer from the ImageData; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. rendererProperty; public ObjectProperty<ImageRenderer> rendererProperty(); Get the ImageRenderer property used with this overlay. Returns:; See Also:. getRenderer(); setRenderer(ImageRenderer). getRenderer; public ImageRenderer getRenderer(); Get the ImageRenderer used with this overlay, which may be null. Returns:. setMaxThreads; public void setMaxThreads(int nThreads); Set the maximum number of threads that may be used during live prediction. Parameters:; nThreads - . getMaxThreads; public int getMaxThreads(); Get the maximum number of threads that may be used during live prediction. Returns:. setRenderer; public void setRenderer(ImageRenderer renderer); Set the ImageRenderer to be used with this overlay. Parameters:; renderer - . getLivePrediction; public boolean getLivePrediction(); Query whether live prediction is turned on. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:7954,predict,prediction,7954,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
Safety,"ond output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4351,avoid,avoid,4351,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['avoid'],['avoid']
Safety,"onstr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class ColorToolsFX. java.lang.Object; qupath.lib.gui.tools.ColorToolsFX. public class ColorToolsFX; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1219,avoid,avoid,1219,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['avoid'],['avoid']
Safety,"onstr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.DTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:1259,predict,predict,1259,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,1,['predict'],['predict']
Safety,"onstr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.LogisticRegressionClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1319,predict,predict,1319,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['predict']
Safety,"on | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.viewer. package qupath.lib.gui.viewer. QuPath image viewing and display. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; DragDropImportListener. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener.DropHandler<T>. Interface to define a new drop handler. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. ImageInterpolation. Supported interpolation methods when displaying images. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. PathObjectPainter. Static methods to assist with painting PathObjects. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). ViewerManager. Class to manage multiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html:1411,detect,detections,1411,javadoc/docs/qupath/lib/gui/viewer/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/package-summary.html,1,['detect'],['detections']
Safety,"opencv.tools.OpenCVTools.IndexedPixel. Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Divide all pixels by a constant. dnn(DnnModel, int, int, Padding, String...) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a DnnModel to pixels to generate a prediction. DnnModel - Interface in qupath.opencv.dnn. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder - Interface in qupath.opencv.dnn. Builder to create a DnnModel from DnnModelParams. DnnModelParams - Class in qupath.opencv.dnn. Parameters to build a DnnModel. DnnModelParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:265660,predict,prediction,265660,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"operty, which is one that will be saved to/reloaded from the user preferences. static <T extends Enum<T>>ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty().",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14373,detect,detectionStrokeThicknessProperty,14373,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionStrokeThicknessProperty']
Safety,"operty; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayMode. Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotations;  ; BooleanProperty; fillDetections;  ; FloatProperty; fontSize;  ; ObjectProperty<GridLines>; gridLines;  ; ObservableSet<PathClass>; hiddenClasses;  ; ObjectProperty<MeasurementMapper>; measurementMapper;  ; FloatProperty; opacity. Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegion;  ; BooleanProperty; showAnnotations;  ; BooleanProperty; showConnections;  ; BooleanProperty; showDetections;  ; BooleanProperty; showGrid;  ; BooleanProperty; showNames;  ; BooleanProperty; showPixelClassification;  ; BooleanProperty; showTMACoreLabels;  ; BooleanProperty; showTMAGrid;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Constructor Summary; Constructors. Constructor; Description; OverlayOptions(). Constructor, using default values. OverlayOptions(OverlayOptions options). Constructor, initializing values based on an existing OverlayOptions object. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<OverlayOptions.DetectionDisplayMode>; detectionDisplayModeProperty(). Property representing the current OverlayOptions.DetectionDisplayMode. BooleanProperty; fillAnnotationsProperty();  ; BooleanProperty; fillDetectionsProperty();  ; FloatProperty; fontSizeProperty();  ; boolean; getAllPathClassesVisible();  ; OverlayOptions.DetectionDisplayMode; getDetectionDisplayMode(). Get the current OverlayOptions.DetectionDisplayMode. boolean; getFillAnnotations();  ; boolean; getFillDetections();  ; float; getFontSize();  ; GridLines; getGridLines();  ; MeasurementMapper; getMeasurementMapper();  ; float; getOpacity(). Get the glo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:1608,detect,detections,1608,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detections']
Safety,"or OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interface for objects that need to be notified when parameters have their values changed. Parameterizable. Interface for indicating that the implementing class takes adjustable parameters. ParameterList. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterPanelFX. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PatchClassifierParams. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder. Builder class to create PatchClassifierParams. PathAnnotationObject. An annotation PathObject. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:36860,detect,detection,36860,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"or any property. ObjectProperty<MeasurementMapper>; measurementMapperProperty();  ; FloatProperty; opacityProperty(). Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegionProperty();  ; void; resetMeasurementMapper(). Reset any MeasurementMapper, so that measurements are not used to determine object colors. void; setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode). Set the current OverlayOptions.DetectionDisplayMode. void; setFillAnnotations(boolean fill). Show annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. vo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:4720,detect,detections,4720,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detections']
Safety,"or the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258286,detect,detect,258286,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"or the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3160,predict,prediction,3160,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,"ormMethod. Saturation value (from RGB-HSB transform). saturationPercentProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. SAVE_DATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; SAVE_DATA_AS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; saveAnnotationMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save annotation measurements for the current image. saveAnnotationMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save annotation measurements for the specified image. saveChannelColorProperties() - Method in class qupath.lib.display.ImageDisplay. Save color channels in the ImageData properties. saveDetectionMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the current image. saveDetectionMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the specified image. savedName(StringProperty) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Property to store the saved name; this is useful if the name is required externally. saveImageData(ImageData<T>) - Method in interface qupath.lib.projects.ProjectImageEntry. Save the ImageData for this entry using the default storage location for the project. saveImageMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the current image. saveImageMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the specified image. saveMeasurements(Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save meas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:881164,detect,detection,881164,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255212,detect,detectionsToCells,255212,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionsToCells']
Safety,"osest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109602,detect,detectionToAnnotationDistances,109602,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"otations(Path, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a labeled image to annotation objects. labelsToAnnotations(Collection<Path>, boolean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert labeled images to annotation objects, determining the region from the filename if possible. labelsToCells(Path, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a 2-channel labeled image to cell objects. labelsToCells(Collection<Path>, boolean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. labelsToConnectedROIs(ImageProcessor, int) - Static method in class qupath.imagej.processing.RoiLabeling. Create ROIs from labels in an image. labelsToDetections(Path, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a labeled image to detection objects. labelsToDetections(Collection<Path>, boolean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert labeled images to detection objects, determining the region from the filename if possible. labelsToFilledRoiList(ImageProcessor, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a labelled image into a list of PolygonRois by tracing. labelsToFilledROIs(ImageProcessor, int) - Static method in class qupath.imagej.processing.RoiLabeling. Convert a labelled image into a list of PolygonRois by tracing. labelsToObjects(Path, RegionRequest, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a labeled image to objects. labelText(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. LAPLACIAN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:645996,detect,detection,645996,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ouseExited; public void mouseExited(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). isSubtractMode; protected boolean isSubtractMode(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). getBrushDiameter; protected double getBrushDiameter(). createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape); Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. Parameters:; e - ; x - ; y - ; useTiles - If true, request generating a shape from existing tile objects.; addToShape - If provided, it can be assumed that any new shape ought to be added to this one.; The purpose is that this method may (optionally) use the shape to refine the one it will generate, ; e.g. to avoid having isolated or jagged boundaries.; Returns:. getGeometryFactory; protected GeometryFactory getGeometryFactory(). createNewROI; protected ROI createNewROI(MouseEvent e,; double x,; double y,; ImagePlane plane); Create a new ROI with the given starting coordinates. Parameters:; e - ; x - ; y - ; plane - ; Returns:. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html:4438,avoid,avoid,4438,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,1,['avoid'],['avoid']
Safety,"ows:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Jav",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66549,detect,detectionImage,66549,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionImage']
Safety,"parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5196,predict,predictWithLock,5196,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['predictWithLock']
Safety,"path.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775197,predict,predict,775197,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"path.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; DETACH_VIEWER - Variable in class qupath.lib.gui.actions.ViewerActions;  ; detachActiveViewerFromGrid() - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the currently active viewer from the viewer grid, if possible. detachViewerFromGrid(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the specified viewer from the viewer grid, if possible. detect(DetectionModel, Mat, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object ce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:252379,detect,detect,252379,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"path.lib.scripting.QP. Select all objects in the specified hierarchy, excluding the root object. selectAllObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain all objects. selectAnnotations() - Static method in class qupath.lib.scripting.QP. Select all annotation objects in the current hierarchy. selectAnnotations(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all annotation objects in the specified hierarchy. selectCells() - Static method in class qupath.lib.scripting.QP. Select all cell objects in the current hierarchy. selectCells(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all cell objects in the specified hierarchy. selectDetections() - Static method in class qupath.lib.scripting.QP. Select all detection objects in the current hierarchy. selectDetections(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all detection objects in the specified hierarchy. selected(boolean) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the selected property of the action. selected(ObservableValue<Boolean>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the selected property of the action to an ObservableValue, bidirectionally if possible. selectedChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. The channel to which the sliders are applied. selectedChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently selected for display. selectedColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; SelectedMeasurementTableView - Class in qupath.lib.gui.panes. Component to show measurements for a currently-selected object. SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>>) - Constructor for class qupath.lib.gui.panes.SelectedMeasurementT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:894777,detect,detection,894777,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"path.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:1452,predict,predictWithLock,1452,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"path.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.LogisticRegressionClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on LogisticRegression. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:1438,predict,predictWithLock,1438,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['predictWithLock']
Safety,"pdate, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97793,detect,detections,97793,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],['detections']
Safety,"pencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777361,predict,prediction,777361,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"perty representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255085,detect,detection,255085,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"perty(). Parameters:; useGrayscaleLuts - . useInvertedBackgroundProperty; public BooleanProperty useInvertedBackgroundProperty(); Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). Returns:; See Also:. setUseInvertedBackground(boolean). useInvertedBackground; public boolean useInvertedBackground(); Get the value of useInvertedBackgroundProperty(). Returns:. displayMode; public ObjectBinding<ChannelDisplayMode> displayMode(); Get the value of useInvertedBackgroundProperty(). Returns:. setUseInvertedBackground; public void setUseInvertedBackground(boolean useInvertedBackground); Set the value of useInvertedBackgroundProperty(). Parameters:; useInvertedBackground - . useColorLUTs; public boolean useColorLUTs(); The opposite of useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used whe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:9364,abort,abort,9364,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['abort'],['abort']
Safety,perty; public FloatProperty fontSizeProperty(). Returns:; the float property indicating the font size that should be used for displaying names; See Also:. getFontSize(); setFontSize(float). showTMAGridProperty; public BooleanProperty showTMAGridProperty(). Returns:; the boolean property indicating whether any current TMA grid should be displayed; See Also:. getShowTMAGrid(); setShowTMAGrid(boolean). showPixelClassificationProperty; public BooleanProperty showPixelClassificationProperty(). Returns:; the boolean property indicating whether any active pixel classification should be displayed; See Also:. getShowPixelClassification(); setShowPixelClassification(boolean). pixelClassificationFilterRegionProperty; public ObjectProperty<RegionFilter> pixelClassificationFilterRegionProperty(). Returns:; the filter used to determine whether a pixel classification should be computed for a specified region. setPixelClassificationRegionFilter; public void setPixelClassificationRegionFilter(RegionFilter region); Control where pixel classifications should be calculated during live prediction. Parameters:; region - . getPixelClassificationRegionFilter; public RegionFilter getPixelClassificationRegionFilter(). Returns:; a filter used to determine whether a pixel classification should be computed for a specified region. showDetectionsProperty; public BooleanProperty showDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed; See Also:. getShowDetections(); setShowDetections(boolean). fillDetectionsProperty; public BooleanProperty fillDetectionsProperty(). Returns:; the boolean property indicating whether detections should be displayed 'filled'; See Also:. getFillDetections(); setFillDetections(boolean). fillAnnotationsProperty; public BooleanProperty fillAnnotationsProperty(). Returns:; the boolean property indicating whether annotations should be displayed 'filled'; See Also:. getFillAnnotations(); setFillAnnotations(boolean). showGridP,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:19152,predict,prediction,19152,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['predict'],['prediction']
Safety,"pes for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:25730,detect,detections,25730,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detections']
Safety,"pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; ParameterList params); Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces.; ; TODO: Avoid hard-coding what is considered a 'manageable size' or a preferred size for parallel tiles. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:4378,detect,detections,4378,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['detect'],['detections']
Safety,"placian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:422749,detect,detect,422749,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3906,abort,abort,3906,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['abort'],['abort']
Safety,"possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:21081,avoid,avoided,21081,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['avoid'],['avoided']
Safety,"pportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:3445,predict,predict,3445,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,5,['predict'],['predict']
Safety,"pportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:3910,predict,predict,3910,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['predict']
Safety,"predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:2621,detect,detect,2621,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['detect'],['detect']
Safety,"priate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:1803,predict,prediction,1803,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['predict'],['prediction']
Safety,"protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected int getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Specified by:; getTileOverlap in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<Buff",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:5612,detect,detections,5612,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,2,['detect'],['detections']
Safety,"public static float[] getBlueOpticalDensities(int[] rgb,; double maxValue,; float[] px); Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. Parameters:; rgb - ; maxValue - ; px - optional array used for output; Returns:. generateMedianStainVectorFromPixels; public static StainVector generateMedianStainVectorFromPixels(String name,; int[] rgb,; double redMax,; double greenMax,; double blueMax); Determine median RGB optical densities for an array of pixels (packed RGB), and combine these into a StainVector with the specified name. Parameters:; name - ; rgb - ; redMax - ; greenMax - ; blueMax - ; Returns:. getMedianRGB; public static int getMedianRGB(int[] rgb); Determine median of RGB values.; The median of each channel is computed separately. Parameters:; rgb - array of packed RGB values; Returns:. refineColorDeconvolutionStains; public static ColorDeconvolutionStains refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped); Attempt to automatically refine color deconvolution stains based upon pixel values.; ; Warning! This is really only for testing - it has not be very extensively validated.; ; The method used is based very loosely on that of Macenko et al. (2009), but avoids eigenvalue computations in favor of; determining an initial stain inputs.; ; TODO: Improve automatic stain vector refinement. Parameters:; rgb - ; stains - ; minStain - minimum optical density for each RGB channel (default 0.15); percentageClipped - ; Returns:. estimateWhiteValues; public static double[] estimateWhiteValues(int[] rgb); Estimate white (background) values for a brightfield image.; ; The algorithm computes histograms for each RGB channel, and takes the mode; of the histogram in the region of the histogram > the mean value for that channel. Parameters:; rgb - an array of packed RGB values; Returns:; an array containing estimated [red, green and blue] background values. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:6965,avoid,avoids,6965,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['avoid'],['avoids']
Safety,"public OpenCVDnn.Builder target(int target); Specify the target, e.g. opencv_dnn.DNN_TARGET_CUDA. Parameters:; target - ; Returns:; See Also:. cuda(); opencl(). backend; public OpenCVDnn.Builder backend(int backend); Specify the backend, e.g. opencv_dnn.DNN_BACKEND_CUDA. Parameters:; backend - ; Returns:; See Also:. cuda(); opencl(). mean; public OpenCVDnn.Builder mean(Scalar mean); Mean values which should be subtracted from the image channels before input to the Net. Parameters:; mean - ; Returns:. scale; public OpenCVDnn.Builder scale(double scale); Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. Parameters:; scale - ; Returns:. size; public OpenCVDnn.Builder size(int width,; int height); Input width and height. Parameters:; width - ; height - ; Returns:. size; public OpenCVDnn.Builder size(Size size); Input width and height. Parameters:; size - ; Returns:. modelType; public OpenCVDnn.Builder modelType(OpenCVDnn.ModelType type); Set the model type, used by OpenCVDnn.buildModel(). Parameters:; type - ; Returns:. classification; public OpenCVDnn.Builder classification(); Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. Returns:. segmentation; public OpenCVDnn.Builder segmentation(); Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. Returns:. detection; public OpenCVDnn.Builder detection(); Set the model type to be OpenCVDnn.ModelType.DETECTION. Returns:. outputs; public OpenCVDnn.Builder outputs(String... layers); Set the layer outputs. Usually this isn't necessary, but it provides a means to output features ; prior to any final classification. Parameters:; layers - ; Returns:. outputs; public OpenCVDnn.Builder outputs(Map<String,DnnShape> outputs); Set the layer outputs and shapes. Usually this isn't necessary, but it provides a means to output features ; prior to any final classification. Parameters:; outputs - ; Returns:. build; public OpenCVDnn build(); Build a new OpenCVDnn. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:5191,detect,detection,5191,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,2,['detect'],['detection']
Safety,"putClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierPar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3115,predict,prediction,3115,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,2,['predict'],"['prediction', 'predictionOp']"
Safety,"pute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measure",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:256851,detect,detection,256851,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety,"qupath.lib.scripting.QP. Make a packed int representation of an ARGB color. makeBinaryImage(ImageProcessor, double, Roi, boolean) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Make a binary image depicting (hopefully) the TMA cores. makeChartInteractive(Chart, NumberAxis, NumberAxis) - Static method in class qupath.lib.gui.charts.ChartTools. Make it possible to select chart regions to zoom in, and scroll to navigate around it. makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). makeDefaultStainVector(StainVector.DefaultStains) - Static method in class qupath.lib.color.StainVector. Get a default stain vector. makeDoubleArrayWrapper(double[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a double array, returning values (predictably) as doubles. makeFileInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file path relative to the current project, and create a File object. makeFloatArrayWrapper(float[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a float array, returning values as doubles. makeFullScreenshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the full screen. makeIntArrayWrapper(int[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for an int array, returning values as doubles. makeInverseAnnotation() - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the current ImageData and its current selected objects. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Make an inverse annotation for the selected objects, storing the command in the history workflow. m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:663938,predict,predictably,663938,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictably']
Safety,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1113,detect,detected,1113,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,2,['detect'],['detected']
Safety,"r changes to the image data should be saved. getBatchSize() - Method in class qupath.lib.scripting.ScriptParameters. Get the number of images being batch processed, or 1 if just a single image is being processed. getBinIndexForValue(double, double) - Method in class qupath.lib.analysis.stats.Histogram. Get the index of the bin that should contain the specified value. getBinLeftEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the lower edge for a specified bin. getBinRightEdge(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the upper edge for a specified bin. getBinWidth(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the width of a bin, which is the difference between its upper and lower edges. getBitsPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bits per pixel. getBlobFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. getBlobFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getBlobFunction(String) - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. getBlobFunction(String) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getBlue() - Method in class qupath.lib.color.StainVector. Get the blue component of the (normalized) stain vector. getBlue() - Method in class qupath.lib.display.settings.ChannelColor. Get the blue value. getBlueOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getBooleanParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a boolean parameter value (or its default) for the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:336274,predict,prediction,336274,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"r class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsByCentroid(ImageData<BufferedImage>, PixelClassifier, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Col",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:103116,detect,detections,103116,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"r consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scripting.QP.createSelectAllObject(boolean). v0.4.0 use QP.createFullImageAnnotation(boolean) instead. qupath.lib.scripting.QP.createSelectAllObject(boolean, int, int). v0.4.0 use QP.createFullImageAnnotation(boolean, int, int) instead. qupath.lib.scripting.QP.detectionCentroidDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:13014,detect,detectionToAnnotationDistances,13014,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"r, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:1718,predict,predict,1718,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['predict'],['predict']
Safety,"r. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classificat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255607,detect,detectionToAnnotationDistances,255607,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"r. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is su",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2233,predict,prediction,2233,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['predict'],['prediction']
Safety,"rangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public Strin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:4076,safe,safe,4076,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['safe'],['safe']
Safety,rarchy.events. Model for handling selection of single and multiple PathObjects. PathObjectSelectionModel() - Constructor for class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel;  ; PathObjectTools - Class in qupath.lib.objects. A collection of static methods to help work with PathObjects. PathObjectTools() - Constructor for class qupath.lib.objects.PathObjectTools;  ; PathOverlay - Interface in qupath.lib.gui.viewer.overlays. Interface defining an overlay to paint on top of a viewer. PathPlugin<T> - Interface in qupath.lib.plugins. Primary interface for defining a 'plugin' command. PathPrefs - Class in qupath.lib.gui.prefs. Central storage of QuPath preferences. PathPrefs() - Constructor for class qupath.lib.gui.prefs.PathPrefs;  ; PathPrefs.AutoUpdateType - Enum Class in qupath.lib.gui.prefs. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes - Enum Class in qupath.lib.gui.prefs. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize - Enum Class in qupath.lib.gui.prefs. Enum to control font size. PathPrefs.ImageTypeSetting - Enum Class in qupath.lib.gui.prefs. Enum defining how setting the image type should be handled for new images. PathROIObject - Class in qupath.lib.objects. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject - Class in qupath.lib.objects. The root object used at the base of a PathObjectHierarchy. PathRootObject() - Constructor for class qupath.lib.objects.PathRootObject;  ; paths(Path...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as path objects. PathTableData<T> - Interface in qupath.lib.gui.measure. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask - Interface in qupath.lib.plugins. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathT,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:759098,detect,detections,759098,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,rce). qupath.lib.gui.viewer.overlays.AbstractOverlay (implements qupath.lib.gui.viewer.overlays.PathOverlay). qupath.lib.gui.viewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupat,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6178,detect,detect,6178,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"rd existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its centroid; ignored if ≤ 1; Returns:; a Geometry providing a cell boundary estimate. constrainCellByNucleusDistance; public static PathCellObject constrainCellByNucleusDistance(PathCellObject cell,; double distance,; boolean keepMeasurements); Constrain a cell boundary t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3641,detect,detections,3641,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,2,['detect'],"['detection', 'detections']"
Safety,"re are no duplicates,; retaining the original IDs where possible. Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. refreshIDs; public static void refreshIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy. Parameters:; hierarchy - the object hierarchy; Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Parameters:; hierarchy - the object hierarchy; Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. resetClassifications; public static void resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the curren",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:82727,detect,detection,82727,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"recated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1149,predict,prediction,1149,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,1,['predict'],['prediction']
Safety,"rectangles surrounding distinct structures. Parameters:; model - the detection model; server - the image; request - the region within which detection should be applied; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects; Throws:; IOException - if the image could not be read. detect; public static List<PathObject> detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects. blobFromImages; public static Mat blobFromImages(Mat... mats); Create an OpenCV blob from one or more mats. Parameters:; mats - ; Returns:. blobFromImage; public static Mat blobFromImage(Mat mat); Create an OpenCV blob from a single mat. Parameters:; mat - ; Returns:. blobFromImages; public static Mat blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. Parameters:; mat - input image; scaleFactor - scale factor; size - input width and height; mean - mean values for subtraction; swapRB - swap red and blue of the mean values; crop - center crop after resizing if needed; Returns:; a blob with axis order NCHW. blobFromImages; public static Mat blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a batch of Mats with optional scaling, re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:14323,detect,detection,14323,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['detect'],['detection']
Safety,"reesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.DTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on DTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html:1378,predict,predictWithLock,1378,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.DTreesClassifier.html,1,['predict'],['predictWithLock']
Safety,"resetDetectionClassifications() - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all detection objects in the current hierarchy. resetGridSize() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; resetImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Remove the image. resetImageData() - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Reset the last image data. resetImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the image data to null. resetIntensityClassifications() - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all detections in the current hierarchy. resetIntensityClassifications(Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all specified objects. resetIntensityClassifications(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Reset the intensity classifications for all detections in the specified hierarchy. resetMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions. Reset any MeasurementMapper, so that measurements are not used to determine object colors. resetMinimumRepaintSpacingMillis() - Method in class qupath.lib.gui.viewer.QuPathViewer. Return to processing all repainting requests. resetPathClass() - Method in class qupath.lib.objects.PathObject. Reset the classification (i.e. resetPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Reset the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:863237,detect,detections,863237,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"rete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the predic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2423,predict,predict,2423,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['predict'],['predict']
Safety,"rface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle tab key. HaralickFeatureComputer - Class in qupath.lib.analysis.features. Static methods for computing Haralick texture features. HaralickFeatureComputer() - Constructor for class qupath.lib.analysis.features.HaralickFeatureComputer;  ; HaralickFeatures - Class in qupath.lib.analysis.features. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating Haralick texture features, within or around detections or tiles. HaralickFeaturesPlugin() - Constructor for class qupath.lib.algorithms.HaralickFeaturesPlugin. Default constructor. hasActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Returns true if a handle is currently active, for example being reposition. hasActiveToolTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the active tool. hasAlpha() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; hasBundleForLocale(String, Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:567585,detect,detections,567585,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"ring). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:4068,safe,safe,4068,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['safe'],['safe']
Safety,"ring); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:135036,avoid,avoid,135036,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avoid'],['avoid']
Safety,"ring, Integer). getInstance; public static PathClass getInstance(String name). getInstance; public static PathClass getInstance(String name,; Integer color); Get a base PathClass instance, without any parent PathClass.; ; This is equivalent to calling getInstance(PathClass, String, Integer) with ; the first argument as null. Parameters:; name - ; color - ; Returns:; See Also:. getInstance(PathClass, String, Integer). getInstance; public static PathClass getInstance(PathClass parent,; String name,; Integer color); Get a derived PathClass instance with the specified parent.; ; This will be derived from the parent PathClass (if provided) and have the specified ; name, stripped to remove any leading or training whitespace.; ; Note that the name should generally be an alphanumeric string, optionally including ; punctuation symbols but not including DELIMITER.; ; The delimiter is currently a colon "":"" but it is advised not to rely upon ; this and to avoid punctuation where possible, because the delimiter may possibly change ; in a future release - primarily because the choice of colon can be problematic in some ; cases, e.g. when using ontologies. Parameters:; parent - parent class (optional, may be null); name - name of the PathClass; color - color to use if a new instance is created (may be null to use the default); Returns:; a PathClass instance; the same instance will be returned given the same parent and name; See Also:. fromString(String, Integer); fromCollection(Collection, Integer). getOnePlus; public static PathClass getOnePlus(PathClass parentClass); Get a standalone or derived 1+ classification, indicating weak positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getTwoPlus; public static PathClass getTwoPlus(PathClass parentClass); Get a standalone or derived 2+ classification, indicating moderate positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getThreePlus; public static PathClass getThree",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:14227,avoid,avoid,14227,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['avoid'],['avoid']
Safety,"ripting.TextAreaControl;  ; POSITIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:773866,detect,detect,773866,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"rlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24025,detect,detection,24025,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detection']
Safety,"rns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). Convert an image to RGB by applying the specified ChannelDisplayInfos. Parameters:; imgInput - ; imgOutput - ; selectedChannels - ; useGrayscaleLuts - ; Returns:. applyTransforms; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode); Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. Parameters:; imgInput - the input image to transform; imgOutput - optional output image (must be the same size as the input image, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:12739,safe,safe,12739,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['safe'],['safe']
Safety,"roperty, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14580,detect,detections,14580,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detections']
Safety,"roperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be no",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:39063,avoid,avoid,39063,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avoid'],['avoid']
Safety,"rred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. detectVendor; public static String detectVendor(String path); Try to detect the vendor of the image at the specified path.; This will attempt to load OpenSlide if it has not already been loaded. Parameters:; path - the image path (usually an absolute file path); Returns:; a vendor string if available, or null if OpenSlide could not be loaded or does not recognize the file. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:3454,detect,detectVendor,3454,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,3,['detect'],"['detect', 'detectVendor']"
Safety,"rs to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum cons",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:253656,detect,detection,253656,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['detect'],['detection']
Safety,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:3188,avoid,avoid,3188,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html,1,['avoid'],['avoid']
Safety,"rts keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:67285,detect,detect,67285,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detect']
Safety,"rwise; Throws:; IOException - if the patch cannot be read. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException,; IllegalArgumentException; Apply a classification model to an image patch to classify an object.; If a patch width and height both > 0, the patch is cropped around the ROI centroid and padded if necessary.; If a patch width and height both < 0, the bounding box of hte ROI is used directly and the model is assumed able to ; resize if needed.; If the patch width and height are anything else, an IllegalArgumentException is thrown. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; width - the fixed input size; height - the fixed input size; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read; IllegalArgumentException - if the patch width or height are invalid. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement); Apply a classification model to an existing image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; input - image patch; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:11058,predict,prediction,11058,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,3,['predict'],"['prediction', 'predictionMeasurement']"
Safety,"r viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the comman",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:9386,detect,detection,9386,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['detect'],['detection']
Safety,"s have their ROIs set at creation time - adding further annoyance to the lack of easy ROI editability.; ; RoiEditors provide GUIs with a mechanism for controlled ROI manipulation, when the natural alternative ; (creating new ROIs) might be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:1819,avoid,avoid,1819,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['avoid'],['avoid']
Safety,"s inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> threshold(double threshold); Set the threshold value used for the classification. Parameters:; threshold - ; Returns:; this builder. above; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> above(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). aboveEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> aboveEquals(String pathClassName); Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. Parameters:; pathClassName - ; Returns:; this builder; See Also:. threshold(double). belowEquals; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> belowEquals(String pathClassName); Set the clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:4793,detect,detections,4793,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,2,['detect'],"['detection', 'detections']"
Safety,"s into ROIs. Parameters:; matLabels - labelled image; each label should be an integer value; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; an ordered map containing all the ROIs that could be found; corresponding labels are keys in the map; // * @see #findROIs(Mat, RegionRequest, int, int); See Also:. ContourTracing.createROIs(SimpleImage, RegionRequest, int, int). createDetections; public static List<PathObject> createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; detection objects generated by tracing contours; See Also:. ContourTracing.createDetections(SimpleImage, RegionRequest, int, int). createAnnotations; public static List<PathObject> createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects by tracing contours in a labelled image. Parameters:; matLabels - labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; annotation objects generated by tracing contours; See Also:. ContourTracing.createAnnotations(SimpleImage, RegionRequest, int, int). createObjects; public static List<PathObject> createObjects(Mat matLabel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:40202,detect,detection,40202,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['detect'],['detection']
Safety,"s qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(Integer) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color. getCachedColor(Integer) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get cached color. getCachedColor(Integer, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get cached color, explicitly stating whether alpha should be includ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:344031,avoid,avoid,344031,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avoid'],['avoid']
Safety,"s the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject> getTileObjects(); Get a list of the current tile objects. Returns:; Since:; v0.4.0; See Also:. getCurrentHierarchy(). getCellObjects; public static Collection<PathObject> getCellObjects(); Get a list of the current cell objects. Returns:; See Also:. getCurrentHierarchy(). getAllObjects; public static Collection<PathObject> getAllObjects(boolean includeRootObject); Get all objects in the current hierarchy. Parameters:; includeRootObject - ; Returns:; See Also:. getCurrentHierarchy(). getAllObjects; public static Collection<PathObject> getAllObjects(); Get all objects in the current hierarchy, including the root object. Returns:; See Also:. getCurrentHierarchy(); getAllObjects(boolean). setImageType; public static boolean setImageType(String typeName); Set the image type for the current image data, using a String to represent the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:68174,detect,detection,68174,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"s). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6149,detect,detection,6149,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety,"s, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurement, importObjectsFromFile, insertObjects, insertObjects, isDirectory, is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7942,detect,detectionToAnnotationDistancesSigned,7942,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety,"s.BoostClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.BoostClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on Boost. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:1373,predict,predictWithLock,1373,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,1,['predict'],['predictWithLock']
Safety,"s.DNNLayer. Helper class to summarize a DNN layer. Constructor Summary; Constructors. Constructor; Description; DnnTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Mat; blobFromImage(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(Detec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:1688,predict,predictionMeasurement,1688,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['predict'],['predictionMeasurement']
Safety,"s.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:254361,detect,detection,254361,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"s.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getName() - Method in class qupath.imagej.gui.IJExtension;  ; getName() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getName() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getName() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getName() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getName() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:447269,detect,detect,447269,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"s.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; simplifyPath(Path2D, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygon(PolygonROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyPolygonPoints(List<Point2>, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. simplifyShape(ROI, double) - Static method in class qupath.lib.roi.ShapeSimplifier. Create a simplified shape (fewer coordinates) using metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:977614,detect,detect,977614,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"s:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59206,detect,detections,59206,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detections']
Safety,"s<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:103224,detect,detections,103224,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"same StainVectors but new max (background) values. ColorDeconvolutionStains; changeName(String name). Create a new stains object with the same StainVectors but a new name. ColorDeconvolutionStains; changeStain(StainVector stainNew,; int stainNumber). Create a new stains object, identical to this one but for one StainVector having been changed. static String; getColorDeconvolutionStainsAsString(ColorDeconvolutionStains stains,; int nDecimalPlaces). Get a String representation of the stains and background. double[][]; getMatrixInverse(). Get matrix inverse, as useful for color deconvolution. double; getMaxBlue(). Get the maximum value for the blue channel (default = 255). double; getMaxGreen(). Get the maximum value for the green channel (default = 255). double; getMaxRed(). Get the maximum value for the red channel (default = 255). String; getName(). Get the stains name. StainVector; getStain(int n). Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). int; getStainNumber(StainVector stain). Get the number for a specific stain (1, 2 or 3). Collection<StainVector>; getStains(boolean includeResidual). Get a collection of all the stains. static boolean; isDAB(StainVector stain). Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). static boolean; isEosin(StainVector stain). Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). boolean; isH_DAB(). Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. boolean; isH_E(). Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. static boolean; isHematoxylin(StainVector stain). Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). static ColorDeconvolutionStains; makeDefaultColo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:3244,recover,recover,3244,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['recover'],['recover']
Safety,"se. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String toString(). Overrides:; toString in class OpenCVClassifiers.OpenCVStatModel. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty mat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:5121,predict,prediction,5121,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['prediction']
Safety,"ser preferences. static <T extends Enum<T>>ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& decelera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:14456,detect,detections,14456,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detections']
Safety,"side an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111058,detect,detectionToAnnotationDistancesSigned,111058,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,4,['detect'],"['detection', 'detectionToAnnotationDistancesSigned']"
Safety,"sificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Create a PixelProcessor.Builder for an OpenCV Mat.; By default, this will attempt to convert any labeled or binary image output to unclassified detection objects -; but the builder may be further customized to override this behavior before building the processor. Parameters:; processor - ; Returns:. createMatImageSupplier; public static ImageSupplier<Mat> createMatImageSupplier(); Create an ImageSupplier that returns an OpenCV Mat. Returns:. createMatMaskSupplier; public static MaskSupplier<Mat,Mat> createMatMaskSupplier(); Create a MaskSupplier that returns an OpenCV Mat. Returns:. wrapInPointerScope; public static <S,; T,; U> Processor<S,T,U> wrapInPointerScope(Processor<S,T,U> processor); Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output).; ; If the input is a processor that is already known to have this behavior, it is returned unchanged. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; processor - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:7946,detect,detection,7946,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"sifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6615,detect,detection,6615,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"sifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; pathObjects - the objects to classify; preferNucleusROI - use the nucleus ROI in the case of cells; ignored for all other object types. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:18564,detect,detections,18564,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,5,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"sifiers.NormalBayesClassifierCV, OpenCVClassifiers.RTreesClassifier, OpenCVClassifiers.SVMClassifierCV, OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public abstract static class OpenCVClassifiers.OpenCVStatModel; extends Object; Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. Constructor Summary; Constructors. Constructor; Description; OpenCVStatModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; abstract TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. abstract String; getName(). User-friendly, readable name for the classifier. abstract ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:1694,predict,predict,1694,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['predict'],['predict']
Safety,"sifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version infor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142820,detect,detections,142820,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"sing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type for the output. Parameters:; channelType - ; Returns:. outputClasses; public PatchClassifierParams.Builder outputClasses(Map<Integer,PathClass> outputClasses); Define the classifications for the output as a map. Parameters:; outputCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6903,predict,prediction,6903,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,"sks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:3898,abort,abort,3898,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['abort'],['abort']
Safety,"ss PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default cons",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:1858,detect,detect,1858,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['detect'],['detect']
Safety,"ss qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog for rotating the image in the current viewer (for display only). createRowGrid(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). createRowGridControls(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. createRunnableTask(ObjectDetector<T>, ParameterList, ImageData<T>, PathObject) - Static method in class qupath.lib.plugins.DetectionPluginTools. Create a task that applies an object detector to a parent object. createRunningStatisticsList(int) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Create a list of n (empty) RunningStatistics objects. createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringProperty) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>>, ObjectExpression<PixelClassifier>, StringProperty) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. createScaledInstance(double, double) - Method in class qupath.lib.images.servers.PixelCalibration. Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x and y ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:218482,detect,detector,218482,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detector']
Safety,"ss qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis - package qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms - package ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805785,detect,detect,805785,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ss qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... supportsPyramidal() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPyramidal() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsPyramidal() - Method in interface qupath.lib.images.writers.ImageWriter. Returns true if the writer is capable of writing pyramidal images. supportsPyramidal() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsRGB() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsRGB() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsRGB() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsRGB() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsRGB() - Method in interface qupath.lib.images.writers.ImageWriter. Check ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1012013,predict,prediction,1012013,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['prediction']
Safety,"ss qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferencePane - Class in qupath.lib.gui.panes. QuPath's preference pane, giving a means to modify many of the properties withi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778168,predict,predictWithLock,778168,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"ss; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1132,detect,detection,1132,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['detect'],['detection']
Safety,"ss; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class PositiveCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection; qupath.imagej.detect.cells.PositiveCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:1127,detect,detect,1127,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['detect'],['detect']
Safety,"ssNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108804,detect,detectionCentroidDistances,108804,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety,"ssage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Expand non-zero regions in a labeled image up to a maximum distance, using a watershed transform to prevent region merging. watershedIntensitySplit(Mat, Mat, double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alternative (incomplete) attempt at nucleus segmentation. Water",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1104466,detect,detection,1104466,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"ssification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258534,detect,detect,258534,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ssification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProperty(). measurementMapper; public ObjectProperty<MeasurementMapper> measurementMapperProperty. See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper); measurementMapperProperty(). hiddenClasses; public ObservableSet<PathClass> hiddenClassesProperty. See Also:. hiddenClassesProperty(). showAnnotations; public BooleanProperty show",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6595,detect,detectionDisplayModeProperty,6595,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detectionDisplayModeProperty']
Safety,"stants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interfa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1267,detect,detection,1267,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['detect'],['detection']
Safety,"survival curves. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. Constructor Summary; Constructors. Constructor; Description; KaplanMeierData(String name). Create a new KaplanMeierData object with the specified display name. KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events). Create a new KaplanMeierData object with the specified display name and events. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; KaplanMeierData; addEvent(double time,; boolean censored). Insert a new event. KaplanMeierData; addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events). Add a collection of events. double[]; getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:1574,risk,risk,1574,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,1,['risk'],['risk']
Safety,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:32281,detect,detection,32281,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"t a property for setting the default Locale for Locale.Category.FORMAT. defaultLocaleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for setting the default Locale. DefaultPathObjectComparator - Class in qupath.lib.objects. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectComparator() - Constructor for class qupath.lib.objects.DefaultPathObjectComparator;  ; DefaultPathObjectConnectionGroup - Class in qupath.lib.objects. Simple, default implementation of PathObjectConnectionGroup. DefaultPathObjectConnectionGroup() - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup) - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Create a connections group, copying the connections from an existing group. DefaultROIComparator - Class in qupath.lib.roi. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultROIComparator() - Constructor for class qupath.lib.roi.DefaultROIComparator;  ; DefaultScriptableWorkflowStep - Class in qupath.lib.plugins.workflow. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptableWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String, Map<String, ?>, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Constructor that takes a parameter map for display. DefaultScriptEditor - Class in qupath.lib.gui.scripting. Default multilingual script editor. DefaultScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.DefaultScriptEditor. Constructor. DefaultScriptLanguage - Class in qupath.lib.gui.scripting.languages. Default implementation for a ScriptLangu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:244501,predict,predictable,244501,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictable']
Safety,"t be further measured (e.g. static final PathClass; IMAGE_ROOT. Root object classification. static final PathClass; IMMUNE_CELLS. Immune cell classification. static final PathClass; NECROSIS. Necrosis classification. static final PathClass; NEGATIVE. General class to represent something 'negative'. static final PathClass; OTHER. Other classification. static final PathClass; POSITIVE. General class to represent something 'positive'. static final PathClass; REGION. Region class. static final PathClass; STROMA. Stroma classification. static final PathClass; TUMOR. Tumor classification. Constructor Summary; Constructors. Constructor; Description; StandardPathClasses();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TUMOR; public static final PathClass TUMOR; Tumor classification. STROMA; public static final PathClass STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClass IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClass IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClass IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClass NECROSIS; Necrosis classification. OTHER; public static final PathClass OTHER; Other classification. REGION; public static final PathClass REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further annotations inside. POSITIVE; public static final PathClass POSITIVE; General class to represent something 'positive'. NEGATIVE; public static final PathClass NEGATIVE; General class to represent something 'negative'. Constructor Details. StandardPathClasses; public StandardPathClasses(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html:2518,detect,detected,2518,javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,1,['detect'],['detected']
Safety,"t centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for the current ImageData to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111570,detect,detectionToAnnotationDistancesSigned,111570,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],"['detectionToAnnotationDistances', 'detectionToAnnotationDistancesSigned']"
Safety,"t resolution. overlapsRequest(RegionRequest) - Method in class qupath.lib.regions.RegionRequest. Returns true if the region specified by this request overlaps with that of another request. OverlayActions - Class in qupath.lib.gui.actions. Actions that interact with OverlayOptions. OverlayActions(OverlayOptions) - Constructor for class qupath.lib.gui.actions.OverlayActions;  ; overlayOpacity(double) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the opacity for overlay layers. OverlayOptions - Class in qupath.lib.gui.viewer. Default class for storing overlay display options. OverlayOptions() - Constructor for class qupath.lib.gui.viewer.OverlayOptions. Constructor, using default values. OverlayOptions(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.OverlayOptions. Constructor, initializing values based on an existing OverlayOptions object. OverlayOptions.DetectionDisplayMode - Enum Class in qupath.lib.gui.viewer. Display modes for cells and other detections. overrideSystemMenuBarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property requesting that the system menubar should never be used for managed menubars. OVERVIEW - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; owner(Window) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog owner. P. packARGB(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Make a packed ARGB value from specified input values. packClippedARGB(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Make a packed ARGB value from specified input values, clipping to the range 0-255. packClippedRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Make a packed RGB value from specified input values, clipping to the range 0-255. packRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Make a packed RGB value from specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:736601,detect,detections,736601,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"t the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2509,detect,detection,2509,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"t when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:1589,detect,detection,1589,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"t(ScriptParameters) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Create a ScriptContext containing information from the ScriptParameters. createCoordinateCache(Collection<Coordinate>) - Static method in class qupath.lib.analysis.DistanceTools. Create an STRtree to enable nearest neighbor searching for a collection of coordinates. createDefaultRGBImage(int, int) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create the default (blank) RGB image for this server. createDefaultRGBImage(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:173257,detect,detection,173257,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"t(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:777975,predict,predictWithLock,777975,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,['predict'],"['predict', 'predictWithLock']"
Safety,"t(int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; positionCaret(int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; POSITIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:773731,detect,detect,773731,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"t); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat mat). Prediction function that takes a single input and gives a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default input layer name. This should be used when the input layer name is known or ; unimportant (e.g. the common case of a single input). See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default output layer name. This should be used when the output layer name is known or ; unimportant (e.g. the common case of a single output). See Also:. Constant Field Values. Method Details. predict; Map<String,Mat> predict(Map<String,Mat> blobs); Prediction function that can take multiple inputs. Parameters:; blobs - ; Returns:. predict; default Mat predict(Mat mat); Prediction function that takes a single input and gives a single output. Parameters:; mat - ; Returns:. batchPredict; default List<Mat> ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:2083,predict,predict,2083,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['predict'],['predict']
Safety,"t, ImageServer<BufferedImage>, double, int, int, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. ClassifyByMeasurementBuilder(String) - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsByCentroid(ImageData<BufferedImage>, PixelClassifier, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:102626,detect,detections,102626,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"t, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.CellCountsCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDefaultParameterList(ImageData<BufferedImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:370936,detect,detect,370936,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"t. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; blobs - ; Returns:. predict; public Mat predict(Mat mat); Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Parameters:; mat - ; Returns:. batch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:3423,predict,prediction,3423,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['predict'],['prediction']
Safety,"t2. Calculate the distance between this point and another point. DISTANCE_CENTROIDS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; distanceSq(double, double) - Method in class qupath.lib.geom.Point2. Calculate the squared distance between this point and a specified x and y location. distanceSq(Point) - Method in class qupath.lib.geom.Point2;  ; distanceSq(Point) - Method in interface qupath.lib.geom.Point. Calculate the squared distance to another point, with the same Point.dim(). distanceSq(OpenCVTools.IndexedPixel) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Divide all pixels by a constant. dnn(DnnModel, int, int, Padding, String...) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a DnnModel to pixels to generate a prediction. DnnModel - Interface in qupath.opencv.dnn. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder - Interface in qupath.opencv.dnn. Builder to create a DnnModel from DnnModelParams. DnnModelParams - Class in qupath.opencv.dnn. Parameters to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:264939,detect,detections,264939,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"t>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.openc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776196,predict,predict,776196,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"tClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:4942,detect,detection,4942,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['detect'],['detection']
Safety,"tCommand. Creates a simple GUI for MeasurementExporter. MeasurementExporter - Class in qupath.lib.gui.tools. Helper class for exporting the measurements of one or more entries in a project. MeasurementExporter() - Constructor for class qupath.lib.gui.tools.MeasurementExporter;  ; MeasurementFactory - Class in qupath.lib.measurements. Deprecated. MeasurementFactory() - Constructor for class qupath.lib.measurements.MeasurementFactory. Deprecated.;  ; MeasurementList - Interface in qupath.lib.measurements. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType - Enum Class in qupath.lib.measurements. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory - Class in qupath.lib.measurements. Factory for creating new measurement lists. MeasurementMapPane - Class in qupath.lib.gui.panes. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapPane(QuPathGUI) - Constructor for class qupath.lib.gui.panes.MeasurementMapPane. Constructor. MeasurementMapper - Class in qupath.lib.gui.tools. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementMapper(ColorMaps.ColorMap, String, Collection<? extends PathObject>) - Constructor for class qupath.lib.gui.tools.MeasurementMapper. Constructor. measurementMapperProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; MeasurementPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; MeasurementProcessor - Class in qupath.lib.experimental.pixels. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor() - Constructor for class qupath.lib.experimental.pixels.MeasurementProcessor;  ; MeasurementProcessor.CustomMeasurement<S,T> - Interface in qupath.lib.experimental.pixels. Inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:683250,detect,detection,683250,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"tList(null).stream().filter(p -> !p.isRootObject()).toList(). Or, since v0.4.0, just use getAllObjects(boolean) instead. Parameters:; list - ; Returns:; Since:; getAllObjects(boolean). getAllObjects; public Collection<PathObject> getAllObjects(boolean includeRoot); Get all the objects in the hierarchy, optionally including the root object. Parameters:; includeRoot - ; Returns:; Since:; v0.4.0. nObjects; public int nObjects(); Number of objects in the hierarchy, excluding the root. Returns:. setHierarchy; public void setHierarchy(PathObjectHierarchy hierarchy); Set the contents of this hierarchy to be the same as that of another hierarchy.; In practice, this means copying the root and TMA grid of the second hierarchy. Parameters:; hierarchy - . getObjectsForROI; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls,; ROI roi); Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. ; This relies on centroids for detections, and a 'covers' rule for others. Parameters:; cls - class of PathObjects (e.g. PathDetectionObject), or null to accept all; roi - ; Returns:. getObjectsForRegion; public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filterin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:18381,detect,detections,18381,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['detect'],['detections']
Safety,"tMetadata(). Get a key/value pair map for object metadata. String; getName(). Request the stored object name. PathObject; getParent(). Request the parent object. abstract PathClass; getPathClass(). Get the classification of the object. abstract ROI; getROI(). Get the region of interest (ROI) for the object. protected Map<String,String>; getUnmodifiableMetadataMap(). Get an unmodifiable map of the metadata. boolean; hasChildObjects(). Check if this object has children, or if its child object list is empty. boolean; hasChildren(). Deprecated.; since v0.4.0, replaced by hasChildObjects(). boolean; hasMeasurements(). Returns true if the measurement list for this object is not empty. boolean; hasROI(). Returns true if this object has a ROI. boolean; isAnnotation(). Returns true if the object is an annotation. boolean; isCell(). Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). boolean; isDetection(). Returns true if the object is a detection. abstract boolean; isEditable(). Flag indicating that the object is editable. boolean; isLocked(). Query the locked status. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. boolean; isTile(). Returns true if this object represents an image tile. boolean; isTMACore(). Returns true if this object represents a TMA core. int; nChildObjects(). Total number of child objects. int; nDescendants(). Total number of descendant objects. protected String; objectCountPostfix();  ; void; readExternal(ObjectInput in);  ; void; refreshID(). Regenerate a new random ID. void; removeChildObject(PathObject pathObject). Remove a single object from the child list of this object. void; removeChildObjects(Collection<PathObject> pathObjects). Remove multiple objects from the child list of this object. void; removePathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). void; removePathObjects(Collection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:4106,detect,detection,4106,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['detect'],['detection']
Safety,"tObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any cou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:3046,detect,detectionTreeDisplayMode,3046,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionTreeDisplayMode']
Safety,"tProperty<GridLines>; gridLinesProperty();  ; ObservableSet<PathClass>; hiddenClassesProperty();  ; boolean; isPathClassHidden(PathClass pathClass). Query whether objects with a specified classification should be displayed or hidden. ReadOnlyLongProperty; lastChangeTimestamp(). Get a property representing the timestamp of the last recorded change for any property. ObjectProperty<MeasurementMapper>; measurementMapperProperty();  ; FloatProperty; opacityProperty(). Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegionProperty();  ; void; resetMeasurementMapper(). Reset any MeasurementMapper, so that measurements are not used to determine object colors. void; setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode). Set the current OverlayOptions.DetectionDisplayMode. void; setFillAnnotations(boolean fill). Show annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:4373,detect,detection,4373,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detection']
Safety,"tShowGrid; public void setShowGrid(boolean showGrid); Set whether a counting grid should be shown in viewers. Parameters:; showGrid - ; See Also:. setGridLines(GridLines). getShowGrid; public boolean getShowGrid(). Returns:; true if a counting grid should be displayed in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; public void setGridLines(GridLines gridLines); Set the GridLines object that defines how a counting grid may be show in viewers. Parameters:; gridLines - . gridLinesProperty; public ObjectProperty<GridLines> gridLinesProperty(). Returns:; an object property containing a GridLines object that defines how a counting grid may be show in viewers; See Also:. getGridLines(); setGridLines(GridLines). setMeasurementMapper; public void setMeasurementMapper(MeasurementMapper mapper); Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. Parameters:; mapper - . getMeasurementMapper; public MeasurementMapper getMeasurementMapper(). Returns:; the MeasurementMapper object that defines how detections should be color coded according to their measurement values in viewers. measurementMapperProperty; public ObjectProperty<MeasurementMapper> measurementMapperProperty(). Returns:; object property containing the current MeasurementMapper, if one has been set, or null otherwise; See Also:. getMeasurementMapper(); setMeasurementMapper(MeasurementMapper). resetMeasurementMapper; public void resetMeasurementMapper(); Reset any MeasurementMapper, so that measurements are not used to determine object colors. getAllPathClassesVisible; public boolean getAllPathClassesVisible(). Returns:; true if objects should be displayed regardless of classification (i.e. no classifications are 'hidden'); See Also:. hiddenClassesProperty(). isPathC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:15885,detect,detections,15885,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detections']
Safety,"ta<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3743,detect,detection,3743,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,2,['detect'],['detection']
Safety,"tail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.SVMSGDClassifierCV. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.SVMSGDClassifierCV; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on SVMSGD. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html:1282,predict,predict,1282,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMSGDClassifierCV.html,1,['predict'],['predict']
Safety,"targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:1860,predict,prediction,1860,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['predict'],['prediction']
Safety,"targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:3485,predict,prediction,3485,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['predict'],['prediction']
Safety,"tatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. predictWithLock; protected void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:5748,predict,predict,5748,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,6,['predict'],['predict']
Safety,"tatic void; createSelectAllObject(boolean setSelected,; int z,; int t). Deprecated.; v0.4.0 use createFullImageAnnotation(boolean, int, int) instead. static void; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13030,detect,detectionCentroidDistances,13030,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety,"tatic List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:7235,detect,detection,7235,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['detect'],['detection']
Safety,"tation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK. Black, with 50% opacity. static final Color; TRANSLUCENT_WHITE. White, with 50% opacity. Constructor Summary; Constructors. Constructor; Description; ColorToolsAwt();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IndexColorModel; createIndexColorModel(int red,; int green,; int blue,; boolean whiteBackground). Get an IndexColorModel representing a linear LUT based on a RGB color. static Color; darkenColor(Color color). Get a (slightly) darker version of the specified color. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTrans",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:1551,avoid,avoid,1551,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['avoid'],['avoid']
Safety,"tationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110324,detect,detectionToAnnotationDistances,110324,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['detect'],"['detectionToAnnotationDistances', 'detectionToAnnotationDistancesSigned']"
Safety,"tch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. postprocessing; public PatchClassifierParams.Builder postprocessing(Collection<? extends ImageOp> postprocessingOps); Define the postprocessing steps from a collection.; Note that any existing postprocessing steps in the builder will ; be replaced by those provided here. Parameters:; postprocessingOps - ; Returns:. outputChannelType; public PatchClassifierParams.Builder outputChannelType(ImageServerMetadata.ChannelType channelType); Define the channel type ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6656,predict,prediction,6656,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['predict'],['prediction']
Safety,"te the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:257770,detect,detection,257770,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety,"teAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6164,detect,detection,6164,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"ted as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise. segment; public static Mat segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Apply a segmentation model to an image region. Parameters:; model - the segmentation model; server - the image; request - the region; Returns:; a Mat containing the segmentation results; Throws:; IOException - if the input image could not be read. segment; public static Mat segment(SegmentationModel model,; Mat input,; Mat output); Apply a segmentation model to an image region. Parameters:; model - the segmentation model; input - the input image; output - the output image; Returns:; a Mat containing the segmentation results (the same as output, if provided). detect; public static List<PathObject> detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); throws IOException; Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; server - the image; request - the region within which detection should be applied; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects; Throws:; IOException - if the image could not be read. detect; public static List<PathObject> detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classificati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:13102,detect,detect,13102,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,3,['detect'],"['detect', 'detection']"
Safety,"ted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static Doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:2896,detect,detectionStrokeThickness,2896,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionStrokeThickness']
Safety,"ted regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142474,detect,detections,142474,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,"['detect', 'predict']","['detection', 'detections', 'prediction']"
Safety,"ted; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function to convert the traced ROI and associated numeric label into a PathObject; Returns:; a list of all created objects. createObjects; public static List<PathObject> createObjects(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects from a labelled image. Parameters:; image - the labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function to convert the traced ROI and associated numeric label into a PathObject; Returns:; a list of all created objects. createDetections; public static List<PathObject> createDetections(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects from a labelled image. Parameters:; image - the labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; a list of all created objects. createAnnotations; public static List<PathObject> createAnnotations(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects from a labelled image. Parameters:; image - the labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; a list of all created objects. cr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:12016,detect,detection,12016,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['detect'],['detection']
Safety,"terCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistance",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13471,detect,detectionCentroidDistances,13471,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety,"tershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Des",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:4255,detect,detected,4255,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['detect'],['detected']
Safety,"th.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774942,predict,predict,774942,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"th.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predict",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776846,predict,predict,776846,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"thLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier has already been trained and is ready to predict. Specified by:; isTrained in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if the classifier is trained, false otherwise. getParameterList; public ParameterList getParameterList(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Retrieve a list of adjustable parameter that can be used to customize the classifier.; After making changes to the ParameterList, the classifier should be retrained ; before being used. Specified by:; getParameterList in class OpenCVClassifiers.OpenCVStatModel; Returns:; the parameter list for this classifier. toString; public String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:3020,predict,prediction,3020,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,3,['predict'],['prediction']
Safety,"thPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:5735,detect,detection,5735,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['detect'],['detection']
Safety,"than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2415,predict,predictWithLock,2415,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,5,['predict'],"['predict', 'predictWithLock']"
Safety,"that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:4006,detect,detected,4006,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['detect'],['detected']
Safety,"the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108391,detect,detectionCentroidDistances,108391,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detectionCentroidDistances']
Safety,"the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. MenuTools. Static methods to help with creating and populating JavaFX menus. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MiniViewers. Command to open a small viewer window, which displays a detail fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:28695,detect,detection,28695,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['detect'],['detection']
Safety,"therwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDefaultProject(Project<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.objects.PathAnnotationObject. Set a free text description for this annotation. setDescription(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the description. setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the current OverlayOptions.DetectionDisplayMode. setDetectionIntensityClassifications(String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the current hierarchy. setDetectionIntensityClassifications(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the specified hierarchy. setDisplayMaxValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the last color in the color mapper. setDisplayMinValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:923140,detect,detections,923140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"thod in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Paint an image region. paintRegionARGB(int[], long, long, int, int, int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Similar to ImageRegionRenderer.paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). paintSelectedBoundsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether the bounding box of selected objects should be painted. paintShape(Shape, Graphics2D, Color, Stroke, Color) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified shape with specified stroke and fill colors. paintSpecifiedObjects(Graphics2D, Collection<? extends PathObject>, OverlayOptions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:741937,abort,abort,741937,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['abort'],['abort']
Safety,"thod in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775949,predict,predict,775949,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:6986,avoid,avoid,6986,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['avoid'],['avoid']
Safety,"tic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although this may be (slightly) rotated; and some cores may be missing (but at least a few should be present in all rows / columns of the grid). Parameters:; bp - - the TMA slide image, after thresholding.; coreDiameterPx - - approximate diameter of a single TMA core, in pixels; nHorizontal - - number of cores per row of the full grid; nVertical - - number of cores per column of the full grid; roi - - optional region of interest determining where cores should be found (may be useful if edge artifacts are problematic); Returns:; Polygon in which points are arranged in order, row-by-row, starting from the top-left corner of the grid. makeBinaryImage; public static ByteProcessor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:1669,detect,detect,1669,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['detect'],['detect']
Safety,"tify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsample; public ImageServerMetadata.ImageResolutionLevel.Builder addLevelByDownsample(double downsample); Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. Parameters:; downsample - ; Returns:. addFullResolutionLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addFullResolutionLevel(); Add the full-resolution image as a level of the pyramid.; It is not required that this form part of the pyramid in cases where this image pyramid might ; be used to provide a smaller overlay of a larger image, and not itself contain ; pixels at the highest resolution. Returns:. addLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addLevel(double downsample,; int levelWidth,; int levelHeight); Add a new level by providing a downsample value, width and height.; This avoids relying on any rounding decisions made when specifying the dimensions or downsample value only. Parameters:; downsample - ; levelWidth - ; levelHeight - ; Returns:. addLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addLevel(int levelWidth,; int levelHeight); Add a new level based on level dimensions, estimating the corresponding downsample value as required. Parameters:; levelWidth - ; levelHeight - ; Returns:. addLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addLevel(ImageServerMetadata.ImageResolutionLevel level); Add a new level directly. Parameters:; level - ; Returns:. build; public List<ImageServerMetadata.ImageResolutionLevel> build(); Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html:3412,avoid,avoids,3412,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,1,['avoid'],['avoids']
Safety,"tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus); Create a cell object.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:8829,detect,detection,8829,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,2,['detect'],['detection']
Safety,"ting panel to aid with creating Point annotations. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. CroppedImageServer. ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. CssLanguage. Class for representing CSS in QuPath. DefaultAutoCompletor. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultImageRegionStore. An ImageRegionStore suitable for either Swing or JavaFX applications. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConnectionGroup. DefaultROIComparator. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultScriptableWorkflowStep. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptEditor. Default multilingual script editor. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. DefaultTMAGrid. Default implementation of a TMAGrid. DelaunayClusteringPlugin<T>. Plugin for calculating Delaunay clustering, and associated features. DelaunayTools. Tools for creating and querying Delaunay triangulations and Voronoi diagrams. DelaunayTools.Builder. Builder class to create a DelaunayTools.Subdivision based on Delaunay triangulation. DelaunayTools.Subdiv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:11978,predict,predictable,11978,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['predict'],['predictable']
Safety,"tion copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:3919,detect,detection,3919,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['detect'],['detection']
Safety,"tion results; Throws:; IOException - if the input image could not be read. segment; public static Mat segment(SegmentationModel model,; Mat input,; Mat output); Apply a segmentation model to an image region. Parameters:; model - the segmentation model; input - the input image; output - the output image; Returns:; a Mat containing the segmentation results (the same as output, if provided). detect; public static List<PathObject> detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); throws IOException; Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; server - the image; request - the region within which detection should be applied; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects; Throws:; IOException - if the image could not be read. detect; public static List<PathObject> detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects. blobFromImages; public static Mat blobFromImages(Mat... mats); Create an OpenCV blob from one or more mats. Parameters:; mats - ; Returns:. blobFromImage; public static Mat blobFromImage(Mat mat); Create an OpenCV blob from a single mat. Parameters:; mat - ; Returns:. blobFromImages; public static Mat blobFromImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:13648,detect,detection,13648,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['detect'],['detection']
Safety,"tion that takes a single input and provides a single output. prediction(DnnModel, Padding, String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. prediction(ImageOp) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PredictionFunction<T> - Interface in qupath.opencv.dnn. Prediction function, typically used with a deep learning framework. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Implement predictWithLock rather than predict to ensure predict is not called while ; training. predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; predictWithLock(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; PreferenceP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:778061,predict,predictWithLock,778061,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictWithLock']
Safety,"tion2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:3787,detect,detected,3787,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['detect'],['detected']
Safety,"tion<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer); Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. Create an overlay to display a live image that can be created from an existing ImageData. Parameters:; options - options to control the overlay display; fun - function to create an ImageServer from the ImageData; renderer - rendered used to create an RGB image; Returns:; the PixelClassificationOverlay. rendererProperty; public ObjectProperty<ImageRenderer> rendererProperty(); Get the ImageRenderer property used with this overlay. Returns:; See Also:. getRenderer(); setRenderer(ImageRenderer). getRenderer; public ImageRenderer getRenderer(); Get the ImageRenderer used with this overlay, which may be null. Returns:. setMaxThreads; public void setMaxThreads(int nThreads); Set the maximum number of threads that may be used during live prediction. Parameters:; nThreads - . getMaxThreads; public int getMaxThreads(); Get the maximum number of threads that may be used during live prediction. Returns:. setRenderer; public void setRenderer(ImageRenderer renderer); Set the ImageRenderer to be used with this overlay. Parameters:; renderer - . getLivePrediction; public boolean getLivePrediction(); Query whether live prediction is turned on. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Descrip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:8098,predict,prediction,8098,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
Safety,"tion<PathObject> createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit); throws IOException; Create objects based upon an ImageServer that provides classification or probability output. Parameters:; server - image server providing pixels from which objects should be created; labels - classification labels; if null, these will be taken from ImageServer#getMetadata() and all non-ignored classifications will be used.; Providing a map makes it possible to explicitly exclude some classifications.; roi - region of interest in which objects should be created (optional; if null, the entire image is used); creator - function to create an object from a ROI (e.g. annotation or detection); minArea - minimum area for an object fragment to retain, in calibrated units based on the pixel calibration; minHoleArea - minimum area for a hole to fill, in calibrated units based on the pixel calibration; doSplit - if true, split connected regions into separate objects; Returns:; the objects created within the ROI; Throws:; IOException. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; Returns:; the classification ImageServer. createPixelClassificationServer; public static ImageServer<BufferedImage> createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles); Create an ImageServer that displays the results of applying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:11865,detect,detection,11865,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['detect'],['detection']
Safety,"tionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Apply classification, optionally requesting probability estimates. predict(T) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:776075,predict,predict,776075,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predict']
Safety,"tionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98972,detect,detections,98972,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detections']
Safety,"tionModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2942,predict,predicted,2942,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['predict'],['predicted']
Safety,"tiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.application.Application. qupath.lib.gui.QuPathApp; qupath.lib.gui.tma.QuPathTMAViewer. qupath.lib.roi.AreaROI (implements java.io.Serializable); qupath.lib.analysis.stats.ArrayWrappers; qupath.lib.scripting.languages.A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:7142,detect,detect,7142,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['detect'],['detect']
Safety,"tivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:5510,detect,detected,5510,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['detect'],['detected']
Safety,"tiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; a bound boolean property, which is true whenever systemMenubarProperty() is set to ALL_WINDOWS. exportPreferences;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:41031,detect,detectionStrokeThicknessProperty,41031,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionStrokeThicknessProperty']
Safety,"tle,; ObservableList<URI> recentItems,; Consumer<URI> consumer,; Function<URI,String> menuitemText); Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. Parameters:; menuTitle - ; recentItems - ; consumer - ; menuitemText - ; Returns:. promptForParentObjects; public static boolean promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents); Get the parent objects to use when running the plugin, or null if no suitable parent objects are found.; This involves prompting the user if multiple options are possible, and logging an appropriate command ; in the workflow history of the ImageData if possible. Parameters:; name - command name, to include in dialog messages; imageData - imageData containing potential parent objects; includeSelected - if true, provide 'selected objects' as an option; supportedParents - collection of valid parent objects; Returns:. showWithScreenSizeConstraints; public static void showWithScreenSizeConstraints(Stage stage,; double proportion); Show a stage, while ensuring that it cannot be larger than the screen size.; The screen is determined from the stage itself, its owner, or is the primary screen.; ; This method is useful when there is a risk that an initial stage size is too big for the screen,; but we do not want to prevent the user from resizing freely afterwards.; . Parameters:; stage - ; proportion - ; See Also:. showWithSizeConstraints(Stage, double, double). showWithSizeConstraints; public static void showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight); Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Parameters:; stage - ; maxWidth - ; maxHeight - ; See Also:. showWithScreenSizeConstraints(Stage, double). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:16826,risk,risk,16826,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['risk'],['risk']
Safety,"to cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Ro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:2589,detect,detection,2589,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['detect'],['detection']
Safety,"to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PathObjectHierarchy, ImageServer<BufferedImage>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; createDetector(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Create a new ObjectDetector, compatible with the specified ImageData",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:176296,detect,detect,176296,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"tors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRegionStore - Class in qupath.lib.gui.images.stores. An ImageRegionStore suitable for either Swing or JavaFX applications. defaultLocaleDisplayProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for setting the default Locale for Locale.Category.DISPLAY. defaultLocaleFormatProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for setting the default Locale for Locale.Category.FORMAT. defaultLocaleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for setting the default Locale. DefaultPathObjectComparator - Class in qupath.lib.objects. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectComparator() - Constructor for class qupath.lib.objects.DefaultPathObjectComparator;  ; DefaultPathObjectConnectionGroup - Class in qupath.lib.objects. Simple, default implementation of PathObjectConnectionGroup. DefaultPathObjectConnectionGroup() - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup) - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Create a connections group, copying the connections from an existing group. DefaultROIComparator - Class in qupath.lib.roi. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultROIComparator() - Constructor for class qupath.lib.roi.DefaultROIComparator;  ; DefaultScriptableWorkflowStep - Class in qupath.lib.plugins.workflow. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptableWor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:243800,predict,predictable,243800,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['predict'],['predictable']
Safety,"tourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. Constructor Summary; Constructors. Constructor; Description; ContourTracing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<PathObject>; createAnnotations(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects from a labelled image. static List<PathObject>; createCells(Raster raster,; int bandNuclei,; int bandCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from two bands of a raster representing a labelled image. static List<PathObject>; createCells(SimpleImage imageNuclei,; SimpleImage imageCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from a pair of labelled images. static List<PathObject>; createDetections(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects from a labelled image. static BiFunction<ROI,Number,PathObject>; createNumberedObjectFunction(Function<ROI,PathObject> creator). Create a (bi)function to generate an object from a ROI and a number, setting the name of the object to match the number. static BiFunction<ROI,Number,PathObject>; createObjectFunction(Function<ROI,PathObject> creator,; BiConsumer<PathObject,Number> numberer). Create a (bi)function to generate an object from a ROI and a number. static List<PathObject>; createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects from one band of a raster containing integer labels. static List<PathObject>; createObjects(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects from a labelled image. static Map<Number,ROI>; createROIs(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:1672,detect,detection,1672,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['detect'],['detection']
Safety,"tring[]) - Static method in class qupath.lib.common.Timeit;  ; main(String[]) - Static method in class qupath.lib.gui.JavadocViewer. Show javadoc stage (used for development). main(String[]) - Static method in class qupath.lib.gui.tools.DocGenerator;  ; main(String[]) - Static method in class qupath.QuPath. Main class to launch QuPath. MAIN_SCENE - Enum constant in enum class qupath.lib.gui.tools.GuiTools.SnapshotType. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT - Enum constant in enum class qupath.lib.gui.tools.GuiTools.SnapshotType. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. MAKE_INVERSE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; makeARGB(int, int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an ARGB color. makeBinaryImage(ImageProcessor, double, Roi, boolean) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Make a binary image depicting (hopefully) the TMA cores. makeChartInteractive(Chart, NumberAxis, NumberAxis) - Static method in class qupath.lib.gui.charts.ChartTools. Make it possible to select chart regions to zoom in, and scroll to navigate around it. makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). makeDefaultStainVector(StainVector.DefaultStains) - Static method in class qupath.lib.color.StainVector. Get a default stain vector. makeDoubleArrayWrapper(double[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a double array, returning values (predictably) as doubles. makeFileInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file path relative to the current project, an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:663091,detect,detect,663091,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"troidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPref",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:254533,detect,detections,254533,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"tr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat mat). Prediction function that takes a single input and gives a single ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:1276,predict,prediction,1276,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['predict'],['prediction']
Safety,"ts into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat.; ; Note that this only supports a batch size of 1. For larger batches or more control, getBlobFunction(String) and; getPredictionFunction() should be used directly. Specified by:; predict in interface DnnModel; Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:3019,predict,prediction,3019,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['predict'],['prediction']
Safety,"ts to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI). Apply classification from a server to a collection of objects. static boolean; createAnnotationsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static boolean; createDetectionsFromPixelClassifier(Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:2103,predict,prediction,2103,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['predict'],['prediction']
Safety,"ts, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, copySelectedObjectsToPlane, createAllFullImageAnnotations, createAllFullImageAnnotations, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromDensityMap, createAnnotationsFromPixelClassifier, createAnnotationsFromPixelClassifier, createDetectionsFromPixelClassifier, createDetectionsFromPixelClassifier, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createFullImageAnnotation, createSelectAllObject, createSelectAllObject, createTMAGrid, createTMAGrid, describe, describe, deselectAll, deselectAll, detectionCentroidDistances, detectionCentroidDistances, detectionCentroidDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistances, detectionToAnnotationDistancesSigned, detectionToAnnotationDistancesSigned, duplicateSelectedAnnotations, duplicateSelectedAnnotations, exportAllObjectsToGeoJson, exportAllObjectsToGeoJson, exportObjectsToGeoJson, exportObjectsToGeoJson, exportSelectedObjectsToGeoJson, exportSelectedObjectsToGeoJson, fileExists, findDensityMapHotspots, findDensityMapHotspots, findDensityMapHotspots, fireHierarchyUpdate, fireHierarchyUpdate, getAllObjects, getAllObjects, getAnnotationObjects, getBasePathClass, getCellObjects, getColorRGB, getCurrentHierarchy, getCurrentImageData, getCurrentImageName, getCurrentImageNameWithoutExtension, getCurrentServer, getCurrentServerPath, getDerivedPathClass, getDerivedPathClass, getDetectionObjects, getLogger, getNonIntensityAncestorPathClass, getObjects, getObjects, getPathClass, getPathClass, getProject, getProjectEntry, getProjectEntryMetadataValue, getSelectedObject, getSelectedObjects, getSelectedROI, getTileObjects, getTMACoreList, hasMeasurem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:7872,detect,detectionToAnnotationDistances,7872,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['detect'],['detectionToAnnotationDistances']
Safety,"ts.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistancesSigned(boolean) - Static method in class qupath.lib.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:256260,detect,detection,256260,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['detect'],['detection']
Safety,"ts.Histogram. Number of NaNs in the input array. NO - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""No"" option. nObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Number of objects in the hierarchy, excluding the root. nObjects() - Static method in class qupath.lib.scripting.QP. Get a count of the total number of objects in the current hierarchy. nObserved() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of observed (not censored) events. NONE - Enum constant in enum class qupath.lib.classifiers.Normalization. Do not normalize features. NONE - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Do not include images. NONE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Don't check for any updates automatically. NONE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Do not show detections. NONE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting. Do not set the image type. NONE - Enum constant in enum class qupath.opencv.tools.LocalNormalization.NormalizationType. No local normalization. nonModal() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify that the dialog should be non-modal. Normalization - Enum Class in qupath.lib.classifiers. Methods for normalizing features. normalize(Mat, Normalizer) - Static method in class qupath.opencv.ml.objects.features.Preprocessing. Apply a Normalizer to new training data samples. normalize(Normalization) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Define normalization type. Normalize() - Constructor for class qupath.opencv.ops.ImageOps.Normalize;  ; NORMALIZED - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Normalized bin counts, so that the sum of all counts is 1.0. normalizeFeature(int, double) - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:712208,detect,detections,712208,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"turning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:2475,predict,prediction,2475,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['predict'],['prediction']
Safety,"ty<PathClass> autoSetAnnotationClassProperty; Classification that should automatically be applied to all new annotations. May be null. See Also:. autoSetAnnotationClassProperty(). alwaysPaintSelectedObjects; public static BooleanProperty alwaysPaintSelectedObjectsProperty; Always paint selected objects in the viewer, even if the opacity setting is 0. See Also:. alwaysPaintSelectedObjectsProperty(). viewerInterpolateBilinear; public static BooleanProperty viewerInterpolateBilinearProperty; Request that images are displayed in viewers using bilinear interpolation. See Also:. viewerInterpolateBilinearProperty(). detectionTreeDisplayMode; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty; Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). See Also:. detectionTreeDisplayModeProperty(). maxObjectsToClipboard; public static IntegerProperty maxObjectsToClipboardProperty; The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. See Also:. maxObjectsToClipboardProperty(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineW",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:38857,detect,detectionTreeDisplayModeProperty,38857,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionTreeDisplayModeProperty']
Safety,"u(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setDebugMode(boolean) - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default image data, which will be returned by QP.getCurrentImageData() if it would otherwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDefaultProject(Project<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default project, which will be returned by QP.getProject() if it would otherwise return null ; (i.e. setDefaultStaticImports(Collection<Class<?>>) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setDescription(String) - Method in class qupath.lib.objects.PathAnnotationObject. Set a free text description for this annotation. setDescription(String) - Method in in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:921754,detect,detect,921754,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"uestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:4704,timeout,timeoutMilliseconds,4704,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,2,"['abort', 'timeout']","['abort', 'timeoutMilliseconds']"
Safety,"ufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:4661,detect,detected,4661,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['detect'],['detected']
Safety,"ufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:4641,detect,detected,4641,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,5,['detect'],['detected']
Safety,"ugin(String, ImageData<?>, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData. runPlugin(String, ImageData<?>, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:877676,detect,detect,877676,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:4014,safe,safe,4014,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['safe'],['safe']
Safety,"ui.actions.menus.ViewMenuActions.Actions;  ; FILL_ANNOTATIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_HOLES - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; FillAnnotationHolesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. FillAnnotationHolesPlugin() - Constructor for class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; fillAnnotations(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether annotations are drawn as 'filled' shapes. fillAnnotationsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; fillDetections(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether detections are drawn as 'filled' shapes. fillDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; fillHoles(ByteProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Fill holes in a binary image. fillHoles(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Fill all interior rings for the specified geometry. fillHoles(ROI) - Static method in class qupath.lib.roi.RoiTools. Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. fillOutside(ImageProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling. Fill in a region outside a specified ROI. fillSmallHoles(Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. filter(Predicate<PathObject>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Filter the PathObjects before export (objects returning true for the predicate will be ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:302908,detect,detections,302908,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"uld be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetections; public void setFillDetections(boolean fill); Show detection objects 'filled' in viewers. Parameters:; fill - . setFillAnnotations; public void setFillAnnotations(boolean fill); Show annotation objects 'filled' in viewers. Parameters:; fill - . setShowConnections; public void setShowConnections(boolean show); Show connections between objects, if available. Parameters:; show - . setShowTMACoreLabels; public void setShowTMACoreLabels(boolean showTMALabels); Show TMA core names on top of the image. Parameters:; showTMALabels - . getShowTMACoreLabels; public boolean getShowTMACoreLabels(). Returns:; true if TMA core labels should be shown in viewers, false otherwise. showTMACoreLabelsProperty; public BooleanProperty showTMACoreLabelsProperty(). Returns:; boolean property indicating whether TMA core labels should be shown in the viewer; See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean). showConnectionsProperty; public BooleanProperty showConnectionsProperty(). Returns:; boolean property indicating whether coll",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:12472,detect,detection,12472,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detection']
Safety,"ult number of parallel ; threads for classification. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier,; int nThreads). Create an overlay to display the live application of a PixelClassifier to an image. static PixelClassificationOverlay; createFeatureDisplayOverlay(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. static String; getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t). Default method for getting a location string from an ImageServer using cached tiles. boolean; getLivePrediction(). Query whether live prediction is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:3095,predict,prediction,3095,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['predict'],['prediction']
Safety,"um Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects; Enum Class PathObjectFilter. java.lang.Object; java.lang.Enum<PathObjectFilter>; qupath.lib.objects.PathObjectFilter. All Implemented Interfaces:; Serializable, Comparable<PathObjectFilter>, Constable, Predicate<PathObject>. public enum PathObjectFilter; extends Enum<PathObjectFilter>; implements Predicate<PathObject>; Enumeration of filters (predicates) that can be used to select objects based on their type.; ; See also PathObjectPredicates for more complex JSON-serializable predicates. Author:; Pete Bankhead; See Also:. PathObjectPredicates. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:1207,detect,detection,1207,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['detect'],['detection']
Safety,"ummary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptions.DetectionDisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:2421,detect,detection,2421,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['detect'],['detection']
Safety,"ummary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1258,detect,detections,1258,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['detect'],['detections']
Safety,"uncher. QuPath - Class in qupath. Main QuPath launcher. QuPath() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805497,detect,detect,805497,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRegionRenderer. All Known Implementing Classes:; DefaultImageRegionStore. public interface ImageRegionRenderer; Interface for painting regions of an ImageServer onto a Graphics object. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:1164,timeout,timeoutMilliseconds,1164,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,1,['timeout'],['timeoutMilliseconds']
Safety,"urns:; true if the current active pixel classification should be shown, false otherwise. getShowAnnotations; public boolean getShowAnnotations(). Returns:; true if annotations should be displayed in viewers, false otherwise. getShowNames; public boolean getShowNames(). Returns:; true if annotation names should be displayed in viewers, false otherwise. getFontSize; public float getFontSize(). Returns:; the requested font size for showing annotation names on the viewer. getShowTMAGrid; public boolean getShowTMAGrid(). Returns:; true if any TMA grids should be displayed in viewers, false otherwise. getShowDetections; public boolean getShowDetections(). Returns:; true if detections should be displayed in viewers, false otherwise. getShowConnections; public boolean getShowConnections(). Returns:; true if any calculated connections between objects should be displayed in viewers, false otherwise. getFillDetections; public boolean getFillDetections(). Returns:; true if detections should be displayed 'filled' in viewers, false otherwise. getFillAnnotations; public boolean getFillAnnotations(). Returns:; true if annotations should be displayed 'filled' in viewers, false otherwise. setShowGrid; public void setShowGrid(boolean showGrid); Set whether a counting grid should be shown in viewers. Parameters:; showGrid - ; See Also:. setGridLines(GridLines). getShowGrid; public boolean getShowGrid(). Returns:; true if a counting grid should be displayed in viewers, false otherwise; See Also:. getGridLines(). getGridLines; public GridLines getGridLines(). Returns:; the GridLines object that defines how a counting grid may be show in viewers; See Also:. getShowGrid(). setGridLines; public void setGridLines(GridLines gridLines); Set the GridLines object that defines how a counting grid may be show in viewers. Parameters:; gridLines - . gridLinesProperty; public ObjectProperty<GridLines> gridLinesProperty(). Returns:; an object property containing a GridLines object that defines how a co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:14647,detect,detections,14647,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['detect'],['detections']
Safety,"us.FileMenuActions.Actions;  ; TmaActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMACommands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACommands() - Constructor for class qupath.lib.gui.commands.TMACommands;  ; TMACoreObject - Class in qupath.lib.objects. A special PathObject used exclusively to represent TMA cores. TMACoreObject() - Constructor for class qupath.lib.objects.TMACoreObject. Default constructor. TMADataIO - Class in qupath.lib.gui.tma. Static methods for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAExplorer(QuPathGUI) - Constructor for class qupath.lib.gui.tma.TMAExplorer. Constructor. tmaExportDownsample - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; tmaExportDownsampleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default downsample factor to use when exporting TMA cores. TMAGrid - Interface in qupath.lib.objects.hierarchy. Interface defining a (rectangular) TMA grid. TMAGridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay capable of painting a TMA Grid. TMAGridOverlay(OverlayOptions) - Constructor for clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1031934,detect,detect,1031934,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110423,detect,detectionToAnnotationDistancesSigned,110423,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,4,['detect'],"['detection', 'detectionToAnnotationDistancesSigned']"
Safety,"utToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConvert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2308,detect,detection,2308,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['detect'],['detection']
Safety,"va.lang.Object; qupath.lib.gui.tools.ColorToolsFX. public class ColorToolsFX; extends Object; Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final Color; TRANSLUCENT_BLACK_FX. Black with opacity at 50%. static final Color; TRANSLUCENT_WHITE_FX. White with opacity at 50%. Constructor Summary; Constructors. Constructor; Description; ColorToolsFX();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getARGB(Color color). Get a packed int (ARGB) representation of a Color object. static Color; getCachedColor(int r,; int g,; int b). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(int r,; int g,; int b,; int a). Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). static Color; getCachedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) represen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:1384,avoid,avoid,1384,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['avoid'],['avoid']
Safety,"vePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3971,detect,detected,3971,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['detect'],['detected']
Safety,"veTool(); Get the active PathTool for this viewer.; Note that this is not necessarily identical to the result of the last call to setActiveTool(PathTool),; because it may be modified by other behavior (e.g. pressing the spacebar to temporarily activate the Move tool). Returns:. updateCursor; protected void updateCursor(). getCursor; public Cursor getCursor(); Get the current cursor for this viewer. Returns:. setCursor; public void setCursor(Cursor cursor); Set the requested cursor to display in this viewer. Parameters:; cursor - . getSelectedObject; public PathObject getSelectedObject(); Get the currently-selected object from the hierarchy. Returns:. getAllSelectedObjects; public Collection<PathObject> getAllSelectedObjects(); Get all currently-selected objects from the hierarchy. Returns:. setCustomPixelLayerOverlay; public void setCustomPixelLayerOverlay(PathOverlay pathOverlay); Optionally set a custom overlay to use for the pixel layer.; ; This is useful to support live prediction based on a specific field of view, for example. Parameters:; pathOverlay - . resetCustomPixelLayerOverlay; public void resetCustomPixelLayerOverlay(); Reset the custom pixel layer overlay to null. getCustomPixelLayerOverlay; public PathOverlay getCustomPixelLayerOverlay(); Get the custom pixel layer overlay, or null if it has not be set. Returns:. getCurrentROI; public ROI getCurrentROI(); Get the current ROI, i.e. the ROI belonging to the currently-selected object - or null, if there is no object or if the selected object has no ROI. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject); Set selected object in the current hierarchy, without centering the viewer. Parameters:; pathObject - . setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelected); Set selected object in the current hierarchy, without centering the viewer. Parameters:; pathObject - ; addToSelected - . getRenderer; protected ImageRenderer getRenderer(); Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:21399,predict,prediction,21399,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['predict'],['prediction']
Safety,"vedPathClass(PathClass, String) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDescendantObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all descendant objects. getDescendantObjects(PathObject, Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects with a specified type. getDescription() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:377971,detect,detect,377971,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"vedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDescendantObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all descendant objects. getDescendantObjects(PathObject, Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects with a specified type. getDescription() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getDescription() - Method in class qupath.imagej.gui.IJExtension;  ; getDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getDescription() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:378333,detect,detect,378333,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"ving duplicates. Parameters:; pathObjects - collection of objects with classifications that should be standardized; Returns:; true if changes were made, false otherwise. standardizeClassifications; public static boolean standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparator); Standardize the classifications for a collection of objects.; This involves sorting the names of derived classes, and removing duplicates. Parameters:; pathObjects - collection of objects with classifications that should be standardized; comparator - comparator to use when sorting; Returns:; true if changes were made, false otherwise. transformObject; public static PathObject transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements); Create a transformed version of a PathObject with a new ID.; If the transform is null or the identity transform, then a duplicate object is generated instead.; ; Note: only detections (including tiles and cells) and annotations are fully supported by this method.; Root objects are duplicated.; TMA core objects are transformed only if the resulting transform creates an ellipse ROI, since this is ; currently the only ROI type supported for a TMA core (this behavior may change).; Any other object types result in an UnsupportedOperationException being thrown. Parameters:; pathObject - the object to transform; this will be unchanged; transform - optional affine transform; if null, this effectively acts to duplicate the object; copyMeasurements - if true, the measurement list of the new object will be populated with the measurements of pathObject; Returns:; a duplicate of pathObject, with affine transform applied to the object's ROI(s) if required; See Also:. transformObject(PathObject, AffineTransform, boolean, boolean). transformObject; public static PathObject transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs); Create a transforme",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:38365,detect,detections,38365,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['detect'],['detections']
Safety,"volutionStains;  ; readExternal(ObjectInput) - Method in class qupath.lib.color.StainVector;  ; readExternal(ObjectInput) - Method in class qupath.lib.geom.Point2;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathCellObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathObjectConnections;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathROIObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.TMACoreObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.Workflow;  ; readFile(File) - Method in class qupath.lib.gui.scripting.ScriptTab. Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). readFileAsString(File) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file into a single String. readFileAsString(String) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file given by the specified path into a single String. readHierarchy() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. readHierarchy(File) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readHierarchy(InputStream) - Static method in class qupath.lib.io.PathIO. Read a PathObjectHierarchy from a saved data file (omitting all other contents). readHierarchy(Path) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:822724,detect,detected,822724,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detected']
Safety,"wer.overlays.HierarchyOverlay. Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion(ImageRegion) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay. Clear previously-cached tiles for a specified region of this overlay. clearCacheForRequestOverlap(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCacheForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; clearCellMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Coll",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109229,detect,detections,109229,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detections']
Safety,"werActions;  ; detachActiveViewerFromGrid() - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the currently active viewer from the viewer grid, if possible. detachViewerFromGrid(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Detach the specified viewer from the viewer grid, if possible. detect(DetectionModel, Mat, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. detect(DetectionModel, ImageServer<BufferedImage>, RegionRequest, IntFunction<PathClass>, Function<ROI, PathObject>) - Static method in class qupath.opencv.dnn.DnnTools. Apply a detection model to generate rectangles surrounding distinct structures. DetectCytokeratinCV - Class in qupath.opencv. Simple command to detect tumor regions stained with cytokeratin. DetectCytokeratinCV() - Constructor for class qupath.opencv.DetectCytokeratinCV;  ; detection() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.DETECTION. DETECTION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to DetectionModel. detectionCentroidDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). detectionCentroidDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:252510,detect,detection,252510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detection']
Safety,"when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:5030,timeout,timeoutMilliseconds,5030,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['timeout'],['timeoutMilliseconds']
Safety,"which influences how similar local intensity values must be for the wand region growing. Returns:. setWandSensitivity; public static void setWandSensitivity(double sensitivity); Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. Parameters:; sensitivity - . createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape); Description copied from class: BrushToolEventHandler; Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. Overrides:; createShape in class BrushToolEventHandler; Parameters:; e - ; x - ; y - ; useTiles - If true, request generating a shape from existing tile objects.; addToShape - If provided, it can be assumed that any new shape ought to be added to this one.; The purpose is that this method may (optionally) use the shape to refine the one it will generate, ; e.g. to avoid having isolated or jagged boundaries.; Returns:. getBrushDiameter; protected double getBrushDiameter(); Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. Overrides:; getBrushDiameter in class BrushToolEventHandler. createNewAnnotation; protected PathObject createNewAnnotation(MouseEvent e,; double x,; double y); Create a new annotation and set it in the current viewer. Parameters:; e - ; x - ; y - ; Returns:. ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:9664,avoid,avoid,9664,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,1,['avoid'],['avoid']
Safety,"x property. getCurrentText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentViewer() - Static method in class qupath.lib.gui.scripting.QPEx. Get the active viewer in the current QuPath instance. getCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor for this viewer. getCustomOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get direct access to the custom overlay list. getCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the custom pixel layer overlay, or null if it has not be set. getDataMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the maximum measurement value from the objects passed to the constructor of this mapper. getDataMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the minimum measurement value from the objects passed to the constructor of this mapper. getDebugMode() - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Get whether debug mode is on or off. getDefaultAutoCompletor(String) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Default method to get a suitable auto completor for the given language name. getDefaultBuilder() - Static method in class qupath.lib.io.GsonTools. Access the builder used with GsonTools.getInstance(). getDefaultChannelColor(int) - Static method in class qupath.lib.images.servers.ImageChannel. Get the default color for a specified channel, for use when no channel colors are already known. getDefaultChannelList(int) - Static method in class qupath.lib.images.servers.ImageChannel. Get default channel list for an image with a specified number of channels. getDefaultColorMap() - Static method in class qupath.lib.color.ColorMaps. Get a default, general-purpose ColorMaps.ColorMap. getDefaultColorModel() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getDefaultColorModel() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:367458,detect,detect,367458,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"xel classification to the selected objects. addPixelClassifierMeasurements(PixelClassifier, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Add a new property change listener. addPropertyPreference(Property<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; addRunn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:26066,detect,detect,26066,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detect']
Safety,"xel classifier, applied to selected objects. static boolean; createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static boolean; createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static boolean; createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static PixelClassificationMeasurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:3614,detect,detection,3614,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['detect'],['detection']
Safety,"yer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model mode",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3200,predict,predict,3200,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['predict'],['predict']
Safety,"your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.objects. package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath.; ; There are four main object types in QuPath:; ; Root object, one per image, at the base of the object hierarchy; Annotation object, used to represent larger regions, often drawn by hand and used to define regions for analysis; TMA core object, similar to annotations but specifically for representing cores within a Tissue Microarray grid; Detection object, used to represent objects that may be very numerous (e.g. cell nuclei). There are further specialist subtypes of ; detection, including cells and tiles. In general, the idea is that annotations (and TMA cores) should be flexible and editable, whereas detections should be compact and efficient - but ; typically not editable after creation.; ; Each object can have a parent and multiple child objects. This means that all objects associated with an image can be found by traversing this hierarchical ; arrangement, starting from the root object for the image.; ; Objects also have optional classifications and measurement lists. Related Packages. Package; Description; qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.utils. Helper classes for working with PathObjects. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; CellTools. Helper class for working with PathObjects that represent cells. DefaultPathObjectComparator. Default comparator to enable objects to be sorted in a more predictable manner. DefaultPathObjectConnectionGroup. Simple, default implementation of PathObjectConn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html:1068,detect,detections,1068,javadoc/docs/qupath/lib/objects/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/package-summary.html,1,['detect'],['detections']
Safety,"ype, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocale. Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThickness. Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayMode. Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFiles. Request a log file to be generated. static BooleanProperty; doubleClickToZoom. Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandTools. Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static BooleanProperty; gridScaleMicrons. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingX. Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:3083,detect,detections,3083,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detections']
Safety," ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionToAnnotationDistances(ImageData<?>, boolean, boolean) - Static method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255778,detect,detectionToAnnotationDistances,255778,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['detect'],['detectionToAnnotationDistances']
Safety," IntegerProperty colorTMAProperty(); The default color used to display TMA core objects. Returns:. colorTMAMissingProperty; public static IntegerProperty colorTMAMissingProperty(); The default color used to display missing TMA core objects. Returns:. colorTileProperty; public static IntegerProperty colorTileProperty(); The default color used to display tile objects. Returns:. autoSetAnnotationClassProperty; public static ObjectProperty<PathClass> autoSetAnnotationClassProperty(); Classification that should automatically be applied to all new annotations. May be null. Returns:. alwaysPaintSelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:58988,detect,detectionTreeDisplayModeProperty,58988,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['detect'],['detectionTreeDisplayModeProperty']
Safety," coord,; Geometry geometry,; PointOnGeometryLocator locator). Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. static double; computeDistance(Coordinate coord,; Geometry geometry,; PointOnGeometryLocator locator,; boolean signedDistance). Compute the shortest distance from a coordinate to a target geometry. static STRtree; createCoordinateCache(Collection<Coordinate> coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3150,detect,detection,3150,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,2,['detect'],['detection']
Safety," coords). Create an STRtree to enable nearest neighbor searching for a collection of coordinates. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3619,detect,detectionToAnnotationDistancesSigned,3619,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['detect'],['detectionToAnnotationDistancesSigned']
Safety," hierarchy,; boolean includeMissing); Select all TMA core objects in the specified hierarchy, optionally including missing cores. Parameters:; hierarchy - ; includeMissing - . selectDetections; public static void selectDetections(PathObjectHierarchy hierarchy); Select all detection objects in the specified hierarchy. Parameters:; hierarchy - . selectCells; public static void selectCells(PathObjectHierarchy hierarchy); Select all cell objects in the specified hierarchy. Parameters:; hierarchy - . selectAnnotations; public static void selectAnnotations(); Select all annotation objects in the current hierarchy. selectTMACores; public static void selectTMACores(); Select all TMA core objects in the current hierarchy, excluding missing cores. selectTMACores; public static void selectTMACores(boolean includeMissing); Select all TMA core objects in the current hierarchy, optionally including missing cores. Parameters:; includeMissing - . selectDetections; public static void selectDetections(); Select all detection objects in the current hierarchy. selectCells; public static void selectCells(); Select all cell objects in the current hierarchy. selectTiles; public static void selectTiles(PathObjectHierarchy hierarchy); Select all tile objects in the specified hierarchy. Parameters:; hierarchy - . selectTiles; public static void selectTiles(); Select all tile objects in the current hierarchy. selectObjectsByClassification; public static void selectObjectsByClassification(String... pathClassNames); Select objects for the current hierarchy that have one of the specified classifications. Parameters:; pathClassNames - one or more classification names, which may be converted to a PathClass with getPathClass(String). selectObjectsByPathClass; public static void selectObjectsByPathClass(PathClass... pathClasses); Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. Parameters:; pathClasses - one or more classifications; See Also",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:88932,detect,detection,88932,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['detect'],['detection']
Safety," pathClass). Create a classified annotation object. static PathObject; createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified annotation object with a specified measurement list. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus). Create a cell object. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass). Create a cell object with an optional classification. static PathObject; createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements). Create a cell object with an optional classification and measurements list. static PathObject; createDetectionObject(ROI roi). Create an unclassified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass). Create a classified detection object. static PathObject; createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a classified detection object with a specified measurement list. static PathObject; createTileObject(ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:1959,detect,detection,1959,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety," x,; double y,; double width,; double height,; boolean isMissing); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; Returns:. createTMACoreObject; public static TMACoreObject createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane); Create a TMA core object with an ellipse ROI. Parameters:; x - ; y - ; width - ; height - ; isMissing - ; plane - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified detection object with a specified measurement list.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; measurements - ; Returns:; See Also:. createCellObject(ROI, ROI, PathClass, MeasurementList). createDetectionObject; public static PathObject createDetectionObject(ROI roi,; PathClass pathClass); Create a classified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; pathClass - ; Returns:. createDetectionObject; public static PathObject createDetectionObject(ROI roi); Create an unclassified detection object.; ; Detection objects are used to represent immutable objects that could be very numerous, prizing efficiency over flexibility. Parameters:; roi - ; Returns:. createTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a tile object, with a classification and measurements list.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; measur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:5830,detect,detection,5830,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['detect'],['detection']
Safety," | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.EMClusterer. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.EMClusterer; extends OpenCVClassifiers.OpenCVStatModel; Clusterer based on EM. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html:1249,predict,predict,1249,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.EMClusterer.html,1,['predict'],['predict']
Safety,"  ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Interface DnnModel. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; AbstractDnnModel, OpenCVDnn. public interface DnnModel; extends AutoCloseable; General interface for implementing a deep learning model in a pipeline using OpenCV.; ; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format, ; and the output back into one or more Mats.; ; Implementations should provide convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:1079,predict,predict,1079,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['predict'],['predict']
Safety,﻿. QuPath. assets; . /css; ; main.css. /images; . /icons; ; angle-left-solid.svg; angle-right-solid.svg; apple.svg; code-solid.svg; comments-regular.svg; file-lines-regular.svg; github.svg; linux.svg; twitter.svg; windows.svg; xmark-solid.svg. favicon.ico. /js; ; os.js; slider.js. javadoc; . /docs; . /qupath; . /ext; . /openslide; ; OpenSlideExtension (QuPath 0.5.0); qupath.ext.openslide (QuPath 0.5.0); qupath.ext.openslide Class Hierarchy (QuPath 0.5.0). /imagej; . /detect; . /cells; ; qupath.imagej.detect.cells (QuPath 0.5.0); qupath.imagej.detect.cells Class Hierarchy (QuPath 0.5.0); PositiveCellDetection (QuPath 0.5.0); SubcellularDetection (QuPath 0.5.0); WatershedCellDetection (QuPath 0.5.0); WatershedCellMembraneDetection (QuPath 0.5.0). /dearray; ; qupath.imagej.detect.dearray (QuPath 0.5.0); qupath.imagej.detect.dearray Class Hierarchy (QuPath 0.5.0); TMADearrayer (QuPath 0.5.0); TMADearrayerPluginIJ (QuPath 0.5.0). /tissue; ; qupath.imagej.detect.tissue (QuPath 0.5.0); qupath.imagej.detect.tissue Class Hierarchy (QuPath 0.5.0); PositivePixelCounterIJ (QuPath 0.5.0); SimpleTissueDetection2 (QuPath 0.5.0). /gui; ; IJExtension (QuPath 0.5.0); IJExtension.IJExtensionCommands (QuPath 0.5.0); ImageJMacroRunner (QuPath 0.5.0); qupath.imagej.gui (QuPath 0.5.0); qupath.imagej.gui Class Hierarchy (QuPath 0.5.0). /images; . /servers; ; ImageJServer (QuPath 0.5.0); ImageJServerBuilder (QuPath 0.5.0); qupath.imagej.images.servers (QuPath 0.5.0); qupath.imagej.images.servers Class Hierarchy (QuPath 0.5.0). /writers; ; qupath.imagej.images.writers (QuPath 0.5.0); qupath.imagej.images.writers Class Hierarchy (QuPath 0.5.0); TiffWriterIJ (QuPath 0.5.0); ZipWriterIJ (QuPath 0.5.0). /processing; ; MorphologicalReconstruction (QuPath 0.5.0); qupath.imagej.processing (QuPath 0.5.0); qupath.imagej.processing Class Hierarchy (QuPath 0.5.0); RoiLabeling (QuPath 0.5.0); SimpleThresholding (QuPath 0.5.0); Watershed (QuPath 0.5.0). /superpixels; ; DoGSuperpixelsPlugin (QuPath 0.5.0);,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:472,detect,detect,472,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,6,['detect'],['detect']
Security," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1196,hash,hashCode,1196,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,1,['hash'],['hashCode']
Security," (may be this object unchanged). updateT; public RegionRequest updateT(int t); Create a RegionRequest equivalent to this one with the updated t value. Parameters:; t - requested t position; Returns:; RegionRequest with the specified t value (may be this object unchanged). updateDownsample; public RegionRequest updateDownsample(double downsample); Create a RegionRequest equivalent to this one with the updated downsample value. Parameters:; downsample - requested downsample position; Returns:; RegionRequest with the specified downsample value (may be this object unchanged). updatePath; public RegionRequest updatePath(String path); Create a RegionRequest equivalent to this one with the updated path. Parameters:; path - requested path position; Returns:; RegionRequest with the specified path value (may be this object unchanged). translate; public RegionRequest translate(int dx,; int dy); Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. Parameters:; dx - value to add to the x coordinate; dy - value to add to the y coordinate; Returns:; RegionRequest with the specified path value (may be this object unchanged). pad2D; public RegionRequest pad2D(int xPad,; int yPad); Add symmetric padding to the x and y dimensions of a request. Parameters:; xPad - padding to add along the x dimension; the width will be adjusted by xPad * 2; yPad - padding to add along the y dimension; the height will be adjusted by yPad * 2; Returns:; RegionRequest with the specified padding (may be this object unchanged if the padding is zero). pad2D; public RegionRequest pad2D(Padding padding); Add symmetric padding to the x and y dimensions of a request. Parameters:; padding - padding to add; Returns:; RegionRequest with the specified padding (may be this object unchanged if the padding is zero). hashCode; public int hashCode(). Overrides:; hashCode in class ImageRegion. equals; public boolean equals(Object obj). Overrides:; equals in class ImageRegion. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:11163,hash,hashCode,11163,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,3,['hash'],['hashCode']
Security," Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDisplayMode COLOR; Show using default color LUT (may be composite). INVERTED_COLOR; public static final ChannelDisplayMode INVERTED_COLOR; Show using color LUT with an inverted background. GRAYSCALE; public static final ChannelDisplayMode GRAYSCALE; Show using a grayscale LUT (black to white). INVERTED_GRAYSCALE; public static final ChannelDisplayMode INVERTED_GRAYSCALE; Show using an inverted grayscale LUT (white to black). Method Details. values; public static ChannelDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ChannelDisplayMode valueOf(String name); Returns the enum constant of this ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:1800,hash,hashCode,1800,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,1,['hash'],['hashCode']
Security," Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeature(int idx,; double originalValue); Normalize a single feature. Parameters:; idx - the index of the feature; this is required to identify the corresponding offset and scale; originalValue - the original value of the feature; Returns:; the normalized value of the feature. isIdentity; public boolean isIdentity(); Returns true if this normalizer does not actually do anything.; This is the case if all offsets are zero and all scales are 1. Returns:. getMissingValue; public double getMissing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html:1484,hash,hashCode,1484,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,1,['hash'],['hashCode']
Security, Class with static methods to fetch all the available ScriptLanguages. ScriptLanguageProvider() - Constructor for class qupath.lib.gui.scripting.languages.ScriptLanguageProvider;  ; ScriptParameters - Class in qupath.lib.scripting. Class that stores key information that is useful for running scripts. ScriptParameters.Builder - Class in qupath.lib.scripting. Builder class for ScriptParameters. scriptRunning() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Observable value indicating whether a script is currently running or not. scriptsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the shared scripts directory. scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; scriptsPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a directory containing scripts for quick-access through the user interface. ScriptStyler - Interface in qupath.lib.gui.scripting.richtextfx.stylers. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider - Class in qupath.lib.gui.scripting.richtextfx.stylers. Class with static methods to fetch all the available ScriptStylers. ScriptStylerProvider() - Constructor for class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider;  ; ScriptSyntax - Interface in qupath.lib.gui.scripting.syntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider - Class in qupath.lib.gui.scripting.syntax. Class with static methods to fetch all the available ScriptSyntaxes. ScriptSyntaxProvider() - Constructor for class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; ScriptTab - Class in qupath.lib.gui.scripting. Class representing a script tab (e.g. scrollSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ;,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:889796,access,access,889796,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security," Constructor; Description; AnnotationPane(QuPathGUI qupath). Constructor. AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. AnnotationPane; public AnnotationPane(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. AnnotationPane; public AnnotationPane(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - current QuPath instance.; imageDataProperty - the current ImageData. Method Details. disableUpdatesProperty; public BooleanProperty disableUpdatesProperty(); Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the list being updated e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html:2067,hash,hashCode,2067,javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/AnnotationPane.html,1,['hash'],['hashCode']
Security," Delaunay measurements to each pathObject. boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<Set<PathObject>>; getConnectedClusters(). Get a list of PathObjects that are connected to each other in this triangulation. Collection<double[]>; getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections). Deprecated. Collection<PathObject>; getConnectedNodes(PathObject pathObject,; Collection<PathObject> list). Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:2212,hash,hashCode,2212,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,1,['hash'],['hashCode']
Security," Enum Constant; Description; ANNOTATIONS. Accept annotation objects. CELLS. Accept cells. DETECTIONS. Accept detection objects (no subtypes, e.g. DETECTIONS_ALL. Accept detection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2122,hash,hashCode,2122,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['hash'],['hashCode']
Security," Field; Description; static final Comparator<Version>; COMPARATOR_FULL. Compare full version, including any suffixes. static final Comparator<Version>; COMPARATOR_MAJOR. Compare major versions only. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR. Compare major then minor versions. static final Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:2046,hash,hashCode,2046,javadoc/docs/qupath/lib/common/Version.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html,1,['hash'],['hashCode']
Security," Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp preprocessor(FeaturePreprocessor preprocessor); Apply a FeaturePreproce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1243,hash,hashCode,1243,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,1,['hash'],['hashCode']
Security," Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a ti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html:1292,hash,hashCode,1292,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,1,['hash'],['hashCode']
Security," ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3302,access,accessed,3302,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['access'],['accessed']
Security," Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static final PathObjectGridView.GridDisplaySize LARGE. Method Details. values; public static PathObjectGridView.GridDisplaySize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectGridView.GridDisplaySize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:1618,hash,hashCode,1618,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,1,['hash'],['hashCode']
Security," Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer content. MAIN_SCENE; public static final GuiTools.SnapshotType MAIN_SCENE; Snapshot of the full Scene of the main QuPath Window.; This excludes the titlebar and any overlapping windows. MAIN_WINDOW_SCREENSHOT; public static final GuiTools.SnapshotType MAIN_WINDOW_SCREENSHOT; Screenshot of the full QuPath window as it currently appears, including any overlapping windows. FULL_SCREENSHOT; public static final GuiTools.SnapshotType FULL_SCREENSHOT; Full screenshot, including items outside of QuPath. Method Details. values; public static GuiTools.SnapshotType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:1747,hash,hashCode,1747,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,1,['hash'],['hashCode']
Security," LocalNormalization.LocalNormalizationType; extends Object; Helper class to store local normalization parameters. Field Summary; Fields. Modifier and Type; Field; Description; final LocalNormalization.SmoothingScale; scale. Smoothing scale for Gaussian subtraction. final LocalNormalization.SmoothingScale; scaleVariance. Smoothing scale for Gaussian-weighted standard deviation estimate. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio). Get an object containing the parameters necessary for normalization. static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance). Get an object containing the parameters necessary for normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scale; public final LocalNormalization.SmoothingScale scale; Smoothing scale for Gaussian subtraction. scaleVariance; public final LocalNormalization.SmoothingScale scaleVariance; Smoothing scale for Gaussian-weighted standard deviation estimate. Method Details. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance); Get an object containing the parameters necessary for normalization. Parameters:; scale - Gaussian sigma value used for initial filters (mean subtraction); scaleVariance - sigma value used for variance estimation (may be null to apply subtraction only); Returns:. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio); Get an object containing the parameters necessary for normalization. Parameters:; sc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html:1566,hash,hashCode,1566,javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,1,['hash'],['hashCode']
Security," Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.ext.openslide; Class OpenSlideExtension. java.lang.Object; qupath.ext.openslide.OpenSlideExtension. All Implemented Interfaces:; QuPathExtension. @PrefCategory(""category.openslide""); public class OpenSlideExtension; extends Object; implements QuPathExtension. Field Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html:1220,hash,hashCode,1220,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,1,['hash'],['hashCode']
Security," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.DrawingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.DrawingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Drawing""); public static class PreferencePane.DrawingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; brushDiameter;  ; final BooleanProperty; brushScaleByMag;  ; final BooleanProperty; clipROIsForHierarchy;  ; final BooleanProperty; pixelSnapping;  ; final IntegerProperty; pointRadius;  ; final BooleanProperty; returnToMove;  ; final BooleanProperty; tileBrush;  ; final BooleanProperty; useMultipoint;  . Constructor Summary; Constructors. Constructor; Description; DrawingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. returnToMove; @BooleanPref(""Prefs.Drawing.returnToMove""); public final BooleanProperty returnToMove. pixelSnapping; @BooleanPref(""Prefs.Drawing.pixelSnapping""); public final BooleanProperty pixelSnapping. clipROIsForHierarchy; @BooleanPref(""Prefs.Drawing.clipROIsForHierarchy""); public final BooleanProperty clipROIsForHierarchy. brushDiameter; @IntegerPref(""Prefs.Drawing.brushDiameter""); public final IntegerProperty brushDiameter. tileBrush; @BooleanPref(""Prefs.Drawing.tileBrush""); public final BooleanProperty tileBrush. brushScaleByMag; @BooleanPref(""Prefs.Drawing.brushScaleByMag""); public final BooleanProperty brushScaleByMag. useMultipoint; @BooleanPref(""Prefs.Drawing.useMultipoint""); public final BooleanProperty useMultipoint. pointRadius; @IntegerPref(""Prefs.Drawing.pointRadius""); public final IntegerProperty pointRadius. Constructor Details. DrawingPreferences; public DrawingPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html:1206,hash,hashCode,1206,javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,1,['hash'],['hashCode']
Security," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools.handlers; Class MoveToolEventHandler.ViewerMover. java.lang.Object; qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Enclosing class:; MoveToolEventHandler. public static class MoveToolEventHandler.ViewerMover; extends Object; Helper class for panning a QuPathViewer (reasonably) smoothly. Constructor Summary; Constructors. Constructor; Description; ViewerMover(QuPathViewer viewer). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; cancelDirection(boolean xAxis). Cancel either the x- or y-axis direction of the movement. void; decelerate(). Stop moving, by smoothly decelerating. void; startMoving(double dx,; double dy,; boolean constantVelocity). Start moving, with initial velocity given by dx and dy. void; stopMoving(). Stop moving immediately. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewerMover; public ViewerMover(QuPathViewer viewer); Constructor. Parameters:; viewer - the viewer that will be controlled by this object. Method Details. startMoving; public void startMoving(double dx,; double dy,; boolean constantVelocity); Start moving, with initial velocity given by dx and dy. Parameters:; dx - ; dy - ; constantVelocity - . cancelDirection; public void cancelDirection(boolean xAxis); Cancel either the x- or y-axis direction of the movement. ; ; E.g. This can be used to change the direction from diagonal to straight ; (horizontal/vertical) when releasing an arrow key while another arrow key ; is pressed. Parameters:; xAxis - . decelerate; public void decelerate(); Stop moving, by smoothly decelerating. stopMoving; public void stopMoving(); Stop moving immediately. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html:1311,hash,hashCode,1311,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.ViewerMover.html,1,['hash'],['hashCode']
Security," Package; Description; qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. Classes. Class; Description; CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CreateChannelTrainingImagesCommand. Command to create training images based upon channel names, and add these to a project. CreateCompositeClassifierCommand. Command to create a composite classifier by merging together two or more other classifiers. CreateRegionAnnotationsCommand. Command to help create annotations defining regions that will be further annotated for ; algorithm training. CreateTrainingImageCommand. Command to generate a SparseImageServer from multiple image regions across a project. DensityMapCommand. Command for generating density maps from detections on an image. ExportTrainingRegionsCommand. Command to help export training regions as labelled images to train AI algorithms elsewhere. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html:2390,validat,validation,2390,javadoc/docs/qupath/process/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/package-summary.html,1,['validat'],['validation']
Security," Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Descriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1320,hash,hashCode,1320,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,1,['hash'],['hashCode']
Security," PathClass.fromArray(String...). static PathClass; getPathClass(List<String> names). Deprecated.; since v0.4.0 in favor of PathClass.fromCollection(java.util.Collection). static PathClass; getPathClass(PathClassFactory.StandardPathClasses pathClass). Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. static PathClass; getPathClassUnclassified(). Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. static PathClass; getPositive(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). static PathClass; getSingletonPathClass(PathClass pathClass). Deprecated.; since v0.4.0 in favor of PathClass.getSingleton(PathClass). static PathClass; getThreePlus(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getThreePlus(PathClass). static PathClass; getTwoPlus(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getPathClass; public static PathClass getPathClass(String name); Deprecated.; Get a PathClass, without specifying any color. Parameters:; name - ; Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(String name,; Integer rgb); Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). Get the PathClass object associated with a specific name. Note that this name must not contain newline; ; doing so will result in an IllegalArgumentException being thrown. If the name contains colon characters, ; it will be treated as a derived class. Parameters:; name - ; rgb - ; Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(String baseName,; String... names); Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). Get a derived PathClass object representing all the provided names, ; using default colors.; ; Note th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html:2925,hash,hashCode,2925,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,1,['hash'],['hashCode']
Security," SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:2044,hash,hashCode,2044,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,1,['hash'],['hashCode']
Security," Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.BarChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.BarChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x locatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:4717,hash,hashCode,4717,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['hash'],['hashCode']
Security," String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<String,DnnShape>; getInputs(). Get the requested inputs and their shapes. String; getLayout(). Get a string representing the axes layout that the model expects as input. Map<String,DnnShape>; getOutputs(). Get the expected outputs and their shapes. List<URI>; getURIs(). Get the URIs associated with the model (e.g. boolean; requestLazyInitialize(). Request that any model is loaded lazily on demand. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. FRAMEWORK_TENSORFLOW; public static final String FRAMEWORK_TENSORFLOW; Default name to identify TensorFlow. See Also:. Constant Field Values. FRAMEWORK_TF_LITE; public static final String FRAMEWORK_TF_LITE; Default name to identify TensorFlow Lite. See Also:. Constant Field Values. FRAMEWORK_ONNX_RUNTIME; public static final String FRAMEWORK_ONNX_RUNTIME; Default name to identify ONNX Runtime. See Also:. Constant Field Values. FRAMEWORK_OPENCV_DNN; public static final String FRAMEWORK_OPENCV_DNN; Default name to identify OpenCV DNN. See Also:. Constant Field Values. FRAMEWORK_PYTORCH; public static final String FRAMEWORK_PYTORCH; Default name to identify PyTorch. See Also:. Constant Field Values. FRAMEWORK_MXNET; public static final String FRAMEWORK_MXNET; Default name to identify MXNet. See Also:. Constant Field Values. Method Details. getFramework; public String getFramework(); Get the name of the deep learning framewor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:2481,hash,hashCode,2481,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,1,['hash'],['hashCode']
Security," Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowEndEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowStartEventHandler();  ; static EventHandler<MouseEvent>; createBrushEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createDoubleArrowEventHandler();  ; static EventHandler<MouseEvent>; createEllipseEventHandler();  ; static EventHandler<MouseEvent>; createLineEventHandler();  ; static EventHandler<MouseEvent>; createMoveEventHandler();  ; static EventHandler<MouseEvent>; createPointsEventHandler();  ; static EventHandler<MouseEvent>; createPolygonEventHandler();  ; static EventHandler<MouseEvent>; createPolylineEventHandler();  ; static EventHandler<MouseEvent>; createRectangleEventHandler();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathToolEventHandlers; public PathToolEventHandlers(). Method Details. createMoveEventHandler; public static EventHandler<MouseEvent> createMoveEventHandler(). createRectangleEventHandler; public static EventHandler<MouseEvent> createRectangleEventHandler(). createEllipseEventHandler; public static EventHandler<MouseEvent> createEllipseEventHandler(). createLineEventHandler; public static EventHandler<MouseEvent> createLineEventHandler(). createPolygonEventHandler; public static EventHandler<MouseEvent> createPolygonEventHandler(). createPolylineEventHandler; public static EventHandler<MouseEvent> createPolylineEventHandler(). createPointsEventHandler; public static EventHandler<MouseEvent> createPointsEventHandler(). createBrushEventHandler; public static EventHandler<MouseEvent> createBrushEventHandler(). createArrowStartEventHandler; public static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler createA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html:1630,hash,hashCode,1630,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html,1,['hash'],['hashCode']
Security," Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class UpdateUrisCommand<T extends UriResource>. java.lang.Object; qupath.lib.gui.commands.UpdateUrisCommand<T>. Type Parameters:; T - . public class UpdateUrisCommand<T extends UriResource>; extends Object; Fix broken URIs by using relative paths or prompting the user to select files.; This is intended to handle cases where files or projects have changed location, so that links need to be updated. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T extends UriResource>int; promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing). Show dialog prompting the user to update URIs for missing files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. promptToUpdateUris; public static <T extends UriResource> int promptToUpdateUris(Collection<T> items,; URI basePrevious,; URI baseCurrent,; boolean onlyPromptIfMissing); throws IOException; Show dialog prompting the user to update URIs for missing files.; Optionally provide previous and current base URIs. If not null, these will be used to relativize paths when searching for potential replacements URIs.; Usually, these correspond to the current and previous paths for a project. Type Parameters:; T - ; Parameters:; items - the items containing URIs to check; basePrevious - optional previous base path; baseCurrent - optional current base path; onlyPromptIfMissing - only show a dialog if any URIs correspond to missing files; Returns:; the number of changes made, or -1 if the user cancelled the dialog.; Throws:; IOException - if there was a problem accessing the URIs. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html:1179,hash,hashCode,1179,javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/UpdateUrisCommand.html,2,"['access', 'hash']","['accessing', 'hashCode']"
Security," a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static UriResource wrap(URI... uris); Wrap one or more URIs in a UriResource so they can be updated together.; Any changes can then be requred from the UriResource. Parameters:; uris - ; Returns:. wrap; public static UriResource wrap(Collection<URI> uris); Wrap one or more URIs in a UriResource so they can be updated together.; Note that the collection is not used directly. Any changes should be accessed from the ; UriResource. Parameters:; uris - ; Returns:. locateFile; public static URI locateFile(URI uri,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a URI to find an existing file using the specified search paths. Parameters:; uri - the URI to search for; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; a new URI corresponding to an existing file with the same name, ; or the original URI if no replacement was found or required; Throws:; IOException. locateFile; public static String locateFile(String path,; int searchDepth,; Path... searchPaths); throws IOException; Attempt to update a file using the specified search paths. Parameters:; path - the path to a file that may or may not exist; searchDepth - the depth of the search (i.e. how many subdirectories); searchPaths - the base directories to search, in order; Returns:; the path to a file with the same name as",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:5333,access,accessed,5333,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['access'],['accessed']
Security," a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXISTING; public static final PixelClassifierTools.CreateObjectOptions DELETE_EXISTING; Delete existing child objects. SPLIT; public static final PixelClassifierTools.CreateObjectOptions SPLIT; Split connected components. INCLUDE_IGNORED; public static final PixelClassifierTools.CreateObjectOptions INCLUDE_IGNORED; Generate objects for ignored classes (default is not to). SELECT_NEW; public static final PixelClassifierTools.CreateObjectOptions SELECT_NEW; Set the new objects to be selected. Method Details. values; public static PixelClassifierTools.CreateObjectOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PixelClassifierToo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1936,hash,hashCode,1936,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,1,['hash'],['hashCode']
Security," already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if ther",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2661,hash,hashCode,2661,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['hash'],['hashCode']
Security," at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in whic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:55046,validat,validation,55046,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['validat'],['validation']
Security," be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:16573,access,access,16573,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['access'],['access']
Security," be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion region). Specify the region (in terms of the full resolution image space) for export. SvgTools.SvgBuilder; showSelection(boolean doShow). Request whether selected objects are displayed. SvgTools.SvgBuilder; size(int width,; int height). Export image size. SvgTools.SvgBuilder; width(int width). Export image width. void; writeSVG(File file). Write the SVG image to a file, including any references images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will later be customized. Method Details. imageData; public SvgTools.SvgBuilder imageData(ImageData<BufferedImage> imageData); Specify the ImageData. This is required if the underlying raster image will be included in any export. Parameters:; imageData - ; Returns:; this builder. hierarchy; public SvgTools.SvgBuilder hierarchy(PathObjectHierarchy hierarchy); Specify the PathObjectHierarchy. This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; hierarchy - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(Collection<? extends PathObject> pathObjects); Specify a collection of objects to export.; This may be used instead of imageData(ImageData) if the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:3356,hash,hashCode,3356,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['hash'],['hashCode']
Security," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastChannelPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:1809,access,accessibleHelp,1809,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1662,access,accessibleHelp,1662,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security," bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance Methods",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1379,access,accessibleHelp,1379,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security," classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; GroovyCV. Category class for enhanced Groovy scripting with OpenCV. Interpolation. Methods to help with requesting interpolated values. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. NumpyTools. Read .npy and .npz files from NumPy. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. ProcessingCV. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html:2053,access,access,2053,javadoc/docs/qupath/opencv/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/package-summary.html,1,['access'],['access']
Security," compareTo(ImagePlane o). Compare with another ImagePlane, in the order t, z, c. boolean; equals(Object obj);  ; int; getC(). Get the channel index. static ImagePlane; getDefaultPlane(). Returns an ImagePlane with channel -1, z of 0 and t of 0. static ImagePlane; getPlane(int z,; int t). Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. static ImagePlane; getPlane(ImageRegion region). Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:2031,hash,hashCode,2031,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,1,['hash'],['hashCode']
Security," currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> imageData). Prompt to delete a row from a TMA grid. static void; promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Prompt to export summary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified image data. Parameters:; imageData - the image data for which the TMA data s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:2521,hash,hashCode,2521,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html,1,['hash'],['hashCode']
Security," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1041,hash,hashCode,1041,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,1,['hash'],['hashCode']
Security," for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:3921,hash,hashCode,3921,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['hash'],['hashCode']
Security," for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public static final ScriptStyler PLAIN; Plain styler (no highlighting). MARKDOWN; public static final ScriptStyler MARKDOWN; Styler for markdown. GROOVY; public static final ScriptStyler GROOVY; Styler for Groovy. JAVA; public static final ScriptStyler JAVA; Styler for Java. JSON; public static final ScriptStyler JSON; Styler for JSON. PROPERTIES; public static final ScriptStyler PROPERTIES; Styler for Java properties files. PYTHON; public static final ScriptStyler PYTHON; Styler for Python. XML; public static final ScriptStyler XML; Styler for XML. YAML; public static final ScriptStyler YAML; Styler for YAML. Constructor Details. ScriptStylerProvider; public ScriptStylerProvider(). Method Details. getStylerFromLanguage; public static ScriptStyler getStylerFromLanguage(ScriptLanguage language); Get the ScriptStyler object corresponding to the specified ScriptLanguage. ; If the language cannot be matched, PlainStyle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:1913,hash,hashCode,1913,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['hash'],['hashCode']
Security," getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object with the specified display name. Parameters:; name - . KaplanMeierData; public KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events); Create a new KaplanMeierData object with the specified display name and events. Parameters:; name - ; events - . Method Details. addEvents; public KaplanMeierData addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events); Add a collection of events. Parameters:; events - ; Returns:. addEvent; public KaplanMeierData addEvent(double time,; boolean censored); Insert a new event. Parameters:; time - the time of the event (units are not specified, but should be consistent for all events added); censored - if true the event is censored, if false the event is observed.; Returns:. getName; public String getName(); Get the name of this data, generally used for display. Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:2417,hash,hashCode,2417,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,1,['hash'],['hashCode']
Security," if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user to select a legacy project file, and then import the images into ; the current project. static void; showProjectMetadataEditor(Project<?> project). Show the metadata editor for the specified project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectCommands; public ProjectCommands(). Method Details. promptToCheckURIs; public static boolean promptToCheckURIs(Project<?> project,; boolean onlyIfMissing); throws IOException; Check the URIs within a project, prompting the user to correct any broken links if required. Parameters:; project - the project containing URIs to check; onlyIfMissing - if true, only display a prompt if some links are broken; Returns:; true if the dialog was shown and closed successfully, false if it was cancelled; Throws:; IOException. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. Parameters:; qupath - the QuPath instance; defaultPaths - image paths to include when the dialog is shown (useful when the dialog is shown",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:2283,hash,hashCode,2283,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,1,['hash'],['hashCode']
Security," int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMaps(ColorMaps.ColorMap... colorMaps). Install colormaps. static void; setDefaultColorMap(ColorMaps.ColorMap colorMap). Set the default ColorMaps.ColorMap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorMaps; public ColorMaps(). Method Details. installColorMaps; public static boolean installColorMaps(Path... paths); Install colormaps from the specified paths. Parameters:; paths - optional paths containing either .tsv files containing colormaps, or directories that contain such .tsv files.; Returns:; true if changes were made, false otherwise. installColorMaps; public static boolean installColorMaps(ColorMaps.ColorMap... colorMaps); Install colormaps. Parameters:; colorMaps - one or more colormaps.; Returns:; true if changes were made, false otherwise. getColors; public static int[] getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert); Get an array of packed RGB values for a specific colormap. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of the colors; Returns:; an int array of length nValues. getDefaultColorMap;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:2317,hash,hashCode,2317,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['hash'],['hashCode']
Security," java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the number of vertices used to represent this area. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; Se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:4309,hash,hashCode,4309,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['hash'],['hashCode']
Security," java.lang.Object; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server should correspond (must be found within getRegions()); downsample - specified downsample for the server (must be found within getDownsamples()); Returns:; Throws:; IOException. close; public void close(); throws Exception. Specified by:; close i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html:1435,hash,hashCode,1435,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,1,['hash'],['hashCode']
Security," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3589,hash,hashCode,3589,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['hash'],['hashCode']
Security," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:3770,hash,hashCode,3770,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['hash'],['hashCode']
Security," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3519,hash,hashCode,3519,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['hash'],['hashCode']
Security," made.. void; setColor(int red,; int green,; int blue). Set the display color as 8-bit RGB values. void; setColor(Integer color). Set the display color as a packed (A)RGB integer (alpha may not be used ; by viewing code). void; setColorRGB(Integer color). Deprecated.; since v0.4.0, use setColor(Integer) instead. void; setID(UUID id). Set the ID for this object. void; setLocked(boolean locked). Set locked status, if possible. void; setName(String name). Set the stored object name. void; setPathClass(PathClass pc). Set the classification of the object, without specifying any classification probability. abstract void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. protected Object; storeMetadataValue(String key,; String value). Store a metadata value. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathObject; public PathObject(MeasurementList measurements); Create a PathObject with a specific measurement list.; ; This can be used e.g. to create an object with a more memory-efficient list,; at the cost of generality/mutability. Parameters:; measurements - . PathObject; public PathObject(); Default constructor. Used for Externalizable support, not intended to be used by other consumers. Method Details. getParent; public PathObject getParent(); Request the parent object. Each PathObject may have only one parent. Returns:. setLocked; public void setLocked(boolean locked); Set locked status, if possible.; ; Subclasses should override this method to support locking or unlocking.; Default implementation throws an UnsupportedOperationException if an ; attempt is made to unlock the object. Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status.; ; Subclasses should override this method to supp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:6925,hash,hashCode,6925,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['hash'],['hashCode']
Security," multiply(Mat m1,; Mat m2). Per-element multiplication of two arrays (not matrix multiplication). static Mat; negative(Mat m1). Multiply elements of an array by -1. static Mat; or(Mat m1,; Mat m2). Compute the bitwise OR of two arrays. static Mat; plus(Mat m1,; Number s). Add an array and a number. static Mat; plus(Mat m1,; Mat m2). Add two arrays. static Mat; plus(Mat m1,; Scalar s). Add an array and a scalar. static Mat; power(Mat m1,; double power). Raise elements of an array to a specified power. static long[]; shape(Mat mat). Get the shape of a multidimensional Mat. static List<Mat>; splitChannels(Mat mat). Split channels of an array. static double; std(Mat mat). Calculate the standard deviation of all elements in a Mat, ignoring NaNs. static double; sum(Mat mat). Calculate the sum of all elements in a Mat, ignoring NaNs. static Mat; xor(Mat m1,; Mat m2). Compute the bitwise XOR of two arrays. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyCV; public GroovyCV(). Method Details. mean; public static double mean(Mat mat); Calculate the mean of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. sum; public static double sum(Mat mat); Calculate the sum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. std; public static double std(Mat mat); Calculate the standard deviation of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. max; public static double max(Mat mat); Find the maximum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. min; public static double min(Mat mat); Find the minimum of all elements in a Mat, ignoring NaNs. Parameters:; mat - ; Returns:. flatten; public static Mat flatten(Mat mat); Flatten a Mat to give a single column. Parameters:; mat - ; Returns:. shape; public static long[] shape(Mat mat); Get the shape of a multidimensional Mat. Parameters:; mat -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html:5080,hash,hashCode,5080,javadoc/docs/qupath/opencv/tools/GroovyCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/GroovyCV.html,1,['hash'],['hashCode']
Security," objects, it's desirable to make updating the classification an atomic ; operation, applied to all objects in one go. Consequently, it the classifier is aborted early ; (e.g. the thread interrupted), then the objects are not partially reclassified. Constructor Summary; Constructors. Constructor; Description; Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass). Helper class to store an object prior to reclassifying it. Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability). Helper class to store an object prior to reclassifying it, including a classification probability. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; apply(). Apply the stored classification. PathObject; getPathObject(). Get the stored PathObject for which the PathClass may be set. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass); Helper class to store an object prior to reclassifying it. Parameters:; pathObject - ; pathClass - ; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this and only update the base class. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability); Helper class to store an object prior to reclassifying it, including a classification probability. Parameters:; pathObject - an object whose classification may be set by a subsequent call to apply(); pathClass - the classification that may be applied to pathObject; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optional",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html:1559,hash,hashCode,1559,javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,1,['hash'],['hashCode']
Security," repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2374,hash,hashCode,2374,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['hash'],['hashCode']
Security," repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2763,hash,hashCode,2763,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['hash'],['hashCode']
Security," repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2454,hash,hashCode,2454,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['hash'],['hashCode']
Security," results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. PixelClassifierMetadata. Metadata to control the behavior of a pixel classifier. PixelClassifierMetadata.Builder. Builder to create PixelClassifierMetadata objects. PixelClassifierPane. Main user interface for interactively training a PixelClassifier. PixelClassifiers. Static methods and classes for working with pixel classifiers. PixelClassifierTools. Helper methods for working with pixel classification. PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. PixelClassifierTraining. Helper class for training a pixel classifier. PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. PixelClassifierUI. Helper class for generating standardized UI components for pixel classification. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. PixelType. Image bit-depths and types. PlainLanguage. Class for the representation of plain text in QuPath. PlainStyler. Styling for plain text (which really means no styling). PngWriter. ImageWriter implementation to write PNG images using ImageIO. Point. Simple interface defining a point. Point2. A 2D point (x & y coordinates). PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. PointsROI. ROI representing a collection of 2D points (distinct x,y coordinates). PolygonROI. ROI representing an arbitrary closed polygon. PolylineROI. ROI representing an arbitrary open polyline. PositiveCellDetection. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:43661,access,access,43661,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security," root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty(); Property representing the current requested root log level. Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2222,hash,hashCode,2222,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['hash'],['hashCode']
Security," should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. Parameters:; pathObject - ; addToSelection - add to the existing selection, rather than allowing only the specified object to be selected; See Also:. setSelectedObject(PathObject). deselectObject; public void deselectObject(PathObject pathObject); Ensure that the specified object is removed from the selection. Parameters:; pathObject - . deselectObjects; public void deselectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are deselected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . selectObjects; public void selectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are selected.; ; The",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:3433,access,accessible,3433,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['access'],['accessible']
Security," static List<PathObject>; readObjectsFromGeoJSON(InputStream stream). Read a list of PathObject from an input stream. static String; readSerializedServerPath(File file). Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. static void; setRequestedDataFileVersion(int version). Set the requested version for .qpdata files. static Set<String>; unzippedExtensions(Path path,; String... zipExtensions). Get the extension of a file, or of all entries within a zip file. static void; writeImageData(File file,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. static void; writeImageData(OutputStream stream,; ImageData<?> imageData). Serialize an ImageData object to an output stream. static void; writeImageData(Path path,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRequestedDataFileVersion; public static int getRequestedDataFileVersion(); Get the requested version for .qpdata files. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). getCurrentDataFileVersion; public static int getCurrentDataFileVersion(); Get the current preferred data file version. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). setRequestedDataFileVersion; public static void setRequestedDataFileVersion(int version); throws IllegalArgumentException; Set the requested version for .qpdata files.; ; ; 1.0 Initial version stored in very early .qpdata files (no longer supported); 2 Switched versions to use integers, added Locale information (used in QuPath v0.1.2); 3 Switched ImageServer paths to be a JSON representation rather than a single path/URL; 4 Added support for UUID to be stored in each PathObject (introducted QuPath v0.4.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:4435,hash,hashCode,4435,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['hash'],['hashCode']
Security," static class ; FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. Constructor Summary; Constructors. Constructor; Description; FeaturePreprocessor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; apply(Mat mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise, treat each column as a feature. apply; public void apply(Mat mat); Apply preprocessing in-place.; If the Mat has multiple channels, each channel is treated as a feature.; Otherwise, each row is treated as a feature. Parameters:; mat - . doesFeatureTransform; public boolean doesFeatureTransform(); Returns true if this preprocessor transforms the features beyond a simple normalization.; In practice, for the current implementation this means PCA. Returns:. doesSomething; public boolean doesSomething(); Returns true if this preprocessor has any effect. Returns:. getInputLength; public int getInputLength(); Get the number of features required of the input. Returns:. getOutputLength; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html:1694,hash,hashCode,1694,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,1,['hash'],['hashCode']
Security," static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public static final SvgTools.SvgBuilder.ImageIncludeType EMBED; Embed the image (as Base64-encoded PNG). LINK; public static final SvgTools.SvgBuilder.ImageIncludeType LINK; Link the image (to a separate PNG). Method Details. values; public static SvgTools.SvgBuilder.ImageIncludeType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SvgTools.SvgBuilder.ImageIncludeType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1774,hash,hashCode,1774,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,1,['hash'],['hashCode']
Security," that takes care of this language's auto-completion. protected ScriptAutoCompletor; getDefaultAutoCompletor(String languageName). Default method to get a suitable auto completor for the given language name. protected String; getDefaultScriptName();  ; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. String; getImportStatements(Collection<Class<?>> classes). Get the import statements as a String, to add at the beginning of the executed script. String; getStaticImportStatements(Collection<Class<?>> classes). Get the static import statements as a String, to add at the beginning of the executed script. protected String; tryToInterpretMessage(Throwable cause,; int line,; boolean defaultImportsAvailable);  . Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. JAVA_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator JAVA_IMPORTER; Java-like import statements. PYTHON_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator PYTHON_IMPORTER; Pythonic import statements. Constructor Details. DefaultScriptLanguage; public DefaultScriptLanguage(ScriptEngineFactory factory); Constructor for a ExecutableLanguage based on a ScriptEngineFactory.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; factory - . DefaultScriptLanguage; public DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor); Constructor for a ExecutableLanguage.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; name - the language name; exts - the possible extensions for this language; completor - the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html:3072,hash,hashCode,3072,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,1,['hash'],['hashCode']
Security," the ID from an existing object, ; such as whenever the ROI of an object is being transformed and the original object deleted.; ; For that reason, it is possible (although discouraged) to set an ID explicitly. Parameters:; id - the ID to use; Throws:; IllegalArgumentException - if the specified ID is null. refreshID; public void refreshID(); Regenerate a new random ID. See Also:. setID(UUID). storeMetadataValue; protected Object storeMetadataValue(String key,; String value); Store a metadata value.; ; Note: This should be used with caution; for objects that could be plentiful (e.g. detections) it is likely; to be unwise to store any metadata values, since these can't be stored particularly efficiently - and; therefore this could lead to far too high memory requirements.; ; If metadata is never stored for an object, no storage object is created - only a null reference.; ; Therefore the intention is that some newly-defined PathObject classes may take advantage of this mechanism and expose their; own API for getting/setting values, backed-up by this store (which takes care of serialization/deserialization).; However class definitions can also avoid making any use of this whatsoever if it's expected that it could lead to too much ; memory being required. Parameters:; key - ; value - ; Returns:; See Also:. retrieveMetadataValue(java.lang.String). retrieveMetadataValue; protected Object retrieveMetadataValue(String key); Get a metadata value. Parameters:; key - ; Returns:; the metadata value if set, or null if not; See Also:. storeMetadataValue(java.lang.String, java.lang.String). retrieveMetadataKeys; protected Set<String> retrieveMetadataKeys(); Get the set of metadata keys. Returns:. getUnmodifiableMetadataMap; protected Map<String,String> getUnmodifiableMetadataMap(); Get an unmodifiable map of the metadata. Returns:. clearMetadataMap; protected void clearMetadataMap(); Remove all stored metadata values. getMetadata; public Map<String,String> getMetadata(); Get a key/v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:21592,expose,expose,21592,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['expose'],['expose']
Security," the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog showing a filtered list of recently-used commands, for fast selection. static String; menusToMarkdown(). Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. static void; menusToMarkdown(QuPathGUI qupath,; Writer writer). Write a markdown representation of the menus for inclusion in the documentation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. commandBarDisplay; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty; Property specifying where the command bar should be displayed relative to the main viewer window. See Also:. commandBarDisplayProperty(). Constructor Details. CommandFinderTools; public CommandFinderTools(). Method Details. commandBarDisplayProperty; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty(); Property specifying where the command bar should be displayed relative to the main viewer window. Returns:. createCommandFinderPane; public static org.controlsfx.control.HiddenSidesPane createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode); Create a component that contains a TextField for entering menu commands to run quickly.; ; This component is a container that holds a main Node, and displays the Te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:2448,hash,hashCode,2448,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,1,['hash'],['hashCode']
Security," the home launch directory.; ; If successful, -Xmx will be set to the value that is specified or 512M, whichever is larger. See Also:. maxMemoryMBProperty(). scrollSpeed; public static IntegerProperty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navigation key. See Also:. navigationAccelerationProperty(). skipMissingCores; public static BooleanProperty skipMissingCoresProperty; Skip ('jump over') missing cores when navigating through TMA grids. See Also:. skipMissingCoresProperty(). scriptsPath; public static StringProperty scriptsPathProperty; Path to a directory containing scripts for quick-access through the user interface. See Also:. scriptsPathProperty(). useTileBrush; public static BooleanProperty useTileBrushProperty; Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. See Also:. useTileBrushProperty(). selectionMode; public static BooleanProperty selectionModeProperty; Convert drawing tools to select objects, rather than creating new objects. See Also:. selectionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOpt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:27769,access,access,27769,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['access']
Security," the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should blo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:2177,hash,hashCode,2177,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['hash'],['hashCode']
Security," the specified ImageData. DensityMaps.DensityMapParameters; buildParameters(). Build a DensityMaps.DensityMapParameters object containing the main density map parameters. ImageServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData). Build an ImageServer representing this density map. DensityMaps.DensityMapBuilder; colorModel(ColorModels.ColorModelBuilder colorModelBuilder). Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData). DensityMaps.DensityMapBuilder; pixelSize(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public DensityMaps.DensityMapBuilder addDensities(String name,; PathObjectPredica",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:2075,hash,hashCode,2075,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,1,['hash'],['hashCode']
Security," to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:6004,hash,hashCode,6004,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['hash'],['hashCode']
Security,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html:1850,hash,hashCode,1850,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,1,['hash'],['hashCode']
Security,"(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:1876,hash,hashCode,1876,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['hash'],['hashCode']
Security,"(URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(ImageServerBuilder<BufferedImage> builder,; URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. static TypeAdapterFactory; getServerBuilderFactory(). Get a TypeAdapterFactory to handle ServerBuilders. static ImageServer<BufferedImage>; pyramidalize(ImageServer<BufferedImage> server,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid. static ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> py",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:2612,hash,hashCode,2612,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['hash'],['hashCode']
Security,"). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:2189,hash,hashCode,2189,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['hash'],['hashCode']
Security,"). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Urls; public Urls(). Method Details. getDocsUrl; public static final String getDocsUrl(); Get the base URL for the QuPath documentation (independent of version). Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(); Get the base URL for the QuPath documentation, specifically for this software version. Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(String relative); Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). Parameters:; relative - ; Returns:. getCitationUrl; public static final String getCitationUrl(); Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. Returns:. getInstallationUrl; public static final String getInstallationUrl(); Get a URL pointing to a page that explains how to install this version of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:1951,hash,hashCode,1951,javadoc/docs/qupath/lib/gui/Urls.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html,1,['hash'],['hashCode']
Security,"). Get the first x co-ordinate (start of the line). double; getX2(). Get the second x co-ordinate (end of the line). double; getY1(). Get the first y co-ordinate (start of the line). double; getY2(). Get the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:3673,hash,hashCode,3673,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['hash'],['hashCode']
Security,"). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class ProjectClassifierBindings. java.lang.Object; qupath.process.gui.commands.ml.ProjectClassifierBindings. public class ProjectClassifierBindings; extends Object; Class to help with formatting text fields for entering pixel and object classifier names. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ProjectClassifierBindings();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use object classifier names for the current project. static void; bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project). Set styling for a text field to use pixel classifier names for the current project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectClassifierBindings; public ProjectClassifierBindings(). Method Details. bindPixelClassifierNameInput; public static void bindPixelClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use pixel classifier names for the current project. Parameters:; textField - ; project - . bindObjectClassifierNameInput; public static void bindObjectClassifierNameInput(TextField textField,; ObjectExpression<Project<BufferedImage>> project); Set styling for a text field to use object classifier names for the current project. Parameters:; textField - ; project - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html:1333,hash,hashCode,1333,javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/ProjectClassifierBindings.html,1,['hash'],['hashCode']
Security,); Get the RegionRequest that this tile represents. Returns:. getDownsample; public double getDownsample(); Get the downsample value for this tile. Returns:. getLevel; public int getLevel(); Get the resolution level. Returns:. getImageX; public int getImageX(); Get the x-coordinate of the bounding box for this tile in the full resolution image. Returns:. getImageY; public int getImageY(); Get the y-coordinate of the bounding box for this tile in the full resolution image. Returns:. getImageWidth; public int getImageWidth(); Get the width of the bounding box for this tile in the full resolution image. Returns:. getImageHeight; public int getImageHeight(); Get the height of the bounding box for this tile in the full resolution image. Returns:. getTileX; public int getTileX(); Get the x-coordinate of the bounding box for this tile at the tile resolution. Returns:. getTileY; public int getTileY(); Get the y-coordinate of the bounding box for this tile at the tile resolution. Returns:. getTileWidth; public int getTileWidth(); Get the width of the bounding box for this tile at the tile resolution. Returns:. getTileHeight; public int getTileHeight(); Get the height of the bounding box for this tile at the tile resolution. Returns:. getZ; public int getZ(); Get the z-slice index for this request. Returns:. getT; public int getT(); Get the time point index for this request. Returns:. getImagePlane; public ImagePlane getImagePlane(); Get the ImagePlane for this request. Returns:; Since:; v0.4.0 (replaces getPlane() for better consistency with other classes). getPlane; @Deprecated; public ImagePlane getPlane(); Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). Get the ImagePlane for this request. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:6242,hash,hashCode,6242,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,3,['hash'],['hashCode']
Security,", ignoring internal rings. static Geometry; removeInteriorRings(Geometry geometry,; double minRingArea). Fill all interior rings for the specified geometry that have an area < a specified threshold. static Geometry; roiToGeometry(ROI roi). Convert to QuPath ROI to a JTS Geometry. static Geometry; roundCoordinates(Geometry geometry). Round coordinates in a Geometry to integer values. static Geometry; shapeToGeometry(Shape shape). Convert a java.awt.Shape to a JTS Geometry. static List<Geometry>; splitGeometryByLineStrings(Geometry polygon,; Collection<? extends Geometry> splitLines). Split an input polygonal geometry using a collection of split lines. static Geometry; tryToFixPolygon(Polygon polygon). Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. static Geometry; union(Collection<? extends Geometry> geometries). Calculate the union of multiple Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GeometryTools; public GeometryTools(). Method Details. getDefaultFactory; public static GeometryFactory getDefaultFactory(); Get the default GeometryFactory to construct Geometries within QuPath. Returns:. parseTransformMatrix; public static AffineTransformation parseTransformMatrix(String text); throws ParseException; Parse the matrix (String) to create and return an AffineTransformation. ; ; The order of the matrix elements should be the following:. m00 m01 m02; m10 m11 m12. Parameters:; text - ; Returns:; affineTransformation; Throws:; ParseException. convertTransform; public static AffineTransform convertTransform(AffineTransformation transform); Convert an AffineTransformation to an AffineTransform. Parameters:; transform - ; Returns:. convertTransform; public static AffineTransformation convertTransform(AffineTransform transform); Convert an AffineTransform to an AffineTransformation. Parameters:; transform - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:4039,hash,hashCode,4039,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['hash'],['hashCode']
Security,", legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2666,access,accessibleHelp,2666,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,",; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty). See Also:. getActiveViewer(); setActi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:4654,hash,hashCode,4654,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['hash'],['hashCode']
Security,",; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2384,hash,hashCode,2384,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['hash'],['hashCode']
Security,",; double y). Point constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(double x,; double y). Calculate the distance between this point and a specified x and y location. double; distance(Point p). Calculate the distance to another point, with the same Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:1697,hash,hashCode,1697,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,1,['hash'],['hashCode']
Security,",PathClass> labels). Specify classification labels. PixelClassifierMetadata.Builder; inputPadding(int inputPadding). Amount of padding requested for the left, right, top and bottom of the image tile being classified. PixelClassifierMetadata.Builder; inputResolution(PixelCalibration inputResolution). Pixel size defining the resolution at which the classifier should operate. PixelClassifierMetadata.Builder; inputShape(int width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadata.Builder inputShape(int width,; int height); Preferred input image widt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html:1979,hash,hashCode,1979,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,1,['hash'],['hashCode']
Security,". AnalyzeMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AnalyzeMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AnalyzeMenuActions. All Implemented Interfaces:; MenuActions. public class AnalyzeMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AnalyzeMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html:1035,hash,hashCode,1035,javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AnalyzeMenuActions.html,1,['hash'],['hashCode']
Security,". AutomateActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class AutomateActions. java.lang.Object; qupath.lib.gui.actions.AutomateActions. public class AutomateActions; extends Object; Default actions associated with QuPath's 'Automate' (scripting) menu. Since:; v0.5.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  . Constructor Summary; Constructors. Constructor; Description; AutomateActions(QuPathGUI qupath);  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; @ActionAccelerator(""shortcut+[""); @ActionConfig(""Action.Automate.scriptEditor""); @ActionIcon(SCRIPT_EDITOR); public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; @ActionConfig(""Action.Automate.scriptInterpreter""); public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. HISTORY_SHOW; @ActionAccelerator(""shortcut+shift+w""); @ActionConfig(""Action.Automate.commandWorkflow""); public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; @ActionConfig(""Action.Automate.commandScript""); public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. AutomateActions; public AutomateActions(QuPathGUI qupath). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html:1111,hash,hashCode,1111,javadoc/docs/qupath/lib/gui/actions/AutomateActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/AutomateActions.html,1,['hash'],['hashCode']
Security,". AutomateMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions. All Implemented Interfaces:; MenuActions. public class AutomateMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; AutomateMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html:1040,hash,hashCode,1040,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.html,1,['hash'],['hashCode']
Security,". AutomateMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class AutomateMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.AutomateMenuActions.Actions. Enclosing class:; AutomateMenuActions. @ActionMenu(""Menu.Automate""); public class AutomateMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; HISTORY_SCRIPT;  ; final org.controlsfx.control.action.Action; HISTORY_SHOW;  ; final org.controlsfx.control.action.Action; SCRIPT_EDITOR;  ; final org.controlsfx.control.action.Action; SCRIPT_INTERPRETER;  ; final org.controlsfx.control.action.Action; SEP_0;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SCRIPT_EDITOR; public final org.controlsfx.control.action.Action SCRIPT_EDITOR. SCRIPT_INTERPRETER; public final org.controlsfx.control.action.Action SCRIPT_INTERPRETER. SEP_0; public final org.controlsfx.control.action.Action SEP_0. HISTORY_SHOW; public final org.controlsfx.control.action.Action HISTORY_SHOW. HISTORY_SCRIPT; public final org.controlsfx.control.action.Action HISTORY_SCRIPT. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.Actions.html:1160,hash,hashCode,1160,javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/AutomateMenuActions.Actions.html,1,['hash'],['hashCode']
Security,". BioFormatsOptionsExtension.OmeTiffWriterAction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.OmeTiffWriterAction. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.OmeTiffWriterAction. Enclosing class:; BioFormatsOptionsExtension. public static class BioFormatsOptionsExtension.OmeTiffWriterAction; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionWriter;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionWriter; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.BioFormats.exportOmeTif""); public final org.controlsfx.control.action.Action actionWriter. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.OmeTiffWriterAction.html:915,hash,hashCode,915,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.OmeTiffWriterAction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.OmeTiffWriterAction.html,1,['hash'],['hashCode']
Security,". BrightnessContrastCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class BrightnessContrastCommand. java.lang.Object; qupath.lib.gui.commands.BrightnessContrastCommand. All Implemented Interfaces:; Runnable. public class BrightnessContrastCommand; extends Object; implements Runnable; Command to show a Brightness/Contrast dialog to adjust the image display. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression; infoMessage(). Get a string expression to draw attention to any warnings associated with the current display settings. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrightnessContrastCommand; public BrightnessContrastCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. infoMessage; public ObjectExpression infoMessage(); Get a string expression to draw attention to any warnings associated with the current display settings.; This can be used to notify the user that something is amiss, even if the dialog is not open. Returns:; a string expression that evaluates to the warning text, or null if there are no warnings. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html:1120,hash,hashCode,1120,javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/BrightnessContrastCommand.html,1,['hash'],['hashCode']
Security,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html:1098,hash,hashCode,1098,javadoc/docs/qupath/lib/gui/BuildInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html,1,['hash'],['hashCode']
Security,". Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3763,hash,hashCode,3763,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['hash'],['hashCode']
Security,". CellIntensityClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CellIntensityClassificationCommand. java.lang.Object; qupath.process.gui.commands.CellIntensityClassificationCommand. All Implemented Interfaces:; Runnable. public class CellIntensityClassificationCommand; extends Object; implements Runnable; Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CellIntensityClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellIntensityClassificationCommand; public CellIntensityClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html:1116,hash,hashCode,1116,javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CellIntensityClassificationCommand.html,1,['hash'],['hashCode']
Security,". ChannelColor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ChannelColor. java.lang.Object; qupath.lib.display.settings.ChannelColor. public class ChannelColor; extends Object; A simple class to store the color of an image channel. Constructor Summary; Constructors. Constructor; Description; ChannelColor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelColor; fromPackedARGB(int argb). Create a channel color from a packed ARGB value. static ChannelColor; fromRGB(int red,; int green,; int blue). Create a channel color from 8-bit RGB values. int; getBlue(). Get the blue value. int; getGreen(). Get the green value. int; getRed(). Get the red value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelColor; public ChannelColor(). Method Details. fromRGB; public static ChannelColor fromRGB(int red,; int green,; int blue); throws IllegalArgumentException; Create a channel color from 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Returns:; Throws:; IllegalArgumentException - if any of the values are outside the range 0 to 255. fromPackedARGB; public static ChannelColor fromPackedARGB(int argb); Create a channel color from a packed ARGB value.; The alpha will be ignored. Parameters:; argb - ; Returns:. getRed; public int getRed(); Get the red value. Returns:. getGreen; public int getGreen(); Get the green value. Returns:. getBlue; public int getBlue(); Get the blue value. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html:1131,hash,hashCode,1131,javadoc/docs/qupath/lib/display/settings/ChannelColor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelColor.html,1,['hash'],['hashCode']
Security,". ClassifyMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions. All Implemented Interfaces:; MenuActions. public class ClassifyMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ClassifyMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html:1040,hash,hashCode,1040,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.html,1,['hash'],['hashCode']
Security,". ClassifyMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ClassifyMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions. Enclosing class:; ClassifyMenuActions. @ActionMenu(""Menu.Classify""); public class ClassifyMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_DETECTION_CLASSIFICATIONS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SEP_1; @ActionMenu(""Menu.Classify.ObjectClassification""); public final org.controlsfx.control.action.Action SEP_1. RESET_DETECTION_CLASSIFICATIONS; @ActionMenu(""Menu.Classify.ObjectClassification""); @ActionConfig(""Action.Classify.Objects.resetDetectionClassifications""); public final org.controlsfx.control.action.Action RESET_DETECTION_CLASSIFICATIONS. SEP_3; @ActionMenu(""Menu.Classify.PixelClassification""); public final org.controlsfx.control.action.Action SEP_3. SEP_4; public final org.controlsfx.control.action.Action SEP_4. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.Actions.html:1095,hash,hashCode,1095,javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ClassifyMenuActions.Actions.html,1,['hash'],['hashCode']
Security,". ColorDeconvMatrix3x3 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorDeconvMatrix3x3. java.lang.Object; qupath.lib.color.ColorDeconvMatrix3x3. public class ColorDeconvMatrix3x3; extends Object; Simple class for representing - and inverting a 3x3 matrix. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ColorDeconvMatrix3x3(double[][] M). Constructor for a 3x3 matrix. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; determinant(). Calculate the determinant of the matrix. double[][]; inverse(). Calculate the 3x3 matrix inverse. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ColorDeconvMatrix3x3; public ColorDeconvMatrix3x3(double[][] M); throws IllegalArgumentException; Constructor for a 3x3 matrix. Parameters:; M - ; Throws:; IllegalArgumentException - if the matrix is not 3x3. Method Details. determinant; public double determinant(); Calculate the determinant of the matrix. Returns:. inverse; public double[][] inverse(); Calculate the 3x3 matrix inverse. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvMatrix3x3.html:1035,hash,hashCode,1035,javadoc/docs/qupath/lib/color/ColorDeconvMatrix3x3.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvMatrix3x3.html,1,['hash'],['hashCode']
Security,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html:862,hash,hashCode,862,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,1,['hash'],['hashCode']
Security,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.color.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html:838,hash,hashCode,838,javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.DisplayBand.html,1,['hash'],['hashCode']
Security,". ColorTransforms.ColorTransformTypeAdapter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ColorTransforms.ColorTransformTypeAdapter. java.lang.Object; com.google.gson.TypeAdapter<ColorTransforms.ColorTransform>; qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter. Enclosing class:; ColorTransforms. public static class ColorTransforms.ColorTransformTypeAdapter; extends TypeAdapter<ColorTransforms.ColorTransform>; TypeAdapter to support serializing a ColorTransforms.ColorTransform. Constructor Summary; Constructors. Constructor; Description; ColorTransformTypeAdapter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ColorTransforms.ColorTransform; read(JsonReader in);  ; void; write(JsonWriter out,; ColorTransforms.ColorTransform value);  . Methods inherited from class com.google.gson.TypeAdapter; fromJson, fromJson, fromJsonTree, nullSafe, toJson, toJson, toJsonTree. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformTypeAdapter; public ColorTransformTypeAdapter(). Method Details. write; public void write(JsonWriter out,; ColorTransforms.ColorTransform value); throws IOException. Specified by:; write in class TypeAdapter<ColorTransforms.ColorTransform>; Throws:; IOException. read; public ColorTransforms.ColorTransform read(JsonReader in); throws IOException. Specified by:; read in class TypeAdapter<ColorTransforms.ColorTransform>; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransformTypeAdapter.html:1341,hash,hashCode,1341,javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransformTypeAdapter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.ColorTransformTypeAdapter.html,1,['hash'],['hashCode']
Security,". CommandFinderTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog show",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:551,access,access,551,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,1,['access'],['access']
Security,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:1112,hash,hashCode,1112,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,1,['hash'],['hashCode']
Security,". ConvertCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class ConvertCommand. java.lang.Object; qupath.lib.images.writers.ome.ConvertCommand. All Implemented Interfaces:; Runnable, Subcommand. public class ConvertCommand; extends Object; implements Runnable, Subcommand; Allows command line option to convert an input image to OME-TIFF. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ConvertCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvertCommand; public ConvertCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html:955,hash,hashCode,955,javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/ConvertCommand.html,1,['hash'],['hashCode']
Security,". ConvexHull (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ConvexHull. java.lang.Object; qupath.lib.roi.ConvexHull. public class ConvexHull; extends Object; Helper method for calculating the convex hull from a list of points. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ConvexHull();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<Point2>; getConvexHull(List<Point2> points). TODO: Consider a more efficient convex hull calculation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ConvexHull; public ConvexHull(). Method Details. getConvexHull; public static List<Point2> getConvexHull(List<Point2> points); TODO: Consider a more efficient convex hull calculation.; ; For implementation details, see; ; http://en.wikipedia.org/wiki/Gift_wrapping_algorithm; http://en.wikipedia.org/wiki/Graham_scan. Parameters:; points - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ConvexHull.html:919,hash,hashCode,919,javadoc/docs/qupath/lib/roi/ConvexHull.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ConvexHull.html,1,['hash'],['hashCode']
Security,". CountingDialogCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class CountingDialogCommand. java.lang.Object; qupath.lib.gui.commands.CountingDialogCommand. All Implemented Interfaces:; Runnable, ChangeListener<ImageData<BufferedImage>>. public class CountingDialogCommand; extends Object; implements Runnable, ChangeListener<ImageData<BufferedImage>>; Command to open up a counting panel to aid with creating Point annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CountingDialogCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CountingDialogCommand; public CountingDialogCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> manager,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html:1232,hash,hashCode,1232,javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/CountingDialogCommand.html,1,['hash'],['hashCode']
Security,". CreateChannelTrainingImagesCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateChannelTrainingImagesCommand. java.lang.Object; qupath.process.gui.commands.CreateChannelTrainingImagesCommand. All Implemented Interfaces:; Runnable. public class CreateChannelTrainingImagesCommand; extends Object; implements Runnable; Command to create training images based upon channel names, and add these to a project.; ; The purpose of this is to help with training multiple separate classifiers for multiplexed images.; Normally, this command should be run after running other commands (e.g. cell detection). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateChannelTrainingImagesCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateChannelTrainingImagesCommand; public CreateChannelTrainingImagesCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html:1266,hash,hashCode,1266,javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateChannelTrainingImagesCommand.html,1,['hash'],['hashCode']
Security,". CreateCompositeClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateCompositeClassifierCommand. java.lang.Object; qupath.process.gui.commands.CreateCompositeClassifierCommand. All Implemented Interfaces:; Runnable. public class CreateCompositeClassifierCommand; extends Object; implements Runnable; Command to create a composite classifier by merging together two or more other classifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateCompositeClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateCompositeClassifierCommand; public CreateCompositeClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html:1068,hash,hashCode,1068,javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateCompositeClassifierCommand.html,1,['hash'],['hashCode']
Security,". CreateRegionAnnotationsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateRegionAnnotationsCommand. java.lang.Object; qupath.process.gui.commands.CreateRegionAnnotationsCommand. All Implemented Interfaces:; Runnable. public class CreateRegionAnnotationsCommand; extends Object; implements Runnable; Command to help create annotations defining regions that will be further annotated for ; algorithm training. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateRegionAnnotationsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateRegionAnnotationsCommand; public CreateRegionAnnotationsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html:1075,hash,hashCode,1075,javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateRegionAnnotationsCommand.html,1,['hash'],['hashCode']
Security,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:1222,hash,hashCode,1222,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,1,['hash'],['hashCode']
Security,". DefaultROIComparator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class DefaultROIComparator. java.lang.Object; qupath.lib.roi.DefaultROIComparator. All Implemented Interfaces:; Comparator<ROI>. public class DefaultROIComparator; extends Object; implements Comparator<ROI>; Default comparator to enable ROIs to be sorted in a more predictable manner.; ; The aim is to help sorted lists to sort first on ROI location (time, z, channel, y coordinate, then x); and afterwards on ROI type. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultROIComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(ROI o1,; ROI o2);  ; static Comparator<ROI>; getInstance(). Get a static instance of this comparator, to avoid needing to construct it. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultROIComparator; public DefaultROIComparator(). Method Details. compare; public int compare(ROI o1,; ROI o2). Specified by:; compare in interface Comparator<ROI>. getInstance; public static Comparator<ROI> getInstance(); Get a static instance of this comparator, to avoid needing to construct it. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html:1237,hash,hashCode,1237,javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/DefaultROIComparator.html,1,['hash'],['hashCode']
Security,". DensityMapCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class DensityMapCommand. java.lang.Object; qupath.process.gui.commands.DensityMapCommand. All Implemented Interfaces:; Runnable. public class DensityMapCommand; extends Object; implements Runnable; Command for generating density maps from detections on an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapCommand; public DensityMapCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html:966,hash,hashCode,966,javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/DensityMapCommand.html,1,['hash'],['hashCode']
Security,". DensityMapDialog (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.density; Class DensityMapDialog. java.lang.Object; qupath.process.gui.commands.density.DensityMapDialog. public class DensityMapDialog; extends Object; Dialog for interactively generating a custom density map. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DensityMapDialog(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregister(). Deregister listeners. Stage; getStage(). Get the stage. boolean; updateDefaults(ImageData<BufferedImage> imageData). Update default parameters with a specified ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DensityMapDialog; public DensityMapDialog(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. updateDefaults; public boolean updateDefaults(ImageData<BufferedImage> imageData); Update default parameters with a specified ImageData.; This can be called before showing the dialog to give better starting values. Parameters:; imageData - ; Returns:. deregister; public void deregister(); Deregister listeners. This should be called when the stage is closed if it will not be used again. getStage; public Stage getStage(); Get the stage. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html:1085,hash,hashCode,1085,javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapDialog.html,1,['hash'],['hashCode']
Security,". DetectionPluginTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class DetectionPluginTools. java.lang.Object; qupath.lib.plugins.DetectionPluginTools. public class DetectionPluginTools; extends Object; Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy.; ; Internally, a PathTask is used with the important resolution/event-firing occurring within the; taskComplete method. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DetectionPluginTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Runnable; createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject). Create a task that applies an object detector to a parent object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DetectionPluginTools; public DetectionPluginTools(). Method Details. createRunnableTask; public static <T> Runnable createRunnableTask(ObjectDetector<T> task,; ParameterList params,; ImageData<T> imageData,; PathObject parentObject); Create a task that applies an object detector to a parent object.; ; Detected objects will be added as children of the parent. If the parent has a ROI, this may define the detection ROI. Type Parameters:; T - ; Parameters:; task - ; params - ; imageData - ; parentObject - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html:1344,hash,hashCode,1344,javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/DetectionPluginTools.html,1,['hash'],['hashCode']
Security,". DnnTools.DNNLayer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnTools.DNNLayer. java.lang.Object; qupath.opencv.dnn.DnnTools.DNNLayer. Enclosing class:; DnnTools. public static class DnnTools.DNNLayer; extends Object; Helper class to summarize a DNN layer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getID(). Layer ID. List<DnnShape>; getInputShapes(). Layer input shape. String; getName(). Layer name. List<DnnShape>; getOutputShapes(). Layer output shape. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Layer name. Returns:. getID; public int getID(); Layer ID. Returns:. getInputShapes; public List<DnnShape> getInputShapes(); Layer input shape. This may depend on the input shape provided when summarizing the model. Returns:. getOutputShapes; public List<DnnShape> getOutputShapes(); Layer output shape. This may depend on the input shape provided when summarizing the model. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html:930,hash,hashCode,930,javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.DNNLayer.html,1,['hash'],['hashCode']
Security,". DocGenerator (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class DocGenerator. java.lang.Object; qupath.lib.gui.tools.DocGenerator. All Implemented Interfaces:; Runnable. public class DocGenerator; extends Object; implements Runnable; Command line tool to export icons and markdown documentation for QuPath commands. Constructor Summary; Constructors. Constructor; Description; DocGenerator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args);  ; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DocGenerator; public DocGenerator(). Method Details. run; public void run(). Specified by:; run in interface Runnable. main; public static void main(String[] args). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html:945,hash,hashCode,945,javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/DocGenerator.html,1,['hash'],['hashCode']
Security,". EditMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions. All Implemented Interfaces:; MenuActions. public class EditMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; EditMenuActions.Actions;  ; class ; EditMenuActions.CopyActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html:1060,hash,hashCode,1060,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.html,1,['hash'],['hashCode']
Security,". ExportObjectsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ExportObjectsCommand. java.lang.Object; qupath.lib.gui.commands.ExportObjectsCommand. public final class ExportObjectsCommand; extends Object; Command to export object(s) in GeoJSON format to an output file. Author:; Melvin Gelbard, Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; runGeoJsonExport(QuPathGUI qupath). Run the path object GeoJSON export command. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. runGeoJsonExport; public static boolean runGeoJsonExport(QuPathGUI qupath); throws IOException; Run the path object GeoJSON export command. Parameters:; qupath - ; Returns:; success; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html:899,hash,hashCode,899,javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ExportObjectsCommand.html,1,['hash'],['hashCode']
Security,". ExportTrainingRegionsCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ExportTrainingRegionsCommand. java.lang.Object; qupath.process.gui.commands.ExportTrainingRegionsCommand. All Implemented Interfaces:; Runnable. public class ExportTrainingRegionsCommand; extends Object; implements Runnable; Command to help export training regions as labelled images to train AI algorithms elsewhere.; ; Note: This is a work in progress and needs to be revised to improve flexibility. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ExportTrainingRegionsCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ExportTrainingRegionsCommand; public ExportTrainingRegionsCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html:1133,hash,hashCode,1133,javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ExportTrainingRegionsCommand.html,1,['hash'],['hashCode']
Security,". ExtensionClassLoader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:433,secur,security,433,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['secur'],['security']
Security,". ExtensionsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions. All Implemented Interfaces:; MenuActions. public class ExtensionsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ExtensionsMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html:1050,hash,hashCode,1050,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.html,1,['hash'],['hashCode']
Security,". ExtensionsMenuActions.Actions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ExtensionsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions. Enclosing class:; ExtensionsMenuActions. @ActionMenu(""Menu.Extensions""); public class ExtensionsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXTENSIONS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. EXTENSIONS; @ActionConfig(""Action.Extensions.installed""); public final org.controlsfx.control.action.Action EXTENSIONS. SEP_1; @ActionMenu(""""); public final org.controlsfx.control.action.Action SEP_1. Constructor Details. Actions; public Actions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html:978,hash,hashCode,978,javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ExtensionsMenuActions.Actions.html,1,['hash'],['hashCode']
Security,". FileFormatInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class FileFormatInfo. java.lang.Object; qupath.lib.images.servers.FileFormatInfo. public class FileFormatInfo; extends Object; Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data.; ; In particular, it attempts to extract some usable information from TIFF images using ImageIO to help ; a reader determine whether or not it should attempt to read the image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Constructor Summary; Constructors. Constructor; Description; FileFormatInfo();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static FileFormatInfo.ImageCheckType; checkType(URI uri). Check the type of an image for a specified URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileFormatInfo; public FileFormatInfo(). Method Details. checkType; public static FileFormatInfo.ImageCheckType checkType(URI uri); Check the type of an image for a specified URI.; ; This will return a cached value if possible, to avoid applying (potentially costly) checks too often. Parameters:; uri - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html:1514,hash,hashCode,1514,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.html,1,['hash'],['hashCode']
Security,". FileMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions. All Implemented Interfaces:; MenuActions. public class FileMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; FileMenuActions.Actions;  ; class ; FileMenuActions.ExportImageActions;  ; class ; FileMenuActions.ExportSnapshotActions;  ; class ; FileMenuActions.ProjectActions;  ; class ; FileMenuActions.TmaActions;  . Constructor Summary; Constructors. Constructor; Description; FileMenuActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileMenuActions; public FileMenuActions(QuPathGUI qupath). Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html:1298,hash,hashCode,1298,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.html,1,['hash'],['hashCode']
Security,". FileMenuActions.ExportImageActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.ExportImageActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions. Enclosing class:; FileMenuActions. public class FileMenuActions.ExportImageActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; EXPORT_ORIGINAL;  ; final org.controlsfx.control.action.Action; EXPORT_RENDERED;  . Constructor Summary; Constructors. Constructor; Description; ExportImageActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. EXPORT_ORIGINAL; @ActionConfig(""Action.File.ExportImage.original""); public final org.controlsfx.control.action.Action EXPORT_ORIGINAL. EXPORT_RENDERED; @ActionConfig(""Action.File.ExportImage.rendered""); public final org.controlsfx.control.action.Action EXPORT_RENDERED. Constructor Details. ExportImageActions; public ExportImageActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportImageActions.html:986,hash,hashCode,986,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportImageActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportImageActions.html,1,['hash'],['hashCode']
Security,". FileMenuActions.ExportSnapshotActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.ExportSnapshotActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions. Enclosing class:; FileMenuActions. public class FileMenuActions.ExportSnapshotActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SNAPSHOT_VIEWER_CONTENT;  ; final org.controlsfx.control.action.Action; SNAPSHOT_WINDOW;  ; final org.controlsfx.control.action.Action; SNAPSHOT_WINDOW_CONTENT;  . Constructor Summary; Constructors. Constructor; Description; ExportSnapshotActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SNAPSHOT_WINDOW; @ActionConfig(""Action.File.ExportSnapshot.windowScreenshot""); public final org.controlsfx.control.action.Action SNAPSHOT_WINDOW. SNAPSHOT_WINDOW_CONTENT; @ActionConfig(""Action.File.ExportSnapshot.windowContent""); public final org.controlsfx.control.action.Action SNAPSHOT_WINDOW_CONTENT. SNAPSHOT_VIEWER_CONTENT; @ActionConfig(""Action.File.ExportSnapshot.viewerContent""); public final org.controlsfx.control.action.Action SNAPSHOT_VIEWER_CONTENT. Constructor Details. ExportSnapshotActions; public ExportSnapshotActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportSnapshotActions.html:1081,hash,hashCode,1081,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportSnapshotActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ExportSnapshotActions.html,1,['hash'],['hashCode']
Security,". FileMenuActions.TmaActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class FileMenuActions.TmaActions. java.lang.Object; qupath.lib.gui.actions.menus.FileMenuActions.TmaActions. Enclosing class:; FileMenuActions. public class FileMenuActions.TmaActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; TMA_EXPORT;  ; final org.controlsfx.control.action.Action; TMA_IMPORT;  ; final org.controlsfx.control.action.Action; TMA_VIEWER;  . Constructor Summary; Constructors. Constructor; Description; TmaActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_IMPORT; @ActionConfig(""Action.File.TMA.importMap""); public final org.controlsfx.control.action.Action TMA_IMPORT. TMA_EXPORT; @ActionConfig(""Action.File.TMA.exportData""); public final org.controlsfx.control.action.Action TMA_EXPORT. TMA_VIEWER; @ActionConfig(""Action.File.TMA.dataViewer""); public final org.controlsfx.control.action.Action TMA_VIEWER. Constructor Details. TmaActions; public TmaActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.TmaActions.html:995,hash,hashCode,995,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.TmaActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.TmaActions.html,1,['hash'],['hashCode']
Security,". GeometryROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:902,validat,validated,902,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['validat'],['validated']
Security,". GeometryTools.GeometryConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryTools.GeometryConverter. java.lang.Object; qupath.lib.roi.GeometryTools.GeometryConverter. Enclosing class:; GeometryTools. public static class GeometryTools.GeometryConverter; extends Object; Converter to help switch from a ROI to a Geometry. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Geometry; roiToGeometry(ROI roi). Convert a QuPath ROI to a JTS Geometry. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. roiToGeometry; public Geometry roiToGeometry(ROI roi); Convert a QuPath ROI to a JTS Geometry. Parameters:; roi - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.html:1092,hash,hashCode,1092,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.html,1,['hash'],['hashCode']
Security,". GroovyAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class GroovyAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor; qupath.lib.gui.scripting.completors.GroovyAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. public class GroovyAutoCompletor; extends DefaultAutoCompletor; Auto completion support for Groovy. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GroovyAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. Methods inherited from class qupath.lib.gui.scripting.completors.DefaultAutoCompletor; addCompletion, addCompletions, addCompletions, getCompletions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GroovyAutoCompletor; public GroovyAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/GroovyAutoCompletor.html:1086,hash,hashCode,1086,javadoc/docs/qupath/lib/gui/scripting/completors/GroovyAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/GroovyAutoCompletor.html,1,['hash'],['hashCode']
Security,". HaralickFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatures. java.lang.Object; qupath.lib.analysis.features.HaralickFeatures. public class HaralickFeatures; extends Object; Helper class for computing Haralick features given a cooccurrence matrix. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getFeature(int n). Get the value of the specified feature. String; getFeatureName(int n). Get the name of the specified feature. int; nFeatures(). Total number of Haralick features. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. getFeatureName; public String getFeatureName(int n); Get the name of the specified feature. Parameters:; n - ; Returns:. nFeatures; public int nFeatures(); Total number of Haralick features. Returns:. getFeature; public double getFeature(int n); Get the value of the specified feature. Parameters:; n - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html:999,hash,hashCode,999,javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html,1,['hash'],['hashCode']
Security,". HelpMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class HelpMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.HelpMenuActions. All Implemented Interfaces:; MenuActions. public class HelpMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; HelpMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html:1020,hash,hashCode,1020,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.html,1,['hash'],['hashCode']
Security,". HistogramChart.HistogramData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class HistogramChart.HistogramData. java.lang.Object; qupath.lib.gui.charts.HistogramChart.HistogramData. Enclosing class:; HistogramChart. public static class HistogramChart.HistogramData; extends Object; Helper class for representing data that may be visualized with a HistogramChart. Constructor Summary; Constructors. Constructor; Description; HistogramData(Histogram histogram,; Color color). Wrapper for histogram & data relevant to its display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Color; getFill(). Get the histogram fill color. Histogram; getHistogram(). Get the histogram. Color; getStroke(). Get the histogram stroke color. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramData; public HistogramData(Histogram histogram,; Color color); Wrapper for histogram & data relevant to its display. Parameters:; histogram - ; color - . Method Details. getStroke; public Color getStroke(); Get the histogram stroke color. Returns:. getFill; public Color getFill(); Get the histogram fill color. Returns:. getHistogram; public Histogram getHistogram(); Get the histogram. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html:1155,hash,hashCode,1155,javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.HistogramData.html,1,['hash'],['hashCode']
Security,". ImageData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Class ImageData<T>. java.lang.Object; qupath.lib.images.ImageData<T>. Type Parameters:; T - . All Implemented Interfaces:; EventListener, PathObjectHierarchyListener, WorkflowListener. public class ImageData<T>; extends Object; implements WorkflowListener, PathObjectHierarchyListener; Class that brings together the main data in connection with the analysis of a single image.; ; Currently, this is really the server (to access the image & its pixels) and the object hierarchy that represents detections.; In addition, there is an ImageType - as some options may change depending on this.; ; One particularly significant example is that of Brightfield images in pathology, for which stain vectors are often required for; effective stain separation. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ImageData.ImageType. Enum representing possible image types. Constructor Summary; Constructors. Constructor; Description; ImageData(ImageServer<T> server). Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T> server,; ImageData.ImageType type). Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy). Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type). Create a new ImageData with a specified object hierarchy and type. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPropertyChangeListener(Pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:773,access,access,773,javadoc/docs/qupath/lib/images/ImageData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html,1,['access'],['access']
Security,". ImageRegionStoreFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreFactory. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreFactory. public class ImageRegionStoreFactory; extends Object; Factory for creating an ImageRegionStore. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DefaultImageRegionStore; createImageRegionStore(). Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. static DefaultImageRegionStore; createImageRegionStore(long tileCacheSizeBytes). Create an ImageRegionStore with a specified tile cache size, in bytes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreFactory; public ImageRegionStoreFactory(). Method Details. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(long tileCacheSizeBytes); Create an ImageRegionStore with a specified tile cache size, in bytes. Parameters:; tileCacheSizeBytes - ; Returns:. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(); Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html:1195,hash,hashCode,1195,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,1,['hash'],['hashCode']
Security,". ImageServerBuilder.AbstractServerBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerBuilder.AbstractServerBuilder<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Direct Known Subclasses:; ImageServerBuilder.DefaultImageServerBuilder. Enclosing interface:; ImageServerBuilder<T>. public abstract static class ImageServerBuilder.AbstractServerBuilder<T>; extends Object; implements ImageServerBuilder.ServerBuilder<T>; Abstract ServerBuilder implementation that handles metadata. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<T>; build(). Build a new ImageServer instance. protected abstract ImageServer<T>; buildOriginal();  ; protected ImageServerMetadata; getMetadata();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder; getURIs, updateURIs. Method Details. buildOriginal; protected abstract ImageServer<T> buildOriginal(); throws Exception. Throws:; Exception. getMetadata; protected ImageServerMetadata getMetadata(). build; public ImageServer<T> build(); throws Exception; Description copied from interface: ImageServerBuilder.ServerBuilder; Build a new ImageServer instance. Specified by:; build in interface ImageServerBuilder.ServerBuilder<T>; Returns:; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html:1298,hash,hashCode,1298,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.AbstractServerBuilder.html,1,['hash'],['hashCode']
Security,". ImageServerMetadata.ImageResolutionLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.ImageResolutionLevel. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Enclosing class:; ImageServerMetadata. public static class ImageServerMetadata.ImageResolutionLevel; extends Object; Width and height of each resolution in a multi-level image pyramid. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample factor for this level. int; getHeight(). Get the image height at this level. int; getWidth(). Get the image width at this level. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getDownsample; public double getDownsample(); Get the downsample factor for this level. Returns:. getWidth; public int getWidth(); Get the image width at this level. Returns:. getHeight; public int getHeight(); Get the image height at this level. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html:1267,hash,hashCode,1267,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html,4,['hash'],['hashCode']
Security,". ImageSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface ImageSupplier<S>. Type Parameters:; S - the type of image. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface ImageSupplier<S>; A functional interface for supplying an image region for processing. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static ImageSupplier<BufferedImage>; createBufferedImageSupplier(). Create a image supplier that returns a buffered image. S; getImage(Parameters<S,?> parameters). Get the image to process. Method Details. getImage; S getImage(Parameters<S,?> parameters); throws IOException; Get the image to process.; This should correspond to the region request and image server stored in the parameters.; ; This has access to the parameters, but must not call parameters.getImage() or; parameters.getMask() to avoid the risk of infinite recursion. Parameters:; parameters - ; Returns:; an image based upon the stored parameters; Throws:; IOException. createBufferedImageSupplier; static ImageSupplier<BufferedImage> createBufferedImageSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html:1247,access,access,1247,javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageSupplier.html,1,['access'],['access']
Security,". ImageWriterTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers; Class ImageWriterTools. java.lang.Object; qupath.lib.images.writers.ImageWriterTools. public class ImageWriterTools; extends Object; Static methods to access ImageWriter objects and write images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageWriterTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> List<ImageWriter<T>>; getCompatibleWriters(Class<T> imageClass,; String ext). Get a list of compatible ImageWriters for a specific image class. static <T> List<ImageWriter<T>>; getCompatibleWriters(ImageServer<T> server,; String ext). Get a list of compatible ImageWriters compatible with a specific server. static boolean; writeImage(BufferedImage img,; String path). Write a 2D image using the default writer based on the file path. static boolean; writeImage(ImageServer<BufferedImage> server,; String path). Write a (possibly multidimensional) image region using the default writer based on the file path. static boolean; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write a 2D image region using the default writer based on the file path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageWriterTools; public ImageWriterTools(). Method Details. getCompatibleWriters; public static <T> List<ImageWriter<T>> getCompatibleWriters(ImageServer<T> server,; String ext); Get a list of compatible ImageWriters compatible with a specific server. Type Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html:517,access,access,517,javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,1,['access'],['access']
Security,". ImmutableDimension (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.geom; Class ImmutableDimension. java.lang.Object; qupath.lib.geom.ImmutableDimension. public class ImmutableDimension; extends Object; An immutable alternative to Java's AWT Dimension. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; final int; height. Height of the ImmutableDimension. final int; width. Width of the ImmutableDimension. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getHeight(). Get the ImmutableDimension height. static ImmutableDimension; getInstance(int width,; int height). Get an ImmutableDimension representing the specified width and height. int; getWidth(). Get the ImmutableDimension width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. width; public final int width; Width of the ImmutableDimension. height; public final int height; Height of the ImmutableDimension. Method Details. getInstance; public static ImmutableDimension getInstance(int width,; int height); Get an ImmutableDimension representing the specified width and height. Parameters:; width - ; height - ; Returns:. getWidth; public int getWidth(); Get the ImmutableDimension width. Returns:. getHeight; public int getHeight(); Get the ImmutableDimension height. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html:1163,hash,hashCode,1163,javadoc/docs/qupath/lib/geom/ImmutableDimension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/ImmutableDimension.html,1,['hash'],['hashCode']
Security,". Interpolation (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Interpolation. java.lang.Object; qupath.opencv.tools.Interpolation. public class Interpolation; extends Object; Methods to help with requesting interpolated values.; Most commonly used with the indexer for an OpenCV Mat. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Interpolation();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double; interp2D(Indexer indexer,; double i,; double j). Request a value from an Indexer using bilinear interpolation. static double; interp3D(Indexer indexer,; double i,; double j,; double k). Request a value from an Indexer using trilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Interpolation; public Interpolation(). Method Details. interp2D; public static double interp2D(Indexer indexer,; double i,; double j); Request a value from an Indexer using bilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - requested row; j - requested column; Returns:; the interpolated value. interp3D; public static double interp3D(Indexer indexer,; double i,; double j,; double k); Request a value from an Indexer using trilinear interpolation.; Values requested out of range will be replaced by the closest in-range value. Parameters:; indexer - ; i - ; j - ; k - ; Returns:; the interpolated value. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html:1134,hash,hashCode,1134,javadoc/docs/qupath/opencv/tools/Interpolation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Interpolation.html,1,['hash'],['hashCode']
Security,". JavadocViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class JavadocViewer. java.lang.Object; qupath.lib.gui.JavadocViewer. public class JavadocViewer; extends Object; Command to show javadocs in a WebView. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROP_JAVADOC_PATH. Name of the system property used to set the javadoc path. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static JavadocViewer; getInstance(). Get the main (singleton) instance of JavadocViewer. Stage; getStage(). Get the stage used to show the javadocs. static void; main(String[] args). Show javadoc stage (used for development). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROP_JAVADOC_PATH; public static final String PROP_JAVADOC_PATH; Name of the system property used to set the javadoc path.; Could be set to https://qupath.github.io/javadoc/docs/ although note this path may change. See Also:. Constant Field Values. Method Details. getStage; public Stage getStage(); Get the stage used to show the javadocs. Returns:. getInstance; public static JavadocViewer getInstance(); Get the main (singleton) instance of JavadocViewer. Returns:. main; public static void main(String[] args); Show javadoc stage (used for development). Parameters:; args - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html:1111,hash,hashCode,1111,javadoc/docs/qupath/lib/gui/JavadocViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/JavadocViewer.html,1,['hash'],['hashCode']
Security,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html:1238,hash,hashCode,1238,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,1,['hash'],['hashCode']
Security,". LoadResourceCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ui; Class LoadResourceCommand<S>. java.lang.Object; qupath.process.gui.commands.ui.LoadResourceCommand<S>. Type Parameters:; S - . All Implemented Interfaces:; Runnable. public final class LoadResourceCommand<S>; extends Object; implements Runnable; Create commands for displaying pixel classifiers and density maps. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static LoadResourceCommand<DensityMaps.DensityMapBuilder>; createLoadDensityMapCommand(QuPathGUI qupath). Create a Runnable to interactively load a density map and display it in all viewers. static LoadResourceCommand<PixelClassifier>; createLoadPixelClassifierCommand(QuPathGUI qupath). Create a Runnable to interactively load a pixel classifier and display it in all viewers. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createLoadPixelClassifierCommand; public static LoadResourceCommand<PixelClassifier> createLoadPixelClassifierCommand(QuPathGUI qupath); Create a Runnable to interactively load a pixel classifier and display it in all viewers. Parameters:; qupath - ; Returns:. createLoadDensityMapCommand; public static LoadResourceCommand<DensityMaps.DensityMapBuilder> createLoadDensityMapCommand(QuPathGUI qupath); Create a Runnable to interactively load a density map and display it in all viewers. Parameters:; qupath - ; Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html:1302,hash,hashCode,1302,javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/LoadResourceCommand.html,1,['hash'],['hashCode']
Security,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:1002,hash,hashCode,1002,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,1,['hash'],['hashCode']
Security,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:1148,hash,hashCode,1148,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,1,['hash'],['hashCode']
Security,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:891,hash,hashCode,891,javadoc/docs/qupath/lib/scripting/LoggingTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html,1,['hash'],['hashCode']
Security,". MeasureMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions. All Implemented Interfaces:; MenuActions. public class MeasureMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; MeasureMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html:1035,hash,hashCode,1035,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.html,1,['hash'],['hashCode']
Security,". MeasurementExportCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MeasurementExportCommand. java.lang.Object; qupath.lib.gui.commands.MeasurementExportCommand. All Implemented Interfaces:; Runnable. public class MeasurementExportCommand; extends Object; implements Runnable; Dialog box to export measurements. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExportCommand(QuPathGUI qupath). Creates a simple GUI for MeasurementExporter. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExportCommand; public MeasurementExportCommand(QuPathGUI qupath); Creates a simple GUI for MeasurementExporter. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html:997,hash,hashCode,997,javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MeasurementExportCommand.html,1,['hash'],['hashCode']
Security,". MeasurementFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementFactory. java.lang.Object; qupath.lib.measurements.MeasurementFactory. @Deprecated; public class MeasurementFactory; extends Object; Deprecated.; Factory for creating new Measurement objects.; ; Made more sense when dynamic measurements were in use.; ; May not be particularly useful now (?). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementFactory(). Deprecated.;  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Measurement; createMeasurement(String name,; double value). Deprecated.; Create a measurement with a double value. static Measurement; createMeasurement(String name,; float value). Deprecated.; Create a measurement with a float value. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementFactory; public MeasurementFactory(); Deprecated. Method Details. createMeasurement; public static Measurement createMeasurement(String name,; double value); Deprecated.; Create a measurement with a double value. Parameters:; name - ; value - ; Returns:. createMeasurement; public static Measurement createMeasurement(String name,; float value); Deprecated.; Create a measurement with a float value. Parameters:; name - ; value - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html:1240,hash,hashCode,1240,javadoc/docs/qupath/lib/measurements/MeasurementFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementFactory.html,1,['hash'],['hashCode']
Security,". MeasurementListFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.measurements; Class MeasurementListFactory. java.lang.Object; qupath.lib.measurements.MeasurementListFactory. public class MeasurementListFactory; extends Object; Factory for creating new measurement lists.; ; For efficiently, (static) Float lists are generally preferred for detection objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList; createMeasurementList(int capacity,; MeasurementList.MeasurementListType type). Create a measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createMeasurementList; public static MeasurementList createMeasurementList(int capacity,; MeasurementList.MeasurementListType type); Create a measurement list. Parameters:; capacity - ; type - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html:987,hash,hashCode,987,javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementListFactory.html,1,['hash'],['hashCode']
Security,". MeasurementMapPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class MeasurementMapPane. java.lang.Object; qupath.lib.gui.panes.MeasurementMapPane. public class MeasurementMapPane; extends Object; Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MeasurementMapPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getPane(). Get the pane, which can be added to a scene for display. void; updateMeasurements(). Update the measurements according to the current image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapPane; public MeasurementMapPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getPane; public Pane getPane(); Get the pane, which can be added to a scene for display. Returns:. updateMeasurements; public void updateMeasurements(); Update the measurements according to the current image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html:1097,hash,hashCode,1097,javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/MeasurementMapPane.html,1,['hash'],['hashCode']
Security,". Menus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class Menus. java.lang.Object; qupath.lib.gui.actions.menus.Menus. public class Menus; extends Object; Generate actions for installation in QuPath's main menubar. Constructor Summary; Constructors. Constructor; Description; Menus();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<org.controlsfx.control.action.Action>; createAllMenuActions(QuPathGUI qupath). Create a collection of all the actions that should be installed in QuPath's main menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Menus; public Menus(). Method Details. createAllMenuActions; public static Collection<org.controlsfx.control.action.Action> createAllMenuActions(QuPathGUI qupath); Create a collection of all the actions that should be installed in QuPath's main menubar.; The actions are configured for installation through QuPathGUI.installActions(Collection). Parameters:; qupath - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/Menus.html:962,hash,hashCode,962,javadoc/docs/qupath/lib/gui/actions/menus/Menus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/Menus.html,1,['hash'],['hashCode']
Security,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:1194,hash,hashCode,1194,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,1,['hash'],['hashCode']
Security,". MultiscaleFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures. public class MultiscaleFeatures; extends Object; Calculate pixel-based features in both 2D and 3D. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. static class ; MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. static class ; MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). static enum ; MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. static class ; MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. Constructor Summary; Constructors. Constructor; Description; MultiscaleFeatures();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleFeatures; public MultiscaleFeatures(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html:1350,hash,hashCode,1350,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.html,1,['hash'],['hashCode']
Security,". MultiscaleFeatures.MultiscaleResultsBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.MultiscaleResultsBuilder; extends Object; Helper-class for computing pixel-features at a specified scale. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Constructor Summary; Constructors. Constructor; Description; MultiscaleResultsBuilder(). Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features). Constructor prepared to calculate specified features. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap>; build(List<Mat> mats). Calculate results as a list of maps connecting features and Mats for all slices of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(List<Mat> mats,; int ind). Calculate results for a map of features and Mats for one slice of a z-stack. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; build(Mat mat). Calculate results for a single Mat. MultiscaleFeatures.MultiscaleResultsBuilder; gaussianSmoothed(boolean calculate). Calculate the Gaussian-smoothed image. MultiscaleFeatures.MultiscaleResultsBuilder; gradientMagnitude(boolean calculate). Calculate the gradient magnitude. MultiscaleFeatures.M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:892,access,access,892,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,1,['access'],['access']
Security,". MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:995,access,access,995,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['access'],['access']
Security,". OMEPixelParser (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class OMEPixelParser. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser. public class OMEPixelParser; extends Object; This class can parse raw bytes into a BufferedImage.; It is intended for use with non-RGB images; AWTImageTools can be used for RGB images. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OMEPixelParser.Builder. Builder for instances of OMEPixelParser. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BufferedImage; parse(byte[][] pixels,; int width,; int height,; int nChannels,; ColorModel colorModel). Creates a BufferedImage from a 2-dimensional byte array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. parse; public BufferedImage parse(byte[][] pixels,; int width,; int height,; int nChannels,; ColorModel colorModel); Creates a BufferedImage from a 2-dimensional byte array. Parameters:; pixels - the byte array containing the pixel values. The first dimension of the; array refers to the channel and the second dimension refers to the position; of the pixel; width - the width in pixels of the image; height - the height in pixels of the image; nChannels - the number of channels of this image; colorModel - the color model to use when creating the image; Returns:; the corresponding image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.html:1154,hash,hashCode,1154,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.html,1,['hash'],['hashCode']
Security,". ObjectClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierCommand. All Implemented Interfaces:; Runnable. public class ObjectClassifierCommand; extends Object; implements Runnable; Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers.; ; This is intended as a replacement for 'Create detection classifier' in QuPath v0.1.2, supporting better ; classifier options and serialization. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierCommand; public ObjectClassifierCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html:1179,hash,hashCode,1179,javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierCommand.html,1,['hash'],['hashCode']
Security,". ObjectClassifierLoadCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class ObjectClassifierLoadCommand. java.lang.Object; qupath.process.gui.commands.ObjectClassifierLoadCommand. All Implemented Interfaces:; Runnable. public final class ObjectClassifierLoadCommand; extends Object; implements Runnable; Command to apply a pre-trained object classifier to an image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectClassifierLoadCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifierLoadCommand; public ObjectClassifierLoadCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html:1019,hash,hashCode,1019,javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ObjectClassifierLoadCommand.html,1,['hash'],['hashCode']
Security,". ObjectClassifiers.ObjectClassifierTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.classifiers.object; Class ObjectClassifiers.ObjectClassifierTypeAdapterFactory. java.lang.Object; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; ObjectClassifiers. public static class ObjectClassifiers.ObjectClassifierTypeAdapterFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  ; static void; registerSubtype(Class<? extends ObjectClassifier> cls). Register a new ObjectClassifier subtype for compatibility with Gson serialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. registerSubtype; public static void registerSubtype(Class<? extends ObjectClassifier> cls); Register a new ObjectClassifier subtype for compatibility with Gson serialization. Parameters:; cls - . create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html:1266,hash,hashCode,1266,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ObjectClassifierTypeAdapterFactory.html,1,['hash'],['hashCode']
Security,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html:1088,hash,hashCode,1088,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,1,['hash'],['hashCode']
Security,". ObjectsMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions. All Implemented Interfaces:; MenuActions. public class ObjectsMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ObjectsMenuActions.Actions;  ; class ; ObjectsMenuActions.AnnotationActions;  ; class ; ObjectsMenuActions.DeleteActions;  ; class ; ObjectsMenuActions.LockActions;  ; class ; ObjectsMenuActions.SelectActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html:1217,hash,hashCode,1217,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.html,1,['hash'],['hashCode']
Security,". ObjectsMenuActions.DeleteActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.DeleteActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.DeleteActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CLEAR_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; CLEAR_DETECTIONS;  ; final org.controlsfx.control.action.Action; CLEAR_HIERARCHY;  ; final org.controlsfx.control.action.Action; DELETE_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; DeleteActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DELETE_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Delete.selected""); public final org.controlsfx.control.action.Action DELETE_SELECTED_OBJECTS. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CLEAR_HIERARCHY; @ActionConfig(""Action.Objects.Delete.all""); public final org.controlsfx.control.action.Action CLEAR_HIERARCHY. CLEAR_ANNOTATIONS; @ActionConfig(""Action.Objects.Delete.annotations""); public final org.controlsfx.control.action.Action CLEAR_ANNOTATIONS. CLEAR_DETECTIONS; @ActionConfig(""Action.Objects.Delete.detections""); public final org.controlsfx.control.action.Action CLEAR_DETECTIONS. Constructor Details. DeleteActions; public DeleteActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html:1169,hash,hashCode,1169,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.DeleteActions.html,1,['hash'],['hashCode']
Security,". ObjectsMenuActions.LockActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.LockActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.LockActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; LOCK_SELECTED_OBJECTS;  ; final org.controlsfx.control.action.Action; TOGGLE_SELECTED_OBJECTS_LOCKED;  ; final org.controlsfx.control.action.Action; UNLOCK_SELECTED_OBJECTS;  . Constructor Summary; Constructors. Constructor; Description; LockActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. LOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.lockSelected""); @ActionAccelerator(""shortcut+shift+k""); public final org.controlsfx.control.action.Action LOCK_SELECTED_OBJECTS. UNLOCK_SELECTED_OBJECTS; @ActionConfig(""Action.Objects.Lock.unlockSelected""); @ActionAccelerator(""shortcut+alt+k""); public final org.controlsfx.control.action.Action UNLOCK_SELECTED_OBJECTS. TOGGLE_SELECTED_OBJECTS_LOCKED; @ActionConfig(""Action.Objects.Lock.toggleSelected""); @ActionAccelerator(""shortcut+k""); public final org.controlsfx.control.action.Action TOGGLE_SELECTED_OBJECTS_LOCKED. Constructor Details. LockActions; public LockActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html:1059,hash,hashCode,1059,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.LockActions.html,1,['hash'],['hashCode']
Security,". OpenCVDnnModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnnModelBuilder. java.lang.Object; qupath.opencv.dnn.OpenCVDnnModelBuilder. All Implemented Interfaces:; DnnModelBuilder. public class OpenCVDnnModelBuilder; extends Object; implements DnnModelBuilder; A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OpenCVDnnModelBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DnnModel; buildModel(DnnModelParams params). Build a DnnModel if possible, or return null otherwise. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVDnnModelBuilder; public OpenCVDnnModelBuilder(). Method Details. buildModel; public DnnModel buildModel(DnnModelParams params); Description copied from interface: DnnModelBuilder; Build a DnnModel if possible, or return null otherwise.; This should return null quickly whenever it is known that the model cannot be built. Specified by:; buildModel in interface DnnModelBuilder; Parameters:; params - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html:1071,hash,hashCode,1071,javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnnModelBuilder.html,1,['hash'],['hashCode']
Security,". OpenCVTypeAdapters.OpenCVTypeAdapter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdapter<T>. java.lang.Object; com.google.gson.TypeAdapter<T>; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter<T>. Type Parameters:; T - . Enclosing class:; OpenCVTypeAdapters. public abstract static class OpenCVTypeAdapters.OpenCVTypeAdapter<T>; extends TypeAdapter<T>; TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; read(JsonReader in);  ; void; write(JsonWriter out,; T value);  . Methods inherited from class com.google.gson.TypeAdapter; fromJson, fromJson, fromJsonTree, nullSafe, toJson, toJson, toJsonTree. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapter; public OpenCVTypeAdapter(). Method Details. write; public void write(JsonWriter out,; T value); throws IOException. Specified by:; write in class TypeAdapter<T>; Throws:; IOException. read; public T read(JsonReader in); throws IOException. Specified by:; read in class TypeAdapter<T>; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdapter.html:1254,hash,hashCode,1254,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdapter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdapter.html,1,['hash'],['hashCode']
Security,". OpenCVTypeAdapters.OpenCVTypeAdaptorFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.io; Class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. java.lang.Object; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; OpenCVTypeAdapters. public static class OpenCVTypeAdapters.OpenCVTypeAdaptorFactory; extends Object; implements TypeAdapterFactory; TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdaptorFactory();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <T> TypeAdapter<T>; create(Gson gson,; TypeToken<T> type);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdaptorFactory; public OpenCVTypeAdaptorFactory(). Method Details. create; public <T> TypeAdapter<T> create(Gson gson,; TypeToken<T> type). Specified by:; create in interface TypeAdapterFactory. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html:1170,hash,hashCode,1170,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.OpenCVTypeAdaptorFactory.html,1,['hash'],['hashCode']
Security,". OpenSlide.OpenSlideDisposedException (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.openslide.jna; Class OpenSlide.OpenSlideDisposedException. java.lang.Object; java.lang.Throwable; java.lang.Exception; java.lang.RuntimeException; qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException. All Implemented Interfaces:; Serializable. Enclosing class:; OpenSlide. public static class OpenSlide.OpenSlideDisposedException; extends RuntimeException; Exception thrown whenever a request is made after the OpenSlide object has been closed. See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; OpenSlideDisposedException();  . Method Summary. Methods inherited from class java.lang.Throwable; addSuppressed, fillInStackTrace, getCause, getLocalizedMessage, getMessage, getStackTrace, getSuppressed, initCause, printStackTrace, printStackTrace, printStackTrace, setStackTrace, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenSlideDisposedException; public OpenSlideDisposedException(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.OpenSlideDisposedException.html:1317,hash,hashCode,1317,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.OpenSlideDisposedException.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.OpenSlideDisposedException.html,1,['hash'],['hashCode']
Security,". OutputHandler.ObjectOutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OutputHandler.ObjectOutputHandler<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U>. All Implemented Interfaces:; OutputHandler<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. public static class OutputHandler.ObjectOutputHandler<S,T,U>; extends Object; implements OutputHandler<S,T,U>. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.experimental.pixels.OutputHandler; OutputHandler.ObjectOutputHandler<S,T,U>, OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.experimental.pixels.OutputHandler; andThen, orElse. Method Details. handleOutput; public boolean handleOutput(Parameters<S,T> params,; U output); Description copied from interface: OutputHandler; Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Specified by:; handleOutput in interface OutputHandler<S,T,U>; Parameters:; params - the processing parameters; output - the generated output. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html:1234,hash,hashCode,1234,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.ObjectOutputHandler.html,1,['hash'],['hashCode']
Security,". PathObjectLabels.PathObjectMiniPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class PathObjectLabels.PathObjectMiniPane. java.lang.Object; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Enclosing class:; PathObjectLabels. public static class PathObjectLabels.PathObjectMiniPane; extends Object; Manage a small pane that can be used to display a PathObject.; Intended for use creating standardized list and tree cells. Constructor Summary; Constructors. Constructor; Description; PathObjectMiniPane(Function<PathObject,String> stringExtractor). Constructor using a custom string extraction function. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; getNode(). Get the node to display. void; setPathObject(PathObject value). Set the PathObject to display (may be null). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectMiniPane; public PathObjectMiniPane(Function<PathObject,String> stringExtractor); Constructor using a custom string extraction function. Parameters:; stringExtractor - function to generate a String representation of the object. Method Details. setPathObject; public void setPathObject(PathObject value); Set the PathObject to display (may be null). Parameters:; value - . getNode; public Pane getNode(); Get the node to display. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html:1221,hash,hashCode,1221,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.PathObjectMiniPane.html,1,['hash'],['hashCode']
Security,". PathTableData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.measure; Interface PathTableData<T>. Type Parameters:; T - . All Known Implementing Classes:; ObservableMeasurementTableData. public interface PathTableData<T>; Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate).; ; This can be thought of a table, where items (often PathObject correspond to rows and named columns either return ; numeric or String data.; ; This provides a useful method of wrapping one or more objects, and providing access to metadata, stored measurements and dynamically computed values ; in a way that is amenable to display within a table. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<String>; getAllNames(). Return an ordered list of all names, including both numeric measurements and String values. double[]; getDoubleValues(String column). Get all double values for all items. List<T>; getItems(). Get internal list of the items used to provide measurements. List<String>; getMeasurementNames(). Get the names of all numeric measurements. double; getNumericValue(T pathObject,; String column). Get the numeric value from an object for the specific measurement. String; getStringValue(T item,; String name). Get a string representation of the value. String; getStringValue(T item,; String name,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. Method Details. getAllNames; List<String> getAllNames(); Return an ordered list of all names, including both numeric measurements and String values. Returns:. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html:857,access,access,857,javadoc/docs/qupath/lib/gui/measure/PathTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/PathTableData.html,1,['access'],['access']
Security,". PixelClassifierCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class PixelClassifierCommand. java.lang.Object; qupath.process.gui.commands.PixelClassifierCommand. All Implemented Interfaces:; Runnable. public class PixelClassifierCommand; extends Object; implements Runnable; Open GUI for the current viewer to train a new pixel classifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierCommand; public PixelClassifierCommand(). Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html:965,hash,hashCode,965,javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/PixelClassifierCommand.html,1,['hash'],['hashCode']
Security,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1139,hash,hashCode,1139,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,1,['hash'],['hashCode']
Security,". PixelClassifierTraining.ClassifierTrainingData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining.ClassifierTrainingData. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Enclosing class:; PixelClassifierTraining. public static class PixelClassifierTraining.ClassifierTrainingData; extends Object; Wrapper for training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Map<PathClass,Integer>; getLabelMap(). Get the map of classifications to labels. TrainData; getTrainData(). Get training data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLabelMap; public Map<PathClass,Integer> getLabelMap(); Get the map of classifications to labels. Returns:. getTrainData; public TrainData getTrainData(); Get training data. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html:1016,hash,hashCode,1016,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.ClassifierTrainingData.html,1,['hash'],['hashCode']
Security,". PixelImageIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:646,access,access,646,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['access'],['access']
Security,". PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padd",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2673,access,access,2673,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['access'],['access']
Security,". PreferencePane.AppearancePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.AppearancePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.AppearancePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Appearance""); public static class PreferencePane.AppearancePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<QuPathStyleManager.Fonts>; autoUpdate;  ; final BooleanProperty; badges;  ; final ObjectProperty<QuPathStyleManager.StyleOption>; theme;  . Constructor Summary; Constructors. Constructor; Description; AppearancePreferences();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final ObservableList<QuPathStyleManager.StyleOption>; getStyles();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. theme; @Pref(value=""Prefs.Appearance.theme"",; type=StyleOption.class,; choiceMethod=""getStyles""); public final ObjectProperty<QuPathStyleManager.StyleOption> theme. autoUpdate; @Pref(value=""Prefs.Appearance.font"",; type=Fonts.class); public final ObjectProperty<QuPathStyleManager.Fonts> autoUpdate. badges; @BooleanPref(""Prefs.Appearance.badges""); public final BooleanProperty badges. Constructor Details. AppearancePreferences; public AppearancePreferences(). Method Details. getStyles; public final ObservableList<QuPathStyleManager.StyleOption> getStyles(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html:1210,hash,hashCode,1210,javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.AppearancePreferences.html,1,['hash'],['hashCode']
Security,". PreferencePane.ExtensionPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ExtensionPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Extensions""); public static class PreferencePane.ExtensionPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final Property<String>; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ExtensionPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Extensions.userPath""); public final Property<String> scriptsPath. Constructor Details. ExtensionPreferences; public ExtensionPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html:929,hash,hashCode,929,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ExtensionPreferences.html,1,['hash'],['hashCode']
Security,". PreferencePane.InputOutputPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.InputOutputPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.InputOutput""); public static class PreferencePane.InputOutputPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; minimumPyramidDimension;  ; final DoubleProperty; tmaExportDownsample;  . Constructor Summary; Constructors. Constructor; Description; InputOutputPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. minimumPyramidDimension; @IntegerPref(""Prefs.InputOutput.minPyramidDimension""); public final IntegerProperty minimumPyramidDimension. tmaExportDownsample; @DoublePref(""Prefs.InputOutput.tmaExportDownsample""); public final DoubleProperty tmaExportDownsample. Constructor Details. InputOutputPreferences; public InputOutputPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html:997,hash,hashCode,997,javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.InputOutputPreferences.html,1,['hash'],['hashCode']
Security,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html:1013,hash,hashCode,1013,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,1,['hash'],['hashCode']
Security,". PreferencePane.MeasurementPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.MeasurementPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Measurements""); public static class PreferencePane.MeasurementPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; showMeasurementTableObjectIDs;  ; final BooleanProperty; showMeasurementTableThumbnails;  . Constructor Summary; Constructors. Constructor; Description; MeasurementPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. showMeasurementTableThumbnails; @BooleanPref(""Prefs.Measurements.thumbnails""); public final BooleanProperty showMeasurementTableThumbnails. showMeasurementTableObjectIDs; @BooleanPref(""Prefs.Measurements.ids""); public final BooleanProperty showMeasurementTableObjectIDs. Constructor Details. MeasurementPreferences; public MeasurementPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html:1016,hash,hashCode,1016,javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.MeasurementPreferences.html,1,['hash'],['hashCode']
Security,". PreferencePane.ScriptingPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ScriptingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Scripting""); public static class PreferencePane.ScriptingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final StringProperty; scriptsPath;  . Constructor Summary; Constructors. Constructor; Description; ScriptingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scriptsPath; @DirectoryPref(""Prefs.Scripting.scriptsPath""); public final StringProperty scriptsPath. Constructor Details. ScriptingPreferences; public ScriptingPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html:926,hash,hashCode,926,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ScriptingPreferences.html,1,['hash'],['hashCode']
Security,". PreferencePane.UndoRedoPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.UndoRedoPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Undo""); public static class PreferencePane.UndoRedoPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; maxUndoHierarchySize;  ; final IntegerProperty; maxUndoLevels;  . Constructor Summary; Constructors. Constructor; Description; UndoRedoPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxUndoLevels; @IntegerPref(""Prefs.Undo.maxUndoLevels""); public final IntegerProperty maxUndoLevels. maxUndoHierarchySize; @IntegerPref(""Prefs.Undo.maxUndoHierarchySize""); public final IntegerProperty maxUndoHierarchySize. Constructor Details. UndoRedoPreferences; public UndoRedoPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html:967,hash,hashCode,967,javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.UndoRedoPreferences.html,1,['hash'],['hashCode']
Security,". Prefs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Prefs. java.lang.Object; qupath.lib.common.Prefs. public class Prefs; extends Object; Core QuPath preferences. Currently these are not persistent, but this behavior may change in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Prefs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; getNumThreads(). Get the requested number of threads to use for parallelization. static void; setNumThreads(int n). Set the requested number of threads. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Prefs; public Prefs(). Method Details. getNumThreads; public static int getNumThreads(); Get the requested number of threads to use for parallelization. Returns:. setNumThreads; public static void setNumThreads(int n); Set the requested number of threads. This will be clipped to be at least 1. Parameters:; n - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html:987,hash,hashCode,987,javadoc/docs/qupath/lib/common/Prefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Prefs.html,1,['hash'],['hashCode']
Security,". Preprocessing.PCAProjector (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.objects.features; Class Preprocessing.PCAProjector. java.lang.Object; qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. All Implemented Interfaces:; AutoCloseable. Enclosing class:; Preprocessing. public static class Preprocessing.PCAProjector; extends Object; implements AutoCloseable; Helper class to apply PCA projection. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; int; nComponents(). Number of output components. void; project(Mat data,; Mat result). Apply the projection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. nComponents; public int nComponents(); Number of output components. Returns:. project; public void project(Mat data,; Mat result); Apply the projection. Parameters:; data - input data; result - output. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html:1013,hash,hashCode,1013,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.PCAProjector.html,1,['hash'],['hashCode']
Security,". ProcessingExtension.OpenCVCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OpenCVCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OpenCVCommands. Enclosing class:; ProcessingExtension. @ActionMenu(""Menu.Analyze""); public static class ProcessingExtension.OpenCVCommands; extends Object; Commands based on OpenCV. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionDelaunay;  ; final org.controlsfx.control.action.Action; actionDensityMap;  ; final org.controlsfx.control.action.Action; actionDensityMapLoad;  ; final org.controlsfx.control.action.Action; actionFastCellCounts. Deprecated. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionDelaunay; @ActionMenu(""Menu.Analyze.Spatial""); @ActionConfig(""Action.Processing.Spatial.delaunay""); public final org.controlsfx.control.action.Action actionDelaunay. actionFastCellCounts; @ActionMenu(""Menu.Analyze.CellDetection""); @ActionConfig(""Action.Processing.CellDetection.fastCellCounts""); @Deprecated; public final org.controlsfx.control.action.Action actionFastCellCounts; Deprecated. actionDensityMap; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.create""); public final org.controlsfx.control.action.Action actionDensityMap. actionDensityMapLoad; @ActionMenu(""Menu.Analyze.DensityMaps""); @ActionConfig(""Action.Processing.DensityMaps.load""); public final org.controlsfx.control.action.Action actionDensityMapLoad. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html:1093,hash,hashCode,1093,javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OpenCVCommands.html,1,['hash'],['hashCode']
Security,". ProcessingExtension.OtherCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.OtherCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.OtherCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.TrainingImages""}); public class ProcessingExtension.OtherCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionChannelTraining;  ; final org.controlsfx.control.action.Action; actionCreateRegions;  ; final org.controlsfx.control.action.Action; actionSplitProject;  ; final org.controlsfx.control.action.Action; actionTrainingImage;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionCreateRegions; @ActionConfig(""Action.Processing.Classify.createRegionAnnotations""); public final org.controlsfx.control.action.Action actionCreateRegions. actionTrainingImage; @ActionConfig(""Action.Processing.Classify.createTrainingImage""); public final org.controlsfx.control.action.Action actionTrainingImage. actionChannelTraining; @ActionConfig(""Action.Processing.Classify.createChannelTrainingImages""); public final org.controlsfx.control.action.Action actionChannelTraining. actionSplitProject; @ActionConfig(""Action.Processing.Classify.splitTrainValidationTest""); public final org.controlsfx.control.action.Action actionSplitProject. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html:1088,hash,hashCode,1088,javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.OtherCommands.html,1,['hash'],['hashCode']
Security,". ProcessingExtension.PixelClassificationCommands (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.PixelClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.PixelClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.PixelClassification""}); public class ProcessingExtension.PixelClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionLoadPixelClassifier;  ; final org.controlsfx.control.action.Action; actionPixelClassifier;  ; final org.controlsfx.control.action.Action; actionSimpleThreshold;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadPixelClassifier; @ActionConfig(""Action.Processing.Classify.loadPixelClassifier""); public final org.controlsfx.control.action.Action actionLoadPixelClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionPixelClassifier; @ActionAccelerator(""shortcut+shift+p""); @ActionConfig(""Action.Processing.Classify.trainPixelClassifier""); public final org.controlsfx.control.action.Action actionPixelClassifier. actionSimpleThreshold; @ActionConfig(""Action.Processing.Classify.createThresholder""); public final org.controlsfx.control.action.Action actionSimpleThreshold. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html:1142,hash,hashCode,1142,javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.PixelClassificationCommands.html,1,['hash'],['hashCode']
Security,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html:1182,access,access,1182,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html,1,['access'],['access']
Security,". Projects (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class Projects. java.lang.Object; qupath.lib.projects.Projects. public class Projects; extends Object; Static methods to help when working with Projects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Projects();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Project<T>; createProject(File file,; Class<T> cls). Create a new project using the local file system. static File; getBaseDirectory(Project<?> project). Get the base directory of a project stored on the local file system. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Projects; public Projects(). Method Details. getBaseDirectory; public static File getBaseDirectory(Project<?> project); Get the base directory of a project stored on the local file system. Parameters:; project - ; Returns:; the base directory, or null if no directory could be found. createProject; public static <T> Project<T> createProject(File file,; Class<T> cls); Create a new project using the local file system. It is assumed that the directory of the project file ; can be managed by the project, and therefore it should not contain additional user files. Parameters:; file - either the project file, or a directory that should contain a project file with a default name; cls - generic type for the project (only BufferedImage currently supported); Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Projects.html:1021,hash,hashCode,1021,javadoc/docs/qupath/lib/projects/Projects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Projects.html,1,['hash'],['hashCode']
Security,". PythonAutoCompletor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class PythonAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor; qupath.lib.gui.scripting.completors.PythonAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. public class PythonAutoCompletor; extends DefaultAutoCompletor; Auto completion support for Python. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PythonAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. Methods inherited from class qupath.lib.gui.scripting.completors.DefaultAutoCompletor; addCompletion, addCompletions, addCompletions, getCompletions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PythonAutoCompletor; public PythonAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/PythonAutoCompletor.html:1086,hash,hashCode,1086,javadoc/docs/qupath/lib/gui/scripting/completors/PythonAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/PythonAutoCompletor.html,1,['hash'],['hashCode']
Security,". QP (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class QP. java.lang.Object; qupath.lib.scripting.QP. Direct Known Subclasses:; QPEx. public class QP; extends Object; Collection of static methods that are useful for scripting.; ; Prior to running a script, the ImageData should be set so that the script can make use of it.; ; A different ImageData may be stored for different threads.; ; Note: This design may change in the future, to enable a non-static class to encapsulate ; the context for a running script. The limited ability to subclass a class containing static methods ; makes this design a bit problematic, while its package location means it cannot have access to GUI features ; (which it shouldn't have, because of the need to run headless... but sometimes the GUI is needed, e.g. to ; export images with markup). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageData.ImageType; BRIGHTFIELD_H_DAB. Brightfield image type with hematoxylin and DAB staining. static final ImageData.ImageType; BRIGHTFIELD_H_E. Brightfield image type with hematoxylin and eosin staining. static final ImageData.ImageType; BRIGHTFIELD_OTHER. Brightfield image type. static final ImageData.ImageType; FLUORESCENCE. Fluorescence image type. static final ImageData.ImageType; OTHER. Any other image type (neither brightfield nor fluorescence). static final String; PROJECT_BASE_DIR. Placeholder for the path to the current project. static final Version; VERSION. The current QuPath version, parsed according to semantic versioning. Constructor Summary; Constructors. Constructor; Description; QP();  . Method Summary. All MethodsStatic MethodsConcrete MethodsD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:964,access,access,964,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['access'],['access']
Security,". QPEx (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class QPEx. java.lang.Object; qupath.lib.scripting.QP; qupath.lib.gui.scripting.QPEx. public class QPEx; extends QP; Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.scripting.QP; BRIGHTFIELD_H_DAB, BRIGHTFIELD_H_E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:579,access,access,579,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['access'],['access']
Security,". QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath; Class QuPath. java.lang.Object; qupath.QuPath. public class QuPath; extends Object; Main QuPath launcher. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; main(String[] args). Main class to launch QuPath. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath; public QuPath(). Method Details. main; public static void main(String[] args); Main class to launch QuPath. Parameters:; args - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/QuPath.html:785,hash,hashCode,785,javadoc/docs/qupath/QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/QuPath.html,1,['hash'],['hashCode']
Security,". QuPathApp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class QuPathApp. java.lang.Object; javafx.application.Application; qupath.lib.gui.QuPathApp. public class QuPathApp; extends Application; Launcher application to start QuPath. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathApp();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage stage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathApp; public QuPathApp(). Method Details. start; public void start(Stage stage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html:1262,hash,hashCode,1262,javadoc/docs/qupath/lib/gui/QuPathApp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathApp.html,1,['hash'],['hashCode']
Security,". QuPathPenManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.tools; Class QuPathPenManager. java.lang.Object; qupath.lib.gui.viewer.tools.QuPathPenManager. public class QuPathPenManager; extends Object; Helper class for managing pressure-sensitive input. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. Constructor Summary; Constructors. Constructor; Description; QuPathPenManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static QuPathPenManager.PenInputManager; getPenManager(). Get the current PenInputManager. static void; setPenManager(QuPathPenManager.PenInputManager manager). Set the PenInputManager. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathPenManager; public QuPathPenManager(). Method Details. getPenManager; public static QuPathPenManager.PenInputManager getPenManager(); Get the current PenInputManager. This is guaranteed to return a PenInputManager even if no ; pen is present - in this case, a default manager will be returned. Returns:. setPenManager; public static void setPenManager(QuPathPenManager.PenInputManager manager); Set the PenInputManager. If null, a default PenInputManager will be used. Parameters:; manager - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html:1220,hash,hashCode,1220,javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/QuPathPenManager.html,1,['hash'],['hashCode']
Security,". QuPathTMAViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class QuPathTMAViewer. java.lang.Object; javafx.application.Application; qupath.lib.gui.tma.QuPathTMAViewer. public class QuPathTMAViewer; extends Application; Standalone viewer for looking at TMA summary results. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class javafx.application.Application; Application.Parameters. Field Summary. Fields inherited from class javafx.application.Application; STYLESHEET_CASPIAN, STYLESHEET_MODENA. Constructor Summary; Constructors. Constructor; Description; QuPathTMAViewer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; start(Stage primaryStage);  . Methods inherited from class javafx.application.Application; getHostServices, getParameters, getUserAgentStylesheet, init, launch, launch, notifyPreloader, setUserAgentStylesheet, stop. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathTMAViewer; public QuPathTMAViewer(). Method Details. start; public void start(Stage primaryStage); throws Exception. Specified by:; start in class Application; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html:1323,hash,hashCode,1323,javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/QuPathTMAViewer.html,1,['hash'],['hashCode']
Security,". QuPath_Send_ROI_to_QuPath (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_ROI_to_QuPath. java.lang.Object; qupathj.QuPath_Send_ROI_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_ROI_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back the active ROI from ImageJ to QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_ROI_to_QuPath();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_ROI_to_QuPath; public QuPath_Send_ROI_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html:950,hash,hashCode,950,javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_ROI_to_QuPath.html,1,['hash'],['hashCode']
Security,". ResourceManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Class ResourceManager. java.lang.Object; qupath.lib.projects.ResourceManager. public class ResourceManager; extends Object; Manage the storage and retrieval of resources with a ResourceManager.; Examples may include pixel classifiers or scripts.; By using this it is possible to avoid reliance on a filesystem, for example, ; opening the possibility to have resources stored elsewhere.; ; Note that names may be case-insensitive, depending upon the specific backing store.; This is the case for the default implementations using file storage. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. Constructor Summary; Constructors. Constructor; Description; ResourceManager();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ResourceManager; public ResourceManager(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html:1357,hash,hashCode,1357,javadoc/docs/qupath/lib/projects/ResourceManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.html,1,['hash'],['hashCode']
Security,". ScriptAttributes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptAttributes. java.lang.Object; qupath.lib.scripting.ScriptAttributes. public class ScriptAttributes; extends Object; Default attributes that can be set when running scripts.; Script implementations should try to set these where possible using ScriptParameters.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:693,access,access,693,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,1,['access'],['access']
Security,". SimpleImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleImage. All Known Subinterfaces:; SimpleModifiableImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleImage; A minimal interface for accessing pixel values in a single-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. Method Details. getValue; float getValue(int x,; int y); Get the value of a single pixel as a float. Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. getWidth; int getWidth(); Get the image width. Returns:. getHeight; int getHeight(); Get the image height. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html:535,access,accessing,535,javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,1,['access'],['accessing']
Security,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:597,access,access,597,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,1,['access'],['access']
Security,". SimpleThresholdCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SimpleThresholdCommand. java.lang.Object; qupath.process.gui.commands.SimpleThresholdCommand. All Implemented Interfaces:; Runnable. public class SimpleThresholdCommand; extends Object; implements Runnable; Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleThresholdCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholdCommand; public SimpleThresholdCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html:1096,hash,hashCode,1096,javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SimpleThresholdCommand.html,1,['hash'],['hashCode']
Security,". SingleMeasurementClassificationCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SingleMeasurementClassificationCommand. java.lang.Object; qupath.process.gui.commands.SingleMeasurementClassificationCommand. All Implemented Interfaces:; Runnable. public class SingleMeasurementClassificationCommand; extends Object; implements Runnable; Command to (sub)classify objects based on a single measurement. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SingleMeasurementClassificationCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SingleMeasurementClassificationCommand; public SingleMeasurementClassificationCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html:1070,hash,hashCode,1070,javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SingleMeasurementClassificationCommand.html,1,['hash'],['hashCode']
Security,". SplitAnnotationsByLineCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.objects; Class SplitAnnotationsByLineCommand. java.lang.Object; qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand. public class SplitAnnotationsByLineCommand; extends Object; Command to split annotations using lines. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsByLineCommand();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run(ImageData<?> imageData). Run the command for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SplitAnnotationsByLineCommand; public SplitAnnotationsByLineCommand(). Method Details. run; public void run(ImageData<?> imageData); Run the command for the specified image data. Parameters:; imageData - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/objects/SplitAnnotationsByLineCommand.html:982,hash,hashCode,982,javadoc/docs/qupath/lib/gui/commands/objects/SplitAnnotationsByLineCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/objects/SplitAnnotationsByLineCommand.html,1,['hash'],['hashCode']
Security,". SplitProjectTrainingCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class SplitProjectTrainingCommand. java.lang.Object; qupath.process.gui.commands.SplitProjectTrainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:639,validat,validation,639,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['validat'],['validation']
Security,". SvgExtension.SvgActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension.SvgActions. java.lang.Object; qupath.lib.extension.svg.SvgExtension.SvgActions. Enclosing class:; SvgExtension. public class SvgExtension.SvgActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionExport;  ; final org.controlsfx.control.action.Action; actionSnapshot;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionExport; @ActionMenu({""Menu.File"",""Menu.File.ExportImage""}); @ActionConfig(""Action.SVG.exportImage""); public final org.controlsfx.control.action.Action actionExport. actionSnapshot; @ActionMenu({""Menu.File"",""Menu.File.ExportSnapshot""}); @ActionConfig(""Action.SVG.exportSnapshot""); public final org.controlsfx.control.action.Action actionSnapshot. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html:841,hash,hashCode,841,javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.SvgActions.html,1,['hash'],['hashCode']
Security,". SvgTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgTools. java.lang.Object; qupath.lib.extension.svg.SvgTools. public class SvgTools; extends Object; Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. Constructor Summary; Constructors. Constructor; Description; SvgTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; writeViewerSnapshot(QuPathViewer viewer,; File fileSVG). Write an SVG image representing the contents of the specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgTools; public SvgTools(). Method Details. writeViewerSnapshot; public static void writeViewerSnapshot(QuPathViewer viewer,; File fileSVG); throws IOException; Write an SVG image representing the contents of the specified viewer. Parameters:; viewer - the viewer to render; fileSVG - SVG file for the export; should have the extension "".svg""; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html:1180,hash,hashCode,1180,javadoc/docs/qupath/lib/extension/svg/SvgTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.html,1,['hash'],['hashCode']
Security,". TMAExplorer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMAExplorer. java.lang.Object; qupath.lib.gui.tma.TMAExplorer. All Implemented Interfaces:; Runnable. public class TMAExplorer; extends Object; implements Runnable; The aim of this is to enable the exploration of TMA data from multiple images in a project.; ; In the end, it might not last... since this overlaps considerably with the aim of the TMASummaryViewer.; ; Therefore currently its primary task is to simply launch the TMASummaryViewer with the data it has gathered. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAExplorer(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAExplorer; public TMAExplorer(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html:1164,hash,hashCode,1164,javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMAExplorer.html,1,['hash'],['hashCode']
Security,". TMAMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions. All Implemented Interfaces:; MenuActions. public class TMAMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html:1015,hash,hashCode,1015,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.html,1,['hash'],['hashCode']
Security,". TMAMenuActions.Actions.AddActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.AddActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.AddActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ADD_COLUMN_AFTER;  ; final org.controlsfx.control.action.Action; ADD_COLUMN_BEFORE;  ; final org.controlsfx.control.action.Action; ADD_ROW_AFTER;  ; final org.controlsfx.control.action.Action; ADD_ROW_BEFORE;  . Constructor Summary; Constructors. Constructor; Description; AddActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ADD_ROW_BEFORE; @ActionConfig(""Action.TMA.addRowAbove""); public final org.controlsfx.control.action.Action ADD_ROW_BEFORE. ADD_ROW_AFTER; @ActionConfig(""Action.TMA.addRowBelow""); public final org.controlsfx.control.action.Action ADD_ROW_AFTER. ADD_COLUMN_BEFORE; @ActionConfig(""Action.TMA.addColumnBefore""); public final org.controlsfx.control.action.Action ADD_COLUMN_BEFORE. ADD_COLUMN_AFTER; @ActionConfig(""Action.TMA.addColumnAfter""); public final org.controlsfx.control.action.Action ADD_COLUMN_AFTER. Constructor Details. AddActions; public AddActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html:1109,hash,hashCode,1109,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.AddActions.html,1,['hash'],['hashCode']
Security,". TMAMenuActions.Actions.RemoveActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class TMAMenuActions.Actions.RemoveActions. java.lang.Object; qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions. Enclosing class:; TMAMenuActions.Actions. public class TMAMenuActions.Actions.RemoveActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; REMOVE_ROW;  . Constructor Summary; Constructors. Constructor; Description; RemoveActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. REMOVE_ROW; @ActionConfig(""Action.TMA.removeRow""); public final org.controlsfx.control.action.Action REMOVE_ROW. REMOVE_COLUMN; @ActionConfig(""Action.TMA.removeColumn""); public final org.controlsfx.control.action.Action REMOVE_COLUMN. Constructor Details. RemoveActions; public RemoveActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html:989,hash,hashCode,989,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.RemoveActions.html,1,['hash'],['hashCode']
Security,". TileExporter; region(ImageRegion region). Define the region to be processed. TileExporter; region(RegionRequest region). Define the region to be processed, including downsample. TileExporter; requestedPixelSize(double pixelSize). Define resolution as a pixel size in calibrated units. TileExporter; tileSize(int tileSize). Define the tile size in pixel units at the export resolution. TileExporter; tileSize(int tileWidth,; int tileHeight). Define the horizontal and vertical tile size in pixel units at the export resolution. TileExporter; tRange(int minT,; int maxT). Define the range of timepoints to process. TileExporter; useROIBounds(boolean fullROIs). Optionally use the full ROI for parent objects, rather than tileSize(int, int). void; writeTiles(String dirOutput). Export the image tiles to the specified directory. TileExporter; zRange(int minZ,; int maxZ). Define the range of Z-slices to process. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TileExporter; public TileExporter(ImageData<BufferedImage> imageData); Create a builder to export tiles. Parameters:; imageData - . Method Details. parentObjects; public TileExporter parentObjects(Predicate<PathObject> filter); Specify a filter to extract parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; filter - ; Returns:; this exporter; See Also:. parentObjects(Collection); useROIBounds(boolean); includePartialTiles(boolean). parentObjects; public TileExporter parentObjects(Collection<? extends PathObject> parentObjects); Specify parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:4029,hash,hashCode,4029,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['hash'],['hashCode']
Security,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:910,hash,hashCode,910,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,1,['hash'],['hashCode']
Security,". UpdateChecker (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker. public class UpdateChecker; extends Object; Helper class to query for updates using GitHub's web API. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UpdateChecker.ReleaseVersion. Class to represent a release version. Constructor Summary; Constructors. Constructor; Description; UpdateChecker();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; checkForUpdate(). Query the most recent QuPath release on GitHub. static UpdateChecker.ReleaseVersion; checkForUpdate(GitHubProject.GitHubRepo repository). Query the latest release from a GitHub repo. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. UpdateChecker; public UpdateChecker(). Method Details. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(); throws URISyntaxException,; IOException,; InterruptedException; Query the most recent QuPath release on GitHub. Returns:; the latest release version, or null if this could not be determined; Throws:; URISyntaxException; IOException; InterruptedException. checkForUpdate; public static UpdateChecker.ReleaseVersion checkForUpdate(GitHubProject.GitHubRepo repository); throws URISyntaxException,; IOException,; InterruptedException; Query the latest release from a GitHub repo. Parameters:; repository - ; Returns:; Throws:; URISyntaxException; IOException; InterruptedException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html:1205,hash,hashCode,1205,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.html,1,['hash'],['hashCode']
Security,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:1208,hash,hashCode,1208,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,1,['hash'],['hashCode']
Security,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:818,access,access,818,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['access'],['access']
Security,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:596,access,access,596,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,5,"['access', 'hash']","['access', 'hashCode']"
Security,". UriUpdater.UriStatus (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.io; Enum Class UriUpdater.UriStatus. java.lang.Object; java.lang.Enum<UriUpdater.UriStatus>; qupath.lib.io.UriUpdater.UriStatus. All Implemented Interfaces:; Serializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:803,access,accessible,803,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,1,['access'],['accessible']
Security,". ViewMenuActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions. All Implemented Interfaces:; MenuActions. public class ViewMenuActions; extends Object; implements MenuActions. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ViewMenuActions.Actions;  ; class ; ViewMenuActions.CellDisplayActions;  ; class ; ViewMenuActions.MultitouchActions;  ; class ; ViewMenuActions.MultiviewActions;  ; class ; ViewMenuActions.MultiviewGridActions;  ; class ; ViewMenuActions.ZoomActions;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; List<org.controlsfx.control.action.Action>; getActions(). Get all the actions to include in the menu, in order. String; getName(). Get the name of the menu. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getActions; public List<org.controlsfx.control.action.Action> getActions(); Description copied from interface: MenuActions; Get all the actions to include in the menu, in order. Specified by:; getActions in interface MenuActions; Returns:. getName; public String getName(); Description copied from interface: MenuActions; Get the name of the menu. Specified by:; getName in interface MenuActions; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html:1247,hash,hashCode,1247,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.html,1,['hash'],['hashCode']
Security,". ViewMenuActions.CellDisplayActions (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.CellDisplayActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.CellDisplayActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.CellDisplayActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES;  ; final org.controlsfx.control.action.Action; SHOW_CELL_BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  . Constructor Summary; Constructors. Constructor; Description; CellDisplayActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_CELL_BOUNDARIES; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES_AND_NUCLEI. SHOW_CELL_CENTROIDS; public final org.controlsfx.control.action.Action SHOW_CELL_CENTROIDS. Constructor Details. CellDisplayActions; public CellDisplayActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html:1140,hash,hashCode,1140,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.CellDisplayActions.html,1,['hash'],['hashCode']
Security,". ViewTrackerControlPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerControlPane. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerControlPane. All Implemented Interfaces:; Runnable. public class ViewTrackerControlPane; extends Object; implements Runnable; Panel for viewing ViewTracker controls.; ; This add buttons to start/stop recording and playback and view/export recorded data. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ViewTrackerControlPane(QuPathGUI qupath). Create a ViewTrackerControlPane. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ViewTrackerControlPane; public ViewTrackerControlPane(QuPathGUI qupath); Create a ViewTrackerControlPane. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html:1098,hash,hashCode,1098,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerControlPane.html,1,['hash'],['hashCode']
Security,". ViewTrackerDataMap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.recording; Class ViewTrackerDataMap. java.lang.Object; qupath.lib.gui.viewer.recording.ViewTrackerDataMap. public class ViewTrackerDataMap; extends Object; Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. Author:; Melvin Gelbard. Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html:763,hash,hashCode,763,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTrackerDataMap.html,1,['hash'],['hashCode']
Security,". WandToolEventHandler.WandPreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class WandToolEventHandler.WandPreferences. java.lang.Object; qupath.process.gui.WandToolEventHandler.WandPreferences. Enclosing class:; WandToolEventHandler. @PrefCategory(""Prefs.Drawing""); public static class WandToolEventHandler.WandPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; useOverlays;  ; final DoubleProperty; wandSensitivity;  ; final DoubleProperty; wandSigma;  ; final ObjectProperty<WandToolEventHandler.WandType>; wandType;  . Constructor Summary; Constructors. Constructor; Description; WandPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. wandType; @Pref(value=""Prefs.Drawing.wandType"",; type=WandType.class); public final ObjectProperty<WandToolEventHandler.WandType> wandType. wandSigma; @DoublePref(""Prefs.Drawing.wandSigma""); public final DoubleProperty wandSigma. wandSensitivity; @DoublePref(""Prefs.Drawing.wandSensivity""); public final DoubleProperty wandSensitivity. useOverlays; @BooleanPref(""Prefs.Drawing.wandUseOverlays""); public final BooleanProperty useOverlays. Constructor Details. WandPreferences; public WandPreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html:1070,hash,hashCode,1070,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandPreferences.html,1,['hash'],['hashCode']
Security,". WebViews (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class WebViews. java.lang.Object; qupath.lib.gui.tools.WebViews. public class WebViews; extends Object; Helper class for creating a WebView in a standardized way. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WebViews();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; bindUserStylesheetToStyle(WebEngine engine). Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. static WebView; create(boolean bindStylesheetToStyle). Create a new WebView. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WebViews; public WebViews(). Method Details. create; public static WebView create(boolean bindStylesheetToStyle); Create a new WebView. Parameters:; bindStylesheetToStyle - if true, update the user stylesheet location for the WebEngine automatically based on; the current QuPath style (e.g. dark mode); Returns:; Since:; v0.4.0; See Also:. bindUserStylesheetToStyle(WebEngine). bindUserStylesheetToStyle; public static void bindUserStylesheetToStyle(WebEngine engine); Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. light or dark mode, serif or sans-serif fonts). Parameters:; engine - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html:1067,hash,hashCode,1067,javadoc/docs/qupath/lib/gui/tools/WebViews.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/WebViews.html,1,['hash'],['hashCode']
Security,". WelcomeStage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class WelcomeStage. java.lang.Object; qupath.lib.gui.WelcomeStage. public class WelcomeStage; extends Object; Welcome page when launching QuPath.; ; Currently this is undecorated; it can be closed by pressing 'Get started' ; (either with mouse or spacebar), double-clicking in the dialog, or pressing escape. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WelcomeStage();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stage; getInstance(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WelcomeStage; public WelcomeStage(). Method Details. getInstance; public static Stage getInstance(QuPathGUI qupath). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html:1009,hash,hashCode,1009,javadoc/docs/qupath/lib/gui/WelcomeStage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/WelcomeStage.html,1,['hash'],['hashCode']
Security,". boolean; isDerivedClass(). Returns true if #getParentClass() != null. boolean; isDerivedFrom(PathClass parentClass). Returns true if this class, or any ancestor class, is equal to the specified parent class. boolean; isValid(). A PathClass is valid if its name is not null. protected Object; readResolve(). Called during deserialization to ensure that only a single instance of each PathClass exists. void; setColor(int red,; int green,; int blue). Set the color as 8-bit RGB values. void; setColor(Integer colorRGB). Set the color that should be used to display objects with this classification. Set<String>; toSet(). Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names. String; toString();  ; String; toString(String delimiter). Create a string representation, using the specified delimiter between ; elements of derived PathClasses. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. NAME_POSITIVE; public static final String NAME_POSITIVE; Default name for a class representing ""Positive"" staining intensity. See Also:. Constant Field Values. NAME_NEGATIVE; public static final String NAME_NEGATIVE; Default name for a class representing ""Negative"" staining intensity. See Also:. Constant Field Values. NAME_ONE_PLUS; public static final String NAME_ONE_PLUS; Default name for a class representing ""1+"" staining intensity (i.e. weakly positive). See Also:. Constant Field Values. NAME_TWO_PLUS; public static final String NAME_TWO_PLUS; Default name for a class representing ""2+"" staining intensity (i.e. moderately positive). See Also:. Constant Field Values. NAME_THREE_PLUS; public static final String NAME_THREE_PLUS; Default name for a class representing ""3+"" staining intensity (i.e. strongly positive). See Also:. Constant Field Values. DELIMITER; public static final String DELIMITER; Get the delimiter to use betwe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:6022,hash,hashCode,6022,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['hash'],['hashCode']
Security,". boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary sele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:2620,hash,hashCode,2620,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['hash'],['hashCode']
Security,. qupath.imagej.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.imagej.tools. package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. Classes. Class; Description; IJTools. Collection of static methods to help with using ImageJ with QuPath. PixelImageIJ. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html:628,access,access,628,javadoc/docs/qupath/imagej/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/package-summary.html,1,['access'],['access']
Security,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:1211,access,accessing,1211,javadoc/docs/qupath/lib/analysis/images/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html,2,['access'],"['access', 'accessing']"
Security,". qupath.lib.gui Class Hierarchy (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. SEARCH. Hierarchy For Package qupath.lib.gui. Package Hierarchies:. All Packages. Class Hierarchy. java.lang.Object. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.gui.TaskRunnerFX. javafx.application.Application. qupath.lib.gui.QuPathApp. qupath.lib.gui.BuildInfo; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.ExtensionManager; qupath.lib.gui.FileCopier; qupath.lib.gui.JavadocViewer; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.layout.Pane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.lib.gui.QuPathGUI; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.gui.ToolManager; qupath.lib.gui.UndoRedoManager (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.gui.viewer.QuPathViewerListener); qupath.lib.gui.Urls; qupath.lib.gui.UserDirectoryManager; qupath.lib.gui.WelcomeStage. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html:514,secur,security,514,javadoc/docs/qupath/lib/gui/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-tree.html,1,['secur'],['security']
Security,". qupath.lib.gui.scripting (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting. package qupath.lib.gui.scripting. Scripting through the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; DefaultScriptEditor. Default multilingual script editor. EditableText. Interface for objects that manage editable text, including a caret position and selection. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T extends Region>. Basic script editor control using JavaFX. ScriptTab. Class representing a script tab (e.g. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html:1278,access,access,1278,javadoc/docs/qupath/lib/gui/scripting/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/package-summary.html,1,['access'],['access']
Security,". qupath.lib.gui.tools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.tools. package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. All Classes and InterfacesClassesEnum Classes. Class; Description; ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. DocGenerator. Command line tool to export icons and markdown documentation for QuPath commands. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MenuTools. Static methods to help with creating and populating JavaFX menus. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PathObjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html:804,access,access,804,javadoc/docs/qupath/lib/gui/tools/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/package-summary.html,1,['access'],['access']
Security,. qupath.lib.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images. package qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. PathImage<T>. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-summary.html:525,access,accessing,525,javadoc/docs/qupath/lib/images/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/package-summary.html,1,['access'],['accessing']
Security,". qupath.lib.images.servers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers. package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath.; ; ImageServer is the key interface for ; requesting pixels and metadata.; Implementations may be backed by specific image reading libraries, or optionally wrap around other ; ImageServers to perform additional transforms. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.writers. Supports for writing images of various kinds in various ways. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:393,access,accessing,393,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,1,['access'],['accessing']
Security,. qupath.lib.images.servers.bioformats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.bioformats. package qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). Classes. Class; Description; BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavior of the BioFormatsImageServer. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html:570,access,accessing,570,javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/package-summary.html,1,['access'],['accessing']
Security,. qupath.lib.images.servers.openslide (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.servers.openslide. package qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). Related Packages. Package; Description; qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). Classes. Class; Description; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenslideServerBuilder. Builder for Openslide ImageServer. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html:544,access,accessing,544,javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/package-summary.html,1,['access'],['accessing']
Security,". qupath.lib.images.writers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.images.writers. package qupath.lib.images.writers. Supports for writing images of various kinds in various ways. Related Packages. Package; Description; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. All Classes and InterfacesInterfacesClasses. Class; Description; ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. PngWriter. ImageWriter implementation to write PNG images using ImageIO. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/package-summary.html:684,access,accessing,684,javadoc/docs/qupath/lib/images/writers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/package-summary.html,2,['access'],"['access', 'accessing']"
Security,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:1425,access,access,1425,javadoc/docs/qupath/lib/io/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html,1,['access'],['access']
Security,".LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1694,hash,hashCode,1694,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['hash'],['hashCode']
Security,".Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.plugins.CommandLineTaskRunner. All Implemented Interfaces:; TaskRunner. public class CommandLineTaskRunner; extends AbstractTaskRunner; A PluginRunner that simply logs progress and output.; ; This doesn't need to be run on any particular thread (e.g. the JavaFX Application thread). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Constructor Summary; Constructors. Constructor; Description; CommandLineTaskRunner(). Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int nThreads). Constructor for a PluginRunner that send progress to a log. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled, postProcess, runTasks. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineTaskRunner; public CommandLineTaskRunner(); Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner; public CommandLineTaskRunner(int nThreads); Constructor for a PluginRunner that send progress to a log. Parameters:; nThreads - the number of threads to use when running tasks. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html:1676,hash,hashCode,1676,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.html,1,['hash'],['hashCode']
Security,".action.Action; OBJECT_IMPORT;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE_OR_URL;  ; final FileMenuActions.ProjectActions; projectActions;  ; final org.controlsfx.control.action.Action; QUIT;  ; final org.controlsfx.control.action.Action; RELOAD_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA_AS;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final FileMenuActions.TmaActions; tmaActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. projectActions; @ActionMenu(""Menu.File.Project""); public final FileMenuActions.ProjectActions projectActions. SEP_3; public final org.controlsfx.control.action.Action SEP_3. OPEN_IMAGE; @ActionConfig(""Action.File.open""); @ActionAccelerator(""shortcut+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE. OPEN_IMAGE_OR_URL; @ActionConfig(""Action.File.openUri""); @ActionAccelerator(""shortcut+shift+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE_OR_URL. RELOAD_DATA; @ActionConfig(""Action.File.reloadData""); @ActionAccelerator(""shortcut+r""); public final org.controlsfx.control.action.Action RELOAD_DATA. SEP_4; public final org.controlsfx.control.action.Action SEP_4. SAVE_DATA_AS; @ActionConfig(""Action.File.saveAs""); @ActionAccelerator(""shortcut+shift+s""); public final org.controlsfx.control.action.Action SAVE_DATA_AS. SAVE_DATA; @ActionConfig(""Action.File.save""); @ActionAccelerator(""shortcut+s""); pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html:1877,hash,hashCode,1877,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,1,['hash'],['hashCode']
Security,".actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:1530,hash,hashCode,1530,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,1,['hash'],['hashCode']
Security,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.PaddedOp. java.lang.Object; qupath.opencv.ops.ImageOps.PaddedOp. All Implemented Interfaces:; UriResource, ImageOp. Enclosing class:; ImageOps. public abstract static class ImageOps.PaddedOp; extends Object; implements ImageOp; Abstract ImageOp to simplify the process of handling padding. Constructor Summary; Constructors. Constructor; Description; PaddedOp();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. protected abstract Padding; calculatePadding(). Calculate the required padding. Padding; getPadding(). Get the padding requested for this operation. protected abstract List<Mat>; transformPadded(Mat input). Apply the op, but ignoring padding. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.ops.ImageOp; getChannels, getOutputType, getURIs, updateURIs. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. PaddedOp; public PaddedOp(). Method Details. calculatePadding; protected abstract Padding calculatePadding(); Calculate the required padding. Returns:. transformPadded; protected abstract List<Mat> transformPadded(Mat input); Apply the op, but ignoring padding.; Non-empty padding will be removed automatically elsewhere.; ; This should return a list rather than merged channels, because this makes it possible to strip the padding; before merging to create the final output to apply(Mat) (since this can be much more efficient).; ; Nevertheless, if the output channels are already merged, then a singleton list should be returned -; there is no need to split channels, because the list items themselves can have any number of channels. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html:1235,hash,hashCode,1235,javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.PaddedOp.html,1,['hash'],['hashCode']
Security,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriterCommand. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriterCommand. All Implemented Interfaces:; Runnable. public class OMEPyramidWriterCommand; extends Object; implements Runnable; OME TIFF writer command capable of exporting image pyramids based on QuPath ImageServers.; ; Note this requires Bio-Formats v6.0.0 or later. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; OMEPyramidWriterCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.CompressionType; getDefaultPyramidCompression(). Query the default compression type when writing OME-TIFF images. static int; getDefaultTileSize(). Query the default tile size when writing OME-TIFF images. static int; getMinSizeForTiling(). Query the default minimum image size when writing OME-TIFF images. void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OMEPyramidWriterCommand; public OMEPyramidWriterCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. getDefaultPyramidCompression; public static OMEPyramidWriter.CompressionType getDefaultPyramidCompression(); Query the default compression type when writing OME-TIFF images. Returns:. getDefaultTileSize; public static int getDefaultTileSize(); Query the default tile size when writing OME-TIFF images. Returns:. getMinSizeForTiling; public static int getMinSizeForTiling(); Query the default minimum image size when writing OME-TIFF images.; This is used as a hint to disable tiling for images with widths and heights smaller than this value. Returns:. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html:1422,hash,hashCode,1422,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriterCommand.html,1,['hash'],['hashCode']
Security,"; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class JsonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler. All Implemented Interfaces:; ScriptStyler. public class JsonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on JSON syntax. Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html:1133,hash,hashCode,1133,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,1,['hash'],['hashCode']
Security,"; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1983,hash,hashCode,1983,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['hash'],['hashCode']
Security,"; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3526,hash,hashCode,3526,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['hash'],['hashCode']
Security,"; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:1687,hash,hashCode,1687,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,1,['hash'],['hashCode']
Security,"; Serializable, ScriptableWorkflowStep, WorkflowStep. public class DefaultScriptableWorkflowStep; extends Object; implements ScriptableWorkflowStep; A scriptable workflow step where the script is provided directly as an argument. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; DefaultScriptableWorkflowStep(String name,; String script). Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script). Constructor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html:1507,hash,hashCode,1507,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,1,['hash'],['hashCode']
Security,"; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live measurements.; ; Note that this method is subject to change (in location an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3384,hash,hashCode,3384,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['hash'],['hashCode']
Security,"; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (normalized) stain vector. boolean; isResidual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public double getRed(); Get the red component of the (normalized) stain vecto",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:2481,hash,hashCode,2481,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['hash'],['hashCode']
Security,"; final org.controlsfx.control.action.Action; MEASURE_TMA;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; PROJECT_ADD_IMAGES;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SHOW_ANALYSIS_PANE;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  ; final org.controlsfx.control.action.Action; SHOW_POINTS_DIALOG;  ; final org.controlsfx.control.action.Action; TMA_ADD_NOTE;  . Constructor Summary; Constructors. Constructor; Description; CommonActions(QuPathGUI qupath);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; QuPathGUI; getQuPath(). Get the QuPath instance associated with these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_ADD_IMAGES; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_ADD_IMAGES. BRIGHTNESS_CONTRAST; @ActionIcon(CONTRAST); @ActionAccelerator(""shift+c""); @ActionConfig(""CommonActions.showBrightnessContrast""); public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SHOW_POINTS_DIALOG; @ActionIcon(POINTS_TOOL); @ActionConfig(""CommonActions.showCountingTool""); public final org.controlsfx.control.action.Action SHOW_POINTS_DIALOG. TMA_ADD_NOTE; @ActionConfig(""CommonActions.addTMANote""); public final org.controlsfx.control.action.Action TMA_ADD_NOTE. CONVEX_POINTS; @ActionConfig(""CommonActions.showPoin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html:2219,hash,hashCode,2219,javadoc/docs/qupath/lib/gui/actions/CommonActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/CommonActions.html,1,['hash'],['hashCode']
Security,"; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3155,hash,hashCode,3155,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['hash'],['hashCode']
Security,"; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:2322,hash,hashCode,2322,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,1,['hash'],['hashCode']
Security,"; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian sigma value used to smooth the image when applying the wand. See Also:. getWandSigmaPixels(); setWandSigmaPixels(double); wandSigmaPixelsProperty(). wandSensitivity; public static DoubleProperty wandSensitivityProperty; Property representing the wand sensitivity value, which influences how similar local intensity values must be for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:5486,hash,hashCode,5486,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,1,['hash'],['hashCode']
Security,">; readAllMats(Path path). Read a all Mats from an .npy or .npz path. static Map<String,Mat>; readAllMats(Path path,; boolean squeezeDimensions). Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. static Mat; readMat(InputStream stream,; boolean squeezeDimensions). Read a single Mat from an input stream, which should follow the .npy file format specification. static Mat; readMat(String path). Read a single Mat from an .npy or .npz file. static Mat; readMat(String path,; boolean squeezeDimensions). Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. static Mat; readMat(Path path). Read an OpenCV Mat from a Numpy .npy file. static Mat; readMat(Path path,; boolean squeezeDimensions). Read an OpenCV Mat from a Numpy .npy file, optionally squeezing singleton dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. NumpyTools; public NumpyTools(). Method Details. readMat; public static Mat readMat(String path); throws IOException; Read a single Mat from an .npy or .npz file. Parameters:; path - ; Returns:; Throws:; IOException. readMat; public static Mat readMat(String path,; boolean squeezeDimensions); throws IOException; Read a single Mat from an .npy or .npz file, optionally squeezing singleton dimensions. Parameters:; path - path to the .npy file; squeezeDimensions - if true, squeeze singleton dimensions; Returns:; Throws:; IOException. readAllMats; public static Map<String,Mat> readAllMats(String path); throws IOException; Read a all Mats from an .npy or .npz file.; This will be a single Mat for .npy but may be multiple for .npz. Parameters:; path - path to the file; Returns:; a map with mat names (from file/entry names) and their corresponding Mats; Throws:; IOException. readAllMats; public static Map<String,Mat> readAll",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html:2340,hash,hashCode,2340,javadoc/docs/qupath/opencv/tools/NumpyTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/NumpyTools.html,1,['hash'],['hashCode']
Security,"All Implemented Interfaces:; Serializable, Comparable<PathPrefs.FontSize>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.FontSize; extends Enum<PathPrefs.FontSize>; Enum to control font size. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; HUGE;  ; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getFontSize(). Get the font size as a CSS-compatible string. String; toString();  ; static PathPrefs.FontSize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.FontSize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathPrefs.FontSize TINY. SMALL; public static final PathPrefs.FontSize SMALL. MEDIUM; public static final PathPrefs.FontSize MEDIUM. LARGE; public static final PathPrefs.FontSize LARGE. HUGE; public static final PathPrefs.FontSize HUGE. Method Details. values; public static PathPrefs.FontSize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.FontSize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html:1545,hash,hashCode,1545,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.FontSize.html,1,['hash'],['hashCode']
Security,"AreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Colle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5776,hash,hashCode,5776,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['hash'],['hashCode']
Security,"BOUNDARIES_AND_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CELL_CENTROIDS;  ; final org.controlsfx.control.action.Action; SHOW_CELL_NUCLEI;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  . Constructor Summary; Constructors. Constructor; Description; OverlayActions(OverlayOptions overlayOptions);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OverlayOptions; getOverlayOptions(). Get the overlay options controlled by these actions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_GRID; @ActionIcon(GRID); @ActionAccelerator(""shift+g""); @ActionConfig(""OverlayActions.showCountingGrid""); public final org.controlsfx.control.action.Action SHOW_GRID. GRID_SPACING; @ActionConfig(""OverlayActions.setCountingGridSpacing""); public final org.controlsfx.control.action.Action GRID_SPACING. SHOW_PIXEL_CLASSIFICATION; @ActionIcon(PIXEL_CLASSIFICATION); @ActionAccelerator(""c""); @ActionConfig(""OverlayActions.showPixelOverlay""); public final org.controlsfx.control.action.Action SHOW_PIXEL_CLASSIFICATION. SHOW_CELL_BOUNDARIES; @ActionIcon(CELL_ONLY); @ActionConfig(""OverlayActions.showCellBoundaries""); public final org.controlsfx.control.action.Action SHOW_CELL_BOUNDARIES. SHOW_CELL_NUCLEI; @ActionIcon(NUCLEI_ONLY); @ActionConfig(""OverlayActions.showCellNuclei""); public final org.controlsfx.control.action.Action SHOW_CELL_NUCLEI. SHOW_CELL_BOUNDARIES_AND_NUCLEI; @ActionIcon(CELL_NUCLEI_BOTH); @ActionConfig(""Overla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html:2091,hash,hashCode,2091,javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/OverlayActions.html,1,['hash'],['hashCode']
Security,"BatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:2402,hash,hashCode,2402,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['hash'],['hashCode']
Security,"Bounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html:2648,hash,hashCode,2648,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,1,['hash'],['hashCode']
Security,"Builder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; ImageJServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJServerBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:1926,hash,hashCode,1926,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,1,['hash'],['hashCode']
Security,"Cell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectLabels; public PathObjectLabels(). Method Details. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(); Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. Returns:. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(Function<PathObject,String> stringExtractor); Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. Parameters:; stringExtractor - ; Returns:. createListCell; public static ListCell<PathObject> createListCell(); Create a ListCell for displaying a PathObject using the default PathObject.toString() method. Returns:. createListCell; public static ListCell<PathObject> createListCell(Function<PathObject,String> stringExtractor); Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. Parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html:2168,hash,hashCode,2168,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,1,['hash'],['hashCode']
Security,"Classifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter to accept all detection objects only. Returns:; this builder. threshold",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:3886,hash,hashCode,3886,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,1,['hash'],['hashCode']
Security,"Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Acc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2272,hash,hashCode,2272,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['hash'],['hashCode']
Security,"Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class OpenCVTools.IndexedPixel. java.lang.Object; qupath.opencv.tools.OpenCVTools.IndexedPixel. Enclosing class:; OpenCVTools. public static class OpenCVTools.IndexedPixel; extends Object; Class representing the indices of a pixel and its value.; This has considerable overhead, so should be used sparingly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; distanceSq(OpenCVTools.IndexedPixel p2). Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. int; getC(). Get channel index. long[]; getInds(). Get the index array. double; getValue(). Get the value stored internally for this pixel. double; getValue(Indexer idx). Get the value from another image via its Indexer. int; getX(). Get x index. int; getY(). Get y index. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getX; public int getX(); Get x index. Returns:. getY; public int getY(); Get y index. Returns:. getC; public int getC(); Get channel index. Returns:. getInds; public long[] getInds(); Get the index array. Note that this returns a clone of the array. Returns:; See Also:. getValue(Indexer). getValue; public double getValue(); Get the value stored internally for this pixel. Returns:. getValue; public double getValue(Indexer idx); Get the value from another image via its Indexer.; This is equivalent to Indexer.getDouble(IndexedPixel.getInds()) but avoids copying the inds array. Parameters:; idx - ; Returns:. distanceSq; public long distanceSq(OpenCVTools.IndexedPixel p2); Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. Parameters:; p2 - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html:1296,hash,hashCode,1296,javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.IndexedPixel.html,1,['hash'],['hashCode']
Security,"Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j); Record coocurrence for a (binned) value pair with 45 degree rotation. Parameters:; i - ; j - . put90; public void put90(int i,; int j); Record coocurrence for a (binned) value pair with 90 degree rotation. Parameters:; i - ; j - . put135; public void put135(int i,; int j); Record coocurrence for a (binned) value pair with 135 degree rotation. Parameters:; i - ; j - . computeFeatures; public void computeFeatures(); Compute features. getMeanFeatures; public HaralickFeatures getMeanFeatures(); Compute averaged features over all four rotations. Returns:. getMinFeatures; public HaralickFeatures getMinFeatures(); Compute ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html:1618,hash,hashCode,1618,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,1,['hash'],['hashCode']
Security,"DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.scripting.languages.ExecutableLanguage; execute. Constructor Details. GroovyLanguage; public GroovyLanguage(); Constructor for Groovy Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static GroovyLanguage getInstance(); Get the static instance of this class. Returns:; instance. getImportStatementGenerator; protected DefaultScriptLanguage.ImportStatementGenerator getImportStatementGenerator(); Description copied from class: DefaultScriptLanguage; Get an DefaultScriptLanguage.ImportStatementGenerator.; This attempts to make an educated guess, returning JAVA_IMPORTER or PYTHON_IMPORTER based on the ; name. Overrides:; getImportStatementGenerator in class DefaultScriptLanguage; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html:2130,hash,hashCode,2130,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,1,['hash'],['hashCode']
Security,"Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.classes; Class PathClass. java.lang.Object; qupath.lib.objects.classes.PathClass. All Implemented Interfaces:; Serializable, Comparable<PathClass>. public final class PathClass; extends Object; implements Comparable<PathClass>, Serializable; Representation of an object's classification - which can be defined using any unique string; identifier (e.g. tumour, lymphocyte, gland, benign, malignant).; ; The constructors in this class should never be called directly, because there should only ever; be one instance of each classification - ; shared among all objects with that classification.; This is important for checking if classifications are identical, and also assigning colors to them for display.; ; To achieve this, be sure to use one of the getInstance() or fromXXX() methods each time; you want to access or create a new PathClass instance.; ; This class has been with QuPath since the beginning, but was thoroughly revised for v0.4.0 to simplify the code,; improve the validation, and make it easier to use. Author:; Pete Bankhead; See Also:. PathClassFactory; Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PathClass.StandardPathClasses. Enum representing standard classifications. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DELIMITER. Get the delimiter to use between names of the PathClass when converting to a string. static final String; NAME_NEGATIVE. Default name for a class representing ""Negative"" staining intensity. static final String; NAME_ONE_PLUS. Default name for a class representing ""1+"" staining intensity (i.e. static final String; NAME_POSITIVE. Default name for a class representing ""Positive"" staining intensity. static final String; NAME_TH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:1160,access,access,1160,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['access'],['access']
Security,"DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html:1222,hash,hashCode,1222,javadoc/docs/qupath/opencv/dnn/DnnModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html,1,['hash'],['hashCode']
Security,"DocsUrl(String) - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). getView() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the main JavaFX component representing this viewer. getViewer() - Method in class qupath.lib.gui.QuPathGUI. Get the currently active viewer. getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; getViewer() - Method in class qupath.process.gui.WandToolEventHandler;  ; getViewerActions() - Method in class qupath.lib.gui.QuPathGUI. Get the associations associated with QuPath image viewers. getViewerManager() - Method in class qupath.lib.gui.actions.ViewerActions;  ; getViewerManager() - Method in class qupath.lib.gui.QuPathGUI. Get the viewer manager, which gives access to all the viewers available within this QuPath instance. getVoronoiFaces() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces as JTS Geometry objects. getVoronoiROIs(Geometry) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces, convered to ROI objects. getWandSensitivity() - Static method in class qupath.process.gui.WandToolEventHandler. Query the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. getWandSigmaPixels() - Static method in class qupath.process.gui.WandToolEventHandler. Query the Gaussian sigma value used to smooth the image when applying the wand. getWandUseOverlays() - Static method in class qupath.process.gui.WandToolEventHandler. Query whether the wand tool should be influenced by pixel values painted on image overlays. getWidth() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getWidth() - Method in interface qupath.lib.analy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:551653,access,access,551653,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TUMOR; public static final PathClassFactory.StandardPathClasses TUMOR; Tumor classification. STROMA; public static final PathClassFactory.StandardPathClasses STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClassFactory.StandardPathClasses IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClassFactory.StandardPathClasses IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClassFactory.StandardPathClasses IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClassFactory.StandardPathClasses NECROSIS; Necrosis classification. OTHER; public static final PathClassFactory.StandardPathClasses OTHER; Other classification. REGION; public static final PathClassFact",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:2086,hash,hashCode,2086,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,1,['hash'],['hashCode']
Security,"Event e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected boolean; preferReturnToMove(). Returns false. protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrushToolEventHandler; public BrushToolEventHandler(). Method Details. preferReturnToMove; protected boolean preferReturnToMove(); Returns false. Returns:. getRequestedCursor; protected Cursor getRequestedCursor(). mouseExited; public void mouseExited(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). isSubtractMode; protected boolean isSubtractMode(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). getBrushDiameter; protected double getBrushDiameter(). createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape); Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. Parameters:; e - ; x - ; y - ; useTiles - I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html:3163,hash,hashCode,3163,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,1,['hash'],['hashCode']
Security,"ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions director",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1406,hash,hashCode,1406,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,1,['hash'],['hashCode']
Security,"Features(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2521,hash,hashCode,2521,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['hash'],['hashCode']
Security,"ForLocale(String, Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569087,hash,hashCode,569087,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"Format; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataFormat(); Get a DataFormat suitable for storing GeoJSON data on a clipboard. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read objects from the system clipboard. Parameters:; imageData - the image to w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1865,hash,hashCode,1865,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,1,['hash'],['hashCode']
Security,"Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custom function to calculate a location string for the overlay. void; setOpacity(double opacity). Set opacity between 0 (completely transparent) and 1 (completely opaque). void; setPreferredOverlayColor(Color color). Set a preferred overlay color, which the overlay may or may not make use of. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.overlays.PathOverlay; paintOverlay. Constructor Details. AbstractOverlay; protected AbstractOverlay(OverlayOptions options). Method Details. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options, which may influence the display of this overlay. Returns:. getAlphaComposite; protected AlphaComposite getAlphaComposite(). setAlphaComposite; protected void setAlphaComposite(Graphics2D g2d). isVisible; public boolean isVisible(); Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Returns:. setPreferredOverlayColor; public void setPreferredOverlayColor(Color color); Set a preferred overlay color, which the overlay may or may not make use of.; The aim is to provide a means to suggest drawing with a light color on a dark image, ; or a dark color on a light image. Parameters:; color - . getPreferre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:2372,hash,hashCode,2372,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,1,['hash'],['hashCode']
Security,"HT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING ; IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; . Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html:2727,hash,hashCode,2727,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,1,['hash'],['hashCode']
Security,"I. boolean; equals(Object obj);  ; int; getHeight(). Get the height of the region bounding box. ImagePlane; getImagePlane(). Get the z-slice and time point for this region as an ImagePlane. int; getMaxX(). Get the x coordinate of the bottom right of the region bounding box. int; getMaxY(). Get the y coordinate of the bottom right of the region bounding box. int; getMinX(). Get the x coordinate of the top left of the region bounding box. int; getMinY(). Get the y coordinate of the top left of the region bounding box. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). int; getT(). Get the time point index for the region. int; getWidth(). Get the width of the region bounding box. int; getX(). Get the x coordinate of the region bounding box (top left). int; getY(). Get the y coordinate of the region bounding box (top left). int; getZ(). Get the z-slice index for the region. int; hashCode();  ; boolean; intersects(double x2,; double y2,; double w2,; double h2). Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. boolean; intersects(ImageRegion request). Returns true if the region specified by this region overlaps with another. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static ImageRegion createInstance(int x,; int y,; int width,; int height,; int z,; int t); Create a region based on its bounding box coordinates, z-slice index and time point index. Parameters:; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static ImageRegion createInstance(ROI pathROI); Create the smallest region that completely contains a specified ROI. Parameters:; pathROI - ; Returns:. createInstance; public static ImageRegion createInstance(C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html:2293,hash,hashCode,2293,javadoc/docs/qupath/lib/regions/ImageRegion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html,1,['hash'],['hashCode']
Security,"IO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:1679,hash,hashCode,1679,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,1,['hash'],['hashCode']
Security,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2352,hash,hashCode,2352,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['hash'],['hashCode']
Security,"Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2557,hash,hashCode,2557,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['hash'],['hashCode']
Security,"Measurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name); Returns the enum constant of this class with the specified name.; The string must",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:1668,hash,hashCode,1668,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,1,['hash'],['hashCode']
Security,"Metadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public Buff",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:2693,hash,hashCode,2693,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['hash'],['hashCode']
Security,"Metadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:2209,hash,hashCode,2209,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['hash'],['hashCode']
Security,"Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1310,hash,hashCode,1310,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,1,['hash'],['hashCode']
Security,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluorescence image look more like a brightfield image,; and vice versa. Returns:. getChannels; public List<ChannelSettings> getChannels(); Get all the available channels. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:1351,hash,hashCode,1351,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,1,['hash'],['hashCode']
Security,"Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1782,hash,hashCode,1782,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,1,['hash'],['hashCode']
Security,"Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the text. Returns:. getText; public String getText(); Get the name of the comma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:2077,hash,hashCode,2077,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,1,['hash'],['hashCode']
Security,"Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3832,hash,hashCode,3832,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['hash'],['hashCode']
Security,"Object,; BiPredicate<PathObject,PathObject> predicate). Get a list of neighbors for a specified object, filtering out objects that do not meet specified criteria. ImagePlane; getImagePlane(). Get the ImagePlane for this subdivision. PathObject; getNearestNeighbor(PathObject pathObject). Get the nearest neighbor for the specified object. PathObject; getNearestNeighbor(PathObject pathObject,; BiPredicate<PathObject,PathObject> predicate). Get the nearest neighbor for the specified object, filtered by a predicate. List<PathObject>; getNeighbors(PathObject pathObject). Get all neighbors for a specified object. Collection<PathObject>; getPathObjects(). Get all the objects associated with this subdivision. Map<PathObject,Geometry>; getVoronoiFaces(). Get a map of Voronoi faces as JTS Geometry objects. Map<PathObject,ROI>; getVoronoiROIs(Geometry clip). Get a map of Voronoi faces, convered to ROI objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImagePlane; public ImagePlane getImagePlane(); Get the ImagePlane for this subdivision.; Because the subdivision is 2D, all object ROIs are expected to belong to the same plane. Returns:. getVoronoiFaces; public Map<PathObject,Geometry> getVoronoiFaces(); Get a map of Voronoi faces as JTS Geometry objects. Returns:; See Also:. getVoronoiROIs(Geometry). getVoronoiROIs; public Map<PathObject,ROI> getVoronoiROIs(Geometry clip); Get a map of Voronoi faces, convered to ROI objects. Parameters:; clip - optional region used to clip the total extent of the ROIs; Returns:; See Also:. getVoronoiFaces(). getPathObjects; public Collection<PathObject> getPathObjects(); Get all the objects associated with this subdivision. Returns:. getNearestNeighbor; public PathObject getNearestNeighbor(PathObject pathObject); Get the nearest neighbor for the specified object. Parameters:; pathObject - the object whose neighbor is requested; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html:2319,hash,hashCode,2319,javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,1,['hash'],['hashCode']
Security,"Object; Builder to help define how ROIs and Geometry objects should be converted. Constructor Summary; Constructors. Constructor; Description; Builder(). Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; GeometryTools.GeometryConverter; build(). Build a new converter with the specified parameters. GeometryTools.GeometryConverter.Builder; factory(GeometryFactory factory). Specify the GeometryFactory, which can define a precision model in JTS. GeometryTools.GeometryConverter.Builder; flatness(double flatness). Specify the flatness for any operation where a PathIterator is required. GeometryTools.GeometryConverter.Builder; pixelSize(double pixelWidth,; double pixelHeight). Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Method Details. pixelSize; public GeometryTools.GeometryConverter.Builder pixelSize(double pixelWidth,; double pixelHeight); Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). Parameters:; pixelWidth - ; pixelHeight - ; Returns:. flatness; public GeometryTools.GeometryConverter.Builder flatness(double flatness); Specify the flatness for any operation where a PathIterator is required. Parameters:; flatness - ; Returns:. factory; public GeometryTools.GeometryConverter.Builder factory(GeometryFactory factory); Specify the GeometryFactory, which can define a precision model in JTS. Parameters:; factory - ; Returns:. build; public GeometryTools.GeometryConverter build(); Build a new converter with the specified parameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html:1629,hash,hashCode,1629,javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.GeometryConverter.Builder.html,1,['hash'],['hashCode']
Security,"ObjectConnectionGroup(). Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections). Create a connections group, copying the connections from an existing group. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; containsObject(PathObject pathObject). Returns true if the specified PathObject is contained within this group. List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Collection<PathObject>; getPathObjectsForRegion(ImageRegion region). Get all the objects with connections that may intersect the specified region. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:2056,hash,hashCode,2056,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,1,['hash'],['hashCode']
Security,"ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3101,hash,hashCode,3101,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['hash'],['hashCode']
Security,"Optionally request that instance labels are shuffled. sigmaX(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the horizontal filter. sigmaXY(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values (x, y) to the same value. sigmaY(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the vertical filter. sigmaZ(double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, require",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975249,access,accessing,975249,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessing']
Security,"Overview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. Constructor Summary; Constructors. Constructor; Description; ViewerPlusDisplayOptions();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getShowLocation(). Get the value of showLocationProperty(). boolean; getShowOverview(). Get the value of showOverviewProperty(). boolean; getShowScalebar(). Get the value of showScalebarProperty(). void; setShowLocation(boolean show). Set the value of showLocationProperty(). void; setShowOverview(boolean show). Set the value of showOverviewProperty(). void; setShowScalebar(boolean show). Set the value of showScalebarProperty(). BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. getShowOverview(); setShowOverview(boolean); showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. getShowLocation(); setShowLocation(boolean); showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. getShowScalebar(); setShowScalebar(boolean); showScalebarProperty(). Constructor Details. ViewerPlusDisplayOptions; public ViewerPlusDisplayOptions(). Method Details. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:; See Also:. getShowOverview(); setShowOverview(boolean). showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:; See Also:. getShowLocation(); setShowLocation(boolean). showScalebarProperty; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html:1754,hash,hashCode,1754,javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,1,['hash'],['hashCode']
Security,"PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get the classifications for the output.; Keys to the map are generally chan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2461,hash,hashCode,2461,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,1,['hash'],['hashCode']
Security,"Path objects. String; getDescription(). A short description of the extension for displaying in the main GUI. static Image; getImageJIcon(int width,; int height). Try to read the ImageJ icon from its jar. static ImageJ; getImageJInstance(). Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). static String; getImageJPath(). Get the path for a local ImageJ installation, if set. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. static StringProperty; imageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:3227,hash,hashCode,3227,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['hash'],['hashCode']
Security,"PathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOEx",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:2523,hash,hashCode,2523,javadoc/docs/qupath/lib/objects/PathCellObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html,1,['hash'],['hashCode']
Security,"Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:2128,hash,hashCode,2128,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,2,['hash'],['hashCode']
Security,"PreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3053,hash,hashCode,3053,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['hash'],['hashCode']
Security,"PreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2919,hash,hashCode,2919,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['hash'],['hashCode']
Security,"QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; Since:; v0.5.0. manageMainMenuBar; public static void manageMainMenuBar(MenuBar menuBar); Request that a menubar is managed as a main menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS or MAIN_WINDOW. Parameters:; menuBar - . manageChildMenuBar; public static void manageChildMenuBar(MenuBar menuBar); Request that a menubar is managed as a child menubar.; This means it is treated as a system menubar if #systemMenubarProperty() is set to ALL_WINDOWS only. Parameters:; menuBar - . unmanageMenuBar; public static void unmanageMenuBar(MenuBar menuBar); Do not manage the system menubar status for the given menubar. Parameters:; menuBar - . overrideSystemMenuBarProperty; public static BooleanProperty overrideSystemMenuBarProperty(); Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. Returns:; See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean). getOverrideSystemMenuBar; public static boolean getOverrideSystemMenuBar(); Get the current value of the override property, which specifies whether the system menubar should not be used; by any window - no matter what the value of systemMenubarProperty(). Returns:; See Also:. overrideSystemMenuBarProperty(). setOverrideSystemMenuBar; public static void setOverrideSystemMenuBar(boolean doOverride); Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). Parameters:; doOverride - ; See Also:. overrideSystemMenuBarProperty(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:5286,access,access,5286,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,1,['access'],['access']
Security,"RCH. Package qupath.lib.gui.actions.menus; Class MeasureMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.MeasureMenuActions.Actions. Enclosing class:; MeasureMenuActions. @ActionMenu(""Menu.Measure""); public class MeasureMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ANNOTATIONS;  ; final org.controlsfx.control.action.Action; DETECTIONS;  ; final org.controlsfx.control.action.Action; EXPORT;  ; final org.controlsfx.control.action.Action; GRID_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; GRID_TMA;  ; final org.controlsfx.control.action.Action; MANAGER;  ; final org.controlsfx.control.action.Action; MAPS;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; TMA;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MAPS; @ActionAccelerator(""shortcut+shift+m""); @ActionConfig(""Action.Measure.maps""); public final org.controlsfx.control.action.Action MAPS. MANAGER; @ActionConfig(""Action.Measure.manager""); public final org.controlsfx.control.action.Action MANAGER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. TMA; public final org.controlsfx.control.action.Action TMA. ANNOTATIONS; public final org.controlsfx.control.action.Action ANNOTATIONS. DETECTIONS; public final org.controlsfx.control.action.Action DETECTIONS. GRID_ANNOTATIONS; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_ANNOTATIONS. GRID_TMA; @ActionMenu(""Menu.Measure.GridViews""); public final org.controlsfx.control.action.Action GRID_TMA. SEP_2; public final org.controlsfx.control.action.Action SEP_2. EXPORT; @ActionConfig(""Action.Measure.export""); public final org.controlsfx.control.action.Action EXPORT. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html:1337,hash,hashCode,1337,javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/MeasureMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"RGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supports",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2545,hash,hashCode,2545,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,1,['hash'],['hashCode']
Security,"ROI; createPolygonROI(double x,; double y,; ImagePlane plane). Create an empty, closed polygon ROI consisting of a single point. static PolygonROI; createPolygonROI(List<Point2> points,; ImagePlane plane). Create a closed polygon ROI from a list of points. static ROI; createPolylineROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolylineROI; createPolylineROI(double x,; double y,; ImagePlane plane). Create an empty polyline ROI consisting of a single point. static PolylineROI; createPolylineROI(List<Point2> points,; ImagePlane plane). Create a polyline ROI from a list of points. static ROI; createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create a rectangle ROI defined by its bounding box. static ROI; createRectangleROI(ImageRegion region). Create a rectangle ROI that matches an ImageRegion. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ROIs; public ROIs(). Method Details. createEmptyROI; public static ROI createEmptyROI(); Create an 'empty' ROI with no length or area.; ; The only guarantee is that it will return isEmpty() == true. Returns:. createRectangleROI; public static ROI createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create a rectangle ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createRectangleROI; public static ROI createRectangleROI(ImageRegion region); Create a rectangle ROI that matches an ImageRegion. Parameters:; region - ; Returns:. createEllipseROI; public static ROI createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create an ellipse ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createLineROI; public static ROI createLineROI(double x,; double y,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:2986,hash,hashCode,2986,javadoc/docs/qupath/lib/roi/ROIs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html,1,['hash'],['hashCode']
Security,"Read a single image tile. static List<SparseImageServer>; splitConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:3329,hash,hashCode,3329,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,1,['hash'],['hashCode']
Security,"Server<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:4858,hash,hashCode,4858,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['hash'],['hashCode']
Security,"Spec.BioimageIoModel spec). Attempt to build a DnnModel that follows this spec as closely as possible. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static ImageOp; transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms). Create an ImageOp that applies the specified transforms sequentially. static ImageOp; transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform). Create an ImageOp that applies the specified transforms, if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioimageIoTools; public BioimageIoTools(). Method Details. buildDnnModel; public static DnnModel buildDnnModel(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel spec); Attempt to build a DnnModel that follows this spec as closely as possible.; ; In some instances, the processing steps requires by the spec might not currently be ; supported by QuPath - see transformToOp(Processing) for more information. Parameters:; spec - ; Returns:. buildPatchClassifierParams; public static PatchClassifierParams buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; model - the model spec to initialize the parameters; inputOps - optional additional pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html:1881,hash,hashCode,1881,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,1,['hash'],['hashCode']
Security,"Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public final org.controlsfx.control.action.Action actionIntensity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:1273,hash,hashCode,1273,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,1,['hash'],['hashCode']
Security,"TION;  ; LOG_VIEWER;  ; MEASURE;  ; MINUS;  ; MOVE_TOOL;  ; NUCLEI_ONLY;  ; OVERVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; valueOf(String name). Returns the enum constant of this class with the specified name. static IconFactory.PathIcons[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ACTIVE_SERVER; public static final IconFactory.PathIcons ACTIVE_SERVER. ANNOTATIONS; public static final IconFactory.PathIcons ANNOTATIONS. ANNOTATIONS_FILL; public static final IconFactory.PathIcons ANNOTATIONS_FILL. ARROW_START_TOOL; public static final IconFactory.PathIcons ARROW_START_TOOL. ARROW_END_TOOL; public static final IconFactory.PathIcons ARROW_END_TOOL. ARROW_DOUBLE_TOOL; public static final IconFactory.PathIcons ARROW_DOUBLE_TOOL. BRUSH_TOOL; public static final IconFactory.PathIcons BRUSH_TOOL. CELL_NUCLEI_BOTH; public static final IconFactory.PathIcons CELL_NUCLEI_BOTH. CELL_ONLY; public static final IconFactory.PathIcons CELL_ONLY. CENTROIDS_ONLY; public static final IconFactory.PathIcons CENTROIDS_ONLY. COG; public static final IconFactory.PathIcons COG. CONTRAST; public static final IconFac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:2339,hash,hashCode,2339,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,1,['hash'],['hashCode']
Security,"TMA""); public class TMAMenuActions.Actions; extends Object. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions.AddActions;  ; class ; TMAMenuActions.Actions.RemoveActions;  . Field Summary; Fields. Modifier and Type; Field; Description; final TMAMenuActions.Actions.AddActions; addActions;  ; final org.controlsfx.control.action.Action; CLEAR_CORES;  ; final org.controlsfx.control.action.Action; CONVEX_HULL;  ; final org.controlsfx.control.action.Action; CREATE_MANUAL;  ; final org.controlsfx.control.action.Action; RELABEL;  ; final TMAMenuActions.Actions.RemoveActions; removeActions;  ; final org.controlsfx.control.action.Action; RESET_METADATA;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CREATE_MANUAL; @ActionConfig(""Action.TMA.specifyGrid""); public final org.controlsfx.control.action.Action CREATE_MANUAL. SEP_0; public final org.controlsfx.control.action.Action SEP_0. addActions; @ActionMenu(""Menu.TMA.add""); public final TMAMenuActions.Actions.AddActions addActions. removeActions; @ActionMenu(""Menu.TMA.remove""); public final TMAMenuActions.Actions.RemoveActions removeActions. RELABEL; @ActionConfig(""Action.TMA.relabel""); public final org.controlsfx.control.action.Action RELABEL. RESET_METADATA; @ActionConfig(""Action.TMA.resetMetadata""); public final org.controlsfx.control.action.Action RESET_METADATA. CLEAR_CORES; @ActionConfig(""Action.TMA.deleteGrid""); public final org.controlsfx.control.action.Action CLEAR_CORES. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CONVEX_HULL; @ActionConfig(""Action.TMA.findHull""); public final org.controlsfx.control.action.Action CONVEX_HULL. Constructor De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html:1522,hash,hashCode,1522,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"TaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1652,hash,hashCode,1652,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['hash'],['hashCode']
Security,"Tools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> List<ImageWriter<T>>; getCompatibleWriters(Class<T> imageClass,; String ext). Get a list of compatible ImageWriters for a specific image class. static <T> List<ImageWriter<T>>; getCompatibleWriters(ImageServer<T> server,; String ext). Get a list of compatible ImageWriters compatible with a specific server. static boolean; writeImage(BufferedImage img,; String path). Write a 2D image using the default writer based on the file path. static boolean; writeImage(ImageServer<BufferedImage> server,; String path). Write a (possibly multidimensional) image region using the default writer based on the file path. static boolean; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write a 2D image region using the default writer based on the file path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageWriterTools; public ImageWriterTools(). Method Details. getCompatibleWriters; public static <T> List<ImageWriter<T>> getCompatibleWriters(ImageServer<T> server,; String ext); Get a list of compatible ImageWriters compatible with a specific server. Type Parameters:; T - ; Parameters:; server - ; ext - ; Returns:; getCompatibleWriters(Class, String). getCompatibleWriters; public static <T> List<ImageWriter<T>> getCompatibleWriters(Class<T> imageClass,; String ext); Get a list of compatible ImageWriters for a specific image class.; ; The returned list is sorted, with the 'preferred' server coming first. ; This decision is made based upon whether the writer supports pixel calibration information and. Type Parameters:; T - ; Parameters:; imageClass - the image class (e.g. BufferedImage.class); ext - the desired output file extension (e.g. "".jpg"", "".tif"").; Returns:; getCompatibleWriters(ImageServer, String). writeIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html:1652,hash,hashCode,1652,javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ImageWriterTools.html,1,['hash'],['hashCode']
Security,"URIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3140,hash,hashCode,3140,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['hash'],['hashCode']
Security,"UpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1762,hash,hashCode,1762,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,1,['hash'],['hashCode']
Security,"VDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:2612,hash,hashCode,2612,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['hash'],['hashCode']
Security,"[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been start",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3622,hash,hashCode,3622,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['hash'],['hashCode']
Security,"_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MIDD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:3002,hash,hashCode,3002,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,1,['hash'],['hashCode']
Security,"_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public final org.controlsfx.control.action.Action VIEWER_GRID_1x1. VIEWER_GRID_",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:1887,hash,hashCode,1887,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,1,['hash'],['hashCode']
Security,"a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:2206,hash,hashCode,2206,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['hash'],['hashCode']
Security,"a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. See Also:. getRenderer(); setRenderer(ImageRenderer); rendererProperty(). Method Details. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier); Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. Parameters:; options - the options controlling the overlay display; classifier - the classifier; Returns:. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier,; int nThreads); Create an overlay to display the live application of a PixelClassifier to an image. Parameters:; options - the options controlling the overlay display; classifier - the classifier; nThreads - number of parallel threads to use for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:4546,hash,hashCode,4546,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['hash'],['hashCode']
Security,"a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:2532,hash,hashCode,2532,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,1,['hash'],['hashCode']
Security,"a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Parameters:; channel - the channel to threshold; minThreshold - the minimum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:1884,hash,hashCode,1884,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,1,['hash'],['hashCode']
Security,"aCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:13256,hash,hashCode,13256,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['hash'],['hashCode']
Security,"aScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class CssLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.CssLanguage. public class CssLanguage; extends ScriptLanguage; Class for representing CSS in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CssLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static CssLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. CssLanguage; public CssLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static CssLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html:1246,hash,hashCode,1246,javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,1,['hash'],['hashCode']
Security,"aY). Compute one or more MultiscaleFeatures.MultiscaleFeatures for the specified smoothing values (must be > 0). static ImageOp; filter2D(Mat kernel). Apply a 2D filter. static ImageOp; gaussianBlur(double sigma). Apply a 2D Gaussian filter. static ImageOp; gaussianBlur(double sigmaX,; double sigmaY). Apply a (possibly anisotropic) 2D Gaussian filter. static ImageOp; maximum(int radius). Apply a 2D maximum filter. static ImageOp; mean(int radius). Apply a 2D circular mean filter. static ImageOp; median(int radius). Apply a 2D median filter. static ImageOp; minimum(int radius). Apply a 2D minimum filter. static ImageOp; opening(int radius). Apply a 2D morphological opening filter. static ImageOp; stdDev(int radius). Apply a 2D circular standard deviation filter. static ImageOp; sum(int radius). Apply a 2D circular sum filter. static ImageOp; variance(int radius). Apply a 2D circular variance filter. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Filters; public Filters(). Method Details. gaussianBlur; public static ImageOp gaussianBlur(double sigmaX,; double sigmaY); Apply a (possibly anisotropic) 2D Gaussian filter. Parameters:; sigmaX - ; sigmaY - ; Returns:. gaussianBlur; public static ImageOp gaussianBlur(double sigma); Apply a 2D Gaussian filter. Parameters:; sigma - ; Returns:. filter2D; public static ImageOp filter2D(Mat kernel); Apply a 2D filter. Parameters:; kernel - ; Returns:. mean; public static ImageOp mean(int radius); Apply a 2D circular mean filter. Parameters:; radius - filter radius; Returns:. sum; public static ImageOp sum(int radius); Apply a 2D circular sum filter. Parameters:; radius - filter radius; Returns:. variance; public static ImageOp variance(int radius); Apply a 2D circular variance filter. Parameters:; radius - filter radius; Returns:. stdDev; public static ImageOp stdDev(int radius); Apply a 2D circular standard deviation f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html:1898,hash,hashCode,1898,javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Filters.html,1,['hash'],['hashCode']
Security,"able, Comparable<StainVector.DefaultStains>, Constable. Enclosing class:; StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public static StainVector.DefaultStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static StainVector.DefaultStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html:1602,hash,hashCode,1602,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,1,['hash'],['hashCode']
Security,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10903,hash,hashCode,10903,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['hash'],['hashCode']
Security,"ackage qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools - package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer - package qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays - package qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording - package qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools - package qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers - package qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images - package qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers - package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats - package qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide - package qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna - package qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers - package qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome - package qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io - package qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:812507,access,accessing,812507,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['accessing']
Security,"ad-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the nam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3832,hash,hashCode,3832,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['hash'],['hashCode']
Security,"adata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for al",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:2642,hash,hashCode,2642,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['hash'],['hashCode']
Security,"ageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution,; Map<Integer,PathClass> classifications); Convert an ImageDataOp into ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:2288,hash,hashCode,2288,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['hash'],['hashCode']
Security,"ageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2865,hash,hashCode,2865,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['hash'],['hashCode']
Security,"ail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1196,hash,hashCode,1196,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,1,['hash'],['hashCode']
Security,"ail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class MarkdownStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. All Implemented Interfaces:; ScriptStyler. public class MarkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Specified by:; getBaseStyle in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptSty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html:1279,hash,hashCode,1279,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,1,['hash'],['hashCode']
Security,"alignCenterRight(). Match tiles to the center left of the ROI bounding box. Tiler.Builder; alignment(Tiler.TileAlignment alignment). Set the tile alignment. Tiler.Builder; alignTopCenter(). Start tiles at the top center of the ROI bounding box. Tiler.Builder; alignTopLeft(). Start tiles at the top left of the ROI bounding box. Tiler.Builder; alignTopRight(). Match tiles to the top right of the ROI bounding box. Tiler; build(). Build a tiler object with the current settings. Tiler.Builder; cropTiles(boolean cropToParent). Set whether the tiler is set to crop the output to the input parent. Tiler.Builder; filterByCentroid(boolean filterByCentroid). Set if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Tiler.Builder; tileHeight(int tileHeight). Change the height of output tiles. Tiler.Builder; tileWidth(int tileWidth). Change the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. tileHeight; public Tiler.Builder tileHeight(int tileHeight); Change the height of output tiles. Parameters:; tileHeight - the new height in pixels; Returns:; this builder. tileWidth; public Tiler.Builder tileWidth(int tileWidth); Change the width of output tiles. Parameters:; tileWidth - the new width in pixels; Returns:; this builder. cropTiles; public Tiler.Builder cropTiles(boolean cropToParent); Set whether the tiler is set to crop the output to the input parent.; Using this option can result in smaller and non-rectangular tiles. Parameters:; cropToParent - the new setting; Returns:; this builder. alignment; public Tiler.Builder alignment(Tiler.TileAlignment alignment); Set the tile alignment. Parameters:; alignment - the new setting; Returns:; this builder. alignTopLeft; public Tiler.Builder alignTopLeft(); Start tiles at the top left of the ROI bounding box. Returns:; this builder. alignTopCenter; public Tiler.Buil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html:2065,hash,hashCode,2065,javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.Builder.html,1,['hash'],['hashCode']
Security,"alogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:1494,hash,hashCode,1494,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,1,['hash'],['hashCode']
Security,"alues. static String; getParameterListJSON(Map<String,?> map,; String delimiter). Deprecated.; use convertToJson(Map) instead. static String; getParameterListJSON(ParameterList params,; String delimiter). Deprecated.; use convertToJson(ParameterList) instead. Map<String,Parameter<?>>; getParameters(). Returns a map of keys and their corresponding parameters. String; getStringParameterValue(String key). Get a String parameter value (or its default) for the specified key. boolean; removeEmptyParameters(). Remove all empty parameters from this list. Parameter<?>; removeParameter(String key). Remove a parameter from this list. void; setHiddenParameters(boolean hidden,; String... keys). Set the 'hidden' flag for parameters with the specified keys. static void; updateParameterList(ParameterList params,; Map<String,String> mapNew,; Locale locale). Update a ParameterList with the values specified in a map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterList; public ParameterList(). Method Details. setHiddenParameters; public void setHiddenParameters(boolean hidden,; String... keys); Set the 'hidden' flag for parameters with the specified keys.; This can be used to notify any consumer that certain parameters are not required, ; or otherwise should not be presented to the user. Parameters:; hidden - ; keys - . duplicate; public ParameterList duplicate(); Create a deep copy of this parameter list. Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue); Add a double parameter to this list. Parameters:; key - ; prompt - ; defaultValue - ; Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue,; String unit,; String helpText); Add a double parameter to this list, optionally including a unit and help text. Parameters:; key - ; prompt -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html:5279,hash,hashCode,5279,javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,1,['hash'],['hashCode']
Security,"amework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3300,hash,hashCode,3300,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['hash'],['hashCode']
Security,"an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one does not already exist. Returns:. outputPath; public FileCopier outputPath(String name); Name of the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(Path). outputPath; public FileCopier outputPath(Path name); Path representing the output directory.; If relativeToUserDirectory() is selected, thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:1461,hash,hashCode,1461,javadoc/docs/qupath/lib/gui/FileCopier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html,1,['hash'],['hashCode']
Security,"ankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform alread",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:1659,hash,hashCode,1659,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['hash'],['hashCode']
Security,"arkdownLanguage; extends ScriptLanguage; implements HtmlRenderer; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html:1593,hash,hashCode,1593,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,1,['hash'],['hashCode']
Security,"ary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class JsonLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.JsonLanguage. public class JsonLanguage; extends ScriptLanguage; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of JSON syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; JsonLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static JsonLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. JsonLanguage; public JsonLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static JsonLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html:1370,hash,hashCode,1370,javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,1,['hash'],['hashCode']
Security,"ary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2328,hash,hashCode,2328,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,1,['hash'],['hashCode']
Security,ashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570019,hash,hashCode,570019,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"asing factor each time (e.g. OMEPyramidWriter.Builder; scaledDownsampling(double minDownsample,; double scale). Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. OMEPyramidWriter.Builder; tileSize(int tileSize). Define the requested tile size (width == height). OMEPyramidWriter.Builder; tileSize(int tileWidth,; int tileHeight). Define the requested tile width and height. OMEPyramidWriter.Builder; timePoint(int t). Specify a single timepoint to be written from a time series. OMEPyramidWriter.Builder; timePoints(int tStart,; int tEnd). Specify a range of timepoints to be written from a time series. OMEPyramidWriter.Builder; uncompressed(). Request no compression. OMEPyramidWriter.Builder; zSlice(int z). Specify the z-slice to export. OMEPyramidWriter.Builder; zSlices(int zStart,; int zEnd). Specify the start (inclusive) and end (exclusive) z-slices. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServer<BufferedImage> server); Constructor. Parameters:; server - the ImageServer from which pixels will be requested and written to the OME-TIFF. Method Details. channelsPlanar; public OMEPyramidWriter.Builder channelsPlanar(); Request that channels are written as separate image planes. Returns:; this builder. channelsInterleaved; public OMEPyramidWriter.Builder channelsInterleaved(); Request that channels are written interleaved within a single image plane. Returns:; this builder. channelsImages; public OMEPyramidWriter.Builder channelsImages(); Request that channels are written as separate images. Returns:; this builder. bigTiff; public OMEPyramidWriter.Builder bigTiff(); Request that the image is written in BigTIFF format. Returns:; this builder. bigTiff; public OMEPyramidWriter.Builder bigTiff(boolean doBigTiff); Specify whether the image should be written in BigTIFF format. Paramet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:4454,hash,hashCode,4454,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['hash'],['hashCode']
Security,"ass PropertiesStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:1380,hash,hashCode,1380,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['hash'],['hashCode']
Security,"asurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:1683,hash,hashCode,1683,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,1,['hash'],['hashCode']
Security,"ata() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569482,hash,hashCode,569482,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"ata<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; img - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; map - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options); Create an empty overlay without any images to display. Parameters:; options - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img); Create an overlay to display one specified image region. Parameters:; options - ; region - ; img - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; Map<? e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:3584,hash,hashCode,3584,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['hash'],['hashCode']
Security,"ate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectPredicates; public PathObjectPredicates(). Method Details. positiveClassification; public static PathObjectPredicates.PathObjectPredicate positiveClassification(boolean allowGradedIntensity); Predicate that returns true of an object has a positive classification. Parameters:; allowGradedIntensity - if true, 1+, 2+ and 3+ are also interpreted as positive; ; otherwise, only a final class component of ""Positive"" returns true.; Returns:; See Also:. PathClassTools.isPositiveClass(PathClass); PathClassTools.isGradedIntensityClass(PathClass); PathClassTools.isPositiveOrGradedIntensityClass(PathClass). filter; public static PathObjectPredicates.PathObjectPredicate filter(PathObjectFilter filter); Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. Parameters:; filter - ; Returns:. exactClassification; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:2065,hash,hashCode,2065,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,1,['hash'],['hashCode']
Security,"ated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. Jav",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:47061,access,access,47061,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.BioFormatsPreferences. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences. Enclosing class:; BioFormatsOptionsExtension. @PrefCategory(""Prefs.BioFormats""); public static class BioFormatsOptionsExtension.BioFormatsPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; enableBioformats;  ; final BooleanProperty; filesOnly;  ; final IntegerProperty; memoizationTimeMillis;  ; final StringProperty; pathMemoization;  ; final StringProperty; skipExtensions;  ; final StringProperty; useExtensions;  ; final BooleanProperty; useParallelization;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. enableBioformats; @BooleanPref(""Prefs.BioFormats.enable""); public final BooleanProperty enableBioformats. filesOnly; @BooleanPref(""Prefs.BioFormats.localOnly""); public final BooleanProperty filesOnly. useParallelization; @BooleanPref(""Prefs.BioFormats.useParallelization""); public final BooleanProperty useParallelization. memoizationTimeMillis; @IntegerPref(""Prefs.BioFormats.memoizationTimeMillis""); public final IntegerProperty memoizationTimeMillis. pathMemoization; @DirectoryPref(""Prefs.BioFormats.pathMemoization""); public final StringProperty pathMemoization. useExtensions; @StringPref(""Prefs.BioFormats.alwaysUseExtensions""); public final StringProperty useExtensions. skipExtensions; @StringPref(""Prefs.BioFormats.skipExtensions""); public final StringProperty skipExtensions. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html:1196,hash,hashCode,1196,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,1,['hash'],['hashCode']
Security,"ath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.Bounda",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569227,hash,hashCode,569227,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"athExtension; A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; BioFormatsOptionsExtension.BioFormatsPreferences;  ; static class ; BioFormatsOptionsExtension.OmeTiffWriterAction;  . Constructor Summary; Constructors. Constructor; Description; BioFormatsOptionsExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:1615,hash,hashCode,1615,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,1,['hash'],['hashCode']
Security,"athStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2456,hash,hashCode,2456,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['hash'],['hashCode']
Security,"atic BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4156,hash,hashCode,4156,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['hash'],['hashCode']
Security,"ation needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. Constructor Summary; Constructors. Constructor; Description; ChannelSettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ChannelSettings; create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing). Create a new channel settings object. ChannelColor; getColor(). Get the color used to display the channel, or null if a color is not relevant. float; getMaxDisplay(). Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. float; getMinDisplay(). Get the requested minimum display value for the channel. String; getName(). Get the name of the channel. boolean; isShowing(). Get whether the channel should be displayed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChannelSettings; public ChannelSettings(). Method Details. create; public static ChannelSettings create(String name,; float minDisplay,; float maxDisplay,; ChannelColor color,; boolean isShowing); Create a new channel settings object. Parameters:; name - ; minDisplay - ; maxDisplay - ; color - ; isShowing - ; Returns:. getName; public String getName(); Get the name of the channel. Returns:. getMinDisplay; public float getMinDisplay(); Get the requested minimum display value for the channel.; This should be used with the first entry in any lookup table. Returns:. getMaxDisplay; public float getMaxDisplay(); Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. Returns:. getColor; public ChannelColor getColor(); Get the color used to display the channel, or null if a color is not relevant. Returns:. isShowing; public boolean isShowing(); Get whether the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html:1532,hash,hashCode,1532,javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ChannelSettings.html,1,['hash'],['hashCode']
Security,"aultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. H_E; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_E; Hematoxylin and eosin. H_DAB; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_DAB; Hematoxylin and DAB. Method Details. values; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html:1904,hash,hashCode,1904,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,1,['hash'],['hashCode']
Security,"automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate features. void; setResolution(PixelCalibration cal). Set the resolution at which the training should occur. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTraining; public PixelClassifierTraining(ImageDataOp featureCalculator); Create a new pixel classifier helper, to support generating training data. Parameters:; featureCalculator - . Method Details. getFeatureOp; public ImageDataOp getFeatureOp(); Get an ImageDataOp used for feature calculation. Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public Boundar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:2421,hash,hashCode,2421,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,1,['hash'],['hashCode']
Security,"avaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class XmlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.XmlLanguage. public class XmlLanguage; extends ScriptLanguage; Class for representing XML in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; XmlLanguage(). Constructor for XML Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static XmlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. XmlLanguage; public XmlLanguage(); Constructor for XML Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static XmlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html:1245,hash,hashCode,1245,javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,1,['hash'],['hashCode']
Security,"b.gui.images.servers.RenderedImageServer;  ; hasBundleForLocale(String, Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569028,hash,hashCode,569028,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"bject; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has been selected (which may or may not be the same as getItem()). Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:1489,hash,hashCode,1489,javadoc/docs/qupath/lib/gui/SelectableItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html,1,['hash'],['hashCode']
Security,"bjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. setROI; public void setROI(ROI roi); Set the ROI for this object. If this is called, one should remember to update any associated ; hierarchy to notify it of the change. Parameters:; roi - . setLocked; public void setLocked(boolean locked); Set locked flag, indicating that the object ROI should not be modified.; It directly impacts on isEditable(). Note that this is only a hint that other code should pay attention to - it is not; enforced locally.; ; TODO: Consider shifting this method into PathObject rather than PathROIObject (even; if it doesn't really do anything there). Overrides:; setLocked in class PathObject; Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEditable(); Deprecated.; since v0.4.0. Return true if isLocked() is fal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:2768,hash,hashCode,2768,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,1,['hash'],['hashCode']
Security,"bjects. static void; unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'unlocked'. static void; unlockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. static PathObject; updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject - ; Returns:. countObjectsWithClass; public static int countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass); Count the number of PathObjects in a collection with a specified class or base class. Parameters:; pathObjects - ; pathClass - ; useBaseClass - ; Returns:. getObjectsOfClass; public static List<PathObject> getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> createImageRegionPredicate(ImageRegion region); Create a predicate that only ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:15317,hash,hashCode,15317,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['hash'],['hashCode']
Security,"ble for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; public static String getDefaultShortServerName(URI uri); Get the default shortened server name given the server's path. Parameters:; uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredDownsampleFactor(ImageServer, double). getPreferredDownsamp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:2274,hash,hashCode,2274,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,1,['hash'],['hashCode']
Security,"ble, Comparable<Normalization>, Constable. public enum Normalization; extends Enum<Normalization>; Methods for normalizing features. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MEAN_VARIANCE. Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX. Normalize into the range 0-1 using min and max values. NONE. Do not normalize features. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static Normalization; valueOf(String name). Returns the enum constant of this class with the specified name. static Normalization[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final Normalization NONE; Do not normalize features. MEAN_VARIANCE; public static final Normalization MEAN_VARIANCE; Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX; public static final Normalization MIN_MAX; Normalize into the range 0-1 using min and max values. Method Details. values; public static Normalization[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Normalization valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html:1567,hash,hashCode,1567,javadoc/docs/qupath/lib/classifiers/Normalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html,1,['hash'],['hashCode']
Security,"ble, EventTarget. public class ColorMapCanvas; extends Canvas; Canvas to show the range of a ColorMap (i.e. look-up table). Property Summary; Properties. Type; Property; Description; ObjectProperty<ColorMaps.ColorMap>; colorMap. Return the ColorMap property of this canvas. Properties inherited from class javafx.scene.canvas.Canvas; height, width. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with ke",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:906,access,accessibleHelp,906,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"ble. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous white",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:1716,hash,hashCode,1716,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,1,['hash'],['hashCode']
Security,"bration. public static class PixelCalibration.Builder; extends Object; Builder class for PixelCalibration objects. Constructor Summary; Constructors. Constructor; Description; Builder(). Create a new builder with default (uncalibrated) values. Builder(PixelCalibration cal). Create a new builder, initialized values of an existing PixelCalibration. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; build(). Build PixelCalibration object. PixelCalibration.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel width and height in microns (the most common calibration value). PixelCalibration.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify timepoints and units. PixelCalibration.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Create a new builder with default (uncalibrated) values. Builder; public Builder(PixelCalibration cal); Create a new builder, initialized values of an existing PixelCalibration. Parameters:; cal - . Method Details. pixelSizeMicrons; public PixelCalibration.Builder pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons); Specify the pixel width and height in microns (the most common calibration value). Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; Returns:. timepoints; public PixelCalibration.Builder timepoints(TimeUnit timeUnit,; double... timepoints); Specify timepoints and units. Parameters:; timeUnit - ; timepoints - ; Returns:. zSpacingMicrons; public PixelCalibration.Builder zSpacingMicrons(Number zSpacingMicrons); Specify spacing between z-slices, in microns. Parameters:; zSpacingMicrons - ; Returns:. build; public PixelCalibration build(); Build PixelCalib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html:1497,hash,hashCode,1497,javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,1,['hash'],['hashCode']
Security,"by checking the names of the first two stains and confirming that the third stain is a residual. static boolean; isHematoxylin(StainVector stain). Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). static ColorDeconvolutionStains; makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains stains). Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). static ColorDeconvolutionStains; parseColorDeconvolutionStainsArg(String s). Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. static double[]; parseStainValues(Locale locale,; String s). Parses 3 values, suitable for use as a stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HEMATOXYLIN; public static final String HEMATOXYLIN; Default name (and spelling) for hematoxylin stain. See Also:. Constant Field Values. EOSIN; public static final String EOSIN; Default name for eosin stain. See Also:. Constant Field Values. DAB; public static final String DAB; Default name for DAB stain. See Also:. Constant Field Values. Constructor Details. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; StainVector stain3,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with three stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; stain3 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:4901,hash,hashCode,4901,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['hash'],['hashCode']
Security,"cal normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details. gaussianNormalize; public static void gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is applied to a duplicate of the image; The filtered image is subtracted f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:1860,hash,hashCode,1860,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html,1,['hash'],['hashCode']
Security,"caleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1676,hash,hashCode,1676,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['hash'],['hashCode']
Security,"cally generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException. buildServer; public static ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws IOException; Build a ImageServer for the specified URI and optional args.; This differs from ImageServerProvider.buildServer(String, Class, String...) in two main ways:; ; it always u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:4041,access,accessed,4041,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['access'],['accessed']
Security,"cated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.Bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569403,hash,hashCode,569403,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"cation. PixelClassifierTools() - Constructor for class qupath.opencv.ml.pixel.PixelClassifierTools;  ; PixelClassifierTools.CreateObjectOptions - Enum Class in qupath.opencv.ml.pixel. Options when creating objects from a pixel classifier. PixelClassifierTraining - Class in qupath.process.gui.commands.ml. Helper class for training a pixel classifier. PixelClassifierTraining(ImageDataOp) - Constructor for class qupath.process.gui.commands.ml.PixelClassifierTraining. Create a new pixel classifier helper, to support generating training data. PixelClassifierTraining.ClassifierTrainingData - Class in qupath.process.gui.commands.ml. Wrapper for training data. PixelClassifierUI - Class in qupath.process.gui.commands.ml. Helper class for generating standardized UI components for pixel classification. PixelClassifierUI() - Constructor for class qupath.process.gui.commands.ml.PixelClassifierUI;  ; PixelImageIJ - Class in qupath.imagej.tools. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelImageIJ(ImageProcessor) - Constructor for class qupath.imagej.tools.PixelImageIJ. Constructor. PixelProcessor<S,T,U> - Class in qupath.lib.experimental.pixels. A class for tiled image processing. PixelProcessor.Builder<S,T,U> - Class in qupath.lib.experimental.pixels. Builder class for a PixelProcessor. PixelProcessorUtils - Class in qupath.lib.experimental.pixels. Utility functions to help with the PixelProcessor class. PixelProcessorUtils() - Constructor for class qupath.lib.experimental.pixels.PixelProcessorUtils;  ; pixelSize(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the requested pixel size to use with requesting image regions. pixelSize(double, double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). pixelSize(PixelCalibration) - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:766251,access,access,766251,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"closing class:; RotatedImageServer. public static enum RotatedImageServer.Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotate 90 degrees clockwise. ROTATE_180; public static final RotatedImageServer.Rotation ROTATE_180; Rotate 180 degrees. ROTATE_270; public static final RotatedImageServer.Rotation ROTATE_270; Rotate 270 degrees clockwise. Method Details. values; public static RotatedImageServer.Rotation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RotatedImageServer.Rotation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an ident",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html:1688,hash,hashCode,1688,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,1,['hash'],['hashCode']
Security,"columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:1735,hash,hashCode,1735,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,1,['hash'],['hashCode']
Security,"compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; Paramet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:2937,hash,hashCode,2937,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['hash'],['hashCode']
Security,"criptLanguages. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ScriptLanguageProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Parameters:; name - ; Returns:. fromString; public static ScriptLanguage fromString(String languageString); Get the ScriptLanguage object corresponding to the specified String. ; If the string cannot be matched, PlainLanguage is returned. Parameters:; languageString - ; Returns:; corresponding script language, or PlainLanguage if no match. getLanguageFromExtension; public static ScriptLanguage getLanguageFromExtension(String ext); Return the first ScriptLanguage compatible with the specified extension (can be runnable ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html:1589,hash,hashCode,1589,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,1,['hash'],['hashCode']
Security,"crons(); Get the pixel height in microns, or Double.NaN if this is unknown. Returns:. getPixelWidthUnit; public String getPixelWidthUnit(); Get a String representation of the preferred pixel width unit. Returns:; See Also:. getPixelWidthMicrons(); PIXEL; MICROMETER. unitsMatch2D; public boolean unitsMatch2D(); Returns true if the units for pixel width and height are the same. Returns:. unitsMatch3D; public boolean unitsMatch3D(); Returns true if the units for pixel width, height and z-spacing are the same. Returns:. getPixelHeightUnit; public String getPixelHeightUnit(); Get a String representation of the preferred pixel height unit. Returns:; See Also:. getPixelHeightMicrons(); PIXEL; MICROMETER. getZSpacingUnit; public String getZSpacingUnit(); Get a String representation of the preferred z-spacing unit. Returns:; See Also:. getZSpacing(); PIXEL; MICROMETER. getAveragedPixelSize; public Number getAveragedPixelSize(); Get an average of getPixelWidth() and getPixelHeight().; No check is made to ensure that these are returned in the same units; rather, the numbers are simply averaged. Returns:. getPixelWidth; public Number getPixelWidth(); Get the numeric value representing the pixel width, in the stored units. Returns:; See Also:. getPixelWidthUnit(). getPixelHeight; public Number getPixelHeight(); Get the numeric value representing the pixel height, in the stored units. Returns:; See Also:. getPixelHeightUnit(). getZSpacing; public Number getZSpacing(); Get the numeric value representing the z-spacing, in the stored units. Returns:; See Also:. getZSpacingUnit(). toString; public String toString(). Overrides:; toString in class Object. getDefaultInstance; public static PixelCalibration getDefaultInstance(); Get the default PixelCalibration.; This isn't terribly informative, giving pixel sizes in pixel units. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:7514,hash,hashCode,7514,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,3,['hash'],['hashCode']
Security,"ct; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1489,hash,hashCode,1489,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,1,['hash'],['hashCode']
Security,"ct; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultiviewActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ATTACH_VIEWER;  ; final org.controlsfx.control.action.Action; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MULTIVIEW_CLOSE_VIEWER;  ; final ViewMenuActions.MultiviewGridActions; MULTIVIEW_GRID_ACTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_MATCH_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_ACTIONS; @ActionMenu(""Action.View.Multiview.gridMenu""); public final ViewMenuActions.MultiviewGridActions MULTIVIEW_GRID_ACTIONS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_SYNCHRONIZE_VIEWERS; public final org.controlsfx.control.action.Action MULTIVIEW_SYNCHRONIZE_VIEWERS. MULTIVIEW_MATCH_RESOLUTIONS; public final org.controlsfx.control.action.Action MULTIVIEW_MATCH_RESOLUTIONS. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MULTIVIEW_CLOSE_VIEWER; @ActionConfig(""Action.View.Multiview.closeViewer""); public final org.controlsfx.control.action.Action MULTIVIEW_CLOSE_VIEWER. SEP_02; public final org.controlsfx.control.action.Action SEP_02. DETACH_VIEWER; @ActionConfig(""ViewerActions.detachViewer""); public final org.controlsfx.control.action.Action DETACH_VIEWER. ATTACH_VIEWER; @ActionConfig(""ViewerActions.attachViewer""); public final org.controlsfx.control.a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html:1433,hash,hashCode,1433,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,1,['hash'],['hashCode']
Security,"ct; qupath.lib.gui.viewer.tools.ExtendedPathTool. All Implemented Interfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:1400,hash,hashCode,1400,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['hash'],['hashCode']
Security,"ction; MULTIVIEW_ADD_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_ADD_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_3x3;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_RESET_GRID;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewGridActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_1x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x1. MULTIVIEW_GRID_1x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x2. MULTIVIEW_GRID_2x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x1. MULTIVIEW_GRID_2x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x2. MULTIVIEW_GRID_3x3; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_3x3. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_ADD_ROW; @ActionConfig(""Action.View.Multiview.addRow""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_ROW. MULTIVIEW_ADD_COLUMN; @ActionConfig(""Action.View.Multiview.addColumn""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_COLUMN. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MULTIVIEW_REMOVE_ROW; @ActionConfig(""Action.View.Multiview.removeRow""); pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html:1713,hash,hashCode,1713,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,1,['hash'],['hashCode']
Security,"ctor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html:2952,hash,hashCode,2952,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,3,['hash'],['hashCode']
Security,"ctor(int channel). Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). static ColorTransforms.ColorTransform; createChannelExtractor(String channelName). Create ColorTransform to extract a channel based on its name. static ColorTransforms.ColorTransform; createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber). Create a ColorTransform that applies color deconvolution. static ColorTransforms.ColorTransform; createMaximumChannelTransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform that calculates the mean of all channels. static ColorTransforms.ColorTransform; createMinimumChannelTransform(). Create a ColorTransform that calculates the minimum of all channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransforms; public ColorTransforms(). Method Details. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(int channel); Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). Parameters:; channel - ; Returns:. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(String channelName); Create ColorTransform to extract a channel based on its name. Parameters:; channelName - ; Returns:. createMeanChannelTransform; public static ColorTransforms.ColorTransform createMeanChannelTransform(); Create a ColorTransform that calculates the mean of all channels. Returns:. createColorDeconvolvedChannel; public static ColorTransforms.ColorTransform createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber); Create a ColorTransform th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html:2266,hash,hashCode,2266,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,1,['hash'],['hashCode']
Security,"d Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFuncti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2657,hash,hashCode,2657,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,1,['hash'],['hashCode']
Security,"d by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getSeries; public int getSeries(); Get the series index, as used by Bio-Formats. Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class Abstrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:6380,access,accessible,6380,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['access'],['accessible']
Security,"d for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageDat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:1681,hash,hashCode,1681,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,1,['hash'],['hashCode']
Security,"d is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?> param,; boolean enabled). Set the enabled status of a parameter, to determine if it can be edited. protected static void; setTextFieldFromNumber(TextField text,; Number value,; String unit);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterPanelFX; public ParameterPanelFX(ParameterList params); Create a ParameterPanelFX. Parameters:; params - . Method Details. getParameters; public ParameterList getParameters(); Get the ParameterList displayed in this panel. Returns:. getPane; public Pane getPane(); Get the Pane that can be displayed. Returns:. addParameterChangeListener; public void addParameterChangeListener(ParameterChangeListener listener); Add a ParameterChangeListener to be notified as parameters are modified by the user. Parameters:; listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; protected static void setTextFieldFromNumber(TextField text,; Number valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:2279,hash,hashCode,2279,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,1,['hash'],['hashCode']
Security,"d on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of pixels. Parameters:; width - ; height - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html:1207,hash,hashCode,1207,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,1,['hash'],['hashCode']
Security,"d; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final IntegerProperty tmaMissingColor. Constructor Details. ObjectPreferences;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1224,hash,hashCode,1224,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,1,['hash'],['hashCode']
Security,"d; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class YamlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler. All Implemented Interfaces:; ScriptStyler. public class YamlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on YAML syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html:1132,hash,hashCode,1132,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,1,['hash'],['hashCode']
Security,"dd the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutionLevel>; build(). Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsample; public ImageServerMetadata.ImageResolutionLevel.Builder addLevelByDownsample(double downsample); Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. Parameters:; downsample - ; Returns:. addFullResolutionLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addFullResolutionLevel(); Add the full-resolution image as a level of the pyramid.; It is not required that this form part of the pyramid in cases where this image pyramid might ; be used to provide a smaller overlay of a larger image, and not itself contain ; pixels at the highest resolution. Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html:2194,hash,hashCode,2194,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,1,['hash'],['hashCode']
Security,"de.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load Ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1447,hash,hashCode,1447,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['hash'],['hashCode']
Security,"define a new drop handler. Constructor Summary; Constructors. Constructor; Description; DragDropImportListener(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addFileDropHandler(DragDropImportListener.DropHandler<File> handler). Add a new File DropHandler. void; addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Add a new DropHandler specifically for JSON elements. void; handle(DragEvent event);  ; void; removeFileDropHandler(DragDropImportListener.DropHandler<File> handler). Remove a File DropHandler. void; removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement> handler). Remove a JSON DropHandler. void; setupTarget(Node target). Prepare a target node to accept drag and drop events. void; setupTarget(Scene target). Prepare a target scene to accept drag and drop events. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DragDropImportListener; public DragDropImportListener(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. setupTarget; public void setupTarget(Node target); Prepare a target node to accept drag and drop events. Parameters:; target - . setupTarget; public void setupTarget(Scene target); Prepare a target scene to accept drag and drop events. Parameters:; target - . handle; public void handle(DragEvent event). Specified by:; handle in interface EventHandler<DragEvent>. addFileDropHandler; public void addFileDropHandler(DragDropImportListener.DropHandler<File> handler); Add a new File DropHandler.; ; This may be called on a drag-and-drop application on the main window, if no other ; handler deals with the event. Parameters:; handler - . removeFileDropHandler; public void removeFileDropHandler(DragDropImportListener.DropHandler<File> handler); Remove a File DropHandler. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html:1892,hash,hashCode,1892,javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/DragDropImportListener.html,1,['hash'],['hashCode']
Security,"der.ServerBuilder<BufferedImage>; getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:2670,hash,hashCode,2670,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['hash'],['hashCode']
Security,"der.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; BioFormatsServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:1972,hash,hashCode,1972,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,1,['hash'],['hashCode']
Security,"displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2115,hash,hashCode,2115,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['hash'],['hashCode']
Security,"ds inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isLocked, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, readExternal, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setLocked, setName, setPathClass, storeMetadataValue, writeExternal. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathRootObject; public PathRootObject(). Method Details. isRootObject; public boolean isRootObject(); Description copied from class: PathObject; Returns true if the object is the 'root' of an object hierarchy. Overrides:; isRootObject in class PathObject; Returns:; See Also:. PathObjectHierarchy. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of the object. Specified by:; getPathClass in class PathObject; Returns:. setPathClass; public void setPathClass(PathClass pathClass,; double classProbability); Description copied from class: PathObject; Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Specified by:; setPathClass in class PathObject; Parameters:; pathClass - ; classProbability - . getClassProbability; public double getClas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html:2492,hash,hashCode,2492,javadoc/docs/qupath/lib/objects/PathRootObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html,1,['hash'],['hashCode']
Security,"ds. Modifier and Type; Field; Description; static long; UNKNOWN_LENGTH. Constant to represent an unknown dimension length. static DnnShape; UNKNOWN_SHAPE. Constant to represent an unknown shape. static long; UNKNOWN_SIZE. Constant to represent an unknown size (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; final long; get(int i). Get the length of the specified dimension. final long[]; getShape(). Get a copy of the internal dimensions array. final boolean; isUnknown(). Returns true if the shape is unknown. final int; numDimensions(). The total number of dimensions, i.e. static DnnShape; of(long... shape). Create a new DnnShape with the specified dimension lengths. final long; size(). Total number of elements in a blob with this shape; This is the product of the lengths returned by getShape() or UNKNOWN_SHAPE. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. UNKNOWN_SHAPE; public static DnnShape UNKNOWN_SHAPE; Constant to represent an unknown shape. UNKNOWN_LENGTH; public static long UNKNOWN_LENGTH; Constant to represent an unknown dimension length. UNKNOWN_SIZE; public static long UNKNOWN_SIZE; Constant to represent an unknown size (i.e. number of elements within a blob, mat or tensor). Method Details. getShape; public final long[] getShape(); Get a copy of the internal dimensions array. Returns:. get; public final long get(int i); Get the length of the specified dimension. Parameters:; i - ; Returns:. of; public static DnnShape of(long... shape); Create a new DnnShape with the specified dimension lengths. Parameters:; shape - ; Returns:. numDimensions; public final int numDimensions(); The total number of dimensions, i.e. the length of the array returned by getShape(). Returns:. isUnknown; public final boolean isUnknown(); Returns true if the shape is unknown. Returns:. size; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html:1892,hash,hashCode,1892,javadoc/docs/qupath/opencv/dnn/DnnShape.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnShape.html,1,['hash'],['hashCode']
Security,"e & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2574,hash,hashCode,2574,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['hash'],['hashCode']
Security,"e 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. boolean; removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, without firing a remove event. void; removePathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). void; resolveHierarchy(). Attempt to resolve the parent-child relationships between all objects within the hierarchy. void; setHierarchy(PathObjectHierarchy hierarchy). Set the contents of this hierarchy to be the same as that of another hierarchy. void; setTMAGrid(TMAGrid tmaGrid). Set the tma grid for this hierarchy. String; toString();  ; void; updateObject(PathObject pathObject,; boolean isChanging). Update an object that is already in the hierarchy (e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HIERARCHY_COMPARATOR; public static final Comparator<PathObject> HIERARCHY_COMPARATOR; Comparator to use when looking for a parent annotation in the hierarchy.; The logic is:; ; Sort by area (smallest first); Sort by hierarchy level (deepest first); Sort by DefaultPathObjectComparator. In practice, one expects an object to be placed inside the smallest containing annotation - ; identical areas are likely to be rare, unless obtained by duplication. Constructor Details. PathObjectHierarchy; public PathObjectHierarchy(); Default constructor, creates an empty hierarchy. Method Details. isEmpty; public boolean isEmpty(); Check if the hierarchy is empty (i.e. no objects apart from the root object, no feature maps). Returns:. addListener; public void addListener(PathObjectHierarchyListener listener); Add a hierarchy change listener. Parameters:; listener - ; Since:; v0.4.0; replaced addPathObjectListener(PathObjectHierarchyListener).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:8280,hash,hashCode,8280,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['hash'],['hashCode']
Security,"e ip1 < threshold. static ByteProcessor; thresholdBelowEquals(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1 <= threshold. static ByteProcessor; thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold). Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. static ROI; thresholdToROI(ImageProcessor ip,; RegionRequest request). Generate a QuPath ROI from an ImageProcessor. static ROI; thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request). Generate a QuPath ROI by thresholding an image channel image. static ROI; thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request). Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholding; public SimpleThresholding(). Method Details. greaterThanOrEqual; public static ByteProcessor greaterThanOrEqual(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 >= ip2. Parameters:; ip1 - ; ip2 - ; Returns:. greaterThan; public static ByteProcessor greaterThan(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 > ip2. Parameters:; ip1 - ; ip2 - ; Returns:. thresholdBelow; public static ByteProcessor thresholdBelow(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 < threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBelowEquals; public static ByteProcessor thresholdBelowEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 <= threshold. Parameters:; ip - ; threshold - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html:2832,hash,hashCode,2832,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,1,['hash'],['hashCode']
Security,"e of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:3699,hash,hashCode,3699,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['hash'],['hashCode']
Security,e() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method i,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570085,hash,hashCode,570085,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"e(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6121,access,access,6121,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['access'],['access']
Security,"e. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice currently visible in the viewer. See Also:. getZPosition(); setZPosition(int); zPositionProperty(). tPosition; public IntegerProperty tPositionProperty; Current t-position for the timepoint currently visible in the viewer. See Also:. getTPosition();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13697,hash,hashCode,13697,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['hash'],['hashCode']
Security,"e; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:1566,hash,hashCode,1566,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,1,['hash'],['hashCode']
Security,"e; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:1806,hash,hashCode,1806,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['hash'],['hashCode']
Security,"eChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5809,hash,hashCode,5809,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['hash'],['hashCode']
Security,"eData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2846,hash,hashCode,2846,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['hash'],['hashCode']
Security,"eFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975840,access,access,975840,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"ePixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one channel of another server. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying a threshold to one or more channels of another server. static int; getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t). Request the classification for a specific pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierTools; public PixelClassifierTools(). Method Details. createDetectionsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createDetectionsFromPixelClassifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:6316,hash,hashCode,6316,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['hash'],['hashCode']
Security,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1125,hash,hashCode,1125,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['hash'],['hashCode']
Security,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; imageData - . setInputFile; public void setInputFile(File file); Deprecated.; Set the input file for the summary viewer. Parameters:; file - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html:1422,hash,hashCode,1422,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,1,['hash'],['hashCode']
Security,"ectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1827,hash,hashCode,1827,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['hash'],['hashCode']
Security,"ed Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BRIGHTFIELD_H_DAB. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER. Brightfield image with any stains. FLUORESCENCE. Fluorescence image. OTHER. Other image type, not covered by any of the alternatives above. UNSET. Image type has not been set. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageData.ImageType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageData.ImageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image with any stains. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image. OTHER; public static final ImageData.ImageType OTHER; Other image type, not covered by any of the alternatives above. UNSET; public static final ImageData.ImageType UNSET; Image type has not been set. Method Details. values; public static ImageData.ImageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html:1876,hash,hashCode,1876,javadoc/docs/qupath/lib/images/ImageData.ImageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.ImageType.html,1,['hash'],['hashCode']
Security,"ed, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; The image display to which the sliders are applied. See Also:. imageDisplayProperty(). disableMinMaxAdjustment; public BooleanProperty disableMinMaxAdjustmentProperty; Prevent the min and max sliders from being adjusted. See Also:. disableMinMaxAdjustmentProperty(). disableGammaAdjustment; public BooleanProperty disableGammaAdjustmentProperty; Prevent gamma from being adjusted. See Also:. disableGammaAdjustmentProperty(). selectedChannel; public ObjectProperty<ChannelDisplayInfo> selectedChannelProperty; The channel to which the sliders are applied.; This should be a channel found within #imageDisplayProperty(). See Also:. selectedChannelProperty(). maxValue; public DoubleProperty maxValueProperty; Value of the maximum slider. See Also:. maxValueProperty(). minValue; public DoubleP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:12784,hash,hashCode,12784,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['hash'],['hashCode']
Security,"edServerBuilder; deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers). Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. TransformedServerBuilder; extractChannels(int... channels). Extract specified channels for an image. TransformedServerBuilder; extractChannels(String... names). Extract specified channels for an image. TransformedServerBuilder; maxChannelProject(). Perform a maximum projection of the channels. TransformedServerBuilder; minChannelProject(). Perform a minimum projection of the channels. TransformedServerBuilder; reorderRGB(String order). Rearrange the channel order of an RGB image. TransformedServerBuilder; rotate(RotatedImageServer.Rotation rotation). Rotate the image, using an increment of 90 degrees. TransformedServerBuilder; transform(AffineTransform transform). Apply an AffineTransform to the server. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TransformedServerBuilder; public TransformedServerBuilder(ImageServer<BufferedImage> baseServer); Create a transformed ImageServer. Parameters:; baseServer - the initial server that will be transformed. Method Details. crop; public TransformedServerBuilder crop(ImageRegion region); Crop an specified region based on a bounding box. Parameters:; region - ; Returns:. transform; public TransformedServerBuilder transform(AffineTransform transform); Apply an AffineTransform to the server. ; Note that the transform must be invertible, otherwise and IllegalArgumentException will be thrown. Parameters:; transform - ; Returns:. deconvolveStains; public TransformedServerBuilder deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers); Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. Parameters:; stains - the stains to apply for color deconvolution; stai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html:2674,hash,hashCode,2674,javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,1,['hash'],['hashCode']
Security,"eded to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2552,hash,hashCode,2552,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['hash'],['hashCode']
Security,"eded to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2609,hash,hashCode,2609,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['hash'],['hashCode']
Security,"el for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may differ in future releases, and it is not guaranteed that all colors ; will be unique. If the colors must be exactly reproducible then it is better to specify them rather than to; depend on this method. Parameters:; channel - ; Returns:. getDefaultRGBChannels; public static List<ImageChannel> getDefaultRGBChannels(); Get default channel list for RGB images. Returns:. getDefaultChannelList; public static List<ImageChannel> getDefaultChannelList(int nChannels); Get default channel list for an image with a specified number of channels.; This is useful whenever no further channel name or color information is available. Parameters:; nChannels - ; Returns:. isTransparent; public boolean isTransparent(); Check if the color is 'transparent'; this is used for background/ignored channels. Returns:. getName; public String getName(); Name of the output channel. Returns:. getColor; public Integer getColor(); Color used to display the output channel. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html:4353,hash,hashCode,4353,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html,3,['hash'],['hashCode']
Security,"eleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSize. Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeight. Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidth. Preferred line width for the scalebar. static StringProperty; scriptsPath. Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeed. Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:6691,access,access,6691,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['access']
Security,"elerationProperty; public static BooleanProperty navigationAccelerationProperty(); Apply acceleration/deceleration effects when holding and releasing navigation key. Returns:; navigationAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:48831,access,access,48831,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['access']
Security,"elerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBooleanProperty readOnlyProperty; Property indicating whether QuPath is in 'read-only' mode. See Also:. isReadOnly(); setReadOnly(boolean); readOnlyProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. getImageData(); imageDataProperty(). project; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty; Read-only property representing the currently-open project. See Also:. getProject(); setProject(Project); projectProperty(). viewer; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty; Property representing the viewer currently active. See Also:. getViewer(); v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:10748,hash,hashCode,10748,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['hash'],['hashCode']
Security,"ementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:31023,access,access,31023,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1549,access,accessibleHelp,1549,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"ent, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSliderPane();  . Method Summary. All MethodsInstance MethodsC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:1912,access,accessibleHelp,1912,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,4,['access'],"['accessibleHelp', 'accessibleRole', 'accessibleRoleDescription', 'accessibleText']"
Security,"enum LocalNormalization.NormalizationType; extends Enum<LocalNormalization.NormalizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No local normalization. GAUSSIAN_MEAN_ONLY; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_ONLY; Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_VARIANCE; Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. Method Details. values; public static LocalNormalization.NormalizationType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LocalNormalization.NormalizationType valueOf(String name); Returns the enum constant of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:1766,hash,hashCode,1766,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,1,['hash'],['hashCode']
Security,"epresenting a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52987,access,access,52987,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"er; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:1844,hash,hashCode,1844,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['hash'],['hashCode']
Security,"er<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN; public static final UriUpdater.UriStatus UNKNOWN; URI status is unclear, e.g. because it does not refer to a file. Method Details. values; public static UriUpdater.UriStatus[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static UriUpdater.UriStatus valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:1648,hash,hashCode,1648,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,1,['hash'],['hashCode']
Security,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1510,hash,hashCode,1510,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['hash'],['hashCode']
Security,"erived 2+ classification, indicating moderate positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getThreePlus; public static PathClass getThreePlus(PathClass parentClass); Get a standalone or derived 3+ classification, indicating strong positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getNegative; public static PathClass getNegative(PathClass parentClass); Get a standalone or derived Negative classification. Parameters:; parentClass - parent classification (may be null); Returns:. getPositive; public static PathClass getPositive(PathClass parentClass); Get a standalone or derived Positive classification. Parameters:; parentClass - parent classification (may be null); Returns:. getSingleton; public static PathClass getSingleton(PathClass pathClass); Get the singleton PathClass that is equivalent to the PathClass provided.; ; This is important because there should only ever be one PathClass instance for ; any classification - and accessing PathClasses only via the getInstance() ; methods here should ensure that.; ; However, if receiving a PathClass from some other source then it is possible ; that the PathClass was created some other way and duplicates could emerge. ; Calling this method returns resolves that problem by returning the single instance ; that should be used.; ; This is significant if the PathClass has been created via Java deserialization, ; which skips the required use of getInstance() by default. Parameters:; pathClass - ; Returns:; either the input PathClass, or an equivalent that should be used. fromArray; public static PathClass fromArray(String... names); Get a PathClass from an array of individual names. Parameters:; names - ; Returns:; See Also:. fromCollection(Collection); getInstance(PathClass, String, Integer). readResolve; protected Object readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:16105,access,accessing,16105,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['access'],['accessing']
Security,"ers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. ImageServerMetadata. Class for storing primary ImageServer metadata fields. ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:25348,access,access,25348,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['access']
Security,"ers. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1934,access,accessed,1934,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['access'],['accessed']
Security,"ers.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current batch processing batch.; Running a single script in isolation should be seen as batch processing ; with a batch size of 1. See Also:. Constant Field Values. BATCH_INDEX; public static final String BATCH_INDEX; Index of the current run when batch processing (starting at 0). See Also:. Constant Field Values. BATCH_LAST; public static final String BATCH_LAST; Boolean flag to indicate if the current script is the last in a batch. See Also:. Constant Field Values. BATCH_SAVE; public static final String BATCH_SAVE; Boolean flag to indicate whether changes to the image data should automatically be saved. See Also:. Constant Fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:1622,hash,hashCode,1622,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,1,['hash'],['hashCode']
Security,"ers.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2681,hash,hashCode,2681,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['hash'],['hashCode']
Security,"erver, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:2758,hash,hashCode,2758,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['hash'],['hashCode']
Security,"es for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:6618,hash,hashCode,6618,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['hash'],['hashCode']
Security,"es. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1923,hash,hashCode,1923,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['hash'],['hashCode']
Security,"esents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final ImageServerMetadata.ChannelType DEFAULT; Default channel interpretation. This is true for most 'normal' images. FEATURE; public static final ImageServerMetadata.ChannelType FEATURE; Each channel represents a feature for a pixel classifier. PROBABILITY; public static final ImageServerMetadata.ChannelType PROBABILITY; Each channel represents a probability value, where it is assumed that there is only one true class per pixel. MULTICLASS_PROBABILITY; public static final ImageServerMetadata.ChannelType MULTICLASS_PROBABILITY; Each channel represents a probability value, where each pixel is potentially part of multiple classes. CLASSIFICATION; public static final ImageServerMetadata.ChannelType CLASSIFICATION; Each channel represents a classification, such as in a labelled image. DENSITY; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html:2258,hash,hashCode,2258,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,1,['hash'],['hashCode']
Security,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1513,hash,hashCode,1513,javadoc/docs/qupath/opencv/tools/Thinning.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html,1,['hash'],['hashCode']
Security,"eterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. abstract boolean; isTrained(). Classifier has already been trained and is ready to predict. abstract void; predict(Mat samples,; Mat results,; Mat probabilities). Apply classification, optionally requesting probability estimates. abstract boolean; supportsAutoUpdate(). Classifier can be trained interactively (i.e. abstract boolean; supportsMissingValues(). Classifier can handle missing (NaN) values. abstract boolean; supportsMulticlass(). Classifier is able to handle more than one outputs for a single sample. abstract boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; abstract void; train(TrainData trainData). Train the classifier using data in an appropriate format. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. OpenCVStatModel; public OpenCVStatModel(). Method Details. supportsMissingValues; public abstract boolean supportsMissingValues(); Classifier can handle missing (NaN) values. Returns:; true if NaNs are supported, false otherwise. getName; public abstract String getName(); User-friendly, readable name for the classifier. Returns:; the classifier name. isTrained; public abstract boolean isTrained(); Classifier has already been trained and is ready to predict. Returns:; true if the classifier is trained, false otherwise. supportsMulticlass; public abstract boolean supportsMulticlass(); Classifier is able to handle more than one outputs for a single sample. Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public abstract boolean supportsAutoUpdate(); Classifier can be trained interactively (i.e. quickly). Returns:; true if interactive classification is supported, false otherwise.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html:2494,hash,hashCode,2494,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.OpenCVStatModel.html,1,['hash'],['hashCode']
Security,"ethod in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntPara",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569729,hash,hashCode,569729,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PropertiesLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage. public class PropertiesLanguage; extends ScriptLanguage; Class for the representation of properties and config files in QuPath.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PropertiesLanguage(). Constructor for a Java properties as a script editor language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PropertiesLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PropertiesLanguage; public PropertiesLanguage(); Constructor for a Java properties as a script editor language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PropertiesLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html:1356,hash,hashCode,1356,javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,1,['hash'],['hashCode']
Security,"ethods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAScoreImporter; public TMAScoreImporter(). Method Details. importFromCSV; public static int importFromCSV(File file,; PathObjectHierarchy hierarchy); throws IOException; Import TMA scores from a file into the TMAGrid of an object hierarchy. Parameters:; file - ; hierarchy - ; Returns:; Throws:; IOException. importFromCSV; public static int importFromCSV(String text,; PathObjectHierarchy hierarchy); Import TMA scores from a String into the TMAGrid of an object hierarchy. Parameters:; text - ; hierarchy - ; Returns:. parseNumeric; public static double[] parseNumeric(List<String> list,; boolean allOrNothing); Parse numeric values from a list of strings.; . Parameters:; list - list of strings containing the input text. Empty or null strings are treated as missing and returned as NaN.; allOrNothing - is true, the assumption is made that all values will be numeric or none of them will.; Consequently, if any non-missing,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:1960,hash,hashCode,1960,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html,1,['hash'],['hashCode']
Security,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:1757,hash,hashCode,1757,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,1,['hash'],['hashCode']
Security,"ex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nuc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1927,hash,hashCode,1927,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['hash'],['hashCode']
Security,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PlainStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler. All Implemented Interfaces:; ScriptStyler. public class PlainStyler; extends Object; implements ScriptStyler; Styling for plain text (which really means no styling). Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html:1139,hash,hashCode,1139,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PlainStyler.html,1,['hash'],['hashCode']
Security,"example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:3294,hash,hashCode,3294,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['hash'],['hashCode']
Security,"e opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.PieChartBuilder; title(String title). Specify the chart title. Charts.PieChartBuilder; tooltips(boolean showTooltips). Request tooltips to be shown when the cursor hovers over the pie chart. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(PieChart chart). Method that applies properties of this builder to the chart. Charts.PieChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.PieChartBuilder; width(double width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:3153,hash,hashCode,3153,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,1,['hash'],['hashCode']
Security,"f the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:2502,access,accessible,2502,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['access'],['accessible']
Security,"fferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:2198,hash,hashCode,2198,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['hash'],['hashCode']
Security,"fs. Create multiple points within the same annotation when using the counting tool. MultiscaleFeatures - Class in qupath.opencv.tools. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures() - Constructor for class qupath.opencv.tools.MultiscaleFeatures;  ; MultiscaleFeatures.Hessian - Interface in qupath.opencv.tools. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D - Class in qupath.opencv.tools. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D - Class in qupath.opencv.tools. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature - Enum Class in qupath.opencv.tools. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder - Class in qupath.opencv.tools. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap - Class in qupath.opencv.tools. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. MultiscaleResultsBuilder() - Constructor for class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Default constructor. MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature>) - Constructor for class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Constructor prepared to calculate specified features. multitouchActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; MultitouchActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions;  ; MULTIVIEW_ADD_COLUMN - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions;  ; MULTIVIEW_ADD_ROW - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions;  ; MULTIVIEW_CLOSE_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; MULTIVIEW_GRID_1x1 - Variable in class qupath.lib.gui.act",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:702812,access,access,702812,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"g morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask); Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Parameters:; ipM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:2465,hash,hashCode,2465,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['hash'],['hashCode']
Security,"g the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle used to draw individual points in a point annotation (in pixels). static void; resetPreferences(). Reset the preferences to their defaults. static BooleanProperty; returnToMoveModeProperty(). Request that the GUI returns to using the PAN tool after a ROI is drawn. static boolean; savePreferences(). Save the preferences. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSizeProperty(). Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeightProperty(). Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidthProperty(). Preferred line width for the scalebar. static StringProperty; scriptsPathProperty(). Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeedProperty(). Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionModeProperty(). Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptionsProperty(). Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitleProperty(). Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptionsProperty(). Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDsProperty(). Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static Boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:20228,access,access,20228,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['access'],['access']
Security,"g; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingValue - an optional value that may be used to replace non-finite (i.e. miss",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1478,hash,hashCode,1478,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,1,['hash'],['hashCode']
Security,"ge, PropertiesLanguage, XmlLanguage, YamlLanguage. public abstract class ScriptLanguage; extends Object; Abstract class to represent languages supported by the script editor. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; ScriptLanguage(String name,; String ext). Default constructor for a ScriptLanguage. protected ; ScriptLanguage(String name,; Collection<String> exts). Default constructor for a ScriptLanguage. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. Set<String>; getExtensions(). Get an unmodifiable set containing the possible extensions for this language. String; getName(). Get the name of this language. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ScriptLanguage; protected ScriptLanguage(String name,; Collection<String> exts); Default constructor for a ScriptLanguage. Parameters:; name - the language name; exts - all supported file extensions for this language, in the form .ext (lowercase). ScriptLanguage; protected ScriptLanguage(String name,; String ext); Default constructor for a ScriptLanguage. Parameters:; name - the language name; ext - the file extensions for this language, in the form .ext (lowercase). Method Details. getName; public String getName(); Get the name of this language. Returns:; name. getExtensions; public Set<String> getExtensions(); Get an unmodifiable set containing the possible extensions for this language. Returns:; extension array. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html:1560,hash,hashCode,1560,javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/ScriptLanguage.html,1,['hash'],['hashCode']
Security,"geServerBuilder. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:1996,hash,hashCode,1996,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['hash'],['hashCode']
Security,"getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; sendLogToConsoleProperty(). Boolean property indicating whether the console should display the log, rather than ; directly-printed information. void; showEditor(). Show the script editor. void; showScript(File file). Show the script editor, opening an existing script file. void; showScript(String name,; String script). Show the script editor, including a new script with the specified name. boolean; supportsFile(File file). Query whether a file represents a supported script. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. currentLanguage; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty. See Also:. getCurrentLanguage(); currentLanguageProperty(). currentSyntax; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty. See Also:. getCurrentSyntax(); currentSyntaxProperty(). sendLogToConsole; protected ObservableBooleanValue sendLogToConsoleProperty; Boolean property indicating whether the console should display the log, rather than ; directly-printed information. See Also:. sendLogToConsoleProperty(). Field Details. comboPasteEscape; protected KeyCombination comboPasteEscape. completionCodeCombination; protected final KeyCodeCombination completionCodeCombination. beautifySourceAction; protected org.controlsfx.control.action.Action beautifySourceAction. compressSourceAction; protected org.controlsfx.control.action.Action compressSourceAction. copyAction; protected org.controlsfx.control.action.Action co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:5052,hash,hashCode,5052,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['hash'],['hashCode']
Security,"getZPosition, hasServer, hierarchyChanged, imageDataProperty, imagePointToComponentPoint, isImageDataChanging, isRotated, isShowing, isSpaceDown, paintComponent, paintViewer, removeViewerListener, repaint, repaintTimestamp, requestCancelDirection, requestDecelerate, requestStartMoving, requestStopMoving, requiresTileRegion, resetCustomPixelLayerOverlay, resetImageData, resetMinimumRepaintSpacingMillis, rotationProperty, selectedPathObjectChanged, setActiveTool, setBorderColor, setCenterPixelLocation, setCursor, setCustomPixelLayerOverlay, setDoFasterRepaint, setDownsampleFactor, setDownsampleFactor, setDownsampleFactor, setGamma, setImageData, setMagnification, setMinimumRepaintSpacingMillis, setRotation, setSelectedObject, setSelectedObject, setSpaceDown, setTPosition, setZPosition, tileAvailable, toString, tPositionProperty, updateCursor, zoomIn, zoomIn, zoomOut, zoomOut, zoomToFit, zPositionProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:4085,hash,hashCode,4085,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,1,['hash'],['hashCode']
Security,"gin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.LineCap FLAT; Flat cap. SQUARE; public static final DilateAnnotationPlugin.LineCap SQUARE; Square cap. Method Details. values; public static DilateAnnotationPlugin.LineCap[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static DilateAnnotationPlugin.LineCap valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html:1740,hash,hashCode,1740,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,1,['hash'],['hashCode']
Security,"gion,; ImageData<BufferedImage> imageData). Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. static void; quickShowImage(String name,; Roi roi,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static void; quickShowImage(String name,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static List<Roi>; readImageJRois(File file). Read ImageJ Rois from a .roi or a RoiSet.zip file. static void; setMemoryThreshold(double threshold);  ; static void; setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject). Set the name of an image based on a PathObject. static double; tryToParseMicrons(double value,; String unit). Based on a value and its units, try to get something suitable in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IJTools; public IJTools(). Method Details. setMemoryThreshold; public static void setMemoryThreshold(double threshold). Parameters:; threshold - - value in the interval ]0;1] defining the maximum remaining memory fraction an image can have ; when importing an image to ImageJ. isMemorySufficient; public static boolean isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData); throws Exception; Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. Parameters:; region - the requested region coming from; imageData - this BufferedImage; Returns:; true if the memory is sufficient; Throws:; Exception - either the fact that ImageJ cannot handle the image size or that the memory is insufficient. extractHyperstack; public static ImagePlus extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:8111,hash,hashCode,8111,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['hash'],['hashCode']
Security,"gui.actions.menus; Class ObjectsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions. Enclosing class:; ObjectsMenuActions. @ActionMenu(""Menu.Objects""); public class ObjectsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectsMenuActions.AnnotationActions; annotationActions;  ; final ObjectsMenuActions.DeleteActions; deleteActions;  ; final ObjectsMenuActions.LockActions; lockActions;  ; final org.controlsfx.control.action.Action; REFRESH_DUPLICATE_OBJECT_IDS;  ; final org.controlsfx.control.action.Action; REFRESH_OBJECT_IDS;  ; final ObjectsMenuActions.SelectActions; selectActions;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. deleteActions; @ActionMenu(""Menu.Objects.Delete""); public final ObjectsMenuActions.DeleteActions deleteActions. selectActions; @ActionMenu(""Menu.Objects.Select""); public final ObjectsMenuActions.SelectActions selectActions. lockActions; @ActionMenu(""Menu.Objects.Lock""); public final ObjectsMenuActions.LockActions lockActions. SHOW_OBJECT_DESCRIPTIONS; public final org.controlsfx.control.action.Action SHOW_OBJECT_DESCRIPTIONS. SEP_4; public final org.controlsfx.control.action.Action SEP_4. annotationActions; @ActionMenu(""Menu.Objects.Annotations""); public final ObjectsMenuActions.AnnotationActions annotationActions. REFRESH_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshIds""); public final org.controlsfx.control.action.Action REFRESH_OBJECT_IDS. REFRESH_DUPLICATE_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshDuplicateIds""); public final org.controlsfx.control.action.Action REFRESH_DUPLICATE_OBJECT_IDS. Constructor Det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html:1354,hash,hashCode,1354,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,1,['hash'],['hashCode']
Security,"gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html:1340,hash,hashCode,1340,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,1,['hash'],['hashCode']
Security,"gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon depicting a ROI. Parameters:; roi - the region of interest; width - the preferred icon width; height - the preferred icon height; color - the icon (line) color; Returns:; a node that may be used as an icon resembling the shape of the ROI. createNode; public static Node createNode(int width,; int height,; IconFactory.PathIcons type); Create a node from a default icon glyph. Parameters:; width - preferred",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html:1398,hash,hashCode,1398,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html,1,['hash'],['hashCode']
Security,"g friendlyCompression). Get the CompressionType corresponding to the given input. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; supportsImage(PixelType pixelType,; int nChannels,; boolean isRGB). Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. String; toFriendlyString(). Get a friendlier string representation. static OMEPyramidWriter.CompressionType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.CompressionType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UNCOMPRESSED; public static final OMEPyramidWriter.CompressionType UNCOMPRESSED; No compression (faster to write, no loss of information, but large file sizes). DEFAULT; public static final OMEPyramidWriter.CompressionType DEFAULT; Default (QuPath will select compression option based on image size and type, may be lossless or lossy). JPEG; public static final OMEPyramidWriter.CompressionType JPEG; JPEG compression (only for single channel or RGB 8-bit images). J2K; public static final OMEPyramidWriter.CompressionType J2K; Lossless JPEG-2000 compression. J2K_LOSSY; public static final OMEPyramidWriter.CompressionType J2K_LOSSY; Lossy JPEG-2000 compression. LZW; public static final OMEPyramidWriter.CompressionType LZW; LZW compression. ZLIB; public static final OMEPyramidWriter.CompressionType ZLIB; ZLIB compres",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html:2668,hash,hashCode,2668,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,1,['hash'],['hashCode']
Security,"h.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.Smo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569143,hash,hashCode,569143,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"h.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569892,hash,hashCode,569892,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"he control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3459,hash,hashCode,3459,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['hash'],['hashCode']
Security,"he measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of-range values should be excluded. Parameters:; excludeOutsideRange - . i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:2637,hash,hashCode,2637,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,1,['hash'],['hashCode']
Security,"he names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:2643,hash,hashCode,2643,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['hash'],['hashCode']
Security,"height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setMaxWidth; public static void setMaxWidth(double width",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:4011,hash,hashCode,4011,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['hash'],['hashCode']
Security,"height. LabeledImageServer.Builder; useAnnotations(). Use annotations for labels. LabeledImageServer.Builder; useCellNuclei(). Use cells rather than annotations for labels, requesting the nucleus ROI where available. LabeledImageServer.Builder; useCells(). Use cells rather than annotations for labels. LabeledImageServer.Builder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCells; public LabeledImageServer.Builder useCells(); Use cells rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCellNuclei; public LabeledImageServer.Builder useCellNuclei(); Use cells rather than annotations for labels, requesting the nucleus ROI where available.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useAnnotations; public LabeledImageServer.Builder useAnnotations(); Use annotations for labels. This is the default. Returns:; See Also:. useDetections().",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:5903,hash,hashCode,5903,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['hash'],['hashCode']
Security,"her this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:569801,hash,hashCode,569801,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1612,hash,hashCode,1612,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,1,['hash'],['hashCode']
Security,"hod; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion.; ; If no Rectangle is provided, a new one will be created. Parameters:; region - ; rect - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi); Create a Rectangle2D corresponding to bounding box of a ROI. Parameters:; roi - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi,; Rectangle2D rect); Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI.; ; If no Rectangle2D is provided, a new one will be created. Parameters:; roi - ; rect - ; Returns:. getBounds; public static Rectangle getBounds(ROI roi); Create a Rectangle corres",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html:1649,hash,hashCode,1649,javadoc/docs/qupath/lib/awt/common/AwtTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html,1,['hash'],['hashCode']
Security,"hodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition to a standard Menu. Parameters:; menuItems - existing list to which items",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:1645,hash,hashCode,1645,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html,1,['hash'],['hashCode']
Security,"hodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBitsPerPixel(). Number of bits per pixel. int; getBytesPerPixel(). Number of bytes per pixel. Number; getLowerBound(). Get a number representing the minimum value permitted by this type (may be negative). Number; getUpperBound(). Get a number representing the maximum value permitted by this type. boolean; isFloatingPoint(). Returns true if the type is a floating point representation. boolean; isSignedInteger(). Returns true if the type is a signed integer representation. boolean; isUnsignedInteger(). Returns true if the type is an unsigned integer representation. static PixelType; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UINT8; public static final PixelType UINT8; 8-bit unsigned integer. INT8; public static final PixelType INT8; 8-bit signed integer. UINT16; public static final PixelType UINT16; 16-bit unsigned integer. INT16; public static final PixelType INT16; 16-bit signed integer. UINT32; public static final PixelType UINT32; 32-bit unsigned integer (not supported by BufferedImage). INT32; public static final PixelType INT32; 32-bit signed integer. FLOAT32; public static final PixelType FLOAT32; 32-bit floating point. FLOAT64; public static final PixelType FLOAT64; 64-bit floating point. Method Details. values; public static PixelType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html:2279,hash,hashCode,2279,javadoc/docs/qupath/lib/images/servers/PixelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelType.html,1,['hash'],['hashCode']
Security,"hrough this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:3458,hash,hashCode,3458,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['hash'],['hashCode']
Security,"htextfx.RichScriptEditorExtension. All Implemented Interfaces:; QuPathExtension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:1458,hash,hashCode,1458,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,1,['hash'],['hashCode']
Security,"ialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(). Deprecated.; Show the dialog. Optional<ButtonType>; showAndWait(). Deprecated.; Show the dialog. Dialogs.Builder; size(double width,; double height). Deprecated.; Specify the dialog height. Dialogs.Builder; title(String title). Deprecated.; Specify the dialog title. Dialogs.Builder; warning(). Deprecated.; Create a warning alert dialog. Dialogs.Builder; width(double width). Deprecated.; Specify the dialog width. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Deprecated. Method Details. title; public Dialogs.Builder title(String title); Deprecated.; Specify the dialog title. Parameters:; title - dialog title; Returns:; this builder. headerText; public Dialogs.Builder headerText(String header); Deprecated.; Specify the dialog header text.; This is text that is displayed prominently within the dialog. Parameters:; header - dialog header; Returns:; this builder; See Also:. contentText(String). contentText; public Dialogs.Builder contentText(String content); Deprecated.; Specify the dialog content text.; This is text that is displayed within the dialog. Parameters:; content - dialog content text; Returns:; this builder; See Also:. headerText(String). content; public Dialogs.Builder content(Node content); Deprecated.; Specify a Node to display within the dialog. Parameters:; content - dialog content; Returns:; this builder; See Also:. contentText(St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:3017,hash,hashCode,3017,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['hash'],['hashCode']
Security,ib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageD,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570172,hash,hashCode,570172,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['hash'],['hashCode']
Security,"ibration cal). Specify pixel calibration, which is used to calibrate the x and y coordinates. DelaunayTools.Builder; centroids(). Specify that the triangulation should be based on ROI centroids. DelaunayTools.Builder; coordinateExtractor(Function<PathObject,Collection<Coordinate>> coordinateExtractor). Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. DelaunayTools.Builder; preferNucleus(boolean prefer). Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). DelaunayTools.Builder; roiBounds(). Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. DelaunayTools.Builder; roiBounds(double densify,; double erosion). Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. calibration; public DelaunayTools.Builder calibration(PixelCalibration cal); Specify pixel calibration, which is used to calibrate the x and y coordinates. Parameters:; cal - the calibration to use; Returns:; this builder. centroids; public DelaunayTools.Builder centroids(); Specify that the triangulation should be based on ROI centroids. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(); Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(double densify,; double erosion); Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Parameters:; densify - how much to 'densify' the coordinates; recommended default value is 4.0 (assuming uncalibrated pixels).; Decreasing the value will give a denser (and slower) triangulati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html:1871,hash,hashCode,1871,javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,1,['hash'],['hashCode']
Security,"idScaleMicrons;  ; final DoubleProperty; gridSpacingX;  ; final DoubleProperty; gridSpacingY;  ; final BooleanProperty; interpolateBilinear;  ; final BooleanProperty; invertScrolling;  ; final BooleanProperty; invertZSlider;  ; final BooleanProperty; iseScrollGestures;  ; final BooleanProperty; keepDisplaySettings;  ; final ObjectProperty<PathPrefs.FontSize>; locationFontSize;  ; final BooleanProperty; navigationAcceleration;  ; final IntegerProperty; navigationSpeed;  ; final ObjectProperty<PathPrefs.FontSize>; scalebarFontSize;  ; final ObjectProperty<FontWeight>; scalebarFontWeight;  ; final DoubleProperty; scalebarLineWidth;  ; final IntegerProperty; scrollSpeed;  ; final BooleanProperty; skipMissingCores;  ; final BooleanProperty; useRotateGestures;  ; final BooleanProperty; useZoomGestures;  . Constructor Summary; Constructors. Constructor; Description; ViewerPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. backgroundColor; @ColorPref(""Prefs.Viewer.backgroundColor""); public final IntegerProperty backgroundColor. alwaysPaintSelected; @BooleanPref(""Prefs.Viewer.alwaysPaintSelected""); public final BooleanProperty alwaysPaintSelected. keepDisplaySettings; @BooleanPref(""Prefs.Viewer.keepDisplaySettings""); public final BooleanProperty keepDisplaySettings. interpolateBilinear; @BooleanPref(""Prefs.Viewer.interpolateBilinear""); public final BooleanProperty interpolateBilinear. autoSaturationPercent; @DoublePref(""Prefs.Viewer.autoSaturationPercent""); public final DoubleProperty autoSaturationPercent. invertZSlider; @BooleanPref(""Prefs.Viewer.invertZSlider""); public final BooleanProperty invertZSlider. scrollSpeed; @IntegerPref(""Prefs.Viewer.scrollSpeed""); public final IntegerProperty scrollSpeed. navigationSpeed; @IntegerPref(""Prefs.Viewer.navigationSpeed""); public final IntegerProperty navigationSpeed. navigationAcceleration; @Boolea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html:1983,hash,hashCode,1983,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ViewerPreferences.html,1,['hash'],['hashCode']
Security,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2383,hash,hashCode,2383,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,1,['hash'],['hashCode']
Security,"ied opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; scaleColor(Color color,; double factor). Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static Color getCach",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:2884,hash,hashCode,2884,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['hash'],['hashCode']
Security,"iew; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class FeaturePreprocessor.Builder. java.lang.Object; qupath.opencv.ml.FeaturePreprocessor.Builder. Enclosing class:; FeaturePreprocessor. public static class FeaturePreprocessor.Builder; extends Object; Builder to create a custom FeaturePreprocessor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; FeaturePreprocessor; build(Mat trainingData,; boolean applyToTraining). Build a FeaturePreprocessor. FeaturePreprocessor.Builder; missingValue(double missingValue);  ; FeaturePreprocessor.Builder; normalize(Normalization normalization). Define normalization type. FeaturePreprocessor.Builder; pca(double retainedVariance,; boolean pcaNormalize). Perform PCA to reduce features. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. normalize; public FeaturePreprocessor.Builder normalize(Normalization normalization); Define normalization type. Parameters:; normalization - ; Returns:; this builder. missingValue; public FeaturePreprocessor.Builder missingValue(double missingValue). Parameters:; missingValue - ; Returns:; this builder. pca; public FeaturePreprocessor.Builder pca(double retainedVariance,; boolean pcaNormalize); Perform PCA to reduce features. Parameters:; retainedVariance - retained variance, used to determine how many features to keep; pcaNormalize - if true, normalize the projected features; Returns:; this builder. build; public FeaturePreprocessor build(Mat trainingData,; boolean applyToTraining); Build a FeaturePreprocessor.; The training data is expected to contain samples as rows and features as columns. Parameters:; trainingData - ; applyToTraining - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html:1180,hash,hashCode,1180,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.Builder.html,1,['hash'],['hashCode']
Security,"iewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:1521,hash,hashCode,1521,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,1,['hash'],['hashCode']
Security,"if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3489,hash,hashCode,3489,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['hash'],['hashCode']
Security,"ileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an ellipse ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjects; public PathObjects(). Method Details. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified annotation object with a specified measurement list.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; measurements - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass); Create a classified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi); Create an unclassified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:3113,hash,hashCode,3113,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['hash'],['hashCode']
Security,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsPro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:2379,hash,hashCode,2379,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['hash'],['hashCode']
Security,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2312,hash,hashCode,2312,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,2,['hash'],['hashCode']
Security,"ilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:2314,hash,hashCode,2314,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,3,['hash'],['hashCode']
Security,"inderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1778,hash,hashCode,1778,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['hash'],['hashCode']
Security,"information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2413,hash,hashCode,2413,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['hash'],['hashCode']
Security,"ing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); Get the requested pixel size for the density map. This may be null if an appropriate resolution can be generated automatically. Returns:. getDensityType; public DensityMaps.DensityMapType getDensityType(); Get the normalization type of the density map. Returns:. getMainObjectFilter; public PathObjectPredicates.PathObjectPredicate getMainObjectFilter(); Get the primary object filter. Returns:. getSecondaryObjectFilters; public Map<String,PathObjectPredicates.PathObjectPredicate> getSecondaryObjectFilters(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html:1506,hash,hashCode,1506,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,1,['hash'],['hashCode']
Security,"ing the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3539,hash,hashCode,3539,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['hash'],['hashCode']
Security,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:2042,validat,validation,2042,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,1,['validat'],['validation']
Security,"input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB value from specified input values, clipping to the range 0-255. static int; packRGB(int r,; int g,; int b). Make a packed RGB value from specified input values. static int; red(int rgb). Extract the 8-bit red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public static final Integer MASK_GREEN; Mask for use when extracting the green compo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:3900,hash,hashCode,3900,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['hash'],['hashCode']
Security,"ion; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public DisplaySettingUtils(). Method Details. displayToSettings; public static ImageDisplaySettings displayToSettings(ImageDisplay display,; String name); Create a new image display settings object from the image display.; This is typically used to save the settings to a file. Parameters:; display - ; name - ; Returns:. settingsCompatibleWithDisplay; public static boolean settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings); Check if the settings are compatible with the display.; This is true if the number and names of the channels match. Parameters:; display - ; settings - ; Returns:. applySettingsToDisplay; public static boolean applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings); Apply the settings to the display, if they are compatible. Parameters:; display - ; settings - ; Returns:; true if the settings were applied, false otherwise. p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html:1893,hash,hashCode,1893,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,1,['hash'],['hashCode']
Security,"ion<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupported",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2835,hash,hashCode,2835,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['hash'],['hashCode']
Security,"iption; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(). Get the width of the full-resolution image (level 0). int; getLevelCount(). Get the total number of pyramid levels. long; getLevelHeight(int level). Get the image height at the specified level. long; getLevelWidth(int level). Get the image width at the specified level. Map<String,String>; getProperties(). Get an unmodifiable map of all available properties. void; paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROPERTY_NAME_COMMENT; public static final String PROPERTY_NAME_COMMENT. See Also:. Constant Field Values. PROPERTY_NAME_VENDOR; public static final String PROPERTY_NAME_VENDOR. See Also:. Constant Field Values. PROPERTY_NAME_QUICKHASH1; public static final String PROPERTY_NAME_QUICKHASH1. See Also:. Constant Field Values. PROPERTY_NAME_BACKGROUND_COLOR; public static final String PROPERTY_NAME_BACKGROUND_COLOR. See Also:. Constant Field Values. PROPERTY_NAME_OBJECTIVE_POWER; public static final String PROPERTY_NAME_OBJECTIVE_POWER. See Also:. Constant Field Values. PROPERTY_NAME_MPP_X; public static final String PROPERTY_NAME_MPP_X. See Also:. Constant Field Values. PROPERTY_NAME_MPP_Y; public static final String PROPERTY_NAME_MPP_Y. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_X; public static final String PROPERTY_NAME_BOUNDS_X. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_Y; public static final Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:2530,hash,hashCode,2530,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,1,['hash'],['hashCode']
Security,"irect Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.Completion... completions). addCompletions; protected void addCompletions(Collection<? extends AutoCompletions.Completion> completions). getCompletions; public List<AutoCompletions.Completion> getCompletions(String text,; int pos); Description copied from interface: ScriptAutoCompletor; Get a list of possible auto-completions for the given text ; with the caret at the specified position. Specified by:; getCompletions in interface ScriptAutoCompletor; Parameters:; text - the full text; pos - the current caret position; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html:1567,hash,hashCode,1567,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,1,['hash'],['hashCode']
Security,"isabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.MultitouchActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.MultitouchActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultitouchActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; GESTURES_ALL;  ; final org.controlsfx.control.action.Action; GESTURES_NONE;  ; final org.controlsfx.control.action.Action; GESTURES_ROTATE;  ; final org.controlsfx.control.action.Action; GESTURES_SCROLL;  ; final org.controlsfx.control.action.Action; GESTURES_ZOOM;  ; final org.controlsfx.control.action.Action; SEP_9;  . Constructor Summary; Constructors. Constructor; Description; MultitouchActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GESTURES_ALL; @ActionConfig(""Action.View.Multitouch.allOn""); public final org.controlsfx.control.action.Action GESTURES_ALL. GESTURES_NONE; @ActionConfig(""Action.View.Multitouch.allOff""); public final org.controlsfx.control.action.Action GESTURES_NONE. SEP_9; public final org.controlsfx.control.action.Action SEP_9. GESTURES_SCROLL; @ActionConfig(""Action.View.Multitouch.scroll""); public final org.controlsfx.control.action.Action GESTURES_SCROLL. GESTURES_ZOOM; @ActionConfig(""Action.View.Multitouch.zoom""); public final org.controlsfx.control.action.Action GESTURES_ZOOM. GESTURES_ROTATE; @ActionConfig(""Action.View.Multitouch.rotate""); public final org.controlsfx.control.action.Action GESTURES_ROTATE. Constructor Details. MultitouchActions; public MultitouchActions(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html:1220,hash,hashCode,1220,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultitouchActions.html,1,['hash'],['hashCode']
Security,"ith 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static AffineTransform; fromScale(double scaleX,; double scaleY). Create an affine transform representing scaling, optionally using a different scale for x and y. static AffineTransform; identity(). Create an affine transform representing the identity transform. static AffineTransformation; toJTS(AffineTransform transform). Create a Java Topology Suite affine transformation from a Java affine transform. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AffineTransforms; public AffineTransforms(). Method Details. from2D; public static AffineTransform from2D(double[][] mat); throws IllegalArgumentException; Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong shape. fromRows; public static AffineTransform fromRows(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong length. fromColumns; public static AffineTransform fromColumns(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. Parameters:; mat - ; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:2478,hash,hashCode,2478,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,1,['hash'],['hashCode']
Security,"ithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public static ImagePlane getDefaultPlane(); Returns an ImagePlane with channel -1, z of 0 and t of 0.; ; Use of this method is discouraged; it is appropriate only for 2D images. Returns:. getPlaneWithChannel; public static ImagePlane getPlaneWithChannel(ROI roi); Returns an ImagePlane with channel, z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ROI roi); Returns an ImagePlane with channel -1, and z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ImageRegion region); Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:2708,hash,hashCode,2708,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,1,['hash'],['hashCode']
Security,"kage qupath.lib.common; Class ThreadTools. java.lang.Object; qupath.lib.common.ThreadTools. public class ThreadTools; extends Object; Create a thread factory that supports adding a prefix to the name and setting daemon status.; ; This helps with debugging, e.g. using visualvm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ThreadTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ThreadFactory; createThreadFactory(String prefix,; boolean daemon). Create a named thread factory with Thread.NORM_PRIORITY. static ThreadFactory; createThreadFactory(String prefix,; boolean daemon,; int priority). Create a named thread factory with a specified priority. static int; getParallelism(). Get the requested level of parallelism. static void; setParallelism(int nThreads). Set the requested level of parallelism. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ThreadTools; public ThreadTools(). Method Details. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon,; int priority); Create a named thread factory with a specified priority. Parameters:; prefix - ; daemon - ; priority - ; Returns:. createThreadFactory; public static ThreadFactory createThreadFactory(String prefix,; boolean daemon); Create a named thread factory with Thread.NORM_PRIORITY. Parameters:; prefix - ; daemon - ; Returns:. setParallelism; public static void setParallelism(int nThreads); Set the requested level of parallelism.; Note that for interactive use this is usually set through the user interface and shouldn't be modified ; elsewhere to maintain consistency. Parameters:; nThreads - . getParallelism; public static int getParallelism(); Get the requested level of parallelism. ; Other classes that make use of thread pools can use this to help balance mul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html:1323,hash,hashCode,1323,javadoc/docs/qupath/lib/common/ThreadTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ThreadTools.html,1,['hash'],['hashCode']
Security,"ks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class YamlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.YamlLanguage. public class YamlLanguage; extends ScriptLanguage; Class for the representation of YAML syntax in QuPath. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's classes). Constructor Summary; Constructors. Constructor; Description; YamlLanguage(). Constructor for YAML language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static YamlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. YamlLanguage; public YamlLanguage(); Constructor for YAML language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static YamlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html:1305,hash,hashCode,1305,javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,1,['hash'],['hashCode']
Security,"l ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. static Roi[]; labelsToConnectedROIs(ImageProcessor ipLabels,; int n). Create ROIs from labels in an image. static List<PolygonRoi>; labelsToFilledRoiList(ImageProcessor ipLabels,; boolean conn8). Convert a labelled image into a list of PolygonRois by tracing. static PolygonRoi[]; labelsToFilledROIs(ImageProcessor ipLabels,; int n). Convert a labelled image into a list of PolygonRois by tracing. static int; removeByAreas(ByteProcessor bp,; double minPixels,; double maxPixels,; boolean conn8). Remove objects containing < minPixels or > maxPixels. static void; removeSmallAreas(ByteProcessor bp,; double minPixels,; boolean conn8). Remove objects having small areas, defined in terms of pixels. static PolygonRoi; wandToRoi(Wand wand). Convert a traced outline from the ImageJ Wand into a PolygonRoi. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiLabeling; public RoiLabeling(). Method Details. findDirectionalMaxima; public static ByteProcessor findDirectionalMaxima(ImageProcessor ip); Create a binary image for pixels that have a higher value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. findDirectionalMinima; public static ByteProcessor findDirectionalMinima(ImageProcessor ip); Create a binary image for pixels that have a lower value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. getFilledPolygonROIsExperimental; public static List<PolygonRoi> getFilledPolygonROIsExperimental(ImageProcessor ip); Experimental 8-connected ROI creation; non-zero pixels considered within objects; ; TODO: I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:3306,hash,hashCode,3306,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,1,['hash'],['hashCode']
Security,"lass to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel); Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Parameters:; mainChannel - the main channel to display (colormap will be used); alphaChannel - an optional alpha channel (colormap will be ignored); Returns:; the ColorModels.ColorModelBuilder. createBand; public static ColorModels.DisplayBand createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay); Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). Parameters:; colorMapName - name of the ColorMaps.ColorMap; band - image band (the BufferedImage term - QuPath often refers to this as a channel); minDisplay - value associated with the first e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html:1769,hash,hashCode,1769,javadoc/docs/qupath/lib/color/ColorModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html,2,['hash'],['hashCode']
Security,"lass with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic glob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52709,access,accessing,52709,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['access'],['accessing']
Security,"lassification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:1769,hash,hashCode,1769,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,1,['hash'],['hashCode']
Security,"layed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Boolean; getValue(). Get the current set value (may be null). Boolean; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:2181,hash,hashCode,2181,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['hash'],['hashCode']
Security,"ld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; minThreshold - minimum threshold; labels will not expand into pixels with values below the threshold; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:1205,hash,hashCode,1205,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,1,['hash'],['hashCode']
Security,"lder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; OpenslideServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:1933,hash,hashCode,1933,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,1,['hash'],['hashCode']
Security,"le boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space).; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - The ImageServer from which the tiles would be requested; clipShape - The requested shape, defined in the full-resolution image space; downsampleFactor - The downsampleFactor determining the resolution at which tiles should be requested; zPosition - The zPosition from which to request tiles; tPosition - The tPosition from which to request tiles; regions - regions The ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:1746,hash,hashCode,1746,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,1,['hash'],['hashCode']
Security,"le in the full resolution image. int; getImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution image. int; getImageY(). Get the y-coordinate of the bounding box for this tile in the full resolution image. int; getLevel(). Get the resolution level. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). RegionRequest; getRegionRequest(). Get the RegionRequest that this tile represents. int; getT(). Get the time point index for this request. int; getTileHeight(). Get the height of the bounding box for this tile at the tile resolution. int; getTileWidth(). Get the width of the bounding box for this tile at the tile resolution. int; getTileX(). Get the x-coordinate of the bounding box for this tile at the tile resolution. int; getTileY(). Get the y-coordinate of the bounding box for this tile at the tile resolution. int; getZ(). Get the z-slice index for this request. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static TileRequest createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion); Create a new tile request for a specified region and resolution level of an image.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead ; to get the tiles that are actually available for an image. Parameters:; server - ; level - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). createInstance; public static TileRequest createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion); Create a new tile request for a specified region, downsample and resolution level.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead.; ; In cases where a new TileRequest is necessary, it is better to use ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:3068,hash,hashCode,3068,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['hash'],['hashCode']
Security,"le; getMinValue(). Get the minimum of all the values being histogrammed. double; getNormalizedCountsForBin(int ind). Get the normalized histogram count for the specified bin. double; getStdDev(). Get the standard deviation of all the values being histogrammed. double; getSum(). Get the sum of all the values being histogrammed. double; getVariance(). Get the variance of all the values being histogrammed. boolean; isInteger(). Check if the histogram has been generated from integer values only. static Histogram; makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins). Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. int; nBins(). Total number of histogram bins. long; nMissingValues(). Number of NaNs in the input array. long; nValues(). Number of values represented in the histogram (i.e. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Histogram; public Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be computed; nBins - number of histogram bins (will be number of edges - 1); minEdge - the minimum (edge) value to include in the histogram, or Double.NaN (to use the data minimum); maxEdge - the maximum (edge) value to include in the histogram, or Double.NaN (to use the data maximum). Histogram; public Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be com",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:3956,hash,hashCode,3956,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html,1,['hash'],['hashCode']
Security,"lic class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1504,hash,hashCode,1504,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,1,['hash'],['hashCode']
Security,"lic class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1495,hash,hashCode,1495,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['hash'],['hashCode']
Security,"lic void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Specified by:; train in class OpenCVClassifiers.OpenCVStatModel; Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:6151,sanitiz,sanitize,6151,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['sanitiz'],['sanitize']
Security,"links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1121,access,accessed,1121,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,1,['access'],['accessed']
Security,"lizable, TMAGrid. public class DefaultTMAGrid; extends Object; implements TMAGrid; Default implementation of a TMAGrid. Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; create(List<TMACoreObject> cores,; int gridWidth). Create a new TMAGrid based on a list of cores and grid width. int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:1485,hash,hashCode,1485,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,1,['hash'],['hashCode']
Security,"lize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException. buildServer; public static ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws IOException; Build a ImageServer f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3941,access,accessed,3941,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['access'],['accessed']
Security,"ll Implemented Interfaces:; Serializable, ScriptableWorkflowStep, WorkflowStep. public class RunSavedClassifierWorkflowStep; extends Object; implements ScriptableWorkflowStep; WorkflowStep for running a saved PathObjectClassifier. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; RunSavedClassifierWorkflowStep(String classifierPath). Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String name,; String classifierPath). Create a workflow step to run a classifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String name,; String classifierPath); Create a workflow step to run a classifier. Parameters:; name - step name for display, to identify the purpose of the step (not the classifier); classifierPath - path to the serialized classifier. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String classifierPath); Constructor, taking the path to the serialized classifier. Parameters:; classifierPath - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html:1498,hash,hashCode,1498,javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,1,['hash'],['hashCode']
Security,"losing class:; FileMenuActions. public class FileMenuActions.ProjectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; CHECK_URIS;  ; final org.controlsfx.control.action.Action; EXPORT_IMAGE_LIST;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES;  ; final org.controlsfx.control.action.Action; IMPORT_IMAGES_LEGACY;  ; final org.controlsfx.control.action.Action; METADATA;  ; final org.controlsfx.control.action.Action; PROJECT_CLOSE;  ; final org.controlsfx.control.action.Action; PROJECT_NEW;  ; final org.controlsfx.control.action.Action; PROJECT_OPEN;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_22;  . Constructor Summary; Constructors. Constructor; Description; ProjectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROJECT_NEW; @ActionConfig(""Action.File.Project.createProject""); public final org.controlsfx.control.action.Action PROJECT_NEW. PROJECT_OPEN; @ActionConfig(""Action.File.Project.openProject""); public final org.controlsfx.control.action.Action PROJECT_OPEN. PROJECT_CLOSE; @ActionConfig(""Action.File.Project.closeProject""); public final org.controlsfx.control.action.Action PROJECT_CLOSE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. IMPORT_IMAGES; @ActionConfig(""Action.File.Project.addImages""); public final org.controlsfx.control.action.Action IMPORT_IMAGES. EXPORT_IMAGE_LIST; @ActionConfig(""Action.File.Project.exportImageList""); public final org.controlsfx.control.action.Action EXPORT_IMAGE_LIST. SEP_2; public final org.controlsfx.control.action.Action SEP_2. METADATA; @ActionConfig(""Action.File.Project.editMetadata""); public final org.controlsfx.control.action.Action METADATA. CHECK_URIS; @ActionConfig(""Ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html:1497,hash,hashCode,1497,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.ProjectActions.html,1,['hash'],['hashCode']
Security,"ls and classifications. int; getInputHeight(). Requested height of input image, or -1 if the classifier is not fussy. int; getInputNumChannels(). Requested number of channels in input image; default is 3 (consistent with assuming RGB). int; getInputPadding(). Requested input padding (above, below, left and right). PixelCalibration; getInputResolution(). Requested pixel size for input. int; getInputWidth(). Requested width of input image, or -1 if the classifier is not fussy. List<ImageChannel>; getOutputChannels(). List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. PixelType; getOutputPixelType(). Pixel type of output; default is null indicating the pixel type is unknown. ImageServerMetadata.ChannelType; getOutputType(). Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputResolution; public PixelCalibration getInputResolution(); Requested pixel size for input. Returns:. getInputPadding; public int getInputPadding(); Requested input padding (above, below, left and right). Returns:. getInputWidth; public int getInputWidth(); Requested width of input image, or -1 if the classifier is not fussy. Returns:. getInputHeight; public int getInputHeight(); Requested height of input image, or -1 if the classifier is not fussy. Returns:. getInputNumChannels; public int getInputNumChannels(); Requested number of channels in input image; default is 3 (consistent with assuming RGB). Returns:. getOutputType; public ImageServerMetadata.ChannelType getOutputType(); Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. getOutputPixelType; public PixelType getOutputPixelType(); Pixel type of output; default is null indicating the pixel type is unknown. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html:1959,hash,hashCode,1959,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.html,1,['hash'],['hashCode']
Security,"lter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns that will be included in the export.; The column names are case sensitive. Parameters:; includeOnlyColumns - ; Returns:; this exporter. excludeColumns; public MeasurementExporter excludeColumns(String... excludeColumns); Specify the columns that will be excluded during the export.; The column names are case sensitive. Parameters:; excludeColumns - ; Returns:; this exporter. separator; public MeasurementExporter separator(String sep); Specify the separator used between measurement values.; To avoid unexpected behavior, it is rec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:2301,hash,hashCode,2301,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['hash'],['hashCode']
Security,"lugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2681,hash,hashCode,2681,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['hash'],['hashCode']
Security,"m of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. Original; public static final ColorTransformer.ColorTransformMethod Original; Original image. Red; public static final ColorTransformer.ColorTransformMethod Red; Red channel only. Green; public static final ColorTransformer.ColorTransformMethod Green; Green channel only. Blue; public static final ColorTransformer.ColorTransformMethod Blue; Blue channel only. Red_OD; public static final ColorTransformer.ColorTransformMethod Red_OD; Red channel optical densities. Green_OD; public static final ColorTransformer.ColorTransformMethod Green_OD; Green channel optical densities. Blue_OD; public static final ColorTransformer.ColorTransformMethod Blue_OD; Blue channel optical densities. RGB_mean; public static final ColorTransformer.ColorTransformMethod RGB_mean; Mean of red, green and blue channels. Hue; public static final ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:3475,hash,hashCode,3475,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['hash'],['hashCode']
Security,"ma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; imageData - ; overlayOptions - ; downsampleFactor - The downsample factor used for the TMA cores. If NaN, an automatic downsample value will be selected (>= 1). If <= 0, no cores are exported.; Throws:; IOException. importDearrayedTMAData; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:1397,hash,hashCode,1397,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,1,['hash'],['hashCode']
Security,"mage ; that should have opacity based upon pixel values. static DoubleToIntFunction; createLinearFunction(PixelType type). Create a linear function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. static ColorModel; getDummyColorModel(int bpp). Get a dummy ColorModel instance. static IndexColorModel; getIndexedClassificationColorModel(Map<Integer,PathClass> channels). Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. static ColorModel; getProbabilityColorModel32Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. static ColorModel; getProbabilityColorModel8Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIndexedClassificationColorModel; public static IndexColorModel getIndexedClassificationColorModel(Map<Integer,PathClass> channels); Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. Parameters:; channels - ; Returns:. createIndexedColorModel; public static ColorModel createIndexedColorModel(Map<Integer,Integer> labelColors,; boolean includeAlpha); Create an indexed colormap for a labelled (indexed color) image. Parameters:; labelColors - map with integer labels as keys and packed (A)RGB colors as values.; includeAlpha - if true, allow alpha values to be included in the colormap; Returns:. createIndexedColorModel8bit; public static IndexColorModel createIndexedColorModel8bit(ColorMaps.ColorMap map); Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. Parameters:; map - ; Returns:. createIndexedColorModel8bit; public static IndexColorModel createIndexedCol",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html:3752,hash,hashCode,3752,javadoc/docs/qupath/lib/color/ColorModelFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html,1,['hash'],['hashCode']
Security,"mageData, setDefaultProject, setDetectionIntensityClassifications, setDetectionIntensityClassifications, setImageType, setImageType, setIntensityClassifications, setIntensityClassifications, setIntensityClassifications, setIntensityClassificationsForSelected, setPixelSizeMicrons, setPixelSizeMicrons, setPixelSizeMicrons, setSelectedObject, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSpecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12074,hash,hashCode,12074,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['hash'],['hashCode']
Security,"mary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply normalization prior to returning the values. Parameters:; extractor - or",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:1638,hash,hashCode,1638,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,1,['hash'],['hashCode']
Security,"mber,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:1818,hash,hashCode,1818,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html,1,['hash'],['hashCode']
Security,"mbination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5043,access,accessible,5043,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['access'],['accessible']
Security,"meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:2524,hash,hashCode,2524,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,1,['hash'],['hashCode']
Security,mmands.ml.BoundaryStrategy; qupath.lib.gui.commands.BrightnessContrastCommand (implements java.lang.Runnable); qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. qupath.process.gui.WandToolEventHandler. qupath.lib.awt.common.BufferedImageTools; qupath.lib.gui.BuildInfo; qupath.process.gui.commands.CellIntensityClassificationCommand (implements java.lang.Runnable); qupath.lib.objects.CellTools; qupath.lib.display.settings.ChannelColor; qupath.lib.display.settings.ChannelSettings; qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.plugins.parameters.ChoiceParameter<S>; qupath.process.gui.commands.ml.ClassificationResolution; qupath.lib.gui.actions.menus.ClassifyMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.scripting.richtextfx.CodeAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.lib.color.ColorDeconvMatrix3x3; qupath.lib.color.ColorDeconvolutionHelper; qupath.lib.color.ColorDeconvolutionStains (implements java.io.Externalizable); qupath.lib.color.ColorMaps; qupath.lib.color.ColorModelFactory; qupath.lib.gui.images.stores.ColorModelRenderer (implements qupath.lib.gui.images.stores.ImageRenderer); qupath.lib.analysis.heatmaps.ColorModels; qupath.lib.color.ColorModels; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; qupath.lib.color.ColorModels.DisplayBand; qupath.lib.common.ColorTools; qupath.lib.color.ColorToolsAwt; qupath.lib.gui.tools.ColorToolsFX; qupath.lib.color.ColorTransformer; qupath.lib.images.servers.ColorTransforms; qupath.lib.gui.tools.CommandFinderTools; qupath.lib.gui.tools.CommandFinderTools.CommandEntry; qu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:9972,secur,security,9972,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['secur'],['security']
Security,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1374,hash,hashCode,1374,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,1,['hash'],['hashCode']
Security,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.ZoomActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.ZoomActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; ZOOM_1;  ; final org.controlsfx.control.action.Action; ZOOM_10;  ; final org.controlsfx.control.action.Action; ZOOM_100;  ; final org.controlsfx.control.action.Action; ZOOM_400;  ; final org.controlsfx.control.action.Action; ZOOM_IN;  ; final org.controlsfx.control.action.Action; ZOOM_OUT;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_400; @ActionConfig(""Action.View.Zoom.400""); public final org.controlsfx.control.action.Action ZOOM_400. ZOOM_100; @ActionConfig(""Action.View.Zoom.100""); public final org.controlsfx.control.action.Action ZOOM_100. ZOOM_10; @ActionConfig(""Action.View.Zoom.10""); public final org.controlsfx.control.action.Action ZOOM_10. ZOOM_1; @ActionConfig(""Action.View.Zoom.1""); public final org.controlsfx.control.action.Action ZOOM_1. SEP_3; public final org.controlsfx.control.action.Action SEP_3. ZOOM_IN; @ActionConfig(""Action.View.Zoom.zoomIn""); @ActionIcon(ZOOM_IN); public final org.controlsfx.control.action.Action ZOOM_IN. ZOOM_OUT; @ActionConfig(""Action.View.Zoom.zoomOut""); @ActionIcon(ZOOM_OUT); @ActionAccelerator(""-""); public final org.controlsfx.control.action.Action ZOOM_OUT. ZOOM_TO_FIT; @ActionConfig(""Action.View.Zoom.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html:1196,hash,hashCode,1196,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,1,['hash'],['hashCode']
Security,"mon.GeneralTools. Split new lines (in a cross-platform way... splitMerge(Collection<? extends ImageOp>) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMerge(ImageOp...) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMultiply(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. splitNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Get a list containing the names of all constituent parts of a PathClass. SplitProjectTrainingCommand - Class in qupath.process.gui.commands. Divide a project into training, validation and test sets but flagging individual image entries. SplitProjectTrainingCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SplitProjectTrainingCommand. Constructor. splitROI(ROI) - Static method in class qupath.lib.roi.RoiTools. Split a multi-part ROI into separate pieces. splitSelectedAnnotationAreasByLines() - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitSelectedAnnotationAreasByLines(double, boolean) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSelectedAnnotationAreasByLines(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Split selected annotation objects with are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:991836,validat,validation,991836,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['validat'],['validation']
Security,"n of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:3124,hash,hashCode,3124,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['hash'],['hashCode']
Security,"n,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of the action with an optional base menu. Parameters:; action - the action to update; element - the annotated element (often a Field).; baseMenu - prepended to any ActionMenu actions. This makes it easier to insert items in sub-menus ; without needing to specify the full menu pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6684,access,accessible,6684,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['access'],['accessible']
Security,"n; requestParallelization(). Returns true if multiple readers may be created for different threads, to enable parallel image reading. void; setBioformatsEnabled(boolean bioformatsEnabled). Set whether Bio-Formats should be enabled or disabled (in favor of other readers). void; setFilesOnly(boolean filesOnly). Set whether Bio-Formats should support only local files (rather than any URL). void; setMemoizationTimeMillis(int memoizationTimeMillis). Set the number of milliseconds that must elapse when opening an image before a memoization file is generated. void; setPathMemoization(String pathMemoization). Set the directory where memoization files should be written. void; setReaderOptions(Map<String,String> options). Set additional arguments that should be passed to readers. void; setRequestParallelization(boolean requestParallelization). Optionally enable or disable parallelization when reading images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ALLOW_MEMOIZATION_PROPERTY; public static String ALLOW_MEMOIZATION_PROPERTY; System property controlling whether memoization is allowed or not.; If set to false, this is a hint that memoization should not be supported - but it is up to consumers to enforce that.; ; Default is to set status based upon Java version, with 17+ turning memoization off.; ; See https://github.com/qupath/qupath/issues/957. Method Details. getPathMemoization; public String getPathMemoization(); Get the path to the directory where memoization files should be written, or null if no path is set. Returns:. setPathMemoization; public void setPathMemoization(String pathMemoization); Set the directory where memoization files should be written.; This can be null, in which case memoization files may be written in the same directory as the original image. Parameters:; pathMemoization - . getReaderOptions; public Map<String,String> getReaderOptions(); Get a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:3108,hash,hashCode,3108,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,1,['hash'],['hashCode']
Security,"nDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LOCALIZATION. See Also:. localizationDirectoryProperty(). logDirectory; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:4042,hash,hashCode,4042,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['hash'],['hashCode']
Security,"nDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplayObject; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty; The current image display. See Also:. imageDisplayObjectProperty(). resourceManager; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty; The resource manager used to handle saving/loading. See Also:. resourceManagerProperty(). Constructor Details. BrightnessContrastSettingsPane; public BrightnessContrastSettingsPane(). Method Details. imageDisplayObjectProperty; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty(); The current image display. Returns:. resourceManagerProperty; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty(); The resource manager used to handle saving/loading. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:11891,hash,hashCode,11891,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['hash'],['hashCode']
Security,"nModelParams.Builder; layout(String layout). Specify a string representing the axes layout that the model expects as input. DnnModelParams.Builder; lazyInitialize(boolean lazyInitialize). Optionally request lazy initialization. DnnModelParams.Builder; output(String name,; long... shape). Specify the shape as a long array for a single named output. DnnModelParams.Builder; output(String name,; DnnShape shape). Specify the shape for a single named output. DnnModelParams.Builder; outputs(Map<String,DnnShape> outputs). Specify the shapes for one or more outputs. DnnModelParams.Builder; outputShape(long... shape). Specify the shape for a single output, with the default output name. DnnModelParams.Builder; paths(Path... paths). Specify the URIs as path objects. DnnModelParams.Builder; URIs(URI... uris). Specify the URIs. DnnModelParams.Builder; URIs(Collection<URI> uris). Specify the URIs as a collection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. files; public DnnModelParams.Builder files(File... files); Specify the URIs as files. These will be appended to any existing URIs. Parameters:; files - ; Returns:. paths; public DnnModelParams.Builder paths(Path... paths); Specify the URIs as path objects. These will be appended to any existing URIs. Parameters:; paths - ; Returns:. URIs; public DnnModelParams.Builder URIs(URI... uris); Specify the URIs. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. URIs; public DnnModelParams.Builder URIs(Collection<URI> uris); Specify the URIs as a collection. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. lazyInitialize; public DnnModelParams.Builder lazyInitialize(boolean lazyInitialize); Optionally request lazy initialization. Parameters:; lazyInitialize - ; Returns:. framework; public DnnModelParams.Builder framework(String framework); Specify the deep learning framework ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html:2381,hash,hashCode,2381,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,1,['hash'],['hashCode']
Security,"nRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equiv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:3090,hash,hashCode,3090,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['hash'],['hashCode']
Security,"nalMaxima(ImageProcessor ip,; float threshold,; boolean outputBinary). Find regional maxima using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:2182,validat,validateMarkerMask,2182,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['validat'],['validateMarkerMask']
Security,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4469,hash,hashCode,4469,javadoc/docs/qupath/lib/common/Version.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html,3,['hash'],['hashCode']
Security,"native script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:5170,access,accessing,5170,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['access'],['accessing']
Security,"nayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static DelaunayTools.Builder; newBuilder(Collection<PathObject> pathObjects). Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. static BiPredicate<PathObject,PathObject>; sameClassificationPredicate(). BiPredicate that returns true for objects that share the same classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DelaunayTools; public DelaunayTools(). Method Details. newBuilder; public static DelaunayTools.Builder newBuilder(Collection<PathObject> pathObjects); Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. Parameters:; pathObjects - ; Returns:. createFromCentroids; public static DelaunayTools.Subdivision createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI); Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs.; ; Note: centroids must be distinct. If multiple objects have identical centroids, one or more objects may be lost ; from the resulting DelaunayTools.Subdivision. Parameters:; pathObjects - collection of objects from which to construct the DelaunayTools.Subdivision; preferNucleusROI - if true, prefer the nucleus ROI when extracting the centroid from a cell; Returns:; a new DelaunayTools.Subdivision computed from the centroid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:3304,hash,hashCode,3304,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['hash'],['hashCode']
Security,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:2505,hash,hashCode,2505,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,3,['hash'],['hashCode']
Security,"nclude the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:1684,hash,hashCode,1684,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,1,['hash'],['hashCode']
Security,"ndaries. static BoundaryStrategy; getSkipBoundaryStrategy(). Create a boundary strategy that ignores boundaries, not using them for classifier training. int; hashCode();  ; static BoundaryStrategy; setThickness(BoundaryStrategy strategy,; double thickness). Create a boundary strategy with the specified thickness. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getBoundaryThickness; public double getBoundaryThickness(); Get the boundary thickness, in pixels. Returns:. getBoundaryClass; public PathClass getBoundaryClass(PathClass pathClass); Get the classification to be used for the annotation boundary, given the classification of the annotated region.; Note that this returns null for 'ignored' or null classes. Parameters:; pathClass - ; Returns:; See Also:. PathClassTools.isIgnoredClass(PathClass). toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getClassifyBoundaryStrategy; public static BoundaryStrategy getClassifyBoundaryStrategy(PathClass pathClass,; double thickness); Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries.; Note that if the pathClass is null or thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; pathClass - ; thickness - ; Returns:. getDerivedBoundaryStrategy; public static BoundaryStrategy getDerivedBoundaryStrategy(double thickness); Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries.; Note that if the thickness ≤ 0 this is the same as getSkipBoundaryStrategy(). Parameters:; thickness - ; Returns:. getSkipBoundaryStrategy; public static BoundaryStrategy getSkipBoundaryStrategy(); Create a boundary strategy that ignores bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html:2517,hash,hashCode,2517,javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/BoundaryStrategy.html,2,['hash'],['hashCode']
Security,"nel,; String measurement,; double threshold). Create a classifier that thresholds a single measurement, assigning a class based on an ImageChannel ; if the value is ≥ threshold. static <T> ObjectClassifier<T>; createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static <T> ObjectClassifier<T>; createCompositeClassifier(ObjectClassifier<T>... classifiers). Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers. static TypeAdapterFactory; getTypeAdapterFactory(). Get a TypeAdapterFactory to handle ObjectClassifier instances. static <T> ObjectClassifier<T>; readClassifier(Path path). Read the classifier from a file. static <T> void; writeClassifier(ObjectClassifier<T> classifier,; Path path). Write the classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectClassifiers; public ObjectClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get a TypeAdapterFactory to handle ObjectClassifier instances. Returns:. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(ObjectClassifier<T>... classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.; This can be used for multiplexed images, where a single classifier may be trained for each marker. Type Parameters:; T - ; Parameters:; classifiers - an array of classifiers to combine; Returns:; the composite object classifier. createCompositeClassifier; public static <T> ObjectClassifier<T> createCompositeClassifier(Collection<ObjectClassifier<T>> classifiers); Create a composite ObjectClassifier, which sequentially applies multiple (usually single-class) classifiers.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html:2324,hash,hashCode,2324,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.html,1,['hash'],['hashCode']
Security,"ner;  ; final org.controlsfx.control.action.Action; actionPixelCount. Deprecated. final org.controlsfx.control.action.Action; actionPlugins;  ; final org.controlsfx.control.action.Action; actionPositiveCellDetection;  ; final org.controlsfx.control.action.Action; actionSimpleTissueDetection. Deprecated. final org.controlsfx.control.action.Action; actionSLIC;  ; final org.controlsfx.control.action.Action; actionSnapshot;  ; final org.controlsfx.control.action.Action; actionSubcellularDetection. Deprecated. final org.controlsfx.control.action.Action; actionTiles;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_2B;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SEP_0; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_0. actionSLIC; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsSLIC""); public final org.controlsfx.control.action.Action actionSLIC. actionDoG; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsDoG""); public final org.controlsfx.control.action.Action actionDoG. SEP_1; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_1. actionTiles; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.tilesToAnnotations""); public final org.controlsfx.control.action.Action actionTiles. actionCellDetection; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.ImageJ.cellDetection""); public final org.controlsfx.control.action.Action ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html:2086,hash,hashCode,2086,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,1,['hash'],['hashCode']
Security,"nerate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Python. PYTHON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PYTHON_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Pythonic import statements. PythonAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Python. PythonAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.PythonAutoCompletor. Constructor. PythonStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Python syntax. Q. QP - Class in qupath.lib.scripting. Collection of static methods that are useful for scripting. QP() - Constructor for class qupath.lib.scripting.QP;  ; QPEx - Class in qupath.lib.gui.scripting. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QPEx() - Constructor for class qupath.lib.gui.scripting.QPEx;  ; quickShowImage(String, Roi, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). quickShowImage(String, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). QUIT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; qupath - package qupath. Package containing the main QuPath launcher. QuPath - Class in qupath. Main QuPath launcher. QuPath() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:803924,access,access,803924,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"ng ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public static ImagePlane getDefaultPlane(); Returns an ImagePlane with channel -1, z of 0 and t of 0.; ; Use of this method is discouraged; it is appropriate only for 2D images. Returns:. getPlaneWithChannel; public static ImagePlane getPlaneWithChannel(ROI roi); Returns an ImagePlane with channel, z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ROI roi); Returns an ImagePlane with channel -1, and z and t set from an existing ROI. Parameters:; roi - ; Returns:. getPlane; public static ImagePlane getPlane(ImageRegion region); Returns an ImagePlane with channel -1 and z and",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:2663,hash,hashCode,2663,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,2,['hash'],['hashCode']
Security,"ng all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; values - ; Returns:. computeRunningStatistics; public static void computeRu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:1906,hash,hashCode,1906,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,1,['hash'],['hashCode']
Security,"nnections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesProperty. See Also:. getGridLines(); setGridLines(GridLines); gridLinesProp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6267,hash,hashCode,6267,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['hash'],['hashCode']
Security,"nner; createHeadlessTaskRunner(int nThreads). Create a new headless TaskRunner instance with the specified number of threads. TaskRunner; createTaskRunner(). Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). TaskRunner; createTaskRunner(int nThreads). Create a new TaskRunner instance with the specified number of threads. static IntFunction<TaskRunner>; getDefaultCreateFunction(). Get the default function used to create TaskRunner instances. static TaskRunnerUtils; getDefaultInstance(). Get the default instance. static TaskRunnerUtils; newInstance(). Create a new instance. TaskRunnerUtils; setCreateFunction(IntFunction<TaskRunner> function). Set the function used to generate new headless TaskRunner instances. TaskRunnerUtils; setCreateHeadlessFunction(IntFunction<TaskRunner> function). Set the function used to generate new TaskRunner instances. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getDefaultInstance; public static TaskRunnerUtils getDefaultInstance(); Get the default instance. This is a singleton, shared across an application. Returns:. newInstance; public static TaskRunnerUtils newInstance(); Create a new instance. This may be used if part of an application requires its TaskRunner instances; to differ from those used elsewhere. Returns:. getDefaultCreateFunction; public static IntFunction<TaskRunner> getDefaultCreateFunction(); Get the default function used to create TaskRunner instances.; This is suitable for use in a headless environment. Returns:. setCreateHeadlessFunction; public TaskRunnerUtils setCreateHeadlessFunction(IntFunction<TaskRunner> function); Set the function used to generate new TaskRunner instances. Parameters:; function - a creator function that takes a requested number of threads as input; Returns:; this instance. setCreateFunction; public TaskRunnerUtils setCreateFunction(In",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html:1986,hash,hashCode,1986,javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,1,['hash'],['hashCode']
Security,"notations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1070407,access,access,1070407,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
Security,"ns for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum value of an array. Returns:. max; public static Function<double[],Double> max(); Create a function to calculate the maximum value of an array. Returns:. mean; public static Function<double[],Double> mean(); Create a function to calculate the mean (average) value of an array. Returns:. pearsonsCorrelation; public static Function<double[][],Double> pearsonsCorrelation(); Create a function to calculate Pearson's correlation coefficient.; This requires a double[2][n] input array, where n is the number of pixels. Returns:. spearmansCorrelation; public static Function<double[][],Double> spearmansCorrelation(); Create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html:1613,hash,hashCode,1613,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,1,['hash'],['hashCode']
Security,"ns installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnotation(QuPathViewer viewer); Create a full image annotation for the image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:10492,hash,hashCode,10492,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['hash'],['hashCode']
Security,"ns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:3122,hash,hashCode,3122,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['hash'],['hashCode']
Security,"ns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of lab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:3726,hash,hashCode,3726,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['hash'],['hashCode']
Security,"ns true if this class is equal to the specified child class, ; or an ancestor of that class. Parameters:; childClass - ; Returns:. getBaseClass; public PathClass getBaseClass(); Get the 'base' class, i.e. trace back through getParentClass() until no parent is available.; ; For a PathClass with no parent, this just returns itself. Returns:. setColor; public void setColor(Integer colorRGB); Set the color that should be used to display objects with this classification. Parameters:; colorRGB - color, as a packed (A)RGB value. setColor; public void setColor(int red,; int green,; int blue); Set the color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getColor; public Integer getColor(); Get the color that should be used to display objects with this classification. Returns:; packed (A)RGB value representing the classification color. getName; public String getName(); Get the name of this classification. ; Note that this does not incorporate information from any parent classifications; to access this, ; use toString() instead. Returns:. toString; public String toString(). Overrides:; toString in class Object. toString; public String toString(String delimiter); Create a string representation, using the specified delimiter between ; elements of derived PathClasses. Parameters:; delimiter - ; Returns:. isValid; public boolean isValid(); A PathClass is valid if its name is not null.; ; This should generally the case, but a single (invalid) PathClass with a null name ; can be used to indicate the absence of a classification; however, it should not be assigned ; to any object. Rather, objects should be assigned either a valid PathClass or null to indicate ; that they have no classification. Returns:. toSet; public Set<String> toSet(); Return a view of this path class as an unmodifiable set, with ; each element representing the name of a path class component names.; ; Important! If any path class component names are duplicates, these will ; (necessarily",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:8923,access,access,8923,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['access'],['access']
Security,"nsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.Builder downsamples(double... downsamples); Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. Parameters:; downsamples - ; Returns:. display; @Deprecated; public RenderedImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:2633,hash,hashCode,2633,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['hash'],['hashCode']
Security,"nsity map to the current image image. static void; writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path). Write the output of applying a density map to an image. static void; writeImage(BufferedImage img,; String path). Write an image to the specified path. static void; writeImage(ImageServer<BufferedImage> server,; String path). Write a full image to the specified path. static void; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write an image region image to the specified path. static void; writePredictionImage(String classifierName,; String path). Write the output of applying a pixel classifier to the current image image. static void; writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path). Write the output of applying a pixel classifier to an image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image type with hematoxylin and DAB staining. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image type with hematoxylin and eosin staining. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image type. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image type. OTHER; public static final ImageData.ImageType OTHER; Any other image type (neither brightfield nor fluorescence). PROJECT_BASE_DIR; public static final String PROJECT_BASE_DIR; Placeholder for the path to the current project.; May be used as follows:; ; var path = buildFilePath(PROJECT_BASE_DIR, 'subdir', 'name.txt'); . See Also:. Constant Field Values. VERSION; public static final Version VERSION; The current QuPath version, parsed according to semantic versioning",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:45083,hash,hashCode,45083,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['hash'],['hashCode']
Security,"nstr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1312,hash,hashCode,1312,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,1,['hash'],['hashCode']
Security,"nteger rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Parameters:; rgb - ; Returns:. getCachedColor; public static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:2517,hash,hashCode,2517,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['hash'],['hashCode']
Security,"o.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4978,hash,hashCode,4978,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['hash'],['hashCode']
Security,"object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2293,hash,hashCode,2293,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['hash'],['hashCode']
Security,"object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2527,hash,hashCode,2527,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['hash'],['hashCode']
Security,"object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create a new object measurement that requires multiple channels as input, usin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:2128,hash,hashCode,2128,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,1,['hash'],['hashCode']
Security,"olean; isArea(). Returns true if this ROI encloses an area. boolean; isCircle(). Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:3969,hash,hashCode,3969,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['hash'],['hashCode']
Security,"olean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:2609,hash,hashCode,2609,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['hash'],['hashCode']
Security,"olean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:2611,hash,hashCode,2611,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['hash'],['hashCode']
Security,"ollection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip characters that would make a String invalid as a filename. static long; sum(long[] values). Compute the sum of elements in a long array (possibly representing a histogram). static URI; toEncodedURI(String path). Try to convert a path to an encoded URI. static Path; toPath(URI uri). Try to identify a Path from a URI, dropping any query or fragment elements. static URI; toURI(String path). Try to convert a path to a URI. static String; zapGremlins(String text). Remove non-printable characters from a String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SYMBOL_MU; public static final char SYMBOL_MU; Small Greek mu (useful for micrometers). See Also:. Constant Field Values. SYMBOL_SIGMA; public static final char SYMBOL_SIGMA; Small Greek sigma (useful for Gaussian filter sizes, standard deviations). See Also:. Constant Field Values. SYMBOL_MICROMETER; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be pars",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:6834,hash,hashCode,6834,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['hash'],['hashCode']
Security,"ols.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON by using",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:1766,hash,hashCode,1766,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['hash'],['hashCode']
Security,"om class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Specified by:; createTrainData in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). trainWithLock; public void trainWithLock(TrainData trainData); Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Parameters:; trainData - ; See Also:. predictWithLock(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat). getTrainFlags; protected int getTrainFlags(). getName; public String getName(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; User-friendly, readable name for the classifier. Specified by:; getName in class OpenCVClassifiers.OpenCVStatModel; Returns:; the classifier name. predict; public void predict(Mat samples,; Mat results,; Mat probabilities); Default implementation calling; ; statModel.predict(samples, results, 0);; ; before attempting to sanitize the outcome so that results always contains a signed int Mat containing ; classifications.; ; If results originally had more than 1 column, it will be returned as probabilities ; (if probabilities is not null);; probabilities will be an empty matrix (i.e. no probabilities calculated). Specified by:; predict in class OpenCVClassifiers.OpenCVStatModel; Parameters:; samples - the input samples; results - a Mat to receive the results; probabilities - a Mat to receive probability estimates, or null if probabilities are not needed. supportsMissingValues; public boolean supportsMissingValues(); Tree classifiers in OpenCV support missing values, others do not. Specified by:; supportsMissingValues in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if NaNs are supported, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:6757,sanitiz,sanitize,6757,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['sanitiz'],['sanitize']
Security,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2398,hash,hashCode,2398,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,1,['hash'],['hashCode']
Security,"onDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1788,hash,hashCode,1788,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['hash'],['hashCode']
Security,"onalClass). Merge two classifications together. static PathClass; removeNames(PathClass pathClass,; String... namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; removeNames(PathClass pathClass,; Collection<String> namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; sortNames(PathClass pathClass). Create a PathClass with name elements sorted alphabetically. static PathClass; sortNames(PathClass pathClass,; Comparator<String> comparator). Create a PathClass with name elements sorted using an arbitrary Comparator. static List<String>; splitNames(PathClass pathClass). Get a list containing the names of all constituent parts of a PathClass. static PathClass; uniqueNames(PathClass pathClass). Remove duplicate names from a derived PathClass. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. isGradedIntensityClass; public static boolean isGradedIntensityClass(PathClass pathClass); Return true if the PathClass represents a built-in intensity class.; Here, this means its name is equal to ""1+"", ""2+"" or ""3+"". Parameters:; pathClass - ; Returns:. isIgnoredClass; public static boolean isIgnoredClass(PathClass pathClass); Return true if the PathClass should be ignored from some operations, or is null. ; In practice, this checks if the PathClass is null or if the name is either null or ends with an asterisk.; It is useful to avoid generating objects for certain classes (e.g. Ignore*, Artefact*, Background*) ; where these would not be meaningful.; ; Warning: the 'ignored' status is ambiguous if the PathClass is null. ; In a future version this method may throw an exception rather than accepting null classifications. ; Code that calls this method therefore should explicitly handle cases where the PathClass is ; null (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html:3377,hash,hashCode,3377,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,1,['hash'],['hashCode']
Security,"ons.SelectActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.SelectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_SELECTION;  ; final org.controlsfx.control.action.Action; SELECT_ALL_DETECTIONS;  ; final org.controlsfx.control.action.Action; SELECT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SELECT_BY_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SELECT_BY_PLANE;  ; final org.controlsfx.control.action.Action; SELECT_CELLS;  ; final org.controlsfx.control.action.Action; SELECT_TILES;  ; final org.controlsfx.control.action.Action; SELECT_TMA_CORES;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  . Constructor Summary; Constructors. Constructor; Description; SelectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. RESET_SELECTION; @ActionConfig(""Action.Objects.Select.reset""); @ActionAccelerator(""shortcut+alt+r""); public final org.controlsfx.control.action.Action RESET_SELECTION. SEP_2; public final org.controlsfx.control.action.Action SEP_2. SELECT_TMA_CORES; @ActionConfig(""Action.Objects.Select.tmaCores""); @ActionAccelerator(""shortcut+alt+t""); public final org.controlsfx.control.action.Action SELECT_TMA_CORES. SELECT_ANNOTATIONS; @ActionConfig(""Action.Objects.Select.annotations""); @ActionAccelerator(""shortcut+alt+a""); public final org.controlsfx.control.action.Action SELECT_ANNOTATIONS. SELECT_ALL_DETECTIONS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.detections""); @ActionAccelerator(""shortcut+alt+d""); public final org.controlsfx.control.action.Action SELECT_ALL_DETECTIONS. SELECT_CELLS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.cells""); @ActionAcce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html:1481,hash,hashCode,1481,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,1,['hash'],['hashCode']
Security,"onstructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<String> tooltip); Text to include in any tooltip. Parameters:; tooltip - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:1790,hash,hashCode,1790,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,1,['hash'],['hashCode']
Security,"oolEventHandler. public static enum WandToolEventHandler.WandType; extends Enum<WandToolEventHandler.WandType>; Enum reflecting different color images that may be used by the Wand tool. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GRAY. Grayscale image. LAB_DISTANCE. Color image converted to CIELAB, Euclidean distance calculated. RGB. Color image (default behavior in v0.1.2 and before). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static WandToolEventHandler.WandType; valueOf(String name). Returns the enum constant of this class with the specified name. static WandToolEventHandler.WandType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GRAY; public static final WandToolEventHandler.WandType GRAY; Grayscale image. RGB; public static final WandToolEventHandler.WandType RGB; Color image (default behavior in v0.1.2 and before). LAB_DISTANCE; public static final WandToolEventHandler.WandType LAB_DISTANCE; Color image converted to CIELAB, Euclidean distance calculated. Method Details. values; public static WandToolEventHandler.WandType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static WandToolEventHandler.WandType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum consta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html:1700,hash,hashCode,1700,javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.WandType.html,1,['hash'],['hashCode']
Security,"oolEventHandler;  ; getCurrentROI() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current ROI, i.e. getCurrentScriptTab() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentServer() - Static method in class qupath.lib.scripting.QP. Get the ImageServer of the current ImageData. getCurrentServerPath() - Static method in class qupath.lib.scripting.QP. Get the path to the ImageServer of the current ImageData. getCurrentSyntax() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Gets the value of the currentSyntax property. getCurrentText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentViewer() - Static method in class qupath.lib.gui.scripting.QPEx. Get the active viewer in the current QuPath instance. getCursor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor for this viewer. getCustomOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get direct access to the custom overlay list. getCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the custom pixel layer overlay, or null if it has not be set. getDataMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the maximum measurement value from the objects passed to the constructor of this mapper. getDataMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the minimum measurement value from the objects passed to the constructor of this mapper. getDebugMode() - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Get whether debug mode is on or off. getDefaultAutoCompletor(String) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Default method to get a suitable auto completor for the given language name. getDefaultBuilder() - Static method in class qupath.lib.io.GsonTools. Access the builder used with GsonTools.getInstance(). getDefaultChannelColor(int) - Static method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:366882,access,access,366882,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['access'],['access']
